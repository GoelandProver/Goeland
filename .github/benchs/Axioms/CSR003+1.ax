%------------------------------------------------------------------------------
% File     : CSR003+1 : TPTP v8.1.2. Bugfixed v7.3.0.
% Domain   : Commonsense Reasoning
% Axioms   : SUMO+MILO
% Version  : Especial.
% English  :

% Refs     : [NP01]  Niles & Pease (2001), Towards A Standard Upper Ontology
%          : [Pea11] Pease (2011), Ontology: A Practical Guide
%          : [Pea12] Pease (2012), Email to G. Sutcliffe
% Source   : [Pea12]
% Names    :

% Status   : Satisfiable
% Syntax   : Number of formulae    : 16748 (11413 unt;   0 def)
%            Number of atoms       : 38544 (1489 equ)
%            Maximal formula atoms :   23 (   2 avg)
%            Number of connectives : 22719 ( 923   ~; 115   |;10359   &)
%                                         ( 137 <=>;11185  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   26 (   3 avg)
%            Maximal term depth    :    5 (   1 avg)
%            Number of predicates  :  487 ( 486 usr;   0 prp; 1-8 aty)
%            Number of functors    : 9427 (8980 usr;9292 con; 0-8 aty)
%            Number of variables   : 13110 (11617   !;1493   ?)
% SPC      :

% Comments : This is a translation to TPTP of KB SUMO_MILO.
%          : Copyright 2010 Articulate Software Incorporated, released under
%            the GNU Public License <http://www.gnu.org/copyleft/gpl.html>.
%          : CVS re.84. (SUMO), 1.116 (MILO)
%          : The lines commented out with %FOL contain either non-first-order
%            contructs, or aspects of the ontology not relevant to reasoning.
%          : This includes the SUMO (CSR003+0.ax) axioms.
% Bugfixes : v4.0.1 - This is a new translation of the updated SUMO. Cached
%            axioms have been separated out to a separate file.
%          : .0 - Updated ontology. 
%          : v5.3.0 - Repaired ontology to remove inconsistency
%          : v5.4.0 - Updated ontology
%          : v7.3.0 - Double quoted numbers
%------------------------------------------------------------------------------
fof(kb_SUMO_1,axiom,
    s__instance(s__instance__m,s__BinaryPredicate) ).

fof(kb_SUMO_2,axiom,
    s__domain(s__instance__m,"1",s__Entity) ).

fof(kb_SUMO_3,axiom,
    s__domain(s__instance__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4,axiom,
    s__documentation(s__instance__m,s__EnglishLanguage,'An object is an &%instance of a &%SetOrClass if it is included in that &%SetOrClass. An individual may be an instance of many classes, some of which may be subclasses of others. Thus, there is no assumption in the meaning of &%instance about specificity or uniqueness.') ).

fof(kb_SUMO_5,axiom,
    s__subrelation(s__immediateInstance__m,s__instance__m) ).

fof(kb_SUMO_6,axiom,
    s__instance(s__immediateInstance__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7,axiom,
    s__instance(s__immediateInstance__m,s__IntransitiveRelation) ).

fof(kb_SUMO_8,axiom,
    s__documentation(s__immediateInstance__m,s__EnglishLanguage,'An object is an &%immediateInstance of a &%SetOrClass if it is an instance of the &%SetOrClass and it is not an instance of a proper subclass of &%SetOrClass.') ).

fof(kb_SUMO_9,axiom,
    ! [V__CLASS,V__ENTITY] :
      ( s__instance(V__CLASS,s__SetOrClass)
     => ( s__immediateInstance(V__ENTITY,V__CLASS)
       => ~ ? [V__SUBCLASS] :
              ( s__instance(V__SUBCLASS,s__SetOrClass)
              & s__subclass(V__SUBCLASS,V__CLASS)
              & V__SUBCLASS != V__CLASS
              & s__instance(V__ENTITY,V__SUBCLASS) ) ) ) ).

fof(kb_SUMO_10,axiom,
    s__instance(s__inverse__m,s__BinaryPredicate) ).

fof(kb_SUMO_11,axiom,
    s__instance(s__inverse__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_12,axiom,
    s__instance(s__inverse__m,s__IntransitiveRelation) ).

fof(kb_SUMO_13,axiom,
    s__instance(s__inverse__m,s__SymmetricRelation) ).

fof(kb_SUMO_14,axiom,
    s__domain(s__inverse__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_15,axiom,
    s__domain(s__inverse__m,"2",s__BinaryRelation) ).

fof(kb_SUMO_16,axiom,
    s__documentation(s__inverse__m,s__EnglishLanguage,'The inverse of a &%BinaryRelation is a relation in which all the tuples of the original relation are reversed. In other words, one &%BinaryRelation is the inverse of another if they are equivalent when their arguments are swapped.') ).

fof(kb_SUMO_17,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Man) )
     => ( s__husband(V__INST1,V__INST2)
      <=> s__wife(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_18,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( greater(V__INST1,V__INST2)
      <=> less(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_19,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( greatereq(V__INST1,V__INST2)
      <=> lesseq(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_20,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__smaller(V__INST1,V__INST2)
      <=> s__larger(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_21,axiom,
    s__instance(s__subclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_22,axiom,
    s__instance(s__subclass__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_23,axiom,
    s__domain(s__subclass__m,"1",s__SetOrClass) ).

fof(kb_SUMO_24,axiom,
    s__domain(s__subclass__m,"2",s__SetOrClass) ).

fof(kb_SUMO_25,axiom,
    s__documentation(s__subclass__m,s__EnglishLanguage,'(&%subclass ?CLASS1 ?CLASS2) means that ?CLASS1 is a subclass of ?CLASS2, i.e. every instance of ?CLASS1 is also an instance of ?CLASS2. A class may have multiple superclasses and subclasses.') ).

fof(kb_SUMO_26,axiom,
    ! [V__X,V__Y] :
      ( s__subclass(V__X,V__Y)
     => ( s__instance(V__X,s__SetOrClass)
        & s__instance(V__Y,s__SetOrClass) ) ) ).

fof(kb_SUMO_27,axiom,
    ! [V__X,V__Y,V__Z] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__SetOrClass) )
     => ( ( s__subclass(V__X,V__Y)
          & s__instance(V__Z,V__X) )
       => s__instance(V__Z,V__Y) ) ) ).

fof(kb_SUMO_28,axiom,
    s__subrelation(s__immediateSubclass__m,s__subclass__m) ).

fof(kb_SUMO_29,axiom,
    s__instance(s__immediateSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_30,axiom,
    s__instance(s__immediateSubclass__m,s__IntransitiveRelation) ).

fof(kb_SUMO_31,axiom,
    s__instance(s__IntransitiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_32,axiom,
    s__documentation(s__immediateSubclass__m,s__EnglishLanguage,'A &%SetOrClass ?CLASS1 is an &%immediateSubclass of another &%SetOrClass ?CLASS2 just in case ?CLASS1 is a subclass of ?CLASS2 and there is no other subclass of ?CLASS2 such that ?CLASS1 is also a subclass of it.') ).

fof(kb_SUMO_33,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( s__immediateSubclass(V__CLASS1,V__CLASS2)
       => ~ ? [V__CLASS3] :
              ( s__instance(V__CLASS3,s__SetOrClass)
              & s__subclass(V__CLASS3,V__CLASS2)
              & s__subclass(V__CLASS1,V__CLASS3)
              & V__CLASS2 != V__CLASS3
              & V__CLASS1 != V__CLASS3 ) ) ) ).

fof(kb_SUMO_34,axiom,
    s__instance(s__subrelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_35,axiom,
    s__instance(s__subrelation__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_36,axiom,
    s__domain(s__subrelation__m,"1",s__Relation) ).

fof(kb_SUMO_37,axiom,
    s__domain(s__subrelation__m,"2",s__Relation) ).

fof(kb_SUMO_38,axiom,
    s__documentation(s__subrelation__m,s__EnglishLanguage,'(&%subrelation ?REL1 ?REL2) means that every tuple of ?REL1 is also a tuple of ?REL2. In other words, if the &%Relation ?REL1 holds for some arguments arg_1, arg_2, ... arg_n, then the &%Relation ?REL2 holds for the same arguments. A consequence of this is that a &%Relation and its subrelations must have the same &%valence.') ).

fof(kb_SUMO_39,axiom,
    ! [V__NUMBER,V__PRED1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__valence(V__PRED1,V__NUMBER) )
       => s__valence(V__PRED2,V__NUMBER) ) ) ).

fof(kb_SUMO_40,axiom,
    ! [V__NUMBER,V__PRED1,V__CLASS1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__domain(V__PRED2,V__NUMBER,V__CLASS1) )
       => s__domain(V__PRED1,V__NUMBER,V__CLASS1) ) ) ).

fof(kb_SUMO_41,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__relative(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_42,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsPartially(V__ROW1,V__ROW2)
       => s__overlapsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_43,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__synonymousExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_44,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_45,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__dislikes(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_46,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__properPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_47,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__most(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_48,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandfather(V__ROW1,V__ROW2)
       => s__grandparent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_49,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__refers(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_50,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_51,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__third(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_52,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__time(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_53,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Experimenting) )
     => ( s__experimentalControl(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_54,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Radiating)
        & s__instance(V__ROW1,s__Object) )
     => ( s__wavelength(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_55,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostcodeArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postPostcodeArea(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_56,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Contest) )
     => ( s__contestParticipant(V__ROW1,V__ROW2)
       => s__agent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_57,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__immediateSubclass(V__ROW1,V__ROW2)
       => s__subclass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_58,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Vehicle)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__onboard(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_59,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__deceptiveIdentifier(V__ROW1,V__ROW2)
       => s__refers(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_60,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_61,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postContactSite(V__ROW1,V__ROW2)
       => s__siteForContact(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_62,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__quarter(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_63,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__sibling(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_64,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ChangeOfControl) )
     => ( s__losesControl(V__ROW1,V__ROW2)
       => s__experiencer(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_65,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_66,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_67,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_68,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_69,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__targetInAttack(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_70,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_71,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__properlyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_72,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_73,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__geographicSubregion(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_74,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_75,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepfather(V__ROW1,V__ROW2)
       => s__legalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_76,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__sideOfFigure(V__ROW1,V__ROW2)
       => s__geometricPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_77,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_78,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StructureAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__structure(V__ROW1,V__ROW2)
       => s__attribute(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_79,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__gainsControl(V__ROW1,V__ROW2)
       => s__agent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_80,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceProvider(V__ROW1,V__ROW2)
       => s__agent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_81,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_82,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandfather(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_83,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__fears(V__ROW1,V__ROW2)
       => s__expects(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_84,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__stringConcatenation(V__ROW1,V__ROW2,V__ROW3)
       => s__precedesInString(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_85,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__uncle(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_86,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__initialList(V__ROW1,V__ROW2)
       => s__subList(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_87,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TransportationDevice)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__conveyance(V__ROW1,V__ROW2)
       => s__instrument(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_88,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_89,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__legalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_90,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__completelyFills(V__ROW1,V__ROW2)
       => s__partiallyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_91,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__alias(V__ROW1,V__ROW2)
       => s__deceptiveIdentifier(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_92,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__exactlyLocated(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_93,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__ancestor(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_94,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reactant(V__ROW1,V__ROW2)
       => s__resource(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_95,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__sibling(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_96,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_97,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_98,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__mobilePhoneNumber(V__ROW1,V__ROW2)
       => s__telephoneNumber(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_99,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__uniqueIdentifier(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_100,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__spouse(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_101,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__titles(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_102,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_103,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__subCollection(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_104,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_105,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCountry(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_106,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Shipping) )
     => ( s__cargo(V__ROW1,V__ROW2)
       => s__transported(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_107,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_108,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__emailAddress(V__ROW1,V__ROW2)
       => s__refers(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_109,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__niece(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_110,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_111,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceRecipient(V__ROW1,V__ROW2)
       => s__experiencer(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_112,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__geometricPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_113,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumingExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_114,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__formerName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_115,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__length(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_116,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__overlapsTemporally(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_117,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsSpatially(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_118,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Device) )
     => ( s__effectiveRange(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_119,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Text) )
     => ( s__registeredItem(V__ROW1,V__ROW2)
       => s__refers(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_120,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_121,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__financialAsset(V__ROW1,V__ROW2)
       => s__possesses(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_122,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialSubject(V__ROW1,V__ROW2)
       => s__grammaticalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_123,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_124,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__superficialPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_125,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PlacingUnderArrest) )
     => ( s__arrested(V__ROW1,V__ROW2)
       => s__controlled(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_126,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__approves(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_127,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_128,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__Character) )
     => ( s__inString(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_129,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualStranger(V__ROW1,V__ROW2)
       => s__stranger(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_130,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__record(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_131,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_132,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepmother(V__ROW1,V__ROW2)
       => s__legalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_133,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__meetsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_134,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_135,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_136,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_137,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_138,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__subclass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_139,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__student(V__ROW1,V__ROW2)
       => s__member(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_140,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__transported(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_141,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__inhabits(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_142,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Animal)
        & s__instance(V__ROW1,s__Confining) )
     => ( s__detainee(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_143,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__airTemperature(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_144,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_145,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_146,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__domesticPartner(V__ROW1,V__ROW2)
       => s__cohabitant(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_147,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_148,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_149,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__CognitiveAgent)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__workAddress(V__ROW1,V__ROW2)
       => s__postContactSite(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_150,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__geometricPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_151,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_152,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__FieldOfStudy) )
     => ( s__subField(V__ROW1,V__ROW2)
       => s__subProposition(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_153,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_154,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cohabitant(V__ROW1,V__ROW2)
       => s__mutualAcquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_155,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GroupOfPeople)
        & s__instance(V__ROW1,s__Human) )
     => ( s__groupMember(V__ROW1,V__ROW2)
       => s__member(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_156,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__depth(V__ROW1,V__ROW2,V__ROW3)
       => s__distance(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_157,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ColorAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__color(V__ROW1,V__ROW2)
       => s__attribute(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_158,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomAreaCode(V__ROW1,V__ROW2)
       => s__subString(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_159,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_160,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_161,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__beforeOrEqual(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_162,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LegalAction)
        & s__instance(V__ROW1,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__defendant(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_163,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__conforms(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_164,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__WaterArea) )
     => ( s__waterDepth(V__ROW1,V__ROW2)
       => s__length(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_165,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_166,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_167,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__workPhoneNumber(V__ROW1,V__ROW2)
       => s__telephoneNumber(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_168,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localShortName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_169,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__acquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_170,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__subsumesContentInstance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_171,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Neighborhood)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postNeighborhood(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_172,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__inhabits(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_173,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__properPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_174,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__lacks(V__ROW1,V__ROW2)
       => s__needs(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_175,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_176,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DeviceStateAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__deviceState(V__ROW1,V__ROW2)
       => s__attribute(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_177,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCoreNumber(V__ROW1,V__ROW2)
       => s__subString(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_178,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__crosses(V__ROW1,V__ROW2)
       => s__traverses(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_179,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_180,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthday(V__ROW1,V__ROW2)
       => s__anniversary(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_181,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__meetsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_182,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__experiencer(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_183,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__immediateInstance(V__ROW1,V__ROW2)
       => s__instance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_184,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__aunt(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_185,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__located(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_186,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__personalPhoneNumber(V__ROW1,V__ROW2)
       => s__telephoneNumber(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_187,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__hopes(V__ROW1,V__ROW2)
       => s__expects(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_188,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_189,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCode2(V__ROW1,V__ROW2)
       => s__subString(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_190,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__City)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCity(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_191,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__interiorPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_192,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_193,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subsumesContentClass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_194,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__relatedEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_195,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_196,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_197,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StateOrProvince)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postDistrict(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_198,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__represents(V__ROW1,V__ROW2)
     => s__refers(V__ROW1,V__ROW2) ) ).

fof(kb_SUMO_199,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_200,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_201,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__eventPartlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_202,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandparent(V__ROW1,V__ROW2)
       => s__ancestor(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_203,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_204,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__moves(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_205,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCountryCode(V__ROW1,V__ROW2)
       => s__subString(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_206,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__Device)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__powerPlant(V__ROW1,V__ROW2)
       => s__component(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_207,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_208,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__alias(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_209,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__homePhoneNumber(V__ROW1,V__ROW2)
       => s__telephoneNumber(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_210,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_211,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__coworker(V__ROW1,V__ROW2)
       => s__mutualAcquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_212,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__mutualAcquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_213,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__altitude(V__ROW1,V__ROW2,V__ROW3)
       => s__distance(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_214,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_215,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__nephew(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_216,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__teacher(V__ROW1,V__ROW2)
       => s__member(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_217,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__width(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_218,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__traverses(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_219,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__friend(V__ROW1,V__ROW2)
       => s__mutualAcquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_220,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__relative(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_221,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cousin(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_222,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__LegalAction) )
     => ( s__plaintiff(V__ROW1,V__ROW2)
       => s__agent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_223,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandmother(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_224,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__spouse(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_225,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_226,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_227,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__middleName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_228,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reagent(V__ROW1,V__ROW2)
       => s__instrument(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_229,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandmother(V__ROW1,V__ROW2)
       => s__grandparent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_230,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_231,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_232,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__partiallyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_233,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__disapproves(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_234,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle)
        & s__instance(V__ROW1,s__Object) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__width(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_235,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__controlled(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_236,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__EngineeringConnection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__connects(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_237,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__subProposition(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_238,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_239,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__meetsSpatially(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_240,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__familyName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_241,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventLocated(V__ROW1,V__ROW2)
       => s__eventPartlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_242,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__givenName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_243,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__enjoys(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_244,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__half(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_245,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subString(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_246,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__completelyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_247,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localLongName(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_248,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialObject(V__ROW1,V__ROW2)
       => s__grammaticalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_249,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_250,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__headquartersOfOrganization(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_251,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__attribute(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_252,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__PermanentResidence) )
     => ( s__homeAddress(V__ROW1,V__ROW2)
       => s__postContactSite(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_253,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_254,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelephonyDevice) )
     => ( s__telecomContactDevice(V__ROW1,V__ROW2)
       => s__siteForContact(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_255,axiom,
    ! [V__CLASS,V__PRED1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__instance(V__PRED2,V__CLASS)
          & s__instance(V__CLASS,s__InheritableRelation) )
       => s__instance(V__PRED1,V__CLASS) ) ) ).

fof(kb_SUMO_256,axiom,
    s__instance(s__domain__m,s__TernaryPredicate) ).

fof(kb_SUMO_257,axiom,
    s__domain(s__domain__m,"1",s__Relation) ).

fof(kb_SUMO_258,axiom,
    s__domain(s__domain__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_259,axiom,
    s__domain(s__domain__m,"3",s__SetOrClass) ).

fof(kb_SUMO_260,axiom,
    s__documentation(s__domain__m,s__EnglishLanguage,'Provides a computationally and heuristically convenient mechanism for declaring the argument types of a given relation. The formula (&%domain ?REL ?INT ?CLASS) means that the ?INTth element of each tuple in the relation ?REL must be an instance of ?CLASS. Specifying argument types is very helpful in maintaining ontologies. Representation systems can use these specifications to classify terms and check integrity constraints. If the restriction on the argument type of a &%Relation is not captured by a &%SetOrClass already defined in the ontology, one can specify a &%SetOrClass compositionally with the functions &%UnionFn, &%IntersectionFn, etc.') ).

fof(kb_SUMO_261,axiom,
    ! [V__NUMBER,V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__domain(V__REL,V__NUMBER,V__CLASS1)
          & s__domain(V__REL,V__NUMBER,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_262,axiom,
    s__instance(s__domainSubclass__m,s__TernaryPredicate) ).

fof(kb_SUMO_263,axiom,
    s__domain(s__domainSubclass__m,"1",s__Relation) ).

fof(kb_SUMO_264,axiom,
    s__domain(s__domainSubclass__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_265,axiom,
    s__domain(s__domainSubclass__m,"3",s__SetOrClass) ).

fof(kb_SUMO_266,axiom,
    s__documentation(s__domainSubclass__m,s__EnglishLanguage,'&%Predicate used to specify argument type restrictions of &%Predicates. The formula (&%domainSubclass ?REL ?INT ?CLASS) means that the ?INTth element of each tuple in the relation ?REL must be a subclass of ?CLASS.') ).

fof(kb_SUMO_267,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__domainSubclass(V__REL2,V__NUMBER,V__CLASS1) )
       => s__domainSubclass(V__REL1,V__NUMBER,V__CLASS1) ) ) ).

fof(kb_SUMO_268,axiom,
    ! [V__NUMBER,V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__domainSubclass(V__REL,V__NUMBER,V__CLASS1)
          & s__domainSubclass(V__REL,V__NUMBER,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_269,axiom,
    ! [V__THING2,V__THING1] :
      ( V__THING1 = V__THING2
     => ! [V__ATTR] :
          ( s__instance(V__ATTR,s__Attribute)
         => ( s__property(V__THING1,V__ATTR)
          <=> s__property(V__THING2,V__ATTR) ) ) ) ).

fof(kb_SUMO_270,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( V__ATTR1 = V__ATTR2
     => ! [V__THING] :
          ( ( s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__ATTR2,s__Attribute) )
         => ( s__property(V__THING,V__ATTR1)
          <=> s__property(V__THING,V__ATTR2) ) ) ) ).

fof(kb_SUMO_271,axiom,
    ! [V__THING2,V__THING1] :
      ( V__THING1 = V__THING2
     => ! [V__CLASS] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__THING1,V__CLASS)
          <=> s__instance(V__THING2,V__CLASS) ) ) ) ).

fof(kb_SUMO_272,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( V__CLASS1 = V__CLASS2
     => ! [V__THING] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ( s__instance(V__THING,V__CLASS1)
          <=> s__instance(V__THING,V__CLASS2) ) ) ) ).

fof(kb_SUMO_273,axiom,
    ! [V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_274,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_275,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_276,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_277,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_278,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_279,axiom,
    ! [V__ROW27,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_280,axiom,
    ! [V__ROW12,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_281,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_282,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_283,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_284,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_285,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_286,axiom,
    ! [V__ROW27,V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_287,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_288,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_289,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_290,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_291,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_292,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_293,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_294,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_295,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_296,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_297,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_298,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_299,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_300,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_301,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_302,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_303,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_304,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_305,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_306,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_307,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_308,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_309,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_310,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_311,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_312,axiom,
    ! [V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_313,axiom,
    ! [V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_314,axiom,
    ! [V__ROW27,V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_315,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_316,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_317,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_318,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_319,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_320,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_321,axiom,
    ! [V__ROW27,V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_322,axiom,
    s__instance(s__range__m,s__BinaryPredicate) ).

fof(kb_SUMO_323,axiom,
    s__instance(s__range__m,s__AsymmetricRelation) ).

fof(kb_SUMO_324,axiom,
    s__domain(s__range__m,"1",s__Function) ).

fof(kb_SUMO_325,axiom,
    s__domain(s__range__m,"2",s__SetOrClass) ).

fof(kb_SUMO_326,axiom,
    s__documentation(s__range__m,s__EnglishLanguage,'Gives the range of a function. In other words, (&%range ?FUNCTION ?CLASS) means that all of the values assigned by ?FUNCTION are &%instances of ?CLASS.') ).

fof(kb_SUMO_327,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_2(V__FUNCTION,V__ROW1) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_328,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_3(V__FUNCTION,V__ROW1,V__ROW2) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_329,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_4(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_330,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_5(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_331,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_6(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_332,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_7(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_333,axiom,
    ! [V__REL2,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__range(V__REL2,V__CLASS1) )
       => s__range(V__REL1,V__CLASS1) ) ) ).

fof(kb_SUMO_334,axiom,
    ! [V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Function)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__range(V__REL,V__CLASS1)
          & s__range(V__REL,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_335,axiom,
    s__instance(s__rangeSubclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_336,axiom,
    s__instance(s__rangeSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_337,axiom,
    s__domain(s__rangeSubclass__m,"1",s__Function) ).

fof(kb_SUMO_338,axiom,
    s__domainSubclass(s__rangeSubclass__m,"2",s__SetOrClass) ).

fof(kb_SUMO_339,axiom,
    s__documentation(s__rangeSubclass__m,s__EnglishLanguage,'(&%rangeSubclass ?FUNCTION ?CLASS) means that all of the values assigned by ?FUNCTION are &%subclasses of ?CLASS.') ).

fof(kb_SUMO_340,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_2(V__FUNCTION,V__ROW1) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_341,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_3(V__FUNCTION,V__ROW1,V__ROW2) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_342,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_4(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_343,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_5(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_344,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_6(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_345,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_7(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_346,axiom,
    ! [V__REL2,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__rangeSubclass(V__REL2,V__CLASS1) )
       => s__rangeSubclass(V__REL1,V__CLASS1) ) ) ).

fof(kb_SUMO_347,axiom,
    ! [V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__subclass(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Function)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__REL,V__CLASS1)
          & s__rangeSubclass(V__REL,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_348,axiom,
    s__instance(s__valence__m,s__BinaryPredicate) ).

fof(kb_SUMO_349,axiom,
    s__instance(s__valence__m,s__AsymmetricRelation) ).

fof(kb_SUMO_350,axiom,
    s__instance(s__valence__m,s__SingleValuedRelation) ).

fof(kb_SUMO_351,axiom,
    s__domain(s__valence__m,"1",s__Relation) ).

fof(kb_SUMO_352,axiom,
    s__domain(s__valence__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_353,axiom,
    s__documentation(s__valence__m,s__EnglishLanguage,'Specifies the number of arguments that a relation can take. If a relation does not have a fixed number of arguments, it does not have a valence and it is an instance of &%VariableArityRelation.') ).

fof(kb_SUMO_354,axiom,
    s__instance(s__documentation__m,s__TernaryPredicate) ).

fof(kb_SUMO_355,axiom,
    s__domain(s__documentation__m,"1",s__Entity) ).

fof(kb_SUMO_356,axiom,
    s__domain(s__documentation__m,"2",s__HumanLanguage) ).

fof(kb_SUMO_357,axiom,
    s__domain(s__documentation__m,"3",s__SymbolicString) ).

fof(kb_SUMO_358,axiom,
    s__documentation(s__documentation__m,s__EnglishLanguage,'A relation between objects in the domain of discourse and strings of natural language text stated in a particular &%HumanLanguage. The domain of &%documentation is not constants (names), but the objects themselves. This means that one does not quote the names when associating them with their documentation.') ).

fof(kb_SUMO_359,axiom,
    s__instance(s__format__m,s__TernaryPredicate) ).

fof(kb_SUMO_360,axiom,
    s__domain(s__format__m,"1",s__Language) ).

fof(kb_SUMO_361,axiom,
    s__domain(s__format__m,"2",s__Entity) ).

fof(kb_SUMO_362,axiom,
    s__domain(s__format__m,"3",s__SymbolicString) ).

fof(kb_SUMO_363,axiom,
    s__documentation(s__format__m,s__EnglishLanguage,'A relation that specifies how to present an expression in a natural language format.') ).

fof(kb_SUMO_364,axiom,
    s__instance(s__termFormat__m,s__TernaryPredicate) ).

fof(kb_SUMO_365,axiom,
    s__domain(s__termFormat__m,"1",s__Language) ).

fof(kb_SUMO_366,axiom,
    s__domain(s__termFormat__m,"2",s__Entity) ).

fof(kb_SUMO_367,axiom,
    s__domain(s__termFormat__m,"3",s__SymbolicString) ).

fof(kb_SUMO_368,axiom,
    s__documentation(s__termFormat__m,s__EnglishLanguage,'A relation that specifies how to present a term in a natural language format.') ).

fof(kb_SUMO_369,axiom,
    s__instance(s__disjoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_370,axiom,
    s__instance(s__disjoint__m,s__SymmetricRelation) ).

fof(kb_SUMO_371,axiom,
    s__domain(s__disjoint__m,"1",s__SetOrClass) ).

fof(kb_SUMO_372,axiom,
    s__domain(s__disjoint__m,"2",s__SetOrClass) ).

fof(kb_SUMO_373,axiom,
    s__documentation(s__disjoint__m,s__EnglishLanguage,'&%Classes are &%disjoint only if they share no instances, i.e. just in case the result of applying &%IntersectionFn to them is empty.') ).

fof(kb_SUMO_374,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( s__disjoint(V__CLASS1,V__CLASS2)
    <=> ! [V__INST] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ~ ( s__instance(V__INST,V__CLASS1)
              & s__instance(V__INST,V__CLASS2) ) ) ) ).

fof(kb_SUMO_375,axiom,
    s__instance(s__disjointRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_376,axiom,
    s__instance(s__disjointRelation__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_377,axiom,
    s__domain(s__disjointRelation__m,"1",s__Relation) ).

fof(kb_SUMO_378,axiom,
    s__domain(s__disjointRelation__m,"2",s__Relation) ).

fof(kb_SUMO_379,axiom,
    s__relatedInternalConcept(s__disjointRelation__m,s__disjoint__m) ).

fof(kb_SUMO_380,axiom,
    s__documentation(s__disjointRelation__m,s__EnglishLanguage,'This predicate relates two &%Relations. (&%disjointRelation ?REL1 ?REL2) means that the two relations have no tuples in common.') ).

fof(kb_SUMO_381,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__domain(V__REL1,V__NUMBER,V__CLASS1)
          & s__domain(V__REL2,V__NUMBER,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_382,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__domainSubclass(V__REL1,V__NUMBER,V__CLASS1)
          & s__domainSubclass(V__REL2,V__NUMBER,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_383,axiom,
    ! [V__REL2,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__range(V__REL1,V__CLASS1)
          & s__range(V__REL2,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_384,axiom,
    ! [V__REL2,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__subclass(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__rangeSubclass(V__REL1,V__CLASS1)
          & s__rangeSubclass(V__REL2,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_385,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Human)
        & s__instance(V__ROW22,s__Human) )
     => ( ( s__spouse__m != s__domesticPartner__m
          & s__spouse(V__ROW21,V__ROW22) )
       => ~ s__domesticPartner(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_386,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__CognitiveAgent)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__dislikes__m != s__wants__m
          & s__dislikes(V__ROW21,V__ROW22) )
       => ~ s__wants(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_387,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__resource__m != s__result__m
          & s__resource(V__ROW21,V__ROW22) )
       => ~ s__result(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_388,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__subsumedExternalConcept__m != s__subsumingExternalConcept__m
          & s__subsumedExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumingExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_389,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Organization)
        & s__instance(V__ROW22,s__Organization) )
     => ( ( s__ancestorOrganization__m != s__subOrganization__m
          & s__ancestorOrganization(V__ROW21,V__ROW22) )
       => ~ s__subOrganization(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_390,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__crosses__m != s__connected__m
          & s__crosses(V__ROW21,V__ROW22) )
       => ~ s__connected(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_391,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__synonymousExternalConcept__m != s__subsumingExternalConcept__m
          & s__synonymousExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumingExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_392,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__increasesLikelihood__m != s__independentProbability__m
          & s__increasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__independentProbability(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_393,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__synonymousExternalConcept__m != s__subsumedExternalConcept__m
          & s__synonymousExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumedExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_394,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__resource__m != s__instrument__m
          & s__resource(V__ROW21,V__ROW22) )
       => ~ s__instrument(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_395,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__decreasesLikelihood__m != s__independentProbability__m
          & s__decreasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__independentProbability(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_396,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Attribute) )
     => ( ( s__manner__m != s__attribute__m
          & s__manner(V__ROW21,V__ROW22) )
       => ~ s__attribute(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_397,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Human)
        & s__instance(V__ROW22,s__Human) )
     => ( ( s__stranger__m != s__acquaintance__m
          & s__stranger(V__ROW21,V__ROW22) )
       => ~ s__acquaintance(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_398,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__result__m != s__instrument__m
          & s__result(V__ROW21,V__ROW22) )
       => ~ s__instrument(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_399,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Attribute)
        & s__instance(V__ROW22,s__Attribute) )
     => ( ( s__subAttribute__m != s__successorAttribute__m
          & s__subAttribute(V__ROW21,V__ROW22) )
       => ~ s__successorAttribute(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_400,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__increasesLikelihood__m != s__decreasesLikelihood__m
          & s__increasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__decreasesLikelihood(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_401,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__meetsSpatially__m != s__overlapsSpatially__m
          & s__meetsSpatially(V__ROW21,V__ROW22) )
       => ~ s__overlapsSpatially(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_402,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Human)
        & s__instance(V__ROW22,s__Human) )
     => ( ( s__mutualStranger__m != s__mutualAcquaintance__m
          & s__mutualStranger(V__ROW21,V__ROW22) )
       => ~ s__mutualAcquaintance(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_403,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__ObjectiveNorm)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__deprivesNorm__m != s__confersNorm__m
          & s__deprivesNorm(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__confersNorm(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_404,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Human)
        & s__instance(V__ROW22,s__TemporaryResidence)
        & s__instance(V__ROW22,s__PermanentResidence) )
     => ( ( s__stays__m != s__home__m
          & s__stays(V__ROW21,V__ROW22) )
       => ~ s__home(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_405,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__CognitiveAgent)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__disapproves__m != s__desires__m
          & s__disapproves(V__ROW21,V__ROW22) )
       => ~ s__desires(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_406,axiom,
    s__instance(s__contraryAttribute__m,s__Predicate) ).

fof(kb_SUMO_407,axiom,
    s__instance(s__Predicate__t,s__SetOrClass) ).

fof(kb_SUMO_408,axiom,
    s__instance(s__contraryAttribute__m,s__VariableArityRelation) ).

fof(kb_SUMO_409,axiom,
    s__instance(s__VariableArityRelation__t,s__SetOrClass) ).

fof(kb_SUMO_410,axiom,
    s__documentation(s__contraryAttribute__m,s__EnglishLanguage,'A &%contraryAttribute is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ).

fof(kb_SUMO_411,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__contraryAttribute_1(V__ROW1)
     => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_412,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__contraryAttribute_2(V__ROW1,V__ROW2)
     => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_413,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
     => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_414,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_415,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_416,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_417,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_418,axiom,
    ! [V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_419,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_420,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_421,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_422,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_423,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_424,axiom,
    ! [V__ROW27,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_425,axiom,
    ! [V__ROW12,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_426,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_427,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_428,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_429,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_430,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_431,axiom,
    ! [V__ROW27,V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_432,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_433,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_434,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_435,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_436,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_437,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_438,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_439,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_440,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_441,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_442,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_443,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_444,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_445,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_446,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_447,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_448,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_449,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_450,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_451,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_452,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_453,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_454,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_455,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_456,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_457,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_458,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_459,axiom,
    ! [V__ROW27,V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_460,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_461,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_462,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_463,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_464,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_465,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_466,axiom,
    ! [V__ROW27,V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_467,axiom,
    ! [V__OBJ,V__ROW1,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_1(V__ROW1)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_468,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_2(V__ROW1,V__ROW2)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_469,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_470,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_471,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_472,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_473,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__NUMBER2,V__ROW7,V__NUMBER1] :
      ( s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_474,axiom,
    s__instance(s__exhaustiveAttribute__m,s__Predicate) ).

fof(kb_SUMO_475,axiom,
    s__instance(s__exhaustiveAttribute__m,s__VariableArityRelation) ).

fof(kb_SUMO_476,axiom,
    s__domainSubclass(s__exhaustiveAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_477,axiom,
    s__documentation(s__exhaustiveAttribute__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ).

fof(kb_SUMO_478,axiom,
    ! [V__ROW1,V__CLASS,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__CLASS,V__ROW1)
       => ( s__inList(V__ATTR,s__ListFn_1(V__ROW1))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_479,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__CLASS,V__ROW1,V__ROW2)
       => ( s__inList(V__ATTR,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_480,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ATTR,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_481,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ATTR,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_482,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ATTR,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_483,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5,V__ROW6] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ATTR,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_484,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ATTR,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_485,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__exhaustiveAttribute_2(V__CLASS,V__ROW1)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_1(V__ROW1))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_486,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__exhaustiveAttribute_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_2(V__ROW1,V__ROW2))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_487,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__exhaustiveAttribute_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_488,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__exhaustiveAttribute_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_489,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__exhaustiveAttribute_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_490,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__exhaustiveAttribute_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_491,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__exhaustiveAttribute_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_492,axiom,
    ! [V__ROW1,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__ATTRCLASS,V__ROW1)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_493,axiom,
    ! [V__ROW1,V__ROW2,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__ATTRCLASS,V__ROW1,V__ROW2)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_494,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_495,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_496,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_497,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_498,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_8(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_499,axiom,
    s__instance(s__exhaustiveDecomposition__m,s__Predicate) ).

fof(kb_SUMO_500,axiom,
    s__instance(s__exhaustiveDecomposition__m,s__VariableArityRelation) ).

fof(kb_SUMO_501,axiom,
    s__domain(s__exhaustiveDecomposition__m,"1",s__Class) ).

fof(kb_SUMO_502,axiom,
    s__relatedInternalConcept(s__exhaustiveDecomposition__m,s__partition__m) ).

fof(kb_SUMO_503,axiom,
    s__documentation(s__exhaustiveDecomposition__m,s__EnglishLanguage,'An &%exhaustiveDecomposition of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ).

fof(kb_SUMO_504,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_1(V__ROW1)
       => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_505,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
       => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_506,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_507,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_508,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_509,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_510,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_511,axiom,
    s__instance(s__disjointDecomposition__m,s__Predicate) ).

fof(kb_SUMO_512,axiom,
    s__instance(s__disjointDecomposition__m,s__VariableArityRelation) ).

fof(kb_SUMO_513,axiom,
    s__domain(s__disjointDecomposition__m,"1",s__Class) ).

fof(kb_SUMO_514,axiom,
    s__relatedInternalConcept(s__disjointDecomposition__m,s__exhaustiveDecomposition__m) ).

fof(kb_SUMO_515,axiom,
    s__relatedInternalConcept(s__disjointDecomposition__m,s__disjoint__m) ).

fof(kb_SUMO_516,axiom,
    s__documentation(s__disjointDecomposition__m,s__EnglishLanguage,'A &%disjointDecomposition of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ).

fof(kb_SUMO_517,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_1(V__ROW1)
       => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_518,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_2(V__ROW1,V__ROW2)
       => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_519,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_520,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_521,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_522,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_523,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_524,axiom,
    s__instance(s__partition__m,s__Predicate) ).

fof(kb_SUMO_525,axiom,
    s__instance(s__partition__m,s__VariableArityRelation) ).

fof(kb_SUMO_526,axiom,
    s__domain(s__partition__m,"1",s__Class) ).

fof(kb_SUMO_527,axiom,
    s__documentation(s__partition__m,s__EnglishLanguage,'A &%partition of a class C is a set of mutually &%disjoint classes (a subclass partition) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition.') ).

fof(kb_SUMO_528,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_1(V__ROW1)
      <=> ( s__exhaustiveDecomposition_1(V__ROW1)
          & s__disjointDecomposition_1(V__ROW1) ) ) ) ).

fof(kb_SUMO_529,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_2(V__ROW1,V__ROW2)
      <=> ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
          & s__disjointDecomposition_2(V__ROW1,V__ROW2) ) ) ) ).

fof(kb_SUMO_530,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_3(V__ROW1,V__ROW2,V__ROW3)
      <=> ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
          & s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3) ) ) ) ).

fof(kb_SUMO_531,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
      <=> ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
          & s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) ) ) ) ).

fof(kb_SUMO_532,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
      <=> ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
          & s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) ) ) ) ).

fof(kb_SUMO_533,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
      <=> ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
          & s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) ) ) ) ).

fof(kb_SUMO_534,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
      <=> ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
          & s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) ) ) ) ).

fof(kb_SUMO_535,axiom,
    s__instance(s__relatedInternalConcept__m,s__BinaryPredicate) ).

fof(kb_SUMO_536,axiom,
    s__instance(s__relatedInternalConcept__m,s__EquivalenceRelation) ).

fof(kb_SUMO_537,axiom,
    s__domain(s__relatedInternalConcept__m,"1",s__Entity) ).

fof(kb_SUMO_538,axiom,
    s__domain(s__relatedInternalConcept__m,"2",s__Entity) ).

fof(kb_SUMO_539,axiom,
    s__documentation(s__relatedInternalConcept__m,s__EnglishLanguage,'Means that the two arguments are related concepts within the SUMO, i.e. there is a significant similarity of meaning between them. To indicate a meaning relation between a SUMO concept and a concept from another source, use the Predicate &%relatedExternalConcept.') ).

fof(kb_SUMO_540,axiom,
    s__instance(s__relatedExternalConcept__m,s__TernaryPredicate) ).

fof(kb_SUMO_541,axiom,
    s__domain(s__relatedExternalConcept__m,"1",s__SymbolicString) ).

fof(kb_SUMO_542,axiom,
    s__domain(s__relatedExternalConcept__m,"2",s__Entity) ).

fof(kb_SUMO_543,axiom,
    s__domain(s__relatedExternalConcept__m,"3",s__Language) ).

fof(kb_SUMO_544,axiom,
    s__relatedInternalConcept(s__relatedExternalConcept__m,s__relatedInternalConcept__m) ).

fof(kb_SUMO_545,axiom,
    s__documentation(s__relatedExternalConcept__m,s__EnglishLanguage,'Used to signify a three-place relation between a concept in an external knowledge source, a concept in the SUMO, and the name of the other knowledge source.') ).

fof(kb_SUMO_546,axiom,
    s__subrelation(s__synonymousExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_547,axiom,
    s__disjointRelation(s__synonymousExternalConcept__m,s__subsumedExternalConcept__m) ).

fof(kb_SUMO_548,axiom,
    s__disjointRelation(s__synonymousExternalConcept__m,s__subsumingExternalConcept__m) ).

fof(kb_SUMO_549,axiom,
    s__disjointRelation(s__subsumedExternalConcept__m,s__subsumingExternalConcept__m) ).

fof(kb_SUMO_550,axiom,
    s__documentation(s__synonymousExternalConcept__m,s__EnglishLanguage,'(&%synonymousExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING has the same meaning as ?STRING in ?LANGUAGE.') ).

fof(kb_SUMO_551,axiom,
    s__subrelation(s__subsumingExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_552,axiom,
    s__documentation(s__subsumingExternalConcept__m,s__EnglishLanguage,'(&%subsumingExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING subsumes the meaning of ?STRING in ?LANGUAGE, i.e. the concept ?THING is broader in meaning than ?STRING.') ).

fof(kb_SUMO_553,axiom,
    s__subrelation(s__subsumedExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_554,axiom,
    s__documentation(s__subsumedExternalConcept__m,s__EnglishLanguage,'(&%subsumedExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING is subsumed by the meaning of ?STRING in ?LANGUAGE, i.e. the concept ?THING is narrower in meaning than ?STRING.') ).

fof(kb_SUMO_555,axiom,
    s__instance(s__externalImage__m,s__BinaryPredicate) ).

fof(kb_SUMO_556,axiom,
    s__documentation(s__externalImage__m,s__EnglishLanguage,'A link between an Entity and a URL that represents or exemplifies the term in some way.') ).

fof(kb_SUMO_557,axiom,
    s__domain(s__externalImage__m,"1",s__Entity) ).

fof(kb_SUMO_558,axiom,
    s__domain(s__externalImage__m,"2",s__SymbolicString) ).

fof(kb_SUMO_559,axiom,
    s__instance(s__subAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_560,axiom,
    s__instance(s__subAttribute__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_561,axiom,
    s__domain(s__subAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_562,axiom,
    s__domain(s__subAttribute__m,"2",s__Attribute) ).

fof(kb_SUMO_563,axiom,
    s__disjointRelation(s__subAttribute__m,s__successorAttribute__m) ).

fof(kb_SUMO_564,axiom,
    s__documentation(s__subAttribute__m,s__EnglishLanguage,'Means that the second argument can be ascribed to everything which has the first argument ascribed to it.') ).

fof(kb_SUMO_565,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( s__subAttribute(V__ATTR1,V__ATTR2)
     => ! [V__OBJ] :
          ( ( s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__ATTR2,s__Attribute) )
         => ( s__property(V__OBJ,V__ATTR1)
           => s__property(V__OBJ,V__ATTR2) ) ) ) ).

fof(kb_SUMO_566,axiom,
    ! [V__CLASS,V__ATTR2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__Attribute)
        & s__instance(V__ATTR2,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__subAttribute(V__ATTR1,V__ATTR2)
          & s__instance(V__ATTR2,V__CLASS) )
       => s__instance(V__ATTR1,V__CLASS) ) ) ).

fof(kb_SUMO_567,axiom,
    s__instance(s__successorAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_568,axiom,
    s__instance(s__successorAttribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_569,axiom,
    s__domain(s__successorAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_570,axiom,
    s__domain(s__successorAttribute__m,"2",s__Attribute) ).

fof(kb_SUMO_571,axiom,
    s__documentation(s__successorAttribute__m,s__EnglishLanguage,'(&%successorAttribute ?ATTR1 ?ATTR2) means that ?ATTR2 is the &%Attribute that comes immediately after ?ATTR1 on the scale that they share.') ).

%FOL fof(kb_SUMO_572,axiom,(( (! [V__ATTR2,V__ENTITY,V__TIME1,V__ATTR1] : ((s__instance(V__ATTR1,s__Attribute) & s__instance(V__TIME1,s__TimePosition) & s__instance(V__ATTR2,s__Attribute)) => ((s__successorAttribute(V__ATTR1,V__ATTR2) & s__holdsDuring(V__TIME1,'s__property(V__ENTITY,V__ATTR2)')) => (? [V__TIME2] : (s__instance(V__TIME2,s__TimePosition) & s__temporalPart(V__TIME2,s__PastFn(V__TIME1)) & s__holdsDuring(V__TIME2,'s__property(V__ENTITY,V__ATTR1)')))))) ))).

fof(kb_SUMO_573,axiom,
    s__instance(s__successorAttributeClosure__m,s__BinaryPredicate) ).

fof(kb_SUMO_574,axiom,
    s__instance(s__successorAttributeClosure__m,s__TransitiveRelation) ).

fof(kb_SUMO_575,axiom,
    s__instance(s__successorAttributeClosure__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_576,axiom,
    s__domain(s__successorAttributeClosure__m,"1",s__Attribute) ).

fof(kb_SUMO_577,axiom,
    s__domain(s__successorAttributeClosure__m,"2",s__Attribute) ).

fof(kb_SUMO_578,axiom,
    s__relatedInternalConcept(s__successorAttributeClosure__m,s__successorAttribute__m) ).

fof(kb_SUMO_579,axiom,
    s__documentation(s__successorAttributeClosure__m,s__EnglishLanguage,'The transitive closure of &%successorAttribute. (&%successorAttributeClosure ?ATTR1 ?ATTR2) means that there is a chain of &%successorAttribute assertions connecting ?ATTR1 and ?ATTR2.') ).

fof(kb_SUMO_580,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__Attribute)
        & s__instance(V__ATTR2,s__Attribute) )
     => ( s__successorAttribute(V__ATTR1,V__ATTR2)
       => s__successorAttributeClosure(V__ATTR1,V__ATTR2) ) ) ).

fof(kb_SUMO_581,axiom,
    s__instance(s__greaterThanByQuality__m,s__TernaryPredicate) ).

fof(kb_SUMO_582,axiom,
    s__documentation(s__greaterThanByQuality__m,s__EnglishLanguage,'(greaterThanByQuality ?ENTITY1 ?ENTITY2 ?ATT) means that ?ENTITY1 has more of the given quality ?ATT than ?ENTITY2)') ).

fof(kb_SUMO_583,axiom,
    s__domain(s__greaterThanByQuality__m,"1",s__Entity) ).

fof(kb_SUMO_584,axiom,
    s__domain(s__greaterThanByQuality__m,"2",s__Entity) ).

fof(kb_SUMO_585,axiom,
    s__domain(s__greaterThanByQuality__m,"3",s__Attribute) ).

fof(kb_SUMO_586,axiom,
    ! [V__E3,V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
          & s__greaterThanByQuality(V__E2,V__E3,V__ATT) )
       => s__greaterThanByQuality(V__E1,V__E3,V__ATT) ) ) ).

fof(kb_SUMO_587,axiom,
    ! [V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
       => ~ s__greaterThanByQuality(V__E2,V__E1,V__ATT) ) ) ).

fof(kb_SUMO_588,axiom,
    ! [V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
       => V__E2 != V__E1 ) ) ).

fof(kb_SUMO_589,axiom,
    s__instance(s__entails__m,s__BinaryPredicate) ).

fof(kb_SUMO_590,axiom,
    s__domain(s__entails__m,"1",s__Formula) ).

fof(kb_SUMO_591,axiom,
    s__domain(s__entails__m,"2",s__Formula) ).

fof(kb_SUMO_592,axiom,
    s__documentation(s__entails__m,s__EnglishLanguage,'The operator of logical entailment. (&%entails ?FORMULA1 ?FORMULA2) means that ?FORMULA2 can be derived from ?FORMULA1 by means of the proof theory of SUO-KIF.') ).

fof(kb_SUMO_593,axiom,
    s__instance(s__AssignmentFn__m,s__Function) ).

fof(kb_SUMO_594,axiom,
    s__instance(s__Function__t,s__SetOrClass) ).

fof(kb_SUMO_595,axiom,
    s__instance(s__AssignmentFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_596,axiom,
    s__domain(s__AssignmentFn__m,"1",s__Function) ).

fof(kb_SUMO_597,axiom,
    s__range(s__AssignmentFn__m,s__Entity) ).

fof(kb_SUMO_598,axiom,
    s__documentation(s__AssignmentFn__m,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ).

fof(kb_SUMO_599,axiom,
    s__instance(s__PowerSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_600,axiom,
    s__instance(s__PowerSetFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_601,axiom,
    s__domain(s__PowerSetFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_602,axiom,
    s__rangeSubclass(s__PowerSetFn__m,s__SetOrClass) ).

fof(kb_SUMO_603,axiom,
    s__documentation(s__PowerSetFn__m,s__EnglishLanguage,'(&%PowerSetFn ?CLASS) maps the &%SetOrClass ?CLASS to the &%SetOrClass of all &%subclasses of ?CLASS.') ).

fof(kb_SUMO_604,axiom,
    s__partition_3(s__Entity,s__Physical,s__Abstract) ).

fof(kb_SUMO_605,axiom,
    s__documentation(s__Entity,s__EnglishLanguage,'The universal class of individuals. This is the root node of the ontology.') ).

fof(kb_SUMO_606,axiom,
    ! [V__THING] : s__instance(V__THING,s__Entity) ).

fof(kb_SUMO_607,axiom,
    ? [V__THING] : s__instance(V__THING,s__Entity) ).

fof(kb_SUMO_608,axiom,
    ! [V__CLASS] :
      ( s__instance(V__CLASS,s__SetOrClass)
     => ( s__instance(V__CLASS,s__Class)
      <=> s__subclass(V__CLASS,s__Entity) ) ) ).

fof(kb_SUMO_609,axiom,
    s__subclass(s__Physical,s__Entity) ).

fof(kb_SUMO_610,axiom,
    s__instance(s__Physical__t,s__SetOrClass) ).

fof(kb_SUMO_611,axiom,
    s__partition_3(s__Physical,s__Object,s__Process) ).

fof(kb_SUMO_612,axiom,
    s__documentation(s__Physical,s__EnglishLanguage,'An entity that has a location in space-time. Note that locations are themselves understood to have a location in space-time.') ).

fof(kb_SUMO_613,axiom,
    ! [V__PHYS] :
      ( s__instance(V__PHYS,s__Physical)
    <=> ? [V__LOC,V__TIME] :
          ( s__instance(V__TIME,s__TimePosition)
          & s__instance(V__LOC,s__Object)
          & s__located(V__PHYS,V__LOC)
          & s__time(V__PHYS,V__TIME) ) ) ).

fof(kb_SUMO_614,axiom,
    s__subclass(s__Object,s__Physical) ).

fof(kb_SUMO_615,axiom,
    s__documentation(s__Object,s__EnglishLanguage,'Corresponds roughly to the class of ordinary objects. Examples include normal physical objects, geographical regions, and locations of &%Processes, the complement of &%Objects in the &%Physical class. In a 4D ontology, an &%Object is something whose spatiotemporal extent is thought of as dividing into spatial parts roughly parallel to the time-axis.') ).

fof(kb_SUMO_616,axiom,
    s__subclass(s__SelfConnectedObject,s__Object) ).

fof(kb_SUMO_617,axiom,
    s__instance(s__SelfConnectedObject__t,s__SetOrClass) ).

fof(kb_SUMO_618,axiom,
    s__documentation(s__SelfConnectedObject,s__EnglishLanguage,'A &%SelfConnectedObject is any &%Object that does not consist of two or more disconnected parts.') ).

fof(kb_SUMO_619,axiom,
    s__subclass(s__OrganicThing,s__SelfConnectedObject) ).

fof(kb_SUMO_620,axiom,
    s__documentation(s__OrganicThing,s__EnglishLanguage,'A &%SelfConnectedObject that is produced by a non-intentional process from an &%Organism. Note that this refers only to the primary cause. That is, a &%PlantAgriculturalProduct is firstly produced by a &%Plant, and only secondarily by a &%Human that is tending the plant.') ).

fof(kb_SUMO_621,axiom,
    s__instance(s__FrontFn__m,s__SpatialRelation) ).

fof(kb_SUMO_622,axiom,
    s__instance(s__SpatialRelation__t,s__SetOrClass) ).

fof(kb_SUMO_623,axiom,
    s__instance(s__FrontFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_624,axiom,
    s__instance(s__FrontFn__m,s__UnaryFunction) ).

fof(kb_SUMO_625,axiom,
    s__instance(s__FrontFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_626,axiom,
    s__instance(s__FrontFn__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_627,axiom,
    s__domain(s__FrontFn__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_628,axiom,
    s__range(s__FrontFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_629,axiom,
    s__documentation(s__FrontFn__m,s__EnglishLanguage,'A &%Function that maps an &%Object to the side that generally receives the most attention or that typically faces the direction in which the &%Object moves. Note that this is a partial function, since some &%Objects do not have sides, e.g. apples and spheres. Note too that the &%range of this &%Function is indefinite in much the way that &%ImmediateFutureFn and &%ImmediatePastFn are indefinite. Although this indefiniteness is undesirable from a theoretical standpoint, it does not have significant practical implications, since there is widespread intersubjective agreement about the most common cases.') ).

fof(kb_SUMO_630,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
     => s__side(s__FrontFn(V__OBJ),V__OBJ) ) ).

fof(kb_SUMO_631,axiom,
    s__instance(s__BackFn__m,s__SpatialRelation) ).

fof(kb_SUMO_632,axiom,
    s__instance(s__BackFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_633,axiom,
    s__instance(s__PartialValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_634,axiom,
    s__instance(s__BackFn__m,s__UnaryFunction) ).

fof(kb_SUMO_635,axiom,
    s__instance(s__BackFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_636,axiom,
    s__instance(s__BackFn__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_637,axiom,
    s__domain(s__BackFn__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_638,axiom,
    s__range(s__BackFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_639,axiom,
    s__documentation(s__BackFn__m,s__EnglishLanguage,'A &%Function that maps an &%Object to the side that is opposite the &%FrontFn of the &%Object. Note that this is a partial function, since some &%Objects do not have sides, e.g. apples and spheres. Note too that the &%range of this &%Function is indefinite in much the way that &%ImmediateFutureFn and &%ImmediatePastFn are indefinite. Although this indefiniteness is undesirable from a theoretical standpoint, it does not have significant practical implications, since there is widespread intersubjective agreement about the most common cases.') ).

fof(kb_SUMO_640,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
     => s__side(s__BackFn(V__OBJ),V__OBJ) ) ).

fof(kb_SUMO_641,axiom,
    s__instance(s__part__m,s__SpatialRelation) ).

fof(kb_SUMO_642,axiom,
    s__instance(s__part__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_643,axiom,
    s__domain(s__part__m,"1",s__Object) ).

fof(kb_SUMO_644,axiom,
    s__domain(s__part__m,"2",s__Object) ).

fof(kb_SUMO_645,axiom,
    s__documentation(s__part__m,s__EnglishLanguage,'The basic mereological relation. All other mereological relations are defined in terms of this one. (&%part ?PART ?WHOLE) simply means that the &%Object ?PART is part of the &%Object ?WHOLE. Note that, since &%part is a &%ReflexiveRelation, every &%Object is a part of itself.') ).

fof(kb_SUMO_646,axiom,
    s__instance(s__properPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_647,axiom,
    s__instance(s__properPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_648,axiom,
    s__subrelation(s__properPart__m,s__part__m) ).

fof(kb_SUMO_649,axiom,
    s__documentation(s__properPart__m,s__EnglishLanguage,'(&%properPart ?OBJ1 ?OBJ2) means that ?OBJ1 is a part of ?OBJ2 other than ?OBJ2 itself. This is a &%TransitiveRelation and &%AsymmetricRelation (hence an &%IrreflexiveRelation).') ).

fof(kb_SUMO_650,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__properPart(V__OBJ1,V__OBJ2)
      <=> ( s__part(V__OBJ1,V__OBJ2)
          & ~ s__part(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_651,axiom,
    s__subrelation(s__piece__m,s__part__m) ).

fof(kb_SUMO_652,axiom,
    s__domain(s__piece__m,"1",s__Substance) ).

fof(kb_SUMO_653,axiom,
    s__domain(s__piece__m,"2",s__Substance) ).

fof(kb_SUMO_654,axiom,
    s__documentation(s__piece__m,s__EnglishLanguage,'A specialized common sense notion of part for arbitrary parts of &%Substances. Quasi-synonyms are: chunk, hunk, bit, etc. Compare &%component, another subrelation of &%part.') ).

fof(kb_SUMO_655,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2] :
      ( s__piece(V__SUBSTANCE1,V__SUBSTANCE2)
     => ! [V__CLASS] :
          ( ( s__instance(V__CLASS,s__SetOrClass)
            & s__instance(V__SUBSTANCE2,s__Substance)
            & s__instance(V__SUBSTANCE1,s__Substance) )
         => ( s__instance(V__SUBSTANCE1,V__CLASS)
           => s__instance(V__SUBSTANCE2,V__CLASS) ) ) ) ).

fof(kb_SUMO_656,axiom,
    s__subrelation(s__component__m,s__part__m) ).

fof(kb_SUMO_657,axiom,
    s__domain(s__component__m,"1",s__CorpuscularObject) ).

fof(kb_SUMO_658,axiom,
    s__domain(s__component__m,"2",s__CorpuscularObject) ).

fof(kb_SUMO_659,axiom,
    s__documentation(s__component__m,s__EnglishLanguage,'A specialized common sense notion of part for heterogeneous parts of complexes. (&%component ?COMPONENT ?WHOLE) means that ?COMPONENT is a component of ?WHOLE. Examples of component include the doors and walls of a house, the states or provinces of a country, or the limbs and organs of an animal. Compare &%piece, which is also a subrelation of &%part.') ).

fof(kb_SUMO_660,axiom,
    s__instance(s__material__m,s__BinaryPredicate) ).

fof(kb_SUMO_661,axiom,
    s__domainSubclass(s__material__m,"1",s__Substance) ).

fof(kb_SUMO_662,axiom,
    s__domain(s__material__m,"2",s__CorpuscularObject) ).

fof(kb_SUMO_663,axiom,
    s__documentation(s__material__m,s__EnglishLanguage,'(&%material ?SUBSTANCE ?OBJECT) means that ?OBJECT is structurally made up in part of ?SUBSTANCE. This relation encompasses the concepts of composed of, made of, and formed of. For example, plastic is a &%material of my computer monitor. Compare &%part and its subrelations, viz &%component and &%piece.') ).

fof(kb_SUMO_664,axiom,
    s__subrelation(s__contains__m,s__partlyLocated__m) ).

fof(kb_SUMO_665,axiom,
    s__instance(s__contains__m,s__SpatialRelation) ).

fof(kb_SUMO_666,axiom,
    s__instance(s__contains__m,s__AsymmetricRelation) ).

fof(kb_SUMO_667,axiom,
    s__disjointRelation(s__contains__m,s__part__m) ).

fof(kb_SUMO_668,axiom,
    s__domain(s__contains__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_669,axiom,
    s__domain(s__contains__m,"2",s__Object) ).

fof(kb_SUMO_670,axiom,
    s__documentation(s__contains__m,s__EnglishLanguage,'The relation of spatial containment for two separable objects. When the two objects are not separable (e.g. an automobile and one of its seats), the relation of &%part should be used. (&%contains ?OBJ1 ?OBJ2) means that the &%SelfConnectedObject ?OBJ1 has a space (i.e. a &%Hole) which is at least partially filled by ?OBJ2.') ).

fof(kb_SUMO_671,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__contains(V__OBJ1,V__OBJ2)
      <=> ? [V__HOLE] :
            ( s__instance(V__HOLE,s__Hole)
            & s__hole(V__HOLE,V__OBJ1)
            & s__properlyFills(V__OBJ2,V__HOLE) ) ) ) ).

fof(kb_SUMO_672,axiom,
    s__subclass(s__Substance,s__SelfConnectedObject) ).

fof(kb_SUMO_673,axiom,
    s__partition_3(s__Substance,s__PureSubstance,s__Mixture) ).

fof(kb_SUMO_674,axiom,
    s__partition_3(s__Substance,s__SyntheticSubstance,s__NaturalSubstance) ).

fof(kb_SUMO_675,axiom,
    s__documentation(s__Substance,s__EnglishLanguage,'An &%Object in which every part is similar to every other in every relevant respect. More precisely, something is a &%Substance when it has only arbitrary pieces as parts - any parts have properties which are similar to those of the whole. Note that a &%Substance may nonetheless have physical properties that vary. For example, the temperature, chemical constitution, density, etc. may change from one part to another. An example would be a body of water.') ).

fof(kb_SUMO_676,axiom,
    ! [V__OBJECT,V__OBJECTTYPE,V__PART] :
      ( ( s__instance(V__PART,s__Object)
        & s__instance(V__OBJECTTYPE,s__SetOrClass)
        & s__instance(V__OBJECT,s__Object) )
     => ( ( s__subclass(V__OBJECTTYPE,s__Substance)
          & s__instance(V__OBJECT,V__OBJECTTYPE)
          & s__part(V__PART,V__OBJECT) )
       => s__instance(V__PART,V__OBJECTTYPE) ) ) ).

fof(kb_SUMO_677,axiom,
    ! [V__OBJ,V__PART,V__ATTR] :
      ( ( s__instance(V__ATTR,s__Attribute)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__OBJ,s__Substance)
          & s__attribute(V__OBJ,V__ATTR)
          & s__part(V__PART,V__OBJ) )
       => s__attribute(V__PART,V__ATTR) ) ) ).

fof(kb_SUMO_678,axiom,
    s__subclass(s__SyntheticSubstance,s__Substance) ).

fof(kb_SUMO_679,axiom,
    s__instance(s__SyntheticSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_680,axiom,
    s__documentation(s__SyntheticSubstance,s__EnglishLanguage,'Any &%Substance that is the result of an &%IntentionalProcess, i.e. any substance that is created by &%Humans.') ).

fof(kb_SUMO_681,axiom,
    ! [V__SUBSTANCE] :
      ( s__instance(V__SUBSTANCE,s__SyntheticSubstance)
    <=> ? [V__PROCESS] :
          ( s__instance(V__PROCESS,s__Process)
          & s__instance(V__PROCESS,s__IntentionalProcess)
          & s__result(V__PROCESS,V__SUBSTANCE)
          & s__instance(V__SUBSTANCE,s__Substance) ) ) ).

fof(kb_SUMO_682,axiom,
    s__subclass(s__NaturalSubstance,s__Substance) ).

fof(kb_SUMO_683,axiom,
    s__instance(s__NaturalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_684,axiom,
    s__documentation(s__NaturalSubstance,s__EnglishLanguage,'Any &%Substance that is not the result of an &%IntentionalProcess, i.e. any substance that occurs naturally.') ).

fof(kb_SUMO_685,axiom,
    s__subclass(s__PureSubstance,s__Substance) ).

fof(kb_SUMO_686,axiom,
    s__instance(s__PureSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_687,axiom,
    s__partition_3(s__PureSubstance,s__CompoundSubstance,s__ElementalSubstance) ).

fof(kb_SUMO_688,axiom,
    s__documentation(s__PureSubstance,s__EnglishLanguage,'The &%Class of &%Substances with constant composition. A &%PureSubstance can be either an element (&%ElementalSubstance) or a compound of elements (&%CompoundSubstance). Examples: Table salt (sodium chloride, NaCl), sugar (sucrose, C_{12}H_{22}O_{11}), water (H_2O), iron (Fe), copper (Cu), and oxygen (O_2).') ).

fof(kb_SUMO_689,axiom,
    s__subclass(s__ElementalSubstance,s__PureSubstance) ).

fof(kb_SUMO_690,axiom,
    s__documentation(s__ElementalSubstance,s__EnglishLanguage,'The &%Class of &%PureSubstances that cannot be separated into two or more &%Substances by ordinary chemical (or physical) means. This excludes nuclear reactions. &%ElementalSubstances are composed of only one kind of atom. Examples: Iron (Fe), copper (Cu), and oxygen (O_2). &%ElementalSubstances are the simplest &%PureSubstances.') ).

fof(kb_SUMO_691,axiom,
    s__subclass(s__Metal,s__ElementalSubstance) ).

fof(kb_SUMO_692,axiom,
    s__instance(s__Metal__t,s__SetOrClass) ).

fof(kb_SUMO_693,axiom,
    s__documentation(s__Metal,s__EnglishLanguage,'A &%Metal is an &%ElementalSubstance that conducts heat and electricity, is shiny and reflects many colors of light, and can be hammered into sheets or drawn into wire. About 80% of the known chemical elements (&%ElementalSubstances) are metals.') ).

fof(kb_SUMO_694,axiom,
    s__subclass(s__Atom,s__ElementalSubstance) ).

fof(kb_SUMO_695,axiom,
    s__instance(s__Atom__t,s__SetOrClass) ).

fof(kb_SUMO_696,axiom,
    s__instance(s__ElementalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_697,axiom,
    s__documentation(s__Atom,s__EnglishLanguage,'An extremely small unit of matter that retains its identity in Chemical reactions. It consists of an &%AtomicNucleus and &%Electrons surrounding the &%AtomicNucleus.') ).

fof(kb_SUMO_698,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__CorpuscularObject)
     => ( s__instance(V__ATOM,s__Atom)
       => ? [V__PROTON,V__ELECTRON] :
            ( s__instance(V__ELECTRON,s__CorpuscularObject)
            & s__instance(V__PROTON,s__CorpuscularObject)
            & s__component(V__PROTON,V__ATOM)
            & s__component(V__ELECTRON,V__ATOM)
            & s__instance(V__PROTON,s__Proton)
            & s__instance(V__ELECTRON,s__Electron) ) ) ) ).

fof(kb_SUMO_699,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Atom)
     => ! [V__NUCLEUS1,V__NUCLEUS2] :
          ( ( s__instance(V__NUCLEUS2,s__CorpuscularObject)
            & s__instance(V__NUCLEUS1,s__CorpuscularObject)
            & s__instance(V__ATOM,s__CorpuscularObject) )
         => ( ( s__component(V__NUCLEUS1,V__ATOM)
              & s__component(V__NUCLEUS2,V__ATOM)
              & s__instance(V__NUCLEUS1,s__AtomicNucleus)
              & s__instance(V__NUCLEUS2,s__AtomicNucleus) )
           => V__NUCLEUS1 = V__NUCLEUS2 ) ) ) ).

fof(kb_SUMO_700,axiom,
    s__subclass(s__SubatomicParticle,s__ElementalSubstance) ).

fof(kb_SUMO_701,axiom,
    s__documentation(s__SubatomicParticle,s__EnglishLanguage,'The class of &%ElementalSubstances that are smaller than &%Atoms and compose &%Atoms.') ).

fof(kb_SUMO_702,axiom,
    ! [V__PARTICLE] :
      ( s__instance(V__PARTICLE,s__Object)
     => ( s__instance(V__PARTICLE,s__SubatomicParticle)
       => ? [V__ATOM] :
            ( s__instance(V__ATOM,s__Object)
            & s__instance(V__ATOM,s__Atom)
            & s__part(V__PARTICLE,V__ATOM) ) ) ) ).

fof(kb_SUMO_703,axiom,
    s__subclass(s__AtomicNucleus,s__SubatomicParticle) ).

fof(kb_SUMO_704,axiom,
    s__instance(s__AtomicNucleus__t,s__SetOrClass) ).

fof(kb_SUMO_705,axiom,
    s__documentation(s__AtomicNucleus,s__EnglishLanguage,'The core of the &%Atom. It is composed of &%Protons and &%Neutrons.') ).

fof(kb_SUMO_706,axiom,
    ! [V__NUCLEUS] :
      ( s__instance(V__NUCLEUS,s__CorpuscularObject)
     => ( s__instance(V__NUCLEUS,s__AtomicNucleus)
       => ? [V__NEUTRON,V__PROTON] :
            ( s__instance(V__PROTON,s__CorpuscularObject)
            & s__instance(V__NEUTRON,s__CorpuscularObject)
            & s__component(V__NEUTRON,V__NUCLEUS)
            & s__component(V__PROTON,V__NUCLEUS)
            & s__instance(V__NEUTRON,s__Neutron)
            & s__instance(V__PROTON,s__Proton) ) ) ) ).

fof(kb_SUMO_707,axiom,
    s__subclass(s__Electron,s__SubatomicParticle) ).

fof(kb_SUMO_708,axiom,
    s__instance(s__Electron__t,s__SetOrClass) ).

fof(kb_SUMO_709,axiom,
    s__documentation(s__Electron,s__EnglishLanguage,'&%SubatomicParticles that surround the &%AtomicNucleus. They have a negative charge.') ).

fof(kb_SUMO_710,axiom,
    s__subclass(s__Proton,s__SubatomicParticle) ).

fof(kb_SUMO_711,axiom,
    s__instance(s__Proton__t,s__SetOrClass) ).

fof(kb_SUMO_712,axiom,
    s__instance(s__SubatomicParticle__t,s__SetOrClass) ).

fof(kb_SUMO_713,axiom,
    s__documentation(s__Proton,s__EnglishLanguage,'Components of the &%AtomicNucleus. They have a positive charge.') ).

fof(kb_SUMO_714,axiom,
    s__subclass(s__Neutron,s__SubatomicParticle) ).

fof(kb_SUMO_715,axiom,
    s__instance(s__Neutron__t,s__SetOrClass) ).

fof(kb_SUMO_716,axiom,
    s__documentation(s__Neutron,s__EnglishLanguage,'Components of the &%AtomicNucleus. They have no charge.') ).

fof(kb_SUMO_717,axiom,
    s__subclass(s__CompoundSubstance,s__PureSubstance) ).

fof(kb_SUMO_718,axiom,
    s__documentation(s__CompoundSubstance,s__EnglishLanguage,'The &%Class of &%Substances that contain two or more elements (&%ElementalSubstances), in definite proportion by weight. The composition of a pure compound will be invariant, regardless of the method of preparation. Compounds are composed of more than one kind of atom (element). The term molecule is often used for the smallest unit of a compound that still retains all of the properties of the compound. Examples: Table salt (sodium chloride, NaCl), sugar (sucrose, C_{12}H_{22}O_{11}), and water (H_2O). ') ).

fof(kb_SUMO_719,axiom,
    s__subclass(s__Mixture,s__Substance) ).

fof(kb_SUMO_720,axiom,
    s__documentation(s__Mixture,s__EnglishLanguage,'A &%Mixture is two or more &%PureSubstances, combined in varying proportions - each retaining its own specific properties. The components of a &%Mixture can be separated by physical means, i.e. without the making and breaking of chemical bonds. Examples: Air, table salt thoroughly dissolved in water, milk, wood, and concrete. ') ).

fof(kb_SUMO_721,axiom,
    ! [V__MIXTURE] :
      ( s__instance(V__MIXTURE,s__Object)
     => ( s__instance(V__MIXTURE,s__Mixture)
       => ? [V__PURE1,V__PURE2] :
            ( s__instance(V__PURE2,s__Object)
            & s__instance(V__PURE1,s__Object)
            & s__instance(V__PURE1,s__PureSubstance)
            & s__instance(V__PURE2,s__PureSubstance)
            & V__PURE1 != V__PURE2
            & s__part(V__PURE1,V__MIXTURE)
            & s__part(V__PURE2,V__MIXTURE) ) ) ) ).

fof(kb_SUMO_722,axiom,
    ! [V__SUBSTANCE,V__MIXTURE] :
      ( ( s__instance(V__MIXTURE,s__Object)
        & s__instance(V__SUBSTANCE,s__Object) )
     => ( ( s__instance(V__MIXTURE,s__Mixture)
          & s__part(V__SUBSTANCE,V__MIXTURE)
          & ~ s__instance(V__SUBSTANCE,s__Mixture) )
       => s__instance(V__SUBSTANCE,s__PureSubstance) ) ) ).

fof(kb_SUMO_723,axiom,
    s__subclass(s__CorpuscularObject,s__SelfConnectedObject) ).

fof(kb_SUMO_724,axiom,
    s__disjoint(s__CorpuscularObject,s__Substance) ).

fof(kb_SUMO_725,axiom,
    s__documentation(s__CorpuscularObject,s__EnglishLanguage,'A &%SelfConnectedObject whose parts have properties that are not shared by the whole.') ).

fof(kb_SUMO_726,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__CorpuscularObject)
     => ? [V__SUBSTANCE1,V__SUBSTANCE2] :
          ( s__instance(V__SUBSTANCE2,s__SetOrClass)
          & s__instance(V__SUBSTANCE1,s__SetOrClass)
          & s__subclass(V__SUBSTANCE1,s__Substance)
          & s__subclass(V__SUBSTANCE2,s__Substance)
          & s__material(V__SUBSTANCE1,V__OBJ)
          & s__material(V__SUBSTANCE2,V__OBJ)
          & V__SUBSTANCE1 != V__SUBSTANCE2 ) ) ).

fof(kb_SUMO_727,axiom,
    s__subclass(s__Region,s__Object) ).

fof(kb_SUMO_728,axiom,
    s__documentation(s__Region,s__EnglishLanguage,'A topographic location. &%Regions encompass surfaces of &%Objects, imaginary places, and &%GeographicAreas. Note that a &%Region is the only kind of &%Object which can be located at itself. Note too that &%Region is not a subclass of &%SelfConnectedObject, because some &%Regions, e.g. archipelagos, have &%parts which are not &%connected with one another.') ).

fof(kb_SUMO_729,axiom,
    ! [V__REGION] :
      ( s__instance(V__REGION,s__Object)
     => ( s__instance(V__REGION,s__Region)
       => ? [V__PHYS] :
            ( s__instance(V__PHYS,s__Physical)
            & s__located(V__PHYS,V__REGION) ) ) ) ).

fof(kb_SUMO_730,axiom,
    s__subclass(s__Collection,s__Object) ).

fof(kb_SUMO_731,axiom,
    s__instance(s__Collection__t,s__SetOrClass) ).

fof(kb_SUMO_732,axiom,
    s__disjoint(s__Collection,s__SelfConnectedObject) ).

fof(kb_SUMO_733,axiom,
    s__documentation(s__Collection,s__EnglishLanguage,'Collections have &%members like &%Classes, but, unlike &%Classes, they have a position in space-time and &%members can be added and subtracted without thereby changing the identity of the &%Collection. Some examples are toolkits, football teams, and flocks of sheep.') ).

fof(kb_SUMO_734,axiom,
    ! [V__COLL] :
      ( s__instance(V__COLL,s__Collection)
     => ? [V__OBJ] :
          ( s__instance(V__OBJ,s__SelfConnectedObject)
          & s__member(V__OBJ,V__COLL) ) ) ).

fof(kb_SUMO_735,axiom,
    s__subrelation(s__member__m,s__part__m) ).

fof(kb_SUMO_736,axiom,
    s__instance(s__member__m,s__AsymmetricRelation) ).

fof(kb_SUMO_737,axiom,
    s__instance(s__member__m,s__IntransitiveRelation) ).

fof(kb_SUMO_738,axiom,
    s__domain(s__member__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_739,axiom,
    s__domain(s__member__m,"2",s__Collection) ).

fof(kb_SUMO_740,axiom,
    s__relatedInternalConcept(s__member__m,s__instance__m) ).

fof(kb_SUMO_741,axiom,
    s__relatedInternalConcept(s__member__m,s__element__m) ).

fof(kb_SUMO_742,axiom,
    s__documentation(s__member__m,s__EnglishLanguage,'A specialized common sense notion of part for uniform parts of &%Collections. For example, each sheep in a flock of sheep would have the relationship of member to the flock.') ).

fof(kb_SUMO_743,axiom,
    s__instance(s__subCollection__m,s__BinaryPredicate) ).

fof(kb_SUMO_744,axiom,
    s__instance(s__subCollection__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_745,axiom,
    s__domain(s__subCollection__m,"1",s__Collection) ).

fof(kb_SUMO_746,axiom,
    s__domain(s__subCollection__m,"2",s__Collection) ).

fof(kb_SUMO_747,axiom,
    s__documentation(s__subCollection__m,s__EnglishLanguage,'(&%subCollection ?COLL1 ?COLL2) means that the &%Collection ?COLL1 is a proper part of the &%Collection ?COLL2.') ).

fof(kb_SUMO_748,axiom,
    s__subrelation(s__subCollection__m,s__part__m) ).

fof(kb_SUMO_749,axiom,
    ! [V__COLL1,V__COLL2] :
      ( s__subCollection(V__COLL1,V__COLL2)
    <=> ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
            & s__instance(V__COLL2,s__Collection)
            & s__instance(V__COLL1,s__Collection) )
         => ( s__member(V__MEMBER,V__COLL1)
           => s__member(V__MEMBER,V__COLL2) ) ) ) ).

fof(kb_SUMO_750,axiom,
    s__subclass(s__ContentBearingPhysical,s__Physical) ).

fof(kb_SUMO_751,axiom,
    s__documentation(s__ContentBearingPhysical,s__EnglishLanguage,'Any &%Object or &%Process that expresses content. This covers &%Objects that contain a &%Proposition, such as a book, as well as &%ManualSignLanguage, which may similarly contain a &%Proposition.') ).

fof(kb_SUMO_752,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__ContentBearingPhysical)
     => ? [V__THING] : s__represents(V__OBJ,V__THING) ) ).

fof(kb_SUMO_753,axiom,
    s__subclass(s__ContentBearingProcess,s__ContentBearingPhysical) ).

fof(kb_SUMO_754,axiom,
    s__subclass(s__ContentBearingProcess,s__Process) ).

fof(kb_SUMO_755,axiom,
    s__instance(s__ContentBearingProcess__t,s__SetOrClass) ).

fof(kb_SUMO_756,axiom,
    s__documentation(s__ContentBearingProcess,s__EnglishLanguage,'Any &%Process, for example &%ManualHumanLanguage, which may contain a &%Proposition.') ).

fof(kb_SUMO_757,axiom,
    s__subclass(s__ContentBearingObject,s__CorpuscularObject) ).

fof(kb_SUMO_758,axiom,
    s__subclass(s__ContentBearingObject,s__ContentBearingPhysical) ).

fof(kb_SUMO_759,axiom,
    s__relatedInternalConcept(s__ContentBearingObject,s__containsInformation__m) ).

fof(kb_SUMO_760,axiom,
    s__documentation(s__ContentBearingObject,s__EnglishLanguage,'Any &%SelfConnectedObject that expresses content. This content may be a &%Proposition, e.g. when the &%ContentBearingObject is a &%Sentence or &%Text, or it may be a representation of an abstract or physical object, as with an &%Icon, a &%Word or a &%Phrase.') ).

fof(kb_SUMO_761,axiom,
    s__subclass(s__SymbolicString,s__ContentBearingObject) ).

fof(kb_SUMO_762,axiom,
    s__documentation(s__SymbolicString,s__EnglishLanguage,'The &%Class of alphanumeric sequences.') ).

fof(kb_SUMO_763,axiom,
    s__subclass(s__Character,s__SymbolicString) ).

fof(kb_SUMO_764,axiom,
    s__instance(s__Character__t,s__SetOrClass) ).

fof(kb_SUMO_765,axiom,
    s__instance(s__SymbolicString__t,s__SetOrClass) ).

fof(kb_SUMO_766,axiom,
    s__documentation(s__Character,s__EnglishLanguage,'An element of an alphabet, a set of numerals, etc. Note that a &%Character may or may not be part of a &%Language. &%Character is a subclass of &%SymbolicString, because every instance of &%Character is an alphanumeric sequence consisting of a single element.') ).

fof(kb_SUMO_767,axiom,
    ! [V__STRING] :
      ( s__instance(V__STRING,s__Object)
     => ( s__instance(V__STRING,s__SymbolicString)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__STRING)
            & s__instance(V__PART,s__Character) ) ) ) ).

fof(kb_SUMO_768,axiom,
    s__instance(s__containsInformation__m,s__BinaryPredicate) ).

fof(kb_SUMO_769,axiom,
    s__instance(s__containsInformation__m,s__AsymmetricRelation) ).

fof(kb_SUMO_770,axiom,
    s__subrelation(s__containsInformation__m,s__represents__m) ).

fof(kb_SUMO_771,axiom,
    s__domain(s__containsInformation__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_772,axiom,
    s__domain(s__containsInformation__m,"2",s__Proposition) ).

fof(kb_SUMO_773,axiom,
    s__documentation(s__containsInformation__m,s__EnglishLanguage,'A subrelation of &%represents. This predicate relates a &%ContentBearingPhysical to the &%Proposition that is expressed by the &%ContentBearingPhysical. Examples include the relationships between a physical novel and its story and between a printed score and its musical content.') ).

fof(kb_SUMO_774,axiom,
    s__subclass(s__Icon,s__ContentBearingPhysical) ).

fof(kb_SUMO_775,axiom,
    s__instance(s__Icon__t,s__SetOrClass) ).

fof(kb_SUMO_776,axiom,
    s__instance(s__ContentBearingPhysical__t,s__SetOrClass) ).

fof(kb_SUMO_777,axiom,
    s__documentation(s__Icon,s__EnglishLanguage,'This is the subclass of &%ContentBearingPhysical which are not part of a &%Language and which have some sort of similarity with the &%Objects that they represent. This &%Class would include symbolic roadway signs, representational art works, photographs, etc.') ).

fof(kb_SUMO_778,axiom,
    s__subclass(s__MotionPicture,s__Text) ).

fof(kb_SUMO_779,axiom,
    s__instance(s__MotionPicture__t,s__SetOrClass) ).

fof(kb_SUMO_780,axiom,
    s__documentation(s__MotionPicture,s__EnglishLanguage,'A &%ContentBearingObject which depicts motion (and which may have an audio or text component as well). This &%Class covers films, videos, etc.') ).

fof(kb_SUMO_781,axiom,
    s__subclass(s__LinguisticExpression,s__ContentBearingPhysical) ).

fof(kb_SUMO_782,axiom,
    s__disjoint(s__LinguisticExpression,s__Icon) ).

fof(kb_SUMO_783,axiom,
    s__documentation(s__LinguisticExpression,s__EnglishLanguage,'This is the subclass of &%ContentBearingPhysical which are language-related. Note that this &%Class encompasses both &%Language and the the elements of &%Languages, e.g. &%Words.') ).

fof(kb_SUMO_784,axiom,
    s__subclass(s__Language,s__LinguisticExpression) ).

fof(kb_SUMO_785,axiom,
    s__disjointDecomposition_4(s__Language,s__AnimalLanguage,s__HumanLanguage,s__ComputerLanguage) ).

fof(kb_SUMO_786,axiom,
    s__documentation(s__Language,s__EnglishLanguage,'A system of signs for expressing thought. The system can be either natural or artificial, i.e. something that emerges gradually as a cultural artifact or something that is intentionally created by a person or group of people.') ).

fof(kb_SUMO_787,axiom,
    s__subclass(s__AnimalLanguage,s__Language) ).

fof(kb_SUMO_788,axiom,
    s__instance(s__AnimalLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_789,axiom,
    s__documentation(s__AnimalLanguage,s__EnglishLanguage,'The &%subclass of &%Languages used by &%Animals other than &%Humans.') ).

fof(kb_SUMO_790,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__AnimalLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => ( s__instance(V__AGENT,s__Animal)
          & ~ s__instance(V__AGENT,s__Human) ) ) ) ).

fof(kb_SUMO_791,axiom,
    s__subclass(s__ArtificialLanguage,s__Language) ).

fof(kb_SUMO_792,axiom,
    s__instance(s__ArtificialLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_793,axiom,
    s__documentation(s__ArtificialLanguage,s__EnglishLanguage,'The &%subclass of &%Languages that are designed by &%Humans.') ).

fof(kb_SUMO_794,axiom,
    s__subclass(s__ComputerLanguage,s__ArtificialLanguage) ).

fof(kb_SUMO_795,axiom,
    s__instance(s__ComputerLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_796,axiom,
    s__documentation(s__ComputerLanguage,s__EnglishLanguage,'The class of &%Languages designed for and interpreted by a computer.') ).

fof(kb_SUMO_797,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__ComputerLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => s__instance(V__AGENT,s__Machine) ) ) ).

fof(kb_SUMO_798,axiom,
    s__subclass(s__HumanLanguage,s__Language) ).

fof(kb_SUMO_799,axiom,
    s__instance(s__HumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_800,axiom,
    s__instance(s__Language__t,s__SetOrClass) ).

fof(kb_SUMO_801,axiom,
    s__partition_3(s__HumanLanguage,s__NaturalLanguage,s__ConstructedLanguage) ).

fof(kb_SUMO_802,axiom,
    s__partition_3(s__HumanLanguage,s__SpokenHumanLanguage,s__ManualHumanLanguage) ).

fof(kb_SUMO_803,axiom,
    s__documentation(s__HumanLanguage,s__EnglishLanguage,'The &%subclass of &%Languages used by &%Humans.') ).

fof(kb_SUMO_804,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__HumanLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => s__instance(V__AGENT,s__Human) ) ) ).

fof(kb_SUMO_805,axiom,
    s__subclass(s__ConstructedLanguage,s__HumanLanguage) ).

fof(kb_SUMO_806,axiom,
    s__instance(s__ConstructedLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_807,axiom,
    s__subclass(s__ConstructedLanguage,s__ArtificialLanguage) ).

fof(kb_SUMO_808,axiom,
    s__documentation(s__ConstructedLanguage,s__EnglishLanguage,'An &%ConstructedLanguage is a &%HumanLanguage that did not evolve spontaneously within a language community, but rather had its core grammar and vocabulary invented by one or more language experts, often with an aim to produce a more grammatically regular language than any language that has evolved naturally. This &%Class includes languages like Esperanto that were created to facilitate international communication') ).

fof(kb_SUMO_809,axiom,
    ! [V__LANG] :
      ( s__instance(V__LANG,s__ConstructedLanguage)
     => ? [V__PLAN] :
          ( s__instance(V__PLAN,s__Process)
          & s__instance(V__PLAN,s__Planning)
          & s__result(V__PLAN,V__LANG) ) ) ).

fof(kb_SUMO_810,axiom,
    s__subclass(s__NaturalLanguage,s__HumanLanguage) ).

fof(kb_SUMO_811,axiom,
    s__documentation(s__NaturalLanguage,s__EnglishLanguage,'The &%subclass of &%HumanLanguages which are not designed and which evolve from generation to generation. This &%Class includes all of the national languages, e.g. English, Spanish, Japanese, etc. Note that this class includes dialects of natural languages.') ).

fof(kb_SUMO_812,axiom,
    s__subclass(s__ManualHumanLanguage,s__HumanLanguage) ).

fof(kb_SUMO_813,axiom,
    s__instance(s__ManualHumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_814,axiom,
    s__documentation(s__ManualHumanLanguage,s__EnglishLanguage,'A &%ManualHumanLanguage is a &%HumanLanguage which has as its medium gestures and movement, such as the shape, position, and movement of the hands.') ).

fof(kb_SUMO_815,axiom,
    s__subclass(s__SpokenHumanLanguage,s__HumanLanguage) ).

fof(kb_SUMO_816,axiom,
    s__documentation(s__SpokenHumanLanguage,s__EnglishLanguage,'A &%SpokenHumanLanguage is a &%HumanLanguage which has as its medium the human voice. It can also berepresented visually through writing, although not all &%SpokenHumanLanguages have a codified written form.') ).

fof(kb_SUMO_817,axiom,
    s__instance(s__EnglishLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_818,axiom,
    s__instance(s__NaturalLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_819,axiom,
    s__instance(s__EnglishLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_820,axiom,
    s__instance(s__SpokenHumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_821,axiom,
    s__documentation(s__EnglishLanguage,s__EnglishLanguage,'A Germanic language that incorporates many roots from the Romance languages. It is the official language of the &%UnitedStates, the &%UnitedKingdom, and many other countries.') ).

fof(kb_SUMO_822,axiom,
    s__subclass(s__Word,s__LinguisticExpression) ).

fof(kb_SUMO_823,axiom,
    s__documentation(s__Word,s__EnglishLanguage,'A term of a &%Language that represents a concept.') ).

fof(kb_SUMO_824,axiom,
    s__subclass(s__Formula,s__Sentence) ).

fof(kb_SUMO_825,axiom,
    s__instance(s__Formula__t,s__SetOrClass) ).

fof(kb_SUMO_826,axiom,
    s__documentation(s__Formula,s__EnglishLanguage,'A syntactically well-formed formula in the SUO-KIF knowledge representation language.') ).

fof(kb_SUMO_827,axiom,
    s__subclass(s__Agent,s__Object) ).

fof(kb_SUMO_828,axiom,
    s__documentation(s__Agent,s__EnglishLanguage,'Something or someone that can act on its own and produce changes in the world.') ).

fof(kb_SUMO_829,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Agent)
    <=> ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__agent(V__PROC,V__AGENT) ) ) ).

fof(kb_SUMO_830,axiom,
    s__subclass(s__SentientAgent,s__Agent) ).

fof(kb_SUMO_831,axiom,
    s__documentation(s__SentientAgent,s__EnglishLanguage,'A &%SentientAgent is an &%Agent that is capable of &%Perception and experiences some level of consciousness (see &%ConsciousnessAttribute). If the &%Agent is able to reason at a comparatively high level (evinced by the ability to learn, plan, and feel emotions), then it is also an instance of &%CognitiveAgent. A &%DomesticAnimal is a &%SentientAgent, but may or may not be a &%CognitiveAgent, depending on the type of &%Animal.') ).

fof(kb_SUMO_832,axiom,
    s__subclass(s__CognitiveAgent,s__SentientAgent) ).

fof(kb_SUMO_833,axiom,
    s__instance(s__SentientAgent__t,s__SetOrClass) ).

fof(kb_SUMO_834,axiom,
    s__documentation(s__CognitiveAgent,s__EnglishLanguage,'A &%CognitiveAgent is an &%Agent that has the ability to reason, deliberate, make plans, and experience emotions. Although &%Human is a subclass of &%CognitiveAgent, there may be instances of &%CognitiveAgent which are not also instances of &%Human. For example, &%Primates, dolphins, whales, and some extraterrestrials (if they exist) might be considered &%CognitiveAgents.') ).

fof(kb_SUMO_835,axiom,
    s__subclass(s__LegalAgent,s__Agent) ).

fof(kb_SUMO_836,axiom,
    s__documentation(s__LegalAgent,s__EnglishLanguage,'A &%LegalAgent is an &%Agent that is allowed by law to to act and be treated as a legal person for certain purposes, such as being a party to a lawsuit, owning property, and entering into a contract. Typically, a &%LegalAgent is either an adult &%Human or some type of &%Organization. Depending on the prevailing legal system in a given time and location, &%Humans in general, as well as other &%CognitiveAgents, typically will have additional legal rights and obligations beyond those accorded to &%LegalAgents. See the Wikipedia description of <a href=http://en.wikipedia.org/wiki/Juristic_person>Juristic person</a>.') ).

%FOL fof(kb_SUMO_837,axiom,(( (! [V__TIME,V__AGENT] : ((s__instance(V__AGENT,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__AGENT,s__LegalAgent)') <=> s__holdsDuring(V__TIME,'(s__capability(s__LegalAction,s__agent__m,V__AGENT) | s__capability(s__LegalAction,s__patient__m,V__AGENT))')))) ))).

fof(kb_SUMO_838,axiom,
    s__instance(s__leader__m,s__BinaryPredicate) ).

fof(kb_SUMO_839,axiom,
    s__instance(s__leader__m,s__AsymmetricRelation) ).

fof(kb_SUMO_840,axiom,
    s__instance(s__leader__m,s__SingleValuedRelation) ).

fof(kb_SUMO_841,axiom,
    s__domain(s__leader__m,"1",s__Agent) ).

fof(kb_SUMO_842,axiom,
    s__domain(s__leader__m,"2",s__Human) ).

fof(kb_SUMO_843,axiom,
    s__documentation(s__leader__m,s__EnglishLanguage,'(&%leader ?INSTITUTION ?PERSON) means that the leader of ?INSTITUTION is ?PERSON.') ).

%FOL fof(kb_SUMO_844,axiom,(( (! [V__TIME,V__X,V__Y] : ((s__instance(V__Y,s__Human) & s__instance(V__X,s__Agent) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__leader(V__X,V__Y)') => s__holdsDuring(V__TIME,'s__attribute(V__Y,s__Living)')))) ))).

fof(kb_SUMO_845,axiom,
    s__subclass(s__Process,s__Physical) ).

fof(kb_SUMO_846,axiom,
    s__documentation(s__Process,s__EnglishLanguage,'The class of things that happen and have temporal parts or stages. Examples include extended events like a football match or a race, actions like &%Pursuing and &%Reading, and biological processes. The formal definition is: anything that occurs in time but is not an &%Object. Note that a &%Process may have participants inside it which are &%Objects, such as the players in a football match. In a 4D ontology, a &%Process is something whose spatiotemporal extent is thought of as dividing into temporal stages roughly perpendicular to the time-axis.') ).

fof(kb_SUMO_847,axiom,
    s__subclass(s__DualObjectProcess,s__Process) ).

fof(kb_SUMO_848,axiom,
    s__documentation(s__DualObjectProcess,s__EnglishLanguage,'Any &%Process that requires two, nonidentical &%patients.') ).

fof(kb_SUMO_849,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__DualObjectProcess)
       => ? [V__OBJ1,V__OBJ2] :
            ( s__patient(V__PROCESS,V__OBJ1)
            & s__patient(V__PROCESS,V__OBJ2)
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_850,axiom,
    s__subclass(s__SingleAgentProcess,s__Process) ).

fof(kb_SUMO_851,axiom,
    s__instance(s__SingleAgentProcess__t,s__SetOrClass) ).

fof(kb_SUMO_852,axiom,
    s__documentation(s__SingleAgentProcess,s__EnglishLanguage,'&%SingleAgentProcess is the &%Class of all &%Processes that require exactly one &%agent in order to occur.') ).

fof(kb_SUMO_853,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__SingleAgentProcess)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__agent(V__PROC,V__AGENT) ) ) ) ).

fof(kb_SUMO_854,axiom,
    ! [V__AGENT_1,V__AGENT_2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT_2,s__Agent)
        & s__instance(V__AGENT_1,s__Agent) )
     => ( ( s__instance(V__PROC,s__SingleAgentProcess)
          & s__agent(V__PROC,V__AGENT_1)
          & s__agent(V__PROC,V__AGENT_2) )
       => V__AGENT_1 = V__AGENT_2 ) ) ).

fof(kb_SUMO_855,axiom,
    s__subclass(s__Abstract,s__Entity) ).

fof(kb_SUMO_856,axiom,
    s__instance(s__Abstract__t,s__SetOrClass) ).

fof(kb_SUMO_857,axiom,
    s__instance(s__Entity__t,s__SetOrClass) ).

fof(kb_SUMO_858,axiom,
    s__disjointDecomposition_6(s__Abstract,s__Quantity,s__Attribute,s__SetOrClass,s__Relation,s__Proposition) ).

fof(kb_SUMO_859,axiom,
    s__documentation(s__Abstract,s__EnglishLanguage,'Properties or qualities as distinguished from any particular embodiment of the properties/qualities in a physical medium. Instances of Abstract can be said to exist in the same sense as mathematical objects such as sets and relations, but they cannot exist at a particular place and time without some physical encoding or embodiment.') ).

fof(kb_SUMO_860,axiom,
    ! [V__ABS] :
      ( s__instance(V__ABS,s__Physical)
     => ( s__instance(V__ABS,s__Abstract)
      <=> ~ ? [V__POINT] :
              ( s__instance(V__POINT,s__Object)
              & s__instance(V__POINT,s__TimePosition)
              & ( s__located(V__ABS,V__POINT)
                | s__time(V__ABS,V__POINT) ) ) ) ) ).

fof(kb_SUMO_861,axiom,
    s__subclass(s__Quantity,s__Abstract) ).

fof(kb_SUMO_862,axiom,
    s__documentation(s__Quantity,s__EnglishLanguage,'Any specification of how many or how much of something there is. Accordingly, there are two subclasses of &%Quantity: &%Number (how many) and &%PhysicalQuantity (how much).') ).

fof(kb_SUMO_863,axiom,
    s__subclass(s__Attribute,s__Abstract) ).

fof(kb_SUMO_864,axiom,
    s__partition_3(s__Attribute,s__InternalAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_865,axiom,
    s__documentation(s__Attribute,s__EnglishLanguage,'Qualities which we cannot or choose not to reify into subclasses of &%Object.') ).

fof(kb_SUMO_866,axiom,
    s__instance(s__property__m,s__BinaryPredicate) ).

fof(kb_SUMO_867,axiom,
    s__domain(s__property__m,"1",s__Entity) ).

fof(kb_SUMO_868,axiom,
    s__domain(s__property__m,"2",s__Attribute) ).

fof(kb_SUMO_869,axiom,
    s__documentation(s__property__m,s__EnglishLanguage,'This &%Predicate holds between an instance of &%Entity and an instance of &%Attribute. (&%property ?ENTITY ?ATTR) means that ?ENTITY has the &%Attribute ?ATTR.') ).

fof(kb_SUMO_870,axiom,
    s__instance(s__attribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_871,axiom,
    s__instance(s__attribute__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_872,axiom,
    s__subrelation(s__attribute__m,s__property__m) ).

fof(kb_SUMO_873,axiom,
    s__domain(s__attribute__m,"1",s__Object) ).

fof(kb_SUMO_874,axiom,
    s__documentation(s__attribute__m,s__EnglishLanguage,'(&%attribute ?OBJECT ?PROPERTY) means that ?PROPERTY is a &%Attribute of ?OBJECT. For example, (&%attribute &%MyLittleRedWagon &%Red).') ).

fof(kb_SUMO_875,axiom,
    s__instance(s__manner__m,s__AsymmetricRelation) ).

fof(kb_SUMO_876,axiom,
    s__instance(s__manner__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_877,axiom,
    s__subrelation(s__manner__m,s__property__m) ).

fof(kb_SUMO_878,axiom,
    s__domain(s__manner__m,"1",s__Process) ).

fof(kb_SUMO_879,axiom,
    s__disjointRelation(s__manner__m,s__attribute__m) ).

fof(kb_SUMO_880,axiom,
    s__documentation(s__manner__m,s__EnglishLanguage,'(&%manner ?PROCESS ?MANNER) means that the &%Process ?PROCESS is qualified by the &%Attribute ?MANNER. The &%Attributes of &%Processes are usually denoted by adverbs and include things like the speed of the wind, the style of a dance, or the intensity of a sports competition.') ).

fof(kb_SUMO_881,axiom,
    s__instance(s__ExtensionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_882,axiom,
    s__instance(s__ExtensionFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_883,axiom,
    s__domain(s__ExtensionFn__m,"1",s__Attribute) ).

fof(kb_SUMO_884,axiom,
    s__range(s__ExtensionFn__m,s__Class) ).

fof(kb_SUMO_885,axiom,
    s__documentation(s__ExtensionFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Attribute into the &%Class whose condition for membership is the &%Attribute.') ).

fof(kb_SUMO_886,axiom,
    s__subclass(s__InternalAttribute,s__Attribute) ).

fof(kb_SUMO_887,axiom,
    s__instance(s__InternalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_888,axiom,
    s__instance(s__Attribute__t,s__SetOrClass) ).

fof(kb_SUMO_889,axiom,
    s__documentation(s__InternalAttribute,s__EnglishLanguage,'Any &%Attribute of an &%Entity that is an internal property of the &%Entity, e.g. its shape, its color, its fragility, etc.') ).

fof(kb_SUMO_890,axiom,
    s__documentation(s__PhysicalAttribute,s__EnglishLanguage,'An &%InternalAttribute given by physical properties of the object.') ).

fof(kb_SUMO_891,axiom,
    s__subclass(s__PhysicalAttribute,s__InternalAttribute) ).

fof(kb_SUMO_892,axiom,
    s__instance(s__PhysicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_893,axiom,
    s__subclass(s__RelationalAttribute,s__Attribute) ).

fof(kb_SUMO_894,axiom,
    s__documentation(s__RelationalAttribute,s__EnglishLanguage,'Any &%Attribute that an &%Entity has by virtue of a relationship that it bears to another &%Entity or set of &%Entities, e.g. &%SocialRoles and &%PositionalAttributes.') ).

fof(kb_SUMO_895,axiom,
    s__subclass(s__Number,s__Quantity) ).

fof(kb_SUMO_896,axiom,
    s__partition_4(s__Number,s__RealNumber,s__ImaginaryNumber,s__ComplexNumber) ).

fof(kb_SUMO_897,axiom,
    s__documentation(s__Number,s__EnglishLanguage,'A measure of how many things there are, or how much there is, of a certain kind. &%Numbers are subclassed into &%RealNumber, &%ComplexNumber, and &%ImaginaryNumber.') ).

fof(kb_SUMO_898,axiom,
    s__instance(less__m,s__BinaryPredicate) ).

fof(kb_SUMO_899,axiom,
    s__instance(less__m,s__TransitiveRelation) ).

fof(kb_SUMO_900,axiom,
    s__instance(less__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_901,axiom,
    s__instance(less__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_902,axiom,
    s__trichotomizingOn(less__m,s__RealNumber) ).

fof(kb_SUMO_903,axiom,
    s__domain(less__m,"1",s__Quantity) ).

fof(kb_SUMO_904,axiom,
    s__domain(less__m,"2",s__Quantity) ).

fof(kb_SUMO_905,axiom,
    s__documentation(less__m,s__EnglishLanguage,'(&%lessThan ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is less than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_906,axiom,
    s__instance(greater__m,s__BinaryPredicate) ).

fof(kb_SUMO_907,axiom,
    s__instance(greater__m,s__TransitiveRelation) ).

fof(kb_SUMO_908,axiom,
    s__instance(greater__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_909,axiom,
    s__instance(greater__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_910,axiom,
    s__trichotomizingOn(greater__m,s__RealNumber) ).

fof(kb_SUMO_911,axiom,
    s__domain(greater__m,"1",s__Quantity) ).

fof(kb_SUMO_912,axiom,
    s__domain(greater__m,"2",s__Quantity) ).

fof(kb_SUMO_913,axiom,
    s__inverse(greater__m,less__m) ).

fof(kb_SUMO_914,axiom,
    s__documentation(greater__m,s__EnglishLanguage,'(&%greaterThan ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is greater than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_915,axiom,
    s__instance(lesseq__m,s__BinaryPredicate) ).

fof(kb_SUMO_916,axiom,
    s__instance(lesseq__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_917,axiom,
    s__instance(lesseq__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_918,axiom,
    s__trichotomizingOn(lesseq__m,s__RealNumber) ).

fof(kb_SUMO_919,axiom,
    s__domain(lesseq__m,"1",s__Quantity) ).

fof(kb_SUMO_920,axiom,
    s__domain(lesseq__m,"2",s__Quantity) ).

fof(kb_SUMO_921,axiom,
    s__documentation(lesseq__m,s__EnglishLanguage,'(&%lessThanOrEqualTo ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is less than or equal to the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_922,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( lesseq(V__NUMBER1,V__NUMBER2)
      <=> ( V__NUMBER1 = V__NUMBER2
          | less(V__NUMBER1,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_923,axiom,
    s__instance(greatereq__m,s__BinaryPredicate) ).

fof(kb_SUMO_924,axiom,
    s__instance(greatereq__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_925,axiom,
    s__instance(greatereq__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_926,axiom,
    s__trichotomizingOn(greatereq__m,s__RealNumber) ).

fof(kb_SUMO_927,axiom,
    s__domain(greatereq__m,"1",s__Quantity) ).

fof(kb_SUMO_928,axiom,
    s__domain(greatereq__m,"2",s__Quantity) ).

fof(kb_SUMO_929,axiom,
    s__inverse(greatereq__m,lesseq__m) ).

fof(kb_SUMO_930,axiom,
    s__documentation(greatereq__m,s__EnglishLanguage,'(&%greaterThanOrEqualTo ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is greater than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_931,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( greatereq(V__NUMBER1,V__NUMBER2)
      <=> ( V__NUMBER1 = V__NUMBER2
          | greater(V__NUMBER1,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_932,axiom,
    s__subclass(s__RealNumber,s__Number) ).

fof(kb_SUMO_933,axiom,
    s__partition_3(s__RealNumber,s__NegativeRealNumber,s__NonnegativeRealNumber) ).

fof(kb_SUMO_934,axiom,
    s__partition_3(s__RealNumber,s__RationalNumber,s__IrrationalNumber) ).

fof(kb_SUMO_935,axiom,
    s__documentation(s__RealNumber,s__EnglishLanguage,'Any &%Number that can be expressed as a (possibly infinite) decimal, i.e. any &%Number that has a position on the number line.') ).

fof(kb_SUMO_936,axiom,
    s__subclass(s__ImaginaryNumber,s__Number) ).

fof(kb_SUMO_937,axiom,
    s__instance(s__ImaginaryNumber__t,s__SetOrClass) ).

fof(kb_SUMO_938,axiom,
    s__documentation(s__ImaginaryNumber,s__EnglishLanguage,'Any &%Number that is the result of multiplying a &%RealNumber by the square root of -1.') ).

fof(kb_SUMO_939,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ImaginaryNumber)
     => ? [V__REAL] :
          ( s__instance(V__REAL,s__Quantity)
          & s__instance(V__REAL,s__RealNumber)
          & V__NUMBER = times(V__REAL,s__SquareRootFn("-1")) ) ) ).

fof(kb_SUMO_940,axiom,
    s__subclass(s__RationalNumber,s__RealNumber) ).

fof(kb_SUMO_941,axiom,
    s__instance(s__RationalNumber__t,s__SetOrClass) ).

fof(kb_SUMO_942,axiom,
    s__documentation(s__RationalNumber,s__EnglishLanguage,'Any &%RealNumber that is the product of dividing two &%Integers.') ).

fof(kb_SUMO_943,axiom,
    s__subclass(s__IrrationalNumber,s__RealNumber) ).

fof(kb_SUMO_944,axiom,
    s__instance(s__IrrationalNumber__t,s__SetOrClass) ).

fof(kb_SUMO_945,axiom,
    s__documentation(s__IrrationalNumber,s__EnglishLanguage,'Any &%RealNumber that is not also a &%RationalNumber.') ).

fof(kb_SUMO_946,axiom,
    s__subclass(s__NonnegativeRealNumber,s__RealNumber) ).

fof(kb_SUMO_947,axiom,
    s__instance(s__NonnegativeRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_948,axiom,
    s__documentation(s__NonnegativeRealNumber,s__EnglishLanguage,'A &%RealNumber that is greater than or equal to zero.') ).

fof(kb_SUMO_949,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__NonnegativeRealNumber)
      <=> ( greatereq(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_950,axiom,
    s__subclass(s__PositiveRealNumber,s__NonnegativeRealNumber) ).

fof(kb_SUMO_951,axiom,
    s__documentation(s__PositiveRealNumber,s__EnglishLanguage,'A &%RealNumber that is greater than zero.') ).

fof(kb_SUMO_952,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__PositiveRealNumber)
      <=> ( greater(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_953,axiom,
    s__subclass(s__NegativeRealNumber,s__RealNumber) ).

fof(kb_SUMO_954,axiom,
    s__instance(s__NegativeRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_955,axiom,
    s__documentation(s__NegativeRealNumber,s__EnglishLanguage,'A &%RealNumber that is less than zero.') ).

fof(kb_SUMO_956,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__NegativeRealNumber)
      <=> ( less(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_957,axiom,
    s__subclass(s__Integer,s__RationalNumber) ).

fof(kb_SUMO_958,axiom,
    s__partition_3(s__Integer,s__OddInteger,s__EvenInteger) ).

fof(kb_SUMO_959,axiom,
    s__partition_3(s__Integer,s__NegativeInteger,s__NonnegativeInteger) ).

fof(kb_SUMO_960,axiom,
    s__documentation(s__Integer,s__EnglishLanguage,'A negative or nonnegative whole number.') ).

fof(kb_SUMO_961,axiom,
    s__subclass(s__EvenInteger,s__Integer) ).

fof(kb_SUMO_962,axiom,
    s__instance(s__EvenInteger__t,s__SetOrClass) ).

fof(kb_SUMO_963,axiom,
    s__documentation(s__EvenInteger,s__EnglishLanguage,'An &%Integer that is evenly divisible by 2.') ).

fof(kb_SUMO_964,axiom,
    s__subclass(s__OddInteger,s__Integer) ).

fof(kb_SUMO_965,axiom,
    s__instance(s__OddInteger__t,s__SetOrClass) ).

fof(kb_SUMO_966,axiom,
    s__instance(s__Integer__t,s__SetOrClass) ).

fof(kb_SUMO_967,axiom,
    s__documentation(s__OddInteger,s__EnglishLanguage,'An &%Integer that is not evenly divisible by 2.') ).

fof(kb_SUMO_968,axiom,
    s__subclass(s__PrimeNumber,s__Integer) ).

fof(kb_SUMO_969,axiom,
    s__instance(s__PrimeNumber__t,s__SetOrClass) ).

fof(kb_SUMO_970,axiom,
    s__documentation(s__PrimeNumber,s__EnglishLanguage,'An &%Integer that is evenly divisible only by itself and 1.') ).

fof(kb_SUMO_971,axiom,
    s__subclass(s__NonnegativeInteger,s__Integer) ).

fof(kb_SUMO_972,axiom,
    s__instance(s__NonnegativeInteger__t,s__SetOrClass) ).

fof(kb_SUMO_973,axiom,
    s__subclass(s__NonnegativeInteger,s__NonnegativeRealNumber) ).

fof(kb_SUMO_974,axiom,
    s__documentation(s__NonnegativeInteger,s__EnglishLanguage,'An &%Integer that is greater than or equal to zero.') ).

fof(kb_SUMO_975,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__NonnegativeInteger)
       => greater(V__X,"-1") ) ) ).

fof(kb_SUMO_976,axiom,
    s__subclass(s__NegativeInteger,s__Integer) ).

fof(kb_SUMO_977,axiom,
    s__instance(s__NegativeInteger__t,s__SetOrClass) ).

fof(kb_SUMO_978,axiom,
    s__subclass(s__NegativeInteger,s__NegativeRealNumber) ).

fof(kb_SUMO_979,axiom,
    s__documentation(s__NegativeInteger,s__EnglishLanguage,'An &%Integer that is less than zero.') ).

fof(kb_SUMO_980,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__NegativeInteger)
       => greater("0",V__X) ) ) ).

fof(kb_SUMO_981,axiom,
    s__subclass(s__PositiveInteger,s__NonnegativeInteger) ).

fof(kb_SUMO_982,axiom,
    s__subclass(s__PositiveInteger,s__PositiveRealNumber) ).

fof(kb_SUMO_983,axiom,
    s__instance(s__PositiveInteger__t,s__SetOrClass) ).

fof(kb_SUMO_984,axiom,
    s__documentation(s__PositiveInteger,s__EnglishLanguage,'An &%Integer that is greater than zero.') ).

fof(kb_SUMO_985,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__PositiveInteger)
       => greater(V__X,"0") ) ) ).

fof(kb_SUMO_986,axiom,
    s__subclass(s__BinaryNumber,s__RealNumber) ).

fof(kb_SUMO_987,axiom,
    s__instance(s__BinaryNumber__t,s__SetOrClass) ).

fof(kb_SUMO_988,axiom,
    s__instance(s__RealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_989,axiom,
    s__documentation(s__BinaryNumber,s__EnglishLanguage,'Elements from the number system with base 2. Every &%BinaryNumber is expressed as a sequence of the digits 1 and 0.') ).

fof(kb_SUMO_990,axiom,
    s__subclass(s__ComplexNumber,s__Number) ).

fof(kb_SUMO_991,axiom,
    s__instance(s__ComplexNumber__t,s__SetOrClass) ).

fof(kb_SUMO_992,axiom,
    s__instance(s__Number__t,s__SetOrClass) ).

fof(kb_SUMO_993,axiom,
    s__disjoint(s__ComplexNumber,s__RealNumber) ).

fof(kb_SUMO_994,axiom,
    s__documentation(s__ComplexNumber,s__EnglishLanguage,'A &%Number that has the form: x + yi, where x and y are &%RealNumbers and i is the square root of -1.') ).

fof(kb_SUMO_995,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ComplexNumber)
     => ? [V__REAL1,V__REAL2] :
          ( s__instance(V__REAL2,s__Quantity)
          & s__instance(V__REAL1,s__Quantity)
          & s__instance(V__REAL1,s__RealNumber)
          & s__instance(V__REAL2,s__RealNumber)
          & V__NUMBER = plus(V__REAL1,times(V__REAL2,s__SquareRootFn("-1"))) ) ) ).

fof(kb_SUMO_996,axiom,
    s__subclass(s__PhysicalQuantity,s__Quantity) ).

fof(kb_SUMO_997,axiom,
    s__instance(s__PhysicalQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_998,axiom,
    s__instance(s__Quantity__t,s__SetOrClass) ).

fof(kb_SUMO_999,axiom,
    s__partition_3(s__PhysicalQuantity,s__ConstantQuantity,s__FunctionQuantity) ).

fof(kb_SUMO_1000,axiom,
    s__documentation(s__PhysicalQuantity,s__EnglishLanguage,'A &%PhysicalQuantity is a measure of some quantifiable aspect of the modeled world, such as the earths diameter (a constant length) and the stress in a loaded deformable solid (a measure of stress, which is a function of three spatial coordinates). Every &%PhysicalQuantity is either a &%ConstantQuantity or &%FunctionQuantity. Instances of &%ConstantQuantity are dependent on a &%UnitOfMeasure, while instances of &%FunctionQuantity are &%Functions that map instances of &%ConstantQuantity to other instances of &%ConstantQuantity (e.g., a &%TimeDependentQuantity is a &%FunctionQuantity). Although the name and definition of &%PhysicalQuantity is borrowed from physics, a &%PhysicalQuantity need not be material. Aside from the dimensions of length, time, velocity, etc., nonphysical dimensions such as currency are also possible. Accordingly, amounts of money would be instances of &%PhysicalQuantity. A &%PhysicalQuantity is distinguished from a pure &%Number by the fact that the former is associated with a dimension of measurement.') ).

fof(kb_SUMO_1001,axiom,
    s__subclass(s__ConstantQuantity,s__PhysicalQuantity) ).

fof(kb_SUMO_1002,axiom,
    s__documentation(s__ConstantQuantity,s__EnglishLanguage,'A &%ConstantQuantity is a &%PhysicalQuantity that has a constant value, e.g. 3 &%Meters and 5 &%HourDurations. The magnitude (see &%MagnitudeFn) of every &%ConstantQuantity is a &%RealNumber. &%ConstantQuantity is distinguished from &%FunctionQuantity, in that each instance of the latter is formed through the mapping of one &%PhysicalQuantity to another &%PhysicalQuantity. Each instance of &%ConstantQuantity is expressed with the &%BinaryFunction &%MeasureFn, which takes a &%Number and a &%UnitOfMeasure as arguments. For example, 3 &%Meters is expressed as (&%MeasureFn 3 &%Meter). Instances of &%ConstantQuantity form a partial order (see &%PartialOrderingRelation) with the &%lessThan relation, since &%lessThan is a &%RelationExtendedToQuantities and &%lessThan is defined over the &%RealNumbers. The &%lessThan relation is not a total order (see &%TotalOrderingRelation) over the class &%ConstantQuantity since elements of some subclasses of &%ConstantQuantity (such as length quantities) are incomparable to elements of other subclasses of &%ConstantQuantity (such as mass quantities).') ).

fof(kb_SUMO_1003,axiom,
    s__subclass(s__TimeMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_1004,axiom,
    s__instance(s__TimeMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_1005,axiom,
    s__documentation(s__TimeMeasure,s__EnglishLanguage,'The class of temporal durations (instances of &%TimeDuration) and positions of &%TimePoints and &%TimeIntervals along the universal timeline (instances of &%TimePosition).') ).

fof(kb_SUMO_1006,axiom,
    s__subclass(s__TimeDuration,s__TimeMeasure) ).

fof(kb_SUMO_1007,axiom,
    s__instance(s__TimeDuration__t,s__SetOrClass) ).

fof(kb_SUMO_1008,axiom,
    s__documentation(s__TimeDuration,s__EnglishLanguage,'Any measure of length of time, with or without respect to the universal timeline.') ).

fof(kb_SUMO_1009,axiom,
    s__subclass(s__TimePosition,s__TimeMeasure) ).

fof(kb_SUMO_1010,axiom,
    s__partition_3(s__TimePosition,s__TimeInterval,s__TimePoint) ).

fof(kb_SUMO_1011,axiom,
    s__documentation(s__TimePosition,s__EnglishLanguage,'Any &%TimePoint or &%TimeInterval along the universal timeline from &%NegativeInfinity to &%PositiveInfinity.') ).

fof(kb_SUMO_1012,axiom,
    s__subclass(s__TimeInterval,s__TimePosition) ).

fof(kb_SUMO_1013,axiom,
    s__instance(s__TimeInterval__t,s__SetOrClass) ).

fof(kb_SUMO_1014,axiom,
    s__instance(s__TimePosition__t,s__SetOrClass) ).

fof(kb_SUMO_1015,axiom,
    s__documentation(s__TimeInterval,s__EnglishLanguage,'An interval of time. Note that a &%TimeInterval has both an extent and a location on the universal timeline. Note too that a &%TimeInterval has no gaps, i.e. this class contains only convex time intervals.') ).

fof(kb_SUMO_1016,axiom,
    s__subclass(s__TimePoint,s__TimePosition) ).

fof(kb_SUMO_1017,axiom,
    s__documentation(s__TimePoint,s__EnglishLanguage,'An extensionless point on the universal timeline. The &%TimePoints at which &%Processes occur can be known with various degrees of precision and approximation, but conceptually &%TimePoints are point-like and not interval-like. That is, it doesnt make sense to talk about how long a &%TimePoint lasts.') ).

fof(kb_SUMO_1018,axiom,
    s__subclass(s__FunctionQuantity,s__PhysicalQuantity) ).

fof(kb_SUMO_1019,axiom,
    s__documentation(s__FunctionQuantity,s__EnglishLanguage,'A &%FunctionQuantity is a &%PhysicalQuantity that is returned by a &%Function that maps from one or more instances of &%ConstantQuantity to another instance of &%ConstantQuantity. For example, the velocity of a particle would be represented by a &%FunctionQuantity relating values of time (which are instances of &%ConstantQuantity) to values of distance (also instances of &%ConstantQuantity). Note that all elements of the range of the &%Function corresponding to a &%FunctionQuantity have the same physical dimension as the &%FunctionQuantity itself.') ).

fof(kb_SUMO_1020,axiom,
    s__subclass(s__UnaryConstantFunctionQuantity,s__FunctionQuantity) ).

fof(kb_SUMO_1021,axiom,
    s__documentation(s__UnaryConstantFunctionQuantity,s__EnglishLanguage,'A &%subclass of &%FunctionQuantity, instances of which are returned by &%UnaryFunctions that map from one instance of the &%Class &%ConstantQuantity to another instance of the &%Class &%ConstantQuantity.') ).

fof(kb_SUMO_1022,axiom,
    s__subclass(s__TimeDependentQuantity,s__UnaryConstantFunctionQuantity) ).

fof(kb_SUMO_1023,axiom,
    s__instance(s__TimeDependentQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_1024,axiom,
    s__instance(s__UnaryConstantFunctionQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_1025,axiom,
    s__documentation(s__TimeDependentQuantity,s__EnglishLanguage,'A &%UnaryConstantFunctionQuantity of continuous time. All instances of this &%Class are returned by &%Functions that map a time quantity into another &%ConstantQuantity such as temperature. For example, the temperature at the top of the Empire State Building is a &%TimeDependentQuantity, since its value depends on the time.') ).

fof(kb_SUMO_1026,axiom,
    s__subclass(s__SetOrClass,s__Abstract) ).

fof(kb_SUMO_1027,axiom,
    s__partition_3(s__SetOrClass,s__Set,s__Class) ).

fof(kb_SUMO_1028,axiom,
    s__documentation(s__SetOrClass,s__EnglishLanguage,'The &%SetOrClass of &%Sets and &%Classes, i.e. any instance of &%Abstract that has &%elements or &%instances.') ).

fof(kb_SUMO_1029,axiom,
    s__subclass(s__Class,s__SetOrClass) ).

fof(kb_SUMO_1030,axiom,
    s__instance(s__Class__t,s__SetOrClass) ).

fof(kb_SUMO_1031,axiom,
    s__documentation(s__Class,s__EnglishLanguage,'&%Classes differ from &%Sets in three important respects. First, &%Classes are not assumed to be extensional. That is, distinct &%Classes might well have exactly the same instances. Second, &%Classes typically have an associated `condition that determines the instances of the &%Class. So, for example, the condition `human determines the &%Class of &%Humans. Note that some &%Classes might satisfy their own condition (e.g., the &%Class of &%Abstract things is &%Abstract) and hence be instances of themselves. Third, the instances of a class may occur only once within the class, i.e. a class cannot contain duplicate instances.') ).

fof(kb_SUMO_1032,axiom,
    s__subclass(s__Set,s__SetOrClass) ).

fof(kb_SUMO_1033,axiom,
    s__instance(s__Set__t,s__SetOrClass) ).

fof(kb_SUMO_1034,axiom,
    s__documentation(s__Set,s__EnglishLanguage,'A &%SetOrClass that satisfies extensionality as well as other constraints specified by some choice of set theory. &%Sets differ from &%Classes in two important respects. First, &%Sets are extensional - two &%Sets with the same &%elements are identical. Second, a &%Set can be an arbitrary stock of objects. That is, there is no requirement that &%Sets have an associated condition that determines their membership. Note that &%Sets are not assumed to be unique sets, i.e. &%elements of a &%Set may occur more than once in the &%Set.') ).

fof(kb_SUMO_1035,axiom,
    s__subclass(s__Relation,s__Abstract) ).

fof(kb_SUMO_1036,axiom,
    s__disjointDecomposition_6(s__Relation,s__BinaryRelation,s__TernaryRelation,s__QuaternaryRelation,s__QuintaryRelation,s__VariableArityRelation) ).

fof(kb_SUMO_1037,axiom,
    s__partition_4(s__Relation,s__Predicate,s__Function,s__List) ).

fof(kb_SUMO_1038,axiom,
    s__partition_3(s__Relation,s__TotalValuedRelation,s__PartialValuedRelation) ).

fof(kb_SUMO_1039,axiom,
    s__documentation(s__Relation,s__EnglishLanguage,'The &%Class of relations. There are three kinds of &%Relation: &%Predicate, &%Function, and &%List. &%Predicates and &%Functions both denote sets of ordered n-tuples. The difference between these two &%Classes is that &%Predicates cover formula-forming operators, while &%Functions cover term-forming operators. A &%List, on the other hand, is a particular ordered n-tuple.') ).

fof(kb_SUMO_1040,axiom,
    s__subclass(s__SingleValuedRelation,s__Relation) ).

fof(kb_SUMO_1041,axiom,
    s__subclass(s__SingleValuedRelation,s__InheritableRelation) ).

fof(kb_SUMO_1042,axiom,
    s__documentation(s__SingleValuedRelation,s__EnglishLanguage,'A &%Relation is a &%SingleValuedRelation just in case an assignment of values to every argument position except the last one determines at most one assignment for the last argument position. Note that not all &%SingleValuedRelations are &%TotalValuedRelations.') ).

fof(kb_SUMO_1043,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__depth(V__ROW1,V__ROW2,V__ITEM1)
          & s__depth(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1044,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Organism)
        & s__instance(V__ITEM1,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( ( s__father(V__ROW1,V__ITEM1)
          & s__father(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1045,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( ( s__diameter(V__ROW1,V__ITEM1)
          & s__diameter(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1046,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__PositiveInteger)
        & s__instance(V__ITEM1,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( ( s__protonNumber(V__ROW1,V__ITEM1)
          & s__protonNumber(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1047,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Quantity)
        & s__instance(V__ITEM1,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( ( s__arcWeight(V__ROW1,V__ITEM1)
          & s__arcWeight(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1048,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__width(V__ROW1,V__ITEM1)
          & s__width(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1049,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__TimeDuration)
        & s__instance(V__ITEM1,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__age(V__ROW1,V__ITEM1)
          & s__age(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1050,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Proposition)
        & s__instance(V__ITEM1,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( ( s__conclusion(V__ROW1,V__ITEM1)
          & s__conclusion(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1051,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__length(V__ROW1,V__ITEM1)
          & s__length(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1052,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__PositiveInteger)
        & s__instance(V__ITEM1,s__PositiveInteger)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( ( s__humanCapacity(V__ROW1,V__ITEM1)
          & s__humanCapacity(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1053,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__CurrencyMeasure)
        & s__instance(V__ITEM1,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( ( s__transactionAmount(V__ROW1,V__ITEM1)
          & s__transactionAmount(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1054,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( ( s__uniqueIdentifier(V__ROW1,V__ITEM1)
          & s__uniqueIdentifier(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1055,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Radiating) )
     => ( ( s__wavelength(V__ROW1,V__ITEM1)
          & s__wavelength(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1056,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Human)
        & s__instance(V__ITEM1,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( ( s__leader(V__ROW1,V__ITEM1)
          & s__leader(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1057,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( ( s__radius(V__ROW1,V__ITEM1)
          & s__radius(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1058,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__SymbolicString)
        & s__instance(V__ITEM1,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( ( s__stringConcatenation(V__ROW1,V__ROW2,V__ITEM1)
          & s__stringConcatenation(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1059,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__PositiveInteger)
        & s__instance(V__ITEM1,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( ( s__electronNumber(V__ROW1,V__ITEM1)
          & s__electronNumber(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1060,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( ( s__geometricDistance(V__ROW1,V__ROW2,V__ITEM1)
          & s__geometricDistance(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1061,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__CurrencyMeasure)
        & s__instance(V__ITEM1,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__monetaryValue(V__ROW1,V__ITEM1)
          & s__monetaryValue(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1062,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__SymbolicString)
        & s__instance(V__ITEM1,s__SymbolicString)
        & s__instance(V__ROW1,s__NonnegativeInteger) )
     => ( ( s__stringLength(V__ROW1,V__ITEM1)
          & s__stringLength(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1063,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Day)
        & s__instance(V__ITEM1,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__date(V__ROW1,V__ITEM1)
          & s__date(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1064,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__altitude(V__ROW1,V__ROW2,V__ITEM1)
          & s__altitude(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1065,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__PositiveInteger)
        & s__instance(V__ITEM1,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( ( s__valence(V__ROW1,V__ITEM1)
          & s__valence(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1066,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Device) )
     => ( ( s__effectiveRange(V__ROW1,V__ITEM1)
          & s__effectiveRange(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1067,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__distance(V__ROW1,V__ROW2,V__ITEM1)
          & s__distance(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1068,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__RationalNumber)
        & s__instance(V__ITEM1,s__RationalNumber)
        & s__instance(V__ROW1,s__Human) )
     => ( ( s__intelligenceQuotient(V__ROW1,V__ITEM1)
          & s__intelligenceQuotient(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1069,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Organism)
        & s__instance(V__ITEM1,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( ( s__mother(V__ROW1,V__ITEM1)
          & s__mother(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1070,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__RealNumber)
        & s__instance(V__ITEM1,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( ( s__average(V__ROW1,V__ITEM1)
          & s__average(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_1071,axiom,
    s__subclass(s__TotalValuedRelation,s__Relation) ).

fof(kb_SUMO_1072,axiom,
    s__subclass(s__TotalValuedRelation,s__InheritableRelation) ).

fof(kb_SUMO_1073,axiom,
    s__documentation(s__TotalValuedRelation,s__EnglishLanguage,'A &%Relation is a &%TotalValuedRelation just in case there exists an assignment for the last argument position of the &%Relation given any assignment of values to every argument position except the last one. Note that declaring a &%Relation to be both a &%TotalValuedRelation and a &%SingleValuedRelation means that it is a total function.') ).

fof(kb_SUMO_1074,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ? [V__VALENCE] :
          ( s__instance(s__geometricDistance__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__geometricDistance(V__ROW1,V__ROW2,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1075,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__OneDimensionalFigure)
     => ? [V__VALENCE] :
          ( s__instance(s__lineMeasure__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__lineMeasure(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1076,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Circle)
     => ? [V__VALENCE] :
          ( s__instance(s__diameter__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__diameter(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1077,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Argument)
     => ? [V__VALENCE] :
          ( s__instance(s__conclusion__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__Proposition)
                & s__instance(V__VALENCE,s__Quantity)
                & s__conclusion(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1078,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__TwoDimensionalAngle)
     => ? [V__VALENCE] :
          ( s__instance(s__angularMeasure__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__PlaneAngleMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__angularMeasure(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1079,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ? [V__VALENCE] :
          ( s__instance(s__stringConcatenation__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SymbolicString)
                & s__instance(V__VALENCE,s__Quantity)
                & s__stringConcatenation(V__ROW1,V__ROW2,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1080,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__TimeInterval)
     => ? [V__VALENCE] :
          ( s__instance(s__duration__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__TimeDuration)
                & s__instance(V__VALENCE,s__Quantity)
                & s__duration(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1081,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__PureSubstance)
     => ? [V__VALENCE] :
          ( s__instance(s__protonNumber__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__PositiveInteger)
                & s__instance(V__VALENCE,s__Quantity)
                & s__protonNumber(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1082,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Argument)
     => ? [V__VALENCE] :
          ( s__instance(s__premise__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__Proposition)
                & s__instance(V__VALENCE,s__Quantity)
                & s__premise(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1083,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Contest)
     => ? [V__VALENCE] :
          ( s__instance(s__contestParticipant__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__Agent)
                & s__instance(V__VALENCE,s__Quantity)
                & s__contestParticipant(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1084,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Circle)
     => ? [V__VALENCE] :
          ( s__instance(s__radius__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__radius(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1085,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__PureSubstance)
     => ? [V__VALENCE] :
          ( s__instance(s__electronNumber__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__PositiveInteger)
                & s__instance(V__VALENCE,s__Quantity)
                & s__electronNumber(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1086,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__NonnegativeInteger)
     => ? [V__VALENCE] :
          ( s__instance(s__stringLength__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SymbolicString)
                & s__instance(V__VALENCE,s__Quantity)
                & s__stringLength(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1087,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__FinancialTransaction)
     => ? [V__VALENCE] :
          ( s__instance(s__transactionAmount__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__CurrencyMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__transactionAmount(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1088,axiom,
    s__subclass(s__PartialValuedRelation,s__Relation) ).

fof(kb_SUMO_1089,axiom,
    s__documentation(s__PartialValuedRelation,s__EnglishLanguage,'A &%Relation is a &%PartialValuedRelation just in case it is not a &%TotalValuedRelation, i.e. just in case assigning values to every argument position except the last one does not necessarily mean that there is a value assignment for the last argument position. Note that, if a &%Relation is both a &%PartialValuedRelation and a &%SingleValuedRelation, then it is a partial function.') ).

fof(kb_SUMO_1090,axiom,
    s__subclass(s__BinaryRelation,s__Relation) ).

fof(kb_SUMO_1091,axiom,
    s__subclass(s__BinaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1092,axiom,
    s__documentation(s__BinaryRelation,s__EnglishLanguage,'&%BinaryRelations are relations that are true only of pairs of things. &%BinaryRelations are represented as slots in frame systems.') ).

fof(kb_SUMO_1093,axiom,
    s__subclass(s__ReflexiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1094,axiom,
    s__documentation(s__ReflexiveRelation,s__EnglishLanguage,'&%Relation ?REL is reflexive iff (?REL ?INST ?INST) for all ?INST.') ).

fof(kb_SUMO_1095,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__identicalListItems(V__INST,V__INST) ) ).

fof(kb_SUMO_1096,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeometricFigure)
     => s__geometricPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1097,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => s__familyRelation(V__INST,V__INST) ) ).

fof(kb_SUMO_1098,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePosition)
     => s__temporalPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1099,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => s__overlapsTemporally(V__INST,V__INST) ) ).

fof(kb_SUMO_1100,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => s__subAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1101,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Collection)
     => s__subCollection(V__INST,V__INST) ) ).

fof(kb_SUMO_1102,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => greatereq(V__INST,V__INST) ) ).

fof(kb_SUMO_1103,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__SetOrClass) )
     => s__equivalentContentClass(V__INST,V__INST) ) ).

fof(kb_SUMO_1104,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => s__subclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1105,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Graph)
     => s__subGraph(V__INST,V__INST) ) ).

fof(kb_SUMO_1106,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Relation)
     => s__subrelation(V__INST,V__INST) ) ).

fof(kb_SUMO_1107,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__ContentBearingPhysical)
     => s__equivalentContentInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_1108,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__subList(V__INST,V__INST) ) ).

fof(kb_SUMO_1109,axiom,
    ! [V__INST] : s__relatedInternalConcept(V__INST,V__INST) ).

fof(kb_SUMO_1110,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__SetOrClass) )
     => s__subsumesContentClass(V__INST,V__INST) ) ).

fof(kb_SUMO_1111,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__connected(V__INST,V__INST) ) ).

fof(kb_SUMO_1112,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__initialList(V__INST,V__INST) ) ).

fof(kb_SUMO_1113,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__ContentBearingPhysical)
     => s__subsumesContentInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_1114,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__copy(V__INST,V__INST) ) ).

fof(kb_SUMO_1115,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => lesseq(V__INST,V__INST) ) ).

fof(kb_SUMO_1116,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organization)
     => s__subOrganization(V__INST,V__INST) ) ).

fof(kb_SUMO_1117,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePoint)
     => s__beforeOrEqual(V__INST,V__INST) ) ).

fof(kb_SUMO_1118,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__overlapsSpatially(V__INST,V__INST) ) ).

fof(kb_SUMO_1119,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SymbolicString)
     => s__subString(V__INST,V__INST) ) ).

fof(kb_SUMO_1120,axiom,
    ! [V__INST] : V__INST = V__INST ).

fof(kb_SUMO_1121,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Physical)
     => s__cooccur(V__INST,V__INST) ) ).

fof(kb_SUMO_1122,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => s__subProcess(V__INST,V__INST) ) ).

fof(kb_SUMO_1123,axiom,
    s__subclass(s__IrreflexiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1124,axiom,
    s__documentation(s__IrreflexiveRelation,s__EnglishLanguage,'&%Relation ?REL is irreflexive iff (?REL ?INST ?INST) holds for no value of ?INST.') ).

fof(kb_SUMO_1125,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__smaller(V__INST,V__INST) ) ).

fof(kb_SUMO_1126,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__NormativeAttribute) )
     => ~ s__modalAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1127,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__patient(V__INST,V__INST) ) ).

fof(kb_SUMO_1128,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Agent) )
     => ~ s__faxNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1129,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__GeopoliticalArea) )
     => ~ s__postCountry(V__INST,V__INST) ) ).

fof(kb_SUMO_1130,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__fills(V__INST,V__INST) ) ).

fof(kb_SUMO_1131,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Woman)
        & s__instance(V__INST,s__Man) )
     => ~ s__wife(V__INST,V__INST) ) ).

fof(kb_SUMO_1132,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Object) )
     => ~ s__origin(V__INST,V__INST) ) ).

fof(kb_SUMO_1133,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePoint)
     => ~ s__before(V__INST,V__INST) ) ).

fof(kb_SUMO_1134,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__disapproves(V__INST,V__INST) ) ).

fof(kb_SUMO_1135,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Agent) )
     => ~ s__telephoneNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1136,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__involvedInEvent(V__INST,V__INST) ) ).

fof(kb_SUMO_1137,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Human) )
     => ~ s__personalPhoneNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1138,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ServiceProcess)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__serviceProvider(V__INST,V__INST) ) ).

fof(kb_SUMO_1139,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Proposition)
        & s__instance(V__INST,s__Organization) )
     => ~ s__insured(V__INST,V__INST) ) ).

fof(kb_SUMO_1140,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Man)
     => ~ s__brother(V__INST,V__INST) ) ).

fof(kb_SUMO_1141,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => ~ greater(V__INST,V__INST) ) ).

fof(kb_SUMO_1142,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Agent) )
     => ~ s__mobilePhoneNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1143,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organization)
     => ~ s__ancestorOrganization(V__INST,V__INST) ) ).

fof(kb_SUMO_1144,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__sibling(V__INST,V__INST) ) ).

fof(kb_SUMO_1145,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Confining)
        & s__instance(V__INST,s__Animal) )
     => ~ s__detainee(V__INST,V__INST) ) ).

fof(kb_SUMO_1146,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__authors(V__INST,V__INST) ) ).

fof(kb_SUMO_1147,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__PostcodeArea) )
     => ~ s__postPostcodeArea(V__INST,V__INST) ) ).

fof(kb_SUMO_1148,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__finishes(V__INST,V__INST) ) ).

fof(kb_SUMO_1149,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeographicArea)
     => ~ s__geographicSubregion(V__INST,V__INST) ) ).

fof(kb_SUMO_1150,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Translocation)
        & s__instance(V__INST,s__Object) )
     => ~ s__changesLocation(V__INST,V__INST) ) ).

fof(kb_SUMO_1151,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__grandparent(V__INST,V__INST) ) ).

fof(kb_SUMO_1152,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalAddressText)
        & s__instance(V__INST,s__PostalPlace) )
     => ~ s__postAddressText(V__INST,V__INST) ) ).

fof(kb_SUMO_1153,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__operator(V__INST,V__INST) ) ).

fof(kb_SUMO_1154,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__destination(V__INST,V__INST) ) ).

fof(kb_SUMO_1155,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TelecomNumber)
     => ~ s__telecomCoreNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1156,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__MilitaryUnit)
     => ~ s__hostileForces(V__INST,V__INST) ) ).

fof(kb_SUMO_1157,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => ~ less(V__INST,V__INST) ) ).

fof(kb_SUMO_1158,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Device)
     => ~ s__powerPlant(V__INST,V__INST) ) ).

fof(kb_SUMO_1159,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Proposition) )
     => ~ s__realization(V__INST,V__INST) ) ).

fof(kb_SUMO_1160,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => ~ s__immediateSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1161,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TimeInterval)
        & s__instance(V__INST,s__TimeDuration) )
     => ~ s__duration(V__INST,V__INST) ) ).

fof(kb_SUMO_1162,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__reflexiveOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1163,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__completelyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1164,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Woman)
     => ~ s__sister(V__INST,V__INST) ) ).

fof(kb_SUMO_1165,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Set)
     => ~ s__element(V__INST,V__INST) ) ).

fof(kb_SUMO_1166,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__considers(V__INST,V__INST) ) ).

fof(kb_SUMO_1167,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TelecomNumber)
     => ~ s__telecomCode2(V__INST,V__INST) ) ).

fof(kb_SUMO_1168,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__Neighborhood) )
     => ~ s__postNeighborhood(V__INST,V__INST) ) ).

fof(kb_SUMO_1169,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__UnitOfAtmosphericPressure) )
     => ~ s__barometricPressure(V__INST,V__INST) ) ).

fof(kb_SUMO_1170,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__causes(V__INST,V__INST) ) ).

fof(kb_SUMO_1171,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Relation)
        & s__instance(V__INST,s__PositiveInteger) )
     => ~ s__valence(V__INST,V__INST) ) ).

fof(kb_SUMO_1172,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SelfConnectedObject)
        & s__instance(V__INST,s__Collection) )
     => ~ s__member(V__INST,V__INST) ) ).

fof(kb_SUMO_1173,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__superficialPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1174,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__Agent) )
     => ~ s__alias(V__INST,V__INST) ) ).

fof(kb_SUMO_1175,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Attribute) )
     => ~ s__manner(V__INST,V__INST) ) ).

fof(kb_SUMO_1176,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__causesSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1177,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__closedOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1178,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__NonnegativeInteger)
        & s__instance(V__INST,s__SymbolicString) )
     => ~ s__stringLength(V__INST,V__INST) ) ).

fof(kb_SUMO_1179,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__Attribute) )
     => ~ s__attribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1180,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__doubts(V__INST,V__INST) ) ).

fof(kb_SUMO_1181,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__decreasesLikelihood(V__INST,V__INST) ) ).

fof(kb_SUMO_1182,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__holdsObligation(V__INST,V__INST) ) ).

fof(kb_SUMO_1183,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => ~ s__successorAttributeClosure(V__INST,V__INST) ) ).

fof(kb_SUMO_1184,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Agent) )
     => ~ s__experiencer(V__INST,V__INST) ) ).

fof(kb_SUMO_1185,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TelecomNumber)
     => ~ s__telecomCountryCode(V__INST,V__INST) ) ).

fof(kb_SUMO_1186,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__FieldOfStudy)
     => ~ s__subField(V__INST,V__INST) ) ).

fof(kb_SUMO_1187,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelephonyDevice)
        & s__instance(V__INST,s__Agent) )
     => ~ s__telecomContactDevice(V__INST,V__INST) ) ).

fof(kb_SUMO_1188,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__irreflexiveOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1189,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__causesProposition(V__INST,V__INST) ) ).

fof(kb_SUMO_1190,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Human) )
     => ~ s__homePhoneNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1191,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__precondition(V__INST,V__INST) ) ).

fof(kb_SUMO_1192,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__PhysicalQuantity) )
     => ~ s__measure(V__INST,V__INST) ) ).

fof(kb_SUMO_1193,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Proposition)
     => ~ s__subProposition(V__INST,V__INST) ) ).

fof(kb_SUMO_1194,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__penetrates(V__INST,V__INST) ) ).

fof(kb_SUMO_1195,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Hole)
        & s__instance(V__INST,s__SelfConnectedObject) )
     => ~ s__hole(V__INST,V__INST) ) ).

fof(kb_SUMO_1196,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PermanentResidence)
        & s__instance(V__INST,s__Human) )
     => ~ s__homeAddress(V__INST,V__INST) ) ).

fof(kb_SUMO_1197,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__range(V__INST,V__INST) ) ).

fof(kb_SUMO_1198,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__crosses(V__INST,V__INST) ) ).

fof(kb_SUMO_1199,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Motion)
        & s__instance(V__INST,s__Object) )
     => ~ s__path(V__INST,V__INST) ) ).

fof(kb_SUMO_1200,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__earlier(V__INST,V__INST) ) ).

fof(kb_SUMO_1201,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Agent) )
     => ~ s__benefits(V__INST,V__INST) ) ).

fof(kb_SUMO_1202,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__starts(V__INST,V__INST) ) ).

fof(kb_SUMO_1203,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__editor(V__INST,V__INST) ) ).

fof(kb_SUMO_1204,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ElementalSubstance)
        & s__instance(V__INST,s__PositiveInteger)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__atomicNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1205,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__Human) )
     => ~ s__middleName(V__INST,V__INST) ) ).

fof(kb_SUMO_1206,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__believes(V__INST,V__INST) ) ).

fof(kb_SUMO_1207,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__trichotomizingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1208,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__holdsRight(V__INST,V__INST) ) ).

fof(kb_SUMO_1209,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__possesses(V__INST,V__INST) ) ).

fof(kb_SUMO_1210,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__partiallyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1211,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__overlapsPartially(V__INST,V__INST) ) ).

fof(kb_SUMO_1212,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeopoliticalArea)
     => ~ s__geopoliticalSubdivision(V__INST,V__INST) ) ).

fof(kb_SUMO_1213,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__inhabits(V__INST,V__INST) ) ).

fof(kb_SUMO_1214,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Organization)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__publishes(V__INST,V__INST) ) ).

fof(kb_SUMO_1215,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__City) )
     => ~ s__postCity(V__INST,V__INST) ) ).

fof(kb_SUMO_1216,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Shipping)
        & s__instance(V__INST,s__Object) )
     => ~ s__cargo(V__INST,V__INST) ) ).

fof(kb_SUMO_1217,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TelecomNumber)
     => ~ s__telecomAreaCode(V__INST,V__INST) ) ).

fof(kb_SUMO_1218,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PlacingUnderArrest)
        & s__instance(V__INST,s__Agent) )
     => ~ s__arrested(V__INST,V__INST) ) ).

fof(kb_SUMO_1219,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__knows(V__INST,V__INST) ) ).

fof(kb_SUMO_1220,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__spouse(V__INST,V__INST) ) ).

fof(kb_SUMO_1221,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__Agent) )
     => ~ s__workPhoneNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1222,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__AchievingControl)
        & s__instance(V__INST,s__Agent) )
     => ~ s__gainsControl(V__INST,V__INST) ) ).

fof(kb_SUMO_1223,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TimePosition)
        & s__instance(V__INST,s__Formula) )
     => ~ s__holdsDuring(V__INST,V__INST) ) ).

fof(kb_SUMO_1224,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Motion)
        & s__instance(V__INST,s__Object) )
     => ~ s__moves(V__INST,V__INST) ) ).

fof(kb_SUMO_1225,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__DirectionalAttribute) )
     => ~ s__direction(V__INST,V__INST) ) ).

fof(kb_SUMO_1226,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__hasSkill(V__INST,V__INST) ) ).

fof(kb_SUMO_1227,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__parent(V__INST,V__INST) ) ).

fof(kb_SUMO_1228,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__ancestor(V__INST,V__INST) ) ).

fof(kb_SUMO_1229,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__Agent) )
     => ~ s__postContactSite(V__INST,V__INST) ) ).

fof(kb_SUMO_1230,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__exploits(V__INST,V__INST) ) ).

fof(kb_SUMO_1231,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__uses(V__INST,V__INST) ) ).

fof(kb_SUMO_1232,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__GraphPath)
        & s__instance(V__INST,s__PositiveInteger) )
     => ~ s__pathLength(V__INST,V__INST) ) ).

fof(kb_SUMO_1233,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__Proposition) )
     => ~ s__containsInformation(V__INST,V__INST) ) ).

fof(kb_SUMO_1234,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TelecomNumber)
     => ~ s__telecomExtension(V__INST,V__INST) ) ).

fof(kb_SUMO_1235,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__meetsSpatially(V__INST,V__INST) ) ).

fof(kb_SUMO_1236,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__properPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1237,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__TimeDuration)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__frequency(V__INST,V__INST) ) ).

fof(kb_SUMO_1238,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Man)
        & s__instance(V__INST,s__Woman) )
     => ~ s__husband(V__INST,V__INST) ) ).

fof(kb_SUMO_1239,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__CompoundSubstance)
     => ~ s__conjugate(V__INST,V__INST) ) ).

fof(kb_SUMO_1240,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Experimenting)
        & s__instance(V__INST,s__Object) )
     => ~ s__experimentalControl(V__INST,V__INST) ) ).

fof(kb_SUMO_1241,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Transportation)
        & s__instance(V__INST,s__TransportationDevice) )
     => ~ s__conveyance(V__INST,V__INST) ) ).

fof(kb_SUMO_1242,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SelfConnectedObject)
     => ~ s__contains(V__INST,V__INST) ) ).

fof(kb_SUMO_1243,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ChangeOfControl)
        & s__instance(V__INST,s__Agent) )
     => ~ s__losesControl(V__INST,V__INST) ) ).

fof(kb_SUMO_1244,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ContentBearingObject)
        & s__instance(V__INST,s__Agent) )
     => ~ s__deceptiveIdentifier(V__INST,V__INST) ) ).

fof(kb_SUMO_1245,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__SetOrClass)
        & s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__rangeSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1246,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__Roadway) )
     => ~ s__postStreet(V__INST,V__INST) ) ).

fof(kb_SUMO_1247,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Human)
        & s__instance(V__INST,s__Nation) )
     => ~ s__citizen(V__INST,V__INST) ) ).

fof(kb_SUMO_1248,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__interiorPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1249,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => ~ s__immediateInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_1250,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => ~ s__inList(V__INST,V__INST) ) ).

fof(kb_SUMO_1251,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__PostalPlace)
        & s__instance(V__INST,s__StateOrProvince) )
     => ~ s__postDistrict(V__INST,V__INST) ) ).

fof(kb_SUMO_1252,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__larger(V__INST,V__INST) ) ).

fof(kb_SUMO_1253,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__PostalPlace) )
     => ~ s__postPostOfficeBox(V__INST,V__INST) ) ).

fof(kb_SUMO_1254,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__EngineeringComponent)
     => ~ s__connectedEngineeringComponents(V__INST,V__INST) ) ).

fof(kb_SUMO_1255,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Agent) )
     => ~ s__agent(V__INST,V__INST) ) ).

fof(kb_SUMO_1256,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Object) )
     => ~ s__eventPartlyLocated(V__INST,V__INST) ) ).

fof(kb_SUMO_1257,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__desires(V__INST,V__INST) ) ).

fof(kb_SUMO_1258,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__AchievingControl)
        & s__instance(V__INST,s__Object) )
     => ~ s__controlled(V__INST,V__INST) ) ).

fof(kb_SUMO_1259,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__equivalenceRelationOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1260,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Language)
     => ~ s__expressedInLanguage(V__INST,V__INST) ) ).

fof(kb_SUMO_1261,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__Human) )
     => ~ s__familyName(V__INST,V__INST) ) ).

fof(kb_SUMO_1262,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Physical)
        & s__instance(V__INST,s__Day) )
     => ~ s__date(V__INST,V__INST) ) ).

fof(kb_SUMO_1263,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__totalOrderingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1264,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__prevents(V__INST,V__INST) ) ).

fof(kb_SUMO_1265,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Transportation)
        & s__instance(V__INST,s__Object) )
     => ~ s__transported(V__INST,V__INST) ) ).

fof(kb_SUMO_1266,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => ~ s__successorAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1267,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Physical)
        & s__instance(V__INST,s__TimePosition) )
     => ~ s__time(V__INST,V__INST) ) ).

fof(kb_SUMO_1268,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__hasPurpose(V__INST,V__INST) ) ).

fof(kb_SUMO_1269,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__GraphElement)
        & s__instance(V__INST,s__Graph) )
     => ~ s__graphPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1270,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__neighbor(V__INST,V__INST) ) ).

fof(kb_SUMO_1271,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__partialOrderingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1272,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__BinaryRelation)
     => ~ s__inverse(V__INST,V__INST) ) ).

fof(kb_SUMO_1273,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__Human) )
     => ~ s__givenName(V__INST,V__INST) ) ).

fof(kb_SUMO_1274,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SymbolicString)
        & s__instance(V__INST,s__PostalPlace) )
     => ~ s__postStreetNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1275,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__BinaryFunction)
     => ~ s__identityElement(V__INST,V__INST) ) ).

fof(kb_SUMO_1276,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ServiceProcess)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__serviceRecipient(V__INST,V__INST) ) ).

fof(kb_SUMO_1277,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__OrganicObject)
        & s__instance(V__INST,s__DevelopmentalAttribute) )
     => ~ s__developmentalForm(V__INST,V__INST) ) ).

fof(kb_SUMO_1278,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__increasesLikelihood(V__INST,V__INST) ) ).

fof(kb_SUMO_1279,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__CognitiveAgent)
     => ~ s__customer(V__INST,V__INST) ) ).

fof(kb_SUMO_1280,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Organization)
        & s__instance(V__INST,s__Integer) )
     => ~ s__yearOfFounding(V__INST,V__INST) ) ).

fof(kb_SUMO_1281,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Relation)
     => ~ s__disjointRelation(V__INST,V__INST) ) ).

fof(kb_SUMO_1282,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Plan)
     => ~ s__subPlan(V__INST,V__INST) ) ).

fof(kb_SUMO_1283,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Object) )
     => ~ s__targetInAttack(V__INST,V__INST) ) ).

fof(kb_SUMO_1284,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__meetsTemporally(V__INST,V__INST) ) ).

fof(kb_SUMO_1285,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TelecomNumber)
        & s__instance(V__INST,s__TelephonyDevice) )
     => ~ s__deviceTelecomNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1286,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__StructureAttribute) )
     => ~ s__structure(V__INST,V__INST) ) ).

fof(kb_SUMO_1287,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__inhibits(V__INST,V__INST) ) ).

fof(kb_SUMO_1288,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__during(V__INST,V__INST) ) ).

fof(kb_SUMO_1289,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SelfConnectedObject)
     => ~ s__surface(V__INST,V__INST) ) ).

fof(kb_SUMO_1290,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__PostalPlace) )
     => ~ s__workAddress(V__INST,V__INST) ) ).

fof(kb_SUMO_1291,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ContactSite)
        & s__instance(V__INST,s__Agent) )
     => ~ s__siteForContact(V__INST,V__INST) ) ).

fof(kb_SUMO_1292,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__properlyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1293,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Artifact)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__version(V__INST,V__INST) ) ).

fof(kb_SUMO_1294,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__leader(V__INST,V__INST) ) ).

fof(kb_SUMO_1295,axiom,
    s__subclass(s__SymmetricRelation,s__BinaryRelation) ).

fof(kb_SUMO_1296,axiom,
    s__documentation(s__SymmetricRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is symmetric just iff (?REL ?INST1 ?INST2) imples (?REL ?INST2 ?INST1), for all ?INST1 and ?INST2.') ).

fof(kb_SUMO_1297,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( s__relatedEvent(V__INST1,V__INST2)
       => s__relatedEvent(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1298,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__overlapsPartially(V__INST1,V__INST2)
       => s__overlapsPartially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1299,axiom,
    ! [V__INST1,V__INST2] :
      ( V__INST1 = V__INST2
     => V__INST2 = V__INST1 ) ).

fof(kb_SUMO_1300,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__relative(V__INST1,V__INST2)
       => s__relative(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1301,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( s__independentProbability(V__INST1,V__INST2)
       => s__independentProbability(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1302,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__spouse(V__INST1,V__INST2)
       => s__spouse(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1303,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation) )
     => ( s__inverse(V__INST1,V__INST2)
       => s__inverse(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1304,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST1,s__Proposition) )
     => ( s__consistent(V__INST1,V__INST2)
       => s__consistent(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1305,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__INST1,V__INST2)
       => s__overlapsTemporally(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1306,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__overlapsSpatially(V__INST1,V__INST2)
       => s__overlapsSpatially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1307,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__domesticPartner(V__INST1,V__INST2)
       => s__domesticPartner(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1308,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( s__disjoint(V__INST1,V__INST2)
       => s__disjoint(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1309,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__connected(V__INST1,V__INST2)
       => s__connected(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1310,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__neighbor(V__INST1,V__INST2)
       => s__neighbor(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1311,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__coworker(V__INST1,V__INST2)
       => s__coworker(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1312,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__cohabitant(V__INST1,V__INST2)
       => s__cohabitant(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1313,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical) )
     => ( s__cooccur(V__INST1,V__INST2)
       => s__cooccur(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1314,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__mutualAcquaintance(V__INST1,V__INST2)
       => s__mutualAcquaintance(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1315,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__INST1,V__INST2)
       => s__equivalentContentClass(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1316,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__sibling(V__INST1,V__INST2)
       => s__sibling(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1317,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__meetsSpatially(V__INST1,V__INST2)
       => s__meetsSpatially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1318,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__friend(V__INST1,V__INST2)
       => s__friend(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1319,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__copy(V__INST1,V__INST2)
       => s__copy(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1320,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__INST1,V__INST2)
       => s__equivalentContentInstance(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1321,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CompoundSubstance)
        & s__instance(V__INST1,s__CompoundSubstance) )
     => ( s__conjugate(V__INST1,V__INST2)
       => s__conjugate(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1322,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( s__identicalListItems(V__INST1,V__INST2)
       => s__identicalListItems(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1323,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__mutualStranger(V__INST1,V__INST2)
       => s__mutualStranger(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1324,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__familyRelation(V__INST1,V__INST2)
       => s__familyRelation(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1325,axiom,
    ! [V__INST1,V__INST2] :
      ( s__relatedInternalConcept(V__INST1,V__INST2)
     => s__relatedInternalConcept(V__INST2,V__INST1) ) ).

fof(kb_SUMO_1326,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__legalRelation(V__INST1,V__INST2)
       => s__legalRelation(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1327,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__EngineeringComponent)
        & s__instance(V__INST1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__INST1,V__INST2)
       => s__connectedEngineeringComponents(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1328,axiom,
    s__subclass(s__AsymmetricRelation,s__IrreflexiveRelation) ).

fof(kb_SUMO_1329,axiom,
    s__subclass(s__AsymmetricRelation,s__AntisymmetricRelation) ).

fof(kb_SUMO_1330,axiom,
    s__documentation(s__AsymmetricRelation,s__EnglishLanguage,'A &%BinaryRelation is asymmetric if and only if it is both an &%AntisymmetricRelation and an &%IrreflexiveRelation.') ).

fof(kb_SUMO_1331,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__AsymmetricRelation)
    <=> ( s__instance(V__REL,s__AntisymmetricRelation)
        & s__instance(V__REL,s__IrreflexiveRelation) ) ) ).

fof(kb_SUMO_1332,axiom,
    s__subclass(s__AntisymmetricRelation,s__BinaryRelation) ).

fof(kb_SUMO_1333,axiom,
    s__instance(s__AntisymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1334,axiom,
    s__documentation(s__AntisymmetricRelation,s__EnglishLanguage,'&%BinaryRelation ?REL is an &%AntisymmetricRelation if for distinct ?INST1 and ?INST2, (?REL ?INST1 ?INST2) implies not (?REL ?INST2 ?INST1). In other words, for all ?INST1 and ?INST2, (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST1) imply that ?INST1 and ?INST2 are identical. Note that it is possible for an &%AntisymmetricRelation to be a &%ReflexiveRelation.') ).

fof(kb_SUMO_1335,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__INST1,V__INST2)
          & s__subsumesContentInstance(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1336,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__agent(V__INST1,V__INST2)
          & s__agent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1337,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__faxNumber(V__INST1,V__INST2)
          & s__faxNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1338,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__hasPurpose(V__INST1,V__INST2)
          & s__hasPurpose(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1339,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__personalPhoneNumber(V__INST1,V__INST2)
          & s__personalPhoneNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1340,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ElementalSubstance)
        & s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ElementalSubstance)
        & s__instance(V__INST1,s__PositiveInteger)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__atomicNumber(V__INST1,V__INST2)
          & s__atomicNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1341,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Man)
        & s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Woman)
        & s__instance(V__INST1,s__Man) )
     => ( ( s__wife(V__INST1,V__INST2)
          & s__wife(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1342,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__fills(V__INST1,V__INST2)
          & s__fills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1343,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__totalOrderingOn(V__INST1,V__INST2)
          & s__totalOrderingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1344,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__causes(V__INST1,V__INST2)
          & s__causes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1345,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__homePhoneNumber(V__INST1,V__INST2)
          & s__homePhoneNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1346,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Transportation)
        & s__instance(V__INST1,s__Transportation)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__transported(V__INST1,V__INST2)
          & s__transported(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1347,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__disapproves(V__INST1,V__INST2)
          & s__disapproves(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1348,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Set)
        & s__instance(V__INST1,s__Set) )
     => ( ( s__element(V__INST1,V__INST2)
          & s__element(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1349,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__range(V__INST1,V__INST2)
          & s__range(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1350,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__PlacingUnderArrest)
        & s__instance(V__INST1,s__PlacingUnderArrest)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__arrested(V__INST1,V__INST2)
          & s__arrested(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1351,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__leader(V__INST1,V__INST2)
          & s__leader(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1352,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__partialOrderingOn(V__INST1,V__INST2)
          & s__partialOrderingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1353,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__involvedInEvent(V__INST1,V__INST2)
          & s__involvedInEvent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1354,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__properlyFills(V__INST1,V__INST2)
          & s__properlyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1355,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation)
        & s__instance(V__INST1,s__PositiveInteger) )
     => ( ( s__valence(V__INST1,V__INST2)
          & s__valence(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1356,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__GraphPath)
        & s__instance(V__INST1,s__GraphPath)
        & s__instance(V__INST1,s__PositiveInteger) )
     => ( ( s__pathLength(V__INST1,V__INST2)
          & s__pathLength(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1357,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Day)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical)
        & s__instance(V__INST1,s__Day) )
     => ( ( s__date(V__INST1,V__INST2)
          & s__date(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1358,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Nation)
        & s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human)
        & s__instance(V__INST1,s__Nation) )
     => ( ( s__citizen(V__INST1,V__INST2)
          & s__citizen(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1359,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__realization(V__INST1,V__INST2)
          & s__realization(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1360,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__hole(V__INST1,V__INST2)
          & s__hole(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1361,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Collection)
        & s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__member(V__INST1,V__INST2)
          & s__member(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1362,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__holdsObligation(V__INST1,V__INST2)
          & s__holdsObligation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1363,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__inList(V__INST1,V__INST2)
          & s__inList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1364,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__postContactSite(V__INST1,V__INST2)
          & s__postContactSite(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1365,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( lesseq(V__INST1,V__INST2)
          & lesseq(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1366,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PhysicalQuantity)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__PhysicalQuantity) )
     => ( ( s__measure(V__INST1,V__INST2)
          & s__measure(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1367,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber) )
     => ( ( s__telecomCountryCode(V__INST1,V__INST2)
          & s__telecomCountryCode(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1368,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__uses(V__INST1,V__INST2)
          & s__uses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1369,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Language)
        & s__instance(V__INST1,s__Language) )
     => ( ( s__expressedInLanguage(V__INST1,V__INST2)
          & s__expressedInLanguage(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1370,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeopoliticalArea)
        & s__instance(V__INST1,s__GeopoliticalArea) )
     => ( ( s__geopoliticalSubdivision(V__INST1,V__INST2)
          & s__geopoliticalSubdivision(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1371,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__eventPartlyLocated(V__INST1,V__INST2)
          & s__eventPartlyLocated(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1372,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__PermanentResidence)
        & s__instance(V__INST1,s__PermanentResidence)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__homeAddress(V__INST1,V__INST2)
          & s__homeAddress(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1373,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__doubts(V__INST1,V__INST2)
          & s__doubts(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1374,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST2,s__NonnegativeInteger)
        & s__instance(V__INST1,s__NonnegativeInteger)
        & s__instance(V__INST1,s__SymbolicString) )
     => ( ( s__stringLength(V__INST1,V__INST2)
          & s__stringLength(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1375,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__initialList(V__INST1,V__INST2)
          & s__initialList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1376,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__targetInAttack(V__INST1,V__INST2)
          & s__targetInAttack(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1377,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__completelyFills(V__INST1,V__INST2)
          & s__completelyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1378,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Neighborhood)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__Neighborhood) )
     => ( ( s__postNeighborhood(V__INST1,V__INST2)
          & s__postNeighborhood(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1379,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__beforeOrEqual(V__INST1,V__INST2)
          & s__beforeOrEqual(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1380,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PostcodeArea)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__PostcodeArea) )
     => ( ( s__postPostcodeArea(V__INST1,V__INST2)
          & s__postPostcodeArea(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1381,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__penetrates(V__INST1,V__INST2)
          & s__penetrates(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1382,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__givenName(V__INST1,V__INST2)
          & s__givenName(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1383,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__crosses(V__INST1,V__INST2)
          & s__crosses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1384,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__alias(V__INST1,V__INST2)
          & s__alias(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1385,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__containsInformation(V__INST1,V__INST2)
          & s__containsInformation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1386,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__temporalPart(V__INST1,V__INST2)
          & s__temporalPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1387,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__OrganicObject)
        & s__instance(V__INST1,s__OrganicObject)
        & s__instance(V__INST1,s__DevelopmentalAttribute) )
     => ( ( s__developmentalForm(V__INST1,V__INST2)
          & s__developmentalForm(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1388,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString) )
     => ( ( s__subString(V__INST1,V__INST2)
          & s__subString(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1389,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__holdsRight(V__INST1,V__INST2)
          & s__holdsRight(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1390,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeographicArea)
        & s__instance(V__INST1,s__GeographicArea) )
     => ( ( s__geographicSubregion(V__INST1,V__INST2)
          & s__geographicSubregion(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1391,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__contains(V__INST1,V__INST2)
          & s__contains(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1392,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__StructureAttribute)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__StructureAttribute) )
     => ( ( s__structure(V__INST1,V__INST2)
          & s__structure(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1393,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__desires(V__INST1,V__INST2)
          & s__desires(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1394,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__TelephonyDevice)
        & s__instance(V__INST1,s__TelephonyDevice)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__telecomContactDevice(V__INST1,V__INST2)
          & s__telecomContactDevice(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1395,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelephonyDevice)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__TelephonyDevice) )
     => ( ( s__deviceTelecomNumber(V__INST1,V__INST2)
          & s__deviceTelecomNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1396,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__knows(V__INST1,V__INST2)
          & s__knows(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1397,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Graph)
        & s__instance(V__INST2,s__GraphElement)
        & s__instance(V__INST1,s__GraphElement)
        & s__instance(V__INST1,s__Graph) )
     => ( ( s__graphPart(V__INST1,V__INST2)
          & s__graphPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1398,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__mobilePhoneNumber(V__INST1,V__INST2)
          & s__mobilePhoneNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1399,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeopoliticalArea)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__GeopoliticalArea) )
     => ( ( s__postCountry(V__INST1,V__INST2)
          & s__postCountry(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1400,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST2,s__PostalAddressText)
        & s__instance(V__INST1,s__PostalAddressText)
        & s__instance(V__INST1,s__PostalPlace) )
     => ( ( s__postAddressText(V__INST1,V__INST2)
          & s__postAddressText(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1401,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__subList(V__INST1,V__INST2)
          & s__subList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1402,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber) )
     => ( ( s__telecomCoreNumber(V__INST1,V__INST2)
          & s__telecomCoreNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1403,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__reflexiveOn(V__INST1,V__INST2)
          & s__reflexiveOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1404,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Roadway)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__Roadway) )
     => ( ( s__postStreet(V__INST1,V__INST2)
          & s__postStreet(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1405,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__surface(V__INST1,V__INST2)
          & s__surface(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1406,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__destination(V__INST1,V__INST2)
          & s__destination(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1407,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__time(V__INST1,V__INST2)
          & s__time(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1408,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__INST1,V__INST2)
          & s__subsumesContentClass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1409,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateSubclass(V__INST1,V__INST2)
          & s__immediateSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1410,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Shipping)
        & s__instance(V__INST1,s__Shipping)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__cargo(V__INST1,V__INST2)
          & s__cargo(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1411,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation) )
     => ( ( s__subrelation(V__INST1,V__INST2)
          & s__subrelation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1412,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__causesSubclass(V__INST1,V__INST2)
          & s__causesSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1413,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__StateOrProvince)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__StateOrProvince) )
     => ( ( s__postDistrict(V__INST1,V__INST2)
          & s__postDistrict(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1414,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Motion)
        & s__instance(V__INST1,s__Motion)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__moves(V__INST1,V__INST2)
          & s__moves(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1415,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__AchievingControl)
        & s__instance(V__INST1,s__AchievingControl)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__controlled(V__INST1,V__INST2)
          & s__controlled(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1416,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__legalGuardian(V__INST1,V__INST2)
          & s__legalGuardian(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1417,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__middleName(V__INST1,V__INST2)
          & s__middleName(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1418,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__ChangeOfControl)
        & s__instance(V__INST1,s__ChangeOfControl)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__losesControl(V__INST1,V__INST2)
          & s__losesControl(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1419,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__authors(V__INST1,V__INST2)
          & s__authors(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1420,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__manner(V__INST1,V__INST2)
          & s__manner(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1421,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Experimenting)
        & s__instance(V__INST1,s__Experimenting)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__experimentalControl(V__INST1,V__INST2)
          & s__experimentalControl(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1422,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__PostalPlace) )
     => ( ( s__postStreetNumber(V__INST1,V__INST2)
          & s__postStreetNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1423,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__partiallyFills(V__INST1,V__INST2)
          & s__partiallyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1424,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__customer(V__INST1,V__INST2)
          & s__customer(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1425,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Collection)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__subCollection(V__INST1,V__INST2)
          & s__subCollection(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1426,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Translocation)
        & s__instance(V__INST1,s__Translocation)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__changesLocation(V__INST1,V__INST2)
          & s__changesLocation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1427,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__familyName(V__INST1,V__INST2)
          & s__familyName(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1428,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__hasSkill(V__INST1,V__INST2)
          & s__hasSkill(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1429,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST2,s__SymbolicString)
        & s__instance(V__INST1,s__SymbolicString)
        & s__instance(V__INST1,s__PostalPlace) )
     => ( ( s__postPostOfficeBox(V__INST1,V__INST2)
          & s__postPostOfficeBox(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1430,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__precondition(V__INST1,V__INST2)
          & s__precondition(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1431,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Motion)
        & s__instance(V__INST1,s__Motion)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__path(V__INST1,V__INST2)
          & s__path(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1432,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__holdsDuring(V__INST1,V__INST2)
          & s__holdsDuring(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1433,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__parent(V__INST1,V__INST2)
          & s__parent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1434,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Device)
        & s__instance(V__INST1,s__Device) )
     => ( ( s__powerPlant(V__INST1,V__INST2)
          & s__powerPlant(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1435,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__successorAttribute(V__INST1,V__INST2)
          & s__successorAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1436,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greatereq(V__INST1,V__INST2)
          & greatereq(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1437,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateInstance(V__INST1,V__INST2)
          & s__immediateInstance(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1438,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__patient(V__INST1,V__INST2)
          & s__patient(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1439,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__possesses(V__INST1,V__INST2)
          & s__possesses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1440,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeometricFigure)
        & s__instance(V__INST1,s__GeometricFigure) )
     => ( ( s__geometricPart(V__INST1,V__INST2)
          & s__geometricPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1441,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber) )
     => ( ( s__telecomAreaCode(V__INST1,V__INST2)
          & s__telecomAreaCode(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1442,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__grandparent(V__INST1,V__INST2)
          & s__grandparent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1443,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subclass(V__INST1,V__INST2)
          & s__subclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1444,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__attribute(V__INST1,V__INST2)
          & s__attribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1445,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__inhabits(V__INST1,V__INST2)
          & s__inhabits(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1446,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__closedOn(V__INST1,V__INST2)
          & s__closedOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1447,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Integer)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization)
        & s__instance(V__INST1,s__Integer) )
     => ( ( s__yearOfFounding(V__INST1,V__INST2)
          & s__yearOfFounding(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1448,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__workPhoneNumber(V__INST1,V__INST2)
          & s__workPhoneNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1449,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__benefits(V__INST1,V__INST2)
          & s__benefits(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1450,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__subProcess(V__INST1,V__INST2)
          & s__subProcess(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1451,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__BinaryFunction)
        & s__instance(V__INST1,s__BinaryFunction) )
     => ( ( s__identityElement(V__INST1,V__INST2)
          & s__identityElement(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1452,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__located(V__INST1,V__INST2)
          & s__located(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1453,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__AchievingControl)
        & s__instance(V__INST1,s__AchievingControl)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__gainsControl(V__INST1,V__INST2)
          & s__gainsControl(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1454,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__subOrganization(V__INST1,V__INST2)
          & s__subOrganization(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1455,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Animal)
        & s__instance(V__INST2,s__Confining)
        & s__instance(V__INST1,s__Confining)
        & s__instance(V__INST1,s__Animal) )
     => ( ( s__detainee(V__INST1,V__INST2)
          & s__detainee(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1456,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__DataStorageDevice)
        & s__instance(V__INST2,s__ContentBearingObject)
        & s__instance(V__INST1,s__ContentBearingObject)
        & s__instance(V__INST1,s__DataStorageDevice) )
     => ( ( s__stored(V__INST1,V__INST2)
          & s__stored(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1457,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__City)
        & s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST1,s__PostalPlace)
        & s__instance(V__INST1,s__City) )
     => ( ( s__postCity(V__INST1,V__INST2)
          & s__postCity(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1458,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Woman)
        & s__instance(V__INST2,s__Man)
        & s__instance(V__INST1,s__Man)
        & s__instance(V__INST1,s__Woman) )
     => ( ( s__husband(V__INST1,V__INST2)
          & s__husband(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1459,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__SetOrClass)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__INST1,V__INST2)
          & s__rangeSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1460,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TransportationDevice)
        & s__instance(V__INST2,s__Transportation)
        & s__instance(V__INST1,s__Transportation)
        & s__instance(V__INST1,s__TransportationDevice) )
     => ( ( s__conveyance(V__INST1,V__INST2)
          & s__conveyance(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1461,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__ContentBearingObject)
        & s__instance(V__INST1,s__ContentBearingObject)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__deceptiveIdentifier(V__INST1,V__INST2)
          & s__deceptiveIdentifier(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1462,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PostalPlace)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__PostalPlace) )
     => ( ( s__workAddress(V__INST1,V__INST2)
          & s__workAddress(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1463,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__telephoneNumber(V__INST1,V__INST2)
          & s__telephoneNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1464,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__properPart(V__INST1,V__INST2)
          & s__properPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1465,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__operator(V__INST1,V__INST2)
          & s__operator(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1466,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__origin(V__INST1,V__INST2)
          & s__origin(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1467,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__ServiceProcess)
        & s__instance(V__INST1,s__ServiceProcess)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__serviceProvider(V__INST1,V__INST2)
          & s__serviceProvider(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1468,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__causesProposition(V__INST1,V__INST2)
          & s__causesProposition(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1469,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeDuration)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval)
        & s__instance(V__INST1,s__TimeDuration) )
     => ( ( s__duration(V__INST1,V__INST2)
          & s__duration(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1470,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Artifact)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Artifact)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__version(V__INST1,V__INST2)
          & s__version(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1471,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__exploits(V__INST1,V__INST2)
          & s__exploits(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1472,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber) )
     => ( ( s__telecomCode2(V__INST1,V__INST2)
          & s__telecomCode2(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1473,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__ContactSite)
        & s__instance(V__INST1,s__ContactSite)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__siteForContact(V__INST1,V__INST2)
          & s__siteForContact(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1474,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__DirectionalAttribute)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__DirectionalAttribute) )
     => ( ( s__direction(V__INST1,V__INST2)
          & s__direction(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1475,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TelecomNumber)
        & s__instance(V__INST1,s__TelecomNumber) )
     => ( ( s__telecomExtension(V__INST1,V__INST2)
          & s__telecomExtension(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1476,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__experiencer(V__INST1,V__INST2)
          & s__experiencer(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1477,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__editor(V__INST1,V__INST2)
          & s__editor(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1478,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__interiorPart(V__INST1,V__INST2)
          & s__interiorPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1479,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organization)
        & s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST1,s__Proposition)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__insured(V__INST1,V__INST2)
          & s__insured(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1480,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__UnitOfAtmosphericPressure)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__UnitOfAtmosphericPressure) )
     => ( ( s__barometricPressure(V__INST1,V__INST2)
          & s__barometricPressure(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1481,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__subAttribute(V__INST1,V__INST2)
          & s__subAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1482,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__TimeDuration)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__TimeDuration)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__frequency(V__INST1,V__INST2)
          & s__frequency(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1483,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__meetsTemporally(V__INST1,V__INST2)
          & s__meetsTemporally(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1484,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__considers(V__INST1,V__INST2)
          & s__considers(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1485,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__ServiceProcess)
        & s__instance(V__INST1,s__ServiceProcess)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__serviceRecipient(V__INST1,V__INST2)
          & s__serviceRecipient(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1486,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__equivalenceRelationOn(V__INST1,V__INST2)
          & s__equivalenceRelationOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1487,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__trichotomizingOn(V__INST1,V__INST2)
          & s__trichotomizingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1488,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__irreflexiveOn(V__INST1,V__INST2)
          & s__irreflexiveOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1489,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__NormativeAttribute)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__NormativeAttribute) )
     => ( ( s__modalAttribute(V__INST1,V__INST2)
          & s__modalAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1490,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Organization)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__publishes(V__INST1,V__INST2)
          & s__publishes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1491,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__believes(V__INST1,V__INST2)
          & s__believes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1492,axiom,
    s__subclass(s__TrichotomizingRelation,s__BinaryRelation) ).

fof(kb_SUMO_1493,axiom,
    s__instance(s__TrichotomizingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1494,axiom,
    s__documentation(s__TrichotomizingRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is a &%TrichotomizingRelation just in case all ordered pairs consisting of distinct individuals are elements of ?REL.') ).

fof(kb_SUMO_1495,axiom,
    s__subclass(s__TransitiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1496,axiom,
    s__instance(s__TransitiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1497,axiom,
    s__documentation(s__TransitiveRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is transitive if (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST3) imply (?REL ?INST1 ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_1498,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__CompoundSubstance)
        & s__instance(V__INST2,s__CompoundSubstance)
        & s__instance(V__INST1,s__CompoundSubstance) )
     => ( ( s__conjugate(V__INST1,V__INST2)
          & s__conjugate(V__INST2,V__INST3) )
       => s__conjugate(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1499,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Graph)
        & s__instance(V__INST2,s__Graph)
        & s__instance(V__INST1,s__Graph) )
     => ( ( s__subGraph(V__INST1,V__INST2)
          & s__subGraph(V__INST2,V__INST3) )
       => s__subGraph(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1500,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__superficialPart(V__INST1,V__INST2)
          & s__superficialPart(V__INST2,V__INST3) )
       => s__superficialPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1501,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Relation)
        & s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation) )
     => ( ( s__subrelation(V__INST1,V__INST2)
          & s__subrelation(V__INST2,V__INST3) )
       => s__subrelation(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1502,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePosition)
        & s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__temporalPart(V__INST1,V__INST2)
          & s__temporalPart(V__INST2,V__INST3) )
       => s__temporalPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1503,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__copy(V__INST1,V__INST2)
          & s__copy(V__INST2,V__INST3) )
       => s__copy(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1504,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Proposition)
        & s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__subProposition(V__INST1,V__INST2)
          & s__subProposition(V__INST2,V__INST3) )
       => s__subProposition(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1505,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greater(V__INST1,V__INST2)
          & greater(V__INST2,V__INST3) )
       => greater(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1506,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__Process)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__precondition(V__INST1,V__INST2)
          & s__precondition(V__INST2,V__INST3) )
       => s__precondition(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1507,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__ancestor(V__INST1,V__INST2)
          & s__ancestor(V__INST2,V__INST3) )
       => s__ancestor(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1508,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__Artifact)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__Artifact)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Artifact)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__version(V__INST1,V__INST2)
          & s__version(V__INST2,V__INST3) )
       => s__version(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1509,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__crosses(V__INST1,V__INST2)
          & s__crosses(V__INST2,V__INST3) )
       => s__crosses(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1510,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Attribute)
        & s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__successorAttributeClosure(V__INST1,V__INST2)
          & s__successorAttributeClosure(V__INST2,V__INST3) )
       => s__successorAttributeClosure(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1511,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__identicalListItems(V__INST1,V__INST2)
          & s__identicalListItems(V__INST2,V__INST3) )
       => s__identicalListItems(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1512,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__starts(V__INST1,V__INST2)
          & s__starts(V__INST2,V__INST3) )
       => s__starts(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1513,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__larger(V__INST1,V__INST2)
          & s__larger(V__INST2,V__INST3) )
       => s__larger(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1514,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__earlier(V__INST1,V__INST2)
          & s__earlier(V__INST2,V__INST3) )
       => s__earlier(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1515,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__initialList(V__INST1,V__INST2)
          & s__initialList(V__INST2,V__INST3) )
       => s__initialList(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1516,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Integer)
        & s__instance(V__INST2,s__Integer)
        & s__instance(V__INST1,s__Integer) )
     => ( ( s__multiplicativeFactor(V__INST1,V__INST2)
          & s__multiplicativeFactor(V__INST2,V__INST3) )
       => s__multiplicativeFactor(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1517,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__FieldOfStudy)
        & s__instance(V__INST2,s__FieldOfStudy)
        & s__instance(V__INST1,s__FieldOfStudy) )
     => ( ( s__subField(V__INST1,V__INST2)
          & s__subField(V__INST2,V__INST3) )
       => s__subField(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1518,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( lesseq(V__INST1,V__INST2)
          & lesseq(V__INST2,V__INST3) )
       => lesseq(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1519,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__OrganicObject)
        & s__instance(V__INST1,s__OrganicObject) )
     => ( ( s__developmentalForm(V__INST1,V__INST2)
          & s__developmentalForm(V__INST2,V__INST3) )
       => s__developmentalForm(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1520,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePoint)
        & s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__before(V__INST1,V__INST2)
          & s__before(V__INST2,V__INST3) )
       => s__before(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1521,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__interiorPart(V__INST1,V__INST2)
          & s__interiorPart(V__INST2,V__INST3) )
       => s__interiorPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1522,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__INST1,V__INST2)
          & s__subsumesContentClass(V__INST2,V__INST3) )
       => s__subsumesContentClass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1523,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeographicArea)
        & s__instance(V__INST2,s__GeographicArea)
        & s__instance(V__INST1,s__GeographicArea) )
     => ( ( s__geographicSubregion(V__INST1,V__INST2)
          & s__geographicSubregion(V__INST2,V__INST3) )
       => s__geographicSubregion(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1524,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__smaller(V__INST1,V__INST2)
          & s__smaller(V__INST2,V__INST3) )
       => s__smaller(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1525,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( less(V__INST1,V__INST2)
          & less(V__INST2,V__INST3) )
       => less(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1526,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__DataStorageDevice)
        & s__instance(V__INST2,s__DataStorageDevice)
        & s__instance(V__INST2,s__ContentBearingObject)
        & s__instance(V__INST1,s__ContentBearingObject) )
     => ( ( s__stored(V__INST1,V__INST2)
          & s__stored(V__INST2,V__INST3) )
       => s__stored(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1527,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__finishes(V__INST1,V__INST2)
          & s__finishes(V__INST2,V__INST3) )
       => s__finishes(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1528,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( V__INST1 = V__INST2
        & V__INST2 = V__INST3 )
     => V__INST1 = V__INST3 ) ).

fof(kb_SUMO_1529,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Attribute)
        & s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__subAttribute(V__INST1,V__INST2)
          & s__subAttribute(V__INST2,V__INST3) )
       => s__subAttribute(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1530,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Plan)
        & s__instance(V__INST2,s__Plan)
        & s__instance(V__INST1,s__Plan) )
     => ( ( s__subPlan(V__INST1,V__INST2)
          & s__subPlan(V__INST2,V__INST3) )
       => s__subPlan(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1531,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__familyRelation(V__INST1,V__INST2)
          & s__familyRelation(V__INST2,V__INST3) )
       => s__familyRelation(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1532,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Human)
        & s__instance(V__INST2,s__Man)
        & s__instance(V__INST1,s__Man) )
     => ( ( s__brother(V__INST1,V__INST2)
          & s__brother(V__INST2,V__INST3) )
       => s__brother(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1533,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greatereq(V__INST1,V__INST2)
          & greatereq(V__INST2,V__INST3) )
       => greatereq(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1534,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organization)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__ancestorOrganization(V__INST1,V__INST2)
          & s__ancestorOrganization(V__INST2,V__INST3) )
       => s__ancestorOrganization(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1535,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__equivalentContentClass(V__INST1,V__INST2)
          & s__equivalentContentClass(V__INST2,V__INST3) )
       => s__equivalentContentClass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1536,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organization)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__subOrganization(V__INST1,V__INST2)
          & s__subOrganization(V__INST2,V__INST3) )
       => s__subOrganization(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1537,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__INST1,V__INST2)
          & s__subsumesContentInstance(V__INST2,V__INST3) )
       => s__subsumesContentInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1538,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__subList(V__INST1,V__INST2)
          & s__subList(V__INST2,V__INST3) )
       => s__subList(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1539,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subclass(V__INST1,V__INST2)
          & s__subclass(V__INST2,V__INST3) )
       => s__subclass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1540,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__during(V__INST1,V__INST2)
          & s__during(V__INST2,V__INST3) )
       => s__during(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1541,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Process)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__subProcess(V__INST1,V__INST2)
          & s__subProcess(V__INST2,V__INST3) )
       => s__subProcess(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1542,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Physical) )
     => ( ( s__located(V__INST1,V__INST2)
          & s__located(V__INST2,V__INST3) )
       => s__located(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1543,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__properPart(V__INST1,V__INST2)
          & s__properPart(V__INST2,V__INST3) )
       => s__properPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1544,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Collection)
        & s__instance(V__INST2,s__Collection)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__subCollection(V__INST1,V__INST2)
          & s__subCollection(V__INST2,V__INST3) )
       => s__subCollection(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1545,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__relatedInternalConcept(V__INST1,V__INST2)
        & s__relatedInternalConcept(V__INST2,V__INST3) )
     => s__relatedInternalConcept(V__INST1,V__INST3) ) ).

fof(kb_SUMO_1546,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeopoliticalArea)
        & s__instance(V__INST2,s__GeopoliticalArea)
        & s__instance(V__INST1,s__GeopoliticalArea) )
     => ( ( s__geopoliticalSubdivision(V__INST1,V__INST2)
          & s__geopoliticalSubdivision(V__INST2,V__INST3) )
       => s__geopoliticalSubdivision(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1547,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__equivalentContentInstance(V__INST1,V__INST2)
          & s__equivalentContentInstance(V__INST2,V__INST3) )
       => s__equivalentContentInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1548,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Human)
        & s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Woman) )
     => ( ( s__sister(V__INST1,V__INST2)
          & s__sister(V__INST2,V__INST3) )
       => s__sister(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1549,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePoint)
        & s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__beforeOrEqual(V__INST1,V__INST2)
          & s__beforeOrEqual(V__INST2,V__INST3) )
       => s__beforeOrEqual(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1550,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeometricFigure)
        & s__instance(V__INST2,s__GeometricFigure)
        & s__instance(V__INST1,s__GeometricFigure) )
     => ( ( s__geometricPart(V__INST1,V__INST2)
          & s__geometricPart(V__INST2,V__INST3) )
       => s__geometricPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1551,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Physical)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical) )
     => ( ( s__cooccur(V__INST1,V__INST2)
          & s__cooccur(V__INST2,V__INST3) )
       => s__cooccur(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1552,axiom,
    s__subclass(s__IntransitiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1553,axiom,
    s__documentation(s__IntransitiveRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is intransitive only if (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST3) imply not (?REL ?INST1 ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_1554,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__penetrates(V__INST1,V__INST2)
          & s__penetrates(V__INST2,V__INST3) )
       => ~ s__penetrates(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1555,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__parent(V__INST1,V__INST2)
          & s__parent(V__INST2,V__INST3) )
       => ~ s__parent(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1556,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Collection)
        & s__instance(V__INST2,s__Collection)
        & s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__member(V__INST1,V__INST2)
          & s__member(V__INST2,V__INST3) )
       => ~ s__member(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1557,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass) )
     => ( ( s__immediateInstance(V__INST1,V__INST2)
          & s__immediateInstance(V__INST2,V__INST3) )
       => ~ s__immediateInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1558,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__BinaryRelation)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation) )
     => ( ( s__inverse(V__INST1,V__INST2)
          & s__inverse(V__INST2,V__INST3) )
       => ~ s__inverse(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1559,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__meetsTemporally(V__INST1,V__INST2)
          & s__meetsTemporally(V__INST2,V__INST3) )
       => ~ s__meetsTemporally(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1560,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateSubclass(V__INST1,V__INST2)
          & s__immediateSubclass(V__INST2,V__INST3) )
       => ~ s__immediateSubclass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1561,axiom,
    s__subclass(s__PartialOrderingRelation,s__TransitiveRelation) ).

fof(kb_SUMO_1562,axiom,
    s__subclass(s__PartialOrderingRelation,s__AntisymmetricRelation) ).

fof(kb_SUMO_1563,axiom,
    s__subclass(s__PartialOrderingRelation,s__ReflexiveRelation) ).

fof(kb_SUMO_1564,axiom,
    s__documentation(s__PartialOrderingRelation,s__EnglishLanguage,'A &%BinaryRelation is a partial ordering if it is a &%ReflexiveRelation, an &%AntisymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_1565,axiom,
    s__subclass(s__TotalOrderingRelation,s__PartialOrderingRelation) ).

fof(kb_SUMO_1566,axiom,
    s__instance(s__TotalOrderingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1567,axiom,
    s__subclass(s__TotalOrderingRelation,s__TrichotomizingRelation) ).

fof(kb_SUMO_1568,axiom,
    s__documentation(s__TotalOrderingRelation,s__EnglishLanguage,'A &%BinaryRelation is a &%TotalOrderingRelation if it is a &%PartialOrderingRelation and a &%TrichotomizingRelation.') ).

fof(kb_SUMO_1569,axiom,
    s__subclass(s__EquivalenceRelation,s__TransitiveRelation) ).

fof(kb_SUMO_1570,axiom,
    s__subclass(s__EquivalenceRelation,s__SymmetricRelation) ).

fof(kb_SUMO_1571,axiom,
    s__subclass(s__EquivalenceRelation,s__ReflexiveRelation) ).

fof(kb_SUMO_1572,axiom,
    s__documentation(s__EquivalenceRelation,s__EnglishLanguage,'A &%BinaryRelation is an equivalence relation if it is a &%ReflexiveRelation, a &%SymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_1573,axiom,
    s__subclass(s__CaseRole,s__BinaryPredicate) ).

fof(kb_SUMO_1574,axiom,
    s__subclass(s__CaseRole,s__InheritableRelation) ).

fof(kb_SUMO_1575,axiom,
    s__instance(s__CaseRole__t,s__SetOrClass) ).

fof(kb_SUMO_1576,axiom,
    s__subclass(s__CaseRole,s__AsymmetricRelation) ).

fof(kb_SUMO_1577,axiom,
    s__documentation(s__CaseRole,s__EnglishLanguage,'The &%Class of &%Predicates relating the spatially distinguished parts of a &%Process. &%CaseRoles include, for example, the &%agent, &%patient or &%destination of an action, the flammable substance in a burning process, or the water that falls in rain.') ).

fof(kb_SUMO_1578,axiom,
    s__documentation(s__involvedInEvent__m,s__EnglishLanguage,'(involvedInEvent ?EVENT ?THING) means that in the &%Process ?EVENT, the &%Entity ?THING plays some &%CaseRole.') ).

fof(kb_SUMO_1579,axiom,
    s__instance(s__involvedInEvent__m,s__BinaryPredicate) ).

fof(kb_SUMO_1580,axiom,
    s__instance(s__involvedInEvent__m,s__AsymmetricRelation) ).

fof(kb_SUMO_1581,axiom,
    s__domain(s__involvedInEvent__m,"1",s__Process) ).

fof(kb_SUMO_1582,axiom,
    s__domain(s__involvedInEvent__m,"2",s__Entity) ).

fof(kb_SUMO_1583,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Relation)
     => ( s__instance(V__R,s__CaseRole)
       => s__subrelation(V__R,s__involvedInEvent__m) ) ) ).

fof(kb_SUMO_1584,axiom,
    s__instance(s__agent__m,s__CaseRole) ).

fof(kb_SUMO_1585,axiom,
    s__domain(s__agent__m,"1",s__Process) ).

fof(kb_SUMO_1586,axiom,
    s__domain(s__agent__m,"2",s__Agent) ).

fof(kb_SUMO_1587,axiom,
    s__subrelation(s__agent__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1588,axiom,
    s__documentation(s__agent__m,s__EnglishLanguage,'(&%agent ?PROCESS ?AGENT) means that ?AGENT is an active determinant, either animate or inanimate, of the &%Process ?PROCESS, with or without voluntary intention. For example, Eve is an &%agent in the following proposition: Eve bit an apple.') ).

fof(kb_SUMO_1589,axiom,
    s__instance(s__destination__m,s__CaseRole) ).

fof(kb_SUMO_1590,axiom,
    s__domain(s__destination__m,"1",s__Process) ).

fof(kb_SUMO_1591,axiom,
    s__domain(s__destination__m,"2",s__Entity) ).

fof(kb_SUMO_1592,axiom,
    s__subrelation(s__destination__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1593,axiom,
    s__documentation(s__destination__m,s__EnglishLanguage,'(destination ?PROCESS ?GOAL) means that ?GOAL is the target or goal of the Process ?PROCESS. For example, Danbury would be the destination in the following proposition: Bob went to Danbury. Note that this is a very general &%CaseRole and, in particular, that it covers the concepts of recipient and beneficiary. Thus, John would be the &%destination in the following proposition: Tom gave a book to John.') ).

fof(kb_SUMO_1594,axiom,
    s__instance(s__experiencer__m,s__CaseRole) ).

fof(kb_SUMO_1595,axiom,
    s__domain(s__experiencer__m,"1",s__Process) ).

fof(kb_SUMO_1596,axiom,
    s__domain(s__experiencer__m,"2",s__Agent) ).

fof(kb_SUMO_1597,axiom,
    s__subrelation(s__experiencer__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1598,axiom,
    s__documentation(s__experiencer__m,s__EnglishLanguage,'(&%experiencer ?PROCESS ?AGENT) means that ?AGENT experiences the &%Process ?PROCESS. For example, Yojo is the &%experiencer of seeing in the following proposition: Yojo sees the fish. Note that &%experiencer, unlike &%agent, does not entail a causal relation between its arguments.') ).

fof(kb_SUMO_1599,axiom,
    s__subrelation(s__instrument__m,s__patient__m) ).

fof(kb_SUMO_1600,axiom,
    s__domain(s__instrument__m,"1",s__Process) ).

fof(kb_SUMO_1601,axiom,
    s__domain(s__instrument__m,"2",s__Object) ).

fof(kb_SUMO_1602,axiom,
    s__documentation(s__instrument__m,s__EnglishLanguage,'(instrument ?EVENT ?TOOL) means that ?TOOL is used by an agent in bringing about ?EVENT and that ?TOOL is not changed by ?EVENT. For example, the key is an &%instrument in the following proposition: The key opened the door. Note that &%instrument and &%resource cannot be satisfied by the same ordered pair.') ).

fof(kb_SUMO_1603,axiom,
    s__instance(s__origin__m,s__CaseRole) ).

fof(kb_SUMO_1604,axiom,
    s__domain(s__origin__m,"1",s__Process) ).

fof(kb_SUMO_1605,axiom,
    s__domain(s__origin__m,"2",s__Object) ).

fof(kb_SUMO_1606,axiom,
    s__subrelation(s__origin__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1607,axiom,
    s__documentation(s__origin__m,s__EnglishLanguage,'(&%origin ?PROCESS ?SOURCE) means that ?SOURCE indicates where the ?Process began. Note that this relation implies that ?SOURCE is present at the beginning of the process, but need not participate throughout the process. For example, the submarine is the &%origin in the following proposition: the missile was launched from a submarine.') ).

fof(kb_SUMO_1608,axiom,
    s__instance(s__patient__m,s__CaseRole) ).

fof(kb_SUMO_1609,axiom,
    s__domain(s__patient__m,"1",s__Process) ).

fof(kb_SUMO_1610,axiom,
    s__domain(s__patient__m,"2",s__Entity) ).

fof(kb_SUMO_1611,axiom,
    s__subrelation(s__patient__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1612,axiom,
    s__documentation(s__patient__m,s__EnglishLanguage,'(&%patient ?PROCESS ?ENTITY) means that ?ENTITY is a participant in ?PROCESS that may be moved, said, experienced, etc. For example, the direct objects in the sentences The cat swallowed the canary and Billy likes the beer would be examples of &%patients. Note that the &%patient of a &%Process may or may not undergo structural change as a result of the &%Process. The &%CaseRole of &%patient is used when one wants to specify as broadly as possible the object of a &%Process.') ).

fof(kb_SUMO_1613,axiom,
    s__subrelation(s__resource__m,s__patient__m) ).

fof(kb_SUMO_1614,axiom,
    s__domain(s__resource__m,"1",s__Process) ).

fof(kb_SUMO_1615,axiom,
    s__domain(s__resource__m,"2",s__Object) ).

fof(kb_SUMO_1616,axiom,
    s__disjointRelation(s__resource__m,s__result__m) ).

fof(kb_SUMO_1617,axiom,
    s__disjointRelation(s__resource__m,s__instrument__m) ).

fof(kb_SUMO_1618,axiom,
    s__disjointRelation(s__result__m,s__instrument__m) ).

fof(kb_SUMO_1619,axiom,
    s__documentation(s__resource__m,s__EnglishLanguage,'(&%resource ?PROCESS ?RESOURCE) means that ?RESOURCE is present at the beginning of ?PROCESS, is used by ?PROCESS, and as a consequence is changed by ?PROCESS. For example, soap is a &%resource in the following proposition: the gun was carved out of soap. Note that &%resource differs from &%instrument, another subrelation of &%patient, in that its internal or physical properties are altered in some way by the &%Process.') ).

fof(kb_SUMO_1620,axiom,
    s__subrelation(s__result__m,s__patient__m) ).

fof(kb_SUMO_1621,axiom,
    s__domain(s__result__m,"1",s__Process) ).

fof(kb_SUMO_1622,axiom,
    s__domain(s__result__m,"2",s__Entity) ).

fof(kb_SUMO_1623,axiom,
    s__documentation(s__result__m,s__EnglishLanguage,'(result ?ACTION ?OUTPUT) means that ?OUTPUT is a product of ?ACTION. For example, house is a &%result in the following proposition: Eric built a house.') ).

fof(kb_SUMO_1624,axiom,
    s__subclass(s__InheritableRelation,s__Relation) ).

fof(kb_SUMO_1625,axiom,
    s__documentation(s__InheritableRelation,s__EnglishLanguage,'The class of &%Relations whose properties can be inherited downward in the class hierarchy via the &%subrelation &%Predicate.') ).

fof(kb_SUMO_1626,axiom,
    s__subclass(s__ProbabilityRelation,s__Relation) ).

fof(kb_SUMO_1627,axiom,
    s__subclass(s__ProbabilityRelation,s__InheritableRelation) ).

fof(kb_SUMO_1628,axiom,
    s__documentation(s__ProbabilityRelation,s__EnglishLanguage,'The &%Class of &%Relations that permit assessment of the probability of an event or situation.') ).

fof(kb_SUMO_1629,axiom,
    s__instance(s__ProbabilityFn__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1630,axiom,
    s__instance(s__ProbabilityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_1631,axiom,
    s__instance(s__ProbabilityFn__m,s__UnaryFunction) ).

fof(kb_SUMO_1632,axiom,
    s__domain(s__ProbabilityFn__m,"1",s__Formula) ).

fof(kb_SUMO_1633,axiom,
    s__range(s__ProbabilityFn__m,s__RealNumber) ).

fof(kb_SUMO_1634,axiom,
    s__instance(s__ProbabilityFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_1635,axiom,
    s__documentation(s__ProbabilityFn__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations, &%ProbabilityFn is used to state the a priori probability of a state of affairs. (&%ProbabilityFn ?FORMULA) denotes the a priori probability of ?FORMULA.') ).

fof(kb_SUMO_1636,axiom,
    s__instance(s__conditionalProbability__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1637,axiom,
    s__instance(s__conditionalProbability__m,s__TernaryPredicate) ).

fof(kb_SUMO_1638,axiom,
    s__domain(s__conditionalProbability__m,"1",s__Formula) ).

fof(kb_SUMO_1639,axiom,
    s__domain(s__conditionalProbability__m,"2",s__Formula) ).

fof(kb_SUMO_1640,axiom,
    s__domain(s__conditionalProbability__m,"3",s__RealNumber) ).

fof(kb_SUMO_1641,axiom,
    s__documentation(s__conditionalProbability__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. &%conditionalProbability is used to state the numeric value of a conditional probability. (&%conditionalProbability ?FORMULA1 ?FORMULA2 ?NUMBER) means that the probability of ?FORMULA2 being true given that ?FORMULA1 is true is ?NUMBER.') ).

fof(kb_SUMO_1642,axiom,
    s__instance(s__increasesLikelihood__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1643,axiom,
    s__instance(s__increasesLikelihood__m,s__BinaryPredicate) ).

fof(kb_SUMO_1644,axiom,
    s__instance(s__increasesLikelihood__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_1645,axiom,
    s__domain(s__increasesLikelihood__m,"1",s__Formula) ).

fof(kb_SUMO_1646,axiom,
    s__domain(s__increasesLikelihood__m,"2",s__Formula) ).

fof(kb_SUMO_1647,axiom,
    s__disjointRelation(s__increasesLikelihood__m,s__decreasesLikelihood__m) ).

fof(kb_SUMO_1648,axiom,
    s__disjointRelation(s__increasesLikelihood__m,s__independentProbability__m) ).

fof(kb_SUMO_1649,axiom,
    s__disjointRelation(s__decreasesLikelihood__m,s__independentProbability__m) ).

fof(kb_SUMO_1650,axiom,
    s__documentation(s__increasesLikelihood__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%increasesLikelihood ?FORMULA1 ?FORMULA2) means that ?FORMULA2 is more likely to be true if ?FORMULA1 is true.') ).

fof(kb_SUMO_1651,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__increasesLikelihood(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => greater(V__NUMBER2,V__NUMBER1) ) ) ).

fof(kb_SUMO_1652,axiom,
    s__instance(s__decreasesLikelihood__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1653,axiom,
    s__instance(s__ProbabilityRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1654,axiom,
    s__instance(s__decreasesLikelihood__m,s__BinaryPredicate) ).

fof(kb_SUMO_1655,axiom,
    s__instance(s__decreasesLikelihood__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_1656,axiom,
    s__domain(s__decreasesLikelihood__m,"1",s__Formula) ).

fof(kb_SUMO_1657,axiom,
    s__domain(s__decreasesLikelihood__m,"2",s__Formula) ).

fof(kb_SUMO_1658,axiom,
    s__documentation(s__decreasesLikelihood__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%decreasesLikelihood ?FORMULA1 ?FORMULA2) means that ?FORMULA2 is less likely to be true if ?FORMULA1 is true.') ).

fof(kb_SUMO_1659,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__decreasesLikelihood(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => less(V__NUMBER2,V__NUMBER1) ) ) ).

fof(kb_SUMO_1660,axiom,
    s__instance(s__independentProbability__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1661,axiom,
    s__instance(s__independentProbability__m,s__BinaryPredicate) ).

fof(kb_SUMO_1662,axiom,
    s__instance(s__independentProbability__m,s__SymmetricRelation) ).

fof(kb_SUMO_1663,axiom,
    s__domain(s__independentProbability__m,"1",s__Formula) ).

fof(kb_SUMO_1664,axiom,
    s__domain(s__independentProbability__m,"2",s__Formula) ).

fof(kb_SUMO_1665,axiom,
    s__documentation(s__independentProbability__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%independentProbability ?FORMULA1 ?FORMULA2) means that the probabilities of ?FORMULA1 and ?FORMULA2 being true are independent.') ).

fof(kb_SUMO_1666,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__independentProbability(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => V__NUMBER2 = V__NUMBER1 ) ) ).

fof(kb_SUMO_1667,axiom,
    ! [V__FORMULA1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__FORMULA2,s__Formula) )
     => ( s__increasesLikelihood(V__FORMULA1,V__FORMULA2)
        | s__decreasesLikelihood(V__FORMULA1,V__FORMULA2)
        | s__independentProbability(V__FORMULA1,V__FORMULA2) ) ) ).

fof(kb_SUMO_1668,axiom,
    s__subclass(s__SpatialRelation,s__Relation) ).

fof(kb_SUMO_1669,axiom,
    s__subclass(s__SpatialRelation,s__InheritableRelation) ).

fof(kb_SUMO_1670,axiom,
    s__documentation(s__SpatialRelation,s__EnglishLanguage,'The &%Class of &%Relations that are spatial in a wide sense. This &%Class includes mereological relations and topological relations.') ).

fof(kb_SUMO_1671,axiom,
    s__subclass(s__TemporalRelation,s__Relation) ).

fof(kb_SUMO_1672,axiom,
    s__instance(s__Relation__t,s__SetOrClass) ).

fof(kb_SUMO_1673,axiom,
    s__subclass(s__TemporalRelation,s__InheritableRelation) ).

fof(kb_SUMO_1674,axiom,
    s__documentation(s__TemporalRelation,s__EnglishLanguage,'The &%Class of temporal &%Relations. This &%Class includes notions of (temporal) topology of intervals, (temporal) schemata, and (temporal) extension.') ).

fof(kb_SUMO_1675,axiom,
    s__subclass(s__IntentionalRelation,s__InheritableRelation) ).

fof(kb_SUMO_1676,axiom,
    s__subclass(s__IntentionalRelation,s__Relation) ).

fof(kb_SUMO_1677,axiom,
    s__documentation(s__IntentionalRelation,s__EnglishLanguage,'The &%Class of &%Relations between an &%Agent and one or more &%Entities, where the &%Relation requires that the &%Agent have awareness of the &%Entity.') ).

fof(kb_SUMO_1678,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( ( s__inScopeOfInterest(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1679,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__ServiceProcess)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( ( s__serviceProvider(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1680,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__disapproves(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1681,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__dislikes(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1682,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__knows(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1683,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__desires(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1684,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( ( s__domesticPartner(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1685,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__considers(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1686,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__believes(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1687,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__prefers(V__AGENT,V__ROW1,V__ROW2)
          & s__inList(V__OBJ,s__ListFn_2(V__ROW1,V__ROW2)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1688,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__wants(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1689,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__ServiceProcess)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( ( s__serviceRecipient(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1690,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__doubts(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1691,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__needs(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1692,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( ( s__friend(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1693,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( ( s__cohabitant(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1694,axiom,
    s__instance(s__prefers__m,s__TernaryPredicate) ).

fof(kb_SUMO_1695,axiom,
    s__instance(s__prefers__m,s__IntentionalRelation) ).

fof(kb_SUMO_1696,axiom,
    s__instance(s__IntentionalRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1697,axiom,
    s__domain(s__prefers__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1698,axiom,
    s__domain(s__prefers__m,"2",s__Formula) ).

fof(kb_SUMO_1699,axiom,
    s__domain(s__prefers__m,"3",s__Formula) ).

fof(kb_SUMO_1700,axiom,
    s__documentation(s__prefers__m,s__EnglishLanguage,'(&%prefers ?AGENT ?FORMULA1 ?FORMULA2) means that &%CognitiveAgent ?AGENT prefers the state of affairs expressed by ?FORMULA1 over the state of affairs expressed by ?FORMULA2 all things being equal.') ).

fof(kb_SUMO_1701,axiom,
    s__subclass(s__PropositionalAttitude,s__IntentionalRelation) ).

fof(kb_SUMO_1702,axiom,
    s__instance(s__PropositionalAttitude__t,s__SetOrClass) ).

fof(kb_SUMO_1703,axiom,
    s__subclass(s__PropositionalAttitude,s__AsymmetricRelation) ).

fof(kb_SUMO_1704,axiom,
    s__subclass(s__PropositionalAttitude,s__InheritableRelation) ).

fof(kb_SUMO_1705,axiom,
    s__documentation(s__PropositionalAttitude,s__EnglishLanguage,'The &%Class of &%IntentionalRelations where the &%Agent has awareness of a &%Proposition.') ).

fof(kb_SUMO_1706,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1707,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__considers(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1708,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__believes(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1709,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__disapproves(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1710,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__doubts(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1711,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__desires(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1712,axiom,
    s__subclass(s__ObjectAttitude,s__IntentionalRelation) ).

fof(kb_SUMO_1713,axiom,
    s__subclass(s__ObjectAttitude,s__InheritableRelation) ).

fof(kb_SUMO_1714,axiom,
    s__disjoint(s__ObjectAttitude,s__PropositionalAttitude) ).

fof(kb_SUMO_1715,axiom,
    s__documentation(s__ObjectAttitude,s__EnglishLanguage,'The &%Class of &%IntentionalRelations where the &%Agent has awareness of an instance of &%Physical.') ).

fof(kb_SUMO_1716,axiom,
    ! [V__AGENT,V__THING] :
      ( ( s__instance(V__THING,s__Object)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( s__dislikes(V__AGENT,V__THING)
       => s__instance(V__THING,s__Physical) ) ) ).

fof(kb_SUMO_1717,axiom,
    ! [V__AGENT,V__THING] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__wants(V__AGENT,V__THING)
       => s__instance(V__THING,s__Physical) ) ) ).

fof(kb_SUMO_1718,axiom,
    ! [V__AGENT,V__THING] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__needs(V__AGENT,V__THING)
       => s__instance(V__THING,s__Physical) ) ) ).

fof(kb_SUMO_1719,axiom,
    s__instance(s__inScopeOfInterest__m,s__BinaryPredicate) ).

fof(kb_SUMO_1720,axiom,
    s__instance(s__inScopeOfInterest__m,s__IntentionalRelation) ).

fof(kb_SUMO_1721,axiom,
    s__domain(s__inScopeOfInterest__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1722,axiom,
    s__domain(s__inScopeOfInterest__m,"2",s__Entity) ).

fof(kb_SUMO_1723,axiom,
    s__documentation(s__inScopeOfInterest__m,s__EnglishLanguage,'A very general &%Predicate. (&%inScopeOfInterest ?AGENT ?ENTITY) means that ?ENTITY is within the scope of interest of ?AGENT. Note that the interest indicated can be either positive or negative, i.e. the ?AGENT can have an interest in avoiding or promoting ?ENTITY.') ).

fof(kb_SUMO_1724,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__instance(V__PROCESS,s__IntentionalProcess)
            & s__agent(V__PROCESS,V__AGENT)
            & s__patient(V__PROCESS,V__OBJECT) )
      <=> s__inScopeOfInterest(V__AGENT,V__OBJECT) ) ) ).

fof(kb_SUMO_1725,axiom,
    s__instance(s__needs__m,s__ObjectAttitude) ).

fof(kb_SUMO_1726,axiom,
    s__instance(s__needs__m,s__BinaryPredicate) ).

fof(kb_SUMO_1727,axiom,
    s__subrelation(s__needs__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1728,axiom,
    s__domain(s__needs__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1729,axiom,
    s__domain(s__needs__m,"2",s__Physical) ).

fof(kb_SUMO_1730,axiom,
    s__documentation(s__needs__m,s__EnglishLanguage,'(&%needs ?AGENT ?OBJECT) means that ?OBJECT is physically required for the continued existence of ?AGENT.') ).

fof(kb_SUMO_1731,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__OBJECT,s__Physical) )
     => ( s__needs(V__AGENT,V__OBJECT)
       => s__wants(V__AGENT,V__OBJECT) ) ) ).

fof(kb_SUMO_1732,axiom,
    s__instance(s__wants__m,s__ObjectAttitude) ).

fof(kb_SUMO_1733,axiom,
    s__instance(s__ObjectAttitude__t,s__SetOrClass) ).

fof(kb_SUMO_1734,axiom,
    s__instance(s__wants__m,s__BinaryPredicate) ).

fof(kb_SUMO_1735,axiom,
    s__subrelation(s__wants__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1736,axiom,
    s__relatedInternalConcept(s__wants__m,s__desires__m) ).

fof(kb_SUMO_1737,axiom,
    s__domain(s__wants__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1738,axiom,
    s__domain(s__wants__m,"2",s__Physical) ).

fof(kb_SUMO_1739,axiom,
    s__documentation(s__wants__m,s__EnglishLanguage,'(&%wants ?AGENT ?OBJECT) means that ?OBJECT is desired by ?AGENT, i.e. ?AGENT believes that ?OBJECT will satisfy one of its goals. Note that there is no implication that what is wanted by an agent is not already possessed by the agent.') ).

fof(kb_SUMO_1740,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__OBJ,s__Physical) )
     => ( s__wants(V__AGENT,V__OBJ)
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurposeForAgent(V__OBJ,V__PURP,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_1741,axiom,(( (! [V__OBJ,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__OBJ,s__Object)) => (s__wants(V__AGENT,V__OBJ) => s__desires(V__AGENT,'s__possesses(V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_1742,axiom,
    s__instance(s__desires__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1743,axiom,
    s__instance(s__desires__m,s__BinaryPredicate) ).

fof(kb_SUMO_1744,axiom,
    s__subrelation(s__desires__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1745,axiom,
    s__relatedInternalConcept(s__desires__m,s__wants__m) ).

fof(kb_SUMO_1746,axiom,
    s__domain(s__desires__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1747,axiom,
    s__domain(s__desires__m,"2",s__Formula) ).

fof(kb_SUMO_1748,axiom,
    s__documentation(s__desires__m,s__EnglishLanguage,'(&%desires ?AGENT ?FORMULA) means that ?AGENT wants to bring about the state of affairs expressed by ?FORMULA. Note that there is no implication that what is desired by the agent is not already true. Note too that &%desires is distinguished from &%wants only in that the former is a &%PropositionalAttitude, while &%wants is an &%ObjectAttitude.') ).

fof(kb_SUMO_1749,axiom,
    s__instance(s__considers__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1750,axiom,
    s__instance(s__considers__m,s__BinaryPredicate) ).

fof(kb_SUMO_1751,axiom,
    s__subrelation(s__considers__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1752,axiom,
    s__domain(s__considers__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1753,axiom,
    s__domain(s__considers__m,"2",s__Formula) ).

fof(kb_SUMO_1754,axiom,
    s__documentation(s__considers__m,s__EnglishLanguage,'(&%considers ?AGENT ?FORMULA) means that ?AGENT considers or wonders about the truth of the proposition expressed by ?FORMULA.') ).

fof(kb_SUMO_1755,axiom,
    s__instance(s__believes__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1756,axiom,
    s__instance(s__believes__m,s__BinaryPredicate) ).

fof(kb_SUMO_1757,axiom,
    s__subrelation(s__believes__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1758,axiom,
    s__domain(s__believes__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1759,axiom,
    s__domain(s__believes__m,"2",s__Formula) ).

fof(kb_SUMO_1760,axiom,
    s__documentation(s__believes__m,s__EnglishLanguage,'The epistemic predicate of belief. (&%believes ?AGENT ?FORMULA) means that ?AGENT believes the proposition expressed by ?FORMULA.') ).

%FOL fof(kb_SUMO_1761,axiom,(( (! [V__FORMULA,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__FORMULA,s__Formula)) => (s__believes(V__AGENT,V__FORMULA) => (? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__considers(V__AGENT,V__FORMULA)')))))) ))).

fof(kb_SUMO_1762,axiom,
    s__instance(s__knows__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1763,axiom,
    s__instance(s__knows__m,s__BinaryPredicate) ).

fof(kb_SUMO_1764,axiom,
    s__subrelation(s__knows__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1765,axiom,
    s__domain(s__knows__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1766,axiom,
    s__domain(s__knows__m,"2",s__Formula) ).

fof(kb_SUMO_1767,axiom,
    s__documentation(s__knows__m,s__EnglishLanguage,'The epistemic predicate of knowing. (&%knows ?AGENT ?FORMULA) means that ?AGENT knows the proposition expressed by ?FORMULA. Note that &%knows entails conscious awareness, so this &%Predicate cannot be used to express tacit or subconscious or unconscious knowledge.') ).

fof(kb_SUMO_1768,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__believes(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_1769,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__truth(V__FORMULA,'$true__m') ) ) ).

fof(kb_SUMO_1770,axiom,
    s__subclass(s__TernaryRelation,s__Relation) ).

fof(kb_SUMO_1771,axiom,
    s__subclass(s__TernaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1772,axiom,
    s__documentation(s__TernaryRelation,s__EnglishLanguage,'&%TernaryRelations relate three items. The two &%subclasses of &%TernaryRelation are &%TernaryPredicate and &%BinaryFunction.') ).

fof(kb_SUMO_1773,axiom,
    s__subclass(s__QuaternaryRelation,s__Relation) ).

fof(kb_SUMO_1774,axiom,
    s__subclass(s__QuaternaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1775,axiom,
    s__documentation(s__QuaternaryRelation,s__EnglishLanguage,'&%QuaternaryRelations relate four items. The two &%subclasses of &%QuaternaryRelation are &%QuaternaryPredicate and &%TernaryFunction.') ).

fof(kb_SUMO_1776,axiom,
    s__subclass(s__QuintaryRelation,s__Relation) ).

fof(kb_SUMO_1777,axiom,
    s__subclass(s__QuintaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1778,axiom,
    s__instance(s__QuintaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1779,axiom,
    s__documentation(s__QuintaryRelation,s__EnglishLanguage,'&%QuintaryRelations relate five items. The two &%subclasses of &%QuintaryRelation are &%QuintaryPredicate and &%QuaternaryFunction.') ).

fof(kb_SUMO_1780,axiom,
    s__subclass(s__List,s__Relation) ).

fof(kb_SUMO_1781,axiom,
    s__documentation(s__List,s__EnglishLanguage,'Every &%List is a particular ordered n-tuple of items. Generally speaking, &%Lists are created by means of the &%ListFn &%Function, which takes any number of items as arguments and returns a &%List with the items in the same order. Anything, including other &%Lists, may be an item in a &%List. Note too that &%Lists are extensional - two lists that have the same items in the same order are identical. Note too that a &%List may contain no items. In that case, the &%List is the &%NullList.') ).

fof(kb_SUMO_1782,axiom,
    ! [V__LIST] :
      ( ( s__instance(V__LIST,s__List)
        & ~ s__instance(V__LIST,s__NullList__m) )
     => ? [V__NUMBER1,V__ITEM1] :
          ( s__ListOrderFn(V__LIST,V__NUMBER1) != V__ITEM1
          & ! [V__NUMBER2] :
              ( s__instance(V__LIST,s__List)
             => ( ( s__instance(V__NUMBER2,s__PositiveInteger)
                  & less(V__NUMBER2,V__NUMBER1) )
               => ? [V__ITEM2] :
                    ( s__instance(V__NUMBER1,s__PositiveInteger)
                    & s__ListOrderFn(V__LIST,V__NUMBER2) = V__ITEM2 ) ) ) ) ) ).

fof(kb_SUMO_1783,axiom,
    s__subclass(s__UniqueList,s__List) ).

fof(kb_SUMO_1784,axiom,
    s__instance(s__UniqueList__t,s__SetOrClass) ).

fof(kb_SUMO_1785,axiom,
    s__documentation(s__UniqueList,s__EnglishLanguage,'A &%List in which no item appears more than once, i.e. a &%List for which there are no distinct numbers ?NUMBER1 and ?NUMBER2 such that (&%ListOrderFn ?LIST ?NUMBER1) and (&%ListOrderFn ?LIST ?NUMBER2) return the same value.') ).

fof(kb_SUMO_1786,axiom,
    ! [V__LIST] :
      ( s__instance(V__LIST,s__UniqueList)
     => ! [V__NUMBER1,V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__LIST,s__List) )
         => ( s__ListOrderFn(V__LIST,V__NUMBER1) = s__ListOrderFn(V__LIST,V__NUMBER2)
           => V__NUMBER1 = V__NUMBER2 ) ) ) ).

fof(kb_SUMO_1787,axiom,
    s__instance(s__NullList__m,s__List) ).

fof(kb_SUMO_1788,axiom,
    s__instance(s__List__t,s__SetOrClass) ).

fof(kb_SUMO_1789,axiom,
    s__documentation(s__NullList__m,s__EnglishLanguage,'The &%List that has no items. The uniqueness of &%NullList follows from the extensionality of &%Lists, i.e. the fact that two &%Lists with the same items in the same order are identical.') ).

fof(kb_SUMO_1790,axiom,
    ! [V__LIST] :
      ( V__LIST = s__NullList__m
    <=> ( s__instance(V__LIST,s__List)
        & ~ ? [V__ITEM] : s__inList(V__ITEM,V__LIST) ) ) ).

fof(kb_SUMO_1791,axiom,
    s__instance(s__ListFn__m,s__Function) ).

fof(kb_SUMO_1792,axiom,
    s__instance(s__ListFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_1793,axiom,
    s__range(s__ListFn__m,s__List) ).

fof(kb_SUMO_1794,axiom,
    s__documentation(s__ListFn__m,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ).

fof(kb_SUMO_1795,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__exhaustiveDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_1(V__ROW1))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1796,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__exhaustiveDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_2(V__ROW1,V__ROW2))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1797,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__exhaustiveDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1798,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__exhaustiveDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1799,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__exhaustiveDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1800,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__exhaustiveDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1801,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__exhaustiveDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1802,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__disjointDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_1(V__ROW1))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1803,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__disjointDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_2(V__ROW1,V__ROW2))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1804,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1805,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__disjointDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1806,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__disjointDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1807,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__disjointDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1808,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__disjointDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1809,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__disjointDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_1(V__ROW1))
              & s__inList(V__ITEM2,s__ListFn_1(V__ROW1))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1810,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__disjointDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_2(V__ROW1,V__ROW2))
              & s__inList(V__ITEM2,s__ListFn_2(V__ROW1,V__ROW2))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1811,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
              & s__inList(V__ITEM2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1812,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__disjointDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
              & s__inList(V__ITEM2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1813,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__disjointDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
              & s__inList(V__ITEM2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1814,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__disjointDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
              & s__inList(V__ITEM2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1815,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__disjointDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
              & s__inList(V__ITEM2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1816,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__CLASS,s__Class)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
      <=> ( s__disjoint(V__ROW1,V__ROW2)
          & s__disjoint(V__ROW2,V__ROW3)
          & s__disjoint(V__ROW3,V__ROW1) ) ) ) ).

fof(kb_SUMO_1817,axiom,
    s__instance(s__ListOrderFn__m,s__BinaryFunction) ).

fof(kb_SUMO_1818,axiom,
    s__instance(s__ListOrderFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_1819,axiom,
    s__domain(s__ListOrderFn__m,"1",s__List) ).

fof(kb_SUMO_1820,axiom,
    s__domain(s__ListOrderFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_1821,axiom,
    s__range(s__ListOrderFn__m,s__Entity) ).

fof(kb_SUMO_1822,axiom,
    s__documentation(s__ListOrderFn__m,s__EnglishLanguage,'(&%ListOrderFn ?LIST ?NUMBER) denotes the item that is in the ?NUMBER position in the &%List ?LIST. For example, (&%ListOrderFn (&%ListFn &%Monday &%Tuesday &%Wednesday) 2) would return the value &%Tuesday.') ).

fof(kb_SUMO_1823,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__instance(V__LIST1,s__List)
        & V__LIST1 != s__NullList__m
        & V__LIST2 != s__NullList__m
        & s__instance(V__LIST2,s__List)
        & ! [V__NUMBER] :
            ( ( s__instance(V__NUMBER,s__PositiveInteger)
              & s__instance(V__LIST1,s__List)
              & s__instance(V__LIST2,s__List) )
           => s__ListOrderFn(V__LIST1,V__NUMBER) = s__ListOrderFn(V__LIST2,V__NUMBER) ) )
     => V__LIST1 = V__LIST2 ) ).

fof(kb_SUMO_1824,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandmother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1825,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_1826,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1827,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Substance) ) ) ).

fof(kb_SUMO_1828,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__affiliatedOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1829,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1830,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__aunt(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1831,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__FieldOfStudy) )
     => ( s__subField(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__FieldOfStudy) ) ) ).

fof(kb_SUMO_1832,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1833,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1834,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__commentator(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1835,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postPostOfficeBox(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_1836,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_1837,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1838,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__customer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1839,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__gainsControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1840,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__discovers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1841,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_1842,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__FinancialTransaction) ) ) ).

fof(kb_SUMO_1843,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__fleetSize(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1844,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Nation) ) ) ).

fof(kb_SUMO_1845,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__ObjectiveNorm) ) ) ).

fof(kb_SUMO_1846,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_1847,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_1848,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1849,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Graph) ) ) ).

fof(kb_SUMO_1850,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ChangeOfControl) )
     => ( s__losesControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ChangeOfControl) ) ) ).

fof(kb_SUMO_1851,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1852,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1853,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Text) )
     => ( s__registeredItem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Text) ) ) ).

fof(kb_SUMO_1854,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_1855,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1856,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomExtension(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_1857,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CompoundSubstance)
        & s__instance(V__ROW1,s__CompoundSubstance) )
     => ( s__conjugate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CompoundSubstance) ) ) ).

fof(kb_SUMO_1858,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CareOrganization)
        & s__instance(V__ROW1,s__Human) )
     => ( s__medicalPatient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1859,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__hasAward(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1860,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__transported(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1861,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__NonnegativeInteger)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberTypeCount(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__NonnegativeInteger) ) ) ).

fof(kb_SUMO_1862,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subString(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1863,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalQuantity) ) ) ).

fof(kb_SUMO_1864,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__doubts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1865,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCoreNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_1866,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OrganicObject) ) ) ).

fof(kb_SUMO_1867,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_1868,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__carries(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1869,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"2"),s__CaseRole) ) ) ).

fof(kb_SUMO_1870,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1871,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Circle) ) ) ).

fof(kb_SUMO_1872,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__controlled(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__AchievingControl) ) ) ).

fof(kb_SUMO_1873,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1874,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1875,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CognitiveAgent)
        & s__instance(V__ROW3,s__Agreement)
        & s__instance(V__ROW2,s__DeonticAttribute)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__agreementClause(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_1876,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ColorAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__color(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ColorAttribute) ) ) ).

fof(kb_SUMO_1877,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DeviceStateAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__deviceState(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DeviceStateAttribute) ) ) ).

fof(kb_SUMO_1878,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Set) ) ) ).

fof(kb_SUMO_1879,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_1880,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_1881,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_1882,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_1883,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_1884,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_1885,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_1886,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__constructionPeriod(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__StationaryArtifact) ) ) ).

fof(kb_SUMO_1887,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__faxNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_1888,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__NonnegativeInteger)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberTypeCount(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Collection) ) ) ).

fof(kb_SUMO_1889,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepmother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1890,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualStranger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1891,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FormOfGovernment)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ideologicalAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1892,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TwoDimensionalAngle) ) ) ).

fof(kb_SUMO_1893,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RationalNumber)
        & s__instance(V__ROW1,s__Human) )
     => ( s__intelligenceQuotient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__RationalNumber) ) ) ).

fof(kb_SUMO_1894,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1895,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1896,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1897,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1898,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__operator(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1899,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1900,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1901,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1902,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__mobilePhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1903,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthday(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Day) ) ) ).

fof(kb_SUMO_1904,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Language) ) ) ).

fof(kb_SUMO_1905,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"4"),s__TimePosition) ) ) ).

fof(kb_SUMO_1906,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1907,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__familyName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1908,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CurrencyMeasure)
        & s__instance(V__ROW3,s__TimeDuration)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__monetaryWage(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1909,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Language) ) ) ).

fof(kb_SUMO_1910,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_1911,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__conforms(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1912,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1913,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_1914,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1915,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1916,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1917,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasExpertise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__FieldOfStudy) ) ) ).

fof(kb_SUMO_1918,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__deceptiveIdentifier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingObject) ) ) ).

fof(kb_SUMO_1919,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1920,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Organization) ) ) ).

fof(kb_SUMO_1921,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_1922,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__expects(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1923,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1924,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1925,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__niece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1926,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__alias(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1927,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__LegalAction) )
     => ( s__plaintiff(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__LegalAction) ) ) ).

fof(kb_SUMO_1928,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Circle) ) ) ).

fof(kb_SUMO_1929,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandparent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1930,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1931,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1932,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1933,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__PostalAddressText) )
     => ( s__postAddressText(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalAddressText) ) ) ).

fof(kb_SUMO_1934,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Artifact)
        & s__instance(V__ROW1,s__Device) )
     => ( s__powerPlant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Device) ) ) ).

fof(kb_SUMO_1935,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1936,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1937,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1938,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__contractor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1939,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1940,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepmother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Woman) ) ) ).

fof(kb_SUMO_1941,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepfather(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1942,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1943,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__fleetSize(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Integer) ) ) ).

fof(kb_SUMO_1944,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__locatedAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Object) ) ) ).

fof(kb_SUMO_1945,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PermanentResidence) ) ) ).

fof(kb_SUMO_1946,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1947,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__landlord(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1948,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1949,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__targetInAttack(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1950,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Quantity)
        & s__subclass(V__ROW2,s__Device)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Object) )
     => ( s__equipmentCount(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Quantity) ) ) ).

fof(kb_SUMO_1951,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeographicArea) ) ) ).

fof(kb_SUMO_1952,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1953,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__airTemperature(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1954,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Abstract) ) ) ).

fof(kb_SUMO_1955,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_1956,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_1957,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_1958,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_1959,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_1960,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_1961,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_1962,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__precedesInString(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1963,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MilitaryUnit)
        & s__instance(V__ROW1,s__MilitaryUnit) )
     => ( s__hostileForces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__MilitaryUnit) ) ) ).

fof(kb_SUMO_1964,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cohabitant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1965,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1966,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__anniversary(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1967,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1968,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_1969,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__expects(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1970,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localLongName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1971,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1972,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__Character) )
     => ( s__inString(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Character) ) ) ).

fof(kb_SUMO_1973,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementPeriod(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agreement) ) ) ).

fof(kb_SUMO_1974,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__floorCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1975,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Artifact)
        & s__instance(V__ROW1,s__Device) )
     => ( s__powerPlant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Artifact) ) ) ).

fof(kb_SUMO_1976,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TwoDimensionalObject)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__tangent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TwoDimensionalObject) ) ) ).

fof(kb_SUMO_1977,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Human)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinateInOrganization(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1978,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_1979,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Language) ) ) ).

fof(kb_SUMO_1980,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1981,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__locatedAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_1982,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1983,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postStreetNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_1984,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Argument) ) ) ).

fof(kb_SUMO_1985,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1986,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1987,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__FieldOfStudy) )
     => ( s__subField(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__FieldOfStudy) ) ) ).

fof(kb_SUMO_1988,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1989,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1990,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1991,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1992,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__controlled(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1993,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__workAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1994,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthdate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1995,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Experimenting) )
     => ( s__experimentalControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Experimenting) ) ) ).

fof(kb_SUMO_1996,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1997,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1998,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1999,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_2000,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2001,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__neighbor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2002,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2003,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Process)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEvent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__CaseRole) ) ) ).

fof(kb_SUMO_2004,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PlacingUnderArrest) )
     => ( s__arrested(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2005,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__City)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2006,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__HumanLanguage) ) ) ).

fof(kb_SUMO_2007,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2008,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__workPhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2009,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Agent) ) ) ).

fof(kb_SUMO_2010,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2011,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Language) ) ) ).

fof(kb_SUMO_2012,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_2013,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2014,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Radiating) )
     => ( s__wavelength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Radiating) ) ) ).

fof(kb_SUMO_2015,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localShortName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2016,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2017,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2018,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2019,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_2020,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Position)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinatePosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2021,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Relation) ) ) ).

fof(kb_SUMO_2022,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_2023,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthdate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Day) ) ) ).

fof(kb_SUMO_2024,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContactSite) )
     => ( s__siteForContact(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2025,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2026,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2027,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StructureAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__structure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2028,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_2029,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Human) ) ) ).

fof(kb_SUMO_2030,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2031,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__givenName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2032,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postPostOfficeBox(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2033,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__NonnegativeInteger) )
     => ( s__stringLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__NonnegativeInteger) ) ) ).

fof(kb_SUMO_2034,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__teacher(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2035,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DataStorageDevice)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__stored(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DataStorageDevice) ) ) ).

fof(kb_SUMO_2036,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2037,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2038,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DevelopmentalAttribute) ) ) ).

fof(kb_SUMO_2039,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__yearOfFounding(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Integer) ) ) ).

fof(kb_SUMO_2040,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Vehicle)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__onboard(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2041,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2042,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cohabitant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2043,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2044,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ancestorOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2045,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2046,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_2047,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__MassMeasure) ) ) ).

fof(kb_SUMO_2048,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Set) ) ) ).

fof(kb_SUMO_2049,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2050,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Position)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinatePosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Position) ) ) ).

fof(kb_SUMO_2051,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostcodeArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postPostcodeArea(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostcodeArea) ) ) ).

fof(kb_SUMO_2052,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2053,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2054,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2055,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CognitiveAgent)
        & s__instance(V__ROW3,s__Agreement)
        & s__instance(V__ROW2,s__DeonticAttribute)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__agreementClause(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"4"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2056,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphArc) ) ) ).

fof(kb_SUMO_2057,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Policy)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__policyOwner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Policy) ) ) ).

fof(kb_SUMO_2058,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BeliefGroup)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__religiousAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2059,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TransportationDevice)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__conveyance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TransportationDevice) ) ) ).

fof(kb_SUMO_2060,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_2061,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2062,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__domesticPartner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2063,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__TimePoint) ) ) ).

fof(kb_SUMO_2064,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__PostalAddressText) )
     => ( s__postAddressText(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2065,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2066,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__telephoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2067,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__insured(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organization) ) ) ).

fof(kb_SUMO_2068,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomExtension(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2069,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2070,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2071,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__headquartersOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_2072,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_2073,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_2074,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_2075,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_2076,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_2077,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_2078,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_2079,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CurrencyMeasure)
        & s__instance(V__ROW3,s__TimeDuration)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__monetaryWage(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"4"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_2080,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2081,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__gainsControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__AchievingControl) ) ) ).

fof(kb_SUMO_2082,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__sideOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2083,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2084,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localShortName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2085,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialSubject(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Sentence) ) ) ).

fof(kb_SUMO_2086,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2087,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__emailAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2088,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2089,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Animal)
        & s__instance(V__ROW1,s__Confining) )
     => ( s__detainee(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Animal) ) ) ).

fof(kb_SUMO_2090,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Relation) ) ) ).

fof(kb_SUMO_2091,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Demonstrating) ) ) ).

fof(kb_SUMO_2092,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CompoundSubstance)
        & s__instance(V__ROW1,s__CompoundSubstance) )
     => ( s__conjugate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CompoundSubstance) ) ) ).

fof(kb_SUMO_2093,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__protonNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2094,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2095,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localLongName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2096,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__friend(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2097,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BeliefGroup)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__religiousAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__BeliefGroup) ) ) ).

fof(kb_SUMO_2098,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2099,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementEffectiveDate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agreement) ) ) ).

fof(kb_SUMO_2100,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2101,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__PositionalAttribute) ) ) ).

fof(kb_SUMO_2102,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceRecipient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ServiceProcess) ) ) ).

fof(kb_SUMO_2103,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Quantity)
        & s__subclass(V__ROW2,s__Device)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Object) )
     => ( s__equipmentCount(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_2104,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCountry(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2105,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Shipping) )
     => ( s__cargo(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Shipping) ) ) ).

fof(kb_SUMO_2106,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2107,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2108,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__older(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2109,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Translocation) ) ) ).

fof(kb_SUMO_2110,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Position)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinatePosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Position) ) ) ).

fof(kb_SUMO_2111,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__customer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2112,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2113,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__Region) )
     => ( s__canonicalPlaceName(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Language) ) ) ).

fof(kb_SUMO_2114,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__coworker(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2115,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2116,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__NonnegativeInteger) )
     => ( s__stringLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2117,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2118,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2119,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postContactSite(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2120,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__headquartersOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2121,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2122,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Human) )
     => ( s__patientMedical(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2123,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Hole) ) ) ).

fof(kb_SUMO_2124,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceProvider(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ServiceProcess) ) ) ).

fof(kb_SUMO_2125,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__electronNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2126,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberType(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2127,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__NormativeAttribute) ) ) ).

fof(kb_SUMO_2128,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2129,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Graph) ) ) ).

fof(kb_SUMO_2130,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2131,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_2132,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2133,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_2134,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_2135,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2136,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2137,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2138,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCountry(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_2139,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2140,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_2141,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__disapproves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2142,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2143,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2144,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_2145,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePosition)
        & s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__memberAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2146,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCoreNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2147,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__mobilePhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2148,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_2149,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__record(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingObject) ) ) ).

fof(kb_SUMO_2150,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2151,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2152,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__deathdate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Day) ) ) ).

fof(kb_SUMO_2153,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2154,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementExpirationDate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2155,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__PowerSource) )
     => ( s__voltageMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PowerSource) ) ) ).

fof(kb_SUMO_2156,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2157,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Contest) )
     => ( s__contestParticipant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2158,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2159,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_2160,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__Phrase) )
     => ( s__grammaticalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Phrase) ) ) ).

fof(kb_SUMO_2161,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2162,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__student(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EducationalOrganization) ) ) ).

fof(kb_SUMO_2163,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Device)
        & s__instance(V__ROW1,s__Artifact) )
     => ( s__equipmentType(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Device) ) ) ).

fof(kb_SUMO_2164,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2165,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2166,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__WearableItem) ) ) ).

fof(kb_SUMO_2167,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2168,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2169,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__transported(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Transportation) ) ) ).

fof(kb_SUMO_2170,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2171,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_2172,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StructureAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__structure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__StructureAttribute) ) ) ).

fof(kb_SUMO_2173,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_2174,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Certificate) )
     => ( s__issuedBy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2175,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__City)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__City) ) ) ).

fof(kb_SUMO_2176,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TransportationDevice)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__conveyance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Transportation) ) ) ).

fof(kb_SUMO_2177,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Graph) ) ) ).

fof(kb_SUMO_2178,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2179,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_2180,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__Character) )
     => ( s__inString(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2181,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TruthValue) ) ) ).

fof(kb_SUMO_2182,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__emailAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2183,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2184,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Roadway)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postStreet(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2185,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_2186,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2187,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2188,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__stringConcatenation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2189,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2190,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Woman) ) ) ).

fof(kb_SUMO_2191,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__aunt(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_2192,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2193,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Animal)
        & s__instance(V__ROW1,s__Confining) )
     => ( s__detainee(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Confining) ) ) ).

fof(kb_SUMO_2194,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__allegiance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2195,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__discovers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2196,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_2197,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeographicArea)
        & s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__areaOfResponsibility(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2198,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2199,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FinancialTransaction)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2200,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Neighborhood)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postNeighborhood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Neighborhood) ) ) ).

fof(kb_SUMO_2201,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2202,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__NonnegativeInteger)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberTypeCount(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2203,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__anniversary(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2204,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__alias(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2205,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__SentientAgent) )
     => ( s__speaksLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SentientAgent) ) ) ).

fof(kb_SUMO_2206,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subString(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2207,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agreement)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__partyToAgreement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2208,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2209,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__conforms(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2210,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__RealNumber) ) ) ).

fof(kb_SUMO_2211,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__operator(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2212,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2213,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Vehicle)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__onboard(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Vehicle) ) ) ).

fof(kb_SUMO_2214,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"5"),s__Object) ) ) ).

fof(kb_SUMO_2215,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2216,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Collection) ) ) ).

fof(kb_SUMO_2217,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_2218,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__benefits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2219,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePosition) ) ) ).

fof(kb_SUMO_2220,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_2221,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_2222,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StateOrProvince)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postDistrict(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__StateOrProvince) ) ) ).

fof(kb_SUMO_2223,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2224,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2225,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__TimePoint) ) ) ).

fof(kb_SUMO_2226,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_2227,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContactSite) )
     => ( s__siteForContact(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContactSite) ) ) ).

fof(kb_SUMO_2228,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Device) )
     => ( s__effectiveRange(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2229,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__stringConcatenation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2230,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FinancialTransaction)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__FinancialTransaction) ) ) ).

fof(kb_SUMO_2231,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Formula) ) ) ).

fof(kb_SUMO_2232,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parasite(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2233,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__describes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2234,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__familyName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2235,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2236,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__WaterArea) )
     => ( s__waterDepth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__WaterArea) ) ) ).

fof(kb_SUMO_2237,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__Region) )
     => ( s__canonicalPlaceName(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2238,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2239,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__titles(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2240,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2241,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2242,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__Phrase) )
     => ( s__grammaticalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Sentence) ) ) ).

fof(kb_SUMO_2243,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__homePhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2244,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"4"),s__Object) ) ) ).

fof(kb_SUMO_2245,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2246,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2247,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__price(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_2248,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2249,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__inventory(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Collection) ) ) ).

fof(kb_SUMO_2250,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__UnitOfAtmosphericPressure) ) ) ).

fof(kb_SUMO_2251,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2252,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePosition)
        & s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__memberAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Collection) ) ) ).

fof(kb_SUMO_2253,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__targetInAttack(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2254,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ColorAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__color(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2255,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2256,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2257,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__UnitOfMeasure) ) ) ).

fof(kb_SUMO_2258,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_2259,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Shipping) )
     => ( s__cargo(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2260,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2261,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__WaterArea) )
     => ( s__waterDepth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2262,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CognitiveAgent)
        & s__instance(V__ROW3,s__Agreement)
        & s__instance(V__ROW2,s__DeonticAttribute)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__agreementClause(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"2"),s__DeonticAttribute) ) ) ).

fof(kb_SUMO_2263,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2264,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberType(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Collection) ) ) ).

fof(kb_SUMO_2265,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthday(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2266,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalGuardian(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2267,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2268,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomAreaCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2269,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2270,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__humanCapacity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__StationaryArtifact) ) ) ).

fof(kb_SUMO_2271,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__faxNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2272,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Object) ) ) ).

fof(kb_SUMO_2273,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__enjoys(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2274,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DataStorageDevice)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__stored(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingObject) ) ) ).

fof(kb_SUMO_2275,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GroupOfPeople)
        & s__instance(V__ROW1,s__Human) )
     => ( s__groupMember(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GroupOfPeople) ) ) ).

fof(kb_SUMO_2276,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2277,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__hasAward(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2278,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__contractor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__StationaryArtifact) ) ) ).

fof(kb_SUMO_2279,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__PermanentResidence) )
     => ( s__homeAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2280,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2281,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_2282,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__EngineeringConnection) ) ) ).

fof(kb_SUMO_2283,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2284,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandfather(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Man) ) ) ).

fof(kb_SUMO_2285,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CareOrganization)
        & s__instance(V__ROW1,s__Human) )
     => ( s__medicalPatient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CareOrganization) ) ) ).

fof(kb_SUMO_2286,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__student(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2287,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberCount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Integer) ) ) ).

fof(kb_SUMO_2288,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandmother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Woman) ) ) ).

fof(kb_SUMO_2289,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2290,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Relation) ) ) ).

fof(kb_SUMO_2291,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Man) ) ) ).

fof(kb_SUMO_2292,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ChangeOfControl) )
     => ( s__losesControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2293,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LegalAction)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__defendant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2294,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__constructionPeriod(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2295,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__coworker(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2296,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2297,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualStranger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2298,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__niece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_2299,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialSubject(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__NounPhrase) ) ) ).

fof(kb_SUMO_2300,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2301,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2302,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_2303,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__middleName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2304,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_2305,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__MeasuringDevice) )
     => ( s__measurementReading(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__MeasuringDevice) ) ) ).

fof(kb_SUMO_2306,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2307,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2308,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2309,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2310,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandparent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2311,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__birthplace(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_2312,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeographicArea)
        & s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__areaOfResponsibility(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__GeographicArea) ) ) ).

fof(kb_SUMO_2313,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Neighborhood)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postNeighborhood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2314,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Text) )
     => ( s__registeredItem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2315,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2316,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__deathplace(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_2317,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Plan) ) ) ).

fof(kb_SUMO_2318,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__record(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2319,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2320,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_2321,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Plan) ) ) ).

fof(kb_SUMO_2322,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2323,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Object) )
     => ( s__dateUsed(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_2324,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2325,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__deathplace(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2326,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelephonyDevice) )
     => ( s__telecomContactDevice(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2327,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Device) )
     => ( s__effectiveRange(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Device) ) ) ).

fof(kb_SUMO_2328,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__TwoDimensionalObject) )
     => ( s__sliceOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TwoDimensionalObject) ) ) ).

fof(kb_SUMO_2329,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reactant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Substance) ) ) ).

fof(kb_SUMO_2330,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2331,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__dislikes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2332,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2333,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2334,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2335,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reagent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ChemicalProcess) ) ) ).

fof(kb_SUMO_2336,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementExpirationDate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agreement) ) ) ).

fof(kb_SUMO_2337,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__stringConcatenation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2338,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__neighbor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2339,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__RealNumber) ) ) ).

fof(kb_SUMO_2340,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasOccupation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2341,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2342,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_2343,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FormOfGovernment)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ideologicalAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__FormOfGovernment) ) ) ).

fof(kb_SUMO_2344,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_2345,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__personalPhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2346,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__GraphNode) ) ) ).

fof(kb_SUMO_2347,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2348,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2349,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_2350,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasExpertise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2351,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__nephew(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_2352,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Experimenting) )
     => ( s__experimentalControl(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2353,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__floorCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2354,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__precedesInString(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2355,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__price(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2356,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__nephew(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2357,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePosition)
        & s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__memberAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__TimePosition) ) ) ).

fof(kb_SUMO_2358,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Set) ) ) ).

fof(kb_SUMO_2359,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2360,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_2361,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelephonyDevice)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__deviceTelecomNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2362,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__teacher(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EducationalOrganization) ) ) ).

fof(kb_SUMO_2363,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_2364,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2365,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_2366,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__axis(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2367,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__GraphNode) ) ) ).

fof(kb_SUMO_2368,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_2369,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostcodeArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postPostcodeArea(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2370,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2371,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2372,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_2373,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Day) ) ) ).

fof(kb_SUMO_2374,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2375,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Attribute) ) ) ).

fof(kb_SUMO_2376,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__ObjectiveNorm) ) ) ).

fof(kb_SUMO_2377,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalGuardian(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2378,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2379,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__disapproves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2380,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__workPhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2381,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"2"),s__Object) ) ) ).

fof(kb_SUMO_2382,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2383,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__axis(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2384,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCode2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2385,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2386,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__approves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2387,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2388,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandfather(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2389,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__airTemperature(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_2390,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_2391,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_2392,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2393,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemporaryResidence) ) ) ).

fof(kb_SUMO_2394,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reagent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Substance) ) ) ).

fof(kb_SUMO_2395,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2396,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2397,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Substance) ) ) ).

fof(kb_SUMO_2398,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2399,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_2400,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_2401,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_2402,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__sideOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_2403,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_2404,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2405,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCountryCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2406,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2407,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_2408,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TwoDimensionalAngle) ) ) ).

fof(kb_SUMO_2409,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Motion) ) ) ).

fof(kb_SUMO_2410,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCountryCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2411,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialObject(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__NounPhrase) ) ) ).

fof(kb_SUMO_2412,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_2413,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2414,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2415,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__deathdate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2416,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_2417,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2418,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2419,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Roadway)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postStreet(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Roadway) ) ) ).

fof(kb_SUMO_2420,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2421,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__birthplace(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2422,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CurrencyMeasure)
        & s__instance(V__ROW3,s__TimeDuration)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__monetaryWage(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"2"),s__Human) ) ) ).

fof(kb_SUMO_2423,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementPeriod(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2424,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Object) )
     => ( s__dateUsed(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2425,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2426,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_2427,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postContactSite(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2428,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphPath) ) ) ).

fof(kb_SUMO_2429,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2430,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2431,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2432,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__carries(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2433,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_2434,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2435,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2436,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__financialAsset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2437,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepfather(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Man) ) ) ).

fof(kb_SUMO_2438,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2439,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__electronNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2440,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2441,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2442,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__capacity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ConstantQuantity) ) ) ).

fof(kb_SUMO_2443,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomAreaCode(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2444,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GroupOfPeople)
        & s__instance(V__ROW1,s__Human) )
     => ( s__groupMember(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2445,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_2446,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__CaseRole) ) ) ).

fof(kb_SUMO_2447,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2448,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stranger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2449,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_2450,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__unitNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2451,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2452,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2453,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LegalAction)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__defendant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LegalAction) ) ) ).

fof(kb_SUMO_2454,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parasite(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2455,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RationalNumber)
        & s__instance(V__ROW1,s__Human) )
     => ( s__intelligenceQuotient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2456,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Sentence) ) ) ).

fof(kb_SUMO_2457,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2458,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2459,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2460,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Integer) ) ) ).

fof(kb_SUMO_2461,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2462,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__approves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2463,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2464,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__landlord(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PermanentResidence) ) ) ).

fof(kb_SUMO_2465,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_2466,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_2467,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2468,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Human) )
     => ( s__patientMedical(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2469,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2470,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StateOrProvince)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postDistrict(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2471,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2472,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2473,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__describes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2474,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2475,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agreement)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__partyToAgreement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agreement) ) ) ).

fof(kb_SUMO_2476,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2477,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__deceptiveIdentifier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2478,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"3"),s__Object) ) ) ).

fof(kb_SUMO_2479,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__LinguisticExpression) ) ) ).

fof(kb_SUMO_2480,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2481,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2482,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reactant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ChemicalProcess) ) ) ).

fof(kb_SUMO_2483,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__TwoDimensionalObject) )
     => ( s__sliceOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_2484,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2485,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2486,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2487,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2488,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Object) ) ) ).

fof(kb_SUMO_2489,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__GraphArc) ) ) ).

fof(kb_SUMO_2490,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2491,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2492,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2493,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_2494,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2495,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cousin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2496,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_2497,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelephonyDevice)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__deviceTelecomNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelephonyDevice) ) ) ).

fof(kb_SUMO_2498,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2499,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2500,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_2501,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__allegiance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2502,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2503,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__uncle(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2504,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Object) ) ) ).

fof(kb_SUMO_2505,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__UniformClothing)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Group) )
     => ( s__hasUniform(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Group) ) ) ).

fof(kb_SUMO_2506,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__doubts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2507,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_2508,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_2509,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2510,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Collection) ) ) ).

fof(kb_SUMO_2511,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Object) ) ) ).

fof(kb_SUMO_2512,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__Solution) )
     => ( s__potentialOfHydrogen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__RealNumber) ) ) ).

fof(kb_SUMO_2513,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_2514,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__Region) )
     => ( s__canonicalPlaceName(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Region) ) ) ).

fof(kb_SUMO_2515,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2516,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__price(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Agent) ) ) ).

fof(kb_SUMO_2517,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postStreetNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2518,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2519,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__LinguisticExpression) ) ) ).

fof(kb_SUMO_2520,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2521,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Language) ) ) ).

fof(kb_SUMO_2522,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__SentientAgent) )
     => ( s__speaksLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Language) ) ) ).

fof(kb_SUMO_2523,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__yearOfFounding(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2524,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Policy)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__policyOwner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2525,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceRecipient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2526,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__capacity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2527,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__affiliatedOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organization) ) ) ).

fof(kb_SUMO_2528,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_2529,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__precedesInString(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2530,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DirectionalAttribute) ) ) ).

fof(kb_SUMO_2531,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2532,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ancestorOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organization) ) ) ).

fof(kb_SUMO_2533,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__domesticPartner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2534,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2535,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2536,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Residence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__tenant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2537,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MilitaryUnit)
        & s__instance(V__ROW1,s__MilitaryUnit) )
     => ( s__hostileForces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__MilitaryUnit) ) ) ).

fof(kb_SUMO_2538,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__insured(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_2539,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2540,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2541,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2542,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2543,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2544,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2545,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__uncle(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_2546,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2547,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__givenName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2548,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_2549,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__workAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PostalPlace) ) ) ).

fof(kb_SUMO_2550,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Contest) )
     => ( s__contestParticipant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Contest) ) ) ).

fof(kb_SUMO_2551,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_2552,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Position) ) ) ).

fof(kb_SUMO_2553,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2554,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2555,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_2556,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cousin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2557,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_2558,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2559,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2560,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__LegalAction) )
     => ( s__plaintiff(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2561,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Collection) ) ) ).

fof(kb_SUMO_2562,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__telephoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2563,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Certificate) )
     => ( s__issuedBy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Certificate) ) ) ).

fof(kb_SUMO_2564,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2565,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Argument) ) ) ).

fof(kb_SUMO_2566,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2567,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DirectionalAttribute) ) ) ).

fof(kb_SUMO_2568,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2569,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Object) ) ) ).

fof(kb_SUMO_2570,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Human)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinateInOrganization(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Human) ) ) ).

fof(kb_SUMO_2571,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__benefits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2572,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2573,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_2574,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2575,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__Solution) )
     => ( s__potentialOfHydrogen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Solution) ) ) ).

fof(kb_SUMO_2576,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2577,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2578,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__locatedAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_2579,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Radiating) )
     => ( s__wavelength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2580,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_2581,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__PermanentResidence) )
     => ( s__homeAddress(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PermanentResidence) ) ) ).

fof(kb_SUMO_2582,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_2583,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_2584,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Device)
        & s__instance(V__ROW1,s__Artifact) )
     => ( s__equipmentType(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Artifact) ) ) ).

fof(kb_SUMO_2585,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_2586,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_2587,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2588,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PlacingUnderArrest) )
     => ( s__arrested(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PlacingUnderArrest) ) ) ).

fof(kb_SUMO_2589,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PlaneAngleMeasure) ) ) ).

fof(kb_SUMO_2590,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2591,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__protonNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2592,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__homePhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2593,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2594,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_2595,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Motion) ) ) ).

fof(kb_SUMO_2596,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Object) ) ) ).

fof(kb_SUMO_2597,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TwoDimensionalObject)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__tangent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_2598,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_2599,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DeviceStateAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__deviceState(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2600,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2601,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Process)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEvent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Process) ) ) ).

fof(kb_SUMO_2602,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__older(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_2603,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__TimePosition)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__dateEstablished(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2604,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementEffectiveDate(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2605,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2606,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Integer) ) ) ).

fof(kb_SUMO_2607,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CurrencyMeasure)
        & s__instance(V__ROW3,s__TimeDuration)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__monetaryWage(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"3"),s__TimeDuration) ) ) ).

fof(kb_SUMO_2608,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_2609,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2610,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__commentator(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2611,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Human)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinateInOrganization(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Human) ) ) ).

fof(kb_SUMO_2612,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2613,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Object) )
     => ( s__dateUsed(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Agent) ) ) ).

fof(kb_SUMO_2614,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2615,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2616,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organization) ) ) ).

fof(kb_SUMO_2617,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_2618,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_2619,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2620,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2621,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberCount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Collection) ) ) ).

fof(kb_SUMO_2622,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__friend(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2623,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stranger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2624,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2625,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CognitiveAgent)
        & s__instance(V__ROW3,s__Agreement)
        & s__instance(V__ROW2,s__DeonticAttribute)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__agreementClause(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"3"),s__Agreement) ) ) ).

fof(kb_SUMO_2626,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2627,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2628,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2629,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelephonyDevice) )
     => ( s__telecomContactDevice(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelephonyDevice) ) ) ).

fof(kb_SUMO_2630,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__middleName(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_2631,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialObject(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Sentence) ) ) ).

fof(kb_SUMO_2632,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphElement) ) ) ).

fof(kb_SUMO_2633,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2634,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__MeasuringDevice) )
     => ( s__measurementReading(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ConstantQuantity) ) ) ).

fof(kb_SUMO_2635,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2636,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2637,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCode2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2638,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2639,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2640,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2641,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2642,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__dislikes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2643,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2644,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePosition) ) ) ).

fof(kb_SUMO_2645,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__humanCapacity(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_2646,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__inventory(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingObject) ) ) ).

fof(kb_SUMO_2647,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_2648,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__unitNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2649,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceProvider(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_2650,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__financialAsset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2651,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__personalPhoneNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TelecomNumber) ) ) ).

fof(kb_SUMO_2652,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2653,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2654,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2655,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Process)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEvent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_2656,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2657,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__PowerSource) )
     => ( s__voltageMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalQuantity) ) ) ).

fof(kb_SUMO_2658,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeographicArea) ) ) ).

fof(kb_SUMO_2659,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Residence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__tenant(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Residence) ) ) ).

fof(kb_SUMO_2660,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2661,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Graph) ) ) ).

fof(kb_SUMO_2662,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__subclass(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"3"),s__Process) ) ) ).

fof(kb_SUMO_2663,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2664,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2665,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__titles(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2666,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Substance) ) ) ).

fof(kb_SUMO_2667,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2668,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2669,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2670,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2671,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2672,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2673,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2674,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2675,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Artifact) ) ) ).

fof(kb_SUMO_2676,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Artifact) ) ) ).

fof(kb_SUMO_2677,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2678,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2679,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__NaturalSubstance)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__OrganicObject)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__secretesSubstance(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OrganicObject) ) ) ).

fof(kb_SUMO_2680,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasOccupation(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__IntentionalProcess) ) ) ).

fof(kb_SUMO_2681,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__enjoys(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__IntentionalProcess) ) ) ).

fof(kb_SUMO_2682,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Process) ) ) ).

fof(kb_SUMO_2683,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2684,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2685,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__NaturalSubstance)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__OrganicObject)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__secretesSubstance(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__NaturalSubstance) ) ) ).

fof(kb_SUMO_2686,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2687,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__UniformClothing)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Group) )
     => ( s__hasUniform(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__UniformClothing) ) ) ).

fof(kb_SUMO_2688,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2689,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2690,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2691,axiom,
    ! [V__ROW1] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_1(V__ROW1)
       => s__subclass(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2692,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2693,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2694,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__subclass(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2695,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__subclass(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2696,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__subclass(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2697,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__subclass(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2698,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2699,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Quantity)
        & s__subclass(V__ROW2,s__Device)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Object) )
     => ( s__equipmentCount(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Device) ) ) ).

fof(kb_SUMO_2700,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ElementalSubstance) ) ) ).

fof(kb_SUMO_2701,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2702,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeographicArea)
        & s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__areaOfResponsibility(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Process) ) ) ).

fof(kb_SUMO_2703,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__TimePosition)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__dateEstablished(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_2704,axiom,
    s__instance(s__ListLengthFn__m,s__UnaryFunction) ).

fof(kb_SUMO_2705,axiom,
    s__instance(s__ListLengthFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_2706,axiom,
    s__domain(s__ListLengthFn__m,"1",s__List) ).

fof(kb_SUMO_2707,axiom,
    s__range(s__ListLengthFn__m,s__NonnegativeInteger) ).

fof(kb_SUMO_2708,axiom,
    s__documentation(s__ListLengthFn__m,s__EnglishLanguage,'A &%Function that takes a &%List as its sole argument and returns the number of items in the &%List. For example, (&%ListLengthFn (&%ListFn &%Monday &%Tuesday &%Wednesday)) would return the value 3.') ).

fof(kb_SUMO_2709,axiom,
    ! [V__NUMBER1,V__LIST] :
      ( ( s__ListLengthFn(V__LIST) = V__NUMBER1
        & s__instance(V__LIST,s__List)
        & V__LIST != s__NullList__m
        & s__instance(V__NUMBER1,s__PositiveInteger) )
     => ! [V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__LIST,s__List)
            & s__instance(V__NUMBER1,s__Quantity) )
         => ( ? [V__ITEM] :
                ( s__ListOrderFn(V__LIST,V__NUMBER2) = V__ITEM
                & s__inList(V__ITEM,V__LIST) )
          <=> lesseq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_2710,axiom,
    ! [V__ROW1,V__ITEM] : s__ListLengthFn(s__ListFn_2(V__ROW1,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_1(V__ROW1))) ).

fof(kb_SUMO_2711,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2))) ).

fof(kb_SUMO_2712,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))) ).

fof(kb_SUMO_2713,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))) ).

fof(kb_SUMO_2714,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))) ).

fof(kb_SUMO_2715,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))) ).

fof(kb_SUMO_2716,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ITEM] : s__ListLengthFn(s__ListFn_8(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))) ).

fof(kb_SUMO_2717,axiom,
    ! [V__ROW1,V__ITEM] : s__ListOrderFn(s__ListFn_2(V__ROW1,V__ITEM),s__ListLengthFn(s__ListFn_2(V__ROW1,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2718,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM),s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2719,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM),s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2720,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM),s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2721,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM),s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2722,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM),s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2723,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2724,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2725,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TwoDimensionalObject)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__tangent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2726,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2727,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__disapproves(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2728,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2729,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalGuardian(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2730,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2731,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2732,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2733,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2734,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__operator(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2735,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__mobilePhoneNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2736,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2737,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__describes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2738,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__immediateInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2739,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomAreaCode(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2740,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2741,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2742,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__fleetSize(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2743,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2744,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2745,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2746,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2747,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2748,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__Phrase) )
     => ( s__grammaticalRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2749,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__enjoys(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2750,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthday(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2751,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2752,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MilitaryUnit)
        & s__instance(V__ROW1,s__MilitaryUnit) )
     => ( s__hostileForces(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2753,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2754,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2755,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2756,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementEffectiveDate(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2757,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2758,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2759,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2760,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2761,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__doubts(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2762,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2763,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2764,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2765,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ColorAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__color(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2766,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__formerName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2767,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GroupOfPeople)
        & s__instance(V__ROW1,s__Human) )
     => ( s__groupMember(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2768,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__instance(V__ROW5,s__Object)
        & s__instance(V__ROW4,s__TimePosition)
        & s__subclass(V__ROW3,s__Process)
        & s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEventOfType(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)) = "5" ) ) ).

fof(kb_SUMO_2769,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2770,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2771,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2772,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__represents(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2773,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2774,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2775,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2776,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2777,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DataStorageDevice)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__stored(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2778,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__FieldOfStudy) )
     => ( s__subField(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2779,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__headquartersOfOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2780,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__friend(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2781,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__SentientAgent) )
     => ( s__speaksLanguage(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2782,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2783,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__hasAward(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2784,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2785,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2786,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2787,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2788,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2789,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2790,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2791,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__fears(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2792,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2793,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelephonyDevice) )
     => ( s__telecomContactDevice(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2794,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__birthdate(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2795,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Contest) )
     => ( s__contestParticipant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2796,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2797,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2798,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__TwoDimensionalObject) )
     => ( s__sliceOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2799,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2800,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2801,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2802,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__hopes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2803,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2804,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2805,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2806,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepfather(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2807,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2808,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2809,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2810,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2811,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__floorCode(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2812,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2813,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__benefits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2814,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2815,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2816,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parasite(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2817,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2818,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__aunt(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2819,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeographicArea)
        & s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__areaOfResponsibility(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2820,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2821,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualStranger(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2822,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__uncle(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2823,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__capacity(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2824,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2825,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2826,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Residence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__tenant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2827,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__immediateSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2828,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2829,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__price(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2830,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FinancialTransaction)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2831,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__affiliatedOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2832,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__third(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2833,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2834,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StructureAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__structure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2835,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2836,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2837,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2838,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__record(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2839,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2840,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2841,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cohabitant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2842,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__carries(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2843,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__LegalAction) )
     => ( s__plaintiff(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2844,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCoreNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2845,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2846,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2847,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2848,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2849,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Shipping) )
     => ( s__cargo(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2850,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Position)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinatePosition(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2851,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__locatedAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2852,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__Region) )
     => ( s__canonicalPlaceName(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2853,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2854,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2855,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Human) )
     => ( s__patientMedical(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2856,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2857,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__NonnegativeInteger) )
     => ( s__stringLength(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2858,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2859,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Human) )
     => ( s__deathdate(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2860,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2861,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2862,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__StateOrProvince)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postDistrict(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2863,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2864,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2865,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2866,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PlacingUnderArrest) )
     => ( s__arrested(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2867,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__cousin(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2868,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2869,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CareOrganization)
        & s__instance(V__ROW1,s__Human) )
     => ( s__medicalPatient(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2870,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2871,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2872,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)) = "4" ) ) ).

fof(kb_SUMO_2873,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LegalAction)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__defendant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2874,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__dislikes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2875,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__stringConcatenation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2876,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reactant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2877,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Animal)
        & s__instance(V__ROW1,s__Confining) )
     => ( s__detainee(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2878,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2879,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostcodeArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postPostcodeArea(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2880,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2881,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__PermanentResidence) )
     => ( s__homeAddress(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2882,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2883,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ConstantQuantity)
        & s__instance(V__ROW1,s__MeasuringDevice) )
     => ( s__measurementReading(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2884,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Agent)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Object) )
     => ( s__dateUsed(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2885,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2886,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2887,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2888,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2889,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2890,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2891,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FormOfGovernment)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ideologicalAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2892,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2893,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2894,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localLongName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2895,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2896,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2897,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2898,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2899,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomExtension(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2900,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__approves(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2901,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2902,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2903,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2904,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2905,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__inventory(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2906,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberType(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2907,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__sideOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2908,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__half(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2909,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__emailAddress(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2910,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2911,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__City)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCity(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2912,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__familyName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2913,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2914,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2915,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CurrencyMeasure)
        & s__instance(V__ROW3,s__TimeDuration)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__monetaryWage(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)) = "4" ) ) ).

fof(kb_SUMO_2916,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__synonymousExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2917,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCode2(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2918,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__PowerSource) )
     => ( s__voltageMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2919,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__niece(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2920,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2921,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementExpirationDate(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2922,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2923,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__workAddress(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2924,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__middleName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2925,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2926,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Device)
        & s__instance(V__ROW1,s__Artifact) )
     => ( s__equipmentType(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2927,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2928,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2929,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__givenName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2930,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2931,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__uniqueIdentifier(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2932,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2933,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__NaturalSubstance)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__OrganicObject)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__secretesSubstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2934,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__localShortName(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2935,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__FieldOfStudy)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasExpertise(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2936,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2937,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2938,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Process)
        & s__instance(V__ROW2,s__CaseRole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__playsRoleInEvent(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2939,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2940,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandmother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2941,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2942,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2943,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2944,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Human)
        & s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subordinateInOrganization(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2945,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__allegiance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2946,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2947,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__coworker(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2948,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2949,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__crosses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2950,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__anniversary(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2951,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2952,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__completelyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2953,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceProvider(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2954,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__ServiceProcess) )
     => ( s__serviceRecipient(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2955,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__telephoneNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2956,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subString(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2957,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelecomNumber)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__telecomCountryCode(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2958,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2959,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2960,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Certificate) )
     => ( s__issuedBy(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2961,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2962,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2963,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2964,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2965,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__quarter(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2966,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__teacher(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2967,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__UniformClothing)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Group) )
     => ( s__hasUniform(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2968,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2969,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2970,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__nephew(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2971,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2972,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__faxNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2973,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2974,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2975,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__axis(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2976,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2977,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__landlord(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2978,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__most(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2979,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__superficialPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2980,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__Agreement) )
     => ( s__agreementPeriod(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2981,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__gainsControl(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2982,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2983,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2984,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2985,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2986,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Device) )
     => ( s__effectiveRange(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2987,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2988,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2989,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2990,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2991,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__meetsSpatially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2992,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2993,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__financialAsset(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2994,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2995,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2996,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2997,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2998,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2999,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3000,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Roadway)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postStreet(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3001,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__airTemperature(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3002,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3003,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandfather(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3004,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RationalNumber)
        & s__instance(V__ROW1,s__Human) )
     => ( s__intelligenceQuotient(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3005,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3006,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3007,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3008,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3009,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3010,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TransportationDevice)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__conveyance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3011,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__precedesInString(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3012,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3013,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__CognitiveAgent)
        & s__instance(V__ROW3,s__Agreement)
        & s__instance(V__ROW2,s__DeonticAttribute)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__agreementClause(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)) = "4" ) ) ).

fof(kb_SUMO_3014,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EducationalOrganization)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__student(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3015,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__homePhoneNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3016,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__AchievingControl) )
     => ( s__controlled(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3017,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__insured(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3018,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3019,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3020,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__personalPhoneNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3021,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__ancestorOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3022,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3023,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3024,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SymbolicString)
        & s__instance(V__ROW1,s__Character) )
     => ( s__inString(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3025,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Neighborhood)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postNeighborhood(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3026,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__yearOfFounding(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3027,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__IntentionalProcess)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Human) )
     => ( s__hasOccupation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3028,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3029,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3030,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stranger(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3031,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Policy)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__policyOwner(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3032,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__WaterArea) )
     => ( s__waterDepth(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3033,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3034,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3035,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3036,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3037,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__workPhoneNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3038,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CompoundSubstance)
        & s__instance(V__ROW1,s__CompoundSubstance) )
     => ( s__conjugate(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3039,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ChangeOfControl) )
     => ( s__losesControl(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3040,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Object) )
     => ( s__conforms(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3041,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3042,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__TimePosition)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__dateEstablished(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3043,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Experimenting) )
     => ( s__experimentalControl(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3044,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3045,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__older(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3046,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3047,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__ChemicalProcess) )
     => ( s__reagent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3048,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3049,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3050,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__commentator(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3051,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3052,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__altitude(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3053,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__length(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3054,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3055,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3056,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__deathplace(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3057,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__interiorPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3058,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3059,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__lacks(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3060,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stepmother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3061,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__birthplace(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3062,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3063,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialSubject(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3064,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__NonnegativeInteger)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberTypeCount(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3065,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_3066,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__constructionPeriod(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3067,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__exactlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3068,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3069,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3070,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agreement)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__partyToAgreement(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3071,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3072,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3073,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumingExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3074,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3075,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3076,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePosition)
        & s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__memberAtTime(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3077,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3078,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3079,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3080,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__depth(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3081,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Artifact)
        & s__instance(V__ROW1,s__Device) )
     => ( s__powerPlant(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3082,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Radiating) )
     => ( s__wavelength(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3083,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3084,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Text) )
     => ( s__registeredItem(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3085,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__discovers(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3086,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3087,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postContactSite(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3088,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3089,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3090,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__domesticPartner(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3091,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__Solution) )
     => ( s__potentialOfHydrogen(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3092,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3093,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3094,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3095,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__electronNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3096,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3097,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3098,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__initialList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3099,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3100,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3101,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3102,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3103,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__PureSubstance) )
     => ( s__protonNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3104,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContentBearingObject) )
     => ( s__deceptiveIdentifier(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3105,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DeviceStateAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__deviceState(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3106,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__expects(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3107,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Sentence)
        & s__instance(V__ROW1,s__NounPhrase) )
     => ( s__sententialObject(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3108,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__neighbor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3109,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__targetInAttack(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3110,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsPartially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3111,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__contractor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3112,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__width(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3113,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Transportation) )
     => ( s__transported(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3114,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3115,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3116,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__unitNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3117,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsSpatially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3118,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3119,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__located(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3120,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__PostalAddressText) )
     => ( s__postAddressText(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3121,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3122,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__memberCount(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3123,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__titles(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3124,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3125,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__StationaryArtifact) )
     => ( s__humanCapacity(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3126,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3127,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Quantity)
        & s__subclass(V__ROW2,s__Device)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Object) )
     => ( s__equipmentCount(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3128,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postStreetNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3129,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3130,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3131,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3132,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3133,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3134,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3135,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3136,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BeliefGroup)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__religiousAffiliationOfOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3137,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PostalPlace)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__postPostOfficeBox(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3138,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__ContactSite) )
     => ( s__siteForContact(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3139,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_3140,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3141,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3142,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3143,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__alias(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3144,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3145,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TelephonyDevice)
        & s__instance(V__ROW1,s__TelecomNumber) )
     => ( s__deviceTelecomNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3146,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Vehicle)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__onboard(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3147,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3148,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3149,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3150,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3151,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3152,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__grandparent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3153,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3154,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__customer(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3155,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__PostalPlace) )
     => ( s__postCountry(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3156,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3157,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_3158,axiom,
    ! [V__NUMBER,V__LIST1,V__NUMBER1,V__LIST] :
      ( ( s__instance(V__LIST1,s__List)
        & s__instance(V__NUMBER,s__Integer) )
     => ( ( s__ListLengthFn(V__LIST1) = V__NUMBER
          & s__instance(V__LIST,s__List)
          & V__LIST != s__NullList__m
          & s__instance(V__NUMBER1,s__PositiveInteger) )
       => ? [V__LIST2,V__ITEM] :
            ( s__instance(V__LIST2,s__List)
            & s__initialList(V__LIST1,V__LIST2)
            & s__SuccessorFn(V__NUMBER) = s__ListLengthFn(V__LIST2)
            & s__ListOrderFn(V__LIST2,s__SuccessorFn(V__NUMBER)) = V__ITEM ) ) ) ).

fof(kb_SUMO_3159,axiom,
    s__instance(s__ListConcatenateFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3160,axiom,
    s__instance(s__ListConcatenateFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3161,axiom,
    s__domain(s__ListConcatenateFn__m,"1",s__List) ).

fof(kb_SUMO_3162,axiom,
    s__domain(s__ListConcatenateFn__m,"2",s__List) ).

fof(kb_SUMO_3163,axiom,
    s__range(s__ListConcatenateFn__m,s__List) ).

fof(kb_SUMO_3164,axiom,
    s__documentation(s__ListConcatenateFn__m,s__EnglishLanguage,'A &%Function that returns the concatenation of the two &%Lists that are given as arguments. For example, the value of (&%ListConcatenateFn (&%ListFn &%Monday &%Tuesday) (&%ListFn &%Wednesday &%Thursday)) would be (&%ListFn &%Monday &%Tuesday &%Wednesday &%Thursday).') ).

%----Commented out because it causes a contradiction
% fof(kb_SUMO_3165,axiom,(
%     ! [V__LIST3,V__LIST2,V__LIST1] :
%       ( ( V__LIST3 = s__ListConcatenateFn(V__LIST1,V__LIST2)
%         & ~ s__equals(V__LIST1,s__NullList__m)
%         & ~ s__equals(V__LIST2,s__NullList__m) )
%     <=> ! [V__NUMBER1,V__NUMBER2] :
%           ( ( s__instance(V__LIST1,s__List)
%             & s__instance(V__LIST2,s__List)
%             & s__instance(V__LIST3,s__List) )
%          => ( ( lesseq(V__NUMBER1,s__ListLengthFn(V__LIST1))
%               & lesseq(V__NUMBER2,s__ListLengthFn(V__LIST2))
%               & s__instance(V__NUMBER1,s__PositiveInteger)
%               & s__instance(V__NUMBER2,s__PositiveInteger) )
%            => ( s__ListOrderFn(V__LIST3,V__NUMBER1) = s__ListOrderFn(V__LIST1,V__NUMBER1)
%               & s__ListOrderFn(V__LIST3,plus(s__ListLengthFn(V__LIST1),V__NUMBER2)) = s__ListOrderFn(V__LIST2,V__NUMBER2) ) ) ) ) )).

fof(kb_SUMO_3166,axiom,
    s__instance(s__inList__m,s__BinaryPredicate) ).

fof(kb_SUMO_3167,axiom,
    s__instance(s__inList__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3168,axiom,
    s__instance(s__inList__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3169,axiom,
    s__domain(s__inList__m,"1",s__Entity) ).

fof(kb_SUMO_3170,axiom,
    s__domain(s__inList__m,"2",s__List) ).

fof(kb_SUMO_3171,axiom,
    s__documentation(s__inList__m,s__EnglishLanguage,'The analog of &%element and &%instance for &%Lists. (&%inList ?OBJ ?LIST) means that ?OBJ is in the &%List ?LIST. For example, (&%inList &%Tuesday (&%ListFn &%Monday &%Tuesday &%Wednesday)) would be true.') ).

fof(kb_SUMO_3172,axiom,
    ! [V__ITEM,V__LIST] :
      ( s__instance(V__LIST,s__List)
     => ( s__inList(V__ITEM,V__LIST)
       => ? [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
            & s__ListOrderFn(V__LIST,V__NUMBER) = V__ITEM ) ) ) ).

fof(kb_SUMO_3173,axiom,
    s__instance(s__subList__m,s__BinaryPredicate) ).

fof(kb_SUMO_3174,axiom,
    s__instance(s__subList__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_3175,axiom,
    s__domain(s__subList__m,"1",s__List) ).

fof(kb_SUMO_3176,axiom,
    s__domain(s__subList__m,"2",s__List) ).

fof(kb_SUMO_3177,axiom,
    s__documentation(s__subList__m,s__EnglishLanguage,'(&%subList ?LIST1 ?LIST2) means that ?LIST1 is a sublist of ?LIST2, i.e. every element of ?LIST1 is an element of ?LIST2 and the elements that are common to both &%Lists have the same order in both &%Lists. Elements that are common to both Lists and are consecutive in one list must also be consecutive in the other list. (Therefore - the list of prime numbers smaller than 10 [1 2 3 5 7] is not a subList of the natural numbers smaller than 10 [1 2 3 4 5 6 7 8 9]).') ).

fof(kb_SUMO_3178,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__subList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ! [V__ITEM] :
          ( ( s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( s__inList(V__ITEM,V__LIST1)
           => s__inList(V__ITEM,V__LIST2) ) ) ) ).

fof(kb_SUMO_3179,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__subList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ? [V__NUMBER3] :
        ! [V__ITEM] :
          ( ( s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( s__inList(V__ITEM,V__LIST1)
           => ? [V__NUMBER1,V__NUMBER2] :
                ( s__instance(V__NUMBER2,s__PositiveInteger)
                & s__instance(V__NUMBER1,s__PositiveInteger)
                & s__instance(V__NUMBER3,s__Quantity)
                & s__ListOrderFn(V__LIST1,V__NUMBER1) = V__ITEM
                & s__ListOrderFn(V__LIST2,V__NUMBER2) = V__ITEM
                & V__NUMBER2 = plus(V__NUMBER1,V__NUMBER3) ) ) ) ) ).

fof(kb_SUMO_3180,axiom,
    s__instance(s__initialList__m,s__BinaryPredicate) ).

fof(kb_SUMO_3181,axiom,
    s__instance(s__initialList__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_3182,axiom,
    s__subrelation(s__initialList__m,s__subList__m) ).

fof(kb_SUMO_3183,axiom,
    s__documentation(s__initialList__m,s__EnglishLanguage,'(&%initialList ?LIST1 ?LIST2) means that ?LIST1 is a &%subList of ?LIST2 and (&%ListOrderFn ?LIST1 ?NUMBER) returns the same value as (&%ListOrderFn ?LIST2 ?NUMBER) for all of the values of ?NUMBER over which (&%ListOrderFn ?LIST1 ?NUMBER) is defined.') ).

fof(kb_SUMO_3184,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__initialList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ! [V__NUMBER1,V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( ( s__ListLengthFn(V__LIST1) = V__NUMBER1
              & lesseq(V__NUMBER2,V__NUMBER1) )
           => s__ListOrderFn(V__LIST1,V__NUMBER2) = s__ListOrderFn(V__LIST2,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_3185,axiom,
    ! [V__ROW1,V__ITEM] : s__initialList(s__ListFn_1(V__ROW1),s__ListFn_2(V__ROW1,V__ITEM)) ).

fof(kb_SUMO_3186,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__initialList(s__ListFn_2(V__ROW1,V__ROW2),s__ListFn_3(V__ROW1,V__ROW2,V__ITEM)) ).

fof(kb_SUMO_3187,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__initialList(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM)) ).

fof(kb_SUMO_3188,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__initialList(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM)) ).

fof(kb_SUMO_3189,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__initialList(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM)) ).

fof(kb_SUMO_3190,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__initialList(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM)) ).

fof(kb_SUMO_3191,axiom,
    s__instance(s__identicalListItems__m,s__BinaryPredicate) ).

fof(kb_SUMO_3192,axiom,
    s__instance(s__identicalListItems__m,s__EquivalenceRelation) ).

fof(kb_SUMO_3193,axiom,
    s__domain(s__identicalListItems__m,"1",s__List) ).

fof(kb_SUMO_3194,axiom,
    s__domain(s__identicalListItems__m,"2",s__List) ).

fof(kb_SUMO_3195,axiom,
    s__documentation(s__identicalListItems__m,s__EnglishLanguage,'(&%identicalListItems ?LIST1 ?LIST2) means that ?LIST1 and ?LIST2 have exactly the same items in their respective lists. Although ?LIST1 and ?LIST2 are required to share exactly the same items, they may order these items differently.') ).

fof(kb_SUMO_3196,axiom,
    ! [V__ITEM,V__LIST2,V__LIST1] :
      ( ( s__instance(V__LIST1,s__List)
        & s__instance(V__LIST2,s__List) )
     => ( ( s__identicalListItems(V__LIST1,V__LIST2)
          & ~ s__equals(V__LIST1,s__NullList__m)
          & ~ s__equals(V__LIST2,s__NullList__m) )
       => ( s__inList(V__ITEM,V__LIST1)
        <=> s__inList(V__ITEM,V__LIST2) ) ) ) ).

fof(kb_SUMO_3197,axiom,
    s__subclass(s__Predicate,s__Relation) ).

fof(kb_SUMO_3198,axiom,
    s__subclass(s__Predicate,s__InheritableRelation) ).

fof(kb_SUMO_3199,axiom,
    s__instance(s__Predicate__t,s__SetOrClass) ).

fof(kb_SUMO_3200,axiom,
    s__instance(s__InheritableRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3201,axiom,
    s__documentation(s__Predicate,s__EnglishLanguage,'A &%Predicate is a sentence-forming &%Relation. Each tuple in the &%Relation is a finite, ordered sequence of objects. The fact that a particular tuple is an element of a &%Predicate is denoted by (*predicate* arg_1 arg_2 .. arg_n), where the arg_i are the objects so related. In the case of &%BinaryPredicates, the fact can be read as `arg_1 is *predicate* arg_2 or `a *predicate* of arg_1 is arg_2.') ).

fof(kb_SUMO_3202,axiom,
    s__subclass(s__Function,s__SingleValuedRelation) ).

fof(kb_SUMO_3203,axiom,
    s__subclass(s__Function,s__InheritableRelation) ).

fof(kb_SUMO_3204,axiom,
    s__documentation(s__Function,s__EnglishLanguage,'A &%Function is a term-forming &%Relation that maps from a n-tuple of arguments to a range and that associates this n-tuple with at most one range element. Note that the range is a &%SetOrClass, and each element of the range is an instance of the &%SetOrClass.') ).

fof(kb_SUMO_3205,axiom,
    s__subclass(s__UnaryFunction,s__Function) ).

fof(kb_SUMO_3206,axiom,
    s__subclass(s__UnaryFunction,s__BinaryRelation) ).

fof(kb_SUMO_3207,axiom,
    s__subclass(s__UnaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_3208,axiom,
    s__documentation(s__UnaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require a single argument.') ).

fof(kb_SUMO_3209,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__UnaryFunction)
       => s__valence(V__FUNCTION,"1") ) ) ).

fof(kb_SUMO_3210,axiom,
    s__subclass(s__OneToOneFunction,s__UnaryFunction) ).

fof(kb_SUMO_3211,axiom,
    s__instance(s__OneToOneFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3212,axiom,
    s__documentation(s__OneToOneFunction,s__EnglishLanguage,'The &%Class of &%UnaryFunctions which are one to one. A function F is one to one just in case for all X, Y in the domain of F, if X is not identical to Y, then F(X) is not identical to F(Y).') ).

fof(kb_SUMO_3213,axiom,
    ! [V__FUN,V__CLASS] :
      ( s__instance(V__FUN,s__OneToOneFunction)
     => ! [V__ARG1,V__ARG2] :
          ( ( s__instance(V__CLASS,s__SetOrClass)
            & s__instance(V__FUN,s__Function) )
         => ( ( s__domain(V__FUN,"1",V__CLASS)
              & s__instance(V__ARG1,V__CLASS)
              & s__instance(V__ARG2,V__CLASS)
              & V__ARG1 != V__ARG2 )
           => s__AssignmentFn_2(V__FUN,V__ARG1) != s__AssignmentFn_2(V__FUN,V__ARG2) ) ) ) ).

fof(kb_SUMO_3214,axiom,
    s__subclass(s__SequenceFunction,s__OneToOneFunction) ).

fof(kb_SUMO_3215,axiom,
    s__instance(s__SequenceFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3216,axiom,
    s__documentation(s__SequenceFunction,s__EnglishLanguage,'The &%Class of &%OneToOneFunctions whose range is a subclass of the &%PositiveIntegers.') ).

fof(kb_SUMO_3217,axiom,
    ! [V__CLASS,V__SEQ] :
      ( ( s__instance(V__SEQ,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__SEQ,s__SequenceFunction)
          & s__range(V__SEQ,V__CLASS) )
       => s__subclass(V__CLASS,s__Integer) ) ) ).

fof(kb_SUMO_3218,axiom,
    s__subclass(s__BinaryFunction,s__Function) ).

fof(kb_SUMO_3219,axiom,
    s__subclass(s__BinaryFunction,s__TernaryRelation) ).

fof(kb_SUMO_3220,axiom,
    s__subclass(s__BinaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_3221,axiom,
    s__documentation(s__BinaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require two arguments.') ).

fof(kb_SUMO_3222,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__BinaryFunction)
       => s__valence(V__FUNCTION,"2") ) ) ).

fof(kb_SUMO_3223,axiom,
    s__subclass(s__AssociativeFunction,s__BinaryFunction) ).

fof(kb_SUMO_3224,axiom,
    s__instance(s__AssociativeFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3225,axiom,
    s__documentation(s__AssociativeFunction,s__EnglishLanguage,'A &%BinaryFunction is associative if bracketing has no effect on the value returned by the &%Function. More precisely, a &%Function ?FUNCTION is associative just in case (?FUNCTION ?INST1 (?FUNCTION ?INST2 ?INST3)) is equal to (?FUNCTION (?FUNCTION ?INST1 ?INST2) ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_3226,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__AssociativeFunction)
     => ! [V__INST1,V__INST2,V__INST3] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS)
              & s__instance(V__INST3,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__INST1,s__AssignmentFn_3(V__FUNCTION,V__INST2,V__INST3)) = s__AssignmentFn_3(V__FUNCTION,s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2),V__INST3) ) ) ) ).

fof(kb_SUMO_3227,axiom,
    s__subclass(s__CommutativeFunction,s__BinaryFunction) ).

fof(kb_SUMO_3228,axiom,
    s__documentation(s__CommutativeFunction,s__EnglishLanguage,'A &%BinaryFunction is commutative if the ordering of the arguments of the function has no effect on the value returned by the function. More precisely, a function ?FUNCTION is commutative just in case (?FUNCTION ?INST1 ?INST2) is equal to (?FUNCTION ?INST2 ?INST1), for all ?INST1 and ?INST2.') ).

fof(kb_SUMO_3229,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__CommutativeFunction)
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2) = s__AssignmentFn_3(V__FUNCTION,V__INST2,V__INST1) ) ) ) ).

fof(kb_SUMO_3230,axiom,
    s__subclass(s__TernaryFunction,s__Function) ).

fof(kb_SUMO_3231,axiom,
    s__instance(s__TernaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3232,axiom,
    s__instance(s__Function__t,s__SetOrClass) ).

fof(kb_SUMO_3233,axiom,
    s__subclass(s__TernaryFunction,s__QuaternaryRelation) ).

fof(kb_SUMO_3234,axiom,
    s__instance(s__QuaternaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3235,axiom,
    s__subclass(s__TernaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_3236,axiom,
    s__documentation(s__TernaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require exactly three arguments.') ).

fof(kb_SUMO_3237,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__TernaryFunction)
       => s__valence(V__FUNCTION,"3") ) ) ).

fof(kb_SUMO_3238,axiom,
    s__subclass(s__QuaternaryFunction,s__Function) ).

fof(kb_SUMO_3239,axiom,
    s__subclass(s__QuaternaryFunction,s__QuintaryRelation) ).

fof(kb_SUMO_3240,axiom,
    s__subclass(s__QuaternaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_3241,axiom,
    s__documentation(s__QuaternaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require exactly four arguments.') ).

fof(kb_SUMO_3242,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__QuaternaryFunction)
       => s__valence(V__FUNCTION,"4") ) ) ).

fof(kb_SUMO_3243,axiom,
    s__subclass(s__ContinuousFunction,s__Function) ).

fof(kb_SUMO_3244,axiom,
    s__instance(s__ContinuousFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3245,axiom,
    s__documentation(s__ContinuousFunction,s__EnglishLanguage,'&%Functions which are continuous. This concept is taken as primitive until representations for limits are devised.') ).

fof(kb_SUMO_3246,axiom,
    s__subclass(s__BinaryPredicate,s__Predicate) ).

fof(kb_SUMO_3247,axiom,
    s__subclass(s__BinaryPredicate,s__BinaryRelation) ).

fof(kb_SUMO_3248,axiom,
    s__instance(s__BinaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3249,axiom,
    s__subclass(s__BinaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_3250,axiom,
    s__documentation(s__BinaryPredicate,s__EnglishLanguage,'A &%Predicate relating two items - its valence is two.') ).

fof(kb_SUMO_3251,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__BinaryPredicate)
       => s__valence(V__REL,"2") ) ) ).

fof(kb_SUMO_3252,axiom,
    s__subclass(s__TernaryPredicate,s__Predicate) ).

fof(kb_SUMO_3253,axiom,
    s__subclass(s__TernaryPredicate,s__TernaryRelation) ).

fof(kb_SUMO_3254,axiom,
    s__instance(s__TernaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3255,axiom,
    s__subclass(s__TernaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_3256,axiom,
    s__documentation(s__TernaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require exactly three arguments.') ).

fof(kb_SUMO_3257,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__TernaryPredicate)
       => s__valence(V__REL,"3") ) ) ).

fof(kb_SUMO_3258,axiom,
    s__subclass(s__QuaternaryPredicate,s__Predicate) ).

fof(kb_SUMO_3259,axiom,
    s__subclass(s__QuaternaryPredicate,s__QuaternaryRelation) ).

fof(kb_SUMO_3260,axiom,
    s__subclass(s__QuaternaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_3261,axiom,
    s__instance(s__QuaternaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_3262,axiom,
    s__documentation(s__QuaternaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require four arguments.') ).

fof(kb_SUMO_3263,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__QuaternaryPredicate)
       => s__valence(V__REL,"4") ) ) ).

fof(kb_SUMO_3264,axiom,
    s__subclass(s__QuintaryPredicate,s__Predicate) ).

fof(kb_SUMO_3265,axiom,
    s__subclass(s__QuintaryPredicate,s__QuintaryRelation) ).

fof(kb_SUMO_3266,axiom,
    s__subclass(s__QuintaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_3267,axiom,
    s__instance(s__QuintaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_3268,axiom,
    s__documentation(s__QuintaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require five arguments.') ).

fof(kb_SUMO_3269,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__QuintaryPredicate)
       => s__valence(V__REL,"5") ) ) ).

fof(kb_SUMO_3270,axiom,
    s__subclass(s__VariableArityRelation,s__Relation) ).

fof(kb_SUMO_3271,axiom,
    s__documentation(s__VariableArityRelation,s__EnglishLanguage,'The &%Class of &%Relations that do not have a fixed number of arguments.') ).

fof(kb_SUMO_3272,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__VariableArityRelation)
       => ~ ? [V__INT] :
              ( s__instance(V__INT,s__PositiveInteger)
              & s__valence(V__REL,V__INT) ) ) ) ).

fof(kb_SUMO_3273,axiom,
    s__subclass(s__RelationExtendedToQuantities,s__Relation) ).

fof(kb_SUMO_3274,axiom,
    s__subclass(s__RelationExtendedToQuantities,s__InheritableRelation) ).

fof(kb_SUMO_3275,axiom,
    s__documentation(s__RelationExtendedToQuantities,s__EnglishLanguage,'A &%RelationExtendedToQuantities is a &%Relation that, when it is true on a sequence of arguments that are &%RealNumbers, it is also true on a sequence of instances of &%ConstantQuantity with those magnitudes in some unit of measure. For example, the &%lessThan relation is extended to quantities. This means that for all pairs of quantities ?QUANTITY1 and ?QUANTITY2, (&%lessThan ?QUANTITY1 ?QUANTITY2) if and only if, for some ?NUMBER1, ?NUMBER2, and ?UNIT, ?QUANTITY1 = (&%MeasureFn ?NUMBER1 ?UNIT), ?QUANTITY2 = (&%MeasureFn ?NUMBER2 ?UNIT), and (&%lessThan ?NUMBER1 ?NUMBER2), for all units ?UNIT on which ?QUANTITY1 and ?QUANTITY2 can be measured. Note that, when a &%RelationExtendedToQuantities is extended from &%RealNumbers to instances of &%ConstantQuantity, the &%ConstantQuantity must be measured along the same physical dimension.') ).

fof(kb_SUMO_3276,axiom,
    s__subclass(s__LogicalOperator,s__Predicate) ).

fof(kb_SUMO_3277,axiom,
    s__instance(s__LogicalOperator__t,s__SetOrClass) ).

fof(kb_SUMO_3278,axiom,
    s__documentation(s__LogicalOperator,s__EnglishLanguage,'This &%Class comprises all of the logical operators (viz. and, or, not, =>, and <=>).') ).

fof(kb_SUMO_3279,axiom,
    s__subclass(s__Proposition,s__Abstract) ).

fof(kb_SUMO_3280,axiom,
    s__documentation(s__Proposition,s__EnglishLanguage,'&%Propositions are &%Abstract entities that express a complete thought or a set of such thoughts. As an example, the formula (instance Yojo Cat) expresses the &%Proposition that the entity named Yojo is an element of the &%Class of Cats. Note that propositions are not restricted to the content expressed by individual sentences of a &%Language. They may encompass the content expressed by theories, books, and even whole libraries. It is important to distinguish &%Propositions from the &%ContentBearingObjects that express them. A &%Proposition is a piece of information, e.g. that the cat is on the mat, but a &%ContentBearingObject is an &%Object that represents this information. A &%Proposition is an abstraction that may have multiple representations: strings, sounds, icons, etc. For example, the &%Proposition that the cat is on the mat is represented here as a string of graphical characters displayed on a monitor and/or printed on paper, but it can be represented by a sequence of sounds or by some non-latin alphabet or by some cryptographic form') ).

fof(kb_SUMO_3281,axiom,
    s__instance(s__closedOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_3282,axiom,
    s__instance(s__closedOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3283,axiom,
    s__domain(s__closedOn__m,"1",s__Function) ).

fof(kb_SUMO_3284,axiom,
    s__domain(s__closedOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3285,axiom,
    s__documentation(s__closedOn__m,s__EnglishLanguage,'A &%BinaryFunction is closed on a &%SetOrClass if it is defined for all instances of the &%SetOrClass and its value is always an instance of the &%SetOrClass.') ).

fof(kb_SUMO_3286,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( ( s__closedOn(V__FUNCTION,V__CLASS)
        & s__instance(V__FUNCTION,s__UnaryFunction) )
     => ! [V__INST] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instance(s__AssignmentFn_2(V__FUNCTION,V__INST),V__CLASS) ) ) ) ).

fof(kb_SUMO_3287,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( ( s__closedOn(V__FUNCTION,V__CLASS)
        & s__instance(V__FUNCTION,s__BinaryFunction) )
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS) )
           => s__instance(s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2),V__CLASS) ) ) ) ).

fof(kb_SUMO_3288,axiom,
    s__instance(s__reflexiveOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_3289,axiom,
    s__instance(s__reflexiveOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3290,axiom,
    s__domain(s__reflexiveOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_3291,axiom,
    s__domain(s__reflexiveOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3292,axiom,
    s__documentation(s__reflexiveOn__m,s__EnglishLanguage,'A &%BinaryRelation is reflexive on a &%SetOrClass only if every instance of the &%SetOrClass bears the relation to itself.') ).

fof(kb_SUMO_3293,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telephoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telephoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3294,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__cargo__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Shipping)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__cargo(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3295,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__distributes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__distributes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3296,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__older__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__older(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3297,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postContactSite__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postContactSite(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3298,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__identicalListItems__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__identicalListItems(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3299,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__acquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__acquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3300,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__spouse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__spouse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3301,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__benefits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__benefits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3302,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__resource__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__resource(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3303,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__homePhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__homePhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3304,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__closedOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__closedOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3305,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__conclusion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__conclusion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3306,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__employs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__employs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3307,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__containsInformation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__containsInformation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3308,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__barometricPressure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__UnitOfAtmosphericPressure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__barometricPressure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3309,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasOccupation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__IntentionalProcess)
            & s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasOccupation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3310,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__givenName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__givenName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3311,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__parent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__parent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3312,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__creator__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__creator(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3313,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__located__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__located(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3314,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__lineMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__lineMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3315,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomCoreNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomCoreNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3316,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__abstractCounterpart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Abstract)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__abstractCounterpart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3317,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__date__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__date(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3318,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__member__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__member(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3319,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postPostOfficeBox__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postPostOfficeBox(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3320,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__medicalPatient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__CareOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__medicalPatient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3321,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meetsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meetsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3322,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(greater__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => greater(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3323,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__expressedInLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__expressedInLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3324,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__irreflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__irreflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3325,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__voltageMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PowerSource)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__voltageMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3326,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__crosses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__crosses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3327,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__secretesSubstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__OrganicObject)
            & s__subclass(V__INST,s__NaturalSubstance)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__secretesSubstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3328,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__angularMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__INST,s__PlaneAngleMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__angularMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3329,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__precondition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__precondition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3330,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__capacity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__ConstantQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__capacity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3331,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__trichotomizingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__trichotomizingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3332,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__powerPlant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__powerPlant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3333,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__atomicNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ElementalSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__atomicNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3334,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__origin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__origin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3335,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__abstractPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Abstract)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__abstractPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3336,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__deviceTelecomNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__TelephonyDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__deviceTelecomNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3337,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postCity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__City)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postCity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3338,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__angleOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__angleOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3339,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__uniqueIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__uniqueIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3340,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__valence__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__valence(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3341,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__structure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__StructureAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__structure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3342,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hopes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hopes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3343,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__familyName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__familyName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3344,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3345,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__attribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__attribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3346,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__destination__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__destination(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3347,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__arcWeight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphArc)
            & s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__arcWeight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3348,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__developmentalForm__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OrganicObject)
            & s__instance(V__INST,s__DevelopmentalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__developmentalForm(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3349,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__home__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__home(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3350,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__connected__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__connected(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3351,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sibling__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sibling(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3352,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__student__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__EducationalOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__student(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3353,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__top__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__top(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3354,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__patient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__patient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3355,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postAddressText__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalAddressText)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postAddressText(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3356,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__beforeOrEqual__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__beforeOrEqual(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3357,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__material__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Substance)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__material(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3358,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__identityElement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__identityElement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3359,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__loss__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__loss(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3360,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3361,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postPostcodeArea__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__PostcodeArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postPostcodeArea(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3362,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__titles__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__titles(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3363,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__needs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__needs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3364,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__realization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__realization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3365,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__workPhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__workPhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3366,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__memberCount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__memberCount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3367,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__describes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__describes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3368,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geopoliticalSubdivision__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geopoliticalSubdivision(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3369,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__customer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__customer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3370,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__superficialPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__superficialPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3371,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__conforms__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__conforms(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3372,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__piece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__piece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3373,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__constructionPeriod__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__constructionPeriod(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3374,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__coworker__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__coworker(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3375,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__birthplace__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__birthplace(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3376,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__reagent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChemicalProcess)
            & s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__reagent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3377,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stepmother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stepmother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3378,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equipmentType__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equipmentType(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3379,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__changesLocation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Translocation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__changesLocation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3380,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__bottom__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__bottom(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3381,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__time__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__time(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3382,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stepfather__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stepfather(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3383,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__considers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__considers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3384,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__editor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__editor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3385,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__measure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__measure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3386,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__age__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__age(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3387,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__detainee__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Confining)
            & s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__detainee(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3388,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__floorCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__floorCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3389,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__insured__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__insured(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3390,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__frequency__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__frequency(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3391,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalentContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalentContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3392,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postStreetNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postStreetNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3393,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__legalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__legalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3394,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__larger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__larger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3395,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__deviceState__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DeviceStateAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__deviceState(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3396,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__element__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__element(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3397,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__registeredItem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Text)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__registeredItem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3398,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__decreasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__decreasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3399,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__moves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__moves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3400,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stays__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__TemporaryResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stays(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3401,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__axis__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__axis(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3402,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__expects__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__expects(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3403,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__half__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__half(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3404,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wants__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wants(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3405,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__tangent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__TwoDimensionalObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__tangent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3406,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__familyRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__familyRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3407,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3408,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__parasite__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__parasite(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3409,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grasps__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grasps(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3410,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__exactlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__exactlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3411,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meltingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meltingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3412,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__enjoys__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__IntentionalProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__enjoys(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3413,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__allegiance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__allegiance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3414,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sententialSubject__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NounPhrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sententialSubject(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3415,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__successorAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__successorAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3416,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__properPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__properPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3417,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(greatereq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => greatereq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3418,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__immediateInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__immediateInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3419,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subProcess__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subProcess(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3420,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__humanCapacity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__humanCapacity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3421,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__prevents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__prevents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3422,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__dislikes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__dislikes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3423,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__cousin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__cousin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3424,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalenceRelationOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalenceRelationOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3425,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__policyOwner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__Policy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__policyOwner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3426,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3427,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__deathplace__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__deathplace(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3428,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__involvedInEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__involvedInEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3429,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__middleName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__middleName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3430,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__instance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3431,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__immediateSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__immediateSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3432,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__attends__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Demonstrating)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__attends(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3433,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__protonNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__protonNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3434,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3435,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__gainsControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__AchievingControl)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__gainsControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3436,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__memberType__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__memberType(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3437,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__approves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__approves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3438,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geometricPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geometricPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3439,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__transported__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Transportation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__transported(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3440,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasAward__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasAward(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3441,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__siteForContact__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContactSite)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__siteForContact(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3442,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__initialList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__initialList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3443,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__consistent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__consistent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3444,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sliceOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalObject)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sliceOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3445,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wavelength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Radiating)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wavelength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3446,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__weight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__MassMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__weight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3447,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__radius__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__radius(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3448,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__homeAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__homeAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3449,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__monetaryValue__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__monetaryValue(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3450,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postCountry__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postCountry(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3451,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__names__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__names(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3452,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__starts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__starts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3453,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__instrument__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instrument(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3454,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__knows__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__knows(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3455,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subSystem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subSystem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3456,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__citizen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Nation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__citizen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3457,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__birthday__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__birthday(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3458,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partyToAgreement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Agreement)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partyToAgreement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3459,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mutualStranger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mutualStranger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3460,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__successorAttributeClosure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__successorAttributeClosure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3461,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__ancestorOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__ancestorOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3462,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__modalAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__NormativeAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__modalAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3463,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causesProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causesProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3464,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__fills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__fills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3465,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__eventLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__eventLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3466,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__contestParticipant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Contest)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__contestParticipant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3467,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3468,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__husband__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__husband(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3469,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hole__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hole(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3470,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__INST,s__WearableItem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3471,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__duration__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__duration(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3472,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__alias__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__alias(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3473,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__penetrates__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__penetrates(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3474,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__targetInAttack__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__targetInAttack(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3475,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__landlord__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__landlord(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3476,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__doubts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__doubts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3477,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__range__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__range(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3478,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__serviceProvider__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ServiceProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__serviceProvider(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3479,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__deathdate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__deathdate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3480,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__rangeSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__SetOrClass)
            & s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__rangeSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3481,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__waterDepth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__WaterArea)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__waterDepth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3482,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__graphMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__INST,s__UnitOfMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__graphMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3483,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__color__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__ColorAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__color(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3484,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__losesControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChangeOfControl)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__losesControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3485,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__conjugate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CompoundSubstance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__conjugate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3486,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relatedInternalConcept__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__relatedInternalConcept(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3487,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__earlier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__earlier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3488,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__unitNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__unitNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3489,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__religiousAffiliationOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__BeliefGroup)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__religiousAffiliationOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3490,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__carries__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__carries(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3491,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subrelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subrelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3492,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__copy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__copy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3493,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__measurementReading__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__MeasuringDevice)
            & s__instance(V__INST,s__ConstantQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__measurementReading(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3494,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__quarter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__quarter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3495,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__discovers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__discovers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3496,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inhabits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inhabits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3497,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__birthdate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__birthdate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3498,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomExtension__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomExtension(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3499,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__width__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__width(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3500,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__uncle__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__uncle(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3501,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__manner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__manner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3502,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subField__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FieldOfStudy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subField(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3503,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relatedEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__relatedEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3504,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__yearOfFounding__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__yearOfFounding(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3505,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__potentialOfHydrogen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Solution)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__potentialOfHydrogen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3506,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__exploits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__exploits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3507,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__believes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__believes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3508,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__brother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__brother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3509,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__domesticPartner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__domesticPartner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3510,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subsumesContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subsumesContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3511,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__contractor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__contractor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3512,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__properlyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__properlyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3513,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__finishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__finishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3514,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partialOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partialOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3515,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__average__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__average(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3516,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__diameter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__diameter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3517,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__experimentalControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Experimenting)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__experimentalControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3518,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__entails__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__entails(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3519,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meatOfAnimal__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Meat)
            & s__subclass(V__INST,s__Animal)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meatOfAnimal(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3520,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subCollection__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subCollection(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3521,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__initiallyContainsPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Object)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__initiallyContainsPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3522,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sister__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sister(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3523,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__boilingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__boilingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3524,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postDistrict__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__StateOrProvince)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postDistrict(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3525,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inScopeOfInterest__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inScopeOfInterest(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3526,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__disjointRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__disjointRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3527,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__cohabitant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__cohabitant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3528,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__tenant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Residence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__tenant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3529,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grandmother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grandmother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3530,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__ancestor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__ancestor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3531,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__issuedBy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Certificate)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__issuedBy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3532,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__headquartersOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__headquartersOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3533,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__agreementExpirationDate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__agreementExpirationDate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3534,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomCode2__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomCode2(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3535,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__agreementEffectiveDate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__agreementEffectiveDate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3536,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__temporalPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__temporalPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3537,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postStreet__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Roadway)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postStreet(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3538,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mutualAcquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mutualAcquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3539,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__commentator__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__commentator(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3540,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__fleetSize__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__fleetSize(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3541,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__postNeighborhood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Neighborhood)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__postNeighborhood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3542,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relative__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__relative(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3543,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__defendant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__LegalAction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__defendant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3544,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalentContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalentContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3545,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__fears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__fears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3546,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__agent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__agent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3547,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__totalOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__totalOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3548,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__formerName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__formerName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3549,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__smaller__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__smaller(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3550,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3551,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__cooccur__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__cooccur(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3552,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__initialPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Object)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__initialPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3553,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__legalGuardian__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__legalGuardian(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3554,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sententialObject__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NounPhrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sententialObject(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3555,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__authors__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__authors(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3556,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__during__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__during(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3557,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__parallel__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__parallel(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3558,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inhibits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inhibits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3559,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causesSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causesSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3560,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__localLongName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__localLongName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3561,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__independentProbability__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__independentProbability(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3562,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inString__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Character)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inString(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3563,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__operator__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__operator(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3564,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sideOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sideOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3565,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__eventPartlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__eventPartlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3566,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__airTemperature__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__airTemperature(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3567,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__path__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__path(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3568,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__lacks__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__lacks(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3569,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subPlan__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Plan)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subPlan(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3570,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasExpertise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__FieldOfStudy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasExpertise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3571,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__serviceRecipient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ServiceProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__serviceRecipient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3572,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__transactionAmount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__transactionAmount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3573,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wife__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wife(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3574,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__uses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__uses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3575,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__friend__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__friend(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3576,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__linearExtent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__linearExtent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3577,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__experiencer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__experiencer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3578,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__agreementPeriod__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__agreementPeriod(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3579,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__typicallyContainsPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Object)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__typicallyContainsPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3580,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__result__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__result(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3581,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(lesseq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => lesseq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3582,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__emailAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__emailAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3583,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__arrested__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PlacingUnderArrest)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__arrested(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3584,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grandfather__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grandfather(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3585,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__component__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__component(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3586,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__onboard__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Vehicle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__onboard(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3587,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__neighbor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__neighbor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3588,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__workAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__workAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3589,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__externalImage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__externalImage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3590,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3591,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__profit__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__profit(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3592,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__version__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Artifact)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__version(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3593,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__length__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__length(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3594,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__disapproves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__disapproves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3595,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__property__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__property(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3596,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__electronNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__electronNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3597,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__anniversary__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__anniversary(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3598,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3599,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3600,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mobilePhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mobilePhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3601,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__side__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__side(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3602,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stored__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__DataStorageDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stored(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3603,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__pathLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphPath)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__pathLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3604,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__possesses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__possesses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3605,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stringLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NonnegativeInteger)
            & s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stringLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3606,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__premise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__premise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3607,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subGraph__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subGraph(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3608,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__leader__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__leader(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3609,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__represents__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__represents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3610,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__height__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__height(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3611,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__intelligenceQuotient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__RationalNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__intelligenceQuotient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3612,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__completelyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__completelyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3613,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__publishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__publishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3614,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__engineeringSubcomponent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__engineeringSubcomponent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3615,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inventory__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inventory(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3616,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__desires__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__desires(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3617,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__graphPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphElement)
            & s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__graphPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3618,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__personalPhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__personalPhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3619,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__direction__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__direction(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3620,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__son__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__son(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3621,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsObligation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsObligation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3622,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasSkill__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasSkill(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3623,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__aunt__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__aunt(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3624,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__daughter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__daughter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3625,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__traverses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__traverses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3626,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__ideologicalAffiliationOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__FormOfGovernment)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__ideologicalAffiliationOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3627,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsPartially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsPartially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3628,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subsumesContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subsumesContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3629,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__occupation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__occupation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3630,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsDuring__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsDuring(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3631,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasUniform__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__UniformClothing)
            & s__instance(V__INST,s__Group)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasUniform(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3632,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__distanceOnPath__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ConstantQuantity)
            & s__instance(V__INST,s__Transitway)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__distanceOnPath(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3633,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__groupMember__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__GroupOfPeople)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__groupMember(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3634,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__dateEstablished__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__dateEstablished(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3635,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__nephew__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__nephew(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3636,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__teacher__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__EducationalOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__teacher(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3637,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__speaksLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SentientAgent)
            & s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__speaksLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3638,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meetsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meetsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3639,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hostileForces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__MilitaryUnit)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hostileForces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3640,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__before__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__before(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3641,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grammaticalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Phrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grammaticalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3642,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__contains__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__contains(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3643,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3644,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomCountryCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomCountryCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3645,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomContactDevice__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelephonyDevice)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomContactDevice(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3646,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__truth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Sentence)
            & s__instance(V__INST,s__TruthValue)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__truth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3647,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__reactant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChemicalProcess)
            & s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__reactant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3648,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__affiliatedOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__affiliatedOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3649,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__multiplicativeFactor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__multiplicativeFactor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3650,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__faces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__faces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3651,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__deceptiveIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__deceptiveIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3652,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__father__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__father(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3653,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__surface__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__surface(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3654,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__most__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__most(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3655,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__niece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__niece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3656,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(less__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => less(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3657,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__increasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__increasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3658,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__pointOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricPoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__pointOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3659,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__faxNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__faxNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3660,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__connectedEngineeringComponents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__connectedEngineeringComponents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3661,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__plaintiff__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__LegalAction)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__plaintiff(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3662,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__patientMedical__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__patientMedical(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3663,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__part__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__part(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3664,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__telecomAreaCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__telecomAreaCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3665,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__controlled__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__AchievingControl)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__controlled(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3666,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partiallyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partiallyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3667,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3668,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geographicSubregion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeographicArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geographicSubregion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3669,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__effectiveRange__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__effectiveRange(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3670,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__systemPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__systemPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3671,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__typicalPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Object)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__typicalPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3672,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inverse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inverse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3673,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subString__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subString(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3674,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grandparent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grandparent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3675,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasPurpose__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasPurpose(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3676,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__reflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__reflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3677,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__interiorPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__interiorPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3678,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__record__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__record(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3679,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__conveyance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Transportation)
            & s__instance(V__INST,s__TransportationDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__conveyance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3680,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__disjoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__disjoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3681,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsRight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsRight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3682,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__refers__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__refers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3683,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__third__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__third(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3684,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stranger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stranger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3685,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__localShortName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__localShortName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3686,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__financialAsset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__financialAsset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3687,axiom,
    s__instance(s__irreflexiveOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_3688,axiom,
    s__instance(s__irreflexiveOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3689,axiom,
    s__domain(s__irreflexiveOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_3690,axiom,
    s__domain(s__irreflexiveOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3691,axiom,
    s__documentation(s__irreflexiveOn__m,s__EnglishLanguage,'A &%BinaryRelation is irreflexive on a &%SetOrClass only if no instance of the &%SetOrClass bears the relation to itself.') ).

fof(kb_SUMO_3692,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__starts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__starts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3693,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__time__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__time(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3694,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geopoliticalSubdivision__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geopoliticalSubdivision(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3695,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__truth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Sentence)
            & s__instance(V__INST,s__TruthValue)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__truth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3696,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wife__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wife(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3697,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__secretesSubstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__OrganicObject)
            & s__subclass(V__INST,s__NaturalSubstance)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__secretesSubstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3698,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__policyOwner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__Policy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__policyOwner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3699,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3700,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__dateEstablished__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__dateEstablished(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3701,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__weight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__MassMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__weight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3702,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meltingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meltingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3703,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__coworker__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__coworker(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3704,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stepmother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stepmother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3705,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hopes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hopes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3706,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__result__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__result(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3707,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3708,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__most__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__most(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3709,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__givenName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__givenName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3710,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3711,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__deviceTelecomNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__TelephonyDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__deviceTelecomNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3712,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__patientMedical__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__patientMedical(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3713,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sententialObject__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NounPhrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sententialObject(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3714,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__homeAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__homeAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3715,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__serviceRecipient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ServiceProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__serviceRecipient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3716,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__enjoys__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__IntentionalProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__enjoys(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3717,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__waterDepth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__WaterArea)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__waterDepth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3718,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__cousin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__cousin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3719,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__airTemperature__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__airTemperature(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3720,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__height__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__height(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3721,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relatedInternalConcept__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relatedInternalConcept(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3722,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__publishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__publishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3723,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__involvedInEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__involvedInEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3724,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__conjugate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CompoundSubstance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__conjugate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3725,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasExpertise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__FieldOfStudy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasExpertise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3726,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__personalPhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__personalPhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3727,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__citizen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Nation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__citizen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3728,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__structure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__StructureAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__structure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3729,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mobilePhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mobilePhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3730,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__tangent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__TwoDimensionalObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__tangent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3731,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__measure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__measure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3732,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__width__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__width(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3733,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partyToAgreement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Agreement)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partyToAgreement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3734,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__student__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__EducationalOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__student(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3735,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__uncle__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__uncle(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3736,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__financialAsset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__financialAsset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3737,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postDistrict__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__StateOrProvince)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postDistrict(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3738,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3739,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__range__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__range(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3740,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__experiencer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__experiencer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3741,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__legalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__legalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3742,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__humanCapacity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__humanCapacity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3743,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__multiplicativeFactor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__multiplicativeFactor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3744,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__cooccur__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__cooccur(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3745,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__before__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__before(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3746,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__editor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__editor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3747,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__cargo__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Shipping)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__cargo(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3748,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasPurpose__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasPurpose(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3749,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stranger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stranger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3750,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causesSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causesSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3751,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__voltageMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PowerSource)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__voltageMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3752,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postCountry__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postCountry(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3753,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__trichotomizingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__trichotomizingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3754,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__husband__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__husband(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3755,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__cohabitant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__cohabitant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3756,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grandmother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grandmother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3757,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__totalOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__totalOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3758,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__siteForContact__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContactSite)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__siteForContact(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3759,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__reactant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChemicalProcess)
            & s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__reactant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3760,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__neighbor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__neighbor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3761,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__member__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__member(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3762,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__carries__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__carries(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3763,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__father__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__father(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3764,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3765,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__larger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__larger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3766,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__detainee__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Confining)
            & s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__detainee(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3767,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsPartially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsPartially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3768,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postStreet__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Roadway)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postStreet(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3769,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__color__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__ColorAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__color(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3770,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__instrument__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__instrument(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3771,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sister__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sister(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3772,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__benefits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__benefits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3773,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__boilingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__boilingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3774,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__material__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Substance)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__material(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3775,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__parent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__parent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3776,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__ancestor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__ancestor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3777,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__increasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__increasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3778,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partiallyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partiallyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3779,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telephoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telephoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3780,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__measurementReading__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__MeasuringDevice)
            & s__instance(V__INST,s__ConstantQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__measurementReading(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3781,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__doubts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__doubts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3782,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__developmentalForm__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OrganicObject)
            & s__instance(V__INST,s__DevelopmentalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__developmentalForm(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3783,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stepfather__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stepfather(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3784,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__fleetSize__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__fleetSize(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3785,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__abstractCounterpart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Abstract)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__abstractCounterpart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3786,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inventory__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inventory(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3787,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__diameter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__diameter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3788,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomExtension__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomExtension(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3789,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__birthday__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__birthday(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3790,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__contractor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__contractor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3791,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(greater__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ greater(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3792,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subPlan__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Plan)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subPlan(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3793,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__radius__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__radius(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3794,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__prevents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__prevents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3795,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__externalImage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__externalImage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3796,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__son__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__son(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3797,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__legalGuardian__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__legalGuardian(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3798,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__side__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__side(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3799,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3800,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__employs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__employs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3801,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__realization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__realization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3802,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(lesseq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ lesseq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3803,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__emailAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__emailAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3804,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__rangeSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__SetOrClass)
            & s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__rangeSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3805,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__powerPlant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__powerPlant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3806,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__losesControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChangeOfControl)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__losesControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3807,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__conclusion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__conclusion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3808,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geographicSubregion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeographicArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geographicSubregion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3809,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__religiousAffiliationOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__BeliefGroup)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__religiousAffiliationOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3810,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__registeredItem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Text)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__registeredItem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3811,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomContactDevice__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelephonyDevice)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomContactDevice(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3812,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__targetInAttack__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__targetInAttack(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3813,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__aunt__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__aunt(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3814,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__attends__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Demonstrating)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__attends(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3815,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__engineeringSubcomponent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__engineeringSubcomponent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3816,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__yearOfFounding__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__yearOfFounding(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3817,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__authors__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__authors(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3818,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__traverses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__traverses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3819,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subProcess__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subProcess(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3820,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__identityElement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__identityElement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3821,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__alias__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__alias(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3822,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sideOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sideOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3823,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__middleName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__middleName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3824,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__resource__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__resource(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3825,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__intelligenceQuotient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__RationalNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__intelligenceQuotient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3826,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__interiorPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__interiorPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3827,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__connectedEngineeringComponents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__connectedEngineeringComponents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3828,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__pathLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphPath)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__pathLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3829,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasAward__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasAward(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3830,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wants__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wants(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3831,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__unitNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__unitNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3832,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__eventLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__eventLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3833,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__anniversary__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__anniversary(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3834,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3835,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__earlier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__earlier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3836,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__floorCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__floorCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3837,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subSystem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subSystem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3838,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sententialSubject__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NounPhrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sententialSubject(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3839,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__deathplace__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__deathplace(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3840,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__formerName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__formerName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3841,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postPostOfficeBox__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postPostOfficeBox(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3842,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subCollection__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subCollection(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3843,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__parasite__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__parasite(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3844,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__conveyance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Transportation)
            & s__instance(V__INST,s__TransportationDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__conveyance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3845,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causesProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causesProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3846,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__dislikes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__dislikes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3847,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__contestParticipant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Contest)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__contestParticipant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3848,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inScopeOfInterest__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inScopeOfInterest(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3849,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__memberCount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__memberCount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3850,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__successorAttributeClosure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__successorAttributeClosure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3851,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subGraph__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subGraph(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3852,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hole__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hole(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3853,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__independentProbability__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__independentProbability(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3854,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__connected__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__connected(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3855,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__reflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__reflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3856,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__linearExtent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__linearExtent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3857,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__conforms__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__conforms(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3858,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__identicalListItems__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__identicalListItems(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3859,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__disjointRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__disjointRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3860,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__disjoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__disjoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3861,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__bottom__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__bottom(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3862,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasOccupation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__IntentionalProcess)
            & s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasOccupation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3863,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__consistent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__consistent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3864,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__ancestorOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__ancestorOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3865,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inString__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Character)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inString(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3866,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__superficialPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__superficialPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3867,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__older__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__older(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3868,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__allegiance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__allegiance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3869,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__nephew__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__nephew(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3870,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__destination__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__destination(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3871,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__penetrates__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__penetrates(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3872,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__insured__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__insured(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3873,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__moves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__moves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3874,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__homePhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__homePhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3875,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__disapproves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__disapproves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3876,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalentContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalentContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3877,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3878,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stays__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__TemporaryResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stays(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3879,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__faxNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__faxNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3880,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postPostcodeArea__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__PostcodeArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postPostcodeArea(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3881,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3882,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__believes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__believes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3883,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sliceOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalObject)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sliceOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3884,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__initialList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__initialList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3885,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__deathdate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__deathdate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3886,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__direction__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__direction(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3887,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__barometricPressure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__UnitOfAtmosphericPressure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__barometricPressure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3888,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inhabits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inhabits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3889,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__needs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__needs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3890,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subsumesContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subsumesContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3891,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__knows__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__knows(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3892,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalentContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalentContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3893,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__medicalPatient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__CareOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__medicalPatient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3894,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__entails__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__entails(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3895,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__INST,s__WearableItem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3896,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__names__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__names(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3897,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasSkill__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasSkill(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3898,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__valence__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__valence(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3899,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__transported__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Transportation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__transported(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3900,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__origin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__origin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3901,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__localLongName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__localLongName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3902,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__average__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__average(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3903,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__reagent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ChemicalProcess)
            & s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__reagent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3904,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__headquartersOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__headquartersOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3905,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__agreementEffectiveDate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__agreementEffectiveDate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3906,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__fears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__fears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3907,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__graphPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphElement)
            & s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__graphPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3908,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__groupMember__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__GroupOfPeople)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__groupMember(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3909,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__immediateSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__immediateSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3910,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__agreementExpirationDate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__agreementExpirationDate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3911,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__familyRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__familyRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3912,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mutualStranger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mutualStranger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3913,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__localShortName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__localShortName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3914,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__third__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__third(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3915,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subField__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FieldOfStudy)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subField(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3916,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3917,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__uniqueIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__uniqueIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3918,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__acquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__acquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3919,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__successorAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__successorAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3920,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__controlled__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__AchievingControl)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__controlled(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3921,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__manner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__manner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3922,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__instance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__instance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3923,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomAreaCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomAreaCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3924,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postNeighborhood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Neighborhood)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postNeighborhood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3925,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__operator__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__operator(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3926,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3927,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__pointOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricPoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__pointOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3928,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meetsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meetsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3929,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__contains__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__contains(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3930,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__affiliatedOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__affiliatedOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3931,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postAddressText__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalAddressText)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postAddressText(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3932,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__daughter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__daughter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3933,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__temporalPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__temporalPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3934,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__birthdate__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__birthdate(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3935,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__located__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__located(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3936,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__piece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__piece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3937,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mutualAcquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mutualAcquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3938,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__expects__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__expects(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3939,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__exploits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__exploits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3940,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__occupation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__occupation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3941,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__protonNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__protonNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3942,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomCoreNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomCoreNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3943,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__effectiveRange__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__effectiveRange(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3944,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postCity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__City)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postCity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3945,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__ideologicalAffiliationOfOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__FormOfGovernment)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__ideologicalAffiliationOfOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3946,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__properPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__properPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3947,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__commentator__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__commentator(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3948,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__version__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Artifact)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__version(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3949,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__date__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__date(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3950,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__systemPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__systemPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3951,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__attribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__attribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3952,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__brother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__brother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3953,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__graphMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__INST,s__UnitOfMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__graphMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3954,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__properlyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__properlyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3955,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__potentialOfHydrogen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Solution)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__potentialOfHydrogen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3956,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__age__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__age(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3957,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__copy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__copy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3958,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__friend__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__friend(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3959,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__surface__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__surface(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3960,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__domesticPartner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__domesticPartner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3961,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__crosses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__crosses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3962,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomCountryCode__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomCountryCode(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3963,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__transactionAmount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__transactionAmount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3964,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__expressedInLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__expressedInLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3965,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__leader__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__leader(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3966,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__represents__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__represents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3967,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__decreasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__decreasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3968,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__serviceProvider__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ServiceProcess)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__serviceProvider(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3969,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__teacher__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__EducationalOrganization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__teacher(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3970,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__familyName__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__familyName(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3971,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grasps__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grasps(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3972,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meetsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meetsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3973,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__arrested__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PlacingUnderArrest)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__arrested(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3974,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3975,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__smaller__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__smaller(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3976,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grandfather__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grandfather(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3977,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__monetaryValue__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__monetaryValue(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3978,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__experimentalControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Experimenting)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__experimentalControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3979,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(less__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ less(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3980,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__irreflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__irreflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3981,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__telecomCode2__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__telecomCode2(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3982,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__closedOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__closedOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3983,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalenceRelationOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalenceRelationOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3984,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__angularMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__INST,s__PlaneAngleMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__angularMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3985,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inhibits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inhibits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3986,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__home__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__home(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3987,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__titles__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__titles(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3988,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__plaintiff__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__LegalAction)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__plaintiff(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3989,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__modalAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__NormativeAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__modalAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3990,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__describes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__describes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3991,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__during__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__during(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3992,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__approves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__approves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3993,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__deviceState__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DeviceStateAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__deviceState(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3994,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__electronNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__electronNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3995,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__top__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__top(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3996,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__fills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__fills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3997,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__memberType__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__memberType(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3998,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__desires__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__desires(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_3999,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__faces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__faces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4000,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__deceptiveIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__deceptiveIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4001,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__distributes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__distributes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4002,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsRight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsRight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4003,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__discovers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__discovers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4004,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sibling__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sibling(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4005,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__spouse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__spouse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4006,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__speaksLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SentientAgent)
            & s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__speaksLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4007,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postContactSite__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PostalPlace)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postContactSite(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4008,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__angleOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__angleOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4009,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__half__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__half(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4010,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subString__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subString(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4011,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__axis__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__axis(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4012,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsDuring__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsDuring(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4013,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsObligation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsObligation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4014,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__defendant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__LegalAction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__defendant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4015,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partialOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partialOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4016,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__workPhoneNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TelecomNumber)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__workPhoneNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4017,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__lacks__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__lacks(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4018,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stored__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__INST,s__DataStorageDevice)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stored(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4019,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subsumesContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subsumesContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4020,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hostileForces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__MilitaryUnit)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hostileForces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4021,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__niece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__niece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4022,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__capacity__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__ConstantQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__capacity(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4023,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wavelength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Radiating)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wavelength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4024,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__quarter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__quarter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4025,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inverse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inverse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4026,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__containsInformation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__containsInformation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4027,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grandparent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grandparent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4028,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__beforeOrEqual__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__beforeOrEqual(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4029,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__eventPartlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__eventPartlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4030,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__element__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__element(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4031,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__constructionPeriod__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__StationaryArtifact)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__constructionPeriod(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4032,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__agreementPeriod__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agreement)
            & s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__agreementPeriod(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4033,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__workAddress__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__workAddress(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4034,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__landlord__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__landlord(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4035,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__frequency__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__frequency(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4036,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__premise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__premise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4037,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__agent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__agent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4038,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__precondition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__precondition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4039,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__considers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__considers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4040,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasUniform__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__UniformClothing)
            & s__instance(V__INST,s__Group)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasUniform(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4041,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relative__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relative(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4042,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__gainsControl__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__AchievingControl)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__gainsControl(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4043,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__component__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__component(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4044,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(greatereq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ greatereq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4045,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__issuedBy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Certificate)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__issuedBy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4046,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grammaticalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Phrase)
            & s__instance(V__INST,s__Sentence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grammaticalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4047,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subrelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subrelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4048,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__exactlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__exactlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4049,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__property__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__property(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4050,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__duration__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__duration(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4051,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__uses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__uses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4052,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__birthplace__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__birthplace(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4053,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__record__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__record(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4054,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__finishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__finishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4055,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__refers__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__refers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4056,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__parallel__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__parallel(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4057,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geometricPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geometricPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4058,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stringLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__NonnegativeInteger)
            & s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stringLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4059,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__arcWeight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphArc)
            & s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__arcWeight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4060,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__possesses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__possesses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4061,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__immediateInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__immediateInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4062,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__tenant__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__Residence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__tenant(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4063,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__postStreetNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__INST,s__PostalPlace)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__postStreetNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4064,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__patient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__patient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4065,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__completelyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__completelyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4066,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__changesLocation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Translocation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__changesLocation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4067,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__lineMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__lineMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4068,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__length__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__length(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4069,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__onboard__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Vehicle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__onboard(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4070,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__path__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__path(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4071,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__customer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__customer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4072,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equipmentType__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Device)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equipmentType(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4073,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__atomicNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ElementalSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__atomicNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4074,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relatedEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relatedEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_4075,axiom,
    s__instance(s__partialOrderingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_4076,axiom,
    s__instance(s__partialOrderingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4077,axiom,
    s__domain(s__partialOrderingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_4078,axiom,
    s__domain(s__partialOrderingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4079,axiom,
    s__documentation(s__partialOrderingOn__m,s__EnglishLanguage,'A &%BinaryRelation is a partial ordering on a &%SetOrClass only if the relation is &%reflexiveOn the &%SetOrClass, and it is both an &%AntisymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_4080,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__partialOrderingOn(V__RELATION,V__CLASS)
       => ( s__reflexiveOn(V__RELATION,V__CLASS)
          & s__instance(V__RELATION,s__TransitiveRelation)
          & s__instance(V__RELATION,s__AntisymmetricRelation) ) ) ) ).

fof(kb_SUMO_4081,axiom,
    s__instance(s__totalOrderingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_4082,axiom,
    s__instance(s__totalOrderingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4083,axiom,
    s__domain(s__totalOrderingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_4084,axiom,
    s__domain(s__totalOrderingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4085,axiom,
    s__documentation(s__totalOrderingOn__m,s__EnglishLanguage,'A &%BinaryRelation ?REL is a total ordering on a &%SetOrClass only if it is a partial ordering for which either (?REL ?INST1 ?INST2) or (?REL ?INST2 ?INST1) for every ?INST1 and ?INST2 in the &%SetOrClass.') ).

fof(kb_SUMO_4086,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__totalOrderingOn(V__RELATION,V__CLASS)
      <=> ( s__partialOrderingOn(V__RELATION,V__CLASS)
          & s__trichotomizingOn(V__RELATION,V__CLASS) ) ) ) ).

fof(kb_SUMO_4087,axiom,
    s__instance(s__trichotomizingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_4088,axiom,
    s__instance(s__trichotomizingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4089,axiom,
    s__domain(s__trichotomizingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_4090,axiom,
    s__domain(s__trichotomizingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4091,axiom,
    s__documentation(s__trichotomizingOn__m,s__EnglishLanguage,'A &%BinaryRelation ?REL is trichotomizing on a &%SetOrClass only if, for all instances ?INST1 and ?INST2 of the &%SetOrClass, at least one of the following holds: (?REL ?INST1 ?INST2), (?REL ?INST2 ?INST1) or (equal ?INST1 ?INST2).') ).

fof(kb_SUMO_4092,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( greatereq(V__INST1,V__INST2)
          | greatereq(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_4093,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( lesseq(V__INST1,V__INST2)
          | lesseq(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_4094,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( greater(V__INST1,V__INST2)
          | greater(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_4095,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( less(V__INST1,V__INST2)
          | less(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_4096,axiom,
    s__instance(s__equivalenceRelationOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_4097,axiom,
    s__instance(s__equivalenceRelationOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4098,axiom,
    s__domain(s__equivalenceRelationOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_4099,axiom,
    s__domain(s__equivalenceRelationOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4100,axiom,
    s__documentation(s__equivalenceRelationOn__m,s__EnglishLanguage,'A &%BinaryRelation is an &%equivalenceRelationOn a &%SetOrClass only if the relation is &%reflexiveOn the &%SetOrClass and it is both a &%TransitiveRelation and a &%SymmetricRelation.') ).

fof(kb_SUMO_4101,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__equivalenceRelationOn(V__RELATION,V__CLASS)
       => ( s__instance(V__RELATION,s__TransitiveRelation)
          & s__instance(V__RELATION,s__SymmetricRelation)
          & s__reflexiveOn(V__RELATION,V__CLASS) ) ) ) ).

fof(kb_SUMO_4102,axiom,
    s__instance(s__distributes__m,s__BinaryPredicate) ).

fof(kb_SUMO_4103,axiom,
    s__instance(s__distributes__m,s__BinaryRelation) ).

fof(kb_SUMO_4104,axiom,
    s__domain(s__distributes__m,"1",s__BinaryFunction) ).

fof(kb_SUMO_4105,axiom,
    s__domain(s__distributes__m,"2",s__BinaryFunction) ).

fof(kb_SUMO_4106,axiom,
    s__documentation(s__distributes__m,s__EnglishLanguage,'A &%BinaryFunction ?FUNCTION1 is distributive over another &%BinaryFunction ?FUNCTION2 just in case (?FUNCTION1 ?INST1 (?FUNCTION2 ?INST2 ?INST3)) is equal to (?FUNCTION2 (?FUNCTION1 ?INST1 ?INST2) (?FUNCTION1 ?INST1 ?INST3)), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_4107,axiom,
    ! [V__FUNCTION1,V__FUNCTION2,V__CLASS1,V__CLASS2] :
      ( s__distributes(V__FUNCTION1,V__FUNCTION2)
     => ! [V__INST1,V__INST2,V__INST3] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass)
            & s__instance(V__FUNCTION2,s__BinaryFunction)
            & s__instance(V__FUNCTION1,s__BinaryFunction) )
         => ( ( s__domain(V__FUNCTION1,"1",V__CLASS1)
              & s__instance(V__INST1,V__CLASS1)
              & s__instance(V__INST2,V__CLASS1)
              & s__instance(V__INST3,V__CLASS1)
              & s__domain(V__FUNCTION2,"1",V__CLASS2)
              & s__instance(V__INST1,V__CLASS2)
              & s__instance(V__INST2,V__CLASS2)
              & s__instance(V__INST3,V__CLASS2) )
           => s__AssignmentFn_3(V__FUNCTION1,V__INST1,s__AssignmentFn_3(V__FUNCTION2,V__INST2,V__INST3)) = s__AssignmentFn_3(V__FUNCTION2,s__AssignmentFn_3(V__FUNCTION1,V__INST1,V__INST2),s__AssignmentFn_3(V__FUNCTION1,V__INST1,V__INST3)) ) ) ) ).

fof(kb_SUMO_4108,axiom,
    s__documentation(s__relatedEvent__m,s__EnglishLanguage,'(relatedEvent ?EVENT1 ?EVENT2) means that the &%Process ?EVENT1 is related to the Process ?EVENT2. The relationship is between separate individual events, not events and their subprocesses. On the other hand, two &%subProcesses of the same overarching event may be &%relatedEvents. The argument order does not imply temporal ordering.') ).

fof(kb_SUMO_4109,axiom,
    s__instance(s__relatedEvent__m,s__BinaryPredicate) ).

fof(kb_SUMO_4110,axiom,
    s__instance(s__relatedEvent__m,s__SymmetricRelation) ).

fof(kb_SUMO_4111,axiom,
    s__domain(s__relatedEvent__m,"1",s__Process) ).

fof(kb_SUMO_4112,axiom,
    s__domain(s__relatedEvent__m,"2",s__Process) ).

fof(kb_SUMO_4113,axiom,
    ! [V__P,V__S1,V__S2] :
      ( ( s__instance(V__S2,s__Process)
        & s__instance(V__S1,s__Process)
        & s__instance(V__P,s__Process) )
     => ( ( s__subProcess(V__S1,V__P)
          & s__subProcess(V__S2,V__P) )
       => s__relatedEvent(V__S1,V__S2) ) ) ).

fof(kb_SUMO_4114,axiom,
    s__instance(s__causes__m,s__BinaryPredicate) ).

fof(kb_SUMO_4115,axiom,
    s__instance(s__causes__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4116,axiom,
    s__domain(s__causes__m,"1",s__Process) ).

fof(kb_SUMO_4117,axiom,
    s__domain(s__causes__m,"2",s__Process) ).

fof(kb_SUMO_4118,axiom,
    s__relatedInternalConcept(s__causes__m,s__causesSubclass__m) ).

fof(kb_SUMO_4119,axiom,
    s__subrelation(s__causes__m,s__relatedEvent__m) ).

fof(kb_SUMO_4120,axiom,
    s__documentation(s__causes__m,s__EnglishLanguage,'The causation relation between instances of &%Process. (&%causes ?PROCESS1 ?PROCESS2) means that the instance of &%Process ?PROCESS1 brings about the instance of &%Process ?PROCESS2.') ).

fof(kb_SUMO_4121,axiom,
    ! [V__PROC1] :
      ( s__instance(V__PROC1,s__Process)
     => ? [V__PROC2] :
          ( s__instance(V__PROC2,s__Process)
          & s__causes(V__PROC2,V__PROC1) ) ) ).

fof(kb_SUMO_4122,axiom,
    ! [V__P2,V__P1] :
      ( ( s__instance(V__P1,s__Process)
        & s__instance(V__P2,s__Process) )
     => ( s__causes(V__P1,V__P2)
       => s__earlier(s__WhenFn(V__P1),s__WhenFn(V__P2)) ) ) ).

fof(kb_SUMO_4123,axiom,
    s__instance(s__causesSubclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_4124,axiom,
    s__instance(s__causesSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4125,axiom,
    s__domainSubclass(s__causesSubclass__m,"1",s__Process) ).

fof(kb_SUMO_4126,axiom,
    s__domainSubclass(s__causesSubclass__m,"2",s__Process) ).

fof(kb_SUMO_4127,axiom,
    s__documentation(s__causesSubclass__m,s__EnglishLanguage,'The causation relation between subclasses of &%Process. (&%causesSubclass ?PROCESS1 ?PROCESS2) means that the subclass of &%Process ?PROCESS1 brings about the subclass of &%Process ?PROCESS2, e.g. (&%causesSubclass &%Killing &%Death).') ).

fof(kb_SUMO_4128,axiom,
    ! [V__PROC2,V__PROC1] :
      ( s__causesSubclass(V__PROC1,V__PROC2)
     => ! [V__INST2] :
          ( ( s__instance(V__INST2,s__Process)
            & s__subclass(V__PROC1,s__Process)
            & s__instance(V__PROC1,s__SetOrClass)
            & s__subclass(V__PROC2,s__Process)
            & s__instance(V__PROC2,s__SetOrClass) )
         => ( s__instance(V__INST2,V__PROC2)
           => ? [V__INST1] :
                ( s__instance(V__INST1,s__Process)
                & s__instance(V__INST1,V__PROC1)
                & s__causes(V__INST1,V__INST2) ) ) ) ) ).

fof(kb_SUMO_4129,axiom,
    s__instance(s__causesProposition__m,s__BinaryPredicate) ).

fof(kb_SUMO_4130,axiom,
    s__instance(s__causesProposition__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4131,axiom,
    s__domain(s__causesProposition__m,"1",s__Formula) ).

fof(kb_SUMO_4132,axiom,
    s__domain(s__causesProposition__m,"2",s__Formula) ).

fof(kb_SUMO_4133,axiom,
    s__documentation(s__causesProposition__m,s__EnglishLanguage,'(&%causesProposition ?FORMULA1 ?FORMULA2) means that the state of affairs described by ?FORMULA1 causes, or mechanistically brings about, the state of affairs described by ?FORMULA2. Note that unlike &%entails, the time during which ?FORMULA2 holds cannot precede the time during which ?FORMULA1 holds, although ?FORMULA1 and ?FORMULA2 can hold simultaneously. Note, also, that &%causesProposition is a predicate, not a truth function. The following rule (contraposition) does not hold: (=> (causesProp ?FORMULA1 ?FORMULA2) (causesProp (not ?FORMULA2) (not ?FORMULA1))).') ).

fof(kb_SUMO_4134,axiom,
    ! [V__T2,V__T1,V__SIT1,V__SIT2] :
      ( ( s__instance(V__SIT2,s__Formula)
        & s__instance(V__SIT1,s__Formula) )
     => ( ( s__holdsDuring(V__T2,V__SIT2)
          & s__holdsDuring(V__T1,V__SIT1)
          & s__instance(V__T1,s__TimeInterval)
          & s__instance(V__T2,s__TimeInterval)
          & s__causesProposition(V__SIT1,V__SIT2) )
       => s__beforeOrEqual(s__BeginFn(V__T1),s__BeginFn(V__T2)) ) ) ).

fof(kb_SUMO_4135,axiom,
    s__instance(s__copy__m,s__BinaryPredicate) ).

fof(kb_SUMO_4136,axiom,
    s__instance(s__copy__m,s__EquivalenceRelation) ).

fof(kb_SUMO_4137,axiom,
    s__domain(s__copy__m,"1",s__Object) ).

fof(kb_SUMO_4138,axiom,
    s__domain(s__copy__m,"2",s__Object) ).

fof(kb_SUMO_4139,axiom,
    s__documentation(s__copy__m,s__EnglishLanguage,'relates an &%Object to an exact copy of the &%Object, where an exact copy is indistinguishable from the original with regard to every property except (possibly) spatial and/or temporal location.') ).

fof(kb_SUMO_4140,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__copy(V__OBJ1,V__OBJ2)
     => ! [V__ATTR] :
          ( ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__attribute(V__OBJ1,V__ATTR)
           => s__attribute(V__OBJ2,V__ATTR) ) ) ) ).

fof(kb_SUMO_4141,axiom,
    s__instance(s__time__m,s__BinaryPredicate) ).

fof(kb_SUMO_4142,axiom,
    s__instance(s__time__m,s__TemporalRelation) ).

fof(kb_SUMO_4143,axiom,
    s__instance(s__time__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4144,axiom,
    s__domain(s__time__m,"1",s__Physical) ).

fof(kb_SUMO_4145,axiom,
    s__domain(s__time__m,"2",s__TimePosition) ).

fof(kb_SUMO_4146,axiom,
    s__relatedInternalConcept(s__time__m,s__located__m) ).

fof(kb_SUMO_4147,axiom,
    s__relatedInternalConcept(s__time__m,s__holdsDuring__m) ).

fof(kb_SUMO_4148,axiom,
    s__documentation(s__time__m,s__EnglishLanguage,'This relation holds between an instance of &%Physical and an instance of &%TimePosition just in case the temporal lifespan of the former includes the latter. In other words, (&%time ?THING ?TIME) means that ?THING existed or occurred at ?TIME. Note that &%time does for instances of &%Physical what &%holdsDuring does for instances of &%Formula. The constants &%located and &%time are the basic spatial and temporal predicates, respectively.') ).

fof(kb_SUMO_4149,axiom,
    s__instance(s__holdsDuring__m,s__BinaryPredicate) ).

fof(kb_SUMO_4150,axiom,
    s__instance(s__holdsDuring__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4151,axiom,
    s__domain(s__holdsDuring__m,"1",s__TimePosition) ).

fof(kb_SUMO_4152,axiom,
    s__domain(s__holdsDuring__m,"2",s__Formula) ).

fof(kb_SUMO_4153,axiom,
    s__documentation(s__holdsDuring__m,s__EnglishLanguage,'(&%holdsDuring ?TIME ?FORMULA) means that the proposition denoted by ?FORMULA is true in the time frame ?TIME. Note that this implies that ?FORMULA is true at every &%TimePoint which is a &%temporalPart of ?TIME.') ).

fof(kb_SUMO_4154,axiom,
    ! [V__SITUATION1,V__SITUATION2,V__TIME] :
      ( ( s__instance(V__TIME,s__TimePosition)
        & s__instance(V__SITUATION2,s__Formula)
        & s__instance(V__SITUATION1,s__Formula) )
     => ( ( s__holdsDuring(V__TIME,V__SITUATION1)
          & s__entails(V__SITUATION1,V__SITUATION2) )
       => s__holdsDuring(V__TIME,V__SITUATION2) ) ) ).

fof(kb_SUMO_4155,axiom,
    ! [V__TIME,V__SITUATION] :
      ( ( s__instance(V__SITUATION,s__Formula)
        & s__instance(V__TIME,s__TimePosition) )
     => ( s__holdsDuring(V__TIME,'(~ V__SITUATION)')
       => ~ s__holdsDuring(V__TIME,V__SITUATION) ) ) ).

fof(kb_SUMO_4156,axiom,
    s__instance(s__capability__m,s__TernaryPredicate) ).

fof(kb_SUMO_4157,axiom,
    s__domainSubclass(s__capability__m,"1",s__Process) ).

fof(kb_SUMO_4158,axiom,
    s__domain(s__capability__m,"2",s__CaseRole) ).

fof(kb_SUMO_4159,axiom,
    s__domain(s__capability__m,"3",s__Object) ).

fof(kb_SUMO_4160,axiom,
    s__documentation(s__capability__m,s__EnglishLanguage,'(&%capability ?PROCESS ?ROLE ?OBJ) means that ?OBJ has the ability to play the role of ?ROLE in &%Processes of type ?PROCESS.') ).

fof(kb_SUMO_4161,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__ChangeOfControl) )
     => ( ( s__losesControl(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__losesControl__m,V__ARG2) ) ) ).

fof(kb_SUMO_4162,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__eventPartlyLocated(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__eventPartlyLocated__m,V__ARG2) ) ) ).

fof(kb_SUMO_4163,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__agent(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__agent__m,V__ARG2) ) ) ).

fof(kb_SUMO_4164,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Translocation) )
     => ( ( s__changesLocation(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__changesLocation__m,V__ARG2) ) ) ).

fof(kb_SUMO_4165,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__DirectionalAttribute)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__direction(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__direction__m,V__ARG2) ) ) ).

fof(kb_SUMO_4166,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__targetInAttack(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__targetInAttack__m,V__ARG2) ) ) ).

fof(kb_SUMO_4167,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__AchievingControl) )
     => ( ( s__gainsControl(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__gainsControl__m,V__ARG2) ) ) ).

fof(kb_SUMO_4168,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__patient(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__patient__m,V__ARG2) ) ) ).

fof(kb_SUMO_4169,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__origin(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__origin__m,V__ARG2) ) ) ).

fof(kb_SUMO_4170,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__PlacingUnderArrest) )
     => ( ( s__arrested(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__arrested__m,V__ARG2) ) ) ).

fof(kb_SUMO_4171,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__AchievingControl) )
     => ( ( s__controlled(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__controlled__m,V__ARG2) ) ) ).

fof(kb_SUMO_4172,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__TransportationDevice)
        & s__instance(V__ARG1,s__Transportation) )
     => ( ( s__conveyance(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__conveyance__m,V__ARG2) ) ) ).

fof(kb_SUMO_4173,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__destination(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__destination__m,V__ARG2) ) ) ).

fof(kb_SUMO_4174,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Experimenting) )
     => ( ( s__experimentalControl(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__experimentalControl__m,V__ARG2) ) ) ).

fof(kb_SUMO_4175,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Animal)
        & s__instance(V__ARG1,s__Confining) )
     => ( ( s__detainee(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__detainee__m,V__ARG2) ) ) ).

fof(kb_SUMO_4176,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__experiencer(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__experiencer__m,V__ARG2) ) ) ).

fof(kb_SUMO_4177,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Motion) )
     => ( ( s__moves(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__moves__m,V__ARG2) ) ) ).

fof(kb_SUMO_4178,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Motion) )
     => ( ( s__path(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__path__m,V__ARG2) ) ) ).

fof(kb_SUMO_4179,axiom,
    s__instance(s__exploits__m,s__BinaryPredicate) ).

fof(kb_SUMO_4180,axiom,
    s__instance(s__exploits__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4181,axiom,
    s__domain(s__exploits__m,"1",s__Object) ).

fof(kb_SUMO_4182,axiom,
    s__domain(s__exploits__m,"2",s__Agent) ).

fof(kb_SUMO_4183,axiom,
    s__documentation(s__exploits__m,s__EnglishLanguage,'(&%exploits ?OBJ ?AGENT) means that ?OBJ is used by ?AGENT as a &%resource in an unspecified instance of &%Process. This &%Predicate, as its corresponding axiom indicates, is a composition of the relations &%agent and &%resource.') ).

fof(kb_SUMO_4184,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__exploits(V__OBJ,V__AGENT)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__agent(V__PROCESS,V__AGENT)
            & s__resource(V__PROCESS,V__OBJ) ) ) ) ).

fof(kb_SUMO_4185,axiom,
    s__instance(s__hasPurpose__m,s__BinaryPredicate) ).

fof(kb_SUMO_4186,axiom,
    s__instance(s__hasPurpose__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4187,axiom,
    s__domain(s__hasPurpose__m,"1",s__Physical) ).

fof(kb_SUMO_4188,axiom,
    s__domain(s__hasPurpose__m,"2",s__Formula) ).

fof(kb_SUMO_4189,axiom,
    s__documentation(s__hasPurpose__m,s__EnglishLanguage,'This &%Predicate expresses the concept of a conventional goal, i.e. a goal with a neutralized agents intention. Accordingly, (&%hasPurpose ?THING ?FORMULA) means that the instance of &%Physical ?THING has, as its purpose, the &%Proposition expressed by ?FORMULA. Note that there is an important difference in meaning between the &%Predicates &%hasPurpose and &%result. Although the second argument of the latter can satisfy the second argument of the former, a conventional goal is an expected and desired outcome, while a result may be neither expected nor desired. For example, a machine process may have outcomes but no goals, aimless wandering may have an outcome but no goal, a learning process may have goals with no outcomes, and so on.') ).

fof(kb_SUMO_4190,axiom,
    s__instance(s__hasPurposeForAgent__m,s__TernaryPredicate) ).

fof(kb_SUMO_4191,axiom,
    s__domain(s__hasPurposeForAgent__m,"1",s__Physical) ).

fof(kb_SUMO_4192,axiom,
    s__domain(s__hasPurposeForAgent__m,"2",s__Formula) ).

fof(kb_SUMO_4193,axiom,
    s__domain(s__hasPurposeForAgent__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_4194,axiom,
    s__documentation(s__hasPurposeForAgent__m,s__EnglishLanguage,'Expresses a cognitive attitude of an agent with respect to a particular instance of Physical. More precisely, (&%hasPurposeForAgent ?THING ?FORMULA ?AGENT) means that the purpose of ?THING for ?AGENT is the proposition expressed by ?FORMULA. Very complex issues are involved here. In particular, the rules of inference of the first order predicate calculus are not truth-preserving for the second argument position of this &%Predicate.') ).

fof(kb_SUMO_4195,axiom,
    ! [V__PURPOSE,V__THING] :
      ( ( s__instance(V__THING,s__Physical)
        & s__instance(V__PURPOSE,s__Formula) )
     => ( s__hasPurpose(V__THING,V__PURPOSE)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__CognitiveAgent)
            & s__hasPurposeForAgent(V__THING,V__PURPOSE,V__AGENT) ) ) ) ).

fof(kb_SUMO_4196,axiom,
    s__instance(s__hasSkill__m,s__BinaryPredicate) ).

fof(kb_SUMO_4197,axiom,
    s__instance(s__hasSkill__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4198,axiom,
    s__domainSubclass(s__hasSkill__m,"1",s__Process) ).

fof(kb_SUMO_4199,axiom,
    s__domain(s__hasSkill__m,"2",s__Agent) ).

fof(kb_SUMO_4200,axiom,
    s__documentation(s__hasSkill__m,s__EnglishLanguage,'Similar to the &%capability &%Predicate with the additional restriction that the ability be practised/ demonstrated to some measurable degree.') ).

fof(kb_SUMO_4201,axiom,
    ! [V__AGENT,V__PROC] :
      ( ( s__subclass(V__PROC,s__Process)
        & s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__AGENT,s__Agent) )
     => ( s__hasSkill(V__PROC,V__AGENT)
       => s__capability(V__PROC,s__agent__m,V__AGENT) ) ) ).

fof(kb_SUMO_4202,axiom,
    s__instance(s__confersNorm__m,s__TernaryPredicate) ).

fof(kb_SUMO_4203,axiom,
    s__instance(s__TernaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_4204,axiom,
    s__domain(s__confersNorm__m,"1",s__Entity) ).

fof(kb_SUMO_4205,axiom,
    s__domain(s__confersNorm__m,"2",s__Formula) ).

fof(kb_SUMO_4206,axiom,
    s__domain(s__confersNorm__m,"3",s__ObjectiveNorm) ).

fof(kb_SUMO_4207,axiom,
    s__documentation(s__confersNorm__m,s__EnglishLanguage,'Expresses the relationship between a &%Formula, an &%Entity, and an &%ObjectiveNorm when the &%Entity brings it about that the &%Formula has the &%ObjectiveNorm.') ).

%FOL fof(kb_SUMO_4208,axiom,(( (! [V__TIME,V__FORMULA,V__ENTITY,V__NORM] : ((s__instance(V__NORM,s__ObjectiveNorm) & s__instance(V__FORMULA,s__Formula) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__confersNorm(V__ENTITY,V__FORMULA,V__NORM)') => (s__holdsDuring(s__ImmediatePastFn(V__TIME),'(~ s__modalAttribute(V__FORMULA,V__NORM))') & s__holdsDuring(s__ImmediateFutureFn(V__TIME),'s__modalAttribute(V__FORMULA,V__NORM)'))))) ))).

fof(kb_SUMO_4209,axiom,
    s__instance(s__deprivesNorm__m,s__TernaryPredicate) ).

fof(kb_SUMO_4210,axiom,
    s__disjointRelation(s__deprivesNorm__m,s__confersNorm__m) ).

fof(kb_SUMO_4211,axiom,
    s__domain(s__deprivesNorm__m,"1",s__Entity) ).

fof(kb_SUMO_4212,axiom,
    s__domain(s__deprivesNorm__m,"2",s__Formula) ).

fof(kb_SUMO_4213,axiom,
    s__domain(s__deprivesNorm__m,"3",s__ObjectiveNorm) ).

fof(kb_SUMO_4214,axiom,
    s__documentation(s__deprivesNorm__m,s__EnglishLanguage,'Expresses the relationship between an &%Entity, a &%Formula, and an &%ObjectiveNorm when the &%Entity brings it about that the &%Formula does not have the &%ObjectiveNorm.') ).

%FOL fof(kb_SUMO_4215,axiom,(( (! [V__TIME,V__FORMULA,V__ENTITY,V__NORM] : ((s__instance(V__NORM,s__ObjectiveNorm) & s__instance(V__FORMULA,s__Formula) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__deprivesNorm(V__ENTITY,V__FORMULA,V__NORM)') => (s__holdsDuring(s__ImmediatePastFn(V__TIME),'s__modalAttribute(V__FORMULA,V__NORM)') & s__holdsDuring(s__ImmediateFutureFn(V__TIME),'(~ s__modalAttribute(V__FORMULA,V__NORM))'))))) ))).

fof(kb_SUMO_4216,axiom,
    s__instance(s__partlyLocated__m,s__SpatialRelation) ).

fof(kb_SUMO_4217,axiom,
    s__instance(s__partlyLocated__m,s__BinaryPredicate) ).

fof(kb_SUMO_4218,axiom,
    s__domain(s__partlyLocated__m,"1",s__Physical) ).

fof(kb_SUMO_4219,axiom,
    s__domain(s__partlyLocated__m,"2",s__Object) ).

fof(kb_SUMO_4220,axiom,
    s__documentation(s__partlyLocated__m,s__EnglishLanguage,'(&%partlyLocated ?OBJ1 ?OBJ2) means that the instance of &%Physical ?OBJ1 is at least partially located at ?OBJ2. For example, Istanbul is partly located in &%Asia and partly located in &%Europe. Note that &%partlyLocated is the most basic localization relation: &%located is an immediate &%subrelation of &%partlyLocated and &%exactlyLocated is an immediate &%subrelation of &%located.') ).

fof(kb_SUMO_4221,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__instance(V__OBJ2,s__Object)
     => ( ( s__instance(V__OBJ1,s__Object)
          & s__partlyLocated(V__OBJ1,V__OBJ2) )
       => s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_4222,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__instance(V__OBJ2,s__Object)
     => ( ( s__instance(V__OBJ1,s__Object)
          & s__partlyLocated(V__OBJ1,V__OBJ2) )
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Object)
            & s__part(V__SUB,V__OBJ1)
            & s__located(V__SUB,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4223,axiom,
    s__instance(s__located__m,s__AntisymmetricRelation) ).

fof(kb_SUMO_4224,axiom,
    s__instance(s__located__m,s__TransitiveRelation) ).

fof(kb_SUMO_4225,axiom,
    s__subrelation(s__located__m,s__partlyLocated__m) ).

fof(kb_SUMO_4226,axiom,
    s__documentation(s__located__m,s__EnglishLanguage,'(&%located ?OBJ1 ?OBJ2) means that ?OBJ1 is &%partlyLocated at ?OBJ2, and there is no &%part of ?OBJ1 that is not &%located at ?OBJ2.') ).

fof(kb_SUMO_4227,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__located(V__OBJ1,V__OBJ2)
     => ! [V__SUB] :
          ( ( s__instance(V__SUB,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__SUB,V__OBJ1)
           => s__located(V__SUB,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4228,axiom,
    s__instance(s__eventPartlyLocated__m,s__CaseRole) ).

fof(kb_SUMO_4229,axiom,
    s__subrelation(s__eventPartlyLocated__m,s__partlyLocated__m) ).

fof(kb_SUMO_4230,axiom,
    s__domain(s__eventPartlyLocated__m,"1",s__Process) ).

fof(kb_SUMO_4231,axiom,
    s__domain(s__eventPartlyLocated__m,"2",s__Object) ).

fof(kb_SUMO_4232,axiom,
    s__documentation(s__eventPartlyLocated__m,s__EnglishLanguage,'(&%eventPartlyLocated ?PROC ?OBJ) means that some &%subProcess of &%Process ?PROC is located in &%Object ?OBJ.') ).

fof(kb_SUMO_4233,axiom,
    s__termFormat(s__EnglishLanguage,s__eventPartlyLocated__m,'event partly located') ).

fof(kb_SUMO_4234,axiom,
    ! [V__OBJ,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__eventPartlyLocated(V__PROC,V__OBJ)
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Process)
            & s__subProcess(V__SUB,V__PROC)
            & s__eventLocated(V__SUB,V__OBJ) ) ) ) ).

fof(kb_SUMO_4235,axiom,
    ! [V__PROCESS,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__origin(V__PROCESS,V__LOC)
       => s__eventPartlyLocated(V__PROCESS,V__LOC) ) ) ).

fof(kb_SUMO_4236,axiom,
    ! [V__PROCESS,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__destination(V__PROCESS,V__LOC)
       => s__eventPartlyLocated(V__PROCESS,V__LOC) ) ) ).

fof(kb_SUMO_4237,axiom,
    s__subrelation(s__eventLocated__m,s__eventPartlyLocated__m) ).

fof(kb_SUMO_4238,axiom,
    s__documentation(s__eventLocated__m,s__EnglishLanguage,'(&%eventLocated ?PROC ?OBJ) means that the entire &%Process ?PROC is located on &%Object ?OBJ, meaning that all &%subProcess of ?PROC is located on ?OBJ') ).

fof(kb_SUMO_4239,axiom,
    s__termFormat(s__EnglishLanguage,s__eventLocated__m,'event located') ).

fof(kb_SUMO_4240,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__eventLocated(V__PROCESS,V__OBJ)
     => ! [V__SUB] :
          ( ( s__instance(V__SUB,s__Process)
            & s__instance(V__PROCESS,s__Process)
            & s__instance(V__OBJ,s__Object) )
         => ( s__subProcess(V__SUB,V__PROCESS)
           => s__eventLocated(V__SUB,V__OBJ) ) ) ) ).

fof(kb_SUMO_4241,axiom,
    s__subrelation(s__exactlyLocated__m,s__located__m) ).

fof(kb_SUMO_4242,axiom,
    s__documentation(s__exactlyLocated__m,s__EnglishLanguage,'The actual, minimal location of an Object. This is a subrelation of the more general &%Predicate &%located.') ).

fof(kb_SUMO_4243,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Physical) )
     => ( s__exactlyLocated(V__OBJ,V__REGION)
       => ~ ? [V__OTHEROBJ] :
              ( s__instance(V__OTHEROBJ,s__Physical)
              & s__exactlyLocated(V__OTHEROBJ,V__REGION)
              & V__OTHEROBJ != V__OBJ ) ) ) ).

fof(kb_SUMO_4244,axiom,
    s__instance(s__between__m,s__SpatialRelation) ).

fof(kb_SUMO_4245,axiom,
    s__instance(s__between__m,s__TernaryPredicate) ).

fof(kb_SUMO_4246,axiom,
    s__domain(s__between__m,"1",s__Object) ).

fof(kb_SUMO_4247,axiom,
    s__domain(s__between__m,"2",s__Object) ).

fof(kb_SUMO_4248,axiom,
    s__domain(s__between__m,"3",s__Object) ).

fof(kb_SUMO_4249,axiom,
    s__documentation(s__between__m,s__EnglishLanguage,'(between ?OBJ1 ?OBJ2 ?OBJ3) means that ?OBJ2 is spatially located between ?OBJ1 and ?OBJ3. Note that this implies that ?OBJ2 is directly between ?OBJ1 and ?OBJ3, i.e. the projections of ?OBJ1 and ?OBJ3 overlap with ?OBJ2.') ).

fof(kb_SUMO_4250,axiom,
    ! [V__MID,V__END2,V__END1] :
      ( ( s__instance(V__END1,s__Object)
        & s__instance(V__END2,s__Object)
        & s__instance(V__MID,s__Object) )
     => ( s__between(V__END1,V__MID,V__END2)
       => s__between(V__END2,V__MID,V__END1) ) ) ).

fof(kb_SUMO_4251,axiom,
    s__documentation(s__betweenOnPath__m,s__EnglishLanguage,'(betweenOnPath ?OBJ1 ?OBJ2 ?OBJ3 ?PATH) means that ?OBJ2 is spatially located between ?OBJ1 and ?OBJ3 on the path ?PATH. Note that this is a more specialized relation of between since any object that is between others with respect to a particular path is also simply between them.') ).

fof(kb_SUMO_4252,axiom,
    s__instance(s__betweenOnPath__m,s__SpatialRelation) ).

fof(kb_SUMO_4253,axiom,
    s__instance(s__betweenOnPath__m,s__QuaternaryPredicate) ).

fof(kb_SUMO_4254,axiom,
    s__domain(s__betweenOnPath__m,"1",s__Object) ).

fof(kb_SUMO_4255,axiom,
    s__domain(s__betweenOnPath__m,"2",s__Object) ).

fof(kb_SUMO_4256,axiom,
    s__domain(s__betweenOnPath__m,"3",s__Object) ).

fof(kb_SUMO_4257,axiom,
    s__domain(s__betweenOnPath__m,"4",s__Object) ).

fof(kb_SUMO_4258,axiom,
    ! [V__PATH,V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__Object)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__PATH,s__Object) )
     => ( s__betweenOnPath(V__OBJ1,V__OBJ2,V__OBJ3,V__PATH)
       => s__between(V__OBJ1,V__OBJ2,V__OBJ3) ) ) ).

fof(kb_SUMO_4259,axiom,
    s__instance(s__traverses__m,s__BinaryPredicate) ).

fof(kb_SUMO_4260,axiom,
    s__instance(s__traverses__m,s__SpatialRelation) ).

fof(kb_SUMO_4261,axiom,
    s__domain(s__traverses__m,"1",s__Object) ).

fof(kb_SUMO_4262,axiom,
    s__domain(s__traverses__m,"2",s__Object) ).

fof(kb_SUMO_4263,axiom,
    s__documentation(s__traverses__m,s__EnglishLanguage,'(&%traverses ?OBJ1 ?OBJ2) means that ?OBJ1 crosses or extends across ?OBJ2. Note that &%crosses and &%penetrates are subrelations of &%traverses.') ).

fof(kb_SUMO_4264,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__traverses(V__OBJ1,V__OBJ2)
       => ( s__crosses(V__OBJ1,V__OBJ2)
          | s__penetrates(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4265,axiom,
    s__subrelation(s__crosses__m,s__traverses__m) ).

fof(kb_SUMO_4266,axiom,
    s__instance(s__crosses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4267,axiom,
    s__instance(s__crosses__m,s__TransitiveRelation) ).

fof(kb_SUMO_4268,axiom,
    s__disjointRelation(s__crosses__m,s__connected__m) ).

fof(kb_SUMO_4269,axiom,
    s__documentation(s__crosses__m,s__EnglishLanguage,'(crosses ?OBJ1 ?OBJ2) means that &%Object ?OBJ1 &%traverses Object ?OBJ2, without being &%connected to it.') ).

fof(kb_SUMO_4270,axiom,
    s__subrelation(s__penetrates__m,s__traverses__m) ).

fof(kb_SUMO_4271,axiom,
    s__subrelation(s__penetrates__m,s__meetsSpatially__m) ).

fof(kb_SUMO_4272,axiom,
    s__instance(s__penetrates__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4273,axiom,
    s__instance(s__penetrates__m,s__IntransitiveRelation) ).

fof(kb_SUMO_4274,axiom,
    s__documentation(s__penetrates__m,s__EnglishLanguage,'(penetrates ?OBJ1 ?OBJ2) means that ?OBJ1 is &%connected to ?OBJ2 along at least one whole dimension (length, width or depth).') ).

fof(kb_SUMO_4275,axiom,
    s__instance(s__WhereFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4276,axiom,
    s__instance(s__WhereFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4277,axiom,
    s__instance(s__WhereFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4278,axiom,
    s__domain(s__WhereFn__m,"1",s__Physical) ).

fof(kb_SUMO_4279,axiom,
    s__domain(s__WhereFn__m,"2",s__TimePoint) ).

fof(kb_SUMO_4280,axiom,
    s__range(s__WhereFn__m,s__Region) ).

fof(kb_SUMO_4281,axiom,
    s__relatedInternalConcept(s__WhereFn__m,s__WhenFn__m) ).

fof(kb_SUMO_4282,axiom,
    s__documentation(s__WhereFn__m,s__EnglishLanguage,'Maps an &%Object and a &%TimePoint at which the &%Object exists to the &%Region where the &%Object existed at that &%TimePoint.') ).

%FOL fof(kb_SUMO_4283,axiom,(( (! [V__REGION,V__TIME,V__THING] : ((s__instance(V__THING,s__Physical) & s__instance(V__TIME,s__TimePoint) & s__instance(V__REGION,s__Object)) => ((s__WhereFn(V__THING,V__TIME) = V__REGION) <=> s__holdsDuring(V__TIME,'s__exactlyLocated(V__THING,V__REGION)')))) ))).

fof(kb_SUMO_4284,axiom,
    s__instance(s__possesses__m,s__BinaryPredicate) ).

fof(kb_SUMO_4285,axiom,
    s__instance(s__possesses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4286,axiom,
    s__domain(s__possesses__m,"1",s__Agent) ).

fof(kb_SUMO_4287,axiom,
    s__domain(s__possesses__m,"2",s__Object) ).

fof(kb_SUMO_4288,axiom,
    s__documentation(s__possesses__m,s__EnglishLanguage,'&%Relation that holds between an &%Agent and an &%Object when the &%Agent has ownership of the &%Object.') ).

%FOL fof(kb_SUMO_4289,axiom,(( (! [V__OBJ,V__PERSON] : ((s__instance(V__PERSON,s__Agent) & s__instance(V__OBJ,s__Object)) => (s__possesses(V__PERSON,V__OBJ) => s__modalAttribute('s__uses(V__OBJ,V__PERSON)',s__Permission)))) ))).

%FOL fof(kb_SUMO_4290,axiom,(( (! [V__OBJ,V__TIME,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(V__TIME,'s__possesses(V__AGENT2,V__OBJ)')) => (V__AGENT1 = V__AGENT2)))) ))).

fof(kb_SUMO_4291,axiom,
    s__instance(s__PropertyFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4292,axiom,
    s__instance(s__PropertyFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4293,axiom,
    s__domain(s__PropertyFn__m,"1",s__Agent) ).

fof(kb_SUMO_4294,axiom,
    s__range(s__PropertyFn__m,s__Set) ).

fof(kb_SUMO_4295,axiom,
    s__documentation(s__PropertyFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Agent to the &%Set of &%Objects owned by the &%Agent.') ).

fof(kb_SUMO_4296,axiom,
    ! [V__OBJ,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__instance(V__OBJ,s__PropertyFn(V__PERSON))
      <=> s__possesses(V__PERSON,V__OBJ) ) ) ).

fof(kb_SUMO_4297,axiom,
    s__instance(s__precondition__m,s__BinaryPredicate) ).

fof(kb_SUMO_4298,axiom,
    s__instance(s__precondition__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4299,axiom,
    s__instance(s__precondition__m,s__TransitiveRelation) ).

fof(kb_SUMO_4300,axiom,
    s__domainSubclass(s__precondition__m,"1",s__Process) ).

fof(kb_SUMO_4301,axiom,
    s__domainSubclass(s__precondition__m,"2",s__Process) ).

fof(kb_SUMO_4302,axiom,
    s__documentation(s__precondition__m,s__EnglishLanguage,'A very general &%Predicate. (&%precondition ?PROC1 ?PROC2) means that an instance of ?PROC2 can exist only if an instance of ?PROC1 also exists.') ).

fof(kb_SUMO_4303,axiom,
    ! [V__PROC2,V__PROC1] :
      ( ( s__subclass(V__PROC1,s__Process)
        & s__instance(V__PROC1,s__SetOrClass)
        & s__subclass(V__PROC2,s__Process)
        & s__instance(V__PROC2,s__SetOrClass) )
     => ( s__precondition(V__PROC1,V__PROC2)
       => ( ? [V__INST2] : s__instance(V__INST2,V__PROC2)
         => ? [V__INST1] : s__instance(V__INST1,V__PROC1) ) ) ) ).

fof(kb_SUMO_4304,axiom,
    s__instance(s__inhibits__m,s__BinaryPredicate) ).

fof(kb_SUMO_4305,axiom,
    s__instance(s__inhibits__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4306,axiom,
    s__domainSubclass(s__inhibits__m,"1",s__Process) ).

fof(kb_SUMO_4307,axiom,
    s__domainSubclass(s__inhibits__m,"2",s__Process) ).

fof(kb_SUMO_4308,axiom,
    s__documentation(s__inhibits__m,s__EnglishLanguage,'A very general &%Predicate. (&%inhibits ?PROC1 ?PROC2) means that the &%Process ?PROC1 inhibits or hinders the occurrence of the &%Process ?PROC2. For example, obstructing an object inhibits moving it. Note that this is a relation between types of &%Processes, not between instances.') ).

%FOL fof(kb_SUMO_4309,axiom,(( (! [V__PROC2,V__PROC1] : (s__inhibits(V__PROC1,V__PROC2) => (! [V__TIME,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__TIME,s__TimePosition) & s__subclass(V__PROC1,s__Process) & s__instance(V__PROC1,s__SetOrClass) & s__subclass(V__PROC2,s__Process) & s__instance(V__PROC2,s__SetOrClass)) => s__decreasesLikelihood('s__holdsDuring(V__TIME,(? [V__INST1] : (s__instance(V__INST1,s__Process) & s__instance(V__INST1,V__PROC1) & s__eventLocated(V__INST1,V__PLACE))))','s__holdsDuring(V__TIME,(? [V__INST2] : (s__instance(V__INST2,s__Process) & s__instance(V__INST2,V__PROC2) & s__eventLocated(V__INST2,V__PLACE))))'))))) ))).

fof(kb_SUMO_4310,axiom,
    s__instance(s__prevents__m,s__BinaryPredicate) ).

fof(kb_SUMO_4311,axiom,
    s__instance(s__prevents__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4312,axiom,
    s__domainSubclass(s__prevents__m,"1",s__Process) ).

fof(kb_SUMO_4313,axiom,
    s__domainSubclass(s__prevents__m,"2",s__Process) ).

fof(kb_SUMO_4314,axiom,
    s__relatedInternalConcept(s__prevents__m,s__inhibits__m) ).

fof(kb_SUMO_4315,axiom,
    s__documentation(s__prevents__m,s__EnglishLanguage,'A very general &%Predicate. (&%prevents ?PROC1 ?PROC2) means that ?PROC1 prevents the occurrence of ?PROC2. In other words, if ?PROC1 is occurring in a particular time and place, ?PROC2 cannot occur at the same time and place. For example, innoculating prevents contracting disease. Note that this is a relation between types of &%Processes, not between instances.') ).

fof(kb_SUMO_4316,axiom,
    ! [V__PROC2,V__PROC1] :
      ( s__prevents(V__PROC1,V__PROC2)
     => ! [V__TIME,V__PLACE] :
          ( ( s__instance(V__PLACE,s__Object)
            & s__instance(V__TIME,s__TimePosition)
            & s__subclass(V__PROC1,s__Process)
            & s__instance(V__PROC1,s__SetOrClass)
            & s__subclass(V__PROC2,s__Process)
            & s__instance(V__PROC2,s__SetOrClass) )
         => ( s__holdsDuring(V__TIME,'(? [V__INST1] : (s__instance(V__INST1,s__Process) & s__instance(V__INST1,V__PROC1) & s__eventLocated(V__INST1,V__PLACE)))')
           => ~ s__holdsDuring(V__TIME,'(? [V__INST2] : (s__instance(V__INST2,s__Process) & s__instance(V__INST2,V__PROC2) & s__eventLocated(V__INST2,V__PLACE)))') ) ) ) ).

fof(kb_SUMO_4317,axiom,
    s__instance(s__refers__m,s__BinaryPredicate) ).

fof(kb_SUMO_4318,axiom,
    s__domain(s__refers__m,"1",s__Entity) ).

fof(kb_SUMO_4319,axiom,
    s__domain(s__refers__m,"2",s__Entity) ).

fof(kb_SUMO_4320,axiom,
    s__documentation(s__refers__m,s__EnglishLanguage,'(&%refers ?OBJ1 ?OBJ2) means that ?OBJ1 mentions or includes a reference to ?OBJ2. Note that &%refers is more general in meaning than &%represents, because presumably something can represent something else only if it refers to this other thing. For example, an article whose topic is a recent change in the price of oil may refer to many other things, e.g. the general state of the economy, the weather in California, the prospect of global warming, the options for alternative energy sources, the stock prices of various oil companies, etc.') ).

fof(kb_SUMO_4321,axiom,
    s__subrelation(s__names__m,s__refers__m) ).

fof(kb_SUMO_4322,axiom,
    s__domain(s__names__m,"1",s__SymbolicString) ).

fof(kb_SUMO_4323,axiom,
    s__documentation(s__names__m,s__EnglishLanguage,'(&%names ?STRING ?ENTITY) means that the thing ?ENTITY has the &%SymbolicString ?STRING as its name. Note that &%names and &%represents are the two immediate &%subrelations of &%refers. The predicate &%names is used when the referring item is merely a tag without connotative content, while the predicate &%represents is used for referring items that have such content.') ).

fof(kb_SUMO_4324,axiom,
    s__subrelation(s__uniqueIdentifier__m,s__names__m) ).

fof(kb_SUMO_4325,axiom,
    s__instance(s__uniqueIdentifier__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4326,axiom,
    s__documentation(s__uniqueIdentifier__m,s__EnglishLanguage,'The class of &%names that uniquely identify an instance of &%Entity. Some examples of &%uniqueIdentifiers are the keys of tables in database applications and the ISBN (International Standard Book Number).') ).

fof(kb_SUMO_4327,axiom,
    s__subrelation(s__represents__m,s__refers__m) ).

fof(kb_SUMO_4328,axiom,
    s__documentation(s__represents__m,s__EnglishLanguage,'A very general semiotics &%Predicate. (&%represents ?THING ?ENTITY) means that ?THING in some way indicates, expresses, connotes, pictures, describes, etc. ?ENTITY. The &%Predicates &%containsInformation and &%realization are subrelations of &%represents. Note that &%represents is a subrelation of &%refers, since something can represent something else only if it refers to this other thing. See the documentation string for &%names.') ).

fof(kb_SUMO_4329,axiom,
    s__instance(s__representsForAgent__m,s__TernaryPredicate) ).

fof(kb_SUMO_4330,axiom,
    s__domain(s__representsForAgent__m,"1",s__Entity) ).

fof(kb_SUMO_4331,axiom,
    s__domain(s__representsForAgent__m,"2",s__Entity) ).

fof(kb_SUMO_4332,axiom,
    s__domain(s__representsForAgent__m,"3",s__Agent) ).

fof(kb_SUMO_4333,axiom,
    s__documentation(s__representsForAgent__m,s__EnglishLanguage,'A very general predicate. (&%representsForAgent ?ENTITY1 ?ENTITY2 ?AGENT) means that the ?AGENT chooses to use ?ENTITY1 to stand for ?ENTITY2.') ).

fof(kb_SUMO_4334,axiom,
    ! [V__AGENT,V__ENTITY,V__REP] :
      ( s__instance(V__AGENT,s__Agent)
     => ( s__representsForAgent(V__REP,V__ENTITY,V__AGENT)
       => s__represents(V__REP,V__ENTITY) ) ) ).

fof(kb_SUMO_4335,axiom,
    s__instance(s__representsInLanguage__m,s__TernaryPredicate) ).

fof(kb_SUMO_4336,axiom,
    s__domain(s__representsInLanguage__m,"1",s__LinguisticExpression) ).

fof(kb_SUMO_4337,axiom,
    s__domain(s__representsInLanguage__m,"2",s__Entity) ).

fof(kb_SUMO_4338,axiom,
    s__domain(s__representsInLanguage__m,"3",s__Language) ).

fof(kb_SUMO_4339,axiom,
    s__documentation(s__representsInLanguage__m,s__EnglishLanguage,'A very general predicate. (&%representsInLanguage ?THING ?ENTITY ?LANGUAGE) means that the &%LinguisticExpression ?THING stands for ?ENTITY in the &%Language ?LANGUAGE.') ).

fof(kb_SUMO_4340,axiom,
    ! [V__LANGUAGE,V__ENTITY,V__REP] :
      ( ( s__instance(V__REP,s__LinguisticExpression)
        & s__instance(V__LANGUAGE,s__Language) )
     => ( s__representsInLanguage(V__REP,V__ENTITY,V__LANGUAGE)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__representsForAgent(V__REP,V__ENTITY,V__AGENT) ) ) ) ).

fof(kb_SUMO_4341,axiom,
    s__subrelation(s__equivalentContentClass__m,s__subsumesContentClass__m) ).

fof(kb_SUMO_4342,axiom,
    s__instance(s__equivalentContentClass__m,s__EquivalenceRelation) ).

fof(kb_SUMO_4343,axiom,
    s__instance(s__EquivalenceRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4344,axiom,
    s__domainSubclass(s__equivalentContentClass__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_4345,axiom,
    s__domainSubclass(s__equivalentContentClass__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_4346,axiom,
    s__documentation(s__equivalentContentClass__m,s__EnglishLanguage,'A &%BinaryPredicate that relates two subclasses of &%ContentBearingPhysical. (&%equivalentContentClass ?CLASS1 ?CLASS2) means that the content expressed by each instance of ?CLASS1 is also expressed by each instance of ?CLASS2, and vice versa. An example would be the relationship between English and Russian editions of Agatha Christies Murder on the Orient Express. Note that (&%equivalentContentClass ?CLASS1 ?CLASS2) implies (&%subsumesContentClass ?CLASS1 ?CLASS2) and (&%subsumesContentClass ?CLASS2 ?CLASS1).') ).

fof(kb_SUMO_4347,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( ( s__subclass(V__CLASS2,s__ContentBearingPhysical)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__subclass(V__CLASS1,s__ContentBearingPhysical)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__CLASS1,V__CLASS2)
          & s__subsumesContentClass(V__CLASS2,V__CLASS1) )
      <=> s__equivalentContentClass(V__CLASS1,V__CLASS2) ) ) ).

fof(kb_SUMO_4348,axiom,
    s__instance(s__subsumesContentClass__m,s__BinaryPredicate) ).

fof(kb_SUMO_4349,axiom,
    s__instance(s__subsumesContentClass__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_4350,axiom,
    s__domainSubclass(s__subsumesContentClass__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_4351,axiom,
    s__domainSubclass(s__subsumesContentClass__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_4352,axiom,
    s__documentation(s__subsumesContentClass__m,s__EnglishLanguage,'A &%BinaryPredicate that relates two subclasses of &%ContentBearingPhysical. (&%subsumesContentClass ?CLASS1 ?CLASS2) means that the content expressed by each instance of ?CLASS2 is also expressed by each instance of ?CLASS1. Examples include the relationship between a poem and one of its stanzas or between a book and one of its chapters. Note that this is a relation between subclasses of &%ContentBearingObject, rather than instances. If one wants to relate instances, the &%Predicate &%subsumesContentInstance can be used. Note that &%subsumesContentClass is needed in many cases. Consider, for example, the relation between the King James edition of the Bible and its Book of Genesis. This relation holds for every copy of this edition and not just for a single instance.') ).

fof(kb_SUMO_4353,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( s__subsumesContentClass(V__CLASS1,V__CLASS2)
     => ! [V__OBJ2,V__INFO] :
          ( ( s__instance(V__INFO,s__Proposition)
            & s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__subclass(V__CLASS2,s__ContentBearingPhysical)
            & s__instance(V__CLASS2,s__SetOrClass)
            & s__subclass(V__CLASS1,s__ContentBearingPhysical)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ( ( s__instance(V__OBJ2,V__CLASS2)
              & s__containsInformation(V__OBJ2,V__INFO) )
           => ? [V__OBJ1] :
                ( s__instance(V__OBJ1,s__ContentBearingPhysical)
                & s__instance(V__OBJ1,V__CLASS1)
                & s__containsInformation(V__OBJ1,V__INFO) ) ) ) ) ).

fof(kb_SUMO_4354,axiom,
    s__subrelation(s__equivalentContentInstance__m,s__subsumesContentInstance__m) ).

fof(kb_SUMO_4355,axiom,
    s__instance(s__equivalentContentInstance__m,s__EquivalenceRelation) ).

fof(kb_SUMO_4356,axiom,
    s__domain(s__equivalentContentInstance__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_4357,axiom,
    s__domain(s__equivalentContentInstance__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_4358,axiom,
    s__relatedInternalConcept(s__equivalentContentInstance__m,s__equivalentContentClass__m) ).

fof(kb_SUMO_4359,axiom,
    s__documentation(s__equivalentContentInstance__m,s__EnglishLanguage,'A &%BinaryPredicate relating two instances of &%ContentBearingPhysical. (&%equivalentContentInstance ?OBJ1 ?OBJ2) means that the content expressed by ?OBJ1 is identical to the content expressed by ?OBJ2. An example would be the relationship between a handwritten draft of a letter to ones lawyer and a typed copy of the same letter. Note that (&%equivalentContentInstance ?OBJ1 ?OBJ2) implies (&%subsumesContentInstance ?OBJ1 ?OBJ2) and (&%subsumesContentInstance ?OBJ2 ?OBJ2).') ).

fof(kb_SUMO_4360,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__ContentBearingPhysical)
        & s__instance(V__OBJ1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__OBJ1,V__OBJ2)
          & s__subsumesContentInstance(V__OBJ2,V__OBJ1) )
      <=> s__equivalentContentInstance(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_4361,axiom,
    s__instance(s__subsumesContentInstance__m,s__BinaryPredicate) ).

fof(kb_SUMO_4362,axiom,
    s__instance(s__subsumesContentInstance__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_4363,axiom,
    s__domain(s__subsumesContentInstance__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_4364,axiom,
    s__domain(s__subsumesContentInstance__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_4365,axiom,
    s__relatedInternalConcept(s__subsumesContentInstance__m,s__subsumesContentClass__m) ).

fof(kb_SUMO_4366,axiom,
    s__documentation(s__subsumesContentInstance__m,s__EnglishLanguage,'A &%BinaryPredicate relating two instances of &%ContentBearingPhysical. (&%subsumesContentInstance ?OBJ1 ?OBJ2) means that the content expressed by ?OBJ2 is part of the content expressed by ?OBJ1. An example is the relationship between a handwritten poem and one of its stanzas. Note that this is a relation between instances, rather than &%Classes. If one wants to assert a content relationship between &%Classes, e.g. between the version of an intellectual work and a part of that work, the relation &%subsumesContentClass should be used.') ).

fof(kb_SUMO_4367,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__subsumesContentInstance(V__OBJ1,V__OBJ2)
     => ! [V__INFO] :
          ( ( s__instance(V__INFO,s__Proposition)
            & s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__instance(V__OBJ1,s__ContentBearingPhysical) )
         => ( s__containsInformation(V__OBJ2,V__INFO)
           => s__containsInformation(V__OBJ1,V__INFO) ) ) ) ).

fof(kb_SUMO_4368,axiom,
    s__subrelation(s__realization__m,s__represents__m) ).

fof(kb_SUMO_4369,axiom,
    s__instance(s__realization__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4370,axiom,
    s__domain(s__realization__m,"1",s__Process) ).

fof(kb_SUMO_4371,axiom,
    s__domain(s__realization__m,"2",s__Proposition) ).

fof(kb_SUMO_4372,axiom,
    s__relatedInternalConcept(s__realization__m,s__equivalentContentInstance__m) ).

fof(kb_SUMO_4373,axiom,
    s__relatedInternalConcept(s__realization__m,s__containsInformation__m) ).

fof(kb_SUMO_4374,axiom,
    s__documentation(s__realization__m,s__EnglishLanguage,'A subrelation of &%represents. (&%realization ?PROCESS ?PROP) means that ?PROCESS is a Process which expresses the content of ?PROP. Examples include a particular musical performance, which realizes the content of a musical score, or the reading of a poem.') ).

fof(kb_SUMO_4375,axiom,
    ! [V__PROCESS,V__PROP] :
      ( ( s__instance(V__PROP,s__Proposition)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__realization(V__PROCESS,V__PROP)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__ContentBearingPhysical)
            & s__instance(V__OBJ,s__ContentBearingObject)
            & s__containsInformation(V__OBJ,V__PROP) ) ) ) ).

fof(kb_SUMO_4376,axiom,
    s__instance(s__expressedInLanguage__m,s__BinaryPredicate) ).

fof(kb_SUMO_4377,axiom,
    s__instance(s__expressedInLanguage__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4378,axiom,
    s__domain(s__expressedInLanguage__m,"1",s__LinguisticExpression) ).

fof(kb_SUMO_4379,axiom,
    s__domain(s__expressedInLanguage__m,"2",s__Language) ).

fof(kb_SUMO_4380,axiom,
    s__documentation(s__expressedInLanguage__m,s__EnglishLanguage,'(&%expressedInLanguage ?EXPRESS ?LANG) means that the &%LinguisticExpression ?EXPRESS is part of the &%Language ?LANG.') ).

fof(kb_SUMO_4381,axiom,
    ! [V__EXPRESS,V__LANGUAGE] :
      ( ( s__instance(V__LANGUAGE,s__Language)
        & s__instance(V__EXPRESS,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__EXPRESS,V__LANGUAGE)
      <=> ? [V__PROP] : s__representsInLanguage(V__EXPRESS,V__PROP,V__LANGUAGE) ) ) ).

fof(kb_SUMO_4382,axiom,
    s__instance(s__subProposition__m,s__BinaryPredicate) ).

fof(kb_SUMO_4383,axiom,
    s__instance(s__subProposition__m,s__TransitiveRelation) ).

fof(kb_SUMO_4384,axiom,
    s__instance(s__subProposition__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4385,axiom,
    s__domain(s__subProposition__m,"1",s__Proposition) ).

fof(kb_SUMO_4386,axiom,
    s__domain(s__subProposition__m,"2",s__Proposition) ).

fof(kb_SUMO_4387,axiom,
    s__documentation(s__subProposition__m,s__EnglishLanguage,'(&%subProposition ?PROP1 ?PROP2) means that ?PROP1 is a &%Proposition which is a proper part of the &%Proposition ?PROP2. In other words, &%subProposition is the analogue of &%properPart for chunks of abstract content.') ).

fof(kb_SUMO_4388,axiom,
    ! [V__PROP2,V__PROP1] :
      ( s__subProposition(V__PROP1,V__PROP2)
     => ! [V__OBJ1,V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__instance(V__OBJ1,s__ContentBearingPhysical)
            & s__instance(V__PROP1,s__Proposition)
            & s__instance(V__PROP2,s__Proposition) )
         => ( ( s__containsInformation(V__OBJ1,V__PROP1)
              & s__containsInformation(V__OBJ2,V__PROP2) )
           => s__subsumesContentInstance(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_4389,axiom,
    s__subrelation(s__subPlan__m,s__subProposition__m) ).

fof(kb_SUMO_4390,axiom,
    s__instance(s__subPlan__m,s__TransitiveRelation) ).

fof(kb_SUMO_4391,axiom,
    s__instance(s__subPlan__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4392,axiom,
    s__domain(s__subPlan__m,"1",s__Plan) ).

fof(kb_SUMO_4393,axiom,
    s__domain(s__subPlan__m,"2",s__Plan) ).

fof(kb_SUMO_4394,axiom,
    s__documentation(s__subPlan__m,s__EnglishLanguage,'(&%subPlan ?PLAN1 ?PLAN2) means that ?PLAN1 is a &%Plan which is a proper part of ?PLAN2. This relation is generally used to relate a supporting &%Plan to the overall &%Plan in a particular context.') ).

fof(kb_SUMO_4395,axiom,
    s__instance(s__uses__m,s__BinaryPredicate) ).

fof(kb_SUMO_4396,axiom,
    s__instance(s__BinaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_4397,axiom,
    s__instance(s__uses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4398,axiom,
    s__domain(s__uses__m,"1",s__Object) ).

fof(kb_SUMO_4399,axiom,
    s__domain(s__uses__m,"2",s__Agent) ).

fof(kb_SUMO_4400,axiom,
    s__documentation(s__uses__m,s__EnglishLanguage,'(&%uses ?OBJECT AGENT) means that ?OBJECT is used by ?AGENT as an instrument in an unspecified &%Process. This &%Predicate, as its corresponding axiom indicates, is a composition of the &%CaseRoles &%agent and &%instrument.') ).

fof(kb_SUMO_4401,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__uses(V__OBJ,V__AGENT)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__agent(V__PROC,V__AGENT)
            & s__instrument(V__PROC,V__OBJ) ) ) ) ).

fof(kb_SUMO_4402,axiom,
    s__instance(times__m,s__BinaryFunction) ).

fof(kb_SUMO_4403,axiom,
    s__instance(times__m,s__AssociativeFunction) ).

fof(kb_SUMO_4404,axiom,
    s__instance(times__m,s__CommutativeFunction) ).

fof(kb_SUMO_4405,axiom,
    s__instance(s__CommutativeFunction__t,s__SetOrClass) ).

fof(kb_SUMO_4406,axiom,
    s__instance(times__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4407,axiom,
    s__instance(times__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4408,axiom,
    s__domain(times__m,"1",s__Quantity) ).

fof(kb_SUMO_4409,axiom,
    s__domain(times__m,"2",s__Quantity) ).

fof(kb_SUMO_4410,axiom,
    s__range(times__m,s__Quantity) ).

fof(kb_SUMO_4411,axiom,
    s__documentation(times__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%MultiplicationFn ?NUMBER1 ?NUMBER2) is the arithmetical product of these numbers.') ).

fof(kb_SUMO_4412,axiom,
    s__instance(plus__m,s__BinaryFunction) ).

fof(kb_SUMO_4413,axiom,
    s__instance(plus__m,s__AssociativeFunction) ).

fof(kb_SUMO_4414,axiom,
    s__instance(plus__m,s__CommutativeFunction) ).

fof(kb_SUMO_4415,axiom,
    s__instance(plus__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4416,axiom,
    s__instance(plus__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4417,axiom,
    s__domain(plus__m,"1",s__Quantity) ).

fof(kb_SUMO_4418,axiom,
    s__domain(plus__m,"2",s__Quantity) ).

fof(kb_SUMO_4419,axiom,
    s__range(plus__m,s__Quantity) ).

fof(kb_SUMO_4420,axiom,
    s__documentation(plus__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%AdditionFn ?NUMBER1 ?NUMBER2) is the arithmetical sum of these numbers.') ).

fof(kb_SUMO_4421,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => s__SuccessorFn(V__NUMBER) = plus(V__NUMBER,"1") ) ).

fof(kb_SUMO_4422,axiom,
    s__instance(minus__m,s__BinaryFunction) ).

fof(kb_SUMO_4423,axiom,
    s__instance(minus__m,s__AssociativeFunction) ).

fof(kb_SUMO_4424,axiom,
    s__instance(minus__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4425,axiom,
    s__instance(minus__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4426,axiom,
    s__domain(minus__m,"1",s__Quantity) ).

fof(kb_SUMO_4427,axiom,
    s__domain(minus__m,"2",s__Quantity) ).

fof(kb_SUMO_4428,axiom,
    s__range(minus__m,s__Quantity) ).

fof(kb_SUMO_4429,axiom,
    s__documentation(minus__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%SubtractionFn ?NUMBER1 ?NUMBER2) is the arithmetical difference between ?NUMBER1 and ?NUMBER2, i.e. ?NUMBER1 minus ?NUMBER2. An exception occurs when ?NUMBER1 is equal to 0, in which case (&%SubtractionFn ?NUMBER1 ?NUMBER2) is the negation of ?NUMBER2.') ).

fof(kb_SUMO_4430,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => s__PredecessorFn(V__NUMBER) = minus(V__NUMBER,"1") ) ).

fof(kb_SUMO_4431,axiom,
    s__instance(divide__m,s__BinaryFunction) ).

fof(kb_SUMO_4432,axiom,
    s__instance(divide__m,s__AssociativeFunction) ).

fof(kb_SUMO_4433,axiom,
    s__instance(divide__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4434,axiom,
    s__instance(divide__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4435,axiom,
    s__domain(divide__m,"1",s__Quantity) ).

fof(kb_SUMO_4436,axiom,
    s__domain(divide__m,"2",s__Quantity) ).

fof(kb_SUMO_4437,axiom,
    s__range(divide__m,s__Quantity) ).

fof(kb_SUMO_4438,axiom,
    s__documentation(divide__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%DivisionFn ?NUMBER1 ?NUMBER2) is the result of dividing ?NUMBER1 by ?NUMBER2. Note that when ?NUMBER1 = 1 (&%DivisionFn ?NUMBER1 ?NUMBER2) is the reciprocal of ?NUMBER2. Note too that (&%DivisionFn ?NUMBER1 ?NUMBER2) is undefined when ?NUMBER2 = 0.') ).

fof(kb_SUMO_4439,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RationalNumber)
     => ? [V__INT1,V__INT2] :
          ( s__instance(V__INT2,s__Quantity)
          & s__instance(V__INT1,s__Quantity)
          & s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer)
          & V__NUMBER = divide(V__INT1,V__INT2) ) ) ).

fof(kb_SUMO_4440,axiom,
    s__instance(s__AbsoluteValueFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4441,axiom,
    s__instance(s__AbsoluteValueFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4442,axiom,
    s__domain(s__AbsoluteValueFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4443,axiom,
    s__range(s__AbsoluteValueFn__m,s__NonnegativeRealNumber) ).

fof(kb_SUMO_4444,axiom,
    s__documentation(s__AbsoluteValueFn__m,s__EnglishLanguage,'The value of (&%AbsoluteValueFn ?NUMBER) is the absolute value of the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_4445,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__AbsoluteValueFn(V__NUMBER1) = V__NUMBER2
        & s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber) )
    <=> ( ( s__instance(V__NUMBER1,s__NonnegativeRealNumber)
          & V__NUMBER1 = V__NUMBER2 )
        | ( s__instance(V__NUMBER1,s__NegativeRealNumber)
          & V__NUMBER2 = minus("0",V__NUMBER1) ) ) ) ).

fof(kb_SUMO_4446,axiom,
    s__instance(s__CeilingFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4447,axiom,
    s__instance(s__UnaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_4448,axiom,
    s__instance(s__CeilingFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4449,axiom,
    s__domain(s__CeilingFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4450,axiom,
    s__range(s__CeilingFn__m,s__Integer) ).

fof(kb_SUMO_4451,axiom,
    s__documentation(s__CeilingFn__m,s__EnglishLanguage,'(&%CeilingFn ?NUMBER) returns the smallest &%Integer greater than or equal to the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_4452,axiom,
    ! [V__NUMBER,V__INT] :
      ( ( s__instance(V__INT,s__Quantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__CeilingFn(V__NUMBER) = V__INT
       => ~ ? [V__OTHERINT] :
              ( s__instance(V__OTHERINT,s__Quantity)
              & s__instance(V__OTHERINT,s__Integer)
              & greatereq(V__OTHERINT,V__NUMBER)
              & less(V__OTHERINT,V__INT) ) ) ) ).

fof(kb_SUMO_4453,axiom,
    s__instance(s__CosineFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4454,axiom,
    s__instance(s__CosineFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4455,axiom,
    s__domain(s__CosineFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_4456,axiom,
    s__range(s__CosineFn__m,s__RealNumber) ).

fof(kb_SUMO_4457,axiom,
    s__documentation(s__CosineFn__m,s__EnglishLanguage,'(&%CosineFn ?DEGREE) returns the cosine of the &%PlaneAngleMeasure ?DEGREE. The cosine of ?DEGREE is the ratio of the side next to ?DEGREE to the hypotenuse in a right-angled triangle.') ).

fof(kb_SUMO_4458,axiom,
    s__instance(s__DenominatorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4459,axiom,
    s__instance(s__DenominatorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4460,axiom,
    s__domain(s__DenominatorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4461,axiom,
    s__range(s__DenominatorFn__m,s__Integer) ).

fof(kb_SUMO_4462,axiom,
    s__documentation(s__DenominatorFn__m,s__EnglishLanguage,'(&%DenominatorFn ?NUMBER) returns the denominator of the canonical reduced form of the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_4463,axiom,
    s__instance(s__ExponentiationFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4464,axiom,
    s__instance(s__ExponentiationFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4465,axiom,
    s__instance(s__RelationExtendedToQuantities__t,s__SetOrClass) ).

fof(kb_SUMO_4466,axiom,
    s__instance(s__ExponentiationFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4467,axiom,
    s__domain(s__ExponentiationFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4468,axiom,
    s__domain(s__ExponentiationFn__m,"2",s__Integer) ).

fof(kb_SUMO_4469,axiom,
    s__range(s__ExponentiationFn__m,s__Quantity) ).

fof(kb_SUMO_4470,axiom,
    s__documentation(s__ExponentiationFn__m,s__EnglishLanguage,'(&%ExponentiationFn ?NUMBER ?INT) returns the &%RealNumber ?NUMBER raised to the power of the &%Integer ?INT.') ).

fof(kb_SUMO_4471,axiom,
    s__instance(s__FloorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4472,axiom,
    s__instance(s__FloorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4473,axiom,
    s__domain(s__FloorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4474,axiom,
    s__range(s__FloorFn__m,s__Integer) ).

fof(kb_SUMO_4475,axiom,
    s__documentation(s__FloorFn__m,s__EnglishLanguage,'(&%FloorFn ?NUMBER) returns the largest &%Integer less than or equal to the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_4476,axiom,
    ! [V__NUMBER,V__INT] :
      ( ( s__instance(V__INT,s__Quantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__FloorFn(V__NUMBER) = V__INT
       => ~ ? [V__OTHERINT] :
              ( s__instance(V__OTHERINT,s__Quantity)
              & s__instance(V__OTHERINT,s__Integer)
              & lesseq(V__OTHERINT,V__NUMBER)
              & greater(V__OTHERINT,V__INT) ) ) ) ).

fof(kb_SUMO_4477,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__Function) ).

fof(kb_SUMO_4478,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_4479,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4480,axiom,
    s__instance(s__PartialValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4481,axiom,
    s__range(s__GreatestCommonDivisorFn__m,s__Integer) ).

fof(kb_SUMO_4482,axiom,
    s__documentation(s__GreatestCommonDivisorFn__m,s__EnglishLanguage,'(&%GreatestCommonDivisorFn ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ).

fof(kb_SUMO_4483,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__GreatestCommonDivisorFn_1(V__ROW1) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4484,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__GreatestCommonDivisorFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4485,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__GreatestCommonDivisorFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4486,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__GreatestCommonDivisorFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4487,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__GreatestCommonDivisorFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4488,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__GreatestCommonDivisorFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4489,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__GreatestCommonDivisorFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4490,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__GreatestCommonDivisorFn_1(V__ROW1) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4491,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__GreatestCommonDivisorFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4492,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__GreatestCommonDivisorFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4493,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__GreatestCommonDivisorFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4494,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__GreatestCommonDivisorFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4495,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__GreatestCommonDivisorFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4496,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__GreatestCommonDivisorFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_4497,axiom,
    s__documentation(s__multiplicativeFactor__m,s__EnglishLanguage,'(multiplicativeFactor ?NUMBER1 ?NUMBER2) means that ?NUMBER1 is a factor of ?NUMBER2, i.e. ?NUMBER1 can be multiplied by some &%Integer to give ?NUMBER2 as a result.') ).

fof(kb_SUMO_4498,axiom,
    s__instance(s__multiplicativeFactor__m,s__BinaryPredicate) ).

fof(kb_SUMO_4499,axiom,
    s__instance(s__multiplicativeFactor__m,s__TransitiveRelation) ).

fof(kb_SUMO_4500,axiom,
    s__domain(s__multiplicativeFactor__m,"1",s__Integer) ).

fof(kb_SUMO_4501,axiom,
    s__domain(s__multiplicativeFactor__m,"2",s__Integer) ).

fof(kb_SUMO_4502,axiom,
    ! [V__N2,V__N1] :
      ( ( s__instance(V__N1,s__Integer)
        & s__instance(V__N2,s__Integer) )
     => ( s__multiplicativeFactor(V__N1,V__N2)
       => ? [V__I] :
            ( s__instance(V__I,s__Quantity)
            & s__instance(V__I,s__Integer)
            & V__N2 = times(V__N1,V__I) ) ) ) ).

fof(kb_SUMO_4503,axiom,
    s__instance(s__ImaginaryPartFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4504,axiom,
    s__instance(s__ImaginaryPartFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4505,axiom,
    s__domain(s__ImaginaryPartFn__m,"1",s__ComplexNumber) ).

fof(kb_SUMO_4506,axiom,
    s__range(s__ImaginaryPartFn__m,s__ImaginaryNumber) ).

fof(kb_SUMO_4507,axiom,
    s__documentation(s__ImaginaryPartFn__m,s__EnglishLanguage,'(&%ImaginaryPartFn ?NUMBER) returns the part of ?NUMBER that has the square root of -1 as its factor.') ).

fof(kb_SUMO_4508,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ComplexNumber)
     => ? [V__PART1,V__PART2] :
          ( V__PART1 = s__RealNumberFn(V__NUMBER)
          & V__PART2 = s__ImaginaryPartFn(V__NUMBER) ) ) ).

fof(kb_SUMO_4509,axiom,
    s__instance(s__IntegerSquareRootFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4510,axiom,
    s__instance(s__IntegerSquareRootFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4511,axiom,
    s__domain(s__IntegerSquareRootFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4512,axiom,
    s__range(s__IntegerSquareRootFn__m,s__NonnegativeInteger) ).

fof(kb_SUMO_4513,axiom,
    s__documentation(s__IntegerSquareRootFn__m,s__EnglishLanguage,'(&%IntegerSquareRootFn ?NUMBER) returns the integer square root of ?NUMBER.') ).

fof(kb_SUMO_4514,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__Function) ).

fof(kb_SUMO_4515,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4516,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_4517,axiom,
    s__range(s__LeastCommonMultipleFn__m,s__Integer) ).

fof(kb_SUMO_4518,axiom,
    s__documentation(s__LeastCommonMultipleFn__m,s__EnglishLanguage,'(&%LeastCommonMultipleFn ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ).

fof(kb_SUMO_4519,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__LeastCommonMultipleFn_1(V__ROW1) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4520,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__LeastCommonMultipleFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4521,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__LeastCommonMultipleFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4522,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__LeastCommonMultipleFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4523,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__LeastCommonMultipleFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4524,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__LeastCommonMultipleFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4525,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__LeastCommonMultipleFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_4526,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__LeastCommonMultipleFn_1(V__ROW1) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4527,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__LeastCommonMultipleFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4528,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__LeastCommonMultipleFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4529,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__LeastCommonMultipleFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4530,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__LeastCommonMultipleFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4531,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__LeastCommonMultipleFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4532,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__LeastCommonMultipleFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_4533,axiom,
    s__instance(s__LogFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4534,axiom,
    s__domain(s__LogFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4535,axiom,
    s__domain(s__LogFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_4536,axiom,
    s__range(s__LogFn__m,s__RealNumber) ).

fof(kb_SUMO_4537,axiom,
    s__documentation(s__LogFn__m,s__EnglishLanguage,'(LogFn ?NUMBER ?INT) returns the logarithm of the &%RealNumber ?NUMBER in the base denoted by the &%Integer ?INT.') ).

fof(kb_SUMO_4538,axiom,
    s__instance(s__MaxFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4539,axiom,
    s__instance(s__MaxFn__m,s__AssociativeFunction) ).

fof(kb_SUMO_4540,axiom,
    s__instance(s__MaxFn__m,s__CommutativeFunction) ).

fof(kb_SUMO_4541,axiom,
    s__instance(s__MaxFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4542,axiom,
    s__instance(s__MaxFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4543,axiom,
    s__domain(s__MaxFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4544,axiom,
    s__domain(s__MaxFn__m,"2",s__Quantity) ).

fof(kb_SUMO_4545,axiom,
    s__range(s__MaxFn__m,s__Quantity) ).

fof(kb_SUMO_4546,axiom,
    s__documentation(s__MaxFn__m,s__EnglishLanguage,'(&%MaxFn ?NUMBER1 ?NUMBER2) is the largest of ?NUMBER1 and ?NUMBER2. In cases where ?NUMBER1 is equal to ?NUMBER2, &%MaxFn returns one of its arguments.') ).

fof(kb_SUMO_4547,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__MaxFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => ( ( V__NUMBER = V__NUMBER1
            & greater(V__NUMBER1,V__NUMBER2) )
          | ( V__NUMBER = V__NUMBER2
            & greater(V__NUMBER2,V__NUMBER1) )
          | ( V__NUMBER = V__NUMBER1
            & V__NUMBER = V__NUMBER2 ) ) ) ) ).

fof(kb_SUMO_4548,axiom,
    s__instance(s__MinFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4549,axiom,
    s__instance(s__MinFn__m,s__AssociativeFunction) ).

fof(kb_SUMO_4550,axiom,
    s__instance(s__MinFn__m,s__CommutativeFunction) ).

fof(kb_SUMO_4551,axiom,
    s__instance(s__MinFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4552,axiom,
    s__instance(s__MinFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4553,axiom,
    s__domain(s__MinFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4554,axiom,
    s__domain(s__MinFn__m,"2",s__Quantity) ).

fof(kb_SUMO_4555,axiom,
    s__range(s__MinFn__m,s__Quantity) ).

fof(kb_SUMO_4556,axiom,
    s__documentation(s__MinFn__m,s__EnglishLanguage,'(&%MinFn ?NUMBER1 ?NUMBER2) is the smallest of ?NUMBER1 and ?NUMBER2. In cases where ?NUMBER1 is equal to ?NUMBER2, &%MinFn returns one of its arguments.') ).

fof(kb_SUMO_4557,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__MinFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => ( ( V__NUMBER = V__NUMBER1
            & less(V__NUMBER1,V__NUMBER2) )
          | ( V__NUMBER = V__NUMBER2
            & less(V__NUMBER2,V__NUMBER1) )
          | ( V__NUMBER = V__NUMBER1
            & V__NUMBER = V__NUMBER2 ) ) ) ) ).

fof(kb_SUMO_4558,axiom,
    s__instance(s__NumeratorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4559,axiom,
    s__instance(s__NumeratorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4560,axiom,
    s__domain(s__NumeratorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4561,axiom,
    s__range(s__NumeratorFn__m,s__Integer) ).

fof(kb_SUMO_4562,axiom,
    s__documentation(s__NumeratorFn__m,s__EnglishLanguage,'(&%NumeratorFn ?NUMBER) returns the numerator of the canonical reduced form ?NUMBER.') ).

fof(kb_SUMO_4563,axiom,
    s__instance(s__Pi,s__PositiveRealNumber) ).

fof(kb_SUMO_4564,axiom,
    s__instance(s__PositiveRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_4565,axiom,
    s__documentation(s__Pi,s__EnglishLanguage,'&%Pi is the &%RealNumber that is the ratio of the perimeter of a circle to its diameter. It is approximately equal to 3.141592653589793.') ).

fof(kb_SUMO_4566,axiom,
    s__instance(s__NumberE,s__PositiveRealNumber) ).

fof(kb_SUMO_4567,axiom,
    s__documentation(s__NumberE,s__EnglishLanguage,'&%NumberE is the &%RealNumber that is the base for natural logarithms. It is approximately equal to 2.718282.') ).

fof(kb_SUMO_4568,axiom,
    s__instance(s__RationalNumberFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4569,axiom,
    s__domain(s__RationalNumberFn__m,"1",s__Number) ).

fof(kb_SUMO_4570,axiom,
    s__range(s__RationalNumberFn__m,s__RationalNumber) ).

fof(kb_SUMO_4571,axiom,
    s__documentation(s__RationalNumberFn__m,s__EnglishLanguage,'(&%RationalNumberFn ?NUMBER) returns the rational representation of ?NUMBER.') ).

fof(kb_SUMO_4572,axiom,
    s__instance(s__RealNumberFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4573,axiom,
    s__domain(s__RealNumberFn__m,"1",s__Number) ).

fof(kb_SUMO_4574,axiom,
    s__range(s__RealNumberFn__m,s__RealNumber) ).

fof(kb_SUMO_4575,axiom,
    s__documentation(s__RealNumberFn__m,s__EnglishLanguage,'(RealNumberFn ?NUMBER) returns the part of ?NUMBER that is a &%RealNumber.') ).

fof(kb_SUMO_4576,axiom,
    s__instance(s__ReciprocalFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4577,axiom,
    s__instance(s__ReciprocalFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4578,axiom,
    s__instance(s__ReciprocalFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4579,axiom,
    s__domain(s__ReciprocalFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4580,axiom,
    s__range(s__ReciprocalFn__m,s__Quantity) ).

fof(kb_SUMO_4581,axiom,
    s__documentation(s__ReciprocalFn__m,s__EnglishLanguage,'(ReciprocalFn ?NUMBER) is the reciprocal element of ?NUMBER with respect to the multiplication operator (&%MultiplicationFn), i.e. 1/?NUMBER. Not all numbers have a reciprocal element. For example the number 0 does not. If a number ?NUMBER has a reciprocal ?RECIP, then the product of ?NUMBER and ?RECIP will be 1, e.g. 3*1/3 = 1. The reciprocal of an element is &%equal to applying the &%ExponentiationFn function to the element to the power -1.') ).

fof(kb_SUMO_4582,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => s__ReciprocalFn(V__NUMBER) = s__ExponentiationFn(V__NUMBER,"-1") ) ).

fof(kb_SUMO_4583,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => "1" = times(V__NUMBER,s__ReciprocalFn(V__NUMBER)) ) ).

fof(kb_SUMO_4584,axiom,
    s__instance(s__RemainderFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4585,axiom,
    s__instance(s__RemainderFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4586,axiom,
    s__instance(s__RemainderFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4587,axiom,
    s__domain(s__RemainderFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4588,axiom,
    s__domain(s__RemainderFn__m,"2",s__Quantity) ).

fof(kb_SUMO_4589,axiom,
    s__range(s__RemainderFn__m,s__Quantity) ).

fof(kb_SUMO_4590,axiom,
    s__documentation(s__RemainderFn__m,s__EnglishLanguage,'(RemainderFn ?NUMBER ?DIVISOR) is the remainder of the number ?NUMBER divided by the number ?DIVISOR. The result has the same sign as ?DIVISOR.') ).

fof(kb_SUMO_4591,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity)
        & s__instance(V__NUMBER,s__Quantity) )
     => ( s__RemainderFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
      <=> plus(times(s__FloorFn(divide(V__NUMBER1,V__NUMBER2)),V__NUMBER2),V__NUMBER) = V__NUMBER1 ) ) ).

fof(kb_SUMO_4592,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__RealNumber)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__RemainderFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => s__SignumFn(V__NUMBER2) = s__SignumFn(V__NUMBER) ) ) ).

fof(kb_SUMO_4593,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__EvenInteger)
       => s__RemainderFn(V__NUMBER,"2") = "0" ) ) ).

fof(kb_SUMO_4594,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__OddInteger)
       => s__RemainderFn(V__NUMBER,"2") = "1" ) ) ).

fof(kb_SUMO_4595,axiom,
    ! [V__PRIME] :
      ( s__instance(V__PRIME,s__PrimeNumber)
     => ! [V__NUMBER] :
          ( ( s__instance(V__NUMBER,s__Quantity)
            & s__instance(V__PRIME,s__Quantity) )
         => ( s__RemainderFn(V__PRIME,V__NUMBER) = "0"
           => ( V__NUMBER = "1"
              | V__NUMBER = V__PRIME ) ) ) ) ).

fof(kb_SUMO_4596,axiom,
    s__instance(s__RoundFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4597,axiom,
    s__instance(s__RoundFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_4598,axiom,
    s__instance(s__RoundFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4599,axiom,
    s__domain(s__RoundFn__m,"1",s__Quantity) ).

fof(kb_SUMO_4600,axiom,
    s__range(s__RoundFn__m,s__Quantity) ).

fof(kb_SUMO_4601,axiom,
    s__documentation(s__RoundFn__m,s__EnglishLanguage,'(&%RoundFn ?NUMBER) is the &%Integer closest to ?NUMBER on the number line. If ?NUMBER is halfway between two &%Integers (for example 3.5), it denotes the larger &%Integer.') ).

fof(kb_SUMO_4602,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( s__instance(V__NUMBER1,s__RealNumber)
     => ( s__RoundFn(V__NUMBER1) = V__NUMBER2
       => ( ( less(minus(V__NUMBER1,s__FloorFn(V__NUMBER1)),"0.5")
           => V__NUMBER2 = s__FloorFn(V__NUMBER1) )
          | ( greatereq(minus(V__NUMBER1,s__FloorFn(V__NUMBER1)),"0.5")
           => V__NUMBER2 = s__CeilingFn(V__NUMBER1) ) ) ) ) ).

fof(kb_SUMO_4603,axiom,
    s__instance(s__SignumFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4604,axiom,
    s__instance(s__SignumFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4605,axiom,
    s__domain(s__SignumFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4606,axiom,
    s__range(s__SignumFn__m,s__Integer) ).

fof(kb_SUMO_4607,axiom,
    s__documentation(s__SignumFn__m,s__EnglishLanguage,'(SignumFn ?NUMBER) denotes the sign of ?NUMBER. This is one of the following values: -1, 1, or 0.') ).

fof(kb_SUMO_4608,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__NonnegativeRealNumber)
       => ( s__SignumFn(V__NUMBER) = "1"
          | s__SignumFn(V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_4609,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__PositiveRealNumber)
       => s__SignumFn(V__NUMBER) = "1" ) ) ).

fof(kb_SUMO_4610,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__NegativeRealNumber)
       => s__SignumFn(V__NUMBER) = "-1" ) ) ).

fof(kb_SUMO_4611,axiom,
    s__instance(s__SineFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4612,axiom,
    s__instance(s__SineFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4613,axiom,
    s__domain(s__SineFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_4614,axiom,
    s__range(s__SineFn__m,s__RealNumber) ).

fof(kb_SUMO_4615,axiom,
    s__documentation(s__SineFn__m,s__EnglishLanguage,'(&%SineFn ?DEGREE) is the sine of the &%PlaneAngleMeasure ?DEGREE. The sine of ?DEGREE is the ratio of the side opposite ?DEGREE to the hypotenuse in a right-angled triangle.') ).

fof(kb_SUMO_4616,axiom,
    s__instance(s__SquareRootFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4617,axiom,
    s__domain(s__SquareRootFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4618,axiom,
    s__range(s__SquareRootFn__m,s__Number) ).

fof(kb_SUMO_4619,axiom,
    s__documentation(s__SquareRootFn__m,s__EnglishLanguage,'(SquareRootFn ?NUMBER) is the principal square root of ?NUMBER.') ).

fof(kb_SUMO_4620,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__SquareRootFn(V__NUMBER1) = V__NUMBER2
       => times(V__NUMBER2,V__NUMBER2) = V__NUMBER1 ) ) ).

fof(kb_SUMO_4621,axiom,
    s__instance(s__TangentFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4622,axiom,
    s__instance(s__TangentFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4623,axiom,
    s__domain(s__TangentFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_4624,axiom,
    s__range(s__TangentFn__m,s__RealNumber) ).

fof(kb_SUMO_4625,axiom,
    s__documentation(s__TangentFn__m,s__EnglishLanguage,'(&%TangentFn ?DEGREE) is the tangent of the &%PlaneAngleMeasure ?DEGREE. The tangent of ?DEGREE is the ratio of the side opposite ?DEGREE to the side next to ?DEGREE in a right-angled triangle.') ).

fof(kb_SUMO_4626,axiom,
    ! [V__DEGREE] :
      ( s__instance(V__DEGREE,s__PlaneAngleMeasure)
     => s__TangentFn(V__DEGREE) = divide(s__SineFn(V__DEGREE),s__CosineFn(V__DEGREE)) ) ).

fof(kb_SUMO_4627,axiom,
    s__instance(s__identityElement__m,s__BinaryPredicate) ).

fof(kb_SUMO_4628,axiom,
    s__instance(s__identityElement__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4629,axiom,
    s__domain(s__identityElement__m,"1",s__BinaryFunction) ).

fof(kb_SUMO_4630,axiom,
    s__domain(s__identityElement__m,"2",s__Entity) ).

fof(kb_SUMO_4631,axiom,
    s__documentation(s__identityElement__m,s__EnglishLanguage,'An object ?ID is the identity element for BinaryFunction ?FUNCTION just in case, for every instance ?INST, applying ?FUNCTION to ?INST and ?ID results in ?INST.') ).

fof(kb_SUMO_4632,axiom,
    ! [V__CLASS,V__ID,V__FUNCTION] :
      ( s__identityElement(V__FUNCTION,V__ID)
     => ! [V__INST] :
          ( ( s__instance(V__FUNCTION,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__ID,V__INST) = V__INST ) ) ) ).

fof(kb_SUMO_4633,axiom,
    s__identityElement(times__m,"1") ).

fof(kb_SUMO_4634,axiom,
    s__identityElement(plus__m,"0") ).

fof(kb_SUMO_4635,axiom,
    s__identityElement(minus__m,"0") ).

fof(kb_SUMO_4636,axiom,
    s__identityElement(divide__m,"1") ).

fof(kb_SUMO_4637,axiom,
    s__instance(s__SuccessorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4638,axiom,
    s__instance(s__SuccessorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4639,axiom,
    s__instance(s__TotalValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4640,axiom,
    s__domain(s__SuccessorFn__m,"1",s__Integer) ).

fof(kb_SUMO_4641,axiom,
    s__range(s__SuccessorFn__m,s__Integer) ).

fof(kb_SUMO_4642,axiom,
    s__documentation(s__SuccessorFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Integer to its successor, e.g. the successor of 5 is 6.') ).

fof(kb_SUMO_4643,axiom,
    ! [V__INT2,V__INT1] :
      ( ( s__instance(V__INT1,s__Integer)
        & s__instance(V__INT2,s__Integer) )
     => ( s__SuccessorFn(V__INT1) = s__SuccessorFn(V__INT2)
       => V__INT1 = V__INT2 ) ) ).

fof(kb_SUMO_4644,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => less(V__INT,s__SuccessorFn(V__INT)) ) ).

fof(kb_SUMO_4645,axiom,
    ! [V__INT2,V__INT1] :
      ( s__instance(V__INT2,s__Quantity)
     => ( ( s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer) )
       => ~ ( less(V__INT1,V__INT2)
            & less(V__INT2,s__SuccessorFn(V__INT1)) ) ) ) ).

fof(kb_SUMO_4646,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => V__INT = s__SuccessorFn(s__PredecessorFn(V__INT)) ) ).

fof(kb_SUMO_4647,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => V__INT = s__PredecessorFn(s__SuccessorFn(V__INT)) ) ).

fof(kb_SUMO_4648,axiom,
    s__instance(s__PredecessorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4649,axiom,
    s__instance(s__PredecessorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4650,axiom,
    s__domain(s__PredecessorFn__m,"1",s__Integer) ).

fof(kb_SUMO_4651,axiom,
    s__range(s__PredecessorFn__m,s__Integer) ).

fof(kb_SUMO_4652,axiom,
    s__documentation(s__PredecessorFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Integer to its predecessor, e.g. the predecessor of 5 is 4.') ).

fof(kb_SUMO_4653,axiom,
    ! [V__INT2,V__INT1] :
      ( ( s__instance(V__INT1,s__Integer)
        & s__instance(V__INT2,s__Integer) )
     => ( s__PredecessorFn(V__INT1) = s__PredecessorFn(V__INT2)
       => V__INT1 = V__INT2 ) ) ).

fof(kb_SUMO_4654,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => greater(V__INT,s__PredecessorFn(V__INT)) ) ).

fof(kb_SUMO_4655,axiom,
    ! [V__INT2,V__INT1] :
      ( s__instance(V__INT2,s__Quantity)
     => ( ( s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer) )
       => ~ ( less(V__INT2,V__INT1)
            & less(s__PredecessorFn(V__INT1),V__INT2) ) ) ) ).

fof(kb_SUMO_4656,axiom,
    s__instance(s__average__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4657,axiom,
    s__instance(s__average__m,s__BinaryPredicate) ).

fof(kb_SUMO_4658,axiom,
    s__instance(s__average__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4659,axiom,
    s__domain(s__average__m,"1",s__List) ).

fof(kb_SUMO_4660,axiom,
    s__domain(s__average__m,"2",s__RealNumber) ).

fof(kb_SUMO_4661,axiom,
    s__synonymousExternalConcept(average,s__average__m,s__EnglishLanguage) ).

fof(kb_SUMO_4662,axiom,
    s__documentation(s__average__m,s__EnglishLanguage,'A partial function that relates a &%List to a &%RealNumber, provided that the &%List only has list elements that are &%RealNumbers. The &%RealNumber associated with the &%List is equal to the mathematical average of the &%RealNumbers in the &%List divided by the total number of list elements.') ).

fof(kb_SUMO_4663,axiom,
    ! [V__AVERAGE,V__LIST] :
      ( s__average(V__LIST,V__AVERAGE)
     => ! [V__LISTITEM] :
          ( ( s__instance(V__LIST,s__List)
            & s__instance(V__AVERAGE,s__RealNumber) )
         => ( s__inList(V__LISTITEM,V__LIST)
           => s__instance(V__LISTITEM,s__RealNumber) ) ) ) ).

fof(kb_SUMO_4664,axiom,
    s__subrelation(s__subset__m,s__subclass__m) ).

fof(kb_SUMO_4665,axiom,
    s__domain(s__subset__m,"1",s__Set) ).

fof(kb_SUMO_4666,axiom,
    s__domain(s__subset__m,"2",s__Set) ).

fof(kb_SUMO_4667,axiom,
    s__documentation(s__subset__m,s__EnglishLanguage,'(subset ?SET1 ?SET2) is true just in case the &%elements of the &%Set ?SET1 are also &%elements of the &%Set ?SET2.') ).

fof(kb_SUMO_4668,axiom,
    ! [V__SUBSET,V__SET] :
      ( s__subset(V__SUBSET,V__SET)
     => ! [V__ELEMENT] :
          ( ( s__instance(V__SET,s__Set)
            & s__instance(V__SUBSET,s__Set) )
         => ( s__element(V__ELEMENT,V__SUBSET)
           => s__element(V__ELEMENT,V__SET) ) ) ) ).

fof(kb_SUMO_4669,axiom,
    s__instance(s__element__m,s__BinaryPredicate) ).

fof(kb_SUMO_4670,axiom,
    s__instance(s__element__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4671,axiom,
    s__subrelation(s__element__m,s__instance__m) ).

fof(kb_SUMO_4672,axiom,
    s__domain(s__element__m,"1",s__Entity) ).

fof(kb_SUMO_4673,axiom,
    s__domain(s__element__m,"2",s__Set) ).

fof(kb_SUMO_4674,axiom,
    s__documentation(s__element__m,s__EnglishLanguage,'(element ?ENTITY ?SET) is true just in case ?ENTITY is contained in the &%Set ?SET. An &%Entity can be an &%element of another &%Entity only if the latter is a &%Set.') ).

fof(kb_SUMO_4675,axiom,
    ! [V__SET2,V__SET1] :
      ( ! [V__ELEMENT] :
          ( ( s__instance(V__SET1,s__Set)
            & s__instance(V__SET2,s__Set) )
         => ( s__element(V__ELEMENT,V__SET1)
          <=> s__element(V__ELEMENT,V__SET2) ) )
     => V__SET1 = V__SET2 ) ).

fof(kb_SUMO_4676,axiom,
    s__instance(s__UnionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4677,axiom,
    s__instance(s__UnionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4678,axiom,
    s__domain(s__UnionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4679,axiom,
    s__domain(s__UnionFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4680,axiom,
    s__range(s__UnionFn__m,s__SetOrClass) ).

fof(kb_SUMO_4681,axiom,
    s__documentation(s__UnionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the union of these &%SetOrClasses. An object is an &%element of the union of two &%SetOrClasses just in case it is an &%instance of either &%SetOrClass.') ).

fof(kb_SUMO_4682,axiom,
    ! [V__C2,V__U,V__C1] :
      ( V__U = s__UnionFn(V__C1,V__C2)
    <=> ! [V__I1,V__I2,V__I3] :
          ( ( s__instance(V__C1,s__SetOrClass)
            & s__instance(V__U,s__SetOrClass)
            & s__instance(V__C2,s__SetOrClass) )
         => ( ( s__instance(V__I1,V__C1)
              & s__instance(V__I2,V__C2)
              & s__instance(V__I3,V__U) )
           => ( s__instance(V__I1,V__U)
              & s__instance(V__I2,V__U)
              & ( s__instance(V__I3,V__C1)
                | s__instance(V__I3,V__C2) ) ) ) ) ) ).

fof(kb_SUMO_4683,axiom,
    s__instance(s__IntersectionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4684,axiom,
    s__instance(s__IntersectionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4685,axiom,
    s__domain(s__IntersectionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4686,axiom,
    s__domain(s__IntersectionFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4687,axiom,
    s__range(s__IntersectionFn__m,s__SetOrClass) ).

fof(kb_SUMO_4688,axiom,
    s__documentation(s__IntersectionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the intersection of these &%SetOrClasses. An object is an instance of the intersection of two &%SetOrClasses just in case it is an instance of both of those &%SetOrClasses.') ).

fof(kb_SUMO_4689,axiom,
    s__instance(s__RelativeComplementFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4690,axiom,
    s__instance(s__RelativeComplementFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4691,axiom,
    s__domain(s__RelativeComplementFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4692,axiom,
    s__domain(s__RelativeComplementFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4693,axiom,
    s__range(s__RelativeComplementFn__m,s__SetOrClass) ).

fof(kb_SUMO_4694,axiom,
    s__documentation(s__RelativeComplementFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the difference between these &%SetOrClasses. More precisely, (&%RelativeComplementFn ?CLASS1 ?CLASS2) denotes the instances of ?CLASS1 that are not also instances of ?CLASS2.') ).

fof(kb_SUMO_4695,axiom,
    s__instance(s__ComplementFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4696,axiom,
    s__instance(s__ComplementFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4697,axiom,
    s__domain(s__ComplementFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4698,axiom,
    s__range(s__ComplementFn__m,s__SetOrClass) ).

fof(kb_SUMO_4699,axiom,
    s__documentation(s__ComplementFn__m,s__EnglishLanguage,'The complement of a given &%SetOrClass C is the &%SetOrClass of all things that are not instances of C. In other words, an object is an instance of the complement of a &%SetOrClass C just in case it is not an instance of C.') ).

fof(kb_SUMO_4700,axiom,
    s__instance(s__GeneralizedUnionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4701,axiom,
    s__instance(s__GeneralizedUnionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4702,axiom,
    s__domainSubclass(s__GeneralizedUnionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4703,axiom,
    s__range(s__GeneralizedUnionFn__m,s__SetOrClass) ).

fof(kb_SUMO_4704,axiom,
    s__documentation(s__GeneralizedUnionFn__m,s__EnglishLanguage,'A &%UnaryFunction that takes a &%SetOrClass of &%Classes as its single argument and returns a &%SetOrClass which is the merge of all of the &%Classes in the original &%SetOrClass, i.e. the &%SetOrClass containing just those instances which are instances of an instance of the original &%SetOrClass.') ).

fof(kb_SUMO_4705,axiom,
    s__instance(s__GeneralizedIntersectionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4706,axiom,
    s__instance(s__GeneralizedIntersectionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4707,axiom,
    s__domainSubclass(s__GeneralizedIntersectionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_4708,axiom,
    s__range(s__GeneralizedIntersectionFn__m,s__SetOrClass) ).

fof(kb_SUMO_4709,axiom,
    s__documentation(s__GeneralizedIntersectionFn__m,s__EnglishLanguage,'A &%UnaryFunction that takes a &%SetOrClass of &%Classes as its single argument and returns a &%SetOrClass which is the intersection of all of the &%Classes in the original &%SetOrClass, i.e. the &%SetOrClass containing just those instances which are instances of all instances of the original &%SetOrClass.') ).

fof(kb_SUMO_4710,axiom,
    s__instance(s__CardinalityFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4711,axiom,
    s__instance(s__CardinalityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4712,axiom,
    s__instance(s__CardinalityFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4713,axiom,
    s__domain(s__CardinalityFn__m,"1",s__UnionFn(s__SetOrClass,s__Collection)) ).

fof(kb_SUMO_4714,axiom,
    s__range(s__CardinalityFn__m,s__Number) ).

fof(kb_SUMO_4715,axiom,
    s__documentation(s__CardinalityFn__m,s__EnglishLanguage,'(CardinalityFn ?CLASS) returns the number of instances in the &%SetOrClass ?CLASS or the number of members in the ?CLASS &%Collection.') ).

%----I believe this is a BUG 18-June-2012
% fof(kb_SUMO_4716,axiom,(
%     s__subclass(s__NullSet,s__SetOrClass) )).

fof(kb_SUMO_4717,axiom,
    s__instance(s__NullSet__t,s__SetOrClass) ).

fof(kb_SUMO_4718,axiom,
    s__documentation(s__NullSet,s__EnglishLanguage,'Any &%SetOrClass that contains no instances.') ).

fof(kb_SUMO_4719,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__SetOrClass)
     => ( s__instance(V__SET,s__NullSet)
       => ~ ? [V__INST] : s__instance(V__INST,V__SET) ) ) ).

fof(kb_SUMO_4720,axiom,
    s__subclass(s__NonNullSet,s__SetOrClass) ).

fof(kb_SUMO_4721,axiom,
    s__instance(s__NonNullSet__t,s__SetOrClass) ).

fof(kb_SUMO_4722,axiom,
    s__documentation(s__NonNullSet,s__EnglishLanguage,'Any &%SetOrClass that contains at least one instance.') ).

fof(kb_SUMO_4723,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__SetOrClass)
     => ( s__instance(V__SET,s__NonNullSet)
       => ? [V__INST] : s__instance(V__INST,V__SET) ) ) ).

fof(kb_SUMO_4724,axiom,
    s__subclass(s__FiniteSet,s__Set) ).

fof(kb_SUMO_4725,axiom,
    s__instance(s__FiniteSet__t,s__SetOrClass) ).

fof(kb_SUMO_4726,axiom,
    s__documentation(s__FiniteSet,s__EnglishLanguage,'A &%Set containing a finite number of elements.') ).

fof(kb_SUMO_4727,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__UnionFn(s__SetOrClass,s__Collection))
     => ( s__instance(V__SET,s__FiniteSet)
       => ? [V__NUMBER] :
            ( s__instance(V__NUMBER,s__NonnegativeInteger)
            & V__NUMBER = s__CardinalityFn(V__SET) ) ) ) ).

fof(kb_SUMO_4728,axiom,
    s__subclass(s__PairwiseDisjointClass,s__SetOrClass) ).

fof(kb_SUMO_4729,axiom,
    s__instance(s__PairwiseDisjointClass__t,s__SetOrClass) ).

fof(kb_SUMO_4730,axiom,
    s__documentation(s__PairwiseDisjointClass,s__EnglishLanguage,'A &%SetOrClass is a &%PairwiseDisjointClass just in case every instance of the &%SetOrClass is either &%equal to or &%disjoint from every other instance of the &%SetOrClass.') ).

fof(kb_SUMO_4731,axiom,
    ! [V__SUPERCLASS] :
      ( s__instance(V__SUPERCLASS,s__PairwiseDisjointClass)
     => ! [V__CLASS1,V__CLASS2] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass)
            & s__instance(V__SUPERCLASS,s__SetOrClass) )
         => ( ( s__instance(V__CLASS1,V__SUPERCLASS)
              & s__instance(V__CLASS2,V__SUPERCLASS) )
           => ( V__CLASS1 = V__CLASS2
              | s__disjoint(V__CLASS1,V__CLASS2) ) ) ) ) ).

fof(kb_SUMO_4732,axiom,
    s__subclass(s__MutuallyDisjointClass,s__SetOrClass) ).

fof(kb_SUMO_4733,axiom,
    s__instance(s__MutuallyDisjointClass__t,s__SetOrClass) ).

fof(kb_SUMO_4734,axiom,
    s__documentation(s__MutuallyDisjointClass,s__EnglishLanguage,'A &%SetOrClass is a &%MutuallyDisjointClass just in case there exists nothing which is an instance of all of the instances of the original &%SetOrClass.') ).

fof(kb_SUMO_4735,axiom,
    ! [V__CLASS] :
      ( s__instance(V__CLASS,s__MutuallyDisjointClass)
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__INST1,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__INST1) )
           => ? [V__INST3] :
                ( s__instance(V__INST3,s__SetOrClass)
                & s__instance(V__INST3,V__CLASS)
                & ~ s__instance(V__INST2,V__INST3) ) ) ) ) ).

fof(kb_SUMO_4736,axiom,
    s__instance(s__KappaFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4737,axiom,
    s__domain(s__KappaFn__m,"1",s__SymbolicString) ).

fof(kb_SUMO_4738,axiom,
    s__domain(s__KappaFn__m,"2",s__Formula) ).

fof(kb_SUMO_4739,axiom,
    s__range(s__KappaFn__m,s__Class) ).

fof(kb_SUMO_4740,axiom,
    s__documentation(s__KappaFn__m,s__EnglishLanguage,'A class-forming operator that takes two arguments: a variable and a formula containing at least one unbound occurrence of the variable. The result of applying &%KappaFn to a variable and a formula is the &%SetOrClass of things that satisfy the formula. For example, we can denote the &%SetOrClass of prime numbers that are less than 100 with the following expression: (KappaFn ?NUMBER (and (instance ?NUMBER PrimeNumber) (lessThan ?NUMBER 100))). Note that the use of this function is discouraged, since there is currently no axiomatic support for it.') ).

fof(kb_SUMO_4741,axiom,
    s__subclass(s__Graph,s__Abstract) ).

fof(kb_SUMO_4742,axiom,
    s__documentation(s__Graph,s__EnglishLanguage,'The &%Class of graphs, where a graph is understood to be a set of &%GraphNodes connected by &%GraphArcs. Note that this &%Class includes only connected graphs, i.e. graphs in which there is a &%GraphPath between any two &%GraphNodes. Note too that every &%Graph is required to contain at least two &%GraphArcs and three &%GraphNodes.') ).

fof(kb_SUMO_4743,axiom,
    ! [V__GRAPH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__GRAPH,s__Graph)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__NODE2,s__GraphNode)
        & s__graphPart(V__NODE1,V__GRAPH)
        & s__graphPart(V__NODE2,V__GRAPH)
        & V__NODE1 != V__NODE2 )
     => ? [V__ARC,V__PATH] :
          ( s__instance(V__ARC,s__GraphArc)
          & ( s__links(V__NODE1,V__NODE2,V__ARC)
            | ( s__subGraph(V__PATH,V__GRAPH)
              & s__instance(V__PATH,s__GraphPath)
              & ( ( s__BeginNodeFn(V__PATH) = V__NODE1
                  & s__EndNodeFn(V__PATH) = V__NODE2 )
                | ( s__BeginNodeFn(V__PATH) = V__NODE2
                  & s__EndNodeFn(V__PATH) = V__NODE1 ) ) ) ) ) ) ).

fof(kb_SUMO_4744,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ? [V__NODE1,V__NODE2,V__NODE3,V__ARC1,V__ARC2] :
          ( s__instance(V__ARC2,s__GraphArc)
          & s__instance(V__ARC1,s__GraphArc)
          & s__instance(V__NODE3,s__GraphNode)
          & s__instance(V__NODE2,s__GraphNode)
          & s__instance(V__NODE1,s__GraphNode)
          & s__graphPart(V__NODE1,V__GRAPH)
          & s__graphPart(V__NODE2,V__GRAPH)
          & s__graphPart(V__NODE3,V__GRAPH)
          & s__graphPart(V__ARC1,V__GRAPH)
          & s__graphPart(V__ARC2,V__GRAPH)
          & s__links(V__NODE1,V__NODE2,V__ARC1)
          & s__links(V__NODE2,V__NODE3,V__ARC2)
          & V__NODE1 != V__NODE2
          & V__NODE2 != V__NODE3
          & V__NODE1 != V__NODE3
          & V__ARC1 != V__ARC2 ) ) ).

fof(kb_SUMO_4745,axiom,
    s__subclass(s__DirectedGraph,s__Graph) ).

fof(kb_SUMO_4746,axiom,
    s__documentation(s__DirectedGraph,s__EnglishLanguage,'The &%Class of directed graphs. A directed graph is a &%Graph in which all &%GraphArcs have direction, i.e. every &%GraphArc has an initial node (see &%InitialNodeFn) and a terminal node (see &%TerminalNodeFn).') ).

fof(kb_SUMO_4747,axiom,
    ! [V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__DirectedGraph)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ? [V__NODE1,V__NODE2] :
            ( s__InitialNodeFn(V__ARC) = V__NODE1
            & s__TerminalNodeFn(V__ARC) = V__NODE2 ) ) ) ).

fof(kb_SUMO_4748,axiom,
    s__subclass(s__Tree,s__DirectedGraph) ).

fof(kb_SUMO_4749,axiom,
    s__instance(s__Tree__t,s__SetOrClass) ).

fof(kb_SUMO_4750,axiom,
    s__instance(s__DirectedGraph__t,s__SetOrClass) ).

fof(kb_SUMO_4751,axiom,
    s__documentation(s__Tree,s__EnglishLanguage,'A Tree is a &%DirectedGraph that has no &%GraphLoops.') ).

fof(kb_SUMO_4752,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__LOOP] :
              ( s__instance(V__LOOP,s__GraphElement)
              & s__instance(V__LOOP,s__GraphLoop)
              & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_4753,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__LOOP] :
              ( s__instance(V__LOOP,s__GraphElement)
              & s__instance(V__LOOP,s__GraphCircuit)
              & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_4754,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__ARC1,V__ARC2,V__NODE] :
              ( s__instance(V__NODE,s__GraphElement)
              & s__instance(V__ARC2,s__GraphArc)
              & s__instance(V__ARC1,s__GraphArc)
              & s__graphPart(V__ARC1,V__GRAPH)
              & s__graphPart(V__ARC2,V__GRAPH)
              & s__graphPart(V__NODE,V__GRAPH)
              & s__TerminalNodeFn(V__ARC1) = V__NODE
              & s__TerminalNodeFn(V__ARC2) = V__NODE
              & V__ARC1 != V__ARC2 ) ) ) ).

fof(kb_SUMO_4755,axiom,
    s__subclass(s__GraphPath,s__DirectedGraph) ).

fof(kb_SUMO_4756,axiom,
    s__documentation(s__GraphPath,s__EnglishLanguage,'Informally, a single, directed route between two &%GraphNodes in a &%Graph. Formally, a &%DirectedGraph that is a &%subGraph of the original &%Graph and such that no two &%GraphArcs in the &%DirectedGraph have the same intial node (see &%InitialNodeFn) or the same terminal node (see &%TerminalNodeFn).') ).

fof(kb_SUMO_4757,axiom,
    ! [V__NODE,V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__GraphPath)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ( s__InitialNodeFn(V__ARC) = V__NODE
         => ~ ? [V__OTHER] :
                ( s__instance(V__OTHER,s__GraphArc)
                & s__InitialNodeFn(V__OTHER) = V__NODE
                & V__OTHER != V__ARC ) ) ) ) ).

fof(kb_SUMO_4758,axiom,
    ! [V__NODE,V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__GraphPath)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ( s__TerminalNodeFn(V__ARC) = V__NODE
         => ~ ? [V__OTHER] :
                ( s__instance(V__OTHER,s__GraphArc)
                & s__TerminalNodeFn(V__OTHER) = V__NODE
                & V__OTHER != V__ARC ) ) ) ) ).

fof(kb_SUMO_4759,axiom,
    s__subclass(s__GraphCircuit,s__GraphPath) ).

fof(kb_SUMO_4760,axiom,
    s__instance(s__GraphCircuit__t,s__SetOrClass) ).

fof(kb_SUMO_4761,axiom,
    s__instance(s__GraphPath__t,s__SetOrClass) ).

fof(kb_SUMO_4762,axiom,
    s__documentation(s__GraphCircuit,s__EnglishLanguage,'A &%GraphPath that begins (see &%BeginNodeFn) and ends (see &%EndNodeFn) at the same &%GraphNode.') ).

fof(kb_SUMO_4763,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__GraphPath)
     => ( s__instance(V__GRAPH,s__GraphCircuit)
      <=> ? [V__NODE] :
            ( s__BeginNodeFn(V__GRAPH) = V__NODE
            & s__EndNodeFn(V__GRAPH) = V__NODE ) ) ) ).

fof(kb_SUMO_4764,axiom,
    s__subclass(s__MultiGraph,s__Graph) ).

fof(kb_SUMO_4765,axiom,
    s__instance(s__MultiGraph__t,s__SetOrClass) ).

fof(kb_SUMO_4766,axiom,
    s__documentation(s__MultiGraph,s__EnglishLanguage,'The &%Class of multigraphs. A multigraph is a &%Graph containing at least one pair of &%GraphNodes that are connected by more than one &%GraphArc.') ).

fof(kb_SUMO_4767,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__MultiGraph)
      <=> ? [V__ARC1,V__ARC2,V__NODE1,V__NODE2] :
            ( s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__ARC2,s__GraphArc)
            & s__instance(V__ARC1,s__GraphArc)
            & s__graphPart(V__ARC1,V__GRAPH)
            & s__graphPart(V__ARC2,V__GRAPH)
            & s__graphPart(V__NODE1,V__GRAPH)
            & s__graphPart(V__NODE2,V__GRAPH)
            & s__links(V__NODE1,V__NODE2,V__ARC1)
            & s__links(V__NODE1,V__NODE2,V__ARC2)
            & V__ARC1 != V__ARC2 ) ) ) ).

fof(kb_SUMO_4768,axiom,
    s__subclass(s__PseudoGraph,s__Graph) ).

fof(kb_SUMO_4769,axiom,
    s__instance(s__PseudoGraph__t,s__SetOrClass) ).

fof(kb_SUMO_4770,axiom,
    s__instance(s__Graph__t,s__SetOrClass) ).

fof(kb_SUMO_4771,axiom,
    s__documentation(s__PseudoGraph,s__EnglishLanguage,'The &%Class of pseudographs. A pseudograph is a &%Graph containing at least one &%GraphLoop.') ).

fof(kb_SUMO_4772,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__PseudoGraph)
      <=> ? [V__LOOP] :
            ( s__instance(V__LOOP,s__GraphElement)
            & s__instance(V__LOOP,s__GraphLoop)
            & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_4773,axiom,
    s__subclass(s__GraphElement,s__Abstract) ).

fof(kb_SUMO_4774,axiom,
    s__instance(s__GraphElement__t,s__SetOrClass) ).

fof(kb_SUMO_4775,axiom,
    s__partition_3(s__GraphElement,s__GraphNode,s__GraphArc) ).

fof(kb_SUMO_4776,axiom,
    s__documentation(s__GraphElement,s__EnglishLanguage,'Noncompositional parts of &%Graphs. These parts are restricted to &%GraphNodes and &%GraphArcs.') ).

fof(kb_SUMO_4777,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__GraphElement)
     => ? [V__GRAPH] :
          ( s__instance(V__GRAPH,s__Graph)
          & s__graphPart(V__PART,V__GRAPH) ) ) ).

fof(kb_SUMO_4778,axiom,
    s__subclass(s__GraphNode,s__GraphElement) ).

fof(kb_SUMO_4779,axiom,
    s__instance(s__GraphNode__t,s__SetOrClass) ).

fof(kb_SUMO_4780,axiom,
    s__documentation(s__GraphNode,s__EnglishLanguage,'&%Graphs are comprised of &%GraphNodes and &%GraphArcs. Every &%GraphNode is linked by a &%GraphArc.') ).

fof(kb_SUMO_4781,axiom,
    ! [V__NODE] :
      ( s__instance(V__NODE,s__GraphNode)
     => ? [V__OTHER,V__ARC] :
          ( s__instance(V__ARC,s__GraphArc)
          & s__instance(V__OTHER,s__GraphNode)
          & s__links(V__NODE,V__OTHER,V__ARC) ) ) ).

fof(kb_SUMO_4782,axiom,
    s__subclass(s__GraphArc,s__GraphElement) ).

fof(kb_SUMO_4783,axiom,
    s__instance(s__GraphArc__t,s__SetOrClass) ).

fof(kb_SUMO_4784,axiom,
    s__documentation(s__GraphArc,s__EnglishLanguage,'&%Graphs are comprised of &%GraphNodes and &%GraphArcs. Every &%GraphArc links two &%GraphNodes.') ).

fof(kb_SUMO_4785,axiom,
    ! [V__ARC] :
      ( s__instance(V__ARC,s__GraphArc)
     => ? [V__NODE1,V__NODE2] :
          ( s__instance(V__NODE2,s__GraphNode)
          & s__instance(V__NODE1,s__GraphNode)
          & s__links(V__NODE1,V__NODE2,V__ARC) ) ) ).

fof(kb_SUMO_4786,axiom,
    s__subclass(s__GraphLoop,s__GraphArc) ).

fof(kb_SUMO_4787,axiom,
    s__instance(s__GraphLoop__t,s__SetOrClass) ).

fof(kb_SUMO_4788,axiom,
    s__documentation(s__GraphLoop,s__EnglishLanguage,'A &%GraphArc in which a &%GraphNode is linked to itself.') ).

fof(kb_SUMO_4789,axiom,
    ! [V__LOOP] :
      ( s__instance(V__LOOP,s__GraphArc)
     => ( s__instance(V__LOOP,s__GraphLoop)
      <=> ? [V__NODE] :
            ( s__instance(V__NODE,s__GraphNode)
            & s__links(V__NODE,V__NODE,V__LOOP) ) ) ) ).

fof(kb_SUMO_4790,axiom,
    ! [V__NODE,V__ARC] :
      ( s__instance(V__ARC,s__GraphArc)
     => ( ( s__InitialNodeFn(V__ARC) = V__NODE
          & s__TerminalNodeFn(V__ARC) = V__NODE )
       => s__instance(V__ARC,s__GraphLoop) ) ) ).

fof(kb_SUMO_4791,axiom,
    s__instance(s__links__m,s__TernaryPredicate) ).

fof(kb_SUMO_4792,axiom,
    s__domain(s__links__m,"1",s__GraphNode) ).

fof(kb_SUMO_4793,axiom,
    s__domain(s__links__m,"2",s__GraphNode) ).

fof(kb_SUMO_4794,axiom,
    s__domain(s__links__m,"3",s__GraphArc) ).

fof(kb_SUMO_4795,axiom,
    s__documentation(s__links__m,s__EnglishLanguage,'a &%TernaryPredicate that specifies the &%GraphArc connecting two &%GraphNodes.') ).

fof(kb_SUMO_4796,axiom,
    ! [V__ARC,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__ARC,s__GraphArc) )
     => ( s__links(V__NODE1,V__NODE2,V__ARC)
       => s__links(V__NODE2,V__NODE1,V__ARC) ) ) ).

fof(kb_SUMO_4797,axiom,
    s__instance(s__graphPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_4798,axiom,
    s__instance(s__graphPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4799,axiom,
    s__instance(s__graphPart__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4800,axiom,
    s__domain(s__graphPart__m,"1",s__GraphElement) ).

fof(kb_SUMO_4801,axiom,
    s__domain(s__graphPart__m,"2",s__Graph) ).

fof(kb_SUMO_4802,axiom,
    s__documentation(s__graphPart__m,s__EnglishLanguage,'A basic relation for &%Graphs and their parts. (&%graphPart ?PART ?GRAPH) means that ?PART is a &%GraphArc or &%GraphNode of the &%Graph ?GRAPH.') ).

fof(kb_SUMO_4803,axiom,
    s__instance(s__subGraph__m,s__BinaryPredicate) ).

fof(kb_SUMO_4804,axiom,
    s__instance(s__subGraph__m,s__ReflexiveRelation) ).

fof(kb_SUMO_4805,axiom,
    s__instance(s__subGraph__m,s__TransitiveRelation) ).

fof(kb_SUMO_4806,axiom,
    s__domain(s__subGraph__m,"1",s__Graph) ).

fof(kb_SUMO_4807,axiom,
    s__domain(s__subGraph__m,"2",s__Graph) ).

fof(kb_SUMO_4808,axiom,
    s__documentation(s__subGraph__m,s__EnglishLanguage,'The relation between two &%Graphs when one &%Graph is a part of the other. (&%subGraph ?GRAPH1 ?GRAPH2) means that ?GRAPH1 is a part of ?GRAPH2.') ).

fof(kb_SUMO_4809,axiom,
    ! [V__GRAPH2,V__GRAPH1,V__ELEMENT] :
      ( ( s__instance(V__ELEMENT,s__GraphElement)
        & s__instance(V__GRAPH1,s__Graph)
        & s__instance(V__GRAPH2,s__Graph) )
     => ( ( s__subGraph(V__GRAPH1,V__GRAPH2)
          & s__graphPart(V__ELEMENT,V__GRAPH1) )
       => s__graphPart(V__ELEMENT,V__GRAPH2) ) ) ).

fof(kb_SUMO_4810,axiom,
    s__instance(s__pathLength__m,s__BinaryPredicate) ).

fof(kb_SUMO_4811,axiom,
    s__instance(s__pathLength__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4812,axiom,
    s__instance(s__pathLength__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4813,axiom,
    s__domain(s__pathLength__m,"1",s__GraphPath) ).

fof(kb_SUMO_4814,axiom,
    s__domain(s__pathLength__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_4815,axiom,
    s__documentation(s__pathLength__m,s__EnglishLanguage,'A &%BinaryPredicate that specifies the length (in number of &%GraphNodes) of a &%GraphPath. (&%pathLength ?PATH ?NUMBER) means that there are ?NUMBER nodes in the &%GraphPath ?PATH.') ).

fof(kb_SUMO_4816,axiom,
    s__instance(s__InitialNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4817,axiom,
    s__instance(s__InitialNodeFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4818,axiom,
    s__domain(s__InitialNodeFn__m,"1",s__GraphArc) ).

fof(kb_SUMO_4819,axiom,
    s__range(s__InitialNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_4820,axiom,
    s__documentation(s__InitialNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphArc to the initial node of the &%GraphArc. Note that this is a partial function. In particular, the function is undefined for &%GraphArcs that are not part of a &%DirectedGraph.') ).

fof(kb_SUMO_4821,axiom,
    s__instance(s__TerminalNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4822,axiom,
    s__instance(s__TerminalNodeFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_4823,axiom,
    s__domain(s__TerminalNodeFn__m,"1",s__GraphArc) ).

fof(kb_SUMO_4824,axiom,
    s__range(s__TerminalNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_4825,axiom,
    s__documentation(s__TerminalNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphArc to the terminal node of the &%GraphArc. Note that this is a partial function. In particular, the function is undefined for &%GraphArcs that are not part of a &%DirectedGraph.') ).

fof(kb_SUMO_4826,axiom,
    s__instance(s__BeginNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4827,axiom,
    s__instance(s__BeginNodeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4828,axiom,
    s__domain(s__BeginNodeFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_4829,axiom,
    s__range(s__BeginNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_4830,axiom,
    s__relatedInternalConcept(s__BeginNodeFn__m,s__InitialNodeFn__m) ).

fof(kb_SUMO_4831,axiom,
    s__documentation(s__BeginNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the &%GraphNode that is the beginning of the &%GraphPath. Note that, unlike &%InitialNodeFn (which relates a &%GraphArc to a &%GraphNode), &%BeginNodeFn is a total function - every &%GraphPath has a beginning.') ).

fof(kb_SUMO_4832,axiom,
    s__instance(s__EndNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4833,axiom,
    s__instance(s__EndNodeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4834,axiom,
    s__domain(s__EndNodeFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_4835,axiom,
    s__range(s__EndNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_4836,axiom,
    s__relatedInternalConcept(s__EndNodeFn__m,s__TerminalNodeFn__m) ).

fof(kb_SUMO_4837,axiom,
    s__documentation(s__EndNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the &%GraphNode that is the end of the &%GraphPath. Note that, unlike &%TerminalNodeFn (which relates a &%GraphArc to a &%GraphNode), &%EndNodeFn is a total function - every &%GraphPath has a end.') ).

fof(kb_SUMO_4838,axiom,
    s__instance(s__arcWeight__m,s__BinaryPredicate) ).

fof(kb_SUMO_4839,axiom,
    s__instance(s__arcWeight__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4840,axiom,
    s__domain(s__arcWeight__m,"1",s__GraphArc) ).

fof(kb_SUMO_4841,axiom,
    s__domain(s__arcWeight__m,"2",s__Quantity) ).

fof(kb_SUMO_4842,axiom,
    s__documentation(s__arcWeight__m,s__EnglishLanguage,'This predicate indicates the value of a &%GraphArc in a &%Graph. This could map to the length of a road in a road network or the flow rate of a pipe in a plumbing system.') ).

fof(kb_SUMO_4843,axiom,
    s__instance(s__PathWeightFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4844,axiom,
    s__domain(s__PathWeightFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_4845,axiom,
    s__range(s__PathWeightFn__m,s__Quantity) ).

fof(kb_SUMO_4846,axiom,
    s__documentation(s__PathWeightFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the sum of the &%arcWeights on the &%GraphArcs in the &%GraphPath.') ).

fof(kb_SUMO_4847,axiom,
    ! [V__PATH,V__ARC1,V__SUBPATH,V__SUM,V__NUMBER1] :
      ( s__instance(V__SUBPATH,s__GraphPath)
     => ( ( s__PathWeightFn(V__PATH) = V__SUM
          & s__subGraph(V__SUBPATH,V__PATH)
          & s__graphPart(V__ARC1,V__PATH)
          & s__arcWeight(V__ARC1,V__NUMBER1)
          & ! [V__ARC2] :
              ( ( s__instance(V__ARC2,s__GraphElement)
                & s__instance(V__NUMBER1,s__Quantity)
                & s__instance(V__SUBPATH,s__Graph)
                & s__instance(V__ARC1,s__GraphArc)
                & s__instance(V__PATH,s__GraphPath) )
             => ( s__graphPart(V__ARC2,V__PATH)
               => ( s__graphPart(V__ARC2,V__SUBPATH)
                  | V__ARC2 = V__ARC1 ) ) ) )
       => V__SUM = plus(s__PathWeightFn(V__SUBPATH),V__NUMBER1) ) ) ).

fof(kb_SUMO_4848,axiom,
    ! [V__PATH,V__ARC2,V__ARC1,V__NUMBER2,V__SUM,V__NUMBER1] :
      ( ( s__PathWeightFn(V__PATH) = V__SUM
        & s__graphPart(V__ARC1,V__PATH)
        & s__graphPart(V__ARC2,V__PATH)
        & s__arcWeight(V__ARC1,V__NUMBER1)
        & s__arcWeight(V__ARC2,V__NUMBER2)
        & ! [V__ARC3] :
            ( ( s__instance(V__ARC3,s__GraphElement)
              & s__instance(V__NUMBER1,s__Quantity)
              & s__instance(V__NUMBER2,s__Quantity)
              & s__instance(V__ARC1,s__GraphArc)
              & s__instance(V__ARC2,s__GraphArc)
              & s__instance(V__PATH,s__GraphPath) )
           => ( s__graphPart(V__ARC3,V__PATH)
             => ( V__ARC3 = V__ARC1
                | V__ARC3 = V__ARC2 ) ) ) )
     => s__PathWeightFn(V__PATH) = plus(V__NUMBER1,V__NUMBER2) ) ).

fof(kb_SUMO_4849,axiom,
    s__instance(s__MinimalWeightedPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4850,axiom,
    s__domain(s__MinimalWeightedPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_4851,axiom,
    s__domain(s__MinimalWeightedPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_4852,axiom,
    s__range(s__MinimalWeightedPathFn__m,s__GraphPath) ).

fof(kb_SUMO_4853,axiom,
    s__documentation(s__MinimalWeightedPathFn__m,s__EnglishLanguage,'This &%BinaryFunction assigns two &%GraphNodes to the &%GraphPath with the smallest sum of weighted arcs between the two &%GraphNodes.') ).

fof(kb_SUMO_4854,axiom,
    ! [V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode) )
     => ( s__MinimalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
       => s__instance(V__PATH,s__GraphPathFn(V__NODE1,V__NODE2)) ) ) ).

fof(kb_SUMO_4855,axiom,
    ! [V__NUMBER,V__PATH,V__NUMBER2,V__NODE1,V__NUMBER1,V__NODE2] :
      ( ( s__MinimalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
        & s__PathWeightFn(V__PATH) = V__NUMBER )
     => ! [V__PATH2] :
          ( ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__NUMBER2,s__Quantity)
            & s__instance(V__PATH,s__GraphPath) )
         => ( ( s__instance(V__PATH2,s__GraphPathFn(V__NODE1,V__NODE2))
              & s__PathWeightFn(V__PATH2) = V__NUMBER2 )
           => greatereq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_4856,axiom,
    s__instance(s__MaximalWeightedPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4857,axiom,
    s__domain(s__MaximalWeightedPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_4858,axiom,
    s__domain(s__MaximalWeightedPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_4859,axiom,
    s__range(s__MaximalWeightedPathFn__m,s__GraphPath) ).

fof(kb_SUMO_4860,axiom,
    s__documentation(s__MaximalWeightedPathFn__m,s__EnglishLanguage,'This &%BinaryFunction assigns two &%GraphNodes to the &%GraphPath with the largest sum of weighted arcs between the two &%GraphNodes.') ).

fof(kb_SUMO_4861,axiom,
    ! [V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode) )
     => ( s__MaximalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
       => s__instance(V__PATH,s__GraphPathFn(V__NODE1,V__NODE2)) ) ) ).

fof(kb_SUMO_4862,axiom,
    ! [V__NUMBER,V__PATH,V__NUMBER2,V__NODE1,V__NUMBER1,V__NODE2] :
      ( ( s__MaximalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
        & s__PathWeightFn(V__PATH) = V__NUMBER )
     => ! [V__PATH2] :
          ( ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__NUMBER2,s__Quantity)
            & s__instance(V__PATH,s__GraphPath) )
         => ( ( s__instance(V__PATH2,s__GraphPathFn(V__NODE1,V__NODE2))
              & s__PathWeightFn(V__PATH2) = V__NUMBER2 )
           => lesseq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_4863,axiom,
    s__instance(s__GraphPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4864,axiom,
    s__instance(s__GraphPathFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4865,axiom,
    s__domain(s__GraphPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_4866,axiom,
    s__domain(s__GraphPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_4867,axiom,
    s__rangeSubclass(s__GraphPathFn__m,s__GraphPath) ).

fof(kb_SUMO_4868,axiom,
    s__documentation(s__GraphPathFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%GraphNodes to the &%Class of &%GraphPaths between those two nodes. Note that the two &%GraphNodes must belong to the same &%Graph.') ).

fof(kb_SUMO_4869,axiom,
    ! [V__GRAPH,V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__PATH,s__GraphElement)
        & s__instance(V__GRAPH,s__Graph) )
     => ( ( s__graphPart(V__PATH,V__GRAPH)
          & ~ s__instance(V__GRAPH,s__DirectedGraph) )
       => ( s__GraphPathFn(V__NODE1,V__NODE2) = V__PATH
        <=> s__GraphPathFn(V__NODE2,V__NODE1) = V__PATH ) ) ) ).

fof(kb_SUMO_4870,axiom,
    s__instance(s__CutSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4871,axiom,
    s__domain(s__CutSetFn__m,"1",s__Graph) ).

fof(kb_SUMO_4872,axiom,
    s__rangeSubclass(s__CutSetFn__m,s__GraphPath) ).

fof(kb_SUMO_4873,axiom,
    s__documentation(s__CutSetFn__m,s__EnglishLanguage,'A &%UnaryFunction that assigns a &%Graph the &%Class of &%GraphPaths that partition the graph into two separate graphs if cut. There may be more than one cutset for a given graph.') ).

fof(kb_SUMO_4874,axiom,
    s__instance(s__MinimalCutSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4875,axiom,
    s__domain(s__MinimalCutSetFn__m,"1",s__Graph) ).

fof(kb_SUMO_4876,axiom,
    s__rangeSubclass(s__MinimalCutSetFn__m,s__GraphPath) ).

fof(kb_SUMO_4877,axiom,
    s__relatedInternalConcept(s__MinimalCutSetFn__m,s__CutSetFn__m) ).

fof(kb_SUMO_4878,axiom,
    s__documentation(s__MinimalCutSetFn__m,s__EnglishLanguage,'A &%UnaryFunction that assigns a &%Graph the &%Class of &%GraphPaths which comprise cutsets for the &%Graph and which have the least number of &%GraphArcs.') ).

fof(kb_SUMO_4879,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => s__subclass(s__MinimalCutSetFn(V__GRAPH),s__CutSetFn(V__GRAPH)) ) ).

fof(kb_SUMO_4880,axiom,
    ! [V__PATHCLASS,V__GRAPH] :
      ( s__MinimalCutSetFn(V__GRAPH) = V__PATHCLASS
     => ? [V__NUMBER] :
          ( s__instance(V__NUMBER,s__PositiveInteger)
          & ! [V__PATH] :
              ( ( s__instance(V__PATH,s__GraphPath)
                & s__instance(V__GRAPH,s__Graph)
                & s__instance(V__PATHCLASS,s__SetOrClass) )
             => ( s__instance(V__PATH,V__PATHCLASS)
               => s__pathLength(V__PATH,V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_4881,axiom,
    ! [V__GRAPH,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveInteger)
        & s__instance(V__NUMBER2,s__PositiveInteger)
        & s__instance(V__GRAPH,s__Graph) )
     => ~ ? [V__PATH1,V__PATH2] :
            ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__PATH1,s__GraphPath)
            & s__instance(V__PATH1,s__CutSetFn(V__GRAPH))
            & s__instance(V__PATH2,s__MinimalCutSetFn(V__GRAPH))
            & s__pathLength(V__PATH1,V__NUMBER1)
            & s__pathLength(V__PATH2,V__NUMBER2)
            & less(V__NUMBER1,V__NUMBER2) ) ) ).

fof(kb_SUMO_4882,axiom,
    s__instance(s__abstractCounterpart__m,s__BinaryPredicate) ).

fof(kb_SUMO_4883,axiom,
    s__domain(s__abstractCounterpart__m,"1",s__Abstract) ).

fof(kb_SUMO_4884,axiom,
    s__domain(s__abstractCounterpart__m,"2",s__Physical) ).

fof(kb_SUMO_4885,axiom,
    s__subrelation(s__abstractCounterpart__m,s__represents__m) ).

fof(kb_SUMO_4886,axiom,
    s__documentation(s__abstractCounterpart__m,s__EnglishLanguage,'(abstractCounterpart ?AB ?PHYS relates a &%Physical entity to an &%Abstract one which is an idealized model in some dimension of the &%Physical entity. For example, an &%Abstract &%GraphNode could be stated to be the counterpart of an actual &%Computer in a &%ComputerNetwork.') ).

fof(kb_SUMO_4887,axiom,
    s__subclass(s__PhysicalSystem,s__Physical) ).

fof(kb_SUMO_4888,axiom,
    s__instance(s__PhysicalSystem__t,s__SetOrClass) ).

fof(kb_SUMO_4889,axiom,
    s__documentation(s__PhysicalSystem,s__EnglishLanguage,'&%PhysicalSystem is the class of complex &%Physical things. A &%PhysicalSystem may have one or more corresponding abstract &%Graph representations.') ).

fof(kb_SUMO_4890,axiom,
    s__instance(s__subSystem__m,s__BinaryPredicate) ).

fof(kb_SUMO_4891,axiom,
    s__domain(s__subSystem__m,"1",s__PhysicalSystem) ).

fof(kb_SUMO_4892,axiom,
    s__domain(s__subSystem__m,"2",s__PhysicalSystem) ).

fof(kb_SUMO_4893,axiom,
    s__documentation(s__subSystem__m,s__EnglishLanguage,'(&%subSystem ?SUB ?SYSTEM) means that the &%PhysicalSystem ?SUB is a part of the &%PhysicalSystem ?SYSTEM.') ).

fof(kb_SUMO_4894,axiom,
    s__instance(s__systemPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_4895,axiom,
    s__domain(s__systemPart__m,"1",s__Physical) ).

fof(kb_SUMO_4896,axiom,
    s__domain(s__systemPart__m,"2",s__PhysicalSystem) ).

fof(kb_SUMO_4897,axiom,
    s__documentation(s__systemPart__m,s__EnglishLanguage,'(&%systemPart ?PART ?SYSTEM) means that the &%Physical thing ?PART is a &%SystemElement in the &%PhysicalSystem ?SYSTEM.') ).

fof(kb_SUMO_4898,axiom,
    ! [V__SUB,V__PART,V__SYSTEM] :
      ( ( s__instance(V__SYSTEM,s__PhysicalSystem)
        & s__instance(V__PART,s__Physical)
        & s__instance(V__SUB,s__PhysicalSystem) )
     => ( ( s__subSystem(V__SUB,V__SYSTEM)
          & s__systemPart(V__PART,V__SUB) )
       => s__systemPart(V__PART,V__SYSTEM) ) ) ).

fof(kb_SUMO_4899,axiom,
    s__instance(s__graphMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_4900,axiom,
    s__domain(s__graphMeasure__m,"1",s__Graph) ).

fof(kb_SUMO_4901,axiom,
    s__domain(s__graphMeasure__m,"2",s__UnitOfMeasure) ).

fof(kb_SUMO_4902,axiom,
    s__documentation(s__graphMeasure__m,s__EnglishLanguage,'(graphMeasure ?GRAPH ?MEAS) fixes a &%UnitOfMeasure that is used for the &%arcWeight of a given &%Graph. Stating such a relationship entails that the components of given graph are the &%abstractCounterparts of sets of &%Physical &%Entity(ies).') ).

fof(kb_SUMO_4903,axiom,
    ! [V__G,V__M] :
      ( s__graphMeasure(V__G,V__M)
     => ! [V__AC] :
          ( ( s__instance(V__AC,s__GraphElement)
            & s__instance(V__M,s__UnitOfMeasure)
            & s__instance(V__G,s__Graph) )
         => ( s__graphPart(V__AC,V__G)
            & ? [V__PC] :
                ( s__instance(V__PC,s__Physical)
                & s__abstractCounterpart(V__AC,V__PC) ) ) ) ) ).

fof(kb_SUMO_4904,axiom,
    ! [V__AA,V__AN,V__PA,V__PN,V__G,V__N,V__M] :
      ( ( s__instance(V__M,s__UnitOfMeasure)
        & s__instance(V__N,s__RealNumber)
        & s__instance(V__G,s__Graph)
        & s__instance(V__PN,s__Physical)
        & s__instance(V__PA,s__Object)
        & s__instance(V__AN,s__Abstract) )
     => ( ( s__graphMeasure(V__G,V__M)
          & s__instance(V__AN,s__GraphNode)
          & s__instance(V__AA,s__GraphArc)
          & s__abstractCounterpart(V__AN,V__PN)
          & s__abstractCounterpart(V__AA,V__PA)
          & s__arcWeight(V__AA,s__MeasureFn(V__N,V__M)) )
       => s__measure(V__PA,s__MeasureFn(V__N,V__M)) ) ) ).

fof(kb_SUMO_4905,axiom,
    s__subclass(s__UnitOfMeasure,s__PhysicalQuantity) ).

fof(kb_SUMO_4906,axiom,
    s__documentation(s__UnitOfMeasure,s__EnglishLanguage,'A standard of measurement for some dimension. For example, the &%Meter is a &%UnitOfMeasure for the dimension of length, as is the &%Inch. There is no intrinsic property of a &%UnitOfMeasure that makes it primitive or fundamental, rather, a system of units (e.g. &%SystemeInternationalUnit) defines a set of orthogonal dimensions and assigns units for each.') ).

fof(kb_SUMO_4907,axiom,
    s__subclass(s__CompositeUnitOfMeasure,s__UnitOfMeasure) ).

fof(kb_SUMO_4908,axiom,
    s__documentation(s__CompositeUnitOfMeasure,s__EnglishLanguage,'Instances of this &%Class are &%UnitsOfMeasure defined by the functional composition of other units, each of which might be a &%CompositeUnitOfMeasure or a &%NonCompositeUnitOfMeasure.') ).

fof(kb_SUMO_4909,axiom,
    s__subclass(s__NonCompositeUnitOfMeasure,s__UnitOfMeasure) ).

fof(kb_SUMO_4910,axiom,
    s__instance(s__UnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4911,axiom,
    s__documentation(s__NonCompositeUnitOfMeasure,s__EnglishLanguage,'Instances of this &%Class are &%UnitsOfMeasure that are applied to a single dimension, and so are not intrinsically defined by the functional composition of other units.') ).

fof(kb_SUMO_4912,axiom,
    s__partition_3(s__UnitOfMeasure,s__CompositeUnitOfMeasure,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4913,axiom,
    ! [V__QUANT,V__UNIT,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__UNIT,s__UnitOfMeasure) )
     => ( ( s__instance(V__QUANT,s__MeasureFn(V__N,V__UNIT))
          & s__instance(V__UNIT,s__CompositeUnitOfMeasure) )
       => s__instance(V__QUANT,s__FunctionQuantity) ) ) ).

fof(kb_SUMO_4914,axiom,
    ! [V__QUANT,V__UNIT,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__UNIT,s__UnitOfMeasure) )
     => ( ( s__instance(V__QUANT,s__MeasureFn(V__N,V__UNIT))
          & s__instance(V__UNIT,s__NonCompositeUnitOfMeasure) )
       => s__instance(V__QUANT,s__ConstantQuantity) ) ) ).

fof(kb_SUMO_4915,axiom,
    s__subclass(s__SystemeInternationalUnit,s__UnitOfMeasure) ).

fof(kb_SUMO_4916,axiom,
    s__documentation(s__SystemeInternationalUnit,s__EnglishLanguage,'The &%Class of Systeme International (SI) units.') ).

fof(kb_SUMO_4917,axiom,
    s__subclass(s__LengthMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4918,axiom,
    s__instance(s__LengthMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4919,axiom,
    s__instance(s__ConstantQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_4920,axiom,
    s__documentation(s__LengthMeasure,s__EnglishLanguage,'A &%subclass of &%ConstantQuantity, instances of which are measures of length.') ).

fof(kb_SUMO_4921,axiom,
    s__subclass(s__UnitOfLength,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4922,axiom,
    s__instance(s__UnitOfLength__t,s__SetOrClass) ).

fof(kb_SUMO_4923,axiom,
    s__documentation(s__UnitOfLength,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%LengthMeasure.') ).

fof(kb_SUMO_4924,axiom,
    s__subclass(s__MassMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4925,axiom,
    s__instance(s__MassMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4926,axiom,
    s__documentation(s__MassMeasure,s__EnglishLanguage,'A &%subclass of &%ConstantQuantity, instances of which are measures of the amount of matter in an &%Object.') ).

fof(kb_SUMO_4927,axiom,
    s__subclass(s__UnitOfMass,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4928,axiom,
    s__documentation(s__UnitOfMass,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%MassMeasure, which denote the amount of matter in &%PhysicalObjects.') ).

fof(kb_SUMO_4929,axiom,
    s__subclass(s__AreaMeasure,s__FunctionQuantity) ).

fof(kb_SUMO_4930,axiom,
    s__instance(s__AreaMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4931,axiom,
    s__documentation(s__AreaMeasure,s__EnglishLanguage,'Measures of the amount of space in two dimensions.') ).

fof(kb_SUMO_4932,axiom,
    s__subclass(s__UnitOfArea,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4933,axiom,
    s__instance(s__UnitOfArea__t,s__SetOrClass) ).

fof(kb_SUMO_4934,axiom,
    s__documentation(s__UnitOfArea,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%AreaMeasure.') ).

fof(kb_SUMO_4935,axiom,
    s__subclass(s__VolumeMeasure,s__FunctionQuantity) ).

fof(kb_SUMO_4936,axiom,
    s__instance(s__VolumeMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4937,axiom,
    s__instance(s__FunctionQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_4938,axiom,
    s__documentation(s__VolumeMeasure,s__EnglishLanguage,'Measures of the amount of space in three dimensions.') ).

fof(kb_SUMO_4939,axiom,
    s__subclass(s__UnitOfVolume,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4940,axiom,
    s__documentation(s__UnitOfVolume,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%VolumeMeasure.') ).

fof(kb_SUMO_4941,axiom,
    s__subclass(s__TemperatureMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4942,axiom,
    s__instance(s__TemperatureMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4943,axiom,
    s__documentation(s__TemperatureMeasure,s__EnglishLanguage,'Measures of temperature. In scientific circles, the temperature of something is understood as the average velocity of the atoms or molecules that make up the thing.') ).

fof(kb_SUMO_4944,axiom,
    s__subclass(s__UnitOfTemperature,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4945,axiom,
    s__documentation(s__UnitOfTemperature,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%TemperatureMeasure.') ).

fof(kb_SUMO_4946,axiom,
    s__subclass(s__CurrencyMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4947,axiom,
    s__instance(s__CurrencyMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4948,axiom,
    s__documentation(s__CurrencyMeasure,s__EnglishLanguage,'Instances of this &%subclass of &%ConstantQuantity are measures of &%monetaryValue stated in terms of some &%UnitOfCurrency such as &%UnitedStatesDollar, &%UnitedStatesCent, Lire, Yen, etc.') ).

fof(kb_SUMO_4949,axiom,
    s__subclass(s__UnitOfCurrency,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4950,axiom,
    s__documentation(s__UnitOfCurrency,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%CurrencyMeasure.') ).

fof(kb_SUMO_4951,axiom,
    s__subclass(s__AngleMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4952,axiom,
    s__documentation(s__AngleMeasure,s__EnglishLanguage,'The value of an angle in a plane or in a solid.') ).

fof(kb_SUMO_4953,axiom,
    s__subclass(s__UnitOfAngularMeasure,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4954,axiom,
    s__instance(s__UnitOfAngularMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4955,axiom,
    s__documentation(s__UnitOfAngularMeasure,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%AngleMeasure.') ).

fof(kb_SUMO_4956,axiom,
    s__subclass(s__PlaneAngleMeasure,s__AngleMeasure) ).

fof(kb_SUMO_4957,axiom,
    s__instance(s__PlaneAngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4958,axiom,
    s__instance(s__AngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4959,axiom,
    s__documentation(s__PlaneAngleMeasure,s__EnglishLanguage,'The value of an angle in a plane.') ).

fof(kb_SUMO_4960,axiom,
    s__subclass(s__SolidAngleMeasure,s__AngleMeasure) ).

fof(kb_SUMO_4961,axiom,
    s__instance(s__SolidAngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4962,axiom,
    s__disjoint(s__SolidAngleMeasure,s__PlaneAngleMeasure) ).

fof(kb_SUMO_4963,axiom,
    s__documentation(s__SolidAngleMeasure,s__EnglishLanguage,'The value of an angle in a solid.') ).

fof(kb_SUMO_4964,axiom,
    s__subclass(s__UnitOfInformation,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4965,axiom,
    s__instance(s__UnitOfInformation__t,s__SetOrClass) ).

fof(kb_SUMO_4966,axiom,
    s__instance(s__NonCompositeUnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4967,axiom,
    s__documentation(s__UnitOfInformation,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%InformationMeasure.') ).

fof(kb_SUMO_4968,axiom,
    s__subclass(s__UnitOfDuration,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_4969,axiom,
    s__instance(s__UnitOfDuration__t,s__SetOrClass) ).

fof(kb_SUMO_4970,axiom,
    s__documentation(s__UnitOfDuration,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%TimeDuration. Note that &%TimeDuration is a &%subclass of &%TimeMeasure.') ).

fof(kb_SUMO_4971,axiom,
    s__instance(s__MeasureFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4972,axiom,
    s__instance(s__MeasureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4973,axiom,
    s__domain(s__MeasureFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_4974,axiom,
    s__domain(s__MeasureFn__m,"2",s__UnitOfMeasure) ).

fof(kb_SUMO_4975,axiom,
    s__range(s__MeasureFn__m,s__PhysicalQuantity) ).

fof(kb_SUMO_4976,axiom,
    s__documentation(s__MeasureFn__m,s__EnglishLanguage,'This &%BinaryFunction maps a &%RealNumber and a &%UnitOfMeasure to that &%Number of units. It is used to express `measured instances of &%PhysicalQuantity. Example: the concept of three meters is represented as (&%MeasureFn 3 &%Meter).') ).

fof(kb_SUMO_4977,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfLength) )
       => s__instance(V__QUANT,s__LengthMeasure) ) ) ).

fof(kb_SUMO_4978,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfMass) )
       => s__instance(V__QUANT,s__MassMeasure) ) ) ).

fof(kb_SUMO_4979,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfArea) )
       => s__instance(V__QUANT,s__AreaMeasure) ) ) ).

fof(kb_SUMO_4980,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfVolume) )
       => s__instance(V__QUANT,s__VolumeMeasure) ) ) ).

fof(kb_SUMO_4981,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfTemperature) )
       => s__instance(V__QUANT,s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_4982,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfCurrency) )
       => s__instance(V__QUANT,s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_4983,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfAngularMeasure) )
       => s__instance(V__QUANT,s__AngleMeasure) ) ) ).

fof(kb_SUMO_4984,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfDuration) )
       => s__instance(V__QUANT,s__TimeDuration) ) ) ).

fof(kb_SUMO_4985,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfInformation) )
       => s__instance(V__QUANT,s__InformationMeasure) ) ) ).

fof(kb_SUMO_4986,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & V__NUMBER1 = V__NUMBER2 )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => s__MeasureFn(V__NUMBER1,V__UNIT) = s__MeasureFn(V__NUMBER2,V__UNIT) ) ) ) ).

fof(kb_SUMO_4987,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & greatereq(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => greatereq(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_4988,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & lesseq(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => lesseq(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_4989,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & less(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => less(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_4990,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & greater(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => greater(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_4991,axiom,
    s__subclass(s__UnitOfMeasureMultiplier,s__UnaryFunction) ).

fof(kb_SUMO_4992,axiom,
    s__subclass(s__UnitOfMeasureMultiplier,s__TotalValuedRelation) ).

fof(kb_SUMO_4993,axiom,
    s__documentation(s__UnitOfMeasureMultiplier,s__EnglishLanguage,'Each &%instance of this &%Class is a &%UnaryFunction that, when evaluated on its single argument, a &%UnitOfMeasure, produces another &%UnitOfMeasure that is a numeric multiple of the argument.') ).

fof(kb_SUMO_4994,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__KiloFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_4995,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__GigaFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_4996,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__NanoFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_4997,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MegaFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_4998,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MilliFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_4999,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MicroFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5000,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__TeraFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5001,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__PicoFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5002,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__GigaFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5003,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MilliFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5004,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__KiloFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5005,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__PicoFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5006,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MegaFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5007,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MicroFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5008,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__TeraFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5009,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__NanoFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_5010,axiom,
    s__instance(s__KiloFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5011,axiom,
    s__domain(s__KiloFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5012,axiom,
    s__range(s__KiloFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5013,axiom,
    s__documentation(s__KiloFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000 units of the original &%UnitOfMeasure. For example, (&%KiloFn &%Gram) is 1,000 &%Grams.') ).

fof(kb_SUMO_5014,axiom,
    ! [V__KILOUNIT,V__UNIT] :
      ( s__instance(V__KILOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__KILOUNIT = s__KiloFn(V__UNIT) )
       => s__MeasureFn("1",V__KILOUNIT) = s__MeasureFn("1000",V__UNIT) ) ) ).

fof(kb_SUMO_5015,axiom,
    s__instance(s__MegaFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5016,axiom,
    s__domain(s__MegaFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5017,axiom,
    s__range(s__MegaFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5018,axiom,
    s__documentation(s__MegaFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000 units of the original &%UnitOfMeasure. For example, (&%MegaFn &%Hertz) is 1,000,000 &%Hertz.') ).

fof(kb_SUMO_5019,axiom,
    ! [V__UNIT,V__MEGAUNIT] :
      ( s__instance(V__MEGAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MEGAUNIT = s__MegaFn(V__UNIT) )
       => s__MeasureFn("1",V__MEGAUNIT) = s__MeasureFn("1000000",V__UNIT) ) ) ).

fof(kb_SUMO_5020,axiom,
    s__instance(s__GigaFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5021,axiom,
    s__domain(s__GigaFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5022,axiom,
    s__range(s__GigaFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5023,axiom,
    s__documentation(s__GigaFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000,000 units of the original &%UnitOfMeasure. For example, (&%GigaFn &%Hertz) is 1,000,000,000 &%Hertz.') ).

fof(kb_SUMO_5024,axiom,
    ! [V__GIGAUNIT,V__UNIT] :
      ( s__instance(V__GIGAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__GIGAUNIT = s__GigaFn(V__UNIT) )
       => s__MeasureFn("1",V__GIGAUNIT) = s__MeasureFn("1000000000",V__UNIT) ) ) ).

fof(kb_SUMO_5025,axiom,
    s__instance(s__TeraFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5026,axiom,
    s__domain(s__TeraFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5027,axiom,
    s__range(s__TeraFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5028,axiom,
    s__documentation(s__TeraFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000,000,000 units of the original &%UnitOfMeasure. For example, (&%TeraFn &%Hertz) is 1,000,000,000,000 &%Hertz.') ).

fof(kb_SUMO_5029,axiom,
    ! [V__UNIT,V__TERAUNIT] :
      ( s__instance(V__TERAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__TERAUNIT = s__TeraFn(V__UNIT) )
       => s__MeasureFn("1",V__TERAUNIT) = s__MeasureFn("1000000000000",V__UNIT) ) ) ).

fof(kb_SUMO_5030,axiom,
    s__instance(s__MilliFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5031,axiom,
    s__instance(s__UnitOfMeasureMultiplier__t,s__SetOrClass) ).

fof(kb_SUMO_5032,axiom,
    s__domain(s__MilliFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5033,axiom,
    s__range(s__MilliFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5034,axiom,
    s__documentation(s__MilliFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .001 units of the original &%UnitOfMeasure. For example, (&%MilliFn &%Gram) is .001 &%Grams.') ).

fof(kb_SUMO_5035,axiom,
    ! [V__MILLIUNIT,V__UNIT] :
      ( s__instance(V__MILLIUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MILLIUNIT = s__MilliFn(V__UNIT) )
       => s__MeasureFn("1",V__MILLIUNIT) = s__MeasureFn("0.001",V__UNIT) ) ) ).

fof(kb_SUMO_5036,axiom,
    s__instance(s__MicroFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5037,axiom,
    s__domain(s__MicroFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5038,axiom,
    s__range(s__MicroFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5039,axiom,
    s__documentation(s__MicroFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000001 units of the original &%UnitOfMeasure. For example, (&%MicroFn &%Meter) is .000001 &%Meters.') ).

fof(kb_SUMO_5040,axiom,
    ! [V__UNIT,V__MICROUNIT] :
      ( s__instance(V__MICROUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MICROUNIT = s__MicroFn(V__UNIT) )
       => s__MeasureFn("1",V__MICROUNIT) = s__MeasureFn("0.000001",V__UNIT) ) ) ).

fof(kb_SUMO_5041,axiom,
    s__instance(s__NanoFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5042,axiom,
    s__domain(s__NanoFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5043,axiom,
    s__range(s__NanoFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5044,axiom,
    s__documentation(s__NanoFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000000001 units of the original &%UnitOfMeasure. For example, (&%MicroFn &%SecondDuration) is .000000001 &%SecondDurations.') ).

fof(kb_SUMO_5045,axiom,
    ! [V__NANOUNIT,V__UNIT] :
      ( s__instance(V__NANOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__NANOUNIT = s__NanoFn(V__UNIT) )
       => s__MeasureFn("1",V__NANOUNIT) = s__MeasureFn("0.000000001",V__UNIT) ) ) ).

fof(kb_SUMO_5046,axiom,
    s__instance(s__PicoFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_5047,axiom,
    s__domain(s__PicoFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_5048,axiom,
    s__range(s__PicoFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5049,axiom,
    s__documentation(s__PicoFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000000000001 units of the original &%UnitOfMeasure. For example, (&%PicoFn &%SecondDuration) is .000000000001 &%SecondDurations.') ).

fof(kb_SUMO_5050,axiom,
    ! [V__PICOUNIT,V__UNIT] :
      ( s__instance(V__PICOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__PICOUNIT = s__PicoFn(V__UNIT) )
       => s__MeasureFn("1",V__PICOUNIT) = s__MeasureFn("0.000000000001",V__UNIT) ) ) ).

fof(kb_SUMO_5051,axiom,
    s__instance(s__IntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5052,axiom,
    s__domain(s__IntervalFn__m,"1",s__ConstantQuantity) ).

fof(kb_SUMO_5053,axiom,
    s__domain(s__IntervalFn__m,"2",s__ConstantQuantity) ).

fof(kb_SUMO_5054,axiom,
    s__rangeSubclass(s__IntervalFn__m,s__ConstantQuantity) ).

fof(kb_SUMO_5055,axiom,
    s__relatedInternalConcept(s__IntervalFn__m,s__RecurrentTimeIntervalFn__m) ).

fof(kb_SUMO_5056,axiom,
    s__documentation(s__IntervalFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two instances of &%ConstantQuantity to the &%subclass of &%ConstantQuantity that comprises the interval from the first &%ConstantQuantity to the second &%ConstantQuantity. For example, (&%IntervalFn (&%MeasureFn 8 &%Meter) (&%MeasureFn 14 &%Meter)) would return the &%subclass of &%ConstantQuantity comprising quantities between 8 and 14 meters in length.') ).

fof(kb_SUMO_5057,axiom,
    ! [V__FROM,V__QUANTITY,V__CLASS,V__TO] :
      ( ( s__instance(V__TO,s__ConstantQuantity)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__FROM,s__ConstantQuantity) )
     => ( ( s__instance(V__QUANTITY,s__IntervalFn(V__FROM,V__TO))
          & s__instance(V__FROM,V__CLASS)
          & s__instance(V__TO,V__CLASS) )
       => s__instance(V__QUANTITY,V__CLASS) ) ) ).

fof(kb_SUMO_5058,axiom,
    ! [V__FROM,V__QUANTITY,V__TO] :
      ( ( s__instance(V__TO,s__ConstantQuantity)
        & s__instance(V__QUANTITY,s__Quantity)
        & s__instance(V__FROM,s__ConstantQuantity) )
     => ( s__instance(V__QUANTITY,s__IntervalFn(V__FROM,V__TO))
      <=> ( greatereq(V__QUANTITY,V__FROM)
          & lesseq(V__QUANTITY,V__TO) ) ) ) ).

fof(kb_SUMO_5059,axiom,
    s__instance(s__MagnitudeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5060,axiom,
    s__domain(s__MagnitudeFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_5061,axiom,
    s__range(s__MagnitudeFn__m,s__RealNumber) ).

fof(kb_SUMO_5062,axiom,
    s__documentation(s__MagnitudeFn__m,s__EnglishLanguage,'The magnitude of a &%PhysicalQuantity is the numeric value for the quantity. In other words, &%MagnitudeFn converts a &%PhysicalQuantity with an associated &%UnitOfMeasure into an ordinary &%RealNumber. For example, the magnitude of the &%ConstantQuantity 2 &%Kilometers is the &%RealNumber 2. Note that the magnitude of a quantity in a given unit times that unit is equal to the original quantity.') ).

fof(kb_SUMO_5063,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__QUANT,s__PhysicalQuantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( V__NUMBER = times("1",V__NUMBER)
          & s__instance(V__UNIT,s__UnitOfMeasure)
          & V__QUANT = s__MeasureFn(V__NUMBER,V__UNIT) )
       => s__MagnitudeFn(V__QUANT) = V__NUMBER ) ) ).

fof(kb_SUMO_5064,axiom,
    s__instance(s__UnitFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5065,axiom,
    s__domain(s__UnitFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_5066,axiom,
    s__range(s__UnitFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_5067,axiom,
    s__documentation(s__UnitFn__m,s__EnglishLanguage,'&%UnitFn returns just the &%UnitOfMeasure of a &%PhysicalQuantity with an associated &%UnitOfMeasure and &%RealNumber magnitude. For example, the unit of the &%ConstantQuantity (&%MeasureFn 2 &%Kilometer) is the &%UnitOfMeasure &%Kilometer.') ).

fof(kb_SUMO_5068,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__QUANT,s__PhysicalQuantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( V__NUMBER = times("1",V__NUMBER)
          & s__instance(V__UNIT,s__UnitOfMeasure)
          & V__QUANT = s__MeasureFn(V__NUMBER,V__UNIT) )
       => s__UnitFn(V__QUANT) = V__UNIT ) ) ).

fof(kb_SUMO_5069,axiom,
    s__instance(s__PerFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5070,axiom,
    s__instance(s__PerFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5071,axiom,
    s__domain(s__PerFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_5072,axiom,
    s__domain(s__PerFn__m,"2",s__PhysicalQuantity) ).

fof(kb_SUMO_5073,axiom,
    s__range(s__PerFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_5074,axiom,
    s__documentation(s__PerFn__m,s__EnglishLanguage,'&%PerFn maps two instances of &%PhysicalQuantity to the &%FunctionQuantity composed of these two instances. For example, (&%PerFn (&%MeasureFn 2 (&%MicroFn &%Gram)) (&%MeasureFn 1 (&%KiloFn &%Gram))) denotes the &%FunctionQuantity of 2 micrograms per kiogram. This function is useful, because it allows the knowledge engineer to dynamically generate instances of &%FunctionQuantity.') ).

fof(kb_SUMO_5075,axiom,
    s__subrelation(s__DensityFn__m,s__PerFn__m) ).

fof(kb_SUMO_5076,axiom,
    s__instance(s__DensityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5077,axiom,
    s__domain(s__DensityFn__m,"1",s__MassMeasure) ).

fof(kb_SUMO_5078,axiom,
    s__domain(s__DensityFn__m,"2",s__VolumeMeasure) ).

fof(kb_SUMO_5079,axiom,
    s__range(s__DensityFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_5080,axiom,
    s__documentation(s__DensityFn__m,s__EnglishLanguage,'&%DensityFn maps an instance of &%MassMeasure and an instance of &%VolumeMeasure to the density represented by this proportion of mass and volume. For example, (&%DensityFn (&%MeasureFn 3 &%Gram) (&%MeasureFn 1 &%Liter)) represents the density of 3 grams per liter.') ).

fof(kb_SUMO_5081,axiom,
    s__subrelation(s__SpeedFn__m,s__PerFn__m) ).

fof(kb_SUMO_5082,axiom,
    s__instance(s__SpeedFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5083,axiom,
    s__domain(s__SpeedFn__m,"1",s__LengthMeasure) ).

fof(kb_SUMO_5084,axiom,
    s__domain(s__SpeedFn__m,"2",s__TimeDuration) ).

fof(kb_SUMO_5085,axiom,
    s__range(s__SpeedFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_5086,axiom,
    s__documentation(s__SpeedFn__m,s__EnglishLanguage,'Maps an instance of &%LengthMeasure and an instance of &%TimeDuration to the speed represented by this proportion of distance and time. For example, (&%SpeedFn (&%MeasureFn 55 &%Mile)(&%MeasureFn 1 &%HourDuration)) represents the velocity of 55 miles per hour.') ).

fof(kb_SUMO_5087,axiom,
    s__instance(s__VelocityFn__m,s__QuaternaryFunction) ).

fof(kb_SUMO_5088,axiom,
    s__instance(s__QuaternaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_5089,axiom,
    s__instance(s__VelocityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5090,axiom,
    s__domain(s__VelocityFn__m,"1",s__LengthMeasure) ).

fof(kb_SUMO_5091,axiom,
    s__domain(s__VelocityFn__m,"2",s__TimeDuration) ).

fof(kb_SUMO_5092,axiom,
    s__domain(s__VelocityFn__m,"3",s__Region) ).

fof(kb_SUMO_5093,axiom,
    s__domain(s__VelocityFn__m,"4",s__DirectionalAttribute) ).

fof(kb_SUMO_5094,axiom,
    s__range(s__VelocityFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_5095,axiom,
    s__documentation(s__VelocityFn__m,s__EnglishLanguage,'Specifies the velocity of an object, i.e. the speed and the direction of the speed. For example (&%VelocityFn (&%MeasureFn 55 &%Mile) (&%MeasureFn 2 &%HourDuration) ?REFERENCE &%North) denotes the velocity of 55 miles per hour North of the given reference point ?REFERENCE.') ).

fof(kb_SUMO_5096,axiom,
    ! [V__OBJECT,V__REF,V__TIME,V__DIRECTION,V__DISTANCE] :
      ( ( s__instance(V__DISTANCE,s__LengthMeasure)
        & s__instance(V__DIRECTION,s__DirectionalAttribute)
        & s__instance(V__TIME,s__TimeDuration)
        & s__instance(V__REF,s__Region)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__measure(V__OBJECT,s__VelocityFn(V__DISTANCE,V__TIME,V__REF,V__DIRECTION))
       => s__measure(V__OBJECT,s__SpeedFn(V__DISTANCE,V__TIME)) ) ) ).

fof(kb_SUMO_5097,axiom,
    s__instance(s__Meter,s__UnitOfLength) ).

fof(kb_SUMO_5098,axiom,
    s__instance(s__Meter,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5099,axiom,
    s__documentation(s__Meter,s__EnglishLanguage,'SI &%UnitOfLength. Symbol: m. It is one of the base units in SI, and it is currently defined as follows: the &%Meter is the length of the path traveled by light in a vacuum during a time interval of 1/299792458 of a &%SecondDuration.') ).

fof(kb_SUMO_5100,axiom,
    s__instance(s__Gram,s__UnitOfMass) ).

fof(kb_SUMO_5101,axiom,
    s__instance(s__Gram,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5102,axiom,
    s__documentation(s__Gram,s__EnglishLanguage,'Submultiple of kilogram. Symbol: g. 1 kilogram = 1000 &%Grams.') ).

fof(kb_SUMO_5103,axiom,
    s__instance(s__SecondDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5104,axiom,
    s__instance(s__SecondDuration,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5105,axiom,
    s__documentation(s__SecondDuration,s__EnglishLanguage,'SI &%UnitOfDuration. Symbol: s. It is one of the base units in SI, and it is currently defined as follows: the &%SecondDuration is the duration of 9192631770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the cesium 133 atom.') ).

fof(kb_SUMO_5106,axiom,
    s__instance(s__Ampere,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5107,axiom,
    s__instance(s__Ampere,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5108,axiom,
    s__documentation(s__Ampere,s__EnglishLanguage,'SI electric current measure. Symbol: A. It is one of the base units in SI. It is defined as follows: the &%Ampere is that constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 &%Meter apart in a vacuum, would produce between these conductors a force equal to 2*10^(-7) &%Newton per &%Meter of length.') ).

fof(kb_SUMO_5109,axiom,
    s__instance(s__KelvinDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_5110,axiom,
    s__instance(s__KelvinDegree,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5111,axiom,
    s__instance(s__SystemeInternationalUnit__t,s__SetOrClass) ).

fof(kb_SUMO_5112,axiom,
    s__documentation(s__KelvinDegree,s__EnglishLanguage,'SI &%UnitOfMeasure used with &%MeasureFn to produce terms denoting instances of &%TemperatureMeasure. Symbol: K. It is one of the base units in SI (it is also a unit in the ITS system). Kelvin differs from the Celsius scale in that the triple point of water is defined to be 273.16 &%KelvinDegrees while it is 0 &%CelsiusDegrees. The magnitudes of intervals in the two scales are the same. By definition the conversion constant is 273.15.') ).

fof(kb_SUMO_5113,axiom,
    s__instance(s__Mole,s__UnitOfMass) ).

fof(kb_SUMO_5114,axiom,
    s__instance(s__Mole,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5115,axiom,
    s__documentation(s__Mole,s__EnglishLanguage,'SI amount of substance unit. symbol: mol. It is one of the base units in SI. It is defined as follows: the &%Mole is the amount of substance of a system which contains as many elementary entities as there are atoms in 0.012 &%Kilograms of carbon 12. Note that, when this &%UnitOfMeasure is used, the elementary entities must be specified - they may be atoms, molecules, ions, electrons, etc. or groups of such particles.') ).

fof(kb_SUMO_5116,axiom,
    s__instance(s__Candela,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5117,axiom,
    s__instance(s__Candela,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5118,axiom,
    s__documentation(s__Candela,s__EnglishLanguage,'SI luminosity intensity measure. Symbol: cd. It is one of the base units in SI, and it is currently defined as follows: the &%Candela is the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540*10^12 &%Hertz and that has a radiant intensity in that direction of 1/683 &%Watt per &%Steradian.') ).

fof(kb_SUMO_5119,axiom,
    s__instance(s__Liter,s__UnitOfVolume) ).

fof(kb_SUMO_5120,axiom,
    s__documentation(s__Liter,s__EnglishLanguage,'Unit of volume in the metric system. It is currently defined to be equal to one cubic decimeter (0.001 cubic meter). Symbol: l.') ).

fof(kb_SUMO_5121,axiom,
    s__instance(s__Centimeter,s__UnitOfLength) ).

fof(kb_SUMO_5122,axiom,
    s__documentation(s__Centimeter,s__EnglishLanguage,'Submultiple of &%Meter. Symbol: cm. It is the 100th part of a &%Meter') ).

fof(kb_SUMO_5123,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Centimeter) = s__MeasureFn(times(V__NUMBER,"0.01"),s__Meter) ) ) ).

fof(kb_SUMO_5124,axiom,
    s__documentation(s__Millimeter,s__EnglishLanguage,'Submultiple of Meter. Symbol: mm. A millimeter is the 1000th part of a meter') ).

fof(kb_SUMO_5125,axiom,
    s__instance(s__Millimeter,s__UnitOfLength) ).

fof(kb_SUMO_5126,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Millimeter) = s__MeasureFn(times(V__NUMBER,"0.001"),s__Meter) ) ) ).

fof(kb_SUMO_5127,axiom,
    s__instance(s__Kilometer,s__UnitOfLength) ).

fof(kb_SUMO_5128,axiom,
    s__documentation(s__Kilometer,s__EnglishLanguage,'Supermultiple of &%Meter. Symbol: km. A &%Meter is the 1000th part of a &%Kilometer') ).

fof(kb_SUMO_5129,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Kilometer) = s__MeasureFn(times(V__NUMBER,"1000"),s__Meter) ) ) ).

fof(kb_SUMO_5130,axiom,
    s__instance(s__Radian,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_5131,axiom,
    s__instance(s__Radian,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5132,axiom,
    s__documentation(s__Radian,s__EnglishLanguage,'SI plane angle measure. Symbol: rad. It is the angle of a circle subtended by an arc equal in length to the circles radius. Another definition is: the plane angle between two radii of a circle which cut off on the circumference an arc equal in length to the radius. &%Radian = m/m = 1.') ).

fof(kb_SUMO_5133,axiom,
    s__instance(s__Steradian,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_5134,axiom,
    s__instance(s__Steradian,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5135,axiom,
    s__documentation(s__Steradian,s__EnglishLanguage,'SI solid angle measure. Symbol: sr. It is the solid angle of a sphere subtended by a portion of the surface whose area is equal to the square of the spheres radius. Another definition is: the solid angle which, having its vertex in the center of the sphere, cuts off an area of the surface of the sphere equal to that of a square with sides of length equal to the radius of the sphere. &%Steradian = m^2/m^2 = 1.') ).

fof(kb_SUMO_5136,axiom,
    s__subclass(s__FrequencyMeasure,s__TimeDependentQuantity) ).

fof(kb_SUMO_5137,axiom,
    s__instance(s__FrequencyMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_5138,axiom,
    s__documentation(s__FrequencyMeasure,s__EnglishLanguage,'A &%subclass of &%TimeDependentQuantity, instances of which are measures of the frequency with which some &%Process occurs.') ).

fof(kb_SUMO_5139,axiom,
    s__subclass(s__UnitOfFrequency,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5140,axiom,
    s__instance(s__UnitOfFrequency__t,s__SetOrClass) ).

fof(kb_SUMO_5141,axiom,
    s__documentation(s__UnitOfFrequency,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%FrequencyMeasure.') ).

fof(kb_SUMO_5142,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfFrequency) )
       => s__instance(V__QUANT,s__FrequencyMeasure) ) ) ).

fof(kb_SUMO_5143,axiom,
    s__instance(s__Hertz,s__UnitOfFrequency) ).

fof(kb_SUMO_5144,axiom,
    s__instance(s__Hertz,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5145,axiom,
    s__documentation(s__Hertz,s__EnglishLanguage,'SI frequency measure. Symbol: Hz. It is the number of cycles per second. &%Hertz = s^(-1). Note that &%Hertz does not have a conversion function.') ).

fof(kb_SUMO_5146,axiom,
    s__instance(s__Newton,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5147,axiom,
    s__instance(s__Newton,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5148,axiom,
    s__documentation(s__Newton,s__EnglishLanguage,'SI force measure. Symbol: N. It is that force which gives to a mass of 1 kilogram an acceleration of 1 &%Meter per &%SecondDuration. &%Newton = m*kg*s^(-2).') ).

fof(kb_SUMO_5149,axiom,
    s__instance(s__Pascal,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5150,axiom,
    s__instance(s__Pascal,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5151,axiom,
    s__documentation(s__Pascal,s__EnglishLanguage,'SI pressure measure. Symbol:Pa. It is the pressure of one &%Newton per square &%Meter. &%Pascal = N/m^2 = m^(-1)*kg*s^(-2).') ).

fof(kb_SUMO_5152,axiom,
    s__instance(s__Joule,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5153,axiom,
    s__instance(s__Joule,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5154,axiom,
    s__documentation(s__Joule,s__EnglishLanguage,'SI energy measure. Symbol: J. It is the work done when the point of application of 1 &%Newton is displaced a distance of 1 &%Meter in the direction of the force. &%Joule = N*m = m^2*kg*s^(-2).') ).

fof(kb_SUMO_5155,axiom,
    s__instance(s__Watt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5156,axiom,
    s__instance(s__Watt,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5157,axiom,
    s__documentation(s__Watt,s__EnglishLanguage,'SI power measure. Symbol: W. A &%UnitOfMeasure that measures power, i.e. energy produced or expended divided by &%TimeDuration. It is the power which gives rise to the production of energy (or work) at the rate of one &%Joule per &%SecondDuration. &%Watt = J/s = m^2*kg*s^(-3).') ).

fof(kb_SUMO_5158,axiom,
    s__instance(s__Horsepower,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5159,axiom,
    s__documentation(s__Horsepower,s__EnglishLanguage,'A power measure that is equal to 746 &%Watts.') ).

fof(kb_SUMO_5160,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__RealNumber)
     => s__MeasureFn(V__N,s__Horsepower) = s__MeasureFn(times(V__N,"746"),s__Watt) ) ).

fof(kb_SUMO_5161,axiom,
    s__instance(s__Coulomb,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5162,axiom,
    s__instance(s__Coulomb,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5163,axiom,
    s__documentation(s__Coulomb,s__EnglishLanguage,'SI electric charge measure. Symbol: C. It is the quantity of electric charge transported through a cross section of a conductor in an electric circuit during each &%SecondDuration by a current of 1 &%Ampere. Coulomb = s*A.') ).

fof(kb_SUMO_5164,axiom,
    ! [V__NUMBER,V__QUANTITY] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__QUANTITY = s__MeasureFn(V__NUMBER,s__Coulomb)
       => s__instance(V__QUANTITY,s__TimeDependentQuantity) ) ) ).

fof(kb_SUMO_5165,axiom,
    s__instance(s__Volt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5166,axiom,
    s__instance(s__Volt,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5167,axiom,
    s__documentation(s__Volt,s__EnglishLanguage,'SI electric potential measure. Symbol: V. It is the difference of electric potential between two points of a conducting wire carrying a constant current of 1 &%Ampere, when the power dissipated between these points is equal to 1 &%Watt. &%Volt = W/A = m^2*kg*s^(-3)*A^(-1).') ).

fof(kb_SUMO_5168,axiom,
    s__instance(s__Farad,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5169,axiom,
    s__instance(s__Farad,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5170,axiom,
    s__documentation(s__Farad,s__EnglishLanguage,'SI capacitance measure. Symbol: F. It is the capacitance of a capacitator between the plates of which there appears a difference of potential of 1 &%Volt when it is charged by a quantity of electricity equal to 1 Coulomb. &%Farad = C/V = m^(-2)*kg(-1)*s^4*A^2.') ).

fof(kb_SUMO_5171,axiom,
    s__instance(s__Ohm,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5172,axiom,
    s__instance(s__Ohm,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5173,axiom,
    s__documentation(s__Ohm,s__EnglishLanguage,'SI electric resistance measure. It is the electric resistance between two points of a conductor when a constant difference of potential of 1 &%Volt, applied between these two points, produces in this conductor a current of 1 &%Ampere, this conductor not being the force of any electromotive force. &%Ohm = V/A = m^2*kg*s^(-3)*A^(-2).') ).

fof(kb_SUMO_5174,axiom,
    s__instance(s__Siemens,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5175,axiom,
    s__instance(s__Siemens,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5176,axiom,
    s__documentation(s__Siemens,s__EnglishLanguage,'SI electric conductance measure. Symbol: S. In the case of direct current, the conductance in &%Siemens is the reciprocal of the resistance in &%Ohms, in the case of alternating current, it is the reciprocal of the impedance in ohms. siemens = A/V = m^(-2)*kg(-1)*s^(3)*A^2.') ).

fof(kb_SUMO_5177,axiom,
    s__instance(s__Weber,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5178,axiom,
    s__instance(s__Weber,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5179,axiom,
    s__documentation(s__Weber,s__EnglishLanguage,'SI magnetic flux measure. Symbol: Wb. It is the magnetic flux which, linking a circuit of one turn, produces in it an electromotive force of 1 &%Volt as it is reduced to zero at a uniform rate in 1 &%SecondDuration. &%Weber = V*s = m^2*kg*s^(-2)*A^(-1).') ).

fof(kb_SUMO_5180,axiom,
    s__instance(s__Tesla,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5181,axiom,
    s__instance(s__Tesla,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5182,axiom,
    s__documentation(s__Tesla,s__EnglishLanguage,'SI magnetic flux density measure. Symbol: T. One &%Tesla equals one &%Weber per square &%Meter. &%Tesla = Wb/m^2 = kg*s^(-2)*A^(-1).') ).

fof(kb_SUMO_5183,axiom,
    s__instance(s__Henry,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5184,axiom,
    s__instance(s__Henry,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5185,axiom,
    s__documentation(s__Henry,s__EnglishLanguage,'SI inductance measure. Symbol: H. One &%Henry is equivalent to one &%Volt divided by one &%Ampere per &%SecondDuration. If a current changing at the rate of one &%Ampere per &%SecondDuration induces an electromotive force of one &%Volt, the circuit has an inductance of one &%Henry. &%Henry = Wb/A = m^2*kg*s^(-2)*A^(-2).') ).

fof(kb_SUMO_5186,axiom,
    s__subclass(s__CelsiusDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_5187,axiom,
    s__instance(s__CelsiusDegree__t,s__SetOrClass) ).

fof(kb_SUMO_5188,axiom,
    s__instance(s__UnitOfTemperature__t,s__SetOrClass) ).

fof(kb_SUMO_5189,axiom,
    s__instance(s__CelsiusDegree,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5190,axiom,
    s__documentation(s__CelsiusDegree,s__EnglishLanguage,'A &%TemperatureMeasure. The freezing point and the boiling point of water are, respectively, 0 &%CelsiusDegrees and 100 &%CelsiusDegrees.') ).

fof(kb_SUMO_5191,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__CelsiusDegree) = s__MeasureFn(minus(V__NUMBER,"273.15"),s__KelvinDegree) ) ) ).

fof(kb_SUMO_5192,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__CelsiusDegree) = s__MeasureFn(divide(minus(V__NUMBER,"32"),"1.8"),s__FahrenheitDegree) ) ) ).

fof(kb_SUMO_5193,axiom,
    s__instance(s__Lumen,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5194,axiom,
    s__instance(s__Lumen,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5195,axiom,
    s__documentation(s__Lumen,s__EnglishLanguage,'SI luminous flux measure. Symbol: lm. It is the amount streaming outward through one solid angle of 1 &%Steradian from a uniform point source having an intensity of one &%Candela. &%Lumen = cd*sr = cd * 1.') ).

fof(kb_SUMO_5196,axiom,
    s__instance(s__Lux,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5197,axiom,
    s__instance(s__Lux,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5198,axiom,
    s__documentation(s__Lux,s__EnglishLanguage,'SI illuminance measure. Symbol: lx. It is the amount of illumination provided when one &%Lumen is evenly distributed over an area of 1 square &%Meter. This is also equivalent to the illumination that would exist on a surface all points of which are one &%Meter from a point source of one &%Candela. &%Lux = lm/m^2 = m^(-2)*cd.') ).

fof(kb_SUMO_5199,axiom,
    s__instance(s__Becquerel,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5200,axiom,
    s__instance(s__Becquerel,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5201,axiom,
    s__documentation(s__Becquerel,s__EnglishLanguage,'SI activity measure. Symbol: Bq. It measures the amount of radioactivity contained in a given sample of matter. It is that quantity of a radioactive element in which there is one atomic disintegration per &%SecondDuration. &%Becquerel = s^(-1).') ).

fof(kb_SUMO_5202,axiom,
    ! [V__NUMBER,V__QUANTITY] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__QUANTITY = s__MeasureFn(V__NUMBER,s__Becquerel)
       => s__instance(V__QUANTITY,s__TimeDependentQuantity) ) ) ).

fof(kb_SUMO_5203,axiom,
    s__instance(s__Gray,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5204,axiom,
    s__instance(s__Gray,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5205,axiom,
    s__documentation(s__Gray,s__EnglishLanguage,'SI absorbed dose measure. Symbol: Gy. It measures the dose of radiation absorbed in living tissue. It is equal approximately to the absorbed dose delivered when the energy per unit mass imparted to matter by ionizing radiation is 1 &%Joule per kilogram. &%Gray = J/kg = m^2*s^(-2).') ).

fof(kb_SUMO_5206,axiom,
    s__instance(s__Sievert,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5207,axiom,
    s__instance(s__Sievert,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5208,axiom,
    s__documentation(s__Sievert,s__EnglishLanguage,'SI dose equivalent measure. Symbol: Sv. It is a unit of biologic dose of ionizing radiation. The &%Sievert makes it possible to normalize doses of different types of radiation. It takes into account the relative biologic effectiveness of ionizing radiation, since each form of such radiation--e.g., X rays, gamma rays, neutrons-- has a slightly different effect on living tissue for a given absorbed dose. The dose equivalent of a given type of radiation (in &%Sievert) is the dose of the radiation in &%Gray multiplied by a quality factor that is based on the relative biologic effectiveness of the radiation. Accordingly, one &%Sievert is generally defined as the amount of radiation roughly equivalent in biologic effectiveness to one &%Gray of gamma radiation. &%Sievert = J/kg = m^2*s^(-2)') ).

fof(kb_SUMO_5209,axiom,
    s__instance(s__DayDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5210,axiom,
    s__documentation(s__DayDuration,s__EnglishLanguage,'Time unit. 1 day = 24 hours.') ).

fof(kb_SUMO_5211,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__DayDuration) = s__MeasureFn(times(V__NUMBER,"24"),s__HourDuration) ) ) ).

fof(kb_SUMO_5212,axiom,
    s__instance(s__HourDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5213,axiom,
    s__documentation(s__HourDuration,s__EnglishLanguage,'Time unit. 1 hour = 60 minutes.') ).

fof(kb_SUMO_5214,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__HourDuration) = s__MeasureFn(times(V__NUMBER,"60"),s__MinuteDuration) ) ) ).

fof(kb_SUMO_5215,axiom,
    s__instance(s__MinuteDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5216,axiom,
    s__documentation(s__MinuteDuration,s__EnglishLanguage,'Time unit. 1 minute = 60 seconds. ') ).

fof(kb_SUMO_5217,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__MinuteDuration) = s__MeasureFn(times(V__NUMBER,"60"),s__SecondDuration) ) ) ).

fof(kb_SUMO_5218,axiom,
    s__instance(s__WeekDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5219,axiom,
    s__documentation(s__WeekDuration,s__EnglishLanguage,'Time unit. A weeks duration is seven days.') ).

fof(kb_SUMO_5220,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__WeekDuration) = s__MeasureFn(times(V__NUMBER,"7"),s__DayDuration) ) ) ).

fof(kb_SUMO_5221,axiom,
    s__instance(s__MonthDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5222,axiom,
    s__documentation(s__MonthDuration,s__EnglishLanguage,'Time unit. A months duration is at least 28 days, and no more than 31 days. Note that this unit is a range, rather than an exact amount, unlike most other units.') ).

fof(kb_SUMO_5223,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => greatereq(s__MeasureFn(V__NUMBER,s__MonthDuration),s__MeasureFn(times(V__NUMBER,"28"),s__DayDuration)) ) ) ).

fof(kb_SUMO_5224,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => lesseq(s__MeasureFn(V__NUMBER,s__MonthDuration),s__MeasureFn(times(V__NUMBER,"31"),s__DayDuration)) ) ) ).

fof(kb_SUMO_5225,axiom,
    s__instance(s__YearDuration,s__UnitOfDuration) ).

fof(kb_SUMO_5226,axiom,
    s__documentation(s__YearDuration,s__EnglishLanguage,'Time unit. one calendar year. 1 year = 365 days = 31536000 seconds.') ).

fof(kb_SUMO_5227,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__YearDuration) = s__MeasureFn(times(V__NUMBER,"365"),s__DayDuration) ) ) ).

fof(kb_SUMO_5228,axiom,
    s__instance(s__Amu,s__UnitOfMass) ).

fof(kb_SUMO_5229,axiom,
    s__documentation(s__Amu,s__EnglishLanguage,'Atomic mass unit. Symbol: u. It is the mass of the twelfth part of an atom of the Carbon 12 isotope.') ).

fof(kb_SUMO_5230,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Amu) = s__MeasureFn(times(V__NUMBER,"1.6605402E-24"),s__Gram) ) ) ).

fof(kb_SUMO_5231,axiom,
    s__instance(s__ElectronVolt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5232,axiom,
    s__documentation(s__ElectronVolt,s__EnglishLanguage,'The &%ElectronVolt is an energy measure. Symbol: eV. It is the kinetic energy acquired by an electron in passing through a potential difference of 1 &%Volt in a vacuum.') ).

fof(kb_SUMO_5233,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__ElectronVolt) = s__MeasureFn(times(V__NUMBER,"1.60217733E-19"),s__Joule) ) ) ).

fof(kb_SUMO_5234,axiom,
    s__instance(s__Angstrom,s__UnitOfLength) ).

fof(kb_SUMO_5235,axiom,
    s__documentation(s__Angstrom,s__EnglishLanguage,'The &%Angstrom is a &%LengthMeasure. 1 &%Angstrom = 10^(-10) m') ).

fof(kb_SUMO_5236,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Angstrom) = s__MeasureFn(times(V__NUMBER,"1.0E-10"),s__Meter) ) ) ).

fof(kb_SUMO_5237,axiom,
    s__instance(s__FootLength,s__UnitOfLength) ).

fof(kb_SUMO_5238,axiom,
    s__documentation(s__FootLength,s__EnglishLanguage,'English length unit of feet.') ).

fof(kb_SUMO_5239,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__FootLength) = s__MeasureFn(times(V__NUMBER,"0.3048"),s__Meter) ) ) ).

fof(kb_SUMO_5240,axiom,
    s__instance(s__Inch,s__UnitOfLength) ).

fof(kb_SUMO_5241,axiom,
    s__documentation(s__Inch,s__EnglishLanguage,'English length unit of inches.') ).

fof(kb_SUMO_5242,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Inch) = s__MeasureFn(times(V__NUMBER,"0.0254"),s__Meter) ) ) ).

fof(kb_SUMO_5243,axiom,
    s__instance(s__Mile,s__UnitOfLength) ).

fof(kb_SUMO_5244,axiom,
    s__documentation(s__Mile,s__EnglishLanguage,'English length unit of miles.') ).

fof(kb_SUMO_5245,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Mile) = s__MeasureFn(times(V__NUMBER,"1609.344"),s__Meter) ) ) ).

fof(kb_SUMO_5246,axiom,
    s__instance(s__UnitedStatesGallon,s__UnitOfVolume) ).

fof(kb_SUMO_5247,axiom,
    s__relatedInternalConcept(s__UnitedStatesGallon,s__UnitedKingdomGallon) ).

fof(kb_SUMO_5248,axiom,
    s__documentation(s__UnitedStatesGallon,s__EnglishLanguage,'Unit of volume commonly used in the United States.') ).

fof(kb_SUMO_5249,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedStatesGallon) = s__MeasureFn(times(V__NUMBER,"3.785411784"),s__Liter) ) ) ).

fof(kb_SUMO_5250,axiom,
    s__instance(s__Quart,s__UnitOfVolume) ).

fof(kb_SUMO_5251,axiom,
    s__documentation(s__Quart,s__EnglishLanguage,'English unit of volume equal to 1/4 of a &%UnitedStatesGallon.') ).

fof(kb_SUMO_5252,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Quart) = s__MeasureFn(divide(V__NUMBER,"4"),s__UnitedStatesGallon) ) ) ).

fof(kb_SUMO_5253,axiom,
    s__instance(s__Pint,s__UnitOfVolume) ).

fof(kb_SUMO_5254,axiom,
    s__documentation(s__Pint,s__EnglishLanguage,'English unit of volume equal to 1/2 of a &%Quart.') ).

fof(kb_SUMO_5255,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Pint) = s__MeasureFn(divide(V__NUMBER,"2"),s__Quart) ) ) ).

fof(kb_SUMO_5256,axiom,
    s__instance(s__Cup,s__UnitOfVolume) ).

fof(kb_SUMO_5257,axiom,
    s__documentation(s__Cup,s__EnglishLanguage,'English unit of volume equal to 1/2 of a &%Pint.') ).

fof(kb_SUMO_5258,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Cup) = s__MeasureFn(divide(V__NUMBER,"2"),s__Pint) ) ) ).

fof(kb_SUMO_5259,axiom,
    s__instance(s__Ounce,s__UnitOfVolume) ).

fof(kb_SUMO_5260,axiom,
    s__documentation(s__Ounce,s__EnglishLanguage,'English unit of volume equal to 1/8 of a &%Cup.') ).

fof(kb_SUMO_5261,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Ounce) = s__MeasureFn(divide(V__NUMBER,"8"),s__Cup) ) ) ).

fof(kb_SUMO_5262,axiom,
    s__instance(s__UnitedKingdomGallon,s__UnitOfVolume) ).

fof(kb_SUMO_5263,axiom,
    s__instance(s__UnitOfVolume__t,s__SetOrClass) ).

fof(kb_SUMO_5264,axiom,
    s__documentation(s__UnitedKingdomGallon,s__EnglishLanguage,'Unit of volume commonly used in the United Kingdom.') ).

fof(kb_SUMO_5265,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedKingdomGallon) = s__MeasureFn(times(V__NUMBER,"4.54609"),s__Liter) ) ) ).

fof(kb_SUMO_5266,axiom,
    s__instance(s__AtomGram,s__UnitOfMass) ).

fof(kb_SUMO_5267,axiom,
    s__instance(s__UnitOfMass__t,s__SetOrClass) ).

fof(kb_SUMO_5268,axiom,
    s__documentation(s__AtomGram,s__EnglishLanguage,'&%MassMeasure that is also known as the gram-atom. Defined as the mass in grams of 1 &%Mole of pure substance. For example, 1 &%AtomGram of Carbon 12 will be 12 &%Grams of pure Carbon 12. 2 &%AtomGrams of the same substance will be 24 &%Grams of it. This is an unusual unit in that it is essentially 1 &%Mole of stuff measured in grams, so that the actual value (i.e. mass) depends on the type of substance.') ).

fof(kb_SUMO_5269,axiom,
    s__documentation(s__Kilogram,s__EnglishLanguage,'Supermultiple of &%Gramm. Symbol: kg. 1 &%Kilogram = 1000 Grams.') ).

fof(kb_SUMO_5270,axiom,
    s__instance(s__Kilogram,s__SystemeInternationalUnit) ).

fof(kb_SUMO_5271,axiom,
    s__instance(s__Kilogram,s__UnitOfMass) ).

fof(kb_SUMO_5272,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Kilogram) = s__MeasureFn(times(V__NUMBER,"1000"),s__Gram) ) ) ).

fof(kb_SUMO_5273,axiom,
    s__domain(s__weight__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5274,axiom,
    s__domain(s__weight__m,"2",s__MassMeasure) ).

fof(kb_SUMO_5275,axiom,
    s__instance(s__weight__m,s__BinaryPredicate) ).

fof(kb_SUMO_5276,axiom,
    s__subrelation(s__weight__m,s__measure__m) ).

fof(kb_SUMO_5277,axiom,
    s__documentation(s__weight__m,s__EnglishLanguage,'(&%weight ?O ?MM) means that on planet earth the &%SelfConnectedObject ?O has the weight ?MM.') ).

fof(kb_SUMO_5278,axiom,
    s__instance(s__PoundMass,s__UnitOfMass) ).

fof(kb_SUMO_5279,axiom,
    s__documentation(s__PoundMass,s__EnglishLanguage,'English mass unit of pounds.') ).

fof(kb_SUMO_5280,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__PoundMass) = s__MeasureFn(times(V__NUMBER,"453.59237"),s__Gram) ) ) ).

fof(kb_SUMO_5281,axiom,
    s__instance(s__Slug,s__UnitOfMass) ).

fof(kb_SUMO_5282,axiom,
    s__documentation(s__Slug,s__EnglishLanguage,'English mass unit of slugs.') ).

fof(kb_SUMO_5283,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Slug) = s__MeasureFn(times(V__NUMBER,"14593.90"),s__Gram) ) ) ).

fof(kb_SUMO_5284,axiom,
    s__instance(s__RankineDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_5285,axiom,
    s__documentation(s__RankineDegree,s__EnglishLanguage,'A &%TemperatureMeasure. Note that 0 &%RankineDegrees is the same as the absolute zero (i.e. 0 &%KelvinDegrees).') ).

fof(kb_SUMO_5286,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__RankineDegree) = s__MeasureFn(times(V__NUMBER,"1.8"),s__KelvinDegree) ) ) ).

fof(kb_SUMO_5287,axiom,
    s__instance(s__FahrenheitDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_5288,axiom,
    s__documentation(s__FahrenheitDegree,s__EnglishLanguage,'A &%UnitOfTemperature that is commonly used in the United States. On the Fahrenheit scale, the freezing point of water is 32 &%FahrenheitDegrees, and the boiling point of water is 212 &%FahrenheitDegrees.') ).

fof(kb_SUMO_5289,axiom,
    s__instance(s__PoundForce,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5290,axiom,
    s__documentation(s__PoundForce,s__EnglishLanguage,'English pound of force. The conversion factor depends on the local value of the acceleration of free fall. A mean value is used in the conversion axiom associated with this constant.') ).

fof(kb_SUMO_5291,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__PoundForce) = s__MeasureFn(times(V__NUMBER,"4.448222"),s__Newton) ) ) ).

fof(kb_SUMO_5292,axiom,
    s__instance(s__Calorie,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5293,axiom,
    s__instance(s__CompositeUnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_5294,axiom,
    s__documentation(s__Calorie,s__EnglishLanguage,'A &%Calorie is an energy measure.') ).

fof(kb_SUMO_5295,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Calorie) = s__MeasureFn(times(V__NUMBER,"4.1868"),s__Joule) ) ) ).

fof(kb_SUMO_5296,axiom,
    s__instance(s__BritishThermalUnit,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5297,axiom,
    s__documentation(s__BritishThermalUnit,s__EnglishLanguage,'An energy measure.') ).

fof(kb_SUMO_5298,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__BritishThermalUnit) = s__MeasureFn(times(V__NUMBER,"1055.05585262"),s__Joule) ) ) ).

fof(kb_SUMO_5299,axiom,
    s__instance(s__AngularDegree,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_5300,axiom,
    s__documentation(s__AngularDegree,s__EnglishLanguage,'A plane angle measure.') ).

fof(kb_SUMO_5301,axiom,
    ! [V__QUANT,V__N] :
      ( s__instance(V__N,s__RealNumber)
     => ( V__QUANT = s__MeasureFn(V__N,s__AngularDegree)
       => s__instance(V__QUANT,s__PlaneAngleMeasure) ) ) ).

fof(kb_SUMO_5302,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__AngularDegree) = s__MeasureFn(times(V__NUMBER,divide(s__Pi,"180")),s__Radian) ) ) ).

fof(kb_SUMO_5303,axiom,
    ! [V__NUMBER,V__ANGLE] :
      ( ( s__instance(V__ANGLE,s__Object)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__measure(V__ANGLE,s__MeasureFn(V__NUMBER,s__AngularDegree))
       => ( greatereq(V__NUMBER,"0")
          & lesseq(V__NUMBER,"360") ) ) ) ).

fof(kb_SUMO_5304,axiom,
    s__MeasureFn("0",s__AngularDegree) = s__MeasureFn("360",s__AngularDegree) ).

fof(kb_SUMO_5305,axiom,
    s__instance(s__UnitedStatesDollar,s__UnitOfCurrency) ).

fof(kb_SUMO_5306,axiom,
    s__documentation(s__UnitedStatesDollar,s__EnglishLanguage,'A currency measure.') ).

fof(kb_SUMO_5307,axiom,
    s__instance(s__UnitedStatesCent,s__UnitOfCurrency) ).

fof(kb_SUMO_5308,axiom,
    s__documentation(s__UnitedStatesCent,s__EnglishLanguage,'A currency measure. 1 &%UnitedStatesCent is equal to .01 &%UnitedStatesDollars.') ).

fof(kb_SUMO_5309,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedStatesCent) = s__MeasureFn(times(V__NUMBER,"0.01"),s__UnitedStatesDollar) ) ) ).

fof(kb_SUMO_5310,axiom,
    s__instance(s__EuroDollar,s__UnitOfCurrency) ).

fof(kb_SUMO_5311,axiom,
    s__instance(s__UnitOfCurrency__t,s__SetOrClass) ).

fof(kb_SUMO_5312,axiom,
    s__documentation(s__EuroDollar,s__EnglishLanguage,'A currency measure of most European Union countries.') ).

fof(kb_SUMO_5313,axiom,
    s__instance(s__EuroCent,s__UnitOfCurrency) ).

fof(kb_SUMO_5314,axiom,
    s__documentation(s__EuroCent,s__EnglishLanguage,'A currency measure. 1 &%EuroCent is equal to .01 &%EuroDollars.') ).

fof(kb_SUMO_5315,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__EuroCent) = s__MeasureFn(times(V__NUMBER,"0.01"),s__EuroDollar) ) ) ).

fof(kb_SUMO_5316,axiom,
    s__subclass(s__InformationMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_5317,axiom,
    s__instance(s__InformationMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_5318,axiom,
    s__documentation(s__InformationMeasure,s__EnglishLanguage,'Measures of the amount of information. Includes &%Bit, &%Byte, and multiples of these, e.g. &%KiloByte and &%MegaByte.') ).

fof(kb_SUMO_5319,axiom,
    s__instance(s__Bit,s__UnitOfInformation) ).

fof(kb_SUMO_5320,axiom,
    s__documentation(s__Bit,s__EnglishLanguage,'One &%Bit of information. A one or a zero.') ).

fof(kb_SUMO_5321,axiom,
    s__instance(s__Byte,s__UnitOfInformation) ).

fof(kb_SUMO_5322,axiom,
    s__documentation(s__Byte,s__EnglishLanguage,'One &%Byte of information. A &%Byte is eight &%Bits.') ).

fof(kb_SUMO_5323,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Byte) = s__MeasureFn(times(V__NUMBER,"8"),s__Bit) ) ) ).

fof(kb_SUMO_5324,axiom,
    s__instance(s__KiloByte,s__UnitOfInformation) ).

fof(kb_SUMO_5325,axiom,
    s__documentation(s__KiloByte,s__EnglishLanguage,'One &%KiloByte (KB) of information. One &%KiloByte is 1024 &%Bytes. Note that this sense of kilo is different from the one accepted in the SI system.') ).

fof(kb_SUMO_5326,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__KiloByte) = s__MeasureFn(times(V__NUMBER,"1024"),s__Byte) ) ) ).

fof(kb_SUMO_5327,axiom,
    s__instance(s__MegaByte,s__UnitOfInformation) ).

fof(kb_SUMO_5328,axiom,
    s__documentation(s__MegaByte,s__EnglishLanguage,'One &%MegaByte (MB) of information. One &%MegaByte is 1024 &%KiloBytes. Note that this sense of mega is different from the one accepted in the SI system.') ).

fof(kb_SUMO_5329,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__MegaByte) = s__MeasureFn(times(V__NUMBER,"1024"),s__KiloByte) ) ) ).

fof(kb_SUMO_5330,axiom,
    s__instance(s__measure__m,s__BinaryPredicate) ).

fof(kb_SUMO_5331,axiom,
    s__instance(s__measure__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5332,axiom,
    s__domain(s__measure__m,"1",s__Object) ).

fof(kb_SUMO_5333,axiom,
    s__domain(s__measure__m,"2",s__PhysicalQuantity) ).

fof(kb_SUMO_5334,axiom,
    s__documentation(s__measure__m,s__EnglishLanguage,'A very general &%Predicate for asserting that a particular &%Object is measured by a particular &%PhysicalQuantity. In general, the second argument of this &%Predicate will be a term produced with the &%Function &%MeasureFn.') ).

fof(kb_SUMO_5335,axiom,
    s__instance(s__age__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5336,axiom,
    s__subrelation(s__age__m,s__measure__m) ).

fof(kb_SUMO_5337,axiom,
    s__domain(s__age__m,"2",s__TimeDuration) ).

fof(kb_SUMO_5338,axiom,
    s__documentation(s__age__m,s__EnglishLanguage,'Simply relates an &%Object to a &%ConstantQuantity specifying the age of the &%Object.') ).

%FOL fof(kb_SUMO_5339,axiom,(( (! [V__OBJ,V__TIME,V__DURATION] : ((s__instance(V__DURATION,s__TimeDuration) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__TIME,s__TimePoint) & s__holdsDuring(V__TIME,'s__age(V__OBJ,V__DURATION)')) => s__duration(s__TimeIntervalFn(s__BeginFn(s__WhenFn(V__OBJ)),V__TIME),V__DURATION)))) ))).

fof(kb_SUMO_5340,axiom,
    s__subrelation(s__linearExtent__m,s__measure__m) ).

fof(kb_SUMO_5341,axiom,
    s__domain(s__linearExtent__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_5342,axiom,
    s__documentation(s__linearExtent__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object from one point to another point along its surface. Note that the difference between the predicates &%length and &%distance is that the &%length is used to state the &%LengthMeasure of one of the dimensions of a single object, while &%distance is used to state the &%LengthMeasure that separates two distinct objects.') ).

fof(kb_SUMO_5343,axiom,
    s__instance(s__width__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5344,axiom,
    s__subrelation(s__width__m,s__linearExtent__m) ).

fof(kb_SUMO_5345,axiom,
    s__documentation(s__width__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object from side to side at its widest span.') ).

fof(kb_SUMO_5346,axiom,
    s__subrelation(s__height__m,s__linearExtent__m) ).

fof(kb_SUMO_5347,axiom,
    s__domain(s__height__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5348,axiom,
    s__domain(s__height__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_5349,axiom,
    s__documentation(s__height__m,s__EnglishLanguage,'The height of an &%Object is the distance between its &%top and its &%bottom.') ).

fof(kb_SUMO_5350,axiom,
    s__instance(s__length__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5351,axiom,
    s__subrelation(s__length__m,s__linearExtent__m) ).

fof(kb_SUMO_5352,axiom,
    s__documentation(s__length__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object along its longest span.') ).

fof(kb_SUMO_5353,axiom,
    ! [V__O,V__M] :
      ( ( s__instance(V__M,s__LengthMeasure)
        & s__instance(V__O,s__Object) )
     => ( s__length(V__O,V__M)
       => ~ ? [V__M2] :
              ( s__instance(V__M2,s__LengthMeasure)
              & s__linearExtent(V__O,V__M2)
              & greater(V__M2,V__M) ) ) ) ).

fof(kb_SUMO_5354,axiom,
    s__subclass(s__Oval,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_5355,axiom,
    s__instance(s__Oval__t,s__SetOrClass) ).

fof(kb_SUMO_5356,axiom,
    s__documentation(s__Oval,s__EnglishLanguage,'The class of &%ClosedTwoDimensionalFigures that are produced by the intersection of a &%Cone with a &%ClosedTwoDimensionalFigure.') ).

fof(kb_SUMO_5357,axiom,
    s__subclass(s__Circle,s__Oval) ).

fof(kb_SUMO_5358,axiom,
    s__instance(s__Circle__t,s__SetOrClass) ).

fof(kb_SUMO_5359,axiom,
    s__documentation(s__Circle,s__EnglishLanguage,'The class of &%Ovals such that all &%GeometricPoints that make up the &%Circle are equidistant from a single &%GeometricPoint, known as the center of the &%Circle.') ).

fof(kb_SUMO_5360,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Circle)
     => ? [V__R] :
          ( s__instance(V__R,s__LengthMeasure)
          & s__radius(V__C,V__R) ) ) ).

fof(kb_SUMO_5361,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Circle)
     => ? [V__P] : s__CenterOfCircleFn(V__C) = V__P ) ).

fof(kb_SUMO_5362,axiom,
    s__documentation(s__CenterOfCircleFn__m,s__EnglishLanguage,'(CenterOfCircleFn ?CIRCLE) denotes the &%GeometricPoint that is the center of the &%Circle ?CIRCLE.') ).

fof(kb_SUMO_5363,axiom,
    s__instance(s__CenterOfCircleFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5364,axiom,
    s__instance(s__CenterOfCircleFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5365,axiom,
    s__domain(s__CenterOfCircleFn__m,"1",s__Circle) ).

fof(kb_SUMO_5366,axiom,
    s__range(s__CenterOfCircleFn__m,s__GeometricPoint) ).

fof(kb_SUMO_5367,axiom,
    s__instance(s__radius__m,s__BinaryPredicate) ).

fof(kb_SUMO_5368,axiom,
    s__instance(s__radius__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5369,axiom,
    s__instance(s__radius__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5370,axiom,
    s__domain(s__radius__m,"1",s__Circle) ).

fof(kb_SUMO_5371,axiom,
    s__domain(s__radius__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_5372,axiom,
    s__documentation(s__radius__m,s__EnglishLanguage,'(&%radius ?CIRCLE ?LENGTH) means that the radius of the &%Circle ?CIRCLE has a length of ?LENGTH.') ).

fof(kb_SUMO_5373,axiom,
    ! [V__CIRCLE,V__RADIUS] :
      ( s__radius(V__CIRCLE,V__RADIUS)
     => ? [V__POINT] :
          ( s__instance(V__POINT,s__GeometricPoint)
          & ! [V__PART] :
              ( ( s__instance(V__PART,s__GeometricPoint)
                & s__instance(V__RADIUS,s__LengthMeasure)
                & s__instance(V__CIRCLE,s__Circle) )
             => ( s__pointOfFigure(V__PART,V__CIRCLE)
               => s__geometricDistance(V__PART,V__POINT,V__RADIUS) ) ) ) ) ).

fof(kb_SUMO_5374,axiom,
    s__subrelation(s__diameter__m,s__width__m) ).

fof(kb_SUMO_5375,axiom,
    s__instance(s__diameter__m,s__BinaryPredicate) ).

fof(kb_SUMO_5376,axiom,
    s__instance(s__diameter__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5377,axiom,
    s__instance(s__diameter__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5378,axiom,
    s__domain(s__diameter__m,"1",s__Circle) ).

fof(kb_SUMO_5379,axiom,
    s__domain(s__diameter__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_5380,axiom,
    s__documentation(s__diameter__m,s__EnglishLanguage,'(&%diameter ?CIRCLE ?LENGTH) means that the diameter of the &%Circle ?CIRCLE has a length of ?LENGTH.') ).

fof(kb_SUMO_5381,axiom,
    ! [V__CIRCLE,V__LENGTH] :
      ( ( s__instance(V__LENGTH,s__LengthMeasure)
        & s__instance(V__CIRCLE,s__Circle) )
     => ( s__diameter(V__CIRCLE,V__LENGTH)
       => ? [V__HALF] :
            ( s__instance(V__HALF,s__LengthMeasure)
            & s__radius(V__CIRCLE,V__HALF)
            & times(V__HALF,"2") = V__LENGTH ) ) ) ).

fof(kb_SUMO_5382,axiom,
    s__instance(s__distance__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5383,axiom,
    s__instance(s__distance__m,s__SpatialRelation) ).

fof(kb_SUMO_5384,axiom,
    s__instance(s__distance__m,s__TernaryPredicate) ).

fof(kb_SUMO_5385,axiom,
    s__domain(s__distance__m,"1",s__Physical) ).

fof(kb_SUMO_5386,axiom,
    s__domain(s__distance__m,"2",s__Physical) ).

fof(kb_SUMO_5387,axiom,
    s__domain(s__distance__m,"3",s__LengthMeasure) ).

fof(kb_SUMO_5388,axiom,
    s__documentation(s__distance__m,s__EnglishLanguage,'(&%distance ?OBJ1 ?OBJ2 ?QUANT) means that the shortest distance between the two objects ?OBJ1 and ?OBJ2 is ?QUANT. Note that the difference between the predicates &%length and &%distance is that the &%length is used to state the &%LengthMeasure of one of the dimensions of a single object, while &%distance is used to state the &%LengthMeasure that separates two distinct objects.') ).

fof(kb_SUMO_5389,axiom,
    ! [V__QUANT,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__Physical)
        & s__instance(V__QUANT,s__LengthMeasure) )
     => ( s__distance(V__OBJ1,V__OBJ2,V__QUANT)
       => s__distance(V__OBJ2,V__OBJ1,V__QUANT) ) ) ).

fof(kb_SUMO_5390,axiom,
    s__subrelation(s__altitude__m,s__distance__m) ).

fof(kb_SUMO_5391,axiom,
    s__instance(s__altitude__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5392,axiom,
    s__documentation(s__altitude__m,s__EnglishLanguage,'A &%TernaryPredicate that is used to state the &%distance between the &%top of an &%Object and another point that is below the &%top of the &%Object (often this other point will be sea level). Note that this &%Predicate can be used to specify, for example, the height of geographic features, e.g. mountains, the altitude of aircraft, and the orbit of satellites around the Earth.') ).

fof(kb_SUMO_5393,axiom,
    ! [V__OBJ1,V__OBJ2,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__altitude(V__OBJ1,V__OBJ2,V__HEIGHT)
       => s__orientation(V__OBJ1,V__OBJ2,s__Above) ) ) ).

fof(kb_SUMO_5394,axiom,
    ! [V__OBJ1,V__OBJ2,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__altitude(V__OBJ1,V__OBJ2,V__HEIGHT)
       => ? [V__TOP] :
            ( s__instance(V__TOP,s__SelfConnectedObject)
            & s__top(V__TOP,V__OBJ1)
            & s__distance(V__TOP,V__OBJ2,V__HEIGHT) ) ) ) ).

fof(kb_SUMO_5395,axiom,
    s__subrelation(s__depth__m,s__distance__m) ).

fof(kb_SUMO_5396,axiom,
    s__instance(s__depth__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5397,axiom,
    s__instance(s__SingleValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_5398,axiom,
    s__documentation(s__depth__m,s__EnglishLanguage,'A &%TernaryPredicate that is used to state the &%distance between the &%top of an &%Object and another point that is above the &%top of the &%Object (often this other point will be sea level). Note that this &%Predicate can be used to specify, for example, the depth of marine life or submarines, for example.') ).

fof(kb_SUMO_5399,axiom,
    ! [V__DEPTH,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__DEPTH,s__LengthMeasure) )
     => ( s__depth(V__OBJ1,V__OBJ2,V__DEPTH)
       => s__orientation(V__OBJ1,V__OBJ2,s__Below) ) ) ).

fof(kb_SUMO_5400,axiom,
    ! [V__DEPTH,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__DEPTH,s__LengthMeasure) )
     => ( s__depth(V__OBJ1,V__OBJ2,V__DEPTH)
       => ? [V__BOTTOM] :
            ( s__instance(V__BOTTOM,s__SelfConnectedObject)
            & s__bottom(V__BOTTOM,V__OBJ1)
            & s__distance(V__BOTTOM,V__OBJ2,V__DEPTH) ) ) ) ).

fof(kb_SUMO_5401,axiom,
    s__instance(s__larger__m,s__BinaryPredicate) ).

fof(kb_SUMO_5402,axiom,
    s__instance(s__larger__m,s__SpatialRelation) ).

fof(kb_SUMO_5403,axiom,
    s__instance(s__larger__m,s__TransitiveRelation) ).

fof(kb_SUMO_5404,axiom,
    s__instance(s__larger__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5405,axiom,
    s__domain(s__larger__m,"1",s__Object) ).

fof(kb_SUMO_5406,axiom,
    s__domain(s__larger__m,"2",s__Object) ).

fof(kb_SUMO_5407,axiom,
    s__documentation(s__larger__m,s__EnglishLanguage,'(&%larger ?OBJ1 ?OBJ2) means that ?OBJ1 is larger, with respect to all &%LengthMeasures, than ?OBJ2.') ).

fof(kb_SUMO_5408,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__larger(V__OBJ1,V__OBJ2)
    <=> ! [V__QUANT1,V__QUANT2,V__UNIT] :
          ( ( s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__QUANT2,s__RealNumber)
            & s__instance(V__QUANT1,s__RealNumber)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( ( s__measure(V__OBJ1,s__MeasureFn(V__QUANT1,V__UNIT))
              & s__measure(V__OBJ2,s__MeasureFn(V__QUANT2,V__UNIT))
              & s__instance(V__UNIT,s__UnitOfLength) )
           => greater(V__QUANT1,V__QUANT2) ) ) ) ).

fof(kb_SUMO_5409,axiom,
    s__instance(s__smaller__m,s__BinaryPredicate) ).

fof(kb_SUMO_5410,axiom,
    s__instance(s__smaller__m,s__SpatialRelation) ).

fof(kb_SUMO_5411,axiom,
    s__instance(s__smaller__m,s__TransitiveRelation) ).

fof(kb_SUMO_5412,axiom,
    s__instance(s__smaller__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5413,axiom,
    s__domain(s__smaller__m,"1",s__Object) ).

fof(kb_SUMO_5414,axiom,
    s__domain(s__smaller__m,"2",s__Object) ).

fof(kb_SUMO_5415,axiom,
    s__inverse(s__smaller__m,s__larger__m) ).

fof(kb_SUMO_5416,axiom,
    s__documentation(s__smaller__m,s__EnglishLanguage,'(&%smaller ?OBJ1 ?OBJ2) means that ?OBJ1 is smaller, with respect to all &%LengthMeasures, than ?OBJ2.') ).

fof(kb_SUMO_5417,axiom,
    s__instance(s__monetaryValue__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5418,axiom,
    s__subrelation(s__monetaryValue__m,s__measure__m) ).

fof(kb_SUMO_5419,axiom,
    s__domain(s__monetaryValue__m,"1",s__Physical) ).

fof(kb_SUMO_5420,axiom,
    s__domain(s__monetaryValue__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_5421,axiom,
    s__documentation(s__monetaryValue__m,s__EnglishLanguage,'A &%BinaryPredicate that associates an &%Object or &%Process with its value expressed as an instance of &%CurrencyMeasure.') ).

fof(kb_SUMO_5422,axiom,
    s__instance(s__WealthFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5423,axiom,
    s__domain(s__WealthFn__m,"1",s__Agent) ).

fof(kb_SUMO_5424,axiom,
    s__range(s__WealthFn__m,s__CurrencyMeasure) ).

fof(kb_SUMO_5425,axiom,
    s__documentation(s__WealthFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Agent to a &%CurrencyMeasure specifying the value of the property owned by the &%Agent. Note that this &%Function is generally used in conjunction with the &%Function &%PropertyFn, e.g. (&%WealthFn (&%PropertyFn BillGates)) would return the monetary value of the sum of Bill Gates holdings.') ).

fof(kb_SUMO_5426,axiom,
    ! [V__AMOUNT,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Agent)
        & s__instance(V__AMOUNT,s__CurrencyMeasure) )
     => ( s__WealthFn(V__PERSON) = V__AMOUNT
      <=> s__monetaryValue(s__PropertyFn(V__PERSON),V__AMOUNT) ) ) ).

fof(kb_SUMO_5427,axiom,
    s__instance(s__barometricPressure__m,s__BinaryPredicate) ).

fof(kb_SUMO_5428,axiom,
    s__instance(s__barometricPressure__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5429,axiom,
    s__subrelation(s__barometricPressure__m,s__measure__m) ).

fof(kb_SUMO_5430,axiom,
    s__domain(s__barometricPressure__m,"1",s__Object) ).

fof(kb_SUMO_5431,axiom,
    s__domain(s__barometricPressure__m,"2",s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_5432,axiom,
    s__documentation(s__barometricPressure__m,s__EnglishLanguage,'(&%barometricPressure ?AREA ?PRESSURE) means that the atmospheric pressure measured at ?AREA is ?PRESSURE. Barometric pressure is typically expressed in units of &%InchMercury or &%MmMercury. For example, standard sea level pressure is 29.92 inches (760 mm) of mercury: (&%barometricPressure &%SeaLevel (&%MeasureFn 29.92 &%InchMercury)).') ).

fof(kb_SUMO_5433,axiom,
    s__subclass(s__UnitOfAtmosphericPressure,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_5434,axiom,
    s__instance(s__UnitOfAtmosphericPressure__t,s__SetOrClass) ).

fof(kb_SUMO_5435,axiom,
    s__documentation(s__UnitOfAtmosphericPressure,s__EnglishLanguage,'&%UnitOfAtmosphericPressure includes those instances of &%UnitOfMeasure used to measure atmospheric pressure (&%barometricPressure), e.g., &%InchMercury.') ).

fof(kb_SUMO_5436,axiom,
    s__instance(s__InchMercury,s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_5437,axiom,
    s__documentation(s__InchMercury,s__EnglishLanguage,'&%InchMercury is a &%UnitOfMeasure for &%barometricPressure. It is used to express the number of inches of mercury supported in a mercurial barometer by the surrounding air pressure.') ).

fof(kb_SUMO_5438,axiom,
    s__instance(s__MmMercury,s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_5439,axiom,
    s__documentation(s__MmMercury,s__EnglishLanguage,'&%MmMercury is a &%UnitOfMeasure for &%barometricPressure. It is used to express the number of millimeters of mercury supported in a mercurial barometer by the surrounding air pressure.') ).

fof(kb_SUMO_5440,axiom,
    s__instance(s__PositiveInfinity,s__TimePoint) ).

fof(kb_SUMO_5441,axiom,
    s__instance(s__TimePoint__t,s__SetOrClass) ).

fof(kb_SUMO_5442,axiom,
    s__documentation(s__PositiveInfinity,s__EnglishLanguage,'The &%TimePoint that is after all other &%TimePoints.') ).

fof(kb_SUMO_5443,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__PositiveInfinity )
     => s__before(V__POINT,s__PositiveInfinity) ) ).

fof(kb_SUMO_5444,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__PositiveInfinity )
     => ? [V__OTHERPOINT] :
          ( s__instance(V__OTHERPOINT,s__TimePoint)
          & s__temporallyBetween(V__POINT,V__OTHERPOINT,s__PositiveInfinity) ) ) ).

fof(kb_SUMO_5445,axiom,
    s__instance(s__NegativeInfinity,s__TimePoint) ).

fof(kb_SUMO_5446,axiom,
    s__documentation(s__NegativeInfinity,s__EnglishLanguage,'The &%TimePoint that is before all other &%TimePoints.') ).

fof(kb_SUMO_5447,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__NegativeInfinity )
     => s__before(s__NegativeInfinity,V__POINT) ) ).

fof(kb_SUMO_5448,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__NegativeInfinity )
     => ? [V__OTHERPOINT] :
          ( s__instance(V__OTHERPOINT,s__TimePoint)
          & s__temporallyBetween(s__NegativeInfinity,V__OTHERPOINT,V__POINT) ) ) ).

fof(kb_SUMO_5449,axiom,
    s__instance(s__duration__m,s__BinaryPredicate) ).

fof(kb_SUMO_5450,axiom,
    s__instance(s__duration__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5451,axiom,
    s__instance(s__duration__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5452,axiom,
    s__domain(s__duration__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5453,axiom,
    s__domain(s__duration__m,"2",s__TimeDuration) ).

fof(kb_SUMO_5454,axiom,
    s__documentation(s__duration__m,s__EnglishLanguage,'(&%duration ?POS ?TIME) means that the duration of the &%TimePosition ?POS is ?TIME. Note that this &%Predicate can be used in conjunction with the &%Function &%WhenFn to specify the duration of any instance of &%Physical.') ).

fof(kb_SUMO_5455,axiom,
    s__instance(s__frequency__m,s__BinaryPredicate) ).

fof(kb_SUMO_5456,axiom,
    s__instance(s__frequency__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5457,axiom,
    s__domainSubclass(s__frequency__m,"1",s__Process) ).

fof(kb_SUMO_5458,axiom,
    s__domain(s__frequency__m,"2",s__TimeDuration) ).

fof(kb_SUMO_5459,axiom,
    s__documentation(s__frequency__m,s__EnglishLanguage,'(&%frequency ?PROC ?TIME) means that the &%Process type of ?PROC recurs after every interval of ?TIME.') ).

fof(kb_SUMO_5460,axiom,
    ! [V__PROC,V__TIME1] :
      ( s__frequency(V__PROC,V__TIME1)
     => ! [V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeDuration)
            & s__subclass(V__PROC,s__Process)
            & s__instance(V__PROC,s__SetOrClass) )
         => ( s__duration(V__TIME2,V__TIME1)
           => ? [V__POSITION] :
                ( s__temporalPart(V__POSITION,V__TIME2)
                & s__holdsDuring(V__POSITION,'(? [V__INST] : (s__instance(V__POSITION,s__TimePosition) & s__instance(V__INST,V__PROC)))') ) ) ) ) ).

fof(kb_SUMO_5461,axiom,
    s__instance(s__temporalPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_5462,axiom,
    s__instance(s__temporalPart__m,s__TemporalRelation) ).

fof(kb_SUMO_5463,axiom,
    s__instance(s__temporalPart__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_5464,axiom,
    s__instance(s__PartialOrderingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_5465,axiom,
    s__domain(s__temporalPart__m,"1",s__TimePosition) ).

fof(kb_SUMO_5466,axiom,
    s__domain(s__temporalPart__m,"2",s__TimePosition) ).

fof(kb_SUMO_5467,axiom,
    s__documentation(s__temporalPart__m,s__EnglishLanguage,'The temporal analogue of the spatial &%part predicate. (&%temporalPart ?POS1 ?POS2) means that &%TimePosition ?POS1 is part of &%TimePosition ?POS2. Note that since &%temporalPart is a &%ReflexiveRelation every &%TimePostion is a &%temporalPart of itself.') ).

fof(kb_SUMO_5468,axiom,
    ! [V__POINT] :
      ( s__instance(V__POINT,s__TimePosition)
     => ( s__instance(V__POINT,s__TimePoint)
       => ? [V__INTERVAL] :
            ( s__instance(V__INTERVAL,s__TimePosition)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5469,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => ? [V__POINT] :
            ( s__instance(V__POINT,s__TimePosition)
            & s__instance(V__POINT,s__TimePoint)
            & s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5470,axiom,
    ! [V__SITUATION,V__TIME2,V__TIME1] :
      ( ( s__instance(V__TIME1,s__TimePosition)
        & s__instance(V__TIME2,s__TimePosition)
        & s__instance(V__SITUATION,s__Formula) )
     => ( ( s__holdsDuring(V__TIME1,V__SITUATION)
          & s__temporalPart(V__TIME2,V__TIME1) )
       => s__holdsDuring(V__TIME2,V__SITUATION) ) ) ).

fof(kb_SUMO_5471,axiom,
    ! [V__THING,V__POS] :
      ( ( s__instance(V__POS,s__TimePosition)
        & s__instance(V__THING,s__Physical) )
     => ( s__temporalPart(V__POS,s__WhenFn(V__THING))
      <=> s__time(V__THING,V__POS) ) ) ).

fof(kb_SUMO_5472,axiom,
    s__instance(s__BeginFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5473,axiom,
    s__instance(s__BeginFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5474,axiom,
    s__instance(s__BeginFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5475,axiom,
    s__domain(s__BeginFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5476,axiom,
    s__range(s__BeginFn__m,s__TimePoint) ).

fof(kb_SUMO_5477,axiom,
    s__documentation(s__BeginFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimeInterval to the &%TimePoint at which the interval begins.') ).

fof(kb_SUMO_5478,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__origin(V__PROCESS,V__OBJ)
       => s__eventLocated(s__WhereFn(V__PROCESS,s__BeginFn(s__WhenFn(V__PROCESS))),s__WhereFn(V__OBJ,s__BeginFn(s__WhenFn(V__OBJ)))) ) ) ).

fof(kb_SUMO_5479,axiom,
    ! [V__POINT,V__INTERVAL] :
      ( s__BeginFn(V__INTERVAL) = V__POINT
     => ! [V__OTHERPOINT] :
          ( ( s__instance(V__OTHERPOINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__instance(V__POINT,s__TimePoint) )
         => ( ( s__temporalPart(V__OTHERPOINT,V__INTERVAL)
              & V__OTHERPOINT != V__POINT )
           => s__before(V__POINT,V__OTHERPOINT) ) ) ) ).

fof(kb_SUMO_5480,axiom,
    s__instance(s__EndFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5481,axiom,
    s__instance(s__EndFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5482,axiom,
    s__instance(s__EndFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5483,axiom,
    s__domain(s__EndFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5484,axiom,
    s__range(s__EndFn__m,s__TimePoint) ).

fof(kb_SUMO_5485,axiom,
    s__documentation(s__EndFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimeInterval to the &%TimePoint at which the interval ends.') ).

fof(kb_SUMO_5486,axiom,
    ! [V__POINT,V__INTERVAL] :
      ( s__EndFn(V__INTERVAL) = V__POINT
     => ! [V__OTHERPOINT] :
          ( ( s__instance(V__OTHERPOINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__instance(V__POINT,s__TimePoint) )
         => ( ( s__temporalPart(V__OTHERPOINT,V__INTERVAL)
              & V__OTHERPOINT != V__POINT )
           => s__before(V__OTHERPOINT,V__POINT) ) ) ) ).

%FOL fof(kb_SUMO_5487,axiom,(( (! [V__QUANT2,V__OBJ,V__QUANT1,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__QUANT1,s__PhysicalQuantity) & s__instance(V__OBJ,s__Object) & s__instance(V__QUANT2,s__PhysicalQuantity)) => ((s__resource(V__PROC,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'s__measure(V__OBJ,V__QUANT1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'s__measure(V__OBJ,V__QUANT2)')) => greater(V__QUANT1,V__QUANT2)))) ))).

fof(kb_SUMO_5488,axiom,
    s__subrelation(s__starts__m,s__temporalPart__m) ).

fof(kb_SUMO_5489,axiom,
    s__instance(s__starts__m,s__TemporalRelation) ).

fof(kb_SUMO_5490,axiom,
    s__instance(s__starts__m,s__TransitiveRelation) ).

fof(kb_SUMO_5491,axiom,
    s__instance(s__starts__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5492,axiom,
    s__domain(s__starts__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5493,axiom,
    s__domain(s__starts__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5494,axiom,
    s__documentation(s__starts__m,s__EnglishLanguage,'(&%starts ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 and ?INTERVAL2 are both &%TimeIntervals that have the same initial &%TimePoint and that ?INTERVAL1 ends before ?INTERVAL2.') ).

fof(kb_SUMO_5495,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__starts(V__INTERVAL1,V__INTERVAL2)
      <=> ( s__BeginFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2)
          & s__before(s__EndFn(V__INTERVAL1),s__EndFn(V__INTERVAL2)) ) ) ) ).

fof(kb_SUMO_5496,axiom,
    s__subrelation(s__finishes__m,s__temporalPart__m) ).

fof(kb_SUMO_5497,axiom,
    s__instance(s__finishes__m,s__TemporalRelation) ).

fof(kb_SUMO_5498,axiom,
    s__instance(s__finishes__m,s__TransitiveRelation) ).

fof(kb_SUMO_5499,axiom,
    s__instance(s__finishes__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5500,axiom,
    s__domain(s__finishes__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5501,axiom,
    s__domain(s__finishes__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5502,axiom,
    s__documentation(s__finishes__m,s__EnglishLanguage,'(&%finishes ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 and ?INTERVAL2 are both &%TimeIntervals that have the same ending &%TimePoint and that ?INTERVAL2 begins before ?INTERVAL1.') ).

fof(kb_SUMO_5503,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__finishes(V__INTERVAL1,V__INTERVAL2)
      <=> ( s__before(s__BeginFn(V__INTERVAL2),s__BeginFn(V__INTERVAL1))
          & s__EndFn(V__INTERVAL2) = s__EndFn(V__INTERVAL1) ) ) ) ).

fof(kb_SUMO_5504,axiom,
    s__instance(s__before__m,s__TemporalRelation) ).

fof(kb_SUMO_5505,axiom,
    s__instance(s__before__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5506,axiom,
    s__instance(s__before__m,s__TransitiveRelation) ).

fof(kb_SUMO_5507,axiom,
    s__subrelation(s__before__m,s__beforeOrEqual__m) ).

fof(kb_SUMO_5508,axiom,
    s__relatedInternalConcept(s__before__m,s__earlier__m) ).

fof(kb_SUMO_5509,axiom,
    s__domain(s__before__m,"1",s__TimePoint) ).

fof(kb_SUMO_5510,axiom,
    s__domain(s__before__m,"2",s__TimePoint) ).

fof(kb_SUMO_5511,axiom,
    s__documentation(s__before__m,s__EnglishLanguage,'(&%before ?POINT1 ?POINT2) means that ?POINT1 precedes ?POINT2 on the universal timeline.') ).

fof(kb_SUMO_5512,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ? [V__TIME1,V__TIME2] :
          ( s__instance(V__TIME1,s__TimePoint)
          & s__instance(V__TIME2,s__TimePoint)
          & s__before(V__TIME1,V__TIME2)
          & ! [V__TIME] :
              ( ( s__instance(V__TIME,s__TimePoint)
                & s__instance(V__OBJ,s__Physical) )
             => ( ( s__beforeOrEqual(V__TIME1,V__TIME)
                  & s__beforeOrEqual(V__TIME,V__TIME2) )
               => s__time(V__OBJ,V__TIME) ) ) ) ) ).

fof(kb_SUMO_5513,axiom,
    ! [V__OBJ,V__PROC] :
      ( s__result(V__PROC,V__OBJ)
     => ! [V__TIME] :
          ( ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__PROC,s__Process)
            & s__instance(V__OBJ,s__Physical) )
         => ( s__before(V__TIME,s__BeginFn(s__WhenFn(V__PROC)))
           => ~ s__time(V__OBJ,V__TIME) ) ) ) ).

fof(kb_SUMO_5514,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__before(s__BeginFn(V__INTERVAL),s__EndFn(V__INTERVAL)) ) ).

fof(kb_SUMO_5515,axiom,
    s__instance(s__beforeOrEqual__m,s__BinaryPredicate) ).

fof(kb_SUMO_5516,axiom,
    s__instance(s__beforeOrEqual__m,s__TemporalRelation) ).

fof(kb_SUMO_5517,axiom,
    s__instance(s__beforeOrEqual__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_5518,axiom,
    s__domain(s__beforeOrEqual__m,"1",s__TimePoint) ).

fof(kb_SUMO_5519,axiom,
    s__domain(s__beforeOrEqual__m,"2",s__TimePoint) ).

fof(kb_SUMO_5520,axiom,
    s__documentation(s__beforeOrEqual__m,s__EnglishLanguage,'(&%beforeOrEqual ?POINT1 ?POINT2) means that ?POINT1 is identical with ?POINT2 or occurs before it on the universal timeline.') ).

fof(kb_SUMO_5521,axiom,
    ! [V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint) )
     => ( s__beforeOrEqual(V__POINT1,V__POINT2)
       => ( s__before(V__POINT1,V__POINT2)
          | V__POINT1 = V__POINT2 ) ) ) ).

fof(kb_SUMO_5522,axiom,
    s__instance(s__temporallyBetween__m,s__TemporalRelation) ).

fof(kb_SUMO_5523,axiom,
    s__instance(s__temporallyBetween__m,s__TernaryPredicate) ).

fof(kb_SUMO_5524,axiom,
    s__subrelation(s__temporallyBetween__m,s__temporallyBetweenOrEqual__m) ).

fof(kb_SUMO_5525,axiom,
    s__domain(s__temporallyBetween__m,"1",s__TimePoint) ).

fof(kb_SUMO_5526,axiom,
    s__domain(s__temporallyBetween__m,"2",s__TimePoint) ).

fof(kb_SUMO_5527,axiom,
    s__domain(s__temporallyBetween__m,"3",s__TimePoint) ).

fof(kb_SUMO_5528,axiom,
    s__documentation(s__temporallyBetween__m,s__EnglishLanguage,'(&%temporallyBetween ?POINT1 ?POINT2 ?POINT3) means that the &%TimePoint ?POINT2 is between the &%TimePoints ?POINT1 and ?POINT3, i.e. ?POINT1 is before ?POINT2 and ?POINT2 is before ?POINT3.') ).

fof(kb_SUMO_5529,axiom,
    ! [V__POINT3,V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__POINT3,s__TimePoint) )
     => ( s__temporallyBetween(V__POINT1,V__POINT2,V__POINT3)
      <=> ( s__before(V__POINT1,V__POINT2)
          & s__before(V__POINT2,V__POINT3) ) ) ) ).

fof(kb_SUMO_5530,axiom,
    s__instance(s__temporallyBetweenOrEqual__m,s__TemporalRelation) ).

fof(kb_SUMO_5531,axiom,
    s__instance(s__temporallyBetweenOrEqual__m,s__TernaryPredicate) ).

fof(kb_SUMO_5532,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"1",s__TimePoint) ).

fof(kb_SUMO_5533,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"2",s__TimePoint) ).

fof(kb_SUMO_5534,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"3",s__TimePoint) ).

fof(kb_SUMO_5535,axiom,
    s__documentation(s__temporallyBetweenOrEqual__m,s__EnglishLanguage,'(&%temporallyBetweenOrEqual ?POINT1 ?POINT2 ?POINT3) means that the &%TimePoint ?POINT1 is before or equal to the &%TimePoint ?POINT2 and ?POINT2 is before or equal to the &%TimePoint ?POINT3.') ).

fof(kb_SUMO_5536,axiom,
    ! [V__POINT3,V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__POINT3,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__POINT1,V__POINT2,V__POINT3)
      <=> ( s__beforeOrEqual(V__POINT1,V__POINT2)
          & s__beforeOrEqual(V__POINT2,V__POINT3) ) ) ) ).

fof(kb_SUMO_5537,axiom,
    ! [V__TIME,V__PHYS] :
      ( s__instance(V__PHYS,s__Physical)
     => ( ( s__time(V__PHYS,V__TIME)
          & s__instance(V__TIME,s__TimePoint) )
      <=> s__temporallyBetweenOrEqual(s__BeginFn(s__WhenFn(V__PHYS)),V__TIME,s__EndFn(s__WhenFn(V__PHYS))) ) ) ).

fof(kb_SUMO_5538,axiom,
    s__instance(s__overlapsTemporally__m,s__BinaryPredicate) ).

fof(kb_SUMO_5539,axiom,
    s__instance(s__overlapsTemporally__m,s__TemporalRelation) ).

fof(kb_SUMO_5540,axiom,
    s__instance(s__overlapsTemporally__m,s__ReflexiveRelation) ).

fof(kb_SUMO_5541,axiom,
    s__instance(s__overlapsTemporally__m,s__SymmetricRelation) ).

fof(kb_SUMO_5542,axiom,
    s__domain(s__overlapsTemporally__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5543,axiom,
    s__domain(s__overlapsTemporally__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5544,axiom,
    s__documentation(s__overlapsTemporally__m,s__EnglishLanguage,'(&%overlapsTemporally ?INTERVAL1 ?INTERVAL2) means that the &%TimeIntervals ?INTERVAL1 and ?INTERVAL2 have a &%TimeInterval as a common part.') ).

fof(kb_SUMO_5545,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__INTERVAL1,V__INTERVAL2)
      <=> ? [V__INTERVAL3] :
            ( s__instance(V__INTERVAL3,s__TimePosition)
            & s__instance(V__INTERVAL3,s__TimeInterval)
            & s__temporalPart(V__INTERVAL3,V__INTERVAL1)
            & s__temporalPart(V__INTERVAL3,V__INTERVAL2) ) ) ) ).

fof(kb_SUMO_5546,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__larger(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5547,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__Hole) )
     => ( s__hole(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5548,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Physical) )
     => ( s__partlyLocated(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5549,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__connected(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5550,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__smaller(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5551,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__traverses(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_5552,axiom,
    s__subrelation(s__during__m,s__temporalPart__m) ).

fof(kb_SUMO_5553,axiom,
    s__instance(s__during__m,s__TransitiveRelation) ).

fof(kb_SUMO_5554,axiom,
    s__instance(s__during__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5555,axiom,
    s__subrelation(s__during__m,s__overlapsTemporally__m) ).

fof(kb_SUMO_5556,axiom,
    s__domain(s__during__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5557,axiom,
    s__domain(s__during__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5558,axiom,
    s__documentation(s__during__m,s__EnglishLanguage,'(&%during ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 starts after and ends before ?INTERVAL2.') ).

fof(kb_SUMO_5559,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__during(V__INTERVAL1,V__INTERVAL2)
       => ( s__before(s__EndFn(V__INTERVAL1),s__EndFn(V__INTERVAL2))
          & s__before(s__BeginFn(V__INTERVAL2),s__BeginFn(V__INTERVAL1)) ) ) ) ).

fof(kb_SUMO_5560,axiom,
    s__instance(s__meetsTemporally__m,s__BinaryPredicate) ).

fof(kb_SUMO_5561,axiom,
    s__instance(s__meetsTemporally__m,s__TemporalRelation) ).

fof(kb_SUMO_5562,axiom,
    s__instance(s__meetsTemporally__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5563,axiom,
    s__instance(s__meetsTemporally__m,s__IntransitiveRelation) ).

fof(kb_SUMO_5564,axiom,
    s__domain(s__meetsTemporally__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5565,axiom,
    s__domain(s__meetsTemporally__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5566,axiom,
    s__documentation(s__meetsTemporally__m,s__EnglishLanguage,'(&%meetsTemporally ?INTERVAL1 ?INTERVAL2) means that the terminal point of the &%TimeInterval ?INTERVAL1 is the initial point of the &%TimeInterval ?INTERVAL2.') ).

fof(kb_SUMO_5567,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__meetsTemporally(V__INTERVAL1,V__INTERVAL2)
      <=> s__EndFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2) ) ) ).

fof(kb_SUMO_5568,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( ( s__BeginFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2)
          & s__EndFn(V__INTERVAL1) = s__EndFn(V__INTERVAL2) )
       => V__INTERVAL1 = V__INTERVAL2 ) ) ).

fof(kb_SUMO_5569,axiom,
    s__instance(s__earlier__m,s__BinaryPredicate) ).

fof(kb_SUMO_5570,axiom,
    s__instance(s__earlier__m,s__TemporalRelation) ).

fof(kb_SUMO_5571,axiom,
    s__instance(s__TemporalRelation__t,s__SetOrClass) ).

fof(kb_SUMO_5572,axiom,
    s__instance(s__earlier__m,s__TransitiveRelation) ).

fof(kb_SUMO_5573,axiom,
    s__instance(s__earlier__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5574,axiom,
    s__domain(s__earlier__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5575,axiom,
    s__domain(s__earlier__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5576,axiom,
    s__documentation(s__earlier__m,s__EnglishLanguage,'(&%earlier ?INTERVAL1 ?INTERVAL2) means that the &%TimeInterval ?INTERVAL1 ends before the &%TimeInterval ?INTERVAL2 begins.') ).

fof(kb_SUMO_5577,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__earlier(V__INTERVAL1,V__INTERVAL2)
      <=> s__before(s__EndFn(V__INTERVAL1),s__BeginFn(V__INTERVAL2)) ) ) ).

fof(kb_SUMO_5578,axiom,
    s__instance(s__cooccur__m,s__BinaryPredicate) ).

fof(kb_SUMO_5579,axiom,
    s__instance(s__cooccur__m,s__TemporalRelation) ).

fof(kb_SUMO_5580,axiom,
    s__instance(s__cooccur__m,s__EquivalenceRelation) ).

fof(kb_SUMO_5581,axiom,
    s__domain(s__cooccur__m,"1",s__Physical) ).

fof(kb_SUMO_5582,axiom,
    s__domain(s__cooccur__m,"2",s__Physical) ).

fof(kb_SUMO_5583,axiom,
    s__documentation(s__cooccur__m,s__EnglishLanguage,'(&%cooccur ?THING1 ?THING2) means that the &%Object or &%Process ?THING1 occurs at the same time as, together with, or jointly with the &%Object or &%Process ?THING2. This covers the following temporal relations: is co-incident with, is concurrent with, is contemporaneous with, and is concomitant with.') ).

fof(kb_SUMO_5584,axiom,
    ! [V__PHYS2,V__PHYS1] :
      ( ( s__instance(V__PHYS1,s__Physical)
        & s__instance(V__PHYS2,s__Physical) )
     => ( s__cooccur(V__PHYS1,V__PHYS2)
      <=> s__WhenFn(V__PHYS1) = s__WhenFn(V__PHYS2) ) ) ).

fof(kb_SUMO_5585,axiom,
    s__instance(s__TimeIntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5586,axiom,
    s__instance(s__TimeIntervalFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5587,axiom,
    s__domain(s__TimeIntervalFn__m,"1",s__TimePoint) ).

fof(kb_SUMO_5588,axiom,
    s__domain(s__TimeIntervalFn__m,"2",s__TimePoint) ).

fof(kb_SUMO_5589,axiom,
    s__range(s__TimeIntervalFn__m,s__TimeInterval) ).

fof(kb_SUMO_5590,axiom,
    s__documentation(s__TimeIntervalFn__m,s__EnglishLanguage,'A &%BinaryFunction that takes two &%TimePoints as arguments and returns the &%TimeInterval defined by these two &%TimePoints. Note that the first &%TimePoint must occur earlier than the second &%TimePoint.') ).

fof(kb_SUMO_5591,axiom,
    ! [V__POINT2,V__POINT1,V__INTERVAL] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__INTERVAL,s__TimeInterval)
        & s__TimeIntervalFn(V__POINT1,V__POINT2) = V__INTERVAL )
     => ( s__BeginFn(V__INTERVAL) = V__POINT1
        & s__EndFn(V__INTERVAL) = V__POINT2 ) ) ).

fof(kb_SUMO_5592,axiom,
    ! [V__POINT2,V__POINT1,V__INTERVAL] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__INTERVAL,s__TimeInterval)
        & s__TimeIntervalFn(V__POINT1,V__POINT2) = V__INTERVAL )
     => ! [V__POINT] :
          ( ( s__instance(V__POINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimePosition)
            & s__instance(V__POINT1,s__TimePoint)
            & s__instance(V__POINT2,s__TimePoint) )
         => ( s__temporallyBetweenOrEqual(V__POINT1,V__POINT,V__POINT2)
          <=> s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5593,axiom,
    s__instance(s__RecurrentTimeIntervalFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5594,axiom,
    s__instance(s__RecurrentTimeIntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5595,axiom,
    s__domainSubclass(s__RecurrentTimeIntervalFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5596,axiom,
    s__domainSubclass(s__RecurrentTimeIntervalFn__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5597,axiom,
    s__rangeSubclass(s__RecurrentTimeIntervalFn__m,s__TimeInterval) ).

fof(kb_SUMO_5598,axiom,
    s__documentation(s__RecurrentTimeIntervalFn__m,s__EnglishLanguage,'A function that is useful for generating recurring time intervals. For example, (&%RecurrentTimeIntervalFn (&%HourFn 6 &%Day) (&%HourFn 12 &%Day)) returns the &%Class of &%TimeIntervals beginning at 6 in the morning and ending at 12 noon. For another example, (&%RecurrentTimeInterval &%Saturday &%Sunday) returns the &%Class of all weekends. For still another example, (&%RecurrentTimeInterval &%June &%August) returns the &%Class containing the academic summer period.') ).

fof(kb_SUMO_5599,axiom,
    ! [V__TIMECLASS1,V__TIMECLASS2,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__TIMECLASS2,s__TimeInterval)
        & s__instance(V__TIMECLASS2,s__SetOrClass)
        & s__subclass(V__TIMECLASS1,s__TimeInterval)
        & s__instance(V__TIMECLASS1,s__SetOrClass) )
     => ( s__instance(V__INTERVAL,s__RecurrentTimeIntervalFn(V__TIMECLASS1,V__TIMECLASS2))
       => ? [V__TIME1,V__TIME2] :
            ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__TIME1,V__TIMECLASS1)
            & s__instance(V__TIME2,V__TIMECLASS2)
            & s__starts(V__TIME1,V__INTERVAL)
            & s__finishes(V__TIME2,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5600,axiom,
    s__instance(s__WhenFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5601,axiom,
    s__instance(s__WhenFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5602,axiom,
    s__instance(s__WhenFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5603,axiom,
    s__domain(s__WhenFn__m,"1",s__Physical) ).

fof(kb_SUMO_5604,axiom,
    s__range(s__WhenFn__m,s__TimeInterval) ).

fof(kb_SUMO_5605,axiom,
    s__documentation(s__WhenFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Object or &%Process to the exact &%TimeInterval during which it exists. Note that, for every &%TimePoint ?TIME outside of the &%TimeInterval (WhenFn ?THING), (time ?THING ?TIME) does not hold.') ).

fof(kb_SUMO_5606,axiom,
    s__instance(s__PastFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5607,axiom,
    s__instance(s__PastFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5608,axiom,
    s__instance(s__PastFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5609,axiom,
    s__domain(s__PastFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_5610,axiom,
    s__range(s__PastFn__m,s__TimeInterval) ).

fof(kb_SUMO_5611,axiom,
    s__documentation(s__PastFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to the &%TimeInterval that meets it and that begins at &%NegativeInfinity.') ).

fof(kb_SUMO_5612,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__meetsTemporally(s__PastFn(V__INTERVAL),V__INTERVAL) ) ).

fof(kb_SUMO_5613,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__PastFn(V__INTERVAL) = s__TimeIntervalFn(s__NegativeInfinity,s__BeginFn(V__INTERVAL)) ) ).

fof(kb_SUMO_5614,axiom,
    s__instance(s__ImmediatePastFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5615,axiom,
    s__instance(s__ImmediatePastFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5616,axiom,
    s__instance(s__ImmediatePastFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5617,axiom,
    s__domain(s__ImmediatePastFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_5618,axiom,
    s__range(s__ImmediatePastFn__m,s__TimeInterval) ).

fof(kb_SUMO_5619,axiom,
    s__documentation(s__ImmediatePastFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to a short, indeterminate &%TimeInterval that immediately precedes the &%TimePosition.') ).

fof(kb_SUMO_5620,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => s__finishes(s__ImmediatePastFn(V__INTERVAL),s__PastFn(V__INTERVAL)) ) ) ).

fof(kb_SUMO_5621,axiom,
    s__instance(s__FutureFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5622,axiom,
    s__instance(s__FutureFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5623,axiom,
    s__instance(s__FutureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5624,axiom,
    s__domain(s__FutureFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_5625,axiom,
    s__range(s__FutureFn__m,s__TimeInterval) ).

fof(kb_SUMO_5626,axiom,
    s__documentation(s__FutureFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to the &%TimeInterval which it meets and which ends at &%PositiveInfinity.') ).

fof(kb_SUMO_5627,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__meetsTemporally(V__INTERVAL,s__FutureFn(V__INTERVAL)) ) ).

fof(kb_SUMO_5628,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__FutureFn(V__INTERVAL) = s__TimeIntervalFn(s__EndFn(V__INTERVAL),s__PositiveInfinity) ) ).

fof(kb_SUMO_5629,axiom,
    s__instance(s__ImmediateFutureFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5630,axiom,
    s__instance(s__ImmediateFutureFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5631,axiom,
    s__instance(s__ImmediateFutureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5632,axiom,
    s__domain(s__ImmediateFutureFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_5633,axiom,
    s__range(s__ImmediateFutureFn__m,s__TimeInterval) ).

fof(kb_SUMO_5634,axiom,
    s__documentation(s__ImmediateFutureFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to a short, indeterminate &%TimeInterval that immediately follows the &%TimePosition.') ).

fof(kb_SUMO_5635,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => s__starts(s__ImmediateFutureFn(V__INTERVAL),s__FutureFn(V__INTERVAL)) ) ) ).

fof(kb_SUMO_5636,axiom,
    s__instance(s__date__m,s__BinaryPredicate) ).

fof(kb_SUMO_5637,axiom,
    s__instance(s__date__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5638,axiom,
    s__instance(s__date__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5639,axiom,
    s__domain(s__date__m,"1",s__Physical) ).

fof(kb_SUMO_5640,axiom,
    s__domain(s__date__m,"2",s__Day) ).

fof(kb_SUMO_5641,axiom,
    s__subrelation(s__date__m,s__time__m) ).

fof(kb_SUMO_5642,axiom,
    s__documentation(s__date__m,s__EnglishLanguage,'A &%BinaryPredicate that specifies a &%TimePosition in absolute calendar time, at the resolution of one day, for a particular &%Object or &%Process.') ).

fof(kb_SUMO_5643,axiom,
    s__instance(s__YearFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5644,axiom,
    s__instance(s__YearFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5645,axiom,
    s__domain(s__YearFn__m,"1",s__Integer) ).

fof(kb_SUMO_5646,axiom,
    s__rangeSubclass(s__YearFn__m,s__Year) ).

fof(kb_SUMO_5647,axiom,
    s__documentation(s__YearFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a number to the corresponding calendar &%Year. For example, (&%YearFn 1912) returns the &%Class containing just one instance, the year of 1912. As might be expected, positive integers return years in the Common Era, while negative integers return years in B.C.E. Note that this function returns a &%Class as a value. The reason for this is that the related functions, viz. &%MonthFn, &%DayFn, &%HourFn, &%MinuteFn, and &%SecondFn, are used to generate both specific &%TimeIntervals and recurrent intervals, and the only way to do this is to make the domains and ranges of these functions classes rather than individuals.') ).

fof(kb_SUMO_5648,axiom,
    s__instance(s__MonthFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5649,axiom,
    s__instance(s__MonthFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5650,axiom,
    s__domainSubclass(s__MonthFn__m,"1",s__Month) ).

fof(kb_SUMO_5651,axiom,
    s__domainSubclass(s__MonthFn__m,"2",s__Year) ).

fof(kb_SUMO_5652,axiom,
    s__rangeSubclass(s__MonthFn__m,s__Month) ).

fof(kb_SUMO_5653,axiom,
    s__documentation(s__MonthFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a subclass of &%Month and a subclass of &%Year to the class containing the &%Months corresponding to thos &%Years. For example (&%MonthFn &%January (&%YearFn 1912)) is the class containing the eighth &%Month, i.e. August, of the &%Year 1912. For another example, (&%MonthFn &%August &%Year) is equal to &%August, the class of all months of August. Note that this function returns a &%Class as a value. The reason for this is that the related functions, viz. DayFn, HourFn, MinuteFn, and SecondFn, are used to generate both specific &%TimeIntervals and recurrent intervals, and the only way to do this is to make the domains and ranges of these functions classes rather than individuals.') ).

fof(kb_SUMO_5654,axiom,
    s__instance(s__DayFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5655,axiom,
    s__instance(s__DayFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5656,axiom,
    s__domain(s__DayFn__m,"1",s__PositiveInteger) ).

fof(kb_SUMO_5657,axiom,
    s__domainSubclass(s__DayFn__m,"2",s__Month) ).

fof(kb_SUMO_5658,axiom,
    s__rangeSubclass(s__DayFn__m,s__Day) ).

fof(kb_SUMO_5659,axiom,
    s__documentation(s__DayFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Months to the &%Days within each &%Month corresponding to that &%PositiveRealNumber. For example, (&%DayFn 16 &%August) is the &%Class of all sixteenth days of August. For another example, (&%DayFn 9 &%Month) would return the class of all ninth days of any month. For still another example, (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912))) denotes the 18th day of August 1912.') ).

fof(kb_SUMO_5660,axiom,
    ! [V__DAY,V__NUMBER,V__MONTH] :
      ( ( s__subclass(V__MONTH,s__Month)
        & s__instance(V__MONTH,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__instance(V__DAY,s__DayFn(V__NUMBER,V__MONTH))
       => lesseq(V__NUMBER,"31") ) ) ).

fof(kb_SUMO_5661,axiom,
    ! [V__NUMBER2,V__MONTH,V__DAY1,V__DAY2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveInteger)
        & s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__subclass(V__MONTH,s__Month)
        & s__instance(V__MONTH,s__SetOrClass)
        & s__instance(V__NUMBER2,s__PositiveInteger) )
     => ( ( s__instance(V__DAY1,s__DayFn(V__NUMBER1,V__MONTH))
          & s__instance(V__DAY2,s__DayFn(V__NUMBER2,V__MONTH))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5662,axiom,
    s__instance(s__HourFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5663,axiom,
    s__instance(s__HourFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5664,axiom,
    s__domain(s__HourFn__m,"1",s__NonnegativeInteger) ).

fof(kb_SUMO_5665,axiom,
    s__domainSubclass(s__HourFn__m,"2",s__Day) ).

fof(kb_SUMO_5666,axiom,
    s__rangeSubclass(s__HourFn__m,s__Hour) ).

fof(kb_SUMO_5667,axiom,
    s__documentation(s__HourFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Days to the &%Hours within each &%Day corresponding to that &%NonnegativeInteger. For example, (&%HourFn 12 &%Thursday) is the &%Class of all instances of noon Thursday. For another example, (&%HourFn 0 &%Day) would return the class of all instances of midnight. For still another example, (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))) denotes 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_5668,axiom,
    ! [V__DAY,V__NUMBER,V__HOUR] :
      ( ( s__instance(V__NUMBER,s__NonnegativeInteger)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( s__instance(V__HOUR,s__HourFn(V__NUMBER,V__DAY))
       => less(V__NUMBER,"24") ) ) ).

fof(kb_SUMO_5669,axiom,
    ! [V__DAY,V__NUMBER2,V__HOUR2,V__NUMBER1,V__HOUR1] :
      ( ( s__instance(V__HOUR1,s__TimeInterval)
        & s__instance(V__NUMBER1,s__NonnegativeInteger)
        & s__instance(V__HOUR2,s__TimeInterval)
        & s__instance(V__NUMBER2,s__NonnegativeInteger)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( ( s__instance(V__HOUR1,s__HourFn(V__NUMBER1,V__DAY))
          & s__instance(V__HOUR2,s__HourFn(V__NUMBER2,V__DAY))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__HOUR1,V__HOUR2) ) ) ).

fof(kb_SUMO_5670,axiom,
    s__instance(s__MinuteFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5671,axiom,
    s__instance(s__MinuteFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5672,axiom,
    s__domain(s__MinuteFn__m,"1",s__NonnegativeInteger) ).

fof(kb_SUMO_5673,axiom,
    s__domainSubclass(s__MinuteFn__m,"2",s__Hour) ).

fof(kb_SUMO_5674,axiom,
    s__rangeSubclass(s__MinuteFn__m,s__Minute) ).

fof(kb_SUMO_5675,axiom,
    s__documentation(s__MinuteFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Hours to the &%Minutes within each &%Hour corresponding to that &%NonnegativeInteger. For example, (&%MinuteFn 30 (&%HourFn 17 &%Day)) is the &%Class of all 5:30s in the afternoon. For another example, (&%MinuteFn 15 &%Hour) would return the class of all instances of quarter past the hour. For still another example, (&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912))))) denotes 15 minutes after 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_5676,axiom,
    ! [V__MINUTE,V__NUMBER,V__HOUR] :
      ( ( s__subclass(V__HOUR,s__Hour)
        & s__instance(V__HOUR,s__SetOrClass)
        & s__instance(V__NUMBER,s__NonnegativeInteger) )
     => ( s__instance(V__MINUTE,s__MinuteFn(V__NUMBER,V__HOUR))
       => less(V__NUMBER,"60") ) ) ).

fof(kb_SUMO_5677,axiom,
    ! [V__MINUTE1,V__MINUTE2,V__NUMBER2,V__HOUR,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__NonnegativeInteger)
        & s__subclass(V__HOUR,s__Hour)
        & s__instance(V__HOUR,s__SetOrClass)
        & s__instance(V__NUMBER2,s__NonnegativeInteger)
        & s__instance(V__MINUTE2,s__TimeInterval)
        & s__instance(V__MINUTE1,s__TimeInterval) )
     => ( ( s__instance(V__MINUTE1,s__MinuteFn(V__NUMBER1,V__HOUR))
          & s__instance(V__MINUTE2,s__MinuteFn(V__NUMBER2,V__HOUR))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__MINUTE1,V__MINUTE2) ) ) ).

fof(kb_SUMO_5678,axiom,
    s__instance(s__SecondFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5679,axiom,
    s__instance(s__SecondFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5680,axiom,
    s__domain(s__SecondFn__m,"1",s__PositiveRealNumber) ).

fof(kb_SUMO_5681,axiom,
    s__domainSubclass(s__SecondFn__m,"2",s__Minute) ).

fof(kb_SUMO_5682,axiom,
    s__rangeSubclass(s__SecondFn__m,s__Second) ).

fof(kb_SUMO_5683,axiom,
    s__documentation(s__SecondFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Minutes to the &%Seconds within each &%Minute corresponding to that &%PositiveRealNumber. For example, (&%SecondFn 4 (&%MinuteFn 5 &%Hour)) is the &%Class of all fourth &%Seconds of every fifth &%Minute of every hour. For another example, (&%SecondFn 8 &%Minute) would return the eighth second of every minute. For still another example, (&%SecondFn 9 (&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))))) denotes 9 seconds and 15 minutes after 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_5684,axiom,
    ! [V__MINUTE,V__NUMBER,V__SECOND] :
      ( ( s__instance(V__NUMBER,s__PositiveRealNumber)
        & s__subclass(V__MINUTE,s__Minute)
        & s__instance(V__MINUTE,s__SetOrClass) )
     => ( s__instance(V__SECOND,s__SecondFn(V__NUMBER,V__MINUTE))
       => less(V__NUMBER,"60") ) ) ).

fof(kb_SUMO_5685,axiom,
    ! [V__MINUTE,V__SECOND2,V__SECOND1,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveRealNumber)
        & s__instance(V__NUMBER2,s__PositiveRealNumber)
        & s__instance(V__SECOND1,s__TimeInterval)
        & s__instance(V__SECOND2,s__TimeInterval)
        & s__subclass(V__MINUTE,s__Minute)
        & s__instance(V__MINUTE,s__SetOrClass) )
     => ( ( s__instance(V__SECOND1,s__SecondFn(V__NUMBER1,V__MINUTE))
          & s__instance(V__SECOND2,s__SecondFn(V__NUMBER2,V__MINUTE))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__SECOND1,V__SECOND2) ) ) ).

fof(kb_SUMO_5686,axiom,
    s__subclass(s__Year,s__TimeInterval) ).

fof(kb_SUMO_5687,axiom,
    s__instance(s__Year__t,s__SetOrClass) ).

fof(kb_SUMO_5688,axiom,
    s__relatedInternalConcept(s__Year,s__YearFn__m) ).

fof(kb_SUMO_5689,axiom,
    s__relatedInternalConcept(s__Year,s__YearDuration) ).

fof(kb_SUMO_5690,axiom,
    s__documentation(s__Year,s__EnglishLanguage,'The &%Class of all calendar &%Years.') ).

fof(kb_SUMO_5691,axiom,
    ! [V__YEAR] :
      ( s__instance(V__YEAR,s__TimeInterval)
     => ( s__instance(V__YEAR,s__Year)
       => s__duration(V__YEAR,s__MeasureFn("1",s__YearDuration)) ) ) ).

fof(kb_SUMO_5692,axiom,
    ! [V__YEAR2,V__YEAR1] :
      ( ( s__instance(V__YEAR1,s__TimeInterval)
        & s__instance(V__YEAR2,s__TimeInterval) )
     => ( ( s__instance(V__YEAR1,s__Year)
          & s__instance(V__YEAR2,s__Year)
          & minus(V__YEAR2,V__YEAR1) = "1" )
       => s__meetsTemporally(V__YEAR1,V__YEAR2) ) ) ).

fof(kb_SUMO_5693,axiom,
    s__subclass(s__LeapYear,s__Year) ).

fof(kb_SUMO_5694,axiom,
    s__instance(s__LeapYear__t,s__SetOrClass) ).

fof(kb_SUMO_5695,axiom,
    s__documentation(s__LeapYear,s__EnglishLanguage,'The &%Class of all leap years. These are years which are either (i.) evenly divisible by 4 and not by 100 or (ii.) evenly divisible by 400 (this latter case is known as a leap century).') ).

fof(kb_SUMO_5696,axiom,
    ! [V__LEAP,V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => ( ( s__instance(V__LEAP,s__LeapYear)
          & s__instance(V__LEAP,s__YearFn(V__NUMBER)) )
       => ( ( s__RemainderFn(V__NUMBER,"4") = "0"
            & s__RemainderFn(V__NUMBER,"100") != "0" )
          | s__RemainderFn(V__NUMBER,"400") = "0" ) ) ) ).

fof(kb_SUMO_5697,axiom,
    s__subclass(s__Month,s__TimeInterval) ).

fof(kb_SUMO_5698,axiom,
    s__relatedInternalConcept(s__Month,s__MonthFn__m) ).

fof(kb_SUMO_5699,axiom,
    s__documentation(s__Month,s__EnglishLanguage,'The &%Class of all calendar &%Months.') ).

fof(kb_SUMO_5700,axiom,
    s__subclass(s__January,s__Month) ).

fof(kb_SUMO_5701,axiom,
    s__instance(s__January__t,s__SetOrClass) ).

fof(kb_SUMO_5702,axiom,
    s__documentation(s__January,s__EnglishLanguage,'The &%Class of all &%Months which are January.') ).

fof(kb_SUMO_5703,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__January)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5704,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__January,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__February,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5705,axiom,
    s__subclass(s__February,s__Month) ).

fof(kb_SUMO_5706,axiom,
    s__instance(s__February__t,s__SetOrClass) ).

fof(kb_SUMO_5707,axiom,
    s__documentation(s__February,s__EnglishLanguage,'The &%Class of all &%Months which are February.') ).

fof(kb_SUMO_5708,axiom,
    ! [V__Y,V__YEAR,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass) )
     => ( ( s__instance(V__MONTH,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__Y,V__YEAR)
          & ~ s__instance(V__Y,s__LeapYear) )
       => s__duration(V__MONTH,s__MeasureFn("28",s__DayDuration)) ) ) ).

fof(kb_SUMO_5709,axiom,
    ! [V__Y,V__YEAR,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass) )
     => ( ( s__instance(V__MONTH,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__Y,V__YEAR)
          & s__instance(V__Y,s__LeapYear) )
       => s__duration(V__MONTH,s__MeasureFn("29",s__DayDuration)) ) ) ).

fof(kb_SUMO_5710,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__March,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5711,axiom,
    s__subclass(s__March,s__Month) ).

fof(kb_SUMO_5712,axiom,
    s__instance(s__March__t,s__SetOrClass) ).

fof(kb_SUMO_5713,axiom,
    s__documentation(s__March,s__EnglishLanguage,'The &%Class of all &%Months which are March.') ).

fof(kb_SUMO_5714,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__March)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5715,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__March,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__April,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5716,axiom,
    s__subclass(s__April,s__Month) ).

fof(kb_SUMO_5717,axiom,
    s__instance(s__April__t,s__SetOrClass) ).

fof(kb_SUMO_5718,axiom,
    s__documentation(s__April,s__EnglishLanguage,'The &%Class of all &%Months which are April.') ).

fof(kb_SUMO_5719,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__April)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_5720,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( V__MONTH1 = s__MonthFn(s__April,V__YEAR)
          & V__MONTH2 = s__MonthFn(s__May,V__YEAR) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5721,axiom,
    s__subclass(s__May,s__Month) ).

fof(kb_SUMO_5722,axiom,
    s__instance(s__May__t,s__SetOrClass) ).

fof(kb_SUMO_5723,axiom,
    s__documentation(s__May,s__EnglishLanguage,'The &%Class of all &%Months which are May.') ).

fof(kb_SUMO_5724,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__May)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5725,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__May,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__June,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5726,axiom,
    s__subclass(s__June,s__Month) ).

fof(kb_SUMO_5727,axiom,
    s__instance(s__June__t,s__SetOrClass) ).

fof(kb_SUMO_5728,axiom,
    s__instance(s__Month__t,s__SetOrClass) ).

fof(kb_SUMO_5729,axiom,
    s__documentation(s__June,s__EnglishLanguage,'The &%Class of all &%Months which are June.') ).

fof(kb_SUMO_5730,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__June)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_5731,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__June,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__July,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5732,axiom,
    s__subclass(s__July,s__Month) ).

fof(kb_SUMO_5733,axiom,
    s__instance(s__July__t,s__SetOrClass) ).

fof(kb_SUMO_5734,axiom,
    s__documentation(s__July,s__EnglishLanguage,'The &%Class of all &%Months which are July.') ).

fof(kb_SUMO_5735,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__July)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5736,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__July,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__August,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5737,axiom,
    s__subclass(s__August,s__Month) ).

fof(kb_SUMO_5738,axiom,
    s__instance(s__August__t,s__SetOrClass) ).

fof(kb_SUMO_5739,axiom,
    s__documentation(s__August,s__EnglishLanguage,'The &%Class of all &%Months which are August.') ).

fof(kb_SUMO_5740,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__August)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5741,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__August,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__September,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5742,axiom,
    s__subclass(s__September,s__Month) ).

fof(kb_SUMO_5743,axiom,
    s__instance(s__September__t,s__SetOrClass) ).

fof(kb_SUMO_5744,axiom,
    s__documentation(s__September,s__EnglishLanguage,'The &%Class of all &%Months which are September.') ).

fof(kb_SUMO_5745,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__September)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_5746,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__September,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__October,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5747,axiom,
    s__subclass(s__October,s__Month) ).

fof(kb_SUMO_5748,axiom,
    s__instance(s__October__t,s__SetOrClass) ).

fof(kb_SUMO_5749,axiom,
    s__documentation(s__October,s__EnglishLanguage,'The &%Class of all &%Months which are October.') ).

fof(kb_SUMO_5750,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__October)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5751,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__October,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__November,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5752,axiom,
    s__subclass(s__November,s__Month) ).

fof(kb_SUMO_5753,axiom,
    s__instance(s__November__t,s__SetOrClass) ).

fof(kb_SUMO_5754,axiom,
    s__documentation(s__November,s__EnglishLanguage,'The &%Class of all &%Months which are November.') ).

fof(kb_SUMO_5755,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__November)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_5756,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__November,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__December,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5757,axiom,
    s__subclass(s__December,s__Month) ).

fof(kb_SUMO_5758,axiom,
    s__instance(s__December__t,s__SetOrClass) ).

fof(kb_SUMO_5759,axiom,
    s__documentation(s__December,s__EnglishLanguage,'The &%Class of all &%Months which are December.') ).

fof(kb_SUMO_5760,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__December)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_5761,axiom,
    ! [V__Y1,V__MONTH1,V__MONTH2,V__YEAR2,V__Y2,V__YEAR1] :
      ( ( s__subclass(V__YEAR1,s__Year)
        & s__instance(V__YEAR1,s__SetOrClass)
        & s__instance(V__Y2,s__TimeInterval)
        & s__subclass(V__YEAR2,s__Year)
        & s__instance(V__YEAR2,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval)
        & s__instance(V__Y1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__December,V__YEAR1))
          & s__instance(V__MONTH2,s__MonthFn(s__January,V__YEAR2))
          & s__instance(V__Y1,V__YEAR1)
          & s__instance(V__Y2,V__YEAR2)
          & s__meetsTemporally(V__Y1,V__Y2) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_5762,axiom,
    s__subclass(s__Day,s__TimeInterval) ).

fof(kb_SUMO_5763,axiom,
    s__relatedInternalConcept(s__Day,s__DayFn__m) ).

fof(kb_SUMO_5764,axiom,
    s__relatedInternalConcept(s__Day,s__DayDuration) ).

fof(kb_SUMO_5765,axiom,
    s__documentation(s__Day,s__EnglishLanguage,'The &%Class of all calendar &%Days.') ).

fof(kb_SUMO_5766,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__Day)
       => s__duration(V__DAY,s__MeasureFn("1",s__DayDuration)) ) ) ).

fof(kb_SUMO_5767,axiom,
    s__subclass(s__Monday,s__Day) ).

fof(kb_SUMO_5768,axiom,
    s__instance(s__Monday__t,s__SetOrClass) ).

fof(kb_SUMO_5769,axiom,
    s__documentation(s__Monday,s__EnglishLanguage,'The &%Class of all calendar Mondays.') ).

fof(kb_SUMO_5770,axiom,
    s__subclass(s__Tuesday,s__Day) ).

fof(kb_SUMO_5771,axiom,
    s__instance(s__Tuesday__t,s__SetOrClass) ).

fof(kb_SUMO_5772,axiom,
    s__documentation(s__Tuesday,s__EnglishLanguage,'The &%Class of all calendar Tuesdays.') ).

fof(kb_SUMO_5773,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Monday)
          & s__instance(V__DAY2,s__Tuesday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5774,axiom,
    s__subclass(s__Wednesday,s__Day) ).

fof(kb_SUMO_5775,axiom,
    s__instance(s__Wednesday__t,s__SetOrClass) ).

fof(kb_SUMO_5776,axiom,
    s__documentation(s__Wednesday,s__EnglishLanguage,'The &%Class of all calendar Wednesdays.') ).

fof(kb_SUMO_5777,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Tuesday)
          & s__instance(V__DAY2,s__Wednesday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5778,axiom,
    s__subclass(s__Thursday,s__Day) ).

fof(kb_SUMO_5779,axiom,
    s__instance(s__Thursday__t,s__SetOrClass) ).

fof(kb_SUMO_5780,axiom,
    s__documentation(s__Thursday,s__EnglishLanguage,'The &%Class of all calendar Thursdays.') ).

fof(kb_SUMO_5781,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Wednesday)
          & s__instance(V__DAY2,s__Thursday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5782,axiom,
    s__subclass(s__Friday,s__Day) ).

fof(kb_SUMO_5783,axiom,
    s__instance(s__Friday__t,s__SetOrClass) ).

fof(kb_SUMO_5784,axiom,
    s__documentation(s__Friday,s__EnglishLanguage,'The &%Class of all calendar Fridays.') ).

fof(kb_SUMO_5785,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Thursday)
          & s__instance(V__DAY2,s__Friday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5786,axiom,
    s__subclass(s__Saturday,s__Day) ).

fof(kb_SUMO_5787,axiom,
    s__instance(s__Saturday__t,s__SetOrClass) ).

fof(kb_SUMO_5788,axiom,
    s__documentation(s__Saturday,s__EnglishLanguage,'The &%Class of all calendar Saturdays.') ).

fof(kb_SUMO_5789,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Friday)
          & s__instance(V__DAY2,s__Saturday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5790,axiom,
    s__subclass(s__Sunday,s__Day) ).

fof(kb_SUMO_5791,axiom,
    s__instance(s__Sunday__t,s__SetOrClass) ).

fof(kb_SUMO_5792,axiom,
    s__instance(s__Day__t,s__SetOrClass) ).

fof(kb_SUMO_5793,axiom,
    s__documentation(s__Sunday,s__EnglishLanguage,'The &%Class of all calendar Sundays.') ).

fof(kb_SUMO_5794,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Saturday)
          & s__instance(V__DAY2,s__Sunday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5795,axiom,
    ! [V__WEEK2,V__WEEK1,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK1,s__TimeInterval)
        & s__instance(V__WEEK2,s__TimeInterval) )
     => ( ( s__instance(V__DAY1,s__Sunday)
          & s__instance(V__DAY2,s__Monday)
          & s__instance(V__WEEK1,s__Week)
          & s__instance(V__WEEK2,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK1)
          & s__temporalPart(V__DAY2,V__WEEK2)
          & s__meetsTemporally(V__WEEK1,V__WEEK2) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_5796,axiom,
    s__subclass(s__Week,s__TimeInterval) ).

fof(kb_SUMO_5797,axiom,
    s__instance(s__Week__t,s__SetOrClass) ).

fof(kb_SUMO_5798,axiom,
    s__documentation(s__Week,s__EnglishLanguage,'The &%Class of all calendar weeks.') ).

fof(kb_SUMO_5799,axiom,
    ! [V__WEEK] :
      ( s__instance(V__WEEK,s__TimeInterval)
     => ( s__instance(V__WEEK,s__Week)
       => s__duration(V__WEEK,s__MeasureFn("1",s__WeekDuration)) ) ) ).

fof(kb_SUMO_5800,axiom,
    s__subclass(s__Hour,s__TimeInterval) ).

fof(kb_SUMO_5801,axiom,
    s__instance(s__Hour__t,s__SetOrClass) ).

fof(kb_SUMO_5802,axiom,
    s__relatedInternalConcept(s__Hour,s__HourFn__m) ).

fof(kb_SUMO_5803,axiom,
    s__relatedInternalConcept(s__Hour,s__HourDuration) ).

fof(kb_SUMO_5804,axiom,
    s__documentation(s__Hour,s__EnglishLanguage,'The &%Class of all clock &%Hours.') ).

fof(kb_SUMO_5805,axiom,
    ! [V__HOUR] :
      ( s__instance(V__HOUR,s__TimeInterval)
     => ( s__instance(V__HOUR,s__Hour)
       => s__duration(V__HOUR,s__MeasureFn("1",s__HourDuration)) ) ) ).

fof(kb_SUMO_5806,axiom,
    s__subclass(s__Minute,s__TimeInterval) ).

fof(kb_SUMO_5807,axiom,
    s__instance(s__Minute__t,s__SetOrClass) ).

fof(kb_SUMO_5808,axiom,
    s__relatedInternalConcept(s__Minute,s__MinuteFn__m) ).

fof(kb_SUMO_5809,axiom,
    s__relatedInternalConcept(s__Minute,s__MinuteDuration) ).

fof(kb_SUMO_5810,axiom,
    s__documentation(s__Minute,s__EnglishLanguage,'The &%Class of all clock &%Minutes.') ).

fof(kb_SUMO_5811,axiom,
    ! [V__MINUTE] :
      ( s__instance(V__MINUTE,s__TimeInterval)
     => ( s__instance(V__MINUTE,s__Minute)
       => s__duration(V__MINUTE,s__MeasureFn("1",s__MinuteDuration)) ) ) ).

fof(kb_SUMO_5812,axiom,
    s__subclass(s__Second,s__TimeInterval) ).

fof(kb_SUMO_5813,axiom,
    s__instance(s__Second__t,s__SetOrClass) ).

fof(kb_SUMO_5814,axiom,
    s__relatedInternalConcept(s__Second,s__SecondDuration) ).

fof(kb_SUMO_5815,axiom,
    s__relatedInternalConcept(s__Second,s__SecondFn__m) ).

fof(kb_SUMO_5816,axiom,
    s__documentation(s__Second,s__EnglishLanguage,'The &%Class of all clock &%Seconds.') ).

fof(kb_SUMO_5817,axiom,
    ! [V__SECOND] :
      ( s__instance(V__SECOND,s__TimeInterval)
     => ( s__instance(V__SECOND,s__Second)
       => s__duration(V__SECOND,s__MeasureFn("1",s__SecondDuration)) ) ) ).

fof(kb_SUMO_5818,axiom,
    s__instance(s__TemporalCompositionFn__m,s__TemporalRelation) ).

fof(kb_SUMO_5819,axiom,
    s__instance(s__TemporalCompositionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5820,axiom,
    s__domain(s__TemporalCompositionFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_5821,axiom,
    s__domainSubclass(s__TemporalCompositionFn__m,"2",s__TimeInterval) ).

fof(kb_SUMO_5822,axiom,
    s__rangeSubclass(s__TemporalCompositionFn__m,s__TimeInterval) ).

fof(kb_SUMO_5823,axiom,
    s__documentation(s__TemporalCompositionFn__m,s__EnglishLanguage,'The basic &%Function for expressing the composition of larger &%TimeIntervals out of smaller &%TimeIntervals. For example, if &%ThisSeptember is an &%instance of &%September, (&%TemporalCompositionFn &%ThisSeptember &%Day) denotes the &%Class of consecutive days that make up &%ThisSeptember. Note that one can obtain the number of instances of this &%Class by using the function &%CardinalityFn.') ).

fof(kb_SUMO_5824,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1,V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__INTERVAL_TYPE)
              & s__instance(V__TIME2,V__CLASS) )
           => ? [V__DURATION] :
                ( s__instance(V__DURATION,s__TimeDuration)
                & s__duration(V__TIME1,V__DURATION)
                & s__duration(V__TIME2,V__DURATION) ) ) ) ) ).

fof(kb_SUMO_5825,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1,V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & s__instance(V__TIME2,V__CLASS)
              & V__TIME1 != V__TIME2 )
           => ( s__meetsTemporally(V__TIME1,V__TIME2)
              | s__meetsTemporally(V__TIME2,V__TIME1)
              | s__earlier(V__TIME1,V__TIME2)
              | s__earlier(V__TIME2,V__TIME1) ) ) ) ) ).

fof(kb_SUMO_5826,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
        & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimeInterval)
            & s__instance(V__TIME,V__CLASS)
            & s__starts(V__TIME,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5827,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
        & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimeInterval)
            & s__instance(V__TIME,V__CLASS)
            & s__finishes(V__TIME,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_5828,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1] :
          ( ( s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & ~ s__finishes(V__TIME1,V__INTERVAL) )
           => ? [V__TIME2] :
                ( s__instance(V__TIME2,s__TimeInterval)
                & s__instance(V__TIME2,V__CLASS)
                & s__meetsTemporally(V__TIME1,V__TIME2) ) ) ) ) ).

fof(kb_SUMO_5829,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1] :
          ( ( s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & ~ s__starts(V__TIME1,V__INTERVAL) )
           => ? [V__TIME2] :
                ( s__instance(V__TIME2,s__TimeInterval)
                & s__instance(V__TIME2,V__CLASS)
                & s__meetsTemporally(V__TIME2,V__TIME1) ) ) ) ) ).

fof(kb_SUMO_5830,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME] :
          ( ( s__instance(V__TIME,s__TimePosition)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME,s__TimePoint)
              & s__temporalPart(V__TIME,V__INTERVAL) )
           => ? [V__INSTANCE] :
                ( s__instance(V__INSTANCE,s__TimePosition)
                & s__instance(V__INSTANCE,V__CLASS)
                & s__temporalPart(V__TIME,V__INSTANCE) ) ) ) ) ).

fof(kb_SUMO_5831,axiom,
    ! [V__YEAR] :
      ( s__instance(V__YEAR,s__TimeInterval)
     => ( s__instance(V__YEAR,s__Year)
       => s__CardinalityFn(s__TemporalCompositionFn(V__YEAR,s__Month)) = "12" ) ) ).

fof(kb_SUMO_5832,axiom,
    ! [V__NUMBER,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__instance(V__MONTH,s__Month)
          & s__duration(V__MONTH,s__MeasureFn(V__NUMBER,s__DayDuration)) )
       => s__CardinalityFn(s__TemporalCompositionFn(V__MONTH,s__Day)) = V__NUMBER ) ) ).

fof(kb_SUMO_5833,axiom,
    ! [V__WEEK] :
      ( s__instance(V__WEEK,s__TimeInterval)
     => ( s__instance(V__WEEK,s__Week)
       => s__CardinalityFn(s__TemporalCompositionFn(V__WEEK,s__Day)) = "7" ) ) ).

fof(kb_SUMO_5834,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__Day)
       => s__CardinalityFn(s__TemporalCompositionFn(V__DAY,s__Hour)) = "24" ) ) ).

fof(kb_SUMO_5835,axiom,
    ! [V__HOUR] :
      ( s__instance(V__HOUR,s__TimeInterval)
     => ( s__instance(V__HOUR,s__Hour)
       => s__CardinalityFn(s__TemporalCompositionFn(V__HOUR,s__Minute)) = "60" ) ) ).

fof(kb_SUMO_5836,axiom,
    ! [V__MINUTE] :
      ( s__instance(V__MINUTE,s__TimeInterval)
     => ( s__instance(V__MINUTE,s__Minute)
       => s__CardinalityFn(s__TemporalCompositionFn(V__MINUTE,s__Second)) = "60" ) ) ).

fof(kb_SUMO_5837,axiom,
    s__instance(s__connected__m,s__BinaryPredicate) ).

fof(kb_SUMO_5838,axiom,
    s__instance(s__connected__m,s__SpatialRelation) ).

fof(kb_SUMO_5839,axiom,
    s__instance(s__connected__m,s__ReflexiveRelation) ).

fof(kb_SUMO_5840,axiom,
    s__instance(s__connected__m,s__SymmetricRelation) ).

fof(kb_SUMO_5841,axiom,
    s__domain(s__connected__m,"1",s__Object) ).

fof(kb_SUMO_5842,axiom,
    s__domain(s__connected__m,"2",s__Object) ).

fof(kb_SUMO_5843,axiom,
    s__documentation(s__connected__m,s__EnglishLanguage,'(connected ?OBJ1 ?OBJ2) means that ?OBJ1 &%meetsSpatially ?OBJ2 or that ?OBJ1 &%overlapsSpatially ?OBJ2.') ).

fof(kb_SUMO_5844,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__connected(V__OBJ1,V__OBJ2)
       => ( s__meetsSpatially(V__OBJ1,V__OBJ2)
          | s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_5845,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
    <=> ! [V__PART1,V__PART2] :
          ( ( s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object) )
         => ( V__OBJ = s__MereologicalSumFn(V__PART1,V__PART2)
           => s__connected(V__PART1,V__PART2) ) ) ) ).

fof(kb_SUMO_5846,axiom,
    s__instance(s__connects__m,s__SpatialRelation) ).

fof(kb_SUMO_5847,axiom,
    s__instance(s__connects__m,s__TernaryPredicate) ).

fof(kb_SUMO_5848,axiom,
    s__domain(s__connects__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5849,axiom,
    s__domain(s__connects__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5850,axiom,
    s__domain(s__connects__m,"3",s__SelfConnectedObject) ).

fof(kb_SUMO_5851,axiom,
    s__documentation(s__connects__m,s__EnglishLanguage,'The relationship between three things, when one of the three things connects the other two. More formally, (&%connects ?OBJ1 ?OBJ2 ?OBJ3) means that (&%connected ?OBJ1 ?OBJ2) and (&%connected ?OBJ1 ?OBJ3) and not (&%connected ?OBJ2 ?OBJ3).') ).

fof(kb_SUMO_5852,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__SelfConnectedObject)
        & s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__connects(V__OBJ1,V__OBJ2,V__OBJ3)
      <=> s__between(V__OBJ2,V__OBJ1,V__OBJ3) ) ) ).

fof(kb_SUMO_5853,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__SelfConnectedObject)
        & s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__connects(V__OBJ1,V__OBJ2,V__OBJ3)
      <=> ( s__connected(V__OBJ1,V__OBJ2)
          & s__connected(V__OBJ1,V__OBJ3)
          & ~ s__connected(V__OBJ2,V__OBJ3) ) ) ) ).

fof(kb_SUMO_5854,axiom,
    ! [V__ARC,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__SelfConnectedObject)
        & s__instance(V__NODE1,s__SelfConnectedObject)
        & s__instance(V__ARC,s__SelfConnectedObject) )
     => ( s__connects(V__ARC,V__NODE1,V__NODE2)
       => s__connects(V__ARC,V__NODE2,V__NODE1) ) ) ).

fof(kb_SUMO_5855,axiom,
    s__subrelation(s__meetsSpatially__m,s__connected__m) ).

fof(kb_SUMO_5856,axiom,
    s__instance(s__meetsSpatially__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5857,axiom,
    s__instance(s__meetsSpatially__m,s__SymmetricRelation) ).

fof(kb_SUMO_5858,axiom,
    s__disjointRelation(s__meetsSpatially__m,s__overlapsSpatially__m) ).

fof(kb_SUMO_5859,axiom,
    s__documentation(s__meetsSpatially__m,s__EnglishLanguage,'(&%meetsSpatially ?OBJ1 ?OBJ2) means that ?OBJ1 and ?OBJ2 are &%connected but that neither ?OBJ1 nor ?OBJ2 &%overlapsSpatially the other.') ).

fof(kb_SUMO_5860,axiom,
    s__subrelation(s__overlapsSpatially__m,s__connected__m) ).

fof(kb_SUMO_5861,axiom,
    s__instance(s__overlapsSpatially__m,s__ReflexiveRelation) ).

fof(kb_SUMO_5862,axiom,
    s__instance(s__ReflexiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_5863,axiom,
    s__instance(s__overlapsSpatially__m,s__SymmetricRelation) ).

fof(kb_SUMO_5864,axiom,
    s__documentation(s__overlapsSpatially__m,s__EnglishLanguage,'(&%overlapsSpatially ?OBJ1 ?OBJ2) means that the &%Objects ?OBJ1 and ?OBJ2 have some parts in common. This is a reflexive and symmetric (but not transitive) relation.') ).

fof(kb_SUMO_5865,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__overlapsSpatially(V__OBJ1,V__OBJ2)
      <=> ? [V__OBJ3] :
            ( s__instance(V__OBJ3,s__Object)
            & s__part(V__OBJ3,V__OBJ1)
            & s__part(V__OBJ3,V__OBJ2) ) ) ) ).

fof(kb_SUMO_5866,axiom,
    ! [V__COLL,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__COLL,s__Collection) )
     => ( ( s__member(V__OBJ1,V__COLL)
          & s__member(V__OBJ2,V__COLL)
          & V__OBJ1 != V__OBJ2 )
       => ~ s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_5867,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Transportation)
        & s__instance(V__OBJ,s__TransportationDevice) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__conveyance(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5868,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Experimenting)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__experimentalControl(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5869,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__patient(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5870,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Motion)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__moves(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5871,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__experiencer(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5872,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Motion)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__path(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5873,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__AchievingControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__gainsControl(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5874,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Confining)
        & s__instance(V__OBJ,s__Animal) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__detainee(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5875,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__DirectionalAttribute) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__direction(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5876,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__agent(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5877,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__eventPartlyLocated(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5878,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__destination(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5879,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__PlacingUnderArrest)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__arrested(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5880,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__ChangeOfControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__losesControl(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5881,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Translocation)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__changesLocation(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5882,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__targetInAttack(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5883,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__origin(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5884,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__AchievingControl)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__controlled(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_5885,axiom,
    s__instance(s__overlapsPartially__m,s__SymmetricRelation) ).

fof(kb_SUMO_5886,axiom,
    s__instance(s__overlapsPartially__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5887,axiom,
    s__subrelation(s__overlapsPartially__m,s__overlapsSpatially__m) ).

fof(kb_SUMO_5888,axiom,
    s__documentation(s__overlapsPartially__m,s__EnglishLanguage,'(&%overlapsPartially ?OBJ1 ?OBJ2) means that ?OBJ1 and ?OBJ2 have part(s) in common, but neither ?OBJ1 nor ?OBJ2 is a &%part of the other.') ).

fof(kb_SUMO_5889,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__overlapsPartially(V__OBJ1,V__OBJ2)
      <=> ( ~ s__part(V__OBJ1,V__OBJ2)
          & ~ s__part(V__OBJ2,V__OBJ1)
          & ? [V__OBJ3] :
              ( s__instance(V__OBJ3,s__Object)
              & s__part(V__OBJ3,V__OBJ1)
              & s__part(V__OBJ3,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_5890,axiom,
    s__subrelation(s__superficialPart__m,s__part__m) ).

fof(kb_SUMO_5891,axiom,
    s__instance(s__superficialPart__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_5892,axiom,
    s__instance(s__superficialPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_5893,axiom,
    s__documentation(s__superficialPart__m,s__EnglishLanguage,'(&%superficialPart ?OBJ1 ?OBJ2) means that ?OBJ1 is a part of ?OBJ2 that has no interior parts of its own (or, intuitively, that only overlaps those parts of ?OBJ2 that are externally connected with the mereological complement of ?OBJ2). This too is a transitive relation closed under &%MereologicalSumFn and &%MereologicalProductFn.') ).

fof(kb_SUMO_5894,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__superficialPart(V__OBJ1,V__OBJ2)
       => ( ~ s__interiorPart(V__OBJ1,V__OBJ2)
          & ~ ? [V__OBJ3] :
                ( s__instance(V__OBJ3,s__Object)
                & s__interiorPart(V__OBJ3,V__OBJ1) ) ) ) ) ).

fof(kb_SUMO_5895,axiom,
    s__instance(s__surface__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5896,axiom,
    s__subrelation(s__surface__m,s__superficialPart__m) ).

fof(kb_SUMO_5897,axiom,
    s__domain(s__surface__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5898,axiom,
    s__domain(s__surface__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5899,axiom,
    s__documentation(s__surface__m,s__EnglishLanguage,'(&%surface ?OBJ1 ?OBJ2) means that ?OBJ1 is a maximally connected &%superficialPart of ?OBJ2. Note that some &%SelfConnectedObjects have more than one surface, e.g. a hollow object like a tennis ball has both an inner and an outer surface.') ).

fof(kb_SUMO_5900,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__surface(V__OBJ1,V__OBJ2)
     => ! [V__OBJ3] :
          ( ( s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__SelfConnectedObject) )
         => ( s__superficialPart(V__OBJ3,V__OBJ2)
           => s__part(V__OBJ3,V__OBJ1) ) ) ) ).

fof(kb_SUMO_5901,axiom,
    s__subrelation(s__interiorPart__m,s__part__m) ).

fof(kb_SUMO_5902,axiom,
    s__instance(s__interiorPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5903,axiom,
    s__instance(s__interiorPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_5904,axiom,
    s__documentation(s__interiorPart__m,s__EnglishLanguage,'(&%interiorPart ?OBJ1 ?OBJ2) means that ?OBJ1 is part ?OBJ2 and there is no overlap between ?OBJ1 and any &%superficialPart ?OBJ2.') ).

fof(kb_SUMO_5905,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__interiorPart(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__superficialPart(V__PART,V__OBJ2)
           => ~ s__overlapsSpatially(V__OBJ1,V__PART) ) ) ) ).

fof(kb_SUMO_5906,axiom,
    s__subrelation(s__bottom__m,s__superficialPart__m) ).

fof(kb_SUMO_5907,axiom,
    s__domain(s__bottom__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5908,axiom,
    s__domain(s__bottom__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5909,axiom,
    s__documentation(s__bottom__m,s__EnglishLanguage,'(&%bottom ?BOTTOM ?OBJECT) holds if ?BOTTOM is the lowest or deepest maximal superficial part of ?OBJECT.') ).

fof(kb_SUMO_5910,axiom,
    ! [V__OBJECT,V__PART,V__BOTTOM] :
      ( ( s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__bottom(V__BOTTOM,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__BOTTOM) )
       => s__orientation(V__PART,V__BOTTOM,s__Above) ) ) ).

fof(kb_SUMO_5911,axiom,
    s__subrelation(s__top__m,s__superficialPart__m) ).

fof(kb_SUMO_5912,axiom,
    s__domain(s__top__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5913,axiom,
    s__domain(s__top__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5914,axiom,
    s__documentation(s__top__m,s__EnglishLanguage,'(&%top ?TOP ?OBJECT) means that ?TOP is the highest maximal superficial part of ?OBJECT.') ).

fof(kb_SUMO_5915,axiom,
    ! [V__OBJECT,V__PART,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__top(V__TOP,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__TOP) )
       => s__orientation(V__PART,V__TOP,s__Below) ) ) ).

fof(kb_SUMO_5916,axiom,
    s__subrelation(s__side__m,s__superficialPart__m) ).

fof(kb_SUMO_5917,axiom,
    s__domain(s__side__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_5918,axiom,
    s__domain(s__side__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5919,axiom,
    s__documentation(s__side__m,s__EnglishLanguage,'(&%side ?SIDE ?OBJECT) means that ?SIDE is a side of the object, as opposed to the &%top or &%bottom.') ).

fof(kb_SUMO_5920,axiom,
    ! [V__OBJECT,V__SIDE,V__PART] :
      ( ( s__instance(V__PART,s__Object)
        & s__instance(V__SIDE,s__SelfConnectedObject)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__side(V__SIDE,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__SIDE) )
       => ? [V__DIRECT] :
            ( s__instance(V__DIRECT,s__PositionalAttribute)
            & s__orientation(V__SIDE,V__PART,V__DIRECT) ) ) ) ).

fof(kb_SUMO_5921,axiom,
    ! [V__O,V__S,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__S,s__SelfConnectedObject)
        & s__instance(V__O,s__SelfConnectedObject) )
     => ( ( s__top(V__TOP,V__O)
          & s__side(V__S,V__O) )
       => V__TOP != V__S ) ) ).

fof(kb_SUMO_5922,axiom,
    ! [V__OBJECT,V__WIDTH] :
      ( ( s__instance(V__WIDTH,s__LengthMeasure)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( s__width(V__OBJECT,V__WIDTH)
      <=> ? [V__SIDE1,V__SIDE2] :
            ( s__instance(V__SIDE2,s__SelfConnectedObject)
            & s__instance(V__SIDE1,s__SelfConnectedObject)
            & s__side(V__SIDE1,V__OBJECT)
            & s__side(V__SIDE2,V__OBJECT)
            & s__distance(V__SIDE1,V__SIDE2,V__WIDTH) ) ) ) ).

fof(kb_SUMO_5923,axiom,
    ! [V__OBJECT,V__BOTTOM,V__TOP,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__height(V__OBJECT,V__HEIGHT)
          & s__top(V__TOP,V__OBJECT)
          & s__bottom(V__BOTTOM,V__OBJECT) )
       => s__distance(V__TOP,V__BOTTOM,V__HEIGHT) ) ) ).

fof(kb_SUMO_5924,axiom,
    s__instance(s__MereologicalSumFn__m,s__SpatialRelation) ).

fof(kb_SUMO_5925,axiom,
    s__instance(s__MereologicalSumFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5926,axiom,
    s__instance(s__MereologicalSumFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5927,axiom,
    s__domain(s__MereologicalSumFn__m,"1",s__Object) ).

fof(kb_SUMO_5928,axiom,
    s__domain(s__MereologicalSumFn__m,"2",s__Object) ).

fof(kb_SUMO_5929,axiom,
    s__range(s__MereologicalSumFn__m,s__Object) ).

fof(kb_SUMO_5930,axiom,
    s__relatedInternalConcept(s__MereologicalSumFn__m,s__MereologicalProductFn__m) ).

fof(kb_SUMO_5931,axiom,
    s__relatedInternalConcept(s__MereologicalSumFn__m,s__MereologicalDifferenceFn__m) ).

fof(kb_SUMO_5932,axiom,
    s__documentation(s__MereologicalSumFn__m,s__EnglishLanguage,'(&%MereologicalSumFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to either ?OBJ1 or ?OBJ2.') ).

fof(kb_SUMO_5933,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalSumFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__PART,V__OBJ3)
          <=> ( s__part(V__PART,V__OBJ1)
              | s__part(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_5934,axiom,
    s__instance(s__MereologicalProductFn__m,s__SpatialRelation) ).

fof(kb_SUMO_5935,axiom,
    s__instance(s__MereologicalProductFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5936,axiom,
    s__instance(s__BinaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_5937,axiom,
    s__instance(s__MereologicalProductFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5938,axiom,
    s__domain(s__MereologicalProductFn__m,"1",s__Object) ).

fof(kb_SUMO_5939,axiom,
    s__domain(s__MereologicalProductFn__m,"2",s__Object) ).

fof(kb_SUMO_5940,axiom,
    s__range(s__MereologicalProductFn__m,s__Object) ).

fof(kb_SUMO_5941,axiom,
    s__relatedInternalConcept(s__MereologicalProductFn__m,s__MereologicalDifferenceFn__m) ).

fof(kb_SUMO_5942,axiom,
    s__documentation(s__MereologicalProductFn__m,s__EnglishLanguage,'(&%MereologicalProductFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to both ?OBJ1 and ?OBJ2.') ).

fof(kb_SUMO_5943,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalProductFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__PART,V__OBJ3)
          <=> ( s__part(V__PART,V__OBJ1)
              & s__part(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_5944,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__SpatialRelation) ).

fof(kb_SUMO_5945,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__BinaryFunction) ).

fof(kb_SUMO_5946,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5947,axiom,
    s__domain(s__MereologicalDifferenceFn__m,"1",s__Object) ).

fof(kb_SUMO_5948,axiom,
    s__domain(s__MereologicalDifferenceFn__m,"2",s__Object) ).

fof(kb_SUMO_5949,axiom,
    s__range(s__MereologicalDifferenceFn__m,s__Object) ).

fof(kb_SUMO_5950,axiom,
    s__documentation(s__MereologicalDifferenceFn__m,s__EnglishLanguage,'(&%MereologicalDifferenceFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to ?OBJ1 and not to ?OBJ2.') ).

fof(kb_SUMO_5951,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalDifferenceFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__properPart(V__PART,V__OBJ3)
          <=> ( s__properPart(V__PART,V__OBJ1)
              & ~ s__properPart(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_5952,axiom,
    s__instance(s__hole__m,s__BinaryPredicate) ).

fof(kb_SUMO_5953,axiom,
    s__instance(s__hole__m,s__SpatialRelation) ).

fof(kb_SUMO_5954,axiom,
    s__instance(s__hole__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5955,axiom,
    s__domain(s__hole__m,"1",s__Hole) ).

fof(kb_SUMO_5956,axiom,
    s__domain(s__hole__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_5957,axiom,
    s__documentation(s__hole__m,s__EnglishLanguage,'(&%hole ?HOLE ?OBJ) means that ?HOLE is a &%Hole in ?OBJ. A &%Hole is a fillable body located at the &%surface an &%Object.') ).

fof(kb_SUMO_5958,axiom,
    s__subclass(s__Hole,s__Region) ).

fof(kb_SUMO_5959,axiom,
    s__instance(s__Hole__t,s__SetOrClass) ).

fof(kb_SUMO_5960,axiom,
    s__documentation(s__Hole,s__EnglishLanguage,'A hole is an immaterial body located at the surface of an &%Object. Since every &%Hole is ontologically dependent on its host (i.e., the object in which it is a hole), being a &%Hole is defined as being a &%hole in something. Note that two &%Holes may occupy the same region, or part of the same region, without sharing any parts. Any two hosts of a hole have a common proper part that entirely hosts the hole. A common host of two holes hosts all parts of the sum of those holes. Any object that includes the host of a hole is a host of that hole, unless its parts also include parts of that very hole. Overlapping holes have overlapping hosts. No hole is atomic. Holes are connected with their hosts. No hole can have a proper part that is externally connected with exactly the same things as the hole itself.') ).

fof(kb_SUMO_5961,axiom,
    ! [V__HOLE] :
      ( s__instance(V__HOLE,s__Hole)
    <=> ? [V__OBJ] :
          ( s__instance(V__OBJ,s__SelfConnectedObject)
          & s__hole(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_5962,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => ~ s__instance(V__OBJ,s__Hole) ) ) ).

fof(kb_SUMO_5963,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => ~ s__overlapsSpatially(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_5964,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__hole(V__HOLE,V__OBJ1)
          & s__hole(V__HOLE,V__OBJ2) )
       => ? [V__OBJ3] :
            ( s__instance(V__OBJ3,s__SelfConnectedObject)
            & s__properPart(V__OBJ3,s__MereologicalProductFn(V__OBJ1,V__OBJ2))
            & s__hole(V__HOLE,V__OBJ3) ) ) ) ).

fof(kb_SUMO_5965,axiom,
    ! [V__OBJ,V__HOLE2,V__HOLE1] :
      ( ( s__hole(V__HOLE1,V__OBJ)
        & s__hole(V__HOLE2,V__OBJ) )
     => ! [V__HOLE3] :
          ( ( s__instance(V__HOLE3,s__Hole)
            & s__instance(V__HOLE1,s__Hole)
            & s__instance(V__HOLE2,s__Hole)
            & s__instance(V__OBJ,s__SelfConnectedObject) )
         => ( s__part(V__HOLE3,s__MereologicalSumFn(V__HOLE1,V__HOLE2))
           => s__hole(V__HOLE3,V__OBJ) ) ) ) ).

fof(kb_SUMO_5966,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__hole(V__HOLE,V__OBJ1)
          & s__part(V__OBJ1,V__OBJ2) )
       => ( s__overlapsSpatially(V__HOLE,V__OBJ2)
          | s__hole(V__HOLE,V__OBJ2) ) ) ) ).

fof(kb_SUMO_5967,axiom,
    ! [V__HOLE2,V__HOLE1,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE1,s__Hole)
        & s__instance(V__HOLE2,s__Hole) )
     => ( ( s__hole(V__HOLE1,V__OBJ1)
          & s__hole(V__HOLE2,V__OBJ2)
          & s__overlapsSpatially(V__HOLE1,V__HOLE2) )
       => s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_5968,axiom,
    ! [V__HOLE1] :
      ( s__instance(V__HOLE1,s__Object)
     => ( s__instance(V__HOLE1,s__Hole)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Object)
            & s__properPart(V__HOLE2,V__HOLE1) ) ) ) ).

fof(kb_SUMO_5969,axiom,
    s__instance(s__HoleHostFn__m,s__SpatialRelation) ).

fof(kb_SUMO_5970,axiom,
    s__instance(s__HoleHostFn__m,s__UnaryFunction) ).

fof(kb_SUMO_5971,axiom,
    s__instance(s__HoleHostFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5972,axiom,
    s__instance(s__HoleHostFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5973,axiom,
    s__domain(s__HoleHostFn__m,"1",s__Hole) ).

fof(kb_SUMO_5974,axiom,
    s__range(s__HoleHostFn__m,s__Object) ).

fof(kb_SUMO_5975,axiom,
    s__documentation(s__HoleHostFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%Hole to the &%Object which is its principal host. The principle host of a &%Hole is its maximally connected host (a notion taken here to be defined only when the argument is a hole).') ).

fof(kb_SUMO_5976,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => s__connected(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_5977,axiom,
    ! [V__HOLE2,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Object)
        & s__instance(V__HOLE2,s__Object) )
     => ( ( s__instance(V__HOLE1,s__Hole)
          & s__properPart(V__HOLE2,V__HOLE1) )
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__meetsSpatially(V__HOLE1,V__OBJ)
            & ~ s__meetsSpatially(V__HOLE2,V__OBJ) ) ) ) ).

fof(kb_SUMO_5978,axiom,
    s__instance(s__Fillable,s__ShapeAttribute) ).

fof(kb_SUMO_5979,axiom,
    s__documentation(s__Fillable,s__EnglishLanguage,'Something is &%Fillable if it can be filled by something else. Note that filled here means perfectly filled. Something is fillable just in case it is part of a hole, i.e., fillability is an exclusive property of holes and their parts.') ).

%FOL fof(kb_SUMO_5980,axiom,(( (! [V__OBJ,V__HOLE] : ((s__instance(V__HOLE,s__Hole) & s__instance(V__OBJ,s__Object)) => ((? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__fills(V__OBJ,V__HOLE)'))) => s__attribute(V__HOLE,s__Fillable)))) ))).

fof(kb_SUMO_5981,axiom,
    ! [V__HOLE1] :
      ( s__instance(V__HOLE1,s__Object)
     => ( s__attribute(V__HOLE1,s__Fillable)
      <=> ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Object)
            & s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE1,V__HOLE2) ) ) ) ).

fof(kb_SUMO_5982,axiom,
    s__subrelation(s__partiallyFills__m,s__located__m) ).

fof(kb_SUMO_5983,axiom,
    s__instance(s__partiallyFills__m,s__SpatialRelation) ).

fof(kb_SUMO_5984,axiom,
    s__instance(s__partiallyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5985,axiom,
    s__instance(s__AsymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_5986,axiom,
    s__domain(s__partiallyFills__m,"1",s__Object) ).

fof(kb_SUMO_5987,axiom,
    s__domain(s__partiallyFills__m,"2",s__Hole) ).

fof(kb_SUMO_5988,axiom,
    s__documentation(s__partiallyFills__m,s__EnglishLanguage,'(&%partiallyFills ?OBJ ?HOLE) means that ?OBJ &%completelyFills some part of ?HOLE. Note that if (&%partiallyFills ?OBJ1 ?HOLE) and (&%part ?OBJ1 ?OBJ2), then (&%partiallyFills ?OBJ2 ?HOLE). Note too that a partial filler need not be wholly inside a hole (it may stick out), which means that every complete filler also qualifies as (is a limit case of) a partial one.') ).

fof(kb_SUMO_5989,axiom,
    ! [V__OBJ,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( s__partiallyFills(V__OBJ,V__HOLE1)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE2,V__HOLE1)
            & s__completelyFills(V__OBJ,V__HOLE2) ) ) ) ).

fof(kb_SUMO_5990,axiom,
    s__instance(s__properlyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5991,axiom,
    s__subrelation(s__properlyFills__m,s__partiallyFills__m) ).

fof(kb_SUMO_5992,axiom,
    s__domain(s__properlyFills__m,"1",s__Object) ).

fof(kb_SUMO_5993,axiom,
    s__domain(s__properlyFills__m,"2",s__Hole) ).

fof(kb_SUMO_5994,axiom,
    s__documentation(s__properlyFills__m,s__EnglishLanguage,'(&%properlyFills ?OBJ ?HOLE) means that ?HOLE is properly (though perhaps incompletely) filled by ?OBJ, i.e. some part of ?HOLE is perfectly filled by ?OBJ. Note that &%properlyFills is the dual of &%completelyFills, and is so related to &%partiallyFills that ?OBJ &%properlyFills ?HOLE just in case ?OBJ &%partiallyFills every part of ?HOLE. (Thus, every perfect filler is both complete and proper in this sense). Every hole is connected with everything with which a proper filler of the hole is connected. Every proper part of a perfect filler of (a part of) a hole properly fills (that part of) that hole.') ).

fof(kb_SUMO_5995,axiom,
    ! [V__OBJ,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( s__properlyFills(V__OBJ,V__HOLE1)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE2,V__HOLE1)
            & s__fills(V__OBJ,V__HOLE2) ) ) ) ).

fof(kb_SUMO_5996,axiom,
    s__instance(s__completelyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5997,axiom,
    s__subrelation(s__completelyFills__m,s__partiallyFills__m) ).

fof(kb_SUMO_5998,axiom,
    s__documentation(s__completelyFills__m,s__EnglishLanguage,'(&%completelyFills ?OBJ ?HOLE) means that some &%part of the &%Object ?OBJ fills the &%Hole ?HOLE. Note that if (&%completelyFills ?OBJ1 ?HOLE) and (&%part ?OBJ1 ?OBJ2), then (&%completelyFills ?OBJ2 ?HOLE). A complete filler of (a part of) a hole is connected with everything with which (that part of) the hole itself is connected. A perfect filler of (a part of) a hole completely fills every proper part of (that part of) that hole.') ).

fof(kb_SUMO_5999,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( ( s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( s__completelyFills(V__OBJ1,V__HOLE)
       => ? [V__OBJ2] :
            ( s__instance(V__OBJ2,s__Object)
            & s__part(V__OBJ2,V__OBJ1)
            & s__fills(V__OBJ2,V__HOLE) ) ) ) ).

fof(kb_SUMO_6000,axiom,
    s__instance(s__fills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6001,axiom,
    s__subrelation(s__fills__m,s__completelyFills__m) ).

fof(kb_SUMO_6002,axiom,
    s__subrelation(s__fills__m,s__properlyFills__m) ).

fof(kb_SUMO_6003,axiom,
    s__domain(s__fills__m,"1",s__Object) ).

fof(kb_SUMO_6004,axiom,
    s__domain(s__fills__m,"2",s__Hole) ).

fof(kb_SUMO_6005,axiom,
    s__relatedInternalConcept(s__fills__m,s__Fillable) ).

fof(kb_SUMO_6006,axiom,
    s__documentation(s__fills__m,s__EnglishLanguage,'Holes can be filled. (&%fills ?OBJ ?HOLE) means that the &%Object ?OBJ fills the &%Hole ?HOLE. Note that &%fills here means perfectly filled. Perfect fillers and fillable entities have no parts in common (rather, they may occupy the same spatial region).') ).

fof(kb_SUMO_6007,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__fills(V__OBJ1,V__HOLE)
          & s__attribute(V__OBJ2,s__Fillable) )
       => ~ s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_6008,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( s__completelyFills(V__OBJ1,V__HOLE)
     => ! [V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object)
            & s__instance(V__HOLE,s__Hole) )
         => ( s__connected(V__OBJ2,V__HOLE)
           => s__connected(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_6009,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__properlyFills(V__OBJ1,V__HOLE)
          & s__connected(V__OBJ2,V__OBJ1) )
       => s__connected(V__HOLE,V__OBJ2) ) ) ).

fof(kb_SUMO_6010,axiom,
    ! [V__OBJ,V__HOLE2,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__HOLE2,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__fills(V__OBJ,V__HOLE1)
          & s__properPart(V__HOLE2,V__HOLE1) )
       => s__completelyFills(V__OBJ,V__HOLE2) ) ) ).

fof(kb_SUMO_6011,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__fills(V__OBJ1,V__HOLE)
          & s__properPart(V__OBJ2,V__OBJ1) )
       => s__properlyFills(V__OBJ2,V__HOLE) ) ) ).

fof(kb_SUMO_6012,axiom,
    s__instance(s__HoleSkinFn__m,s__SpatialRelation) ).

fof(kb_SUMO_6013,axiom,
    s__instance(s__HoleSkinFn__m,s__UnaryFunction) ).

fof(kb_SUMO_6014,axiom,
    s__instance(s__HoleSkinFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_6015,axiom,
    s__instance(s__HoleSkinFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6016,axiom,
    s__domain(s__HoleSkinFn__m,"1",s__Hole) ).

fof(kb_SUMO_6017,axiom,
    s__range(s__HoleSkinFn__m,s__Object) ).

fof(kb_SUMO_6018,axiom,
    s__documentation(s__HoleSkinFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%Hole to the skin of the &%Hole. The skin of a &%Hole is the fusion of those superficial parts (see &%superficialPart) of the &%Holes principal host (see &%HoleHostFn) with which the &%Hole is externally connected.') ).

fof(kb_SUMO_6019,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( V__OBJ1 = s__HoleSkinFn(V__HOLE)
     => ! [V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object)
            & s__instance(V__HOLE,s__Hole) )
         => ( s__overlapsSpatially(V__OBJ2,V__OBJ1)
          <=> ? [V__OBJ3] :
                ( s__instance(V__OBJ3,s__Object)
                & s__superficialPart(V__OBJ3,s__HoleHostFn(V__HOLE))
                & s__meetsSpatially(V__HOLE,V__OBJ3)
                & s__overlapsSpatially(V__OBJ2,V__OBJ3) ) ) ) ) ).

fof(kb_SUMO_6020,axiom,
    s__instance(s__subProcess__m,s__BinaryPredicate) ).

fof(kb_SUMO_6021,axiom,
    s__instance(s__subProcess__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_6022,axiom,
    s__domain(s__subProcess__m,"1",s__Process) ).

fof(kb_SUMO_6023,axiom,
    s__domain(s__subProcess__m,"2",s__Process) ).

fof(kb_SUMO_6024,axiom,
    s__documentation(s__subProcess__m,s__EnglishLanguage,'(&%subProcess ?SUBPROC ?PROC) means that ?SUBPROC is a subprocess of ?PROC. A subprocess is here understood as a temporally distinguished part (proper or not) of a &%Process.') ).

fof(kb_SUMO_6025,axiom,
    ! [V__SUBPROC,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBPROC,s__Process) )
     => ( s__subProcess(V__SUBPROC,V__PROC)
       => s__temporalPart(s__WhenFn(V__SUBPROC),s__WhenFn(V__PROC)) ) ) ).

fof(kb_SUMO_6026,axiom,
    s__subclass(s__BiologicalProcess,s__InternalChange) ).

fof(kb_SUMO_6027,axiom,
    s__documentation(s__BiologicalProcess,s__EnglishLanguage,'A &%Process embodied in an &%Organism.') ).

fof(kb_SUMO_6028,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__BiologicalProcess)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__instance(V__OBJ,s__Organism)
            & s__eventLocated(V__PROC,V__OBJ) ) ) ) ).

fof(kb_SUMO_6029,axiom,
    ! [V__ORG,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__PROC,s__BiologicalProcess)
          & s__experiencer(V__PROC,V__ORG) )
       => s__instance(V__ORG,s__Organism) ) ) ).

fof(kb_SUMO_6030,axiom,
    s__subclass(s__PhysiologicProcess,s__BiologicalProcess) ).

fof(kb_SUMO_6031,axiom,
    s__instance(s__PhysiologicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6032,axiom,
    s__documentation(s__PhysiologicProcess,s__EnglishLanguage,'A normal process of an &%Organism or part of an &%Organism.') ).

fof(kb_SUMO_6033,axiom,
    s__subclass(s__AutonomicProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_6034,axiom,
    s__disjoint(s__AutonomicProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6035,axiom,
    s__documentation(s__AutonomicProcess,s__EnglishLanguage,'The class of &%PhysiologicProcesses of which there is not conscious awareness and control.') ).

fof(kb_SUMO_6036,axiom,
    s__subclass(s__OrganOrTissueProcess,s__AutonomicProcess) ).

fof(kb_SUMO_6037,axiom,
    s__instance(s__OrganOrTissueProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6038,axiom,
    s__disjoint(s__OrganOrTissueProcess,s__OrganismProcess) ).

fof(kb_SUMO_6039,axiom,
    s__documentation(s__OrganOrTissueProcess,s__EnglishLanguage,'A &%PhysiologicProcess of a particular &%Organ or &%Tissue.') ).

fof(kb_SUMO_6040,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__OrganOrTissueProcess)
       => ? [V__THING] :
            ( s__instance(V__THING,s__Object)
            & s__eventLocated(V__PROC,V__THING)
            & ( s__instance(V__THING,s__Organ)
              | s__instance(V__THING,s__Tissue) ) ) ) ) ).

fof(kb_SUMO_6041,axiom,
    s__subclass(s__OrganismProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_6042,axiom,
    s__documentation(s__OrganismProcess,s__EnglishLanguage,'A physiologic function of the &%Organism as a whole, of multiple organ systems or of multiple &%Organs or &%Tissues.') ).

fof(kb_SUMO_6043,axiom,
    s__subclass(s__Birth,s__OrganismProcess) ).

fof(kb_SUMO_6044,axiom,
    s__instance(s__Birth__t,s__SetOrClass) ).

fof(kb_SUMO_6045,axiom,
    s__instance(s__OrganismProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6046,axiom,
    s__documentation(s__Birth,s__EnglishLanguage,'The &%Process of being born.') ).

fof(kb_SUMO_6047,axiom,
    ! [V__AGENT,V__BIRTH] :
      ( ( s__instance(V__BIRTH,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__BIRTH,s__Birth)
          & s__experiencer(V__BIRTH,V__AGENT) )
       => ? [V__DEATH] :
            ( s__instance(V__DEATH,s__Process)
            & s__instance(V__DEATH,s__Death)
            & s__experiencer(V__DEATH,V__AGENT) ) ) ) ).

fof(kb_SUMO_6048,axiom,
    s__subclass(s__Death,s__OrganismProcess) ).

fof(kb_SUMO_6049,axiom,
    s__instance(s__Death__t,s__SetOrClass) ).

fof(kb_SUMO_6050,axiom,
    s__documentation(s__Death,s__EnglishLanguage,'The &%Process of dying.') ).

%FOL fof(kb_SUMO_6051,axiom,(( (! [V__OBJ,V__ORG,V__DEATH] : ((s__instance(V__DEATH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DEATH,s__Death) & s__instance(V__ORG,s__Organism) & s__experiencer(V__DEATH,V__ORG)) => (? [V__REM] : (s__instance(V__REM,s__Object) & s__result(V__DEATH,V__REM) & s__instance(V__REM,s__OrganicObject) & s__holdsDuring(s__FutureFn(s__WhenFn(V__DEATH)),'s__attribute(V__REM,s__Dead)') & (s__holdsDuring(s__ImmediateFutureFn(s__WhenFn(V__DEATH)),'s__part(V__OBJ,V__REM)') => s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__DEATH)),'s__part(V__OBJ,V__ORG)'))))))) ))).

fof(kb_SUMO_6052,axiom,
    s__subclass(s__Breathing,s__OrganismProcess) ).

fof(kb_SUMO_6053,axiom,
    s__subclass(s__Breathing,s__AutonomicProcess) ).

fof(kb_SUMO_6054,axiom,
    s__instance(s__Breathing__t,s__SetOrClass) ).

fof(kb_SUMO_6055,axiom,
    s__documentation(s__Breathing,s__EnglishLanguage,'The &%Process of respiration, by which oxygen is made available to an &%Animal. This covers processes of inhalation, exhalation, and alternations between the two.') ).

fof(kb_SUMO_6056,axiom,
    s__subclass(s__Ingesting,s__OrganismProcess) ).

fof(kb_SUMO_6057,axiom,
    s__documentation(s__Ingesting,s__EnglishLanguage,'The &%Process by which food is taken into an &%Animal.') ).

fof(kb_SUMO_6058,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Ingesting)
          & s__resource(V__ACT,V__FOOD) )
       => s__instance(V__FOOD,s__FoodForFn(s__Organism)) ) ) ).

fof(kb_SUMO_6059,axiom,
    s__subclass(s__Eating,s__Ingesting) ).

fof(kb_SUMO_6060,axiom,
    s__instance(s__Eating__t,s__SetOrClass) ).

fof(kb_SUMO_6061,axiom,
    s__documentation(s__Eating,s__EnglishLanguage,'The &%Process by which solid food is incorporated into an &%Animal.') ).

fof(kb_SUMO_6062,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Eating)
          & s__resource(V__ACT,V__FOOD) )
       => s__attribute(V__FOOD,s__Solid) ) ) ).

fof(kb_SUMO_6063,axiom,
    s__subclass(s__Drinking,s__Ingesting) ).

fof(kb_SUMO_6064,axiom,
    s__instance(s__Drinking__t,s__SetOrClass) ).

fof(kb_SUMO_6065,axiom,
    s__instance(s__Ingesting__t,s__SetOrClass) ).

fof(kb_SUMO_6066,axiom,
    s__documentation(s__Drinking,s__EnglishLanguage,'The &%Process by which liquid food, i.e. &%Beverages, are incorporated into an &%Animal.') ).

fof(kb_SUMO_6067,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Drinking)
          & s__resource(V__ACT,V__FOOD) )
       => s__attribute(V__FOOD,s__Liquid) ) ) ).

fof(kb_SUMO_6068,axiom,
    s__subclass(s__Digesting,s__OrganismProcess) ).

fof(kb_SUMO_6069,axiom,
    s__instance(s__Digesting__t,s__SetOrClass) ).

fof(kb_SUMO_6070,axiom,
    s__subclass(s__Digesting,s__AutonomicProcess) ).

fof(kb_SUMO_6071,axiom,
    s__documentation(s__Digesting,s__EnglishLanguage,'The &%Process by which &%Food that has been ingested is broken down into simpler chemical compounds and absorbed by the &%Organism.') ).

fof(kb_SUMO_6072,axiom,
    ! [V__ORGANISM,V__DIGEST] :
      ( ( s__instance(V__DIGEST,s__Process)
        & s__instance(V__ORGANISM,s__Agent) )
     => ( ( s__instance(V__DIGEST,s__Digesting)
          & s__agent(V__DIGEST,V__ORGANISM) )
       => ? [V__INGEST] :
            ( s__instance(V__INGEST,s__Process)
            & s__instance(V__INGEST,s__Ingesting)
            & s__agent(V__INGEST,V__ORGANISM)
            & s__overlapsTemporally(s__WhenFn(V__INGEST),s__WhenFn(V__DIGEST)) ) ) ) ).

fof(kb_SUMO_6073,axiom,
    ! [V__DIGEST] :
      ( s__instance(V__DIGEST,s__Process)
     => ( s__instance(V__DIGEST,s__Digesting)
       => ? [V__DECOMP] :
            ( s__instance(V__DECOMP,s__Process)
            & s__instance(V__DECOMP,s__ChemicalDecomposition)
            & s__subProcess(V__DECOMP,V__DIGEST) ) ) ) ).

fof(kb_SUMO_6074,axiom,
    s__subclass(s__Growth,s__AutonomicProcess) ).

fof(kb_SUMO_6075,axiom,
    s__instance(s__Growth__t,s__SetOrClass) ).

fof(kb_SUMO_6076,axiom,
    s__instance(s__AutonomicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6077,axiom,
    s__documentation(s__Growth,s__EnglishLanguage,'The &%Process of biological development in which an &%Organism or part of an &%Organism changes its form or its size.') ).

fof(kb_SUMO_6078,axiom,
    s__subclass(s__Replication,s__OrganismProcess) ).

fof(kb_SUMO_6079,axiom,
    s__documentation(s__Replication,s__EnglishLanguage,'The &%Process of biological reproduction. This can be either a sexual or an asexual process.') ).

fof(kb_SUMO_6080,axiom,
    ! [V__CHILD,V__REP,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__REP,s__Process)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__instance(V__REP,s__Replication)
          & s__agent(V__REP,V__PARENT)
          & s__result(V__REP,V__CHILD) )
       => s__parent(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_6081,axiom,
    ! [V__REP] :
      ( s__instance(V__REP,s__Process)
     => ( s__instance(V__REP,s__Replication)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__ReproductiveBody)
            & s__result(V__REP,V__BODY) ) ) ) ).

fof(kb_SUMO_6082,axiom,
    s__subclass(s__SexualReproduction,s__Replication) ).

fof(kb_SUMO_6083,axiom,
    s__instance(s__SexualReproduction__t,s__SetOrClass) ).

fof(kb_SUMO_6084,axiom,
    s__instance(s__Replication__t,s__SetOrClass) ).

fof(kb_SUMO_6085,axiom,
    s__disjoint(s__SexualReproduction,s__AsexualReproduction) ).

fof(kb_SUMO_6086,axiom,
    s__documentation(s__SexualReproduction,s__EnglishLanguage,'Sexual &%Processes of biological reproduction.') ).

fof(kb_SUMO_6087,axiom,
    ! [V__ORGANISM,V__REP] :
      ( ( s__instance(V__REP,s__Process)
        & s__instance(V__ORGANISM,s__Organism) )
     => ( ( s__instance(V__REP,s__SexualReproduction)
          & s__result(V__REP,V__ORGANISM) )
       => ? [V__MOTHER,V__FATHER] :
            ( s__instance(V__FATHER,s__Organism)
            & s__instance(V__MOTHER,s__Organism)
            & s__mother(V__ORGANISM,V__MOTHER)
            & s__father(V__ORGANISM,V__FATHER) ) ) ) ).

fof(kb_SUMO_6088,axiom,
    s__subclass(s__AsexualReproduction,s__Replication) ).

fof(kb_SUMO_6089,axiom,
    s__instance(s__AsexualReproduction__t,s__SetOrClass) ).

fof(kb_SUMO_6090,axiom,
    s__documentation(s__AsexualReproduction,s__EnglishLanguage,'Asexual &%Processes of biological reproduction.') ).

fof(kb_SUMO_6091,axiom,
    ! [V__PARENT2,V__ORGANISM,V__PARENT1,V__REP] :
      ( ( s__instance(V__REP,s__Process)
        & s__instance(V__PARENT1,s__Organism)
        & s__instance(V__ORGANISM,s__Organism)
        & s__instance(V__PARENT2,s__Organism) )
     => ( ( s__instance(V__REP,s__AsexualReproduction)
          & s__result(V__REP,V__ORGANISM)
          & s__parent(V__ORGANISM,V__PARENT1)
          & s__parent(V__ORGANISM,V__PARENT2) )
       => V__PARENT1 = V__PARENT2 ) ) ).

fof(kb_SUMO_6092,axiom,
    s__subclass(s__PsychologicalProcess,s__BiologicalProcess) ).

fof(kb_SUMO_6093,axiom,
    s__documentation(s__PsychologicalProcess,s__EnglishLanguage,'A &%BiologicalProcess which takes place in the mind or brain of an &%Organism and which may be manifested in the behavior of the &%Organism.') ).

fof(kb_SUMO_6094,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__PsychologicalProcess)
       => ? [V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__Agent)
            & s__instance(V__ANIMAL,s__Animal)
            & s__experiencer(V__PROCESS,V__ANIMAL) ) ) ) ).

fof(kb_SUMO_6095,axiom,
    s__subclass(s__PathologicProcess,s__BiologicalProcess) ).

fof(kb_SUMO_6096,axiom,
    s__instance(s__PathologicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6097,axiom,
    s__instance(s__BiologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6098,axiom,
    s__disjoint(s__PathologicProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_6099,axiom,
    s__documentation(s__PathologicProcess,s__EnglishLanguage,'A disordered process, activity, or state of the &%Organism as a whole, of a body system or systems, or of multiple &%Organs or &%Tissues. Included here are normal responses to a negative stimulus as well as patholologic conditions or states that are less specific than a disease. Pathologic functions frequently have systemic effects.') ).

fof(kb_SUMO_6100,axiom,
    ! [V__PATH,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__PATH,s__Process) )
     => ( ( s__instance(V__PATH,s__PathologicProcess)
          & s__experiencer(V__PATH,V__ORG) )
       => ? [V__PART,V__DISEASE] :
            ( s__instance(V__DISEASE,s__Attribute)
            & s__instance(V__PART,s__Object)
            & s__part(V__PART,V__ORG)
            & s__instance(V__DISEASE,s__DiseaseOrSyndrome)
            & s__attribute(V__PART,V__DISEASE) ) ) ) ).

fof(kb_SUMO_6101,axiom,
    s__subclass(s__Injuring,s__PathologicProcess) ).

fof(kb_SUMO_6102,axiom,
    s__subclass(s__Injuring,s__Damaging) ).

fof(kb_SUMO_6103,axiom,
    s__instance(s__Injuring__t,s__SetOrClass) ).

fof(kb_SUMO_6104,axiom,
    s__instance(s__Damaging__t,s__SetOrClass) ).

fof(kb_SUMO_6105,axiom,
    s__documentation(s__Injuring,s__EnglishLanguage,'The process of creating a traumatic wound or injury. Since &%Injuring is not possible without some biologic function of the organism being injured, it is a subclass of &%BiologicalProcess.') ).

fof(kb_SUMO_6106,axiom,
    ! [V__INJ] :
      ( s__instance(V__INJ,s__Process)
     => ( s__instance(V__INJ,s__Injuring)
       => ? [V__STRUCT] :
            ( s__instance(V__STRUCT,s__AnatomicalStructure)
            & s__patient(V__INJ,V__STRUCT) ) ) ) ).

fof(kb_SUMO_6107,axiom,
    ! [V__INJ] :
      ( s__instance(V__INJ,s__Process)
     => ( s__instance(V__INJ,s__Injuring)
      <=> ( s__instance(V__INJ,s__Damaging)
          & ? [V__ORGANISM] :
              ( s__instance(V__ORGANISM,s__Organism)
              & s__patient(V__INJ,V__ORGANISM) ) ) ) ) ).

fof(kb_SUMO_6108,axiom,
    s__subclass(s__Poisoning,s__Injuring) ).

fof(kb_SUMO_6109,axiom,
    s__instance(s__Poisoning__t,s__SetOrClass) ).

fof(kb_SUMO_6110,axiom,
    s__documentation(s__Poisoning,s__EnglishLanguage,'A &%Poisoning is caused by an external substance. Since &%Poisoning is not possible without some biologic function which affects the &%Organism being injured, it is a subclass of &%BiologicalProcess.') ).

fof(kb_SUMO_6111,axiom,
    ! [V__POISON] :
      ( s__instance(V__POISON,s__Process)
     => ( s__instance(V__POISON,s__Poisoning)
       => ? [V__THING] :
            ( s__patient(V__POISON,V__THING)
            & ( s__instance(V__THING,s__Organism)
              | s__instance(V__THING,s__AnatomicalStructure) ) ) ) ) ).

fof(kb_SUMO_6112,axiom,
    ! [V__POISON] :
      ( s__instance(V__POISON,s__Process)
     => ( s__instance(V__POISON,s__Poisoning)
       => ? [V__SUBSTANCE] :
            ( s__instance(V__SUBSTANCE,s__Object)
            & s__instance(V__SUBSTANCE,s__BiologicallyActiveSubstance)
            & s__instrument(V__POISON,V__SUBSTANCE) ) ) ) ).

fof(kb_SUMO_6113,axiom,
    s__documentation(s__NaturalProcess,s__EnglishLanguage,'A &%Process that take place in nature spontanously.') ).

fof(kb_SUMO_6114,axiom,
    s__subclass(s__NaturalProcess,s__Process) ).

fof(kb_SUMO_6115,axiom,
    s__instance(s__NaturalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6116,axiom,
    s__disjoint(s__NaturalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6117,axiom,
    s__subclass(s__IntentionalProcess,s__Process) ).

fof(kb_SUMO_6118,axiom,
    s__documentation(s__IntentionalProcess,s__EnglishLanguage,'A &%Process that has a specific purpose for the &%CognitiveAgent who performs it.') ).

fof(kb_SUMO_6119,axiom,
    ! [V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__PROC,s__IntentionalProcess)
          & s__agent(V__PROC,V__AGENT) )
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurposeForAgent(V__PROC,V__PURP,V__AGENT) ) ) ) ).

fof(kb_SUMO_6120,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__IntentionalProcess)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__CognitiveAgent)
            & s__agent(V__PROC,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_6121,axiom,(( (! [V__HUMAN,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__HUMAN,s__Agent)) => ((s__instance(V__PROC,s__IntentionalProcess) & s__agent(V__PROC,V__HUMAN) & s__instance(V__HUMAN,s__Animal)) => s__holdsDuring(s__WhenFn(V__PROC),'s__attribute(V__HUMAN,s__Awake)')))) ))).

fof(kb_SUMO_6122,axiom,
    s__subclass(s__IntentionalPsychologicalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6123,axiom,
    s__subclass(s__IntentionalPsychologicalProcess,s__PsychologicalProcess) ).

fof(kb_SUMO_6124,axiom,
    s__instance(s__PsychologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6125,axiom,
    s__documentation(s__IntentionalPsychologicalProcess,s__EnglishLanguage,'An &%IntentionalProcess that can be realized entirely within the mind or brain of an &%Organism. Thus, for example, &%Reasoning is a subclass of &%IntentionalPsychologicalProcess, because one can reason simply by exercising ones mind/brain. On the other hand, &%RecreationOrExercise is not a subclass of &%IntentionalPsychologicalProcess, because many instances of &%RecreationOrExercise necessarily have &%subProcesses of &%BodyMotion.') ).

fof(kb_SUMO_6126,axiom,
    s__subclass(s__RecreationOrExercise,s__IntentionalProcess) ).

fof(kb_SUMO_6127,axiom,
    s__instance(s__RecreationOrExercise__t,s__SetOrClass) ).

fof(kb_SUMO_6128,axiom,
    s__documentation(s__RecreationOrExercise,s__EnglishLanguage,'A &%Process that is carried out for the purpose of recreation or exercise. Since &%RecreationOrExercise is a subclass of &%IntentionalProcess, the intent of a process determines whether or not it is an instance of the class. Hence, if John and Bill watch the same program on television, and John watches it to relax while Bill watches it solely to satisfy an educational requirement, then Johns watching the movie is an instance of &%RecreationOrExercise, while Bills is not (both cases of watching the television program would however be in the class of &%Seeing, since being an instance of this latter class is not determined by intention).') ).

fof(kb_SUMO_6129,axiom,
    s__subclass(s__OrganizationalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6130,axiom,
    s__documentation(s__OrganizationalProcess,s__EnglishLanguage,'An &%IntentionalProcess that involves an &%Organization.') ).

fof(kb_SUMO_6131,axiom,
    ! [V__ACT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__OrganizationalProcess)
          & s__agent(V__ACT,V__AGENT) )
       => ( s__instance(V__AGENT,s__Organization)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Collection)
              & s__instance(V__ORG,s__Organization)
              & s__member(V__AGENT,V__ORG) ) ) ) ) ).

fof(kb_SUMO_6132,axiom,
    s__subclass(s__Election,s__OrganizationalProcess) ).

fof(kb_SUMO_6133,axiom,
    s__instance(s__Election__t,s__SetOrClass) ).

fof(kb_SUMO_6134,axiom,
    s__documentation(s__Election,s__EnglishLanguage,'&%Election is the class of events conducted by an organization, in which qualified participants vote for officers, adopt resolutions, or settle other issues in that &%Organization.') ).

fof(kb_SUMO_6135,axiom,
    s__subclass(s__ReligiousProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_6136,axiom,
    s__instance(s__ReligiousProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6137,axiom,
    s__documentation(s__ReligiousProcess,s__EnglishLanguage,'An &%OrganizationalProcess that is carried out within or by a &%ReligiousOrganization.') ).

fof(kb_SUMO_6138,axiom,
    ! [V__ACT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__ReligiousProcess)
          & s__agent(V__ACT,V__AGENT) )
       => ( s__instance(V__AGENT,s__ReligiousOrganization)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Collection)
              & s__member(V__AGENT,V__ORG)
              & s__instance(V__ORG,s__ReligiousOrganization) ) ) ) ) ).

fof(kb_SUMO_6139,axiom,
    s__subclass(s__JoiningAnOrganization,s__OrganizationalProcess) ).

fof(kb_SUMO_6140,axiom,
    s__instance(s__JoiningAnOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6141,axiom,
    s__documentation(s__JoiningAnOrganization,s__EnglishLanguage,'The &%OrganizationalProcess of becoming a &%member of an &%Organization.') ).

%FOL fof(kb_SUMO_6142,axiom,(( (! [V__PERSON,V__JOIN,V__ORG] : ((s__instance(V__ORG,s__Collection) & s__instance(V__JOIN,s__Process) & s__instance(V__PERSON,s__Agent) & s__instance(V__PERSON,s__SelfConnectedObject)) => ((s__instance(V__JOIN,s__JoiningAnOrganization) & s__instance(V__ORG,s__Organization) & s__agent(V__JOIN,V__PERSON) & s__patient(V__JOIN,V__ORG)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__JOIN)),'(~ s__member(V__PERSON,V__ORG))') & s__holdsDuring(s__EndFn(s__WhenFn(V__JOIN)),'s__member(V__PERSON,V__ORG)'))))) ))).

fof(kb_SUMO_6143,axiom,
    s__subclass(s__LeavingAnOrganization,s__OrganizationalProcess) ).

fof(kb_SUMO_6144,axiom,
    s__disjoint(s__LeavingAnOrganization,s__JoiningAnOrganization) ).

fof(kb_SUMO_6145,axiom,
    s__documentation(s__LeavingAnOrganization,s__EnglishLanguage,'The &%OrganizationalProcess of leaving an &%Organization, whether voluntarily or involuntarily.') ).

%FOL fof(kb_SUMO_6146,axiom,(( (! [V__PERSON,V__LEAVE,V__ORG] : ((s__instance(V__ORG,s__Collection) & s__instance(V__LEAVE,s__Process) & s__instance(V__PERSON,s__Agent) & s__instance(V__PERSON,s__SelfConnectedObject)) => ((s__instance(V__LEAVE,s__LeavingAnOrganization) & s__instance(V__ORG,s__Organization) & s__agent(V__LEAVE,V__PERSON) & s__patient(V__LEAVE,V__ORG)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__LEAVE)),'s__member(V__PERSON,V__ORG)') & s__holdsDuring(s__EndFn(s__WhenFn(V__LEAVE)),'(~ s__member(V__PERSON,V__ORG))'))))) ))).

fof(kb_SUMO_6147,axiom,
    s__subclass(s__Graduation,s__LeavingAnOrganization) ).

fof(kb_SUMO_6148,axiom,
    s__instance(s__Graduation__t,s__SetOrClass) ).

fof(kb_SUMO_6149,axiom,
    s__instance(s__LeavingAnOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6150,axiom,
    s__documentation(s__Graduation,s__EnglishLanguage,'The &%OrganizationalProcess of graduating from an &%EducationalOrganization.') ).

fof(kb_SUMO_6151,axiom,
    ! [V__ORG,V__GRAD] :
      ( ( s__instance(V__GRAD,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__GRAD,s__Graduation)
          & s__agent(V__GRAD,V__ORG) )
       => s__instance(V__ORG,s__EducationalOrganization) ) ) ).

fof(kb_SUMO_6152,axiom,
    s__subclass(s__Matriculation,s__JoiningAnOrganization) ).

fof(kb_SUMO_6153,axiom,
    s__instance(s__Matriculation__t,s__SetOrClass) ).

fof(kb_SUMO_6154,axiom,
    s__documentation(s__Matriculation,s__EnglishLanguage,'The &%OrganizationalProcess of joining an &%EducationalOrganization as a student.') ).

fof(kb_SUMO_6155,axiom,
    ! [V__MAT,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__MAT,s__Process) )
     => ( ( s__instance(V__MAT,s__Matriculation)
          & s__agent(V__MAT,V__ORG) )
       => s__instance(V__ORG,s__EducationalOrganization) ) ) ).

fof(kb_SUMO_6156,axiom,
    s__subclass(s__Hiring,s__JoiningAnOrganization) ).

fof(kb_SUMO_6157,axiom,
    s__instance(s__Hiring__t,s__SetOrClass) ).

fof(kb_SUMO_6158,axiom,
    s__documentation(s__Hiring,s__EnglishLanguage,'&%OrganizationalProcesses where someone is made an employee of an &%Organization.') ).

%FOL fof(kb_SUMO_6159,axiom,(( (! [V__PERSON,V__ORG,V__HIRE] : ((s__instance(V__HIRE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__HIRE,s__Hiring) & s__instance(V__ORG,s__Organization) & s__agent(V__HIRE,V__ORG) & s__patient(V__HIRE,V__PERSON)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__HIRE)),'(~ s__employs(V__ORG,V__PERSON))') & s__holdsDuring(s__EndFn(s__WhenFn(V__HIRE)),'s__employs(V__ORG,V__PERSON)'))))) ))).

fof(kb_SUMO_6160,axiom,
    s__subclass(s__TerminatingEmployment,s__LeavingAnOrganization) ).

fof(kb_SUMO_6161,axiom,
    s__instance(s__TerminatingEmployment__t,s__SetOrClass) ).

fof(kb_SUMO_6162,axiom,
    s__documentation(s__TerminatingEmployment,s__EnglishLanguage,'&%OrganizationalProcesses where someone ceases to be an employee of an &%Organization. Note that this covers being laid off, being fired, and voluntarily leaving a job.') ).

%FOL fof(kb_SUMO_6163,axiom,(( (! [V__PERSON,V__ORG,V__FIRE] : ((s__instance(V__FIRE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__FIRE,s__TerminatingEmployment) & s__instance(V__ORG,s__Organization) & s__agent(V__FIRE,V__ORG) & s__patient(V__FIRE,V__PERSON)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__FIRE)),'s__employs(V__ORG,V__PERSON)') & s__holdsDuring(s__EndFn(s__WhenFn(V__FIRE)),'(~ s__employs(V__ORG,V__PERSON))'))))) ))).

fof(kb_SUMO_6164,axiom,
    s__subclass(s__PoliticalProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_6165,axiom,
    s__instance(s__PoliticalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6166,axiom,
    s__instance(s__OrganizationalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6167,axiom,
    s__documentation(s__PoliticalProcess,s__EnglishLanguage,'An &%OrganizationalProcess carried out by, for or against officially constituted governments. Some examples would be voting on proposed legislation, electing a government representative, or even overthrowing a government in a revolution.') ).

fof(kb_SUMO_6168,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__PoliticalProcess)
       => ? [V__POL] :
            ( s__instance(V__POL,s__Agent)
            & ( s__instance(V__POL,s__Government)
              | ? [V__GOV] :
                  ( s__instance(V__GOV,s__Collection)
                  & s__instance(V__POL,s__SelfConnectedObject)
                  & s__instance(V__GOV,s__Government)
                  & s__member(V__POL,V__GOV) ) )
            & ( s__agent(V__PROC,V__POL)
              | s__patient(V__PROC,V__POL) ) ) ) ) ).

fof(kb_SUMO_6169,axiom,
    s__subclass(s__JudicialProcess,s__PoliticalProcess) ).

fof(kb_SUMO_6170,axiom,
    s__documentation(s__JudicialProcess,s__EnglishLanguage,'Any legal proceeding which is conducted by a &%JudicialOrganization. Note that there is an important difference between the concepts &%LegalAction and &%JudicialProcess. The former refers to legal claims that are brought by a plaintiff, e.g. law suits, while the second refers to trials and other sorts of judicial hearings where the merits of a &%LegalAction are decided.') ).

fof(kb_SUMO_6171,axiom,
    ! [V__ORG,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__PROCESS,s__JudicialProcess)
          & s__agent(V__PROCESS,V__ORG)
          & s__instance(V__ORG,s__Organization) )
       => s__instance(V__ORG,s__JudicialOrganization) ) ) ).

fof(kb_SUMO_6172,axiom,
    s__subclass(s__LegalDecision,s__JudicialProcess) ).

fof(kb_SUMO_6173,axiom,
    s__instance(s__LegalDecision__t,s__SetOrClass) ).

fof(kb_SUMO_6174,axiom,
    s__instance(s__JudicialProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6175,axiom,
    s__subclass(s__LegalDecision,s__Declaring) ).

fof(kb_SUMO_6176,axiom,
    s__documentation(s__LegalDecision,s__EnglishLanguage,'A decision issued by a court with respect to a &%LegalAction. Note that a &%LegalDecision is the act of &%Declaring a decision of a court, it is not the act of judge or jury &%Deciding the merits of a particular &%LegalAction.') ).

fof(kb_SUMO_6177,axiom,
    ! [V__DECISION] :
      ( s__instance(V__DECISION,s__LegalDecision)
     => ? [V__ACTION] :
          ( s__instance(V__ACTION,s__LegalAction)
          & s__refers(V__DECISION,V__ACTION) ) ) ).

fof(kb_SUMO_6178,axiom,
    ! [V__DECISION] :
      ( s__instance(V__DECISION,s__Physical)
     => ( s__instance(V__DECISION,s__LegalDecision)
       => ? [V__DECIDE] :
            ( s__instance(V__DECIDE,s__Physical)
            & s__instance(V__DECIDE,s__Deciding)
            & s__earlier(s__WhenFn(V__DECIDE),s__WhenFn(V__DECISION)) ) ) ) ).

fof(kb_SUMO_6179,axiom,
    s__subclass(s__MilitaryProcess,s__PoliticalProcess) ).

fof(kb_SUMO_6180,axiom,
    s__instance(s__MilitaryProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6181,axiom,
    s__subclass(s__MilitaryProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_6182,axiom,
    s__documentation(s__MilitaryProcess,s__EnglishLanguage,'Any &%Process that is carried out by a military organization. Note that this class covers &%Processes, e.g. military operations, that are the result of careful planning, as well as those which are unscripted.') ).

fof(kb_SUMO_6183,axiom,
    s__subclass(s__RegulatoryProcess,s__Guiding) ).

fof(kb_SUMO_6184,axiom,
    s__instance(s__RegulatoryProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6185,axiom,
    s__documentation(s__RegulatoryProcess,s__EnglishLanguage,'an &%Guiding whose aim is the enforcement of rules or regulations. Note the key differences between &%RegulatoryProcess and the related concept &%Managing. The latter implies a long-term relationship between a single manager and limited number of agents who are managed, while the former implies a normative standard to which the activities of the regulated are referred.') ).

fof(kb_SUMO_6186,axiom,
    s__subclass(s__Managing,s__OrganizationalProcess) ).

fof(kb_SUMO_6187,axiom,
    s__subclass(s__Managing,s__Guiding) ).

fof(kb_SUMO_6188,axiom,
    s__instance(s__Managing__t,s__SetOrClass) ).

fof(kb_SUMO_6189,axiom,
    s__documentation(s__Managing,s__EnglishLanguage,'&%OrganizationalProcesses that involve overseeing the activities of others. Note the key differences between &%RegulatoryProcess and its sibling &%Managing. The latter implies a long-term relationship between the manager and the managed, while the former implies a normative standard to which the activities of the regulated are referred.') ).

fof(kb_SUMO_6190,axiom,
    s__subclass(s__Planning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6191,axiom,
    s__instance(s__Planning__t,s__SetOrClass) ).

fof(kb_SUMO_6192,axiom,
    s__documentation(s__Planning,s__EnglishLanguage,'Specifying a set of actions in order to meet a set of goals or objectives.') ).

fof(kb_SUMO_6193,axiom,
    ! [V__EVENT,V__CBO] :
      ( ( s__instance(V__CBO,s__ContentBearingPhysical)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Planning)
          & s__result(V__EVENT,V__CBO)
          & s__instance(V__CBO,s__ContentBearingObject) )
       => ? [V__PLAN] :
            ( s__instance(V__PLAN,s__Proposition)
            & s__instance(V__PLAN,s__Plan)
            & s__containsInformation(V__CBO,V__PLAN) ) ) ) ).

fof(kb_SUMO_6194,axiom,
    s__subclass(s__Designing,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6195,axiom,
    s__instance(s__Designing__t,s__SetOrClass) ).

fof(kb_SUMO_6196,axiom,
    s__documentation(s__Designing,s__EnglishLanguage,'The spatial analogue of &%Planning. &%Designing a &%Collection of &%Objects involves determining a placement of the &%Objects with respect to one another and perhaps other &%Objects as well, in order to satisfy a particular purpose.') ).

fof(kb_SUMO_6197,axiom,
    s__subclass(s__Interpreting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6198,axiom,
    s__instance(s__Interpreting__t,s__SetOrClass) ).

fof(kb_SUMO_6199,axiom,
    s__documentation(s__Interpreting,s__EnglishLanguage,'Any &%Process of assigning a &%Proposition to a &%Text, i.e. understanding the &%Text.') ).

%FOL fof(kb_SUMO_6200,axiom,(( (! [V__CONTENT,V__INTERPRET,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__INTERPRET,s__Process) & s__instance(V__CONTENT,s__ContentBearingPhysical)) => ((s__instance(V__INTERPRET,s__Interpreting) & s__agent(V__INTERPRET,V__AGENT) & s__patient(V__INTERPRET,V__CONTENT) & s__instance(V__CONTENT,s__ContentBearingObject)) => (? [V__PROP] : (s__instance(V__PROP,s__Proposition) & s__holdsDuring(s__EndFn(s__WhenFn(V__INTERPRET)),'s__believes(V__AGENT,s__containsInformation(V__CONTENT,V__PROP))')))))) ))).

fof(kb_SUMO_6201,axiom,
    s__subclass(s__QuantityChange,s__InternalChange) ).

fof(kb_SUMO_6202,axiom,
    s__partition_3(s__QuantityChange,s__Increasing,s__Decreasing) ).

fof(kb_SUMO_6203,axiom,
    s__documentation(s__QuantityChange,s__EnglishLanguage,'Any &%InternalChange where a &%PhysicalQuantity associated with the &%patient is altered.') ).

fof(kb_SUMO_6204,axiom,
    s__subclass(s__Increasing,s__QuantityChange) ).

fof(kb_SUMO_6205,axiom,
    s__relatedInternalConcept(s__Increasing,s__Putting) ).

fof(kb_SUMO_6206,axiom,
    s__documentation(s__Increasing,s__EnglishLanguage,'Any &%QuantityChange where the &%PhysicalQuantity is increased.') ).

fof(kb_SUMO_6207,axiom,
    ! [V__OBJ,V__INCREASE] :
      ( ( s__instance(V__INCREASE,s__Process)
        & s__instance(V__OBJ,s__RealNumber) )
     => ( ( s__instance(V__INCREASE,s__Increasing)
          & s__patient(V__INCREASE,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__INCREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__INCREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & greater(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_6208,axiom,
    s__subclass(s__Heating,s__Increasing) ).

fof(kb_SUMO_6209,axiom,
    s__instance(s__Heating__t,s__SetOrClass) ).

fof(kb_SUMO_6210,axiom,
    s__instance(s__Increasing__t,s__SetOrClass) ).

fof(kb_SUMO_6211,axiom,
    s__disjoint(s__Heating,s__Cooling) ).

fof(kb_SUMO_6212,axiom,
    s__documentation(s__Heating,s__EnglishLanguage,'Any &%Increasing &%Process where the &%PhysicalQuantity increased is a &%TemperatureMeasure.') ).

fof(kb_SUMO_6213,axiom,
    ! [V__HEAT,V__OBJ] :
      ( ( s__instance(V__OBJ,s__RealNumber)
        & s__instance(V__HEAT,s__Process) )
     => ( ( s__instance(V__HEAT,s__Heating)
          & s__patient(V__HEAT,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__UNIT,s__TemperatureMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__HEAT)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__HEAT)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & greater(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_6214,axiom,
    s__subclass(s__Decreasing,s__QuantityChange) ).

fof(kb_SUMO_6215,axiom,
    s__instance(s__QuantityChange__t,s__SetOrClass) ).

fof(kb_SUMO_6216,axiom,
    s__relatedInternalConcept(s__Decreasing,s__Removing) ).

fof(kb_SUMO_6217,axiom,
    s__documentation(s__Decreasing,s__EnglishLanguage,'Any &%QuantityChange where the &%PhysicalQuantity is decreased.') ).

fof(kb_SUMO_6218,axiom,
    ! [V__OBJ,V__DECREASE] :
      ( ( s__instance(V__DECREASE,s__Process)
        & s__instance(V__OBJ,s__RealNumber) )
     => ( ( s__instance(V__DECREASE,s__Decreasing)
          & s__patient(V__DECREASE,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__DECREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__DECREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & less(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_6219,axiom,
    s__subclass(s__Cooling,s__Decreasing) ).

fof(kb_SUMO_6220,axiom,
    s__instance(s__Cooling__t,s__SetOrClass) ).

fof(kb_SUMO_6221,axiom,
    s__instance(s__Decreasing__t,s__SetOrClass) ).

fof(kb_SUMO_6222,axiom,
    s__documentation(s__Cooling,s__EnglishLanguage,'Any &%Decreasing &%Process where the &%PhysicalQuantity decreased is a &%TemperatureMeasure.') ).

fof(kb_SUMO_6223,axiom,
    ! [V__COOL,V__OBJ] :
      ( ( s__instance(V__OBJ,s__RealNumber)
        & s__instance(V__COOL,s__Process) )
     => ( ( s__instance(V__COOL,s__Cooling)
          & s__patient(V__COOL,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__UNIT,s__TemperatureMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__COOL)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__COOL)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & less(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_6224,axiom,
    s__instance(s__moves__m,s__CaseRole) ).

fof(kb_SUMO_6225,axiom,
    s__domain(s__moves__m,"1",s__Motion) ).

fof(kb_SUMO_6226,axiom,
    s__domain(s__moves__m,"2",s__Object) ).

fof(kb_SUMO_6227,axiom,
    s__documentation(s__moves__m,s__EnglishLanguage,'(&%moves ?MOTION ?OBJECT) means that during the &%Motion event ?MOTION, ?OBJECT moves. This does not necessarily imply that the location of ?OBJECT changes during ?MOTION. See also &%changesLocation and &%Translocation.') ).

fof(kb_SUMO_6228,axiom,
    s__subrelation(s__moves__m,s__involvedInEvent__m) ).

fof(kb_SUMO_6229,axiom,
    s__instance(s__changesLocation__m,s__CaseRole) ).

fof(kb_SUMO_6230,axiom,
    s__domain(s__changesLocation__m,"1",s__Translocation) ).

fof(kb_SUMO_6231,axiom,
    s__domain(s__changesLocation__m,"2",s__Object) ).

fof(kb_SUMO_6232,axiom,
    s__documentation(s__changesLocation__m,s__EnglishLanguage,'(&%changesLocation ?EVENT ?OBJECT) means that during the &%Translocation event ?EVENT, ?OBJECTs location changes. ?OBJECT might also be the &%agent, &%patient, or &%experiencer of ?EVENT.') ).

fof(kb_SUMO_6233,axiom,
    s__subrelation(s__changesLocation__m,s__moves__m) ).

fof(kb_SUMO_6234,axiom,
    s__subclass(s__Motion,s__Process) ).

fof(kb_SUMO_6235,axiom,
    s__instance(s__Motion__t,s__SetOrClass) ).

fof(kb_SUMO_6236,axiom,
    s__instance(s__Process__t,s__SetOrClass) ).

fof(kb_SUMO_6237,axiom,
    s__documentation(s__Motion,s__EnglishLanguage,'Any &%Process of movement.') ).

fof(kb_SUMO_6238,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Motion)
     => ? [V__OBJ] :
          ( s__instance(V__OBJ,s__Object)
          & s__moves(V__MOTION,V__OBJ) ) ) ).

%FOL fof(kb_SUMO_6239,axiom,(( (! [V__OBJ,V__MOTION,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MOTION,s__Motion) & s__moves(V__MOTION,V__OBJ) & s__origin(V__MOTION,V__PLACE)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOTION)),'s__located(V__OBJ,V__PLACE)')))) ))).

%FOL fof(kb_SUMO_6240,axiom,(( (! [V__OBJ,V__MOTION,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MOTION,s__Motion) & s__moves(V__MOTION,V__OBJ) & s__destination(V__MOTION,V__PLACE)) => s__holdsDuring(s__EndFn(s__WhenFn(V__MOTION)),'s__located(V__OBJ,V__PLACE)')))) ))).

fof(kb_SUMO_6241,axiom,
    s__subclass(s__MotionUpward,s__Motion) ).

fof(kb_SUMO_6242,axiom,
    s__instance(s__MotionUpward__t,s__SetOrClass) ).

fof(kb_SUMO_6243,axiom,
    s__disjoint(s__MotionUpward,s__MotionDownward) ).

fof(kb_SUMO_6244,axiom,
    s__documentation(s__MotionUpward,s__EnglishLanguage,'&%Motion where an &%Object is moving away from the ground.') ).

fof(kb_SUMO_6245,axiom,
    s__subclass(s__MotionDownward,s__Motion) ).

fof(kb_SUMO_6246,axiom,
    s__instance(s__MotionDownward__t,s__SetOrClass) ).

fof(kb_SUMO_6247,axiom,
    s__documentation(s__MotionDownward,s__EnglishLanguage,'&%Motion where an &%Object is moving toward the ground.') ).

fof(kb_SUMO_6248,axiom,
    s__instance(s__path__m,s__CaseRole) ).

fof(kb_SUMO_6249,axiom,
    s__subrelation(s__path__m,s__eventPartlyLocated__m) ).

fof(kb_SUMO_6250,axiom,
    s__domain(s__path__m,"1",s__Motion) ).

fof(kb_SUMO_6251,axiom,
    s__domain(s__path__m,"2",s__Object) ).

fof(kb_SUMO_6252,axiom,
    s__documentation(s__path__m,s__EnglishLanguage,'(&%path ?MOTION ?PATH) means that ?PATH is a route along which ?MOTION occurs. For example, Highway 101 is the path in the following proposition: the car drove up Highway 101.') ).

fof(kb_SUMO_6253,axiom,
    ! [V__PATH1,V__MEASURE1,V__PROCESS,V__DISTANCE,V__SOURCE,V__DEST] :
      ( ( s__path(V__PROCESS,V__PATH1)
        & s__origin(V__PROCESS,V__SOURCE)
        & s__destination(V__PROCESS,V__DEST)
        & s__length(V__PATH1,V__MEASURE1)
        & s__distance(V__SOURCE,V__DEST,V__DISTANCE)
        & ~ greater(V__MEASURE1,V__DISTANCE) )
     => ! [V__OBJ] :
          ( ( s__instance(V__OBJ,s__Object)
            & s__instance(V__DEST,s__Object)
            & s__instance(V__SOURCE,s__Object)
            & s__instance(V__DISTANCE,s__LengthMeasure)
            & s__instance(V__PROCESS,s__Motion)
            & s__instance(V__MEASURE1,s__LengthMeasure)
            & s__instance(V__PATH1,s__Object) )
         => ( s__part(V__OBJ,V__PATH1)
           => s__between(V__SOURCE,V__OBJ,V__DEST) ) ) ) ).

fof(kb_SUMO_6254,axiom,
    s__subclass(s__BodyMotion,s__Motion) ).

fof(kb_SUMO_6255,axiom,
    s__documentation(s__BodyMotion,s__EnglishLanguage,'Any &%Motion where the &%agent is an &%Organism and the &%patient is a &%BodyPart.') ).

fof(kb_SUMO_6256,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Motion)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__BodyMotion)
          & s__moves(V__MOTION,V__OBJ) )
       => ( s__instance(V__OBJ,s__BodyPart)
          & s__patient(V__MOTION,V__OBJ) ) ) ) ).

fof(kb_SUMO_6257,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Process)
     => ( s__instance(V__MOTION,s__BodyMotion)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__Organism)
            & s__agent(V__MOTION,V__AGENT) ) ) ) ).

fof(kb_SUMO_6258,axiom,
    s__subclass(s__VocalCords,s__Organ) ).

fof(kb_SUMO_6259,axiom,
    s__instance(s__VocalCords__t,s__SetOrClass) ).

fof(kb_SUMO_6260,axiom,
    s__documentation(s__VocalCords,s__EnglishLanguage,'The vocal cords, are composed of two folds of mucous membrane stretched horizontally across the larynx. They vibrate, modulating the flow of air being expelled from the lungs during &%Vocalizing. ') ).

fof(kb_SUMO_6261,axiom,
    s__typicalPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_6262,axiom,
    s__typicallyContainsPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_6263,axiom,
    s__initialPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_6264,axiom,
    s__subclass(s__Vocalizing,s__RadiatingSound) ).

fof(kb_SUMO_6265,axiom,
    s__instance(s__Vocalizing__t,s__SetOrClass) ).

fof(kb_SUMO_6266,axiom,
    s__documentation(s__Vocalizing,s__EnglishLanguage,'Any instance of &%RadiatingSound where the instrument is the vocal cord. This covers grunts, screams, raors, as well as &%Speaking.') ).

fof(kb_SUMO_6267,axiom,
    ! [V__VOCAL] :
      ( ( s__instance(V__VOCAL,s__Process)
        & s__instance(V__VOCAL,s__Object) )
     => ( s__instance(V__VOCAL,s__Vocalizing)
       => ? [V__CORD,V__ORGANISM] :
            ( s__instance(V__ORGANISM,s__Object)
            & s__instance(V__CORD,s__Object)
            & s__instance(V__CORD,s__VocalCords)
            & s__instrument(V__VOCAL,V__CORD)
            & s__part(V__VOCAL,V__ORGANISM)
            & s__instance(V__ORGANISM,s__Organism) ) ) ) ).

fof(kb_SUMO_6268,axiom,
    s__subclass(s__Speaking,s__LinguisticCommunication) ).

fof(kb_SUMO_6269,axiom,
    s__instance(s__Speaking__t,s__SetOrClass) ).

fof(kb_SUMO_6270,axiom,
    s__subclass(s__Speaking,s__Vocalizing) ).

fof(kb_SUMO_6271,axiom,
    s__documentation(s__Speaking,s__EnglishLanguage,'Any &%LinguisticCommunication by a &%Human which involves his/her vocal cords.') ).

fof(kb_SUMO_6272,axiom,
    s__subclass(s__Ambulating,s__BodyMotion) ).

fof(kb_SUMO_6273,axiom,
    s__instance(s__BodyMotion__t,s__SetOrClass) ).

fof(kb_SUMO_6274,axiom,
    s__subclass(s__Ambulating,s__Translocation) ).

fof(kb_SUMO_6275,axiom,
    s__partition_3(s__Ambulating,s__Walking,s__Running) ).

fof(kb_SUMO_6276,axiom,
    s__documentation(s__Ambulating,s__EnglishLanguage,'Any &%BodyMotion which is accomplished by means of the legs of an &%Animal for the purpose of moving from one point to another.') ).

fof(kb_SUMO_6277,axiom,
    s__subclass(s__Walking,s__Ambulating) ).

fof(kb_SUMO_6278,axiom,
    s__instance(s__Walking__t,s__SetOrClass) ).

fof(kb_SUMO_6279,axiom,
    s__documentation(s__Walking,s__EnglishLanguage,'&%Ambulating relatively slowly, i.e. moving in such a way that at least one foot is always in contact with the ground.') ).

fof(kb_SUMO_6280,axiom,
    s__subclass(s__Running,s__Ambulating) ).

fof(kb_SUMO_6281,axiom,
    s__instance(s__Running__t,s__SetOrClass) ).

fof(kb_SUMO_6282,axiom,
    s__instance(s__Ambulating__t,s__SetOrClass) ).

fof(kb_SUMO_6283,axiom,
    s__documentation(s__Running,s__EnglishLanguage,'&%Ambulating relatively quickly, i.e. moving in such a way that, with each step, neither foot is in contact with the ground for a period of time.') ).

%FOL fof(kb_SUMO_6284,axiom,(( (! [V__RUN,V__TIME,V__AGENT,V__LENGTH1,V__LENGTH2,V__WALK] : ((s__instance(V__WALK,s__Process) & s__instance(V__LENGTH2,s__LengthMeasure) & s__instance(V__LENGTH1,s__LengthMeasure) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimeDuration) & s__instance(V__RUN,s__Process)) => ((s__instance(V__WALK,s__Walking) & s__instance(V__RUN,s__Running) & s__agent(V__WALK,V__AGENT) & s__agent(V__RUN,V__AGENT) & s__holdsDuring(s__WhenFn(V__WALK),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH1,V__TIME))') & s__holdsDuring(s__WhenFn(V__RUN),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH2,V__TIME))')) => greater(V__LENGTH2,V__LENGTH1)))) ))).

fof(kb_SUMO_6285,axiom,
    s__subclass(s__Swimming,s__BodyMotion) ).

fof(kb_SUMO_6286,axiom,
    s__instance(s__Swimming__t,s__SetOrClass) ).

fof(kb_SUMO_6287,axiom,
    s__documentation(s__Swimming,s__EnglishLanguage,'Any deliberate and controlled &%BodyMotion through water that is accomplished by an &%Organism.') ).

fof(kb_SUMO_6288,axiom,
    ! [V__AGENT,V__SWIM] :
      ( ( s__instance(V__SWIM,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__SWIM,s__Swimming)
          & s__agent(V__SWIM,V__AGENT) )
       => ? [V__AREA] :
            ( s__instance(V__AREA,s__Object)
            & s__instance(V__AREA,s__WaterArea)
            & s__located(V__AGENT,V__AREA) ) ) ) ).

fof(kb_SUMO_6289,axiom,
    s__subclass(s__Dancing,s__BodyMotion) ).

fof(kb_SUMO_6290,axiom,
    s__instance(s__Dancing__t,s__SetOrClass) ).

fof(kb_SUMO_6291,axiom,
    s__documentation(s__Dancing,s__EnglishLanguage,'Any &%BodyMotion of &%Humans which is deliberately coordinated with music.') ).

fof(kb_SUMO_6292,axiom,
    s__subclass(s__GeologicalProcess,s__Motion) ).

fof(kb_SUMO_6293,axiom,
    s__instance(s__GeologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6294,axiom,
    s__subclass(s__GeologicalProcess,s__InternalChange) ).

fof(kb_SUMO_6295,axiom,
    s__disjoint(s__GeologicalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6296,axiom,
    s__documentation(s__GeologicalProcess,s__EnglishLanguage,'The class of activities that are caused by geological forces and affect geological features, and which may affect the biosphere as well.') ).

fof(kb_SUMO_6297,axiom,
    s__subclass(s__WeatherProcess,s__Motion) ).

fof(kb_SUMO_6298,axiom,
    s__disjoint(s__WeatherProcess,s__IntentionalProcess) ).

fof(kb_SUMO_6299,axiom,
    s__documentation(s__WeatherProcess,s__EnglishLanguage,'&%WeatherProcess is the broadest class of processes that involve weather, including weather seasons (not to be confused with instances of &%SeasonOfYear), weather systems, and short-term weather events.') ).

fof(kb_SUMO_6300,axiom,
    s__subclass(s__Precipitation,s__WeatherProcess) ).

fof(kb_SUMO_6301,axiom,
    s__instance(s__Precipitation__t,s__SetOrClass) ).

fof(kb_SUMO_6302,axiom,
    s__instance(s__WeatherProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6303,axiom,
    s__subclass(s__Precipitation,s__WaterMotion) ).

fof(kb_SUMO_6304,axiom,
    s__subclass(s__Precipitation,s__Falling) ).

fof(kb_SUMO_6305,axiom,
    s__documentation(s__Precipitation,s__EnglishLanguage,'&%Precipitation is the process of water molecules falling from the air to the ground, in either a liquid or frozen state.') ).

fof(kb_SUMO_6306,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Precipitation)
       => ? [V__STUFF] :
            ( s__instance(V__STUFF,s__Water)
            & s__patient(V__PROCESS,V__STUFF) ) ) ) ).

fof(kb_SUMO_6307,axiom,
    s__subclass(s__LiquidMotion,s__Motion) ).

fof(kb_SUMO_6308,axiom,
    s__documentation(s__LiquidMotion,s__EnglishLanguage,'Any &%Motion where the &%patient is a &%Liquid. This class would cover, in particular, the flow of &%Water.') ).

fof(kb_SUMO_6309,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__LiquidMotion)
          & s__patient(V__MOTION,V__OBJ) )
       => s__attribute(V__OBJ,s__Liquid) ) ) ).

fof(kb_SUMO_6310,axiom,
    s__subclass(s__WaterMotion,s__LiquidMotion) ).

fof(kb_SUMO_6311,axiom,
    s__instance(s__WaterMotion__t,s__SetOrClass) ).

fof(kb_SUMO_6312,axiom,
    s__instance(s__LiquidMotion__t,s__SetOrClass) ).

fof(kb_SUMO_6313,axiom,
    s__documentation(s__WaterMotion,s__EnglishLanguage,'Any &%LiquidMotion where the &%Liquid is &%Water.') ).

fof(kb_SUMO_6314,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Process)
     => ( s__instance(V__MOTION,s__WaterMotion)
       => ? [V__WATER] :
            ( s__patient(V__MOTION,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_6315,axiom,
    s__subclass(s__GasMotion,s__Motion) ).

fof(kb_SUMO_6316,axiom,
    s__instance(s__GasMotion__t,s__SetOrClass) ).

fof(kb_SUMO_6317,axiom,
    s__documentation(s__GasMotion,s__EnglishLanguage,'Any &%Motion where the &%patient is a &%Gas. This class would cover, in particular, the motion of &%Air, e.g. a breeze or wind.') ).

fof(kb_SUMO_6318,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__GasMotion)
          & s__patient(V__MOTION,V__OBJ) )
       => s__attribute(V__OBJ,s__Gas) ) ) ).

fof(kb_SUMO_6319,axiom,
    s__subclass(s__Wind,s__GasMotion) ).

fof(kb_SUMO_6320,axiom,
    s__instance(s__Wind__t,s__SetOrClass) ).

fof(kb_SUMO_6321,axiom,
    s__documentation(s__Wind,s__EnglishLanguage,'Any &%Motion of &%Air.') ).

fof(kb_SUMO_6322,axiom,
    s__subclass(s__DirectionChange,s__Motion) ).

fof(kb_SUMO_6323,axiom,
    s__instance(s__DirectionChange__t,s__SetOrClass) ).

fof(kb_SUMO_6324,axiom,
    s__documentation(s__DirectionChange,s__EnglishLanguage,'The act of changing the direction in which the &%patient of the act is oriented.') ).

%FOL fof(kb_SUMO_6325,axiom,(( (! [V__PROC] : (s__instance(V__PROC,s__Process) => (s__instance(V__PROC,s__DirectionChange) => (? [V__ATTR] : (s__instance(V__ATTR,s__Attribute) & s__instance(V__ATTR,s__DirectionalAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'s__manner(V__PROC,V__ATTR)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'(~ s__manner(V__PROC,V__ATTR))')) | (s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'s__manner(V__PROC,V__ATTR)') & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'(~ s__manner(V__PROC,V__ATTR))')))))))) ))).

fof(kb_SUMO_6326,axiom,
    s__subclass(s__Transfer,s__Translocation) ).

fof(kb_SUMO_6327,axiom,
    s__instance(s__Translocation__t,s__SetOrClass) ).

fof(kb_SUMO_6328,axiom,
    s__documentation(s__Transfer,s__EnglishLanguage,'Any &%instance of &%Translocation where the &%agent and the &%patient are not the same thing.') ).

fof(kb_SUMO_6329,axiom,
    ! [V__PATIENT,V__AGENT,V__TRANSFER] :
      ( ( s__instance(V__TRANSFER,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__TRANSFER,s__Transfer)
          & s__agent(V__TRANSFER,V__AGENT)
          & s__patient(V__TRANSFER,V__PATIENT) )
       => V__AGENT != V__PATIENT ) ) ).

fof(kb_SUMO_6330,axiom,
    ! [V__P,V__T2,V__T1,V__D1,V__D2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__D1,s__Object)
        & s__instance(V__T1,s__Process)
        & s__instance(V__T2,s__Process)
        & s__instance(V__P,s__Agent) )
     => ( ( s__instance(V__T1,s__Translocation)
          & s__instance(V__T2,s__Translocation)
          & s__origin(V__T1,V__O1)
          & s__origin(V__T2,V__D1)
          & s__destination(V__T1,V__D1)
          & s__destination(V__T2,V__D2)
          & s__experiencer(V__T1,V__P)
          & s__experiencer(V__T2,V__P) )
       => ? [V__T] :
            ( s__instance(V__T,s__Process)
            & s__instance(V__T,s__Translocation)
            & s__origin(V__T,V__O1)
            & s__destination(V__T,V__D2)
            & s__subProcess(V__T1,V__T)
            & s__subProcess(V__T2,V__T)
            & s__experiencer(V__T,V__P)
            & s__starts(s__WhenFn(V__T1),s__WhenFn(V__T))
            & s__finishes(s__WhenFn(V__T2),s__WhenFn(V__T)) ) ) ) ).

fof(kb_SUMO_6331,axiom,
    s__subclass(s__Carrying,s__Transfer) ).

fof(kb_SUMO_6332,axiom,
    s__instance(s__Carrying__t,s__SetOrClass) ).

fof(kb_SUMO_6333,axiom,
    s__instance(s__Transfer__t,s__SetOrClass) ).

fof(kb_SUMO_6334,axiom,
    s__documentation(s__Carrying,s__EnglishLanguage,'&%Transfer from one point to another by means of an &%Animal or &%Human.') ).

fof(kb_SUMO_6335,axiom,
    ! [V__CARRY] :
      ( s__instance(V__CARRY,s__Process)
     => ( s__instance(V__CARRY,s__Carrying)
       => ? [V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__Object)
            & s__instance(V__ANIMAL,s__Animal)
            & s__instrument(V__CARRY,V__ANIMAL) ) ) ) ).

fof(kb_SUMO_6336,axiom,
    s__subclass(s__Removing,s__Transfer) ).

fof(kb_SUMO_6337,axiom,
    s__documentation(s__Removing,s__EnglishLanguage,'The &%Class of &%Processes where something is taken away from a location. Note that the thing removed and the location are specified with the &%CaseRoles &%patient and &%origin, respectively.') ).

%FOL fof(kb_SUMO_6338,axiom,(( (! [V__OBJ,V__PLACE,V__REMOVE] : ((s__instance(V__REMOVE,s__Process) & s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__REMOVE,s__Removing) & s__origin(V__REMOVE,V__PLACE) & s__patient(V__REMOVE,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__REMOVE)),'s__located(V__OBJ,V__PLACE)') & s__holdsDuring(s__EndFn(s__WhenFn(V__REMOVE)),'(~ s__located(V__OBJ,V__PLACE))'))))) ))).

fof(kb_SUMO_6339,axiom,
    s__subclass(s__Uncovering,s__Removing) ).

fof(kb_SUMO_6340,axiom,
    s__instance(s__Uncovering__t,s__SetOrClass) ).

fof(kb_SUMO_6341,axiom,
    s__disjoint(s__Uncovering,s__Covering) ).

fof(kb_SUMO_6342,axiom,
    s__documentation(s__Uncovering,s__EnglishLanguage,'The &%Class of &%Removing processes where the &%agent uncovers the &%patient, either completely or only partially.') ).

fof(kb_SUMO_6343,axiom,
    s__subclass(s__Putting,s__Transfer) ).

fof(kb_SUMO_6344,axiom,
    s__instance(s__Putting__t,s__SetOrClass) ).

fof(kb_SUMO_6345,axiom,
    s__documentation(s__Putting,s__EnglishLanguage,'The &%Class of &%Processes where something is put in a location. Note that the location is specified with the &%CaseRole &%destination.') ).

%FOL fof(kb_SUMO_6346,axiom,(( (! [V__OBJ,V__PUT,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__PUT,s__Process) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__PUT,s__Putting) & s__destination(V__PUT,V__PLACE) & s__patient(V__PUT,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__PUT)),'(~ s__located(V__OBJ,V__PLACE))') & s__holdsDuring(s__EndFn(s__WhenFn(V__PUT)),'s__located(V__OBJ,V__PLACE)'))))) ))).

fof(kb_SUMO_6347,axiom,
    s__subclass(s__Covering,s__Putting) ).

fof(kb_SUMO_6348,axiom,
    s__instance(s__Covering__t,s__SetOrClass) ).

fof(kb_SUMO_6349,axiom,
    s__documentation(s__Covering,s__EnglishLanguage,'The &%Class of &%Putting processes where the &%agent covers the &%patient, either completely or only partially, with something else.') ).

fof(kb_SUMO_6350,axiom,
    s__subclass(s__Inserting,s__Putting) ).

fof(kb_SUMO_6351,axiom,
    s__instance(s__Inserting__t,s__SetOrClass) ).

fof(kb_SUMO_6352,axiom,
    s__documentation(s__Inserting,s__EnglishLanguage,'&%Putting one thing inside of another thing.') ).

%FOL fof(kb_SUMO_6353,axiom,(( (! [V__INSERT,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__SelfConnectedObject) & s__instance(V__OBJ1,s__Object) & s__instance(V__INSERT,s__Process)) => ((s__instance(V__INSERT,s__Inserting) & s__patient(V__INSERT,V__OBJ1) & s__destination(V__INSERT,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__INSERT)),'(~ s__contains(V__OBJ2,V__OBJ1))') & s__holdsDuring(s__EndFn(s__WhenFn(V__INSERT)),'s__contains(V__OBJ2,V__OBJ1)'))))) ))).

fof(kb_SUMO_6354,axiom,
    s__subclass(s__Injecting,s__Inserting) ).

fof(kb_SUMO_6355,axiom,
    s__instance(s__Injecting__t,s__SetOrClass) ).

fof(kb_SUMO_6356,axiom,
    s__documentation(s__Injecting,s__EnglishLanguage,'&%Inserting a &%BiologicallyActiveSubstance into an &%Animal or a &%Human with a syringe.') ).

fof(kb_SUMO_6357,axiom,
    ! [V__INJECT] :
      ( s__instance(V__INJECT,s__Process)
     => ( s__instance(V__INJECT,s__Injecting)
       => ? [V__SUBSTANCE,V__ANIMAL] :
            ( s__instance(V__SUBSTANCE,s__Object)
            & s__patient(V__INJECT,V__SUBSTANCE)
            & s__instance(V__SUBSTANCE,s__BiologicallyActiveSubstance)
            & s__attribute(V__SUBSTANCE,s__Liquid)
            & s__destination(V__INJECT,V__ANIMAL)
            & s__instance(V__ANIMAL,s__Animal) ) ) ) ).

fof(kb_SUMO_6358,axiom,
    s__subclass(s__Substituting,s__Transfer) ).

fof(kb_SUMO_6359,axiom,
    s__subclass(s__Substituting,s__DualObjectProcess) ).

fof(kb_SUMO_6360,axiom,
    s__instance(s__Substituting__t,s__SetOrClass) ).

fof(kb_SUMO_6361,axiom,
    s__instance(s__DualObjectProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6362,axiom,
    s__documentation(s__Substituting,s__EnglishLanguage,'The &%Class of &%Transfers where one thing is replaced with something else.') ).

fof(kb_SUMO_6363,axiom,
    ! [V__SUB] :
      ( s__instance(V__SUB,s__Process)
     => ( s__instance(V__SUB,s__Substituting)
       => ? [V__PUT,V__REMOVE,V__OBJ1,V__OBJ2,V__PLACE] :
            ( s__instance(V__PLACE,s__Object)
            & s__instance(V__REMOVE,s__Process)
            & s__instance(V__PUT,s__Process)
            & s__instance(V__PUT,s__Putting)
            & s__instance(V__REMOVE,s__Removing)
            & s__subProcess(V__PUT,V__SUB)
            & s__subProcess(V__REMOVE,V__SUB)
            & s__patient(V__REMOVE,V__OBJ1)
            & s__origin(V__REMOVE,V__PLACE)
            & s__patient(V__PUT,V__OBJ2)
            & s__destination(V__PUT,V__PLACE)
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_6364,axiom,
    s__subclass(s__Impelling,s__Transfer) ).

fof(kb_SUMO_6365,axiom,
    s__instance(s__Impelling__t,s__SetOrClass) ).

fof(kb_SUMO_6366,axiom,
    s__documentation(s__Impelling,s__EnglishLanguage,'The &%subclass of &%Transfer where the &%patient travels through space by means of a sudden, forceful event. Some examples would be shooting, throwing, tossing, etc.') ).

fof(kb_SUMO_6367,axiom,
    s__subclass(s__Shooting,s__Impelling) ).

fof(kb_SUMO_6368,axiom,
    s__instance(s__Shooting__t,s__SetOrClass) ).

fof(kb_SUMO_6369,axiom,
    s__documentation(s__Shooting,s__EnglishLanguage,'The &%subclass of &%Impelling where the &%patient is a projectile that is fired through the air by means of some sort of &%Device.') ).

fof(kb_SUMO_6370,axiom,
    s__subclass(s__Touching,s__Transfer) ).

fof(kb_SUMO_6371,axiom,
    s__instance(s__Touching__t,s__SetOrClass) ).

fof(kb_SUMO_6372,axiom,
    s__documentation(s__Touching,s__EnglishLanguage,'Any &%Transfer where two &%Objects are brought into immediate physical contact with one another.') ).

%FOL fof(kb_SUMO_6373,axiom,(( (! [V__OBJ1,V__OBJ2,V__TOUCH] : ((s__instance(V__TOUCH,s__Process) & s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Agent)) => ((s__instance(V__TOUCH,s__Touching) & s__agent(V__TOUCH,V__OBJ1) & s__patient(V__TOUCH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__TOUCH)),'(~ s__connected(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__TOUCH)),'s__connected(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_6374,axiom,
    s__subrelation(s__grasps__m,s__meetsSpatially__m) ).

fof(kb_SUMO_6375,axiom,
    s__domain(s__grasps__m,"1",s__Animal) ).

fof(kb_SUMO_6376,axiom,
    s__domain(s__grasps__m,"2",s__Object) ).

fof(kb_SUMO_6377,axiom,
    s__documentation(s__grasps__m,s__EnglishLanguage,'The state of grasping an &%Object. (&%grasps ?ANIMAL ?OBJ) means that the &%Animal ?ANIMAL is intentionally holding on to the &%Object ?OBJ.') ).

fof(kb_SUMO_6378,axiom,
    s__subclass(s__Grabbing,s__Touching) ).

fof(kb_SUMO_6379,axiom,
    s__subclass(s__Grabbing,s__Attaching) ).

fof(kb_SUMO_6380,axiom,
    s__instance(s__Grabbing__t,s__SetOrClass) ).

fof(kb_SUMO_6381,axiom,
    s__documentation(s__Grabbing,s__EnglishLanguage,'Any instance of &%Touching which results in a situation where the &%agent &%grasps the &%patient of the &%Touching.') ).

%FOL fof(kb_SUMO_6382,axiom,(( (! [V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process)) => ((s__instance(V__GRAB,s__Grabbing) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__GRAB)),'(~ s__grasps(V__AGENT,V__THING))') & s__holdsDuring(s__EndFn(s__WhenFn(V__GRAB)),'s__grasps(V__AGENT,V__THING)'))))) ))).

fof(kb_SUMO_6383,axiom,
    s__subclass(s__Releasing,s__Transfer) ).

fof(kb_SUMO_6384,axiom,
    s__instance(s__Releasing__t,s__SetOrClass) ).

fof(kb_SUMO_6385,axiom,
    s__documentation(s__Releasing,s__EnglishLanguage,'Any instance of &%Transfer which results in a situation where it is not the case that the &%agent &%grasps something which he/she &%grasps previously.') ).

%FOL fof(kb_SUMO_6386,axiom,(( (! [V__RELEASE,V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process) & s__instance(V__RELEASE,s__Physical)) => ((s__instance(V__RELEASE,s__Releasing) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__RELEASE)),'s__grasps(V__AGENT,V__THING)') & s__holdsDuring(s__EndFn(s__WhenFn(V__RELEASE)),'(~ s__grasps(V__AGENT,V__THING))'))))) ))).

fof(kb_SUMO_6387,axiom,
    s__subclass(s__Impacting,s__Touching) ).

fof(kb_SUMO_6388,axiom,
    s__instance(s__Impacting__t,s__SetOrClass) ).

fof(kb_SUMO_6389,axiom,
    s__documentation(s__Impacting,s__EnglishLanguage,'Any &%Touching where something comes into sudden, forceful, physical contact with something else. Some examples would be striking, knocking, whipping etc.') ).

fof(kb_SUMO_6390,axiom,
    ! [V__OBJ,V__IMPACT] :
      ( s__instance(V__IMPACT,s__Process)
     => ( ( s__instance(V__IMPACT,s__Impacting)
          & s__patient(V__IMPACT,V__OBJ) )
       => ? [V__IMPEL] :
            ( s__instance(V__IMPEL,s__Process)
            & s__instance(V__IMPEL,s__Impelling)
            & s__patient(V__IMPEL,V__OBJ)
            & s__earlier(s__WhenFn(V__IMPEL),s__WhenFn(V__IMPACT)) ) ) ) ).

fof(kb_SUMO_6391,axiom,
    s__subclass(s__Translocation,s__Motion) ).

fof(kb_SUMO_6392,axiom,
    s__documentation(s__Translocation,s__EnglishLanguage,'&%Translocation is that class of &%Motions in which an object moves from one place to another. In the case of round trips, the &%origin and &%destination are the same, but the intervening motion passes through other locations. &%Translocation represents linear motion, in contrast to rotation or other movement in place. A vehicle is not necessary, &%Ambulating is a kind of &%Translocation.') ).

fof(kb_SUMO_6393,axiom,
    ! [V__MOVEMENT,V__PLACE1] :
      ( ( s__instance(V__PLACE1,s__Object)
        & s__instance(V__MOVEMENT,s__Process) )
     => ( ( s__instance(V__MOVEMENT,s__Translocation)
          & s__origin(V__MOVEMENT,V__PLACE1) )
       => ? [V__PLACE2,V__STAGE] :
            ( s__instance(V__STAGE,s__Process)
            & s__instance(V__PLACE2,s__Object)
            & s__instance(V__PLACE2,s__Region)
            & V__PLACE1 != V__PLACE2
            & s__subProcess(V__STAGE,V__MOVEMENT)
            & s__located(V__STAGE,V__PLACE2) ) ) ) ).

fof(kb_SUMO_6394,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Motion)
     => ( s__instance(V__T,s__Translocation)
       => ? [V__O,V__D,V__P] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__D,s__Object)
            & s__instance(V__P,s__Object)
            & s__path(V__T,V__P)
            & s__origin(V__T,V__O)
            & s__destination(V__T,V__D) ) ) ) ).

fof(kb_SUMO_6395,axiom,
    s__subclass(s__Falling,s__Translocation) ).

fof(kb_SUMO_6396,axiom,
    s__subclass(s__Falling,s__MotionDownward) ).

fof(kb_SUMO_6397,axiom,
    s__instance(s__Falling__t,s__SetOrClass) ).

fof(kb_SUMO_6398,axiom,
    s__documentation(s__Falling,s__EnglishLanguage,'&%Falling is the class of events in which something moves from a higher location to a lower location under the force of gravity.') ).

fof(kb_SUMO_6399,axiom,
    ! [V__START,V__FINISH,V__DROP] :
      ( ( s__instance(V__DROP,s__Process)
        & s__instance(V__FINISH,s__Object)
        & s__instance(V__START,s__Object) )
     => ( ( s__instance(V__DROP,s__Falling)
          & s__origin(V__DROP,V__START)
          & s__destination(V__DROP,V__FINISH) )
       => s__orientation(V__FINISH,V__START,s__Below) ) ) ).

fof(kb_SUMO_6400,axiom,
    s__subclass(s__Transportation,s__Translocation) ).

fof(kb_SUMO_6401,axiom,
    s__instance(s__Transportation__t,s__SetOrClass) ).

fof(kb_SUMO_6402,axiom,
    s__relatedInternalConcept(s__Transportation,s__TransportationDevice) ).

fof(kb_SUMO_6403,axiom,
    s__documentation(s__Transportation,s__EnglishLanguage,'&%Motion from one point to another by means of a &%TransportationDevice.') ).

fof(kb_SUMO_6404,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__Transportation)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__Object)
            & s__instance(V__DEVICE,s__TransportationDevice)
            & s__instrument(V__TRANS,V__DEVICE) ) ) ) ).

fof(kb_SUMO_6405,axiom,
    s__subclass(s__Guiding,s__IntentionalProcess) ).

fof(kb_SUMO_6406,axiom,
    s__instance(s__Guiding__t,s__SetOrClass) ).

fof(kb_SUMO_6407,axiom,
    s__instance(s__IntentionalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6408,axiom,
    s__documentation(s__Guiding,s__EnglishLanguage,'Any &%IntentionalProcess where the &%agent tries to direct the behavior of another &%Object, whether an &%Agent or not.') ).

fof(kb_SUMO_6409,axiom,
    s__subclass(s__Driving,s__Guiding) ).

fof(kb_SUMO_6410,axiom,
    s__instance(s__Driving__t,s__SetOrClass) ).

fof(kb_SUMO_6411,axiom,
    s__documentation(s__Driving,s__EnglishLanguage,'Controlling the direction and/or speed of a &%Vehicle. This includes navigating a ship, driving a car or truck, operating a train, etc.') ).

fof(kb_SUMO_6412,axiom,
    ! [V__DRIVE] :
      ( s__instance(V__DRIVE,s__Process)
     => ( s__instance(V__DRIVE,s__Driving)
       => ? [V__VEHICLE] :
            ( s__instance(V__VEHICLE,s__Vehicle)
            & s__patient(V__DRIVE,V__VEHICLE) ) ) ) ).

fof(kb_SUMO_6413,axiom,
    s__subclass(s__EducationalProcess,s__Guiding) ).

fof(kb_SUMO_6414,axiom,
    s__instance(s__EducationalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6415,axiom,
    s__documentation(s__EducationalProcess,s__EnglishLanguage,'Any &%Process which is intended to result in &%Learning.') ).

fof(kb_SUMO_6416,axiom,
    ! [V__PERSON,V__EDUCATION] :
      ( s__instance(V__EDUCATION,s__Process)
     => ( ( s__instance(V__EDUCATION,s__EducationalProcess)
          & s__patient(V__EDUCATION,V__PERSON) )
       => s__hasPurpose(V__EDUCATION,'(? [V__LEARN] : (s__instance(V__LEARN,s__Process) & s__instance(V__LEARN,s__Learning) & s__patient(V__LEARN,V__PERSON)))') ) ) ).

fof(kb_SUMO_6417,axiom,
    s__subclass(s__ChangeOfPossession,s__SocialInteraction) ).

fof(kb_SUMO_6418,axiom,
    s__relatedInternalConcept(s__ChangeOfPossession,s__possesses__m) ).

fof(kb_SUMO_6419,axiom,
    s__documentation(s__ChangeOfPossession,s__EnglishLanguage,'The &%Class of &%Processes where ownership of something is transferred from one &%Agent to another.') ).

%FOL fof(kb_SUMO_6420,axiom,(( (! [V__CHANGE,V__OBJ,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__ChangeOfPossession) & s__patient(V__CHANGE,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT2,V__OBJ)')) => (~ (V__AGENT1 = V__AGENT2))))) ))).

%FOL fof(kb_SUMO_6421,axiom,(( (! [V__CHANGE,V__OBJ,V__AGENT2,V__AGENT1] : ((s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__ChangeOfPossession) & s__origin(V__CHANGE,V__AGENT1) & s__destination(V__CHANGE,V__AGENT2) & s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__patient(V__CHANGE,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT2,V__OBJ)'))))) ))).

fof(kb_SUMO_6422,axiom,
    s__subclass(s__Giving,s__ChangeOfPossession) ).

fof(kb_SUMO_6423,axiom,
    s__documentation(s__Giving,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where the &%agent gives the &%destination something.') ).

fof(kb_SUMO_6424,axiom,
    ! [V__OBJ,V__GIVE,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__GIVE,s__Process) )
     => ( ( s__instance(V__GIVE,s__Giving)
          & s__agent(V__GIVE,V__AGENT1)
          & s__destination(V__GIVE,V__AGENT2)
          & s__instance(V__AGENT2,s__Agent)
          & s__patient(V__GIVE,V__OBJ) )
       => ? [V__GET] :
            ( s__instance(V__GET,s__Process)
            & s__instance(V__GET,s__Getting)
            & s__agent(V__GET,V__AGENT2)
            & s__origin(V__GET,V__AGENT1)
            & s__patient(V__GET,V__OBJ) ) ) ) ).

fof(kb_SUMO_6425,axiom,
    ! [V__GIVE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__GIVE,s__Process) )
     => ( ( s__instance(V__GIVE,s__Giving)
          & s__agent(V__GIVE,V__AGENT) )
       => s__origin(V__GIVE,V__AGENT) ) ) ).

fof(kb_SUMO_6426,axiom,
    s__subclass(s__Funding,s__Giving) ).

fof(kb_SUMO_6427,axiom,
    s__instance(s__Funding__t,s__SetOrClass) ).

fof(kb_SUMO_6428,axiom,
    s__documentation(s__Funding,s__EnglishLanguage,'Any instance of &%Giving where the &%patient is an instance of &%Currency. Note that this class covers both financing, e.g. where a firm funds a software company with venture capital with the agreement that a certain percentage of the profits on the investment will be returned to the firm, and instances of &%UnilateralGiving, e.g. providing a tuition waiver and/or a stipend to a student as part of scholarship or fellowship.') ).

fof(kb_SUMO_6429,axiom,
    ! [V__FUND] :
      ( s__instance(V__FUND,s__Process)
     => ( s__instance(V__FUND,s__Funding)
       => ? [V__MONEY] :
            ( s__instance(V__MONEY,s__Currency)
            & s__patient(V__FUND,V__MONEY) ) ) ) ).

fof(kb_SUMO_6430,axiom,
    s__subclass(s__UnilateralGiving,s__Giving) ).

fof(kb_SUMO_6431,axiom,
    s__instance(s__UnilateralGiving__t,s__SetOrClass) ).

fof(kb_SUMO_6432,axiom,
    s__documentation(s__UnilateralGiving,s__EnglishLanguage,'Any instance of &%Giving that is not part of a &%Transaction. In other words, any instance of &%Giving where nothing is received in return. Some examples of &%UnilateralGiving are: honorary awards, gifts, and financial grants.') ).

fof(kb_SUMO_6433,axiom,
    ! [V__GIVE] :
      ( s__instance(V__GIVE,s__Process)
     => ( s__instance(V__GIVE,s__UnilateralGiving)
       => ~ ? [V__TRANS] :
              ( s__instance(V__TRANS,s__Process)
              & s__instance(V__TRANS,s__Transaction)
              & s__subProcess(V__GIVE,V__TRANS) ) ) ) ).

fof(kb_SUMO_6434,axiom,
    s__subclass(s__Lending,s__Giving) ).

fof(kb_SUMO_6435,axiom,
    s__instance(s__Lending__t,s__SetOrClass) ).

fof(kb_SUMO_6436,axiom,
    s__instance(s__Giving__t,s__SetOrClass) ).

fof(kb_SUMO_6437,axiom,
    s__documentation(s__Lending,s__EnglishLanguage,'The &%subclass of &%Giving &%Processes where the &%agent gives the &%destination something for a limited period of time with the expectation that it will be returned later (perhaps with interest).') ).

fof(kb_SUMO_6438,axiom,
    ! [V__OBJECT,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__AGENT2,s__Agent) )
     => ( ? [V__BORROW] :
            ( s__instance(V__BORROW,s__Process)
            & s__instance(V__BORROW,s__Borrowing)
            & s__agent(V__BORROW,V__AGENT1)
            & s__origin(V__BORROW,V__AGENT2)
            & s__patient(V__BORROW,V__OBJECT) )
      <=> ? [V__LEND] :
            ( s__instance(V__LEND,s__Process)
            & s__instance(V__LEND,s__Lending)
            & s__agent(V__LEND,V__AGENT2)
            & s__destination(V__LEND,V__AGENT1)
            & s__patient(V__LEND,V__OBJECT) ) ) ) ).

fof(kb_SUMO_6439,axiom,
    s__subclass(s__GivingBack,s__Giving) ).

fof(kb_SUMO_6440,axiom,
    s__instance(s__GivingBack__t,s__SetOrClass) ).

fof(kb_SUMO_6441,axiom,
    s__documentation(s__GivingBack,s__EnglishLanguage,'Any instance of &%Giving where the &%agent gives something to the &%destination which was previously given to the &%agent by the &%destination, e.g. returing a book that was borrowed from someone.') ).

fof(kb_SUMO_6442,axiom,
    ! [V__AGENT,V__RETURN,V__DEST] :
      ( ( s__instance(V__DEST,s__Agent)
        & s__instance(V__RETURN,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__RETURN,s__GivingBack)
          & s__agent(V__RETURN,V__AGENT)
          & s__destination(V__RETURN,V__DEST) )
       => ? [V__GIVE] :
            ( s__instance(V__GIVE,s__Process)
            & s__instance(V__GIVE,s__Giving)
            & s__agent(V__GIVE,V__DEST)
            & s__destination(V__GIVE,V__AGENT)
            & s__earlier(s__WhenFn(V__GIVE),s__WhenFn(V__RETURN)) ) ) ) ).

fof(kb_SUMO_6443,axiom,
    s__subclass(s__Getting,s__ChangeOfPossession) ).

fof(kb_SUMO_6444,axiom,
    s__instance(s__Getting__t,s__SetOrClass) ).

fof(kb_SUMO_6445,axiom,
    s__instance(s__ChangeOfPossession__t,s__SetOrClass) ).

fof(kb_SUMO_6446,axiom,
    s__documentation(s__Getting,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where the &%agent gets something. Note that the source from which something is obtained is specified with the &%origin &%CaseRole.') ).

fof(kb_SUMO_6447,axiom,
    ! [V__GET,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__GET,s__Process) )
     => ( ( s__instance(V__GET,s__Getting)
          & s__agent(V__GET,V__AGENT) )
       => s__destination(V__GET,V__AGENT) ) ) ).

fof(kb_SUMO_6448,axiom,
    s__subclass(s__UnilateralGetting,s__Getting) ).

fof(kb_SUMO_6449,axiom,
    s__instance(s__UnilateralGetting__t,s__SetOrClass) ).

fof(kb_SUMO_6450,axiom,
    s__relatedInternalConcept(s__UnilateralGetting,s__UnilateralGiving) ).

fof(kb_SUMO_6451,axiom,
    s__documentation(s__UnilateralGetting,s__EnglishLanguage,'Any instance of &%Getting that is not part of a &%Transaction. In other words, any instance of &%Getting where nothing is given in return. Some examples of &%UnilateralGetting are: appropriating, commandeering, stealing, etc.') ).

fof(kb_SUMO_6452,axiom,
    ! [V__GET] :
      ( s__instance(V__GET,s__Process)
     => ( s__instance(V__GET,s__UnilateralGetting)
       => ~ ? [V__TRANS] :
              ( s__instance(V__TRANS,s__Process)
              & s__instance(V__TRANS,s__Transaction)
              & s__subProcess(V__GET,V__TRANS) ) ) ) ).

fof(kb_SUMO_6453,axiom,
    s__subclass(s__Borrowing,s__Getting) ).

fof(kb_SUMO_6454,axiom,
    s__instance(s__Borrowing__t,s__SetOrClass) ).

fof(kb_SUMO_6455,axiom,
    s__documentation(s__Borrowing,s__EnglishLanguage,'The &%subclass of &%Getting &%Processes where the &%agent gets something for a limited period of time with the expectation that it will be returned later (perhaps with interest).') ).

fof(kb_SUMO_6456,axiom,
    s__subclass(s__Transaction,s__ChangeOfPossession) ).

fof(kb_SUMO_6457,axiom,
    s__subclass(s__Transaction,s__DualObjectProcess) ).

fof(kb_SUMO_6458,axiom,
    s__instance(s__Transaction__t,s__SetOrClass) ).

fof(kb_SUMO_6459,axiom,
    s__documentation(s__Transaction,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where something is exchanged for something else.') ).

fof(kb_SUMO_6460,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__Transaction)
       => ? [V__AGENT1,V__AGENT2,V__GIVE1,V__GIVE2,V__OBJ1,V__OBJ2] :
            ( s__instance(V__GIVE2,s__Process)
            & s__instance(V__GIVE1,s__Process)
            & s__instance(V__AGENT2,s__Agent)
            & s__instance(V__AGENT1,s__Agent)
            & s__instance(V__GIVE1,s__Giving)
            & s__instance(V__GIVE2,s__Giving)
            & s__subProcess(V__GIVE1,V__TRANS)
            & s__subProcess(V__GIVE2,V__TRANS)
            & s__agent(V__GIVE1,V__AGENT1)
            & s__agent(V__GIVE2,V__AGENT2)
            & s__patient(V__GIVE1,V__OBJ1)
            & s__patient(V__GIVE2,V__OBJ2)
            & s__destination(V__GIVE1,V__AGENT2)
            & s__destination(V__GIVE2,V__AGENT1)
            & V__AGENT1 != V__AGENT2
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_6461,axiom,
    s__subclass(s__FinancialTransaction,s__Transaction) ).

fof(kb_SUMO_6462,axiom,
    s__documentation(s__FinancialTransaction,s__EnglishLanguage,'A &%Transaction where an instance of &%FinancialInstrument is the subject of the action, and often is exchanged for something else.') ).

fof(kb_SUMO_6463,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__FinancialTransaction)
       => ? [V__OBJ] :
            ( s__patient(V__TRANS,V__OBJ)
            & s__instance(V__OBJ,s__FinancialInstrument) ) ) ) ).

fof(kb_SUMO_6464,axiom,
    s__instance(s__transactionAmount__m,s__BinaryPredicate) ).

fof(kb_SUMO_6465,axiom,
    s__instance(s__transactionAmount__m,s__SingleValuedRelation) ).

fof(kb_SUMO_6466,axiom,
    s__instance(s__transactionAmount__m,s__TotalValuedRelation) ).

fof(kb_SUMO_6467,axiom,
    s__domain(s__transactionAmount__m,"1",s__FinancialTransaction) ).

fof(kb_SUMO_6468,axiom,
    s__domain(s__transactionAmount__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_6469,axiom,
    s__documentation(s__transactionAmount__m,s__EnglishLanguage,'(&%transactionAmount ?TRANSACTION ?AMOUNT) means that ?AMOUNT is an instance of &%CurrencyMeasure being exhanged in the &%FinancialTransaction ?TRANSACTION.') ).

fof(kb_SUMO_6470,axiom,
    ! [V__AMOUNT,V__TRANS] :
      ( ( s__instance(V__TRANS,s__FinancialTransaction)
        & s__instance(V__AMOUNT,s__CurrencyMeasure) )
     => ( s__transactionAmount(V__TRANS,V__AMOUNT)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Physical)
            & s__patient(V__TRANS,V__OBJ)
            & s__monetaryValue(V__OBJ,V__AMOUNT) ) ) ) ).

fof(kb_SUMO_6471,axiom,
    s__subclass(s__ServiceProcess,s__SocialInteraction) ).

fof(kb_SUMO_6472,axiom,
    s__documentation(s__ServiceProcess,s__EnglishLanguage,'&%ServiceProcess denotes the class of events in which one agent performs a service for another. The service need not be commercial, and it need not be the case that the &%serviceRecipient pays or recompenses the &%serviceProvider for the service.') ).

fof(kb_SUMO_6473,axiom,
    s__subclass(s__CommercialService,s__FinancialTransaction) ).

fof(kb_SUMO_6474,axiom,
    s__instance(s__CommercialService__t,s__SetOrClass) ).

fof(kb_SUMO_6475,axiom,
    s__instance(s__FinancialTransaction__t,s__SetOrClass) ).

fof(kb_SUMO_6476,axiom,
    s__documentation(s__CommercialService,s__EnglishLanguage,'Any &%FinancialTransaction by a &%CommercialAgent where the aim is to produce a profit.') ).

fof(kb_SUMO_6477,axiom,
    s__subclass(s__CommercialService,s__ServiceProcess) ).

fof(kb_SUMO_6478,axiom,
    s__instance(s__ServiceProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6479,axiom,
    ! [V__BUSINESS] :
      ( s__instance(V__BUSINESS,s__Process)
     => ( s__instance(V__BUSINESS,s__CommercialService)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__CommercialAgent)
            & s__agent(V__BUSINESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_6480,axiom,
    s__subclass(s__Betting,s__FinancialTransaction) ).

fof(kb_SUMO_6481,axiom,
    s__instance(s__Betting__t,s__SetOrClass) ).

fof(kb_SUMO_6482,axiom,
    s__documentation(s__Betting,s__EnglishLanguage,'A &%FinancialTransaction where an instance of &%CurrencyMeasure is exchanged for the possibility of winning a larger instance of &%CurrencyMeasure within the context of some sort of &%Game.') ).

fof(kb_SUMO_6483,axiom,
    s__subclass(s__Buying,s__FinancialTransaction) ).

fof(kb_SUMO_6484,axiom,
    s__instance(s__Buying__t,s__SetOrClass) ).

fof(kb_SUMO_6485,axiom,
    s__relatedInternalConcept(s__Buying,s__Selling) ).

fof(kb_SUMO_6486,axiom,
    s__documentation(s__Buying,s__EnglishLanguage,'A &%FinancialTransaction in which an instance of &%CurrencyMeasure is exchanged for an instance of &%Physical.') ).

fof(kb_SUMO_6487,axiom,
    ! [V__BUY,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__BUY,s__Process) )
     => ( ( s__instance(V__BUY,s__Buying)
          & s__agent(V__BUY,V__AGENT) )
       => s__destination(V__BUY,V__AGENT) ) ) ).

fof(kb_SUMO_6488,axiom,
    s__subclass(s__Selling,s__FinancialTransaction) ).

fof(kb_SUMO_6489,axiom,
    s__instance(s__Selling__t,s__SetOrClass) ).

fof(kb_SUMO_6490,axiom,
    s__documentation(s__Selling,s__EnglishLanguage,'A &%FinancialTransaction in which an instance of &%Physical is exchanged for an instance of &%CurrencyMeasure.') ).

fof(kb_SUMO_6491,axiom,
    ! [V__OBJECT,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__AGENT2,s__Agent) )
     => ( ? [V__BUY] :
            ( s__instance(V__BUY,s__Process)
            & s__instance(V__BUY,s__Buying)
            & s__agent(V__BUY,V__AGENT1)
            & s__origin(V__BUY,V__AGENT2)
            & s__patient(V__BUY,V__OBJECT) )
      <=> ? [V__SELL] :
            ( s__instance(V__SELL,s__Process)
            & s__instance(V__SELL,s__Selling)
            & s__agent(V__SELL,V__AGENT2)
            & s__destination(V__SELL,V__AGENT1)
            & s__patient(V__SELL,V__OBJECT) ) ) ) ).

fof(kb_SUMO_6492,axiom,
    ! [V__AGENT,V__SELL] :
      ( ( s__instance(V__SELL,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__SELL,s__Selling)
          & s__agent(V__SELL,V__AGENT) )
       => s__origin(V__SELL,V__AGENT) ) ) ).

fof(kb_SUMO_6493,axiom,
    s__subclass(s__Learning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6494,axiom,
    s__instance(s__Learning__t,s__SetOrClass) ).

fof(kb_SUMO_6495,axiom,
    s__documentation(s__Learning,s__EnglishLanguage,'The &%Class of &%Processes which relate to the acquisition of information.') ).

fof(kb_SUMO_6496,axiom,
    ! [V__LEARN,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__LEARN,s__Process) )
     => ( ( s__instance(V__LEARN,s__Learning)
          & s__agent(V__LEARN,V__AGENT) )
       => s__instance(V__AGENT,s__CognitiveAgent) ) ) ).

%FOL fof(kb_SUMO_6497,axiom,(( (! [V__LEARN,V__PROP,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PROP,s__Formula) & s__instance(V__LEARN,s__Process)) => ((s__instance(V__LEARN,s__Learning) & s__agent(V__LEARN,V__AGENT) & s__patient(V__LEARN,V__PROP)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__LEARN)),'(~ s__knows(V__AGENT,V__PROP))') & s__holdsDuring(s__EndFn(s__WhenFn(V__LEARN)),'s__knows(V__AGENT,V__PROP)'))))) ))).

fof(kb_SUMO_6498,axiom,
    s__subclass(s__Discovering,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6499,axiom,
    s__instance(s__Discovering__t,s__SetOrClass) ).

fof(kb_SUMO_6500,axiom,
    s__documentation(s__Discovering,s__EnglishLanguage,'Finding something that was sought. Note that this class is restricted to cases of discovering something &%Physical. For cases involving the acquisition of knowledge, the class &%Learning should be used.') ).

fof(kb_SUMO_6501,axiom,
    ! [V__OBJ,V__DISCOVER] :
      ( s__instance(V__DISCOVER,s__Process)
     => ( ( s__instance(V__DISCOVER,s__Discovering)
          & s__patient(V__DISCOVER,V__OBJ) )
       => ? [V__PURSUE] :
            ( s__instance(V__PURSUE,s__Physical)
            & s__instance(V__PURSUE,s__Pursuing)
            & s__meetsTemporally(s__WhenFn(V__PURSUE),s__WhenFn(V__DISCOVER)) ) ) ) ).

%FOL fof(kb_SUMO_6502,axiom,(( (! [V__OBJ,V__PLACE,V__DISCOVER] : ((s__instance(V__DISCOVER,s__Process) & s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__DISCOVER,s__Discovering) & s__patient(V__DISCOVER,V__OBJ) & s__holdsDuring(s__WhenFn(V__DISCOVER),'s__located(V__OBJ,V__PLACE)')) => (? [V__LEARN] : (s__instance(V__LEARN,s__Process) & s__instance(V__LEARN,s__Learning) & s__subProcess(V__LEARN,V__DISCOVER) & s__patient(V__LEARN,'s__located(V__OBJ,V__PLACE)')))))) ))).

fof(kb_SUMO_6503,axiom,
    s__subclass(s__Classifying,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6504,axiom,
    s__instance(s__Classifying__t,s__SetOrClass) ).

fof(kb_SUMO_6505,axiom,
    s__documentation(s__Classifying,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve attaching a name or category to a thing or set of things. Note that &%Classifying is distinguished from &%Learning by the fact that the latter covers the acquisition by a &%CognitiveAgent of any &%Proposition, while the former involves the assignment of a label or category.') ).

fof(kb_SUMO_6506,axiom,
    s__subclass(s__Reasoning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6507,axiom,
    s__instance(s__Reasoning__t,s__SetOrClass) ).

fof(kb_SUMO_6508,axiom,
    s__documentation(s__Reasoning,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve concluding, on the basis of either deductive or inductive evidence, that a particular &%Proposition or &%Sentence is true.') ).

fof(kb_SUMO_6509,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( s__instance(V__AGENT,s__CognitiveAgent)
       => s__capability(s__Reasoning,s__agent__m,V__AGENT) ) ) ).

fof(kb_SUMO_6510,axiom,
    s__subclass(s__Selecting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6511,axiom,
    s__documentation(s__Selecting,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve opting for one or more &%Entity out of a larger set of &%Entities. Note that this covers all cases of judging or evaluating.') ).

fof(kb_SUMO_6512,axiom,
    s__subclass(s__Deciding,s__Selecting) ).

fof(kb_SUMO_6513,axiom,
    s__instance(s__Selecting__t,s__SetOrClass) ).

fof(kb_SUMO_6514,axiom,
    s__documentation(s__Deciding,s__EnglishLanguage,'The subclass of &%Selecting where the &%agent opts for one course of action out of a set of multiple possibilities that are open to him/her.') ).

fof(kb_SUMO_6515,axiom,
    ! [V__PROCESS,V__AGENT,V__DECIDE] :
      ( ( s__instance(V__DECIDE,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__PROCESS,s__Process) )
     => ( ( s__instance(V__DECIDE,s__Deciding)
          & s__agent(V__DECIDE,V__AGENT)
          & s__patient(V__DECIDE,V__PROCESS) )
       => ( s__instance(V__PROCESS,s__IntentionalProcess)
          & s__agent(V__PROCESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_6516,axiom,
    s__subclass(s__Voting,s__Deciding) ).

fof(kb_SUMO_6517,axiom,
    s__instance(s__Voting__t,s__SetOrClass) ).

fof(kb_SUMO_6518,axiom,
    s__instance(s__Deciding__t,s__SetOrClass) ).

fof(kb_SUMO_6519,axiom,
    s__documentation(s__Voting,s__EnglishLanguage,'&%Voting is the activity of voting in an &%Election. Voting is typically done by individuals, while &%Elections are conducted by &%Organizations. The voting process by an individual voter is part of an &%Election process.') ).

fof(kb_SUMO_6520,axiom,
    ! [V__VOTE] :
      ( s__instance(V__VOTE,s__Process)
     => ( s__instance(V__VOTE,s__Voting)
       => ? [V__ELECT] :
            ( s__instance(V__ELECT,s__Process)
            & s__instance(V__ELECT,s__Election)
            & s__subProcess(V__VOTE,V__ELECT) ) ) ) ).

fof(kb_SUMO_6521,axiom,
    s__subclass(s__Judging,s__Selecting) ).

fof(kb_SUMO_6522,axiom,
    s__instance(s__Judging__t,s__SetOrClass) ).

fof(kb_SUMO_6523,axiom,
    s__documentation(s__Judging,s__EnglishLanguage,'The subclass of &%Selecting where the &%agent opts for one belief out of a set of multiple possibilities that are available to him/her.') ).

%FOL fof(kb_SUMO_6524,axiom,(( (! [V__PROPOSITION,V__AGENT,V__JUDGE] : ((s__instance(V__JUDGE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PROPOSITION,s__Formula)) => ((s__instance(V__JUDGE,s__Judging) & s__agent(V__JUDGE,V__AGENT) & s__patient(V__JUDGE,V__PROPOSITION)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__JUDGE)),'(~ s__believes(V__AGENT,V__PROPOSITION))') & s__holdsDuring(s__EndFn(s__WhenFn(V__JUDGE)),'s__believes(V__AGENT,V__PROPOSITION)'))))) ))).

fof(kb_SUMO_6525,axiom,
    s__subclass(s__Comparing,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6526,axiom,
    s__subclass(s__Comparing,s__DualObjectProcess) ).

fof(kb_SUMO_6527,axiom,
    s__instance(s__Comparing__t,s__SetOrClass) ).

fof(kb_SUMO_6528,axiom,
    s__documentation(s__Comparing,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve comparing, relating, contrasting, etc. the properties of two or more &%Entities.') ).

fof(kb_SUMO_6529,axiom,
    s__subclass(s__Calculating,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6530,axiom,
    s__instance(s__Calculating__t,s__SetOrClass) ).

fof(kb_SUMO_6531,axiom,
    s__documentation(s__Calculating,s__EnglishLanguage,'&%IntentionalPsychologicalProcesses which involve the consideration and/or manipulation of instances of &%Quantity.') ).

fof(kb_SUMO_6532,axiom,
    s__subclass(s__Measuring,s__Calculating) ).

fof(kb_SUMO_6533,axiom,
    s__instance(s__Measuring__t,s__SetOrClass) ).

fof(kb_SUMO_6534,axiom,
    s__documentation(s__Measuring,s__EnglishLanguage,'The &%Class of &%Calculating &%Processes where the aim is to determine the &%PhysicalQuantity of some aspect of the &%patient.') ).

%FOL fof(kb_SUMO_6535,axiom,(( (! [V__OBJ,V__MEAS,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__MEAS,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MEAS,s__Measuring) & s__agent(V__MEAS,V__AGENT) & s__patient(V__MEAS,V__OBJ)) => (? [V__QUANT,V__UNIT] : (s__instance(V__UNIT,s__UnitOfMeasure) & s__instance(V__QUANT,s__RealNumber) & s__holdsDuring(s__EndFn(s__WhenFn(V__MEAS)),'s__knows(V__AGENT,s__measure(V__OBJ,s__MeasureFn(V__QUANT,V__UNIT)))')))))) ))).

fof(kb_SUMO_6536,axiom,
    s__subclass(s__Counting,s__Calculating) ).

fof(kb_SUMO_6537,axiom,
    s__instance(s__Counting__t,s__SetOrClass) ).

fof(kb_SUMO_6538,axiom,
    s__documentation(s__Counting,s__EnglishLanguage,'Enumerating something. The &%Class of &%Calculating &%Processes where the aim is to determine the &%Number corresponding to the &%patient.') ).

fof(kb_SUMO_6539,axiom,
    ! [V__COUNT,V__AGENT,V__ENTITY] :
      ( ( s__instance(V__ENTITY,s__UnionFn(s__SetOrClass,s__Collection))
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__COUNT,s__Process) )
     => ( ( s__instance(V__COUNT,s__Counting)
          & s__agent(V__COUNT,V__AGENT)
          & s__patient(V__COUNT,V__ENTITY) )
       => ? [V__NUMBER] : s__knows(V__AGENT,'(s__CardinalityFn(V__ENTITY) = V__NUMBER)') ) ) ).

fof(kb_SUMO_6540,axiom,
    s__subclass(s__Predicting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6541,axiom,
    s__instance(s__Predicting__t,s__SetOrClass) ).

fof(kb_SUMO_6542,axiom,
    s__documentation(s__Predicting,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve the formulation of a &%Proposition about a state of affairs which might be realized in the future.') ).

fof(kb_SUMO_6543,axiom,
    ! [V__FORMULA,V__PREDICT] :
      ( ( s__instance(V__PREDICT,s__Process)
        & s__instance(V__FORMULA,s__Formula) )
     => ( ( s__instance(V__PREDICT,s__Predicting)
          & s__patient(V__PREDICT,V__FORMULA) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__TIME,s__TimeInterval)
            & s__holdsDuring(V__TIME,V__FORMULA)
            & ( s__before(V__TIME,s__WhenFn(V__PREDICT))
              | s__earlier(V__TIME,s__WhenFn(V__PREDICT)) ) ) ) ) ).

fof(kb_SUMO_6544,axiom,
    s__subclass(s__Remembering,s__PsychologicalProcess) ).

fof(kb_SUMO_6545,axiom,
    s__instance(s__Remembering__t,s__SetOrClass) ).

fof(kb_SUMO_6546,axiom,
    s__documentation(s__Remembering,s__EnglishLanguage,'The &%Class of &%PsychologicalProcesses which involve the recollection of prior experiences and/or of knowledge which was previously acquired.') ).

fof(kb_SUMO_6547,axiom,
    ! [V__REMEMBER,V__FORMULA] :
      ( ( s__instance(V__FORMULA,s__Formula)
        & s__instance(V__REMEMBER,s__Process) )
     => ( ( s__instance(V__REMEMBER,s__Remembering)
          & s__patient(V__REMEMBER,V__FORMULA) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__TIME,s__TimeInterval)
            & s__holdsDuring(V__TIME,V__FORMULA)
            & ( s__before(V__TIME,s__WhenFn(V__REMEMBER))
              | s__earlier(V__TIME,s__WhenFn(V__REMEMBER)) ) ) ) ) ).

fof(kb_SUMO_6548,axiom,
    s__subclass(s__Keeping,s__IntentionalProcess) ).

fof(kb_SUMO_6549,axiom,
    s__instance(s__Keeping__t,s__SetOrClass) ).

fof(kb_SUMO_6550,axiom,
    s__documentation(s__Keeping,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent keeps something in a particular location for an extended period of time.') ).

fof(kb_SUMO_6551,axiom,
    ! [V__OBJ,V__KEEP,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__KEEP,s__Process) )
     => ( ( s__instance(V__KEEP,s__Keeping)
          & s__agent(V__KEEP,V__AGENT)
          & s__patient(V__KEEP,V__OBJ) )
       => ? [V__PUT] :
            ( s__instance(V__PUT,s__Process)
            & s__instance(V__PUT,s__Putting)
            & s__agent(V__PUT,V__AGENT)
            & s__patient(V__PUT,V__OBJ)
            & s__earlier(s__WhenFn(V__PUT),s__WhenFn(V__KEEP)) ) ) ) ).

%FOL fof(kb_SUMO_6552,axiom,(( (! [V__OBJ,V__KEEP] : ((s__instance(V__KEEP,s__Keeping) & s__patient(V__KEEP,V__OBJ)) => (? [V__PLACE] : (s__instance(V__PLACE,s__Object) & (! [V__TIME] : ((s__instance(V__TIME,s__TimePosition) & s__instance(V__KEEP,s__Process) & s__instance(V__OBJ,s__Physical)) => (s__temporalPart(V__TIME,s__WhenFn(V__KEEP)) => s__holdsDuring(V__TIME,'s__located(V__OBJ,V__PLACE)')))))))) ))).

fof(kb_SUMO_6553,axiom,
    s__subclass(s__Confining,s__Keeping) ).

fof(kb_SUMO_6554,axiom,
    s__instance(s__Confining__t,s__SetOrClass) ).

fof(kb_SUMO_6555,axiom,
    s__documentation(s__Confining,s__EnglishLanguage,'The &%Class of &%Keeping &%Processes where the &%patient is a &%Human or an &%Animal and is kept involuntarily. This covers caging, imprisonment, jailing, etc.') ).

fof(kb_SUMO_6556,axiom,
    ! [V__CONFINE] :
      ( s__instance(V__CONFINE,s__Process)
     => ( s__instance(V__CONFINE,s__Confining)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Animal)
            & s__patient(V__CONFINE,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_6557,axiom,(( (! [V__PERSON,V__CONFINE] : ((s__instance(V__CONFINE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__CONFINE,s__Confining) & s__patient(V__CONFINE,V__PERSON) & s__instance(V__PERSON,s__Human)) => (~ s__desires(V__PERSON,'s__patient(V__CONFINE,V__PERSON)'))))) ))).

fof(kb_SUMO_6558,axiom,
    s__subclass(s__Maintaining,s__IntentionalProcess) ).

fof(kb_SUMO_6559,axiom,
    s__instance(s__Maintaining__t,s__SetOrClass) ).

fof(kb_SUMO_6560,axiom,
    s__documentation(s__Maintaining,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent cares for or maintains the &%Object.') ).

fof(kb_SUMO_6561,axiom,
    s__subclass(s__Repairing,s__IntentionalProcess) ).

fof(kb_SUMO_6562,axiom,
    s__instance(s__Repairing__t,s__SetOrClass) ).

fof(kb_SUMO_6563,axiom,
    s__relatedInternalConcept(s__Repairing,s__Maintaining) ).

fof(kb_SUMO_6564,axiom,
    s__documentation(s__Repairing,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent makes a modification or series of modifications to an &%Object that is not functioning as intended so that it works properly.') ).

fof(kb_SUMO_6565,axiom,
    ! [V__OBJ,V__REPAIR] :
      ( s__instance(V__REPAIR,s__Process)
     => ( ( s__instance(V__REPAIR,s__Repairing)
          & s__patient(V__REPAIR,V__OBJ) )
       => ? [V__DAMAGE] :
            ( s__instance(V__DAMAGE,s__Process)
            & s__instance(V__DAMAGE,s__Damaging)
            & s__patient(V__DAMAGE,V__OBJ)
            & s__earlier(s__WhenFn(V__DAMAGE),s__WhenFn(V__REPAIR)) ) ) ) ).

fof(kb_SUMO_6566,axiom,
    s__subclass(s__TherapeuticProcess,s__Repairing) ).

fof(kb_SUMO_6567,axiom,
    s__documentation(s__TherapeuticProcess,s__EnglishLanguage,'A &%Process that is carried out for the purpose of curing, improving or reducing the pain associated with a &%DiseaseOrSyndrome.') ).

fof(kb_SUMO_6568,axiom,
    ! [V__BIO,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__BIO,s__Object) )
     => ( ( s__instance(V__PROC,s__TherapeuticProcess)
          & s__patient(V__PROC,V__BIO) )
       => ( s__instance(V__BIO,s__Organism)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Object)
              & s__instance(V__ORG,s__Organism)
              & s__part(V__BIO,V__ORG) ) ) ) ) ).

fof(kb_SUMO_6569,axiom,
    s__subclass(s__Surgery,s__TherapeuticProcess) ).

fof(kb_SUMO_6570,axiom,
    s__instance(s__Surgery__t,s__SetOrClass) ).

fof(kb_SUMO_6571,axiom,
    s__instance(s__TherapeuticProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6572,axiom,
    s__documentation(s__Surgery,s__EnglishLanguage,'Any &%TherapeuticProcess that involves making an incision in the &%Animal that is the &%patient of the &%TherapeuticProcess.') ).

fof(kb_SUMO_6573,axiom,
    ! [V__ACT,V__ANIMAL] :
      ( s__instance(V__ACT,s__Process)
     => ( ( s__instance(V__ACT,s__Surgery)
          & s__patient(V__ACT,V__ANIMAL) )
       => ? [V__SUBACT] :
            ( s__instance(V__SUBACT,s__Process)
            & s__instance(V__SUBACT,s__Cutting)
            & s__instance(V__ANIMAL,s__Animal)
            & s__patient(V__SUBACT,V__ANIMAL)
            & s__subProcess(V__SUBACT,V__ACT) ) ) ) ).

fof(kb_SUMO_6574,axiom,
    s__subclass(s__Damaging,s__InternalChange) ).

fof(kb_SUMO_6575,axiom,
    s__disjoint(s__Damaging,s__Repairing) ).

fof(kb_SUMO_6576,axiom,
    s__documentation(s__Damaging,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent brings about a situation where the &%patient no longer functions normally or as intended.') ).

fof(kb_SUMO_6577,axiom,
    s__subclass(s__Destruction,s__Damaging) ).

fof(kb_SUMO_6578,axiom,
    s__documentation(s__Destruction,s__EnglishLanguage,'The &%subclass of &%Damagings in which the &%patient (or an essential element of the &%patient) is destroyed. Note that the difference between this concept and its superclass is solely one of extent.') ).

fof(kb_SUMO_6579,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Destruction)
      <=> ? [V__PATIENT] :
            ( s__instance(V__PATIENT,s__Physical)
            & s__patient(V__PROCESS,V__PATIENT)
            & s__time(V__PATIENT,s__BeginFn(s__WhenFn(V__PROCESS)))
            & ~ s__time(V__PATIENT,s__EndFn(s__WhenFn(V__PROCESS))) ) ) ) ).

fof(kb_SUMO_6580,axiom,
    s__subclass(s__Killing,s__Destruction) ).

fof(kb_SUMO_6581,axiom,
    s__instance(s__Killing__t,s__SetOrClass) ).

fof(kb_SUMO_6582,axiom,
    s__instance(s__Destruction__t,s__SetOrClass) ).

fof(kb_SUMO_6583,axiom,
    s__documentation(s__Killing,s__EnglishLanguage,'The &%subclass of &%Destruction in which the death of an &%Organism is caused by an &%Organism. Note that in cases of suicide the &%Organism would be the same in both cases.') ).

fof(kb_SUMO_6584,axiom,
    ! [V__PATIENT,V__KILL,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__KILL,s__Process) )
     => ( ( s__instance(V__KILL,s__Killing)
          & s__agent(V__KILL,V__AGENT)
          & s__patient(V__KILL,V__PATIENT) )
       => ( s__instance(V__AGENT,s__Organism)
          & s__instance(V__PATIENT,s__Organism) ) ) ) ).

%FOL fof(kb_SUMO_6585,axiom,(( (! [V__PATIENT,V__KILL] : ((s__instance(V__KILL,s__Process) & s__instance(V__PATIENT,s__Object)) => ((s__instance(V__KILL,s__Killing) & s__patient(V__KILL,V__PATIENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__KILL)),'s__attribute(V__PATIENT,s__Living)') & s__holdsDuring(s__FutureFn(s__WhenFn(V__KILL)),'s__attribute(V__PATIENT,s__Dead)'))))) ))).

fof(kb_SUMO_6586,axiom,
    ! [V__OBJ,V__KILL] :
      ( ( s__instance(V__KILL,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__KILL,s__Killing)
          & s__patient(V__KILL,V__OBJ) )
       => ? [V__DEATH] :
            ( s__instance(V__DEATH,s__Process)
            & s__instance(V__DEATH,s__Death)
            & s__experiencer(V__DEATH,V__OBJ)
            & s__causes(V__KILL,V__DEATH) ) ) ) ).

fof(kb_SUMO_6587,axiom,
    s__subclass(s__Poking,s__IntentionalProcess) ).

fof(kb_SUMO_6588,axiom,
    s__instance(s__Poking__t,s__SetOrClass) ).

fof(kb_SUMO_6589,axiom,
    s__documentation(s__Poking,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent pierces the surface of the &%Object with an &%instrument.') ).

%FOL fof(kb_SUMO_6590,axiom,(( (! [V__OBJ,V__INST,V__AGENT,V__POKE] : ((s__instance(V__POKE,s__Process) & s__instance(V__AGENT,s__Agent) & s__instance(V__AGENT,s__SelfConnectedObject) & s__instance(V__INST,s__SelfConnectedObject) & s__instance(V__OBJ,s__SelfConnectedObject)) => ((s__instance(V__POKE,s__Poking) & s__agent(V__POKE,V__AGENT) & s__patient(V__POKE,V__OBJ) & s__instrument(V__POKE,V__INST)) => s__holdsDuring(s__WhenFn(V__POKE),'s__connects(V__INST,V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_6591,axiom,
    s__subclass(s__Cutting,s__Poking) ).

fof(kb_SUMO_6592,axiom,
    s__instance(s__Cutting__t,s__SetOrClass) ).

fof(kb_SUMO_6593,axiom,
    s__documentation(s__Cutting,s__EnglishLanguage,'The &%subclass of &%Poking &%Processes which involve a sharp &%instrument.') ).

fof(kb_SUMO_6594,axiom,
    s__subclass(s__Attaching,s__DualObjectProcess) ).

fof(kb_SUMO_6595,axiom,
    s__instance(s__Attaching__t,s__SetOrClass) ).

fof(kb_SUMO_6596,axiom,
    s__disjoint(s__Attaching,s__Detaching) ).

fof(kb_SUMO_6597,axiom,
    s__relatedInternalConcept(s__Attaching,s__Putting) ).

fof(kb_SUMO_6598,axiom,
    s__documentation(s__Attaching,s__EnglishLanguage,'A &%Process where one &%Object becomes attached to another &%Object. Note that this differs from &%Putting in that two things which are attached may already be in the same location. Note that &%Combining is different from &%Attaching in that the former applies to &%Substances, while the latter applies to &%CorpuscularObjects. Note too that &%Attaching is different from &%Putting in that one or both of the two things which are attached may or may not be moved from the location where they were combined.') ).

%FOL fof(kb_SUMO_6599,axiom,(( (! [V__ATTACH,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Object) & s__instance(V__ATTACH,s__Process)) => ((s__instance(V__ATTACH,s__Attaching) & s__patient(V__ATTACH,V__OBJ1) & s__patient(V__ATTACH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__ATTACH)),'(~ s__connected(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ATTACH)),'s__connected(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_6600,axiom,
    ! [V__ATTACH] :
      ( s__instance(V__ATTACH,s__Process)
     => ( s__instance(V__ATTACH,s__Attaching)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__CorpuscularObject)
            & s__patient(V__ATTACH,V__OBJ) ) ) ) ).

fof(kb_SUMO_6601,axiom,
    s__subclass(s__Detaching,s__DualObjectProcess) ).

fof(kb_SUMO_6602,axiom,
    s__instance(s__Detaching__t,s__SetOrClass) ).

fof(kb_SUMO_6603,axiom,
    s__documentation(s__Detaching,s__EnglishLanguage,'A &%Process where the &%agent detaches one thing from something else. Note that &%Detaching is different from &%Separating in that the latter applies to &%Substances, while the former applies to &%CorpuscularObjects. Note too that &%Detaching is different from &%Removing in that one or both of the two things which are detached may or may not be moved from the location where they were attached.') ).

%FOL fof(kb_SUMO_6604,axiom,(( (! [V__DETACH,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Object) & s__instance(V__DETACH,s__Process)) => ((s__instance(V__DETACH,s__Detaching) & s__patient(V__DETACH,V__OBJ1) & s__patient(V__DETACH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__DETACH)),'s__connected(V__OBJ1,V__OBJ2)') & s__holdsDuring(s__EndFn(s__WhenFn(V__DETACH)),'(~ s__connected(V__OBJ1,V__OBJ2))'))))) ))).

fof(kb_SUMO_6605,axiom,
    ! [V__DETACH] :
      ( s__instance(V__DETACH,s__Process)
     => ( s__instance(V__DETACH,s__Detaching)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__CorpuscularObject)
            & s__patient(V__DETACH,V__OBJ) ) ) ) ).

fof(kb_SUMO_6606,axiom,
    s__subclass(s__Ungrasping,s__Detaching) ).

fof(kb_SUMO_6607,axiom,
    s__instance(s__Ungrasping__t,s__SetOrClass) ).

fof(kb_SUMO_6608,axiom,
    s__documentation(s__Ungrasping,s__EnglishLanguage,'Any instance of &%Detaching which results in a situation where it is not the case that the &%agent &%grasps something which he/she &%grasps previously.') ).

%FOL fof(kb_SUMO_6609,axiom,(( (! [V__RELEASE,V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process) & s__instance(V__RELEASE,s__Physical)) => ((s__instance(V__RELEASE,s__Ungrasping) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__RELEASE)),'s__grasps(V__AGENT,V__THING)') & s__holdsDuring(s__EndFn(s__WhenFn(V__RELEASE)),'(~ s__grasps(V__AGENT,V__THING))'))))) ))).

fof(kb_SUMO_6610,axiom,
    s__subclass(s__Combining,s__DualObjectProcess) ).

fof(kb_SUMO_6611,axiom,
    s__instance(s__Combining__t,s__SetOrClass) ).

fof(kb_SUMO_6612,axiom,
    s__documentation(s__Combining,s__EnglishLanguage,'A &%Process where two or more &%SelfConnectedObjects are incorporated into a single &%SelfConnectedObject. Note that &%Combining is different from &%Attaching in that the former results in one of the objects being &%part of the other, while &%Attaching only results in the two objects being &%connected with one another. Note too that &%Combining is different from &%Putting in that one or both of the two things which are combined may or may not be moved from the location where they were combined.') ).

%FOL fof(kb_SUMO_6613,axiom,(( (! [V__OBJ1,V__COMBINE,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__COMBINE,s__Process) & s__instance(V__OBJ1,s__Object)) => ((s__instance(V__COMBINE,s__Combining) & s__resource(V__COMBINE,V__OBJ1) & s__result(V__COMBINE,V__OBJ2)) <=> (s__holdsDuring(s__BeginFn(s__WhenFn(V__COMBINE)),'(~ s__part(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__COMBINE)),'s__part(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_6614,axiom,
    ! [V__COMBINE] :
      ( s__instance(V__COMBINE,s__Process)
     => ( s__instance(V__COMBINE,s__Combining)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__SelfConnectedObject)
            & s__patient(V__COMBINE,V__OBJ) ) ) ) ).

fof(kb_SUMO_6615,axiom,
    s__subclass(s__Separating,s__DualObjectProcess) ).

fof(kb_SUMO_6616,axiom,
    s__disjoint(s__Separating,s__Combining) ).

fof(kb_SUMO_6617,axiom,
    s__documentation(s__Separating,s__EnglishLanguage,'A &%Process where a &%SelfConnectedObject is separated into (some of) its &%parts. Note that &%Separating is different from &%Detaching in that the latter only results in the two objects not being &%connected. Note too that &%Separating is different from &%Removing in that one or both of the two things which are separated may or may not be moved from the location where they were separated.') ).

fof(kb_SUMO_6618,axiom,
    ! [V__SEPARATE] :
      ( s__instance(V__SEPARATE,s__Process)
     => ( s__instance(V__SEPARATE,s__Separating)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__SelfConnectedObject)
            & s__patient(V__SEPARATE,V__OBJ) ) ) ) ).

fof(kb_SUMO_6619,axiom,
    s__subclass(s__ChemicalProcess,s__InternalChange) ).

fof(kb_SUMO_6620,axiom,
    s__partition_3(s__ChemicalProcess,s__ChemicalSynthesis,s__ChemicalDecomposition) ).

fof(kb_SUMO_6621,axiom,
    s__documentation(s__ChemicalProcess,s__EnglishLanguage,'A &%ChemicalProcess occurs whenever chemical compounds (&%CompoundSubstances) are formed or decomposed. For example, reactants disappear as chemical change occurs, and products appear as chemical change occurs. In a chemical change a chemical reaction takes place. Catalysts in a &%ChemicalProcess may speed up the reaction, but arent themselves produced or consumed. Examples: rusting of iron and the decomposition of water, induced by an electric current, to gaseous hydrogen and gaseous oxygen.') ).

fof(kb_SUMO_6622,axiom,
    ! [V__STUFF,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__STUFF,s__Object) )
     => ( ( s__instance(V__PROC,s__ChemicalProcess)
          & ( s__resource(V__PROC,V__STUFF)
            | s__result(V__PROC,V__STUFF) ) )
       => s__instance(V__STUFF,s__PureSubstance) ) ) ).

fof(kb_SUMO_6623,axiom,
    s__subclass(s__ChemicalSynthesis,s__ChemicalProcess) ).

fof(kb_SUMO_6624,axiom,
    s__instance(s__ChemicalSynthesis__t,s__SetOrClass) ).

fof(kb_SUMO_6625,axiom,
    s__subclass(s__ChemicalSynthesis,s__Combining) ).

fof(kb_SUMO_6626,axiom,
    s__documentation(s__ChemicalSynthesis,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which a &%CompoundSubstance is formed from simpler reactants.') ).

fof(kb_SUMO_6627,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBSTANCE1,s__Object) )
     => ( ( s__resource(V__PROC,V__SUBSTANCE1)
          & s__result(V__PROC,V__SUBSTANCE2)
          & s__instance(V__SUBSTANCE1,s__ElementalSubstance)
          & s__instance(V__SUBSTANCE2,s__CompoundSubstance) )
       => s__instance(V__PROC,s__ChemicalSynthesis) ) ) ).

fof(kb_SUMO_6628,axiom,
    ! [V__COMPOUND] :
      ( s__instance(V__COMPOUND,s__CompoundSubstance)
    <=> ? [V__ELEMENT1,V__ELEMENT2,V__PROCESS] :
          ( s__instance(V__PROCESS,s__Process)
          & s__instance(V__ELEMENT2,s__Object)
          & s__instance(V__ELEMENT1,s__Object)
          & s__instance(V__ELEMENT1,s__ElementalSubstance)
          & s__instance(V__ELEMENT2,s__ElementalSubstance)
          & V__ELEMENT1 != V__ELEMENT2
          & s__instance(V__PROCESS,s__ChemicalSynthesis)
          & s__resource(V__PROCESS,V__ELEMENT1)
          & s__resource(V__PROCESS,V__ELEMENT2)
          & s__result(V__PROCESS,V__COMPOUND) ) ) ).

fof(kb_SUMO_6629,axiom,
    s__subclass(s__ChemicalDecomposition,s__ChemicalProcess) ).

fof(kb_SUMO_6630,axiom,
    s__instance(s__ChemicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6631,axiom,
    s__subclass(s__ChemicalDecomposition,s__Separating) ).

fof(kb_SUMO_6632,axiom,
    s__instance(s__ChemicalDecomposition__t,s__SetOrClass) ).

fof(kb_SUMO_6633,axiom,
    s__instance(s__Separating__t,s__SetOrClass) ).

fof(kb_SUMO_6634,axiom,
    s__documentation(s__ChemicalDecomposition,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which a &%CompoundSubstance breaks down into simpler products.') ).

fof(kb_SUMO_6635,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBSTANCE1,s__Object) )
     => ( ( s__resource(V__PROC,V__SUBSTANCE1)
          & s__result(V__PROC,V__SUBSTANCE2)
          & s__instance(V__SUBSTANCE1,s__CompoundSubstance)
          & s__instance(V__SUBSTANCE2,s__ElementalSubstance) )
       => s__instance(V__PROC,s__ChemicalDecomposition) ) ) ).

fof(kb_SUMO_6636,axiom,
    s__subclass(s__Combustion,s__ChemicalDecomposition) ).

fof(kb_SUMO_6637,axiom,
    s__instance(s__Combustion__t,s__SetOrClass) ).

fof(kb_SUMO_6638,axiom,
    s__documentation(s__Combustion,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which an &%Object reacts with oxygen and gives off heat. This includes all &%Processes in which something is burning.') ).

fof(kb_SUMO_6639,axiom,
    ! [V__COMBUSTION] :
      ( s__instance(V__COMBUSTION,s__Process)
     => ( s__instance(V__COMBUSTION,s__Combustion)
       => ? [V__HEAT,V__LIGHT] :
            ( s__instance(V__LIGHT,s__Process)
            & s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__instance(V__LIGHT,s__RadiatingLight)
            & s__subProcess(V__HEAT,V__COMBUSTION)
            & s__subProcess(V__LIGHT,V__COMBUSTION) ) ) ) ).

fof(kb_SUMO_6640,axiom,
    s__instance(s__Flammable,s__PhysicalAttribute) ).

fof(kb_SUMO_6641,axiom,
    s__documentation(s__Flammable,s__EnglishLanguage,'The &%Attribute of being flammable at normal temperatures (i.e. not while a &%Plasma).') ).

fof(kb_SUMO_6642,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Flammable)
       => s__capability(s__Combustion,s__patient__m,V__X) ) ) ).

fof(kb_SUMO_6643,axiom,
    s__subclass(s__InternalChange,s__Process) ).

fof(kb_SUMO_6644,axiom,
    s__documentation(s__InternalChange,s__EnglishLanguage,'&%Processes which involve altering an internal property of an &%Object, e.g. the shape of the &%Object, its coloring, its structure, etc. &%Processes that are not instances of this class include changes that only affect the relationship to other objects, e.g. changes in spatial or temporal location.') ).

%FOL fof(kb_SUMO_6645,axiom,(( (! [V__CHANGE,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__InternalChange) & s__patient(V__CHANGE,V__OBJ)) => (? [V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__attribute(V__OBJ,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'(~ s__attribute(V__OBJ,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'(~ s__attribute(V__OBJ,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__attribute(V__OBJ,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_6646,axiom,
    s__subclass(s__SurfaceChange,s__InternalChange) ).

fof(kb_SUMO_6647,axiom,
    s__instance(s__SurfaceChange__t,s__SetOrClass) ).

fof(kb_SUMO_6648,axiom,
    s__instance(s__InternalChange__t,s__SetOrClass) ).

fof(kb_SUMO_6649,axiom,
    s__documentation(s__SurfaceChange,s__EnglishLanguage,'&%Processes which involve altering the properties that apply to the surface of an &%Object.') ).

%FOL fof(kb_SUMO_6650,axiom,(( (! [V__ALT,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__ALT,s__Process)) => ((s__instance(V__ALT,s__SurfaceChange) & s__patient(V__ALT,V__OBJ)) => (? [V__PART,V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & s__instance(V__PART,s__Object) & s__superficialPart(V__PART,V__OBJ) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'s__attribute(V__PART,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__PART,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__PART,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'s__attribute(V__PART,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_6651,axiom,
    s__subclass(s__Coloring,s__SurfaceChange) ).

fof(kb_SUMO_6652,axiom,
    s__instance(s__Coloring__t,s__SetOrClass) ).

fof(kb_SUMO_6653,axiom,
    s__documentation(s__Coloring,s__EnglishLanguage,'The &%subclass of &%SurfaceChange where a &%ColorAttribute of the &%patient is altered. Note that the change in color may apply to just part of the object.') ).

%FOL fof(kb_SUMO_6654,axiom,(( (! [V__OBJ,V__COLORING] : ((s__instance(V__COLORING,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__COLORING,s__Coloring) & s__patient(V__COLORING,V__OBJ)) => (? [V__PROPERTY,V__PART] : (s__instance(V__PART,s__Object) & s__instance(V__PROPERTY,s__Attribute) & s__part(V__PART,V__OBJ) & s__instance(V__PROPERTY,s__ColorAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__COLORING)),'s__attribute(V__PART,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__COLORING)),'(~ s__attribute(V__PART,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__COLORING)),'(~ s__attribute(V__PART,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__COLORING)),'s__attribute(V__PART,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_6655,axiom,
    s__subclass(s__ShapeChange,s__InternalChange) ).

fof(kb_SUMO_6656,axiom,
    s__instance(s__ShapeChange__t,s__SetOrClass) ).

fof(kb_SUMO_6657,axiom,
    s__documentation(s__ShapeChange,s__EnglishLanguage,'The &%Process of changing the shape of an &%Object.') ).

%FOL fof(kb_SUMO_6658,axiom,(( (! [V__ALT,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__ALT,s__Process)) => ((s__instance(V__ALT,s__ShapeChange) & s__patient(V__ALT,V__OBJ)) => (? [V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & s__instance(V__PROPERTY,s__ShapeAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'s__attribute(V__OBJ,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__OBJ,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__OBJ,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'s__attribute(V__OBJ,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_6659,axiom,
    s__subclass(s__ContentDevelopment,s__IntentionalProcess) ).

fof(kb_SUMO_6660,axiom,
    s__documentation(s__ContentDevelopment,s__EnglishLanguage,'A &%subclass of &%IntentionalProcess in which content is modified, its form is altered or it is created anew.') ).

fof(kb_SUMO_6661,axiom,
    ! [V__DEVELOP] :
      ( s__instance(V__DEVELOP,s__Process)
     => ( s__instance(V__DEVELOP,s__ContentDevelopment)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__ContentBearingObject)
            & s__result(V__DEVELOP,V__OBJ) ) ) ) ).

fof(kb_SUMO_6662,axiom,
    s__subclass(s__Reading,s__ContentDevelopment) ).

fof(kb_SUMO_6663,axiom,
    s__instance(s__Reading__t,s__SetOrClass) ).

fof(kb_SUMO_6664,axiom,
    s__relatedInternalConcept(s__Reading,s__Interpreting) ).

fof(kb_SUMO_6665,axiom,
    s__documentation(s__Reading,s__EnglishLanguage,'A &%subclass of &%ContentDevelopment in which content is converted from a written form into a spoken representation. Note that the class &%Interpreting should be used in cases where a &%Text is read silently.') ).

fof(kb_SUMO_6666,axiom,
    ! [V__READ] :
      ( s__instance(V__READ,s__Process)
     => ( s__instance(V__READ,s__Reading)
       => ? [V__TEXT,V__PROP] :
            ( s__instance(V__PROP,s__Proposition)
            & s__instance(V__TEXT,s__ContentBearingPhysical)
            & s__instance(V__TEXT,s__Text)
            & s__containsInformation(V__TEXT,V__PROP)
            & s__realization(V__READ,V__PROP) ) ) ) ).

fof(kb_SUMO_6667,axiom,
    s__subclass(s__Writing,s__ContentDevelopment) ).

fof(kb_SUMO_6668,axiom,
    s__instance(s__Writing__t,s__SetOrClass) ).

fof(kb_SUMO_6669,axiom,
    s__instance(s__ContentDevelopment__t,s__SetOrClass) ).

fof(kb_SUMO_6670,axiom,
    s__documentation(s__Writing,s__EnglishLanguage,'A &%subclass of &%ContentDevelopment in which content is converted from one form (e.g. uttered, written or represented mentally) into a written form. Note that this class covers both transcription and original creation of written &%Texts.') ).

fof(kb_SUMO_6671,axiom,
    s__subclass(s__Encoding,s__Writing) ).

fof(kb_SUMO_6672,axiom,
    s__instance(s__Encoding__t,s__SetOrClass) ).

fof(kb_SUMO_6673,axiom,
    s__documentation(s__Encoding,s__EnglishLanguage,'Converting a document or message into a formal language or into a code that can be understood only by a relatively small body of &%Agents. Generally speaking, this hinders wide dissemination of the content in the original document or message.') ).

fof(kb_SUMO_6674,axiom,
    s__subclass(s__Decoding,s__Writing) ).

fof(kb_SUMO_6675,axiom,
    s__instance(s__Decoding__t,s__SetOrClass) ).

fof(kb_SUMO_6676,axiom,
    s__disjoint(s__Decoding,s__Encoding) ).

fof(kb_SUMO_6677,axiom,
    s__documentation(s__Decoding,s__EnglishLanguage,'Converting a document or message that has previously been encoded (see &%Encoding) into a &%Language that can be understood by a relatively large number of speakers.') ).

fof(kb_SUMO_6678,axiom,
    ! [V__DECODE,V__DOC1,V__PROP] :
      ( ( s__instance(V__PROP,s__Proposition)
        & s__instance(V__DOC1,s__ContentBearingPhysical)
        & s__instance(V__DECODE,s__Process) )
     => ( ( s__instance(V__DECODE,s__Decoding)
          & s__patient(V__DECODE,V__DOC1) )
       => ? [V__ENCODE,V__DOC2,V__TIME] :
            ( s__instance(V__TIME,s__TimePosition)
            & s__instance(V__DOC2,s__ContentBearingPhysical)
            & s__instance(V__ENCODE,s__Process)
            & s__containsInformation(V__DOC2,V__PROP)
            & s__containsInformation(V__DOC1,V__PROP)
            & s__temporalPart(V__TIME,s__PastFn(s__WhenFn(V__DECODE)))
            & s__holdsDuring(V__TIME,'(s__instance(V__ENCODE,s__Encoding) & s__patient(V__ENCODE,V__DOC2))') ) ) ) ).

fof(kb_SUMO_6679,axiom,
    s__subclass(s__Translating,s__ContentDevelopment) ).

fof(kb_SUMO_6680,axiom,
    s__subclass(s__Translating,s__DualObjectProcess) ).

fof(kb_SUMO_6681,axiom,
    s__instance(s__Translating__t,s__SetOrClass) ).

fof(kb_SUMO_6682,axiom,
    s__documentation(s__Translating,s__EnglishLanguage,'Converting content from one &%Language into another. This covers oral translation (i.e. interpreting) as well as written translation.') ).

fof(kb_SUMO_6683,axiom,
    ! [V__EXPRESSION1,V__EXPRESSION2,V__TRANSLATE] :
      ( ( s__instance(V__TRANSLATE,s__Process)
        & s__instance(V__EXPRESSION2,s__LinguisticExpression)
        & s__instance(V__EXPRESSION1,s__LinguisticExpression) )
     => ( ( s__instance(V__TRANSLATE,s__Translating)
          & s__patient(V__TRANSLATE,V__EXPRESSION1)
          & s__result(V__TRANSLATE,V__EXPRESSION2) )
       => ? [V__LANGUAGE1,V__LANGUAGE2,V__ENTITY] :
            ( s__instance(V__LANGUAGE2,s__Language)
            & s__instance(V__LANGUAGE1,s__Language)
            & s__representsInLanguage(V__EXPRESSION1,V__ENTITY,V__LANGUAGE1)
            & s__representsInLanguage(V__EXPRESSION2,V__ENTITY,V__LANGUAGE2)
            & V__LANGUAGE1 != V__LANGUAGE2 ) ) ) ).

fof(kb_SUMO_6684,axiom,
    s__subclass(s__Wetting,s__Putting) ).

fof(kb_SUMO_6685,axiom,
    s__instance(s__Wetting__t,s__SetOrClass) ).

fof(kb_SUMO_6686,axiom,
    s__documentation(s__Wetting,s__EnglishLanguage,'The &%Class of &%Processes where a &%Liquid is added to an &%Object.') ).

%FOL fof(kb_SUMO_6687,axiom,(( (! [V__WET] : (s__instance(V__WET,s__Process) => (s__instance(V__WET,s__Wetting) => (? [V__OBJ] : (s__instance(V__OBJ,s__Object) & s__patient(V__WET,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__WET)),'(~ s__attribute(V__OBJ,s__Damp))') & s__holdsDuring(s__EndFn(s__WhenFn(V__WET)),'s__attribute(V__OBJ,s__Damp)')))))) ))).

fof(kb_SUMO_6688,axiom,
    ! [V__WET] :
      ( s__instance(V__WET,s__Process)
     => ( s__instance(V__WET,s__Wetting)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__attribute(V__OBJ,s__Liquid)
            & s__patient(V__WET,V__OBJ) ) ) ) ).

fof(kb_SUMO_6689,axiom,
    s__subclass(s__Drying,s__Removing) ).

fof(kb_SUMO_6690,axiom,
    s__instance(s__Drying__t,s__SetOrClass) ).

fof(kb_SUMO_6691,axiom,
    s__instance(s__Removing__t,s__SetOrClass) ).

fof(kb_SUMO_6692,axiom,
    s__documentation(s__Drying,s__EnglishLanguage,'The &%Class of &%Processes where a &%Liquid is removed from an &%Object.') ).

%FOL fof(kb_SUMO_6693,axiom,(( (! [V__OBJ,V__DRY] : ((s__instance(V__DRY,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DRY,s__Drying) & s__patient(V__DRY,V__OBJ)) => s__holdsDuring(s__EndFn(s__WhenFn(V__DRY)),'s__attribute(V__OBJ,s__Dry)')))) ))).

fof(kb_SUMO_6694,axiom,
    s__subclass(s__Creation,s__InternalChange) ).

fof(kb_SUMO_6695,axiom,
    s__relatedInternalConcept(s__Creation,s__Destruction) ).

fof(kb_SUMO_6696,axiom,
    s__documentation(s__Creation,s__EnglishLanguage,'The &%subclass of &%Process in which something is created. Note that the thing created is specified with the &%result &%CaseRole.') ).

fof(kb_SUMO_6697,axiom,
    ! [V__ACTION] :
      ( s__instance(V__ACTION,s__Process)
     => ( s__instance(V__ACTION,s__Creation)
       => ? [V__RESULT] : s__result(V__ACTION,V__RESULT) ) ) ).

fof(kb_SUMO_6698,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Creation)
      <=> ? [V__PATIENT] :
            ( s__instance(V__PATIENT,s__Physical)
            & s__patient(V__PROCESS,V__PATIENT)
            & s__time(V__PATIENT,s__EndFn(s__WhenFn(V__PROCESS)))
            & ~ s__time(V__PATIENT,s__BeginFn(s__WhenFn(V__PROCESS))) ) ) ) ).

fof(kb_SUMO_6699,axiom,
    s__subclass(s__Making,s__Creation) ).

fof(kb_SUMO_6700,axiom,
    s__instance(s__Creation__t,s__SetOrClass) ).

fof(kb_SUMO_6701,axiom,
    s__subclass(s__Making,s__IntentionalProcess) ).

fof(kb_SUMO_6702,axiom,
    s__documentation(s__Making,s__EnglishLanguage,'The &%subclass of &%Creation in which an individual &%Artifact or a type of &%Artifact is made.') ).

fof(kb_SUMO_6703,axiom,
    s__subclass(s__Constructing,s__Making) ).

fof(kb_SUMO_6704,axiom,
    s__instance(s__Constructing__t,s__SetOrClass) ).

fof(kb_SUMO_6705,axiom,
    s__documentation(s__Constructing,s__EnglishLanguage,'The &%subclass of &%Making in which a &%StationaryArtifact is built.') ).

fof(kb_SUMO_6706,axiom,
    ! [V__ARTIFACT] :
      ( ? [V__BUILD] :
          ( s__instance(V__BUILD,s__Process)
          & s__instance(V__BUILD,s__Constructing)
          & s__result(V__BUILD,V__ARTIFACT) )
    <=> s__instance(V__ARTIFACT,s__StationaryArtifact) ) ).

fof(kb_SUMO_6707,axiom,
    s__subclass(s__Manufacture,s__Making) ).

fof(kb_SUMO_6708,axiom,
    s__instance(s__Manufacture__t,s__SetOrClass) ).

fof(kb_SUMO_6709,axiom,
    s__documentation(s__Manufacture,s__EnglishLanguage,'The &%Making of &%Artifacts on a mass scale.') ).

fof(kb_SUMO_6710,axiom,
    s__subclass(s__Publication,s__Manufacture) ).

fof(kb_SUMO_6711,axiom,
    s__instance(s__Publication__t,s__SetOrClass) ).

fof(kb_SUMO_6712,axiom,
    s__subclass(s__Publication,s__ContentDevelopment) ).

fof(kb_SUMO_6713,axiom,
    s__documentation(s__Publication,s__EnglishLanguage,'The &%Manufacture of &%Texts. Note that there is no implication that the &%Texts are distributed. Such distribution, when it occurs, is an instance of &%Dissemination.') ).

fof(kb_SUMO_6714,axiom,
    ! [V__PUB,V__TEXT] :
      ( ( s__instance(V__TEXT,s__SetOrClass)
        & s__instance(V__PUB,s__Process) )
     => ( ( s__instance(V__PUB,s__Publication)
          & s__patient(V__PUB,V__TEXT) )
       => s__subclass(V__TEXT,s__Text) ) ) ).

fof(kb_SUMO_6715,axiom,
    s__subclass(s__Cooking,s__Making) ).

fof(kb_SUMO_6716,axiom,
    s__instance(s__Cooking__t,s__SetOrClass) ).

fof(kb_SUMO_6717,axiom,
    s__instance(s__Making__t,s__SetOrClass) ).

fof(kb_SUMO_6718,axiom,
    s__documentation(s__Cooking,s__EnglishLanguage,'The &%Making of an &%instance of &%Food. Note that this can cover any preparation of &%Food, e.g. making a salad, cutting up fruit, etc. It does not necessarily involve the application of heat.') ).

fof(kb_SUMO_6719,axiom,
    ! [V__COOK] :
      ( s__instance(V__COOK,s__Process)
     => ( s__instance(V__COOK,s__Cooking)
       => ? [V__FOOD] :
            ( s__instance(V__FOOD,s__FoodForFn(s__Organism))
            & s__result(V__COOK,V__FOOD) ) ) ) ).

fof(kb_SUMO_6720,axiom,
    s__subclass(s__Pursuing,s__IntentionalProcess) ).

fof(kb_SUMO_6721,axiom,
    s__instance(s__Pursuing__t,s__SetOrClass) ).

fof(kb_SUMO_6722,axiom,
    s__documentation(s__Pursuing,s__EnglishLanguage,'The class of &%IntentionalProcesses where something is sought. Some examples would be hunting, shopping, trawling, and stalking.') ).

fof(kb_SUMO_6723,axiom,
    ! [V__PURSUE] :
      ( s__instance(V__PURSUE,s__Process)
     => ( s__instance(V__PURSUE,s__Pursuing)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__patient(V__PURSUE,V__OBJ) ) ) ) ).

%FOL fof(kb_SUMO_6724,axiom,(( (! [V__OBJ,V__PURSUE,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PURSUE,s__Process) & s__instance(V__PURSUE,s__TimePosition) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__PURSUE,s__Pursuing) & s__agent(V__PURSUE,V__AGENT) & s__patient(V__PURSUE,V__OBJ)) => s__holdsDuring(V__PURSUE,'s__wants(V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_6725,axiom,
    ! [V__OBJ,V__PURSUE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__PURSUE,s__Process)
        & s__instance(V__PURSUE,s__TimePosition)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__PURSUE,s__Pursuing)
          & s__agent(V__PURSUE,V__AGENT)
          & s__patient(V__PURSUE,V__OBJ) )
       => s__holdsDuring(V__PURSUE,'(~ s__possesses(V__AGENT,V__OBJ))') ) ) ).

fof(kb_SUMO_6726,axiom,
    s__subclass(s__Hunting,s__Pursuing) ).

fof(kb_SUMO_6727,axiom,
    s__instance(s__Hunting__t,s__SetOrClass) ).

fof(kb_SUMO_6728,axiom,
    s__documentation(s__Hunting,s__EnglishLanguage,'Hunting is the class of &%Processes in which an animal or animals are pursued and sometimes captured and/or killed.') ).

fof(kb_SUMO_6729,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Process)
     => ( s__instance(V__H,s__Hunting)
       => ? [V__T] :
            ( s__instance(V__T,s__Animal)
            & s__patient(V__H,V__T) ) ) ) ).

fof(kb_SUMO_6730,axiom,
    ! [V__P,V__H] :
      ( s__instance(V__H,s__Process)
     => ( ( s__instance(V__H,s__Hunting)
          & s__patient(V__H,V__P) )
       => s__hasPurpose(V__H,'(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__patient(V__PROC,V__P) & (s__instance(V__PROC,s__Confining) | s__instance(V__PROC,s__Killing))))') ) ) ).

fof(kb_SUMO_6731,axiom,
    s__subclass(s__Investigating,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_6732,axiom,
    s__instance(s__Investigating__t,s__SetOrClass) ).

fof(kb_SUMO_6733,axiom,
    s__instance(s__IntentionalPsychologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6734,axiom,
    s__documentation(s__Investigating,s__EnglishLanguage,'The class of &%IntentionalPsychologicalProcesses where the &%agent attempts to obtaina information (i.e. a &%Proposition denoted by a &%Formula).') ).

fof(kb_SUMO_6735,axiom,
    ! [V__INVESTIGATE,V__PROP] :
      ( s__instance(V__INVESTIGATE,s__Process)
     => ( ( s__instance(V__INVESTIGATE,s__Investigating)
          & s__patient(V__INVESTIGATE,V__PROP) )
       => s__instance(V__PROP,s__Formula) ) ) ).

fof(kb_SUMO_6736,axiom,
    ! [V__INVESTIGATE,V__PROP,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__PROP,s__Formula)
        & s__instance(V__INVESTIGATE,s__Process) )
     => ( ( s__instance(V__INVESTIGATE,s__Investigating)
          & s__agent(V__INVESTIGATE,V__AGENT)
          & s__patient(V__INVESTIGATE,V__PROP) )
       => s__holdsDuring(s__WhenFn(V__INVESTIGATE),'(~ s__knows(V__AGENT,V__PROP))') ) ) ).

fof(kb_SUMO_6737,axiom,
    s__subclass(s__Experimenting,s__Investigating) ).

fof(kb_SUMO_6738,axiom,
    s__instance(s__Experimenting__t,s__SetOrClass) ).

fof(kb_SUMO_6739,axiom,
    s__documentation(s__Experimenting,s__EnglishLanguage,'&%Investigating the truth of a &%Proposition by constructing and observing a trial. Note that the trial may be either controlled or uncontrolled, blind or not blind.') ).

fof(kb_SUMO_6740,axiom,
    s__subclass(s__DiagnosticProcess,s__Investigating) ).

fof(kb_SUMO_6741,axiom,
    s__instance(s__DiagnosticProcess__t,s__SetOrClass) ).

fof(kb_SUMO_6742,axiom,
    s__documentation(s__DiagnosticProcess,s__EnglishLanguage,'A &%Process that is carried out for the purpose of determining the nature of a &%DiseaseOrSyndrome.') ).

%FOL fof(kb_SUMO_6743,axiom,(( (! [V__AGENT,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__AGENT,s__CognitiveAgent)) => ((s__instance(V__PROC,s__DiagnosticProcess) & s__agent(V__PROC,V__AGENT)) => (? [V__CAUSE] : (s__instance(V__CAUSE,s__Process) & s__hasPurposeForAgent(V__PROC,'s__knows(V__AGENT,s__causes(V__CAUSE,V__PROC))',V__AGENT)))))) ))).

fof(kb_SUMO_6744,axiom,
    s__subclass(s__SocialInteraction,s__IntentionalProcess) ).

fof(kb_SUMO_6745,axiom,
    s__documentation(s__SocialInteraction,s__EnglishLanguage,'The &%subclass of &%IntentionalProcess that involves interactions between &%CognitiveAgents.') ).

fof(kb_SUMO_6746,axiom,
    ! [V__INTERACTION] :
      ( s__instance(V__INTERACTION,s__Process)
     => ( s__instance(V__INTERACTION,s__SocialInteraction)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__involvedInEvent(V__INTERACTION,V__AGENT1)
            & s__involvedInEvent(V__INTERACTION,V__AGENT2)
            & s__instance(V__AGENT1,s__Agent)
            & s__instance(V__AGENT2,s__Agent)
            & V__AGENT1 != V__AGENT2 ) ) ) ).

fof(kb_SUMO_6747,axiom,
    s__subclass(s__Pretending,s__SocialInteraction) ).

fof(kb_SUMO_6748,axiom,
    s__instance(s__Pretending__t,s__SetOrClass) ).

fof(kb_SUMO_6749,axiom,
    s__documentation(s__Pretending,s__EnglishLanguage,'Any &%SocialInteraction where a &%CognitiveAgent or &%Group of &%CognitiveAgents attempts to make another &%CognitiveAgent or &%Group of &%CognitiveAgents believe something that is false. This covers deceit, affectation, impersonation, and entertainment productions, to give just a few examples.') ).

%FOL fof(kb_SUMO_6750,axiom,(( (! [V__PRETEND] : (s__instance(V__PRETEND,s__Physical) => (s__instance(V__PRETEND,s__Pretending) => (? [V__PERSON,V__PROP] : (s__instance(V__PROP,s__Formula) & s__instance(V__PERSON,s__CognitiveAgent) & s__hasPurpose(V__PRETEND,'s__believes(V__PERSON,V__PROP)') & s__truth(V__PROP,'$false__m')))))) ))).

fof(kb_SUMO_6751,axiom,
    s__subclass(s__Communication,s__SocialInteraction) ).

fof(kb_SUMO_6752,axiom,
    s__subclass(s__Communication,s__ContentBearingProcess) ).

fof(kb_SUMO_6753,axiom,
    s__partition_7(s__Communication,s__Stating,s__Supposing,s__Directing,s__Committing,s__Expressing,s__Declaring) ).

fof(kb_SUMO_6754,axiom,
    s__relatedInternalConcept(s__Communication,s__ContentDevelopment) ).

fof(kb_SUMO_6755,axiom,
    s__documentation(s__Communication,s__EnglishLanguage,'A &%SocialInteraction that involves the transfer of information between two or more &%CognitiveAgents. Note that &%Communication is closely related to, but essentially different from, &%ContentDevelopment. The latter involves the creation or modification of a &%ContentBearingObject, while &%Communication is the transfer of information for the purpose of conveying a message.') ).

fof(kb_SUMO_6756,axiom,
    ! [V__COMMUNICATE] :
      ( s__instance(V__COMMUNICATE,s__Process)
     => ( s__instance(V__COMMUNICATE,s__Communication)
       => ? [V__PHYS,V__ENTITY,V__AGENT1,V__AGENT2] :
            ( s__instance(V__AGENT1,s__Agent)
            & s__refers(V__PHYS,V__ENTITY)
            & s__patient(V__COMMUNICATE,V__PHYS)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__agent(V__COMMUNICATE,V__AGENT1)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & s__destination(V__COMMUNICATE,V__AGENT2) ) ) ) ).

fof(kb_SUMO_6757,axiom,
    s__subclass(s__Disseminating,s__Communication) ).

fof(kb_SUMO_6758,axiom,
    s__instance(s__Disseminating__t,s__SetOrClass) ).

fof(kb_SUMO_6759,axiom,
    s__documentation(s__Disseminating,s__EnglishLanguage,'Any &%Communication that involves a single &%agent and many &%destinations. This covers the release of a published book, broadcasting, a theatrical performance, giving orders to assembled troops, delivering a public lecture, etc.') ).

fof(kb_SUMO_6760,axiom,
    ! [V__DISSEMINATE] :
      ( s__instance(V__DISSEMINATE,s__Process)
     => ( s__instance(V__DISSEMINATE,s__Disseminating)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__destination(V__DISSEMINATE,V__AGENT1)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__destination(V__DISSEMINATE,V__AGENT2)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & V__AGENT1 != V__AGENT2 ) ) ) ).

fof(kb_SUMO_6761,axiom,
    s__subclass(s__Demonstrating,s__Disseminating) ).

fof(kb_SUMO_6762,axiom,
    s__instance(s__Demonstrating__t,s__SetOrClass) ).

fof(kb_SUMO_6763,axiom,
    s__documentation(s__Demonstrating,s__EnglishLanguage,'Exhibiting something or a range of things before the public in a particular location. This would cover software demos, theatrical plays, lectures, dance and music recitals, museum exhibitions, etc.') ).

fof(kb_SUMO_6764,axiom,
    ! [V__DEMO] :
      ( s__instance(V__DEMO,s__Demonstrating)
     => ? [V__PERSON] :
          ( s__instance(V__PERSON,s__Human)
          & s__attends(V__DEMO,V__PERSON) ) ) ).

fof(kb_SUMO_6765,axiom,
    s__subrelation(s__attends__m,s__experiencer__m) ).

fof(kb_SUMO_6766,axiom,
    s__domain(s__attends__m,"1",s__Demonstrating) ).

fof(kb_SUMO_6767,axiom,
    s__domain(s__attends__m,"2",s__Human) ).

fof(kb_SUMO_6768,axiom,
    s__documentation(s__attends__m,s__EnglishLanguage,'(&%attends ?DEMO ?PERSON) means that ?PERSON attends, i.e. is a member of the audience, of the performance event ?DEMO.') ).

fof(kb_SUMO_6769,axiom,
    s__subclass(s__Gesture,s__Communication) ).

fof(kb_SUMO_6770,axiom,
    s__subclass(s__Gesture,s__BodyMotion) ).

fof(kb_SUMO_6771,axiom,
    s__instance(s__Gesture__t,s__SetOrClass) ).

fof(kb_SUMO_6772,axiom,
    s__documentation(s__Gesture,s__EnglishLanguage,'Any &%BodyMotion, e.g. a hand wave, a nod of the head, a smile, which is also an instance of &%Communication.') ).

fof(kb_SUMO_6773,axiom,
    s__subclass(s__Advertising,s__Disseminating) ).

fof(kb_SUMO_6774,axiom,
    s__instance(s__Advertising__t,s__SetOrClass) ).

fof(kb_SUMO_6775,axiom,
    s__documentation(s__Advertising,s__EnglishLanguage,'A &%Disseminating whose purpose is to promote the sale of an &%Object represented in a &%Text or &%Icon (the advertisement).') ).

fof(kb_SUMO_6776,axiom,
    ! [V__ADVERT] :
      ( s__instance(V__ADVERT,s__Physical)
     => ( s__instance(V__ADVERT,s__Advertising)
       => ? [V__OBJ] :
            ( s__refers(V__ADVERT,V__OBJ)
            & s__hasPurpose(V__ADVERT,'(? [V__SALE] : (s__instance(V__SALE,s__Process) & s__instance(V__SALE,s__Selling) & s__patient(V__SALE,V__OBJ)))') ) ) ) ).

fof(kb_SUMO_6777,axiom,
    s__subclass(s__Expressing,s__Communication) ).

fof(kb_SUMO_6778,axiom,
    s__instance(s__Expressing__t,s__SetOrClass) ).

fof(kb_SUMO_6779,axiom,
    s__documentation(s__Expressing,s__EnglishLanguage,'Instances of this &%Class express a state of the &%agent. For example, Jane thanked Barbara for the present she had given her. The thanking in this case expresses the gratitude of Jane towards Barbara. Note that &%Expressing, unlike the other speech act types, is not a subclass of &%LinguisticCommunication. This is because emotions, for example, can be expressed without language, e.g. by smiling.') ).

fof(kb_SUMO_6780,axiom,
    ! [V__EXPRESS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EXPRESS,s__Process) )
     => ( ( s__instance(V__EXPRESS,s__Expressing)
          & s__agent(V__EXPRESS,V__AGENT) )
       => ? [V__STATE] :
            ( s__instance(V__STATE,s__Attribute)
            & s__instance(V__STATE,s__StateOfMind)
            & s__attribute(V__AGENT,V__STATE)
            & s__represents(V__EXPRESS,V__STATE) ) ) ) ).

fof(kb_SUMO_6781,axiom,
    s__subclass(s__LinguisticCommunication,s__Communication) ).

fof(kb_SUMO_6782,axiom,
    s__instance(s__LinguisticCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_6783,axiom,
    s__instance(s__Communication__t,s__SetOrClass) ).

fof(kb_SUMO_6784,axiom,
    s__documentation(s__LinguisticCommunication,s__EnglishLanguage,'A &%Communication that involves the transfer of information via a &%LinguisticExpression.') ).

fof(kb_SUMO_6785,axiom,
    ! [V__COMMUNICATE] :
      ( s__instance(V__COMMUNICATE,s__Process)
     => ( s__instance(V__COMMUNICATE,s__LinguisticCommunication)
       => ? [V__OBJ] :
            ( s__represents(V__COMMUNICATE,V__OBJ)
            & s__instance(V__OBJ,s__LinguisticExpression)
            & s__patient(V__COMMUNICATE,V__OBJ) ) ) ) ).

fof(kb_SUMO_6786,axiom,
    s__subclass(s__Stating,s__LinguisticCommunication) ).

fof(kb_SUMO_6787,axiom,
    s__instance(s__Stating__t,s__SetOrClass) ).

fof(kb_SUMO_6788,axiom,
    s__documentation(s__Stating,s__EnglishLanguage,'Instances of this &%Class commit the &%agent to some truth. For example, John claimed that the moon is made of green cheese.') ).

%FOL fof(kb_SUMO_6789,axiom,(( (! [V__FORMULA,V__AGENT,V__STATE] : ((s__instance(V__STATE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent)) => ((s__instance(V__STATE,s__Stating) & s__agent(V__STATE,V__AGENT) & s__patient(V__STATE,V__FORMULA) & s__instance(V__FORMULA,s__Formula)) => s__holdsDuring(s__WhenFn(V__STATE),'s__believes(V__AGENT,V__FORMULA)')))) ))).

fof(kb_SUMO_6790,axiom,
    s__subclass(s__Disagreeing,s__Stating) ).

fof(kb_SUMO_6791,axiom,
    s__instance(s__Disagreeing__t,s__SetOrClass) ).

fof(kb_SUMO_6792,axiom,
    s__documentation(s__Disagreeing,s__EnglishLanguage,'A &%Stating in which two &%Agents have contradictory statements. This is distinguished from &%Arguing in that the statement in dispute may be a simple assertion, rather than a chain of deduction, and that two entities must be disagreeing with each other, whereas a single entity may craft an argument for a given point of view, without the need for another agent to disagree with.') ).

fof(kb_SUMO_6793,axiom,
    ! [V__DIS] :
      ( s__instance(V__DIS,s__Process)
     => ( s__instance(V__DIS,s__Disagreeing)
       => ? [V__A1,V__A2,V__STATE1,V__STATE2,V__STMT1,V__STMT2] :
            ( s__instance(V__STMT2,s__Proposition)
            & s__instance(V__STMT1,s__Proposition)
            & s__instance(V__STATE2,s__Process)
            & s__instance(V__STATE2,s__ContentBearingPhysical)
            & s__instance(V__STATE1,s__Process)
            & s__instance(V__STATE1,s__ContentBearingPhysical)
            & s__instance(V__A2,s__Agent)
            & s__instance(V__A1,s__Agent)
            & s__subProcess(V__STATE1,V__DIS)
            & s__subProcess(V__STATE2,V__DIS)
            & s__agent(V__STATE1,V__A1)
            & s__agent(V__STATE2,V__A2)
            & s__containsInformation(V__STATE1,V__STMT1)
            & s__containsInformation(V__STATE2,V__STMT2)
            & ~ s__consistent(V__STMT1,V__STMT2) ) ) ) ).

fof(kb_SUMO_6794,axiom,
    s__subclass(s__Supposing,s__LinguisticCommunication) ).

fof(kb_SUMO_6795,axiom,
    s__instance(s__Supposing__t,s__SetOrClass) ).

fof(kb_SUMO_6796,axiom,
    s__documentation(s__Supposing,s__EnglishLanguage,'Instances of this &%Class suppose, for the sake of argument, that a proposition is true. For example, John considered what he would do if he won the lottery.') ).

fof(kb_SUMO_6797,axiom,
    s__subclass(s__Directing,s__LinguisticCommunication) ).

fof(kb_SUMO_6798,axiom,
    s__instance(s__Directing__t,s__SetOrClass) ).

fof(kb_SUMO_6799,axiom,
    s__documentation(s__Directing,s__EnglishLanguage,'Instances of this &%Class urge some further action among the receivers. A &%Directing can be an &%Ordering, a &%Requesting or a &%Questioning.') ).

fof(kb_SUMO_6800,axiom,
    s__subclass(s__Ordering,s__Directing) ).

fof(kb_SUMO_6801,axiom,
    s__instance(s__Ordering__t,s__SetOrClass) ).

fof(kb_SUMO_6802,axiom,
    s__documentation(s__Ordering,s__EnglishLanguage,'A &%Directing in which the receiver is commanded to realize the content of a &%ContentBearingObject. Orders are injunctions, the disobedience of which involves sanctions, or which express an obligation upon the part of the orderee.') ).

fof(kb_SUMO_6803,axiom,
    ! [V__ORDER,V__FORMULA] :
      ( ( s__instance(V__FORMULA,s__Formula)
        & s__instance(V__ORDER,s__Process) )
     => ( ( s__instance(V__ORDER,s__Ordering)
          & s__patient(V__ORDER,V__FORMULA) )
       => s__modalAttribute(V__FORMULA,s__Obligation) ) ) ).

fof(kb_SUMO_6804,axiom,
    s__subclass(s__Requesting,s__Directing) ).

fof(kb_SUMO_6805,axiom,
    s__instance(s__Requesting__t,s__SetOrClass) ).

fof(kb_SUMO_6806,axiom,
    s__documentation(s__Requesting,s__EnglishLanguage,'A request expresses a desire that some future action be performed. For example, the 5th Battalion requested air support from the 3rd Bomber Group. Note that this class covers proposals, recommendations, suggestions, etc.') ).

fof(kb_SUMO_6807,axiom,
    ! [V__REQUEST,V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__REQUEST,s__Process) )
     => ( ( s__instance(V__REQUEST,s__Requesting)
          & s__agent(V__REQUEST,V__AGENT)
          & s__patient(V__REQUEST,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__desires(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_6808,axiom,
    s__subclass(s__Questioning,s__Directing) ).

fof(kb_SUMO_6809,axiom,
    s__instance(s__Questioning__t,s__SetOrClass) ).

fof(kb_SUMO_6810,axiom,
    s__documentation(s__Questioning,s__EnglishLanguage,'A request for information. For example, John asked Bill if the President had said anything about taxes in his State of the Union address.') ).

fof(kb_SUMO_6811,axiom,
    ! [V__FORMULA,V__AGENT,V__QUESTION] :
      ( ( s__instance(V__QUESTION,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__QUESTION,s__Questioning)
          & s__agent(V__QUESTION,V__AGENT)
          & s__patient(V__QUESTION,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__holdsDuring(s__WhenFn(V__QUESTION),'(~ s__knows(V__AGENT,V__FORMULA))') ) ) ).

fof(kb_SUMO_6812,axiom,
    s__subclass(s__Committing,s__LinguisticCommunication) ).

fof(kb_SUMO_6813,axiom,
    s__documentation(s__Committing,s__EnglishLanguage,'Instances of this &%Class commit the &%agent to some future course. For example, Bob promised Susan that he would be home by 11pm.') ).

fof(kb_SUMO_6814,axiom,
    ! [V__FORMULA,V__COMMIT] :
      ( s__instance(V__COMMIT,s__Process)
     => ( ( s__instance(V__COMMIT,s__Committing)
          & s__patient(V__COMMIT,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__modalAttribute(V__FORMULA,s__Promise) ) ) ).

fof(kb_SUMO_6815,axiom,
    s__subclass(s__Offering,s__Committing) ).

fof(kb_SUMO_6816,axiom,
    s__instance(s__Offering__t,s__SetOrClass) ).

fof(kb_SUMO_6817,axiom,
    s__instance(s__Committing__t,s__SetOrClass) ).

fof(kb_SUMO_6818,axiom,
    s__documentation(s__Offering,s__EnglishLanguage,'The subclass of &%Committing in which a &%CognitiveAgent offers something &%Physical to another agent. Offerings may be unconditional (in which case they are a promise to effect a &%UnilateralGiving) or conditional (in which case they are a promise to effect a &%Transaction of some sort).') ).

fof(kb_SUMO_6819,axiom,
    s__subclass(s__Declaring,s__LinguisticCommunication) ).

fof(kb_SUMO_6820,axiom,
    s__instance(s__Declaring__t,s__SetOrClass) ).

fof(kb_SUMO_6821,axiom,
    s__documentation(s__Declaring,s__EnglishLanguage,'The &%Class of &%LinguisticCommunications that effect an institutional alteration when performed by competent authority. Some examples are nominating, marrying, and excommunicating.') ).

fof(kb_SUMO_6822,axiom,
    ! [V__DECLARE] :
      ( s__instance(V__DECLARE,s__Declaring)
     => ? [V__PROP,V__NORM] :
          ( s__instance(V__NORM,s__ObjectiveNorm)
          & s__instance(V__PROP,s__Formula)
          & ( s__confersNorm(V__DECLARE,V__PROP,V__NORM)
            | s__deprivesNorm(V__DECLARE,V__PROP,V__NORM) ) ) ) ).

fof(kb_SUMO_6823,axiom,
    s__subclass(s__Naming,s__Declaring) ).

fof(kb_SUMO_6824,axiom,
    s__instance(s__Naming__t,s__SetOrClass) ).

fof(kb_SUMO_6825,axiom,
    s__documentation(s__Naming,s__EnglishLanguage,'The &%Process of assigning a name to someone or something.') ).

%FOL fof(kb_SUMO_6826,axiom,(( (! [V__PROCESS,V__THING,V__NAME] : ((s__instance(V__NAME,s__SymbolicString) & s__instance(V__PROCESS,s__Process)) => ((s__instance(V__PROCESS,s__Naming) & s__patient(V__PROCESS,V__THING) & s__destination(V__PROCESS,V__NAME)) => s__holdsDuring(s__FutureFn(s__WhenFn(V__PROCESS)),'s__names(V__NAME,V__THING)')))) ))).

fof(kb_SUMO_6827,axiom,
    s__subclass(s__Cooperation,s__SocialInteraction) ).

fof(kb_SUMO_6828,axiom,
    s__instance(s__Cooperation__t,s__SetOrClass) ).

fof(kb_SUMO_6829,axiom,
    s__documentation(s__Cooperation,s__EnglishLanguage,'The &%subclass of &%SocialInteraction where the participants involved work together for the achievement of a common goal.') ).

fof(kb_SUMO_6830,axiom,
    ! [V__COOPERATE] :
      ( s__instance(V__COOPERATE,s__Cooperation)
     => ? [V__PURP] :
          ( s__instance(V__PURP,s__Formula)
          & ! [V__AGENT] :
              ( ( s__instance(V__AGENT,s__CognitiveAgent)
                & s__instance(V__COOPERATE,s__Process) )
             => ( s__agent(V__COOPERATE,V__AGENT)
               => s__hasPurposeForAgent(V__COOPERATE,V__PURP,V__AGENT) ) ) ) ) ).

fof(kb_SUMO_6831,axiom,
    s__subclass(s__Meeting,s__SocialInteraction) ).

fof(kb_SUMO_6832,axiom,
    s__instance(s__Meeting__t,s__SetOrClass) ).

fof(kb_SUMO_6833,axiom,
    s__instance(s__SocialInteraction__t,s__SetOrClass) ).

fof(kb_SUMO_6834,axiom,
    s__documentation(s__Meeting,s__EnglishLanguage,'The coming together of two or more &%CognitiveAgents for the purpose of &%Communication. This covers informal meetings, e.g. visits with family members, and formal meetings, e.g. a board of directors meeting.') ).

%FOL fof(kb_SUMO_6835,axiom,(( (! [V__MEET,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__MEET,s__Process)) => ((s__instance(V__MEET,s__Meeting) & s__agent(V__MEET,V__AGENT1) & s__agent(V__MEET,V__AGENT2)) => s__holdsDuring(s__WhenFn(V__MEET),'s__orientation(V__AGENT1,V__AGENT2,s__Near)')))) ))).

fof(kb_SUMO_6836,axiom,
    ! [V__MEET] :
      ( s__instance(V__MEET,s__Process)
     => ( s__instance(V__MEET,s__Meeting)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__agent(V__MEET,V__AGENT1)
            & s__agent(V__MEET,V__AGENT2)
            & s__hasPurpose(V__MEET,'(? [V__COMM] : (s__instance(V__COMM,s__Process) & s__instance(V__AGENT2,s__Agent) & s__instance(V__AGENT1,s__Agent) & s__instance(V__COMM,s__Communication) & s__agent(V__COMM,V__AGENT1) & s__agent(V__COMM,V__AGENT2)))') ) ) ) ).

fof(kb_SUMO_6837,axiom,
    s__subclass(s__Contest,s__SocialInteraction) ).

fof(kb_SUMO_6838,axiom,
    s__documentation(s__Contest,s__EnglishLanguage,'A &%SocialInteraction where the &%agent and &%patient are &%CognitiveAgents who are trying to defeat one another. Note that this concept is often applied in a metaphorical sense in natural language, when we speak, e.g., of the struggle of plants for space or sunlight, or of bacteria for food resources in some environment.') ).

fof(kb_SUMO_6839,axiom,
    ! [V__CONTEST] :
      ( s__instance(V__CONTEST,s__Process)
     => ( s__instance(V__CONTEST,s__Contest)
       => ? [V__AGENT1,V__AGENT2,V__PURP1,V__PURP2] :
            ( s__instance(V__PURP2,s__Formula)
            & s__instance(V__PURP1,s__Formula)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__agent(V__CONTEST,V__AGENT1)
            & s__agent(V__CONTEST,V__AGENT2)
            & s__hasPurposeForAgent(V__CONTEST,V__PURP1,V__AGENT1)
            & s__hasPurposeForAgent(V__CONTEST,V__PURP2,V__AGENT2)
            & V__AGENT1 != V__AGENT2
            & V__PURP1 != V__PURP2 ) ) ) ).

fof(kb_SUMO_6840,axiom,
    s__subclass(s__ViolentContest,s__Contest) ).

fof(kb_SUMO_6841,axiom,
    s__instance(s__Contest__t,s__SetOrClass) ).

fof(kb_SUMO_6842,axiom,
    s__documentation(s__ViolentContest,s__EnglishLanguage,'A &%Contest where one participant attempts to physically injure another participant.') ).

fof(kb_SUMO_6843,axiom,
    s__subclass(s__War,s__ViolentContest) ).

fof(kb_SUMO_6844,axiom,
    s__instance(s__War__t,s__SetOrClass) ).

fof(kb_SUMO_6845,axiom,
    s__instance(s__ViolentContest__t,s__SetOrClass) ).

fof(kb_SUMO_6846,axiom,
    s__documentation(s__War,s__EnglishLanguage,'A military confrontation between two or more &%GeopoliticalAreas or &%Organizations whose members are &%GeopoliticalAreas. As the corresponding axiom specifies, a &%War is made up of &%Battles.') ).

fof(kb_SUMO_6847,axiom,
    ! [V__WAR] :
      ( s__instance(V__WAR,s__Process)
     => ( s__instance(V__WAR,s__War)
       => ? [V__BATTLE] :
            ( s__instance(V__BATTLE,s__Process)
            & s__instance(V__BATTLE,s__Battle)
            & s__subProcess(V__BATTLE,V__WAR) ) ) ) ).

fof(kb_SUMO_6848,axiom,
    ! [V__AGENT,V__WAR] :
      ( ( s__instance(V__WAR,s__War)
        & s__agent(V__WAR,V__AGENT) )
     => ( s__instance(V__AGENT,s__GeopoliticalArea)
        | ( s__instance(V__AGENT,s__Organization)
          & ! [V__MEMBER] :
              ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
                & s__instance(V__WAR,s__Process)
                & s__instance(V__AGENT,s__Agent)
                & s__instance(V__AGENT,s__Collection) )
             => ( s__member(V__MEMBER,V__AGENT)
               => s__instance(V__MEMBER,s__GeopoliticalArea) ) ) ) ) ) ).

fof(kb_SUMO_6849,axiom,
    s__subclass(s__Battle,s__ViolentContest) ).

fof(kb_SUMO_6850,axiom,
    s__instance(s__Battle__t,s__SetOrClass) ).

fof(kb_SUMO_6851,axiom,
    s__documentation(s__Battle,s__EnglishLanguage,'A &%ViolentContest between two or more military units within the context of a war. Note that this does not cover the metaphorical sense of battle, which simply means a struggle of some sort. This sense should be represented with the more general concept of &%Contest.') ).

fof(kb_SUMO_6852,axiom,
    ! [V__BATTLE] :
      ( s__instance(V__BATTLE,s__Process)
     => ( s__instance(V__BATTLE,s__Battle)
       => ? [V__WAR] :
            ( s__instance(V__WAR,s__Process)
            & s__instance(V__WAR,s__War)
            & s__subProcess(V__BATTLE,V__WAR) ) ) ) ).

fof(kb_SUMO_6853,axiom,
    ! [V__BATTLE] :
      ( s__instance(V__BATTLE,s__Process)
     => ( s__instance(V__BATTLE,s__Battle)
       => ? [V__ATTACK] :
            ( s__instance(V__ATTACK,s__Process)
            & s__instance(V__ATTACK,s__ViolentContest)
            & s__subProcess(V__ATTACK,V__BATTLE) ) ) ) ).

fof(kb_SUMO_6854,axiom,
    s__subclass(s__Game,s__Contest) ).

fof(kb_SUMO_6855,axiom,
    s__instance(s__Game__t,s__SetOrClass) ).

fof(kb_SUMO_6856,axiom,
    s__subclass(s__Game,s__RecreationOrExercise) ).

fof(kb_SUMO_6857,axiom,
    s__documentation(s__Game,s__EnglishLanguage,'A &%Contest whose purpose is the enjoyment/stimulation of the participants or spectators of the &%Game.') ).

fof(kb_SUMO_6858,axiom,
    s__subclass(s__Sport,s__Game) ).

fof(kb_SUMO_6859,axiom,
    s__instance(s__Sport__t,s__SetOrClass) ).

fof(kb_SUMO_6860,axiom,
    s__documentation(s__Sport,s__EnglishLanguage,'A &%Game which requires some degree of physical exercion from the participants of the game.') ).

fof(kb_SUMO_6861,axiom,
    s__subclass(s__LegalAction,s__Contest) ).

fof(kb_SUMO_6862,axiom,
    s__instance(s__LegalAction__t,s__SetOrClass) ).

fof(kb_SUMO_6863,axiom,
    s__documentation(s__LegalAction,s__EnglishLanguage,'Any &%Process where a &%CognitiveAgent seeks to obtain something through a court of law.') ).

fof(kb_SUMO_6864,axiom,
    s__subclass(s__Maneuver,s__IntentionalProcess) ).

fof(kb_SUMO_6865,axiom,
    s__documentation(s__Maneuver,s__EnglishLanguage,'An intentional move or play within a &%Contest. In many cases, a &%Maneuver is a realization of part of a strategy for winning the &%Contest, but it also may be just an arbitrary or semi-arbitrary division of the overarching &%Contest, e.g. innings in a baseball game.') ).

fof(kb_SUMO_6866,axiom,
    ! [V__MOVE] :
      ( s__instance(V__MOVE,s__Process)
     => ( s__instance(V__MOVE,s__Maneuver)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__Contest)
            & s__subProcess(V__MOVE,V__CONTEST) ) ) ) ).

fof(kb_SUMO_6867,axiom,
    s__subclass(s__Attack,s__Maneuver) ).

fof(kb_SUMO_6868,axiom,
    s__instance(s__Attack__t,s__SetOrClass) ).

fof(kb_SUMO_6869,axiom,
    s__documentation(s__Attack,s__EnglishLanguage,'A &%Maneuver in a &%ViolentContest where the &%agent attempts to inflict damage on the &%patient.') ).

fof(kb_SUMO_6870,axiom,
    ! [V__ATTACK] :
      ( s__instance(V__ATTACK,s__Process)
     => ( s__instance(V__ATTACK,s__Attack)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__ViolentContest)
            & s__subProcess(V__ATTACK,V__CONTEST) ) ) ) ).

fof(kb_SUMO_6871,axiom,
    ! [V__OBJ,V__ATTACK,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ATTACK,s__Process) )
     => ( ( s__instance(V__ATTACK,s__Attack)
          & s__agent(V__ATTACK,V__AGENT)
          & s__patient(V__ATTACK,V__OBJ) )
       => s__hasPurposeForAgent(V__ATTACK,'(? [V__DAMAGE] : (s__instance(V__DAMAGE,s__Process) & s__instance(V__DAMAGE,s__Damaging) & s__patient(V__DAMAGE,V__OBJ)))',V__AGENT) ) ) ).

fof(kb_SUMO_6872,axiom,
    s__subclass(s__DefensiveManeuver,s__Maneuver) ).

fof(kb_SUMO_6873,axiom,
    s__instance(s__DefensiveManeuver__t,s__SetOrClass) ).

fof(kb_SUMO_6874,axiom,
    s__instance(s__Maneuver__t,s__SetOrClass) ).

fof(kb_SUMO_6875,axiom,
    s__documentation(s__DefensiveManeuver,s__EnglishLanguage,'A &%Maneuver in a &%ViolentContest where the &%agent attempts to avoid being damaged.') ).

fof(kb_SUMO_6876,axiom,
    ! [V__DEFENSE] :
      ( s__instance(V__DEFENSE,s__Process)
     => ( s__instance(V__DEFENSE,s__DefensiveManeuver)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__ViolentContest)
            & s__subProcess(V__DEFENSE,V__CONTEST) ) ) ) ).

fof(kb_SUMO_6877,axiom,
    ! [V__AGENT,V__DEFENSE] :
      ( ( s__instance(V__DEFENSE,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__DEFENSE,s__DefensiveManeuver)
          & s__agent(V__DEFENSE,V__AGENT) )
       => s__hasPurposeForAgent(V__DEFENSE,'(~ (? [V__DAMAGE] : (s__instance(V__DAMAGE,s__Process) & s__instance(V__DAMAGE,s__Damaging) & s__patient(V__DAMAGE,V__AGENT))))',V__AGENT) ) ) ).

fof(kb_SUMO_6878,axiom,
    ! [V__CONTEST,V__MANEUVER] :
      ( ( s__instance(V__MANEUVER,s__Process)
        & s__instance(V__CONTEST,s__Process) )
     => ( ( s__instance(V__MANEUVER,s__Maneuver)
          & s__instance(V__CONTEST,s__ViolentContest)
          & s__subProcess(V__MANEUVER,V__CONTEST) )
       => ( s__instance(V__MANEUVER,s__Attack)
          | s__instance(V__MANEUVER,s__DefensiveManeuver) ) ) ) ).

fof(kb_SUMO_6879,axiom,
    s__subclass(s__Perception,s__PsychologicalProcess) ).

fof(kb_SUMO_6880,axiom,
    s__documentation(s__Perception,s__EnglishLanguage,'Sensing some aspect of the material world. Note that the &%agent of this sensing is assumed to be an &%Animal.') ).

fof(kb_SUMO_6881,axiom,
    ! [V__PERCEPT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__PERCEPT,s__Process) )
     => ( ( s__instance(V__PERCEPT,s__Perception)
          & s__agent(V__PERCEPT,V__AGENT) )
       => s__instance(V__AGENT,s__Animal) ) ) ).

fof(kb_SUMO_6882,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( s__instance(V__AGENT,s__SentientAgent)
       => s__capability(s__Perception,s__experiencer__m,V__AGENT) ) ) ).

fof(kb_SUMO_6883,axiom,
    s__subclass(s__Seeing,s__Perception) ).

fof(kb_SUMO_6884,axiom,
    s__documentation(s__Seeing,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an ocular &%Organ.') ).

%FOL fof(kb_SUMO_6885,axiom,(( (! [V__OBJ,V__AGENT,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__agent(V__SEE,V__AGENT) & s__patient(V__SEE,V__OBJ)) => (? [V__PROP] : (s__instance(V__PROP,s__Attribute) & s__instance(V__PROP,s__ColorAttribute) & s__knows(V__AGENT,'s__attribute(V__OBJ,V__PROP)')))))) ))).

%FOL fof(kb_SUMO_6886,axiom,(( (! [V__OBJ,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__patient(V__SEE,V__OBJ)) => s__holdsDuring(s__WhenFn(V__SEE),'s__attribute(V__OBJ,s__Illuminated)')))) ))).

%FOL fof(kb_SUMO_6887,axiom,(( (! [V__OBJ,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__patient(V__SEE,V__OBJ)) => (? [V__ATTR] : (s__instance(V__ATTR,s__Attribute) & s__instance(V__ATTR,s__ColorAttribute) & s__holdsDuring(s__WhenFn(V__SEE),'s__attribute(V__OBJ,V__ATTR)')))))) ))).

fof(kb_SUMO_6888,axiom,
    s__subclass(s__Looking,s__Seeing) ).

fof(kb_SUMO_6889,axiom,
    s__instance(s__Looking__t,s__SetOrClass) ).

fof(kb_SUMO_6890,axiom,
    s__instance(s__Seeing__t,s__SetOrClass) ).

fof(kb_SUMO_6891,axiom,
    s__subclass(s__Looking,s__IntentionalProcess) ).

fof(kb_SUMO_6892,axiom,
    s__documentation(s__Looking,s__EnglishLanguage,'Any instance of &%Seeing which is intentional.') ).

fof(kb_SUMO_6893,axiom,
    s__subclass(s__Smelling,s__Perception) ).

fof(kb_SUMO_6894,axiom,
    s__instance(s__Smelling__t,s__SetOrClass) ).

fof(kb_SUMO_6895,axiom,
    s__instance(s__Perception__t,s__SetOrClass) ).

fof(kb_SUMO_6896,axiom,
    s__documentation(s__Smelling,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an olefactory &%Organ.') ).

fof(kb_SUMO_6897,axiom,
    ! [V__OBJ,V__SMELL] :
      ( ( s__instance(V__SMELL,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__SMELL,s__Smelling)
          & s__patient(V__SMELL,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__OlfactoryAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_6898,axiom,
    s__subclass(s__Tasting,s__Perception) ).

fof(kb_SUMO_6899,axiom,
    s__instance(s__Tasting__t,s__SetOrClass) ).

fof(kb_SUMO_6900,axiom,
    s__documentation(s__Tasting,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by of an &%Organ which can discriminate various tastes.') ).

fof(kb_SUMO_6901,axiom,
    ! [V__OBJ,V__TASTE] :
      ( ( s__instance(V__TASTE,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__TASTE,s__Tasting)
          & s__patient(V__TASTE,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__TasteAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_6902,axiom,
    s__subclass(s__Hearing,s__Perception) ).

fof(kb_SUMO_6903,axiom,
    s__documentation(s__Hearing,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an auditory &%Organ.') ).

fof(kb_SUMO_6904,axiom,
    ! [V__OBJ,V__HEAR] :
      ( ( s__instance(V__HEAR,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__HEAR,s__Hearing)
          & s__patient(V__HEAR,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SoundAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_6905,axiom,
    s__subclass(s__SoundAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_6906,axiom,
    s__instance(s__SoundAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6907,axiom,
    s__instance(s__PerceptualAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6908,axiom,
    s__subclass(s__SoundAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_6909,axiom,
    s__documentation(s__SoundAttribute,s__EnglishLanguage,'The volume of sound relative to a listener.') ).

fof(kb_SUMO_6910,axiom,
    s__instance(s__Audible,s__SoundAttribute) ).

fof(kb_SUMO_6911,axiom,
    s__documentation(s__Audible,s__EnglishLanguage,'A sound level capable of being heard by a &%Human.') ).

fof(kb_SUMO_6912,axiom,
    ! [V__HEAR,V__OBJ,V__SOUND] :
      ( ( s__instance(V__SOUND,s__Process)
        & s__instance(V__SOUND,s__Object)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__SOUND,s__RadiatingSound)
          & s__agent(V__SOUND,V__OBJ)
          & s__attribute(V__SOUND,s__Audible) )
       => ? [V__HUMAN] :
            ( s__instance(V__HUMAN,s__Agent)
            & s__instance(V__HUMAN,s__Human)
            & s__capability(s__KappaFn(V__HEAR,'(s__instance(V__HEAR,s__Hearing) & s__agent(V__HEAR,V__HUMAN) & s__destination(V__HEAR,V__HUMAN) & s__origin(V__HEAR,V__OBJ))'),s__agent__m,V__HUMAN) ) ) ) ).

fof(kb_SUMO_6913,axiom,
    s__subclass(s__Listening,s__Hearing) ).

fof(kb_SUMO_6914,axiom,
    s__instance(s__Hearing__t,s__SetOrClass) ).

fof(kb_SUMO_6915,axiom,
    s__subclass(s__Listening,s__IntentionalProcess) ).

fof(kb_SUMO_6916,axiom,
    s__instance(s__Listening__t,s__SetOrClass) ).

fof(kb_SUMO_6917,axiom,
    s__documentation(s__Listening,s__EnglishLanguage,'Any instance of &%Hearing which is intentional.') ).

fof(kb_SUMO_6918,axiom,
    s__subclass(s__TactilePerception,s__Perception) ).

fof(kb_SUMO_6919,axiom,
    s__instance(s__TactilePerception__t,s__SetOrClass) ).

fof(kb_SUMO_6920,axiom,
    s__documentation(s__TactilePerception,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by &%Touching. Note that &%Touching need not involve &%TactilePerception. For example, a person who has lost all sensation in both of his legs would have no &%TactilePerception of anything his legs were &%Touching.') ).

fof(kb_SUMO_6921,axiom,
    ! [V__TACTILE] :
      ( s__instance(V__TACTILE,s__Process)
     => ( s__instance(V__TACTILE,s__TactilePerception)
       => ? [V__TOUCH] :
            ( s__instance(V__TOUCH,s__Process)
            & s__instance(V__TOUCH,s__Touching)
            & s__subProcess(V__TOUCH,V__TACTILE) ) ) ) ).

fof(kb_SUMO_6922,axiom,
    s__subclass(s__Radiating,s__Motion) ).

fof(kb_SUMO_6923,axiom,
    s__documentation(s__Radiating,s__EnglishLanguage,'Processes in which some form of electromagnetic radiation, e.g. radio waves, light waves, electrical energy, etc., is given off or absorbed by something else.') ).

fof(kb_SUMO_6924,axiom,
    s__subclass(s__RadiatingLight,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_6925,axiom,
    s__instance(s__RadiatingLight__t,s__SetOrClass) ).

fof(kb_SUMO_6926,axiom,
    s__documentation(s__RadiatingLight,s__EnglishLanguage,'The &%subclass of &%Radiating in which light is given off or absorbed. Some examples include blinking, flashing, and glittering.') ).

fof(kb_SUMO_6927,axiom,
    ! [V__REGION] :
      ( s__instance(V__REGION,s__Object)
     => ( ? [V__EMIT] :
            ( s__instance(V__EMIT,s__Process)
            & s__instance(V__EMIT,s__RadiatingLight)
            & s__patient(V__EMIT,V__REGION)
            & s__instance(V__REGION,s__Region) )
      <=> s__attribute(V__REGION,s__Illuminated) ) ) ).

fof(kb_SUMO_6928,axiom,
    s__subclass(s__RadiatingInfrared,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_6929,axiom,
    s__instance(s__RadiatingInfrared__t,s__SetOrClass) ).

fof(kb_SUMO_6930,axiom,
    s__instance(s__RadiatingElectromagnetic__t,s__SetOrClass) ).

fof(kb_SUMO_6931,axiom,
    s__subclass(s__RadiatingXRay,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_6932,axiom,
    s__instance(s__RadiatingXRay__t,s__SetOrClass) ).

fof(kb_SUMO_6933,axiom,
    s__subclass(s__RadiatingSound,s__Radiating) ).

fof(kb_SUMO_6934,axiom,
    s__documentation(s__RadiatingSound,s__EnglishLanguage,'The &%subclass of &%Radiating in which sound waves are given off or absorbed. Some examples include creaking, roaring, and whistling.') ).

fof(kb_SUMO_6935,axiom,
    ! [V__SOUND,V__EMIT] :
      ( ( s__instance(V__EMIT,s__Process)
        & s__instance(V__SOUND,s__Agent) )
     => ( ( s__instance(V__EMIT,s__RadiatingSound)
          & s__agent(V__EMIT,V__SOUND) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SoundAttribute)
            & s__attribute(V__SOUND,V__ATTR) ) ) ) ).

fof(kb_SUMO_6936,axiom,
    s__subclass(s__MakingMusic,s__RadiatingSound) ).

fof(kb_SUMO_6937,axiom,
    s__instance(s__RadiatingSound__t,s__SetOrClass) ).

fof(kb_SUMO_6938,axiom,
    s__documentation(s__MakingMusic,s__EnglishLanguage,'&%MakingMusic is a type of &%RadiatingSound where the &%result is intended to be melodic and is produced delibrately') ).

fof(kb_SUMO_6939,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingMusic,'making music') ).

fof(kb_SUMO_6940,axiom,
    s__comment(s__MakingMusic,'Changing the old Music to &%MakingMusic to be more consistent with the verb-form that &%Process seem to take. (09-14-2011)','KJN') ).

fof(kb_SUMO_6941,axiom,
    s__partition_3(s__MakingMusic,s__MakingInstrumentalMusic,s__MakingVocalMusic) ).

fof(kb_SUMO_6942,axiom,
    s__subclass(s__MakingInstrumentalMusic,s__MakingMusic) ).

fof(kb_SUMO_6943,axiom,
    s__instance(s__MakingInstrumentalMusic__t,s__SetOrClass) ).

fof(kb_SUMO_6944,axiom,
    s__instance(s__MakingMusic__t,s__SetOrClass) ).

fof(kb_SUMO_6945,axiom,
    s__documentation(s__MakingInstrumentalMusic,s__EnglishLanguage,'&%MakingInstrumentalMusic is a type of &%MakingMusic which is produced using some kind of &%MusicalInstrument') ).

fof(kb_SUMO_6946,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingInstrumentalMusic,'instrumental music') ).

fof(kb_SUMO_6947,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Process)
     => ( s__instance(V__M,s__MakingInstrumentalMusic)
       => ? [V__I] :
            ( s__instance(V__I,s__Object)
            & s__instance(V__I,s__MusicalInstrument)
            & s__instrument(V__M,V__I) ) ) ) ).

fof(kb_SUMO_6948,axiom,
    s__subclass(s__MakingVocalMusic,s__MakingMusic) ).

fof(kb_SUMO_6949,axiom,
    s__instance(s__MakingVocalMusic__t,s__SetOrClass) ).

fof(kb_SUMO_6950,axiom,
    s__subclass(s__MakingVocalMusic,s__Vocalizing) ).

fof(kb_SUMO_6951,axiom,
    s__documentation(s__MakingVocalMusic,s__EnglishLanguage,'&%MakingVocalMusic is a type of &%MakingMusic which is produced by using the vocal cords') ).

fof(kb_SUMO_6952,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingVocalMusic,singing) ).

fof(kb_SUMO_6953,axiom,
    s__comment(s__MakingVocalMusic,'Currently, &%VocalMusic also inherits from &%Speaking. Changing this to more general &%Vocalizing. Acapella groups today use their &%VocalCord to create music in ways that are more than just speaking. (09-14-2011)','KJN') ).

fof(kb_SUMO_6954,axiom,
    s__subclass(s__Singing,s__MakingVocalMusic) ).

fof(kb_SUMO_6955,axiom,
    s__instance(s__Singing__t,s__SetOrClass) ).

fof(kb_SUMO_6956,axiom,
    s__documentation(s__Singing,s__EnglishLanguage,'&%Singing is a type of &%MakingVocalMusic wherein words are produced by the singer. This is different from other forms of &%MakingVocalMusic such as humming or scatting or beatboxing , where the vocal cords are used to create the music but no words are formed.') ).

fof(kb_SUMO_6957,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Singing)
       => ? [V__W] :
            ( s__patient(V__S,V__W)
            & s__instance(V__W,s__Word) ) ) ) ).

fof(kb_SUMO_6958,axiom,
    s__subclass(s__RadiatingElectromagnetic,s__Radiating) ).

fof(kb_SUMO_6959,axiom,
    s__documentation(s__RadiatingElectromagnetic,s__EnglishLanguage,'&%RadiatingElectromagnetic is the subclass of &%Radiating processes in which electromagnetic radiation is transmitted or absorbed.') ).

fof(kb_SUMO_6960,axiom,
    s__subclass(s__RadiatingNuclear,s__Radiating) ).

fof(kb_SUMO_6961,axiom,
    s__instance(s__RadiatingNuclear__t,s__SetOrClass) ).

fof(kb_SUMO_6962,axiom,
    s__instance(s__Radiating__t,s__SetOrClass) ).

fof(kb_SUMO_6963,axiom,
    s__documentation(s__RadiatingNuclear,s__EnglishLanguage,'Releasing atomic energy, i.e. energy from a nuclear reaction.') ).

fof(kb_SUMO_6964,axiom,
    s__subclass(s__StateChange,s__InternalChange) ).

fof(kb_SUMO_6965,axiom,
    s__documentation(s__StateChange,s__EnglishLanguage,'Any &%Process where the &%PhysicalState of &%part of the &%patient of the &%Process changes.') ).

%FOL fof(kb_SUMO_6966,axiom,(( (! [V__OBJ,V__PROCESS] : ((s__instance(V__PROCESS,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__PROCESS,s__StateChange) & s__patient(V__PROCESS,V__OBJ)) => (? [V__PART,V__STATE1,V__STATE2] : (s__instance(V__STATE2,s__Attribute) & s__instance(V__STATE1,s__Attribute) & s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__instance(V__STATE1,s__PhysicalState) & s__instance(V__STATE2,s__PhysicalState) & (~ (V__STATE1 = V__STATE2)) & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROCESS)),'s__attribute(V__PART,V__STATE1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROCESS)),'s__attribute(V__PART,V__STATE2)')))))) ))).

fof(kb_SUMO_6967,axiom,
    s__instance(s__atomicNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_6968,axiom,
    s__instance(s__atomicNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6969,axiom,
    s__domainSubclass(s__atomicNumber__m,"1",s__ElementalSubstance) ).

fof(kb_SUMO_6970,axiom,
    s__domain(s__atomicNumber__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_6971,axiom,
    s__documentation(s__atomicNumber__m,s__EnglishLanguage,'(&%atomicNumber ?ELEMENT ?NUMBER) means that the &%ElementalSubstance ?ELEMENT has the atomic number ?NUMBER. The atomic number is the number of &%Protons in the nucleus of an &%Atom.') ).

fof(kb_SUMO_6972,axiom,
    ! [V__PROTON,V__ATOM,V__NUMBER,V__SUBSTANCE,V__TYPE] :
      ( ( s__subclass(V__TYPE,s__ElementalSubstance)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__SUBSTANCE,s__Object)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__ATOM,s__Object) )
     => ( s__atomicNumber(V__TYPE,V__NUMBER)
       => ( ( s__instance(V__SUBSTANCE,V__TYPE)
            & s__part(V__ATOM,V__SUBSTANCE)
            & s__instance(V__ATOM,s__Atom) )
         => V__NUMBER = s__CardinalityFn(s__KappaFn(V__PROTON,'(s__part(V__PROTON,V__ATOM) & s__instance(V__PROTON,s__Proton))')) ) ) ) ).

fof(kb_SUMO_6973,axiom,
    s__instance(s__boilingPoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_6974,axiom,
    s__domainSubclass(s__boilingPoint__m,"1",s__PureSubstance) ).

fof(kb_SUMO_6975,axiom,
    s__domain(s__boilingPoint__m,"2",s__TemperatureMeasure) ).

fof(kb_SUMO_6976,axiom,
    s__documentation(s__boilingPoint__m,s__EnglishLanguage,'The temperature at which a &%PureSubstance changes state from a &%Liquid to a &%Gas.') ).

fof(kb_SUMO_6977,axiom,
    ! [V__TEMP,V__BOIL,V__PRES,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__PRES,s__RealNumber)
        & s__instance(V__BOIL,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__barometricPressure(V__X,s__MeasureFn(V__PRES,s__InchMercury))
          & greater("29.92",V__PRES)
          & s__boilingPoint(V__Y,s__MeasureFn(V__BOIL,s__KelvinDegree))
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & greater(V__TEMP,V__BOIL) )
       => s__attribute(V__X,s__Gas) ) ) ).

fof(kb_SUMO_6978,axiom,
    ! [V__TEMP,V__BOIL,V__MELT,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__MELT,s__RealNumber)
        & s__instance(V__BOIL,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__boilingPoint(V__Y,s__MeasureFn(V__BOIL,s__KelvinDegree))
          & s__meltingPoint(V__Y,s__MeasureFn(V__MELT,s__KelvinDegree))
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & greater(V__TEMP,V__MELT)
          & less(V__TEMP,V__BOIL) )
       => s__attribute(V__X,s__Liquid) ) ) ).

fof(kb_SUMO_6979,axiom,
    ! [V__TEMP,V__PRES,V__MELT,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__MELT,s__RealNumber)
        & s__instance(V__PRES,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__meltingPoint(V__Y,s__MeasureFn(V__MELT,s__KelvinDegree))
          & s__barometricPressure(V__X,s__MeasureFn(V__PRES,s__InchMercury))
          & greater(V__PRES,"29.92")
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & less(V__TEMP,V__MELT) )
       => s__attribute(V__X,s__Solid) ) ) ).

%FOL fof(kb_SUMO_6980,axiom,(( (! [V__TEMP2,V__TEMP1,V__BOILING,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__BOILING,s__Process) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__BOILING,s__Boiling) & s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__instance(V__SUBSTANCE,V__TYPE) & s__patient(V__BOILING,V__SUBSTANCE) & s__holdsDuring(s__WhenFn(V__BOILING),'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature)) => greatereq(V__TEMP2,V__TEMP1)))) ))).

%FOL fof(kb_SUMO_6981,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__instance(V__SUBSTANCE,V__TYPE) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature) & greatereq(V__TEMP2,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Gas)') | (? [V__BOIL] : (s__instance(V__BOIL,s__Process) & s__overlapsTemporally(s__WhenFn(V__BOIL),V__TIME) & s__instance(V__BOIL,s__Boiling) & s__patient(V__BOIL,V__SUBSTANCE))))))) ))).

fof(kb_SUMO_6982,axiom,
    s__instance(s__meltingPoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_6983,axiom,
    s__domainSubclass(s__meltingPoint__m,"1",s__PureSubstance) ).

fof(kb_SUMO_6984,axiom,
    s__domain(s__meltingPoint__m,"2",s__TemperatureMeasure) ).

fof(kb_SUMO_6985,axiom,
    s__documentation(s__meltingPoint__m,s__EnglishLanguage,'The temperature at which a &%PureSubstance changes state from a &%Solid to a &%Liquid. Note that &%Arsenic can sublimate directly from &%Solid to &%Gas which means that its melting and boiling points are equal.') ).

%FOL fof(kb_SUMO_6986,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__BOIL,V__TEMP3,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TEMP3,s__RealNumber) & s__instance(V__BOIL,s__Process) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__SUBSTANCE,V__TYPE) & s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__meltingPoint(V__TYPE,s__MeasureFn(V__TEMP2,V__MEASURE)) & s__instance(V__MEASURE,s__UnitOfTemperature) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP3,V__MEASURE))') & greater(V__TEMP3,V__TEMP2) & less(V__TEMP3,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Liquid)') | (? [V__MELT] : (s__instance(V__MELT,s__Physical) & s__overlapsTemporally(s__WhenFn(V__MELT),V__TIME) & s__instance(V__MELT,s__Melting) & s__patient(V__BOIL,V__SUBSTANCE))))))) ))).

%FOL fof(kb_SUMO_6987,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__SUBSTANCE,V__TYPE) & s__meltingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature) & less(V__TEMP2,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Solid)') | (? [V__FREEZE] : (s__instance(V__FREEZE,s__Process) & s__overlapsTemporally(s__WhenFn(V__FREEZE),V__TIME) & s__instance(V__FREEZE,s__Freezing) & s__patient(V__FREEZE,V__SUBSTANCE))))))) ))).

fof(kb_SUMO_6988,axiom,
    ! [V__BOIL,V__MELT,V__TYPE] :
      ( ( s__subclass(V__TYPE,s__PureSubstance)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__MELT,s__TemperatureMeasure)
        & s__instance(V__BOIL,s__TemperatureMeasure) )
     => ( ( s__meltingPoint(V__TYPE,V__MELT)
          & s__boilingPoint(V__TYPE,V__BOIL) )
       => greatereq(V__BOIL,V__MELT) ) ) ).

fof(kb_SUMO_6989,axiom,
    s__subclass(s__Melting,s__StateChange) ).

fof(kb_SUMO_6990,axiom,
    s__instance(s__Melting__t,s__SetOrClass) ).

fof(kb_SUMO_6991,axiom,
    s__documentation(s__Melting,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is heated and converted from a &%Solid to a &%Liquid.') ).

fof(kb_SUMO_6992,axiom,
    ! [V__MELT] :
      ( s__instance(V__MELT,s__Process)
     => ( s__instance(V__MELT,s__Melting)
       => ? [V__HEAT] :
            ( s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__subProcess(V__HEAT,V__MELT) ) ) ) ).

%FOL fof(kb_SUMO_6993,axiom,(( (! [V__OBJ,V__MELT] : ((s__instance(V__MELT,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MELT,s__Melting) & s__patient(V__MELT,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__MELT)),'s__attribute(V__PART,s__Solid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__MELT)),'s__attribute(V__PART,s__Liquid)')))))) ))).

fof(kb_SUMO_6994,axiom,
    s__subclass(s__Boiling,s__StateChange) ).

fof(kb_SUMO_6995,axiom,
    s__instance(s__Boiling__t,s__SetOrClass) ).

fof(kb_SUMO_6996,axiom,
    s__documentation(s__Boiling,s__EnglishLanguage,'The &%Class of &%Processes where a &%Substance is heated and converted from a &%Liquid to a &%Gas.') ).

fof(kb_SUMO_6997,axiom,
    ! [V__BOIL] :
      ( s__instance(V__BOIL,s__Process)
     => ( s__instance(V__BOIL,s__Boiling)
       => ? [V__HEAT] :
            ( s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__subProcess(V__HEAT,V__BOIL) ) ) ) ).

%FOL fof(kb_SUMO_6998,axiom,(( (! [V__OBJ,V__BOIL] : ((s__instance(V__BOIL,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__BOIL,s__Boiling) & s__patient(V__BOIL,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__BOIL)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__BOIL)),'s__attribute(V__PART,s__Gas)')))))) ))).

fof(kb_SUMO_6999,axiom,
    s__subclass(s__Evaporating,s__StateChange) ).

fof(kb_SUMO_7000,axiom,
    s__instance(s__Evaporating__t,s__SetOrClass) ).

fof(kb_SUMO_7001,axiom,
    s__documentation(s__Evaporating,s__EnglishLanguage,'The &%Class of &%Processes where a &%Substance is converted from a &%Liquid to a &%Gas at a temperature below its &%Boiling point.') ).

%FOL fof(kb_SUMO_7002,axiom,(( (! [V__BOILVAL,V__OBJ,V__MEAS,V__VAL,V__EVAP] : ((s__instance(V__EVAP,s__Process) & s__instance(V__VAL,s__RealNumber) & s__instance(V__MEAS,s__UnitOfMeasure) & s__subclass(V__OBJ,s__PureSubstance) & s__instance(V__OBJ,s__Object) & s__instance(V__OBJ,s__SetOrClass) & s__instance(V__BOILVAL,s__RealNumber)) => ((s__instance(V__EVAP,s__Evaporating) & s__boilingPoint(V__OBJ,s__MeasureFn(V__BOILVAL,V__MEAS)) & s__measure(V__OBJ,s__MeasureFn(V__VAL,V__MEAS)) & s__instance(V__MEAS,s__UnitOfTemperature) & s__patient(V__EVAP,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & greater(V__BOILVAL,V__VAL) & s__holdsDuring(s__BeginFn(s__WhenFn(V__EVAP)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__EVAP)),'s__attribute(V__PART,s__Gas)')))))) ))).

fof(kb_SUMO_7003,axiom,
    s__subclass(s__Condensing,s__StateChange) ).

fof(kb_SUMO_7004,axiom,
    s__instance(s__Condensing__t,s__SetOrClass) ).

fof(kb_SUMO_7005,axiom,
    s__instance(s__StateChange__t,s__SetOrClass) ).

fof(kb_SUMO_7006,axiom,
    s__documentation(s__Condensing,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is cooled and converted from a &%Gas to a &%Liquid.') ).

fof(kb_SUMO_7007,axiom,
    ! [V__COND] :
      ( s__instance(V__COND,s__Process)
     => ( s__instance(V__COND,s__Condensing)
       => ? [V__COOL] :
            ( s__instance(V__COOL,s__Process)
            & s__instance(V__COOL,s__Cooling)
            & s__subProcess(V__COOL,V__COND) ) ) ) ).

%FOL fof(kb_SUMO_7008,axiom,(( (! [V__OBJ,V__COND] : ((s__instance(V__COND,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__COND,s__Condensing) & s__patient(V__COND,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__COND)),'s__attribute(V__PART,s__Gas)') & s__holdsDuring(s__EndFn(s__WhenFn(V__COND)),'s__attribute(V__PART,s__Liquid)')))))) ))).

fof(kb_SUMO_7009,axiom,
    s__subclass(s__Freezing,s__StateChange) ).

fof(kb_SUMO_7010,axiom,
    s__instance(s__Freezing__t,s__SetOrClass) ).

fof(kb_SUMO_7011,axiom,
    s__documentation(s__Freezing,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is cooled and converted from a &%Liquid to a &%Solid.') ).

fof(kb_SUMO_7012,axiom,
    ! [V__FREEZE] :
      ( s__instance(V__FREEZE,s__Process)
     => ( s__instance(V__FREEZE,s__Freezing)
       => ? [V__COOL] :
            ( s__instance(V__COOL,s__Process)
            & s__instance(V__COOL,s__Cooling)
            & s__subProcess(V__COOL,V__FREEZE) ) ) ) ).

%FOL fof(kb_SUMO_7013,axiom,(( (! [V__OBJ,V__FREEZE] : ((s__instance(V__FREEZE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__FREEZE,s__Freezing) & s__patient(V__FREEZE,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__FREEZE)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__FREEZE)),'s__attribute(V__PART,s__Solid)')))))) ))).

fof(kb_SUMO_7014,axiom,
    s__subclass(s__AstronomicalBody,s__Object) ).

fof(kb_SUMO_7015,axiom,
    s__instance(s__AstronomicalBody__t,s__SetOrClass) ).

fof(kb_SUMO_7016,axiom,
    s__disjoint(s__AstronomicalBody,s__GeographicArea) ).

fof(kb_SUMO_7017,axiom,
    s__documentation(s__AstronomicalBody,s__EnglishLanguage,'The &%Class of all astronomical objects of significant size. It includes &%SelfConnectedObjects like planets, stars, and asteroids, as well as &%Collections like nebulae, galaxies, and constellations. Note that the planet Earth is an &%AstronomicalBody, but every &%Region of Earth is a &%GeographicArea.') ).

fof(kb_SUMO_7018,axiom,
    s__subclass(s__GeographicArea,s__Region) ).

fof(kb_SUMO_7019,axiom,
    s__instance(s__GeographicArea__t,s__SetOrClass) ).

fof(kb_SUMO_7020,axiom,
    s__instance(s__Region__t,s__SetOrClass) ).

fof(kb_SUMO_7021,axiom,
    s__partition_3(s__GeographicArea,s__WaterArea,s__LandArea) ).

fof(kb_SUMO_7022,axiom,
    s__documentation(s__GeographicArea,s__EnglishLanguage,'A geographic location, generally having definite boundaries. Note that this differs from its immediate superclass &%Region in that a &%GeographicArea is a three-dimensional &%Region of the earth. Accordingly, all astronomical objects other than earth and all one-dimensional and two-dimensional &%Regions are not classed under &%GeographicArea.') ).

fof(kb_SUMO_7023,axiom,
    s__subclass(s__LocalizablePlace,s__GeographicArea) ).

fof(kb_SUMO_7024,axiom,
    s__instance(s__LocalizablePlace__t,s__SetOrClass) ).

fof(kb_SUMO_7025,axiom,
    s__instance(s__geographicSubregion__m,s__BinaryPredicate) ).

fof(kb_SUMO_7026,axiom,
    s__instance(s__geographicSubregion__m,s__TransitiveRelation) ).

fof(kb_SUMO_7027,axiom,
    s__instance(s__geographicSubregion__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7028,axiom,
    s__subrelation(s__geographicSubregion__m,s__properPart__m) ).

fof(kb_SUMO_7029,axiom,
    s__subrelation(s__geographicSubregion__m,s__located__m) ).

fof(kb_SUMO_7030,axiom,
    s__domain(s__geographicSubregion__m,"1",s__GeographicArea) ).

fof(kb_SUMO_7031,axiom,
    s__domain(s__geographicSubregion__m,"2",s__GeographicArea) ).

fof(kb_SUMO_7032,axiom,
    s__documentation(s__geographicSubregion__m,s__EnglishLanguage,'(&%geographicSubregion ?PART ?WHOLE) means that the &%GeographicArea ?PART is part of the &%GeographicArea ?WHOLE.') ).

fof(kb_SUMO_7033,axiom,
    s__subclass(s__GeopoliticalArea,s__GeographicArea) ).

fof(kb_SUMO_7034,axiom,
    s__subclass(s__GeopoliticalArea,s__Agent) ).

fof(kb_SUMO_7035,axiom,
    s__documentation(s__GeopoliticalArea,s__EnglishLanguage,'Any &%GeographicArea which is associated with some sort of political structure. This class includes &%Lands, &%Cities, districts of cities, counties, etc. Note that the identity of a &%GeopoliticalArea may remain constant after a change in borders.') ).

fof(kb_SUMO_7036,axiom,
    ! [V__PERSON,V__AREA] :
      ( s__instance(V__PERSON,s__Human)
     => ( ( s__instance(V__AREA,s__GeopoliticalArea)
          & s__leader(s__GovernmentFn(V__AREA),V__PERSON) )
       => s__leader(V__AREA,V__PERSON) ) ) ).

fof(kb_SUMO_7037,axiom,
    ! [V__PERSON,V__AREA] :
      ( s__instance(V__PERSON,s__Human)
     => ( ( s__instance(V__AREA,s__GeopoliticalArea)
          & s__leader(V__AREA,V__PERSON) )
       => s__leader(s__GovernmentFn(V__AREA),V__PERSON) ) ) ).

fof(kb_SUMO_7038,axiom,
    ! [V__EVENT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Election)
          & s__agent(V__EVENT,V__AGENT)
          & s__instance(V__AGENT,s__GeopoliticalArea) )
       => s__instance(V__EVENT,s__PoliticalProcess) ) ) ).

fof(kb_SUMO_7039,axiom,
    ! [V__EVENT,V__AGENT,V__AREA] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Election)
          & s__agent(V__EVENT,V__AGENT)
          & s__instance(V__AREA,s__GeopoliticalArea)
          & s__instance(V__AGENT,s__GovernmentFn(V__AREA)) )
       => s__instance(V__EVENT,s__PoliticalProcess) ) ) ).

fof(kb_SUMO_7040,axiom,
    s__instance(s__geopoliticalSubdivision__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7041,axiom,
    s__instance(s__geopoliticalSubdivision__m,s__TransitiveRelation) ).

fof(kb_SUMO_7042,axiom,
    s__subrelation(s__geopoliticalSubdivision__m,s__geographicSubregion__m) ).

fof(kb_SUMO_7043,axiom,
    s__domain(s__geopoliticalSubdivision__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_7044,axiom,
    s__domain(s__geopoliticalSubdivision__m,"2",s__GeopoliticalArea) ).

fof(kb_SUMO_7045,axiom,
    s__documentation(s__geopoliticalSubdivision__m,s__EnglishLanguage,'(&%geopoliticalSubdivision ?AREA1 ?AREA2) means that ?AREA1 is any geopolitical part of ?AREA2, that is, ?AREA1 is an integral &%geographicSubregion of ?AREA2 (not a &%DependencyOrSpecialSovereigntyArea), having its own associated &%GovernmentOrganization which is subordinated to or constrained by the government of ?AREA2. Cf. &%dependentGeopoliticalArea.') ).

fof(kb_SUMO_7046,axiom,
    s__subclass(s__WaterArea,s__GeographicArea) ).

fof(kb_SUMO_7047,axiom,
    s__documentation(s__WaterArea,s__EnglishLanguage,'A body which is made up predominantly of water, e.g. rivers, lakes, oceans, etc.') ).

fof(kb_SUMO_7048,axiom,
    ! [V__AREA] :
      ( s__instance(V__AREA,s__WaterArea)
     => ? [V__BED,V__HOLE,V__WATER] :
          ( s__instance(V__WATER,s__Object)
          & s__instance(V__HOLE,s__Hole)
          & s__instance(V__BED,s__Object)
          & s__HoleHostFn(V__HOLE) = V__BED
          & s__instance(V__WATER,s__Water)
          & s__properlyFills(V__WATER,V__HOLE)
          & s__MereologicalSumFn(V__BED,V__WATER) = V__AREA ) ) ).

fof(kb_SUMO_7049,axiom,
    s__subclass(s__SaltWaterArea,s__WaterArea) ).

fof(kb_SUMO_7050,axiom,
    s__instance(s__SaltWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_7051,axiom,
    s__instance(s__WaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_7052,axiom,
    s__disjoint(s__SaltWaterArea,s__FreshWaterArea) ).

fof(kb_SUMO_7053,axiom,
    s__documentation(s__SaltWaterArea,s__EnglishLanguage,'A &%WaterArea whose &%Water is saline, e.g. oceans and seas.') ).

fof(kb_SUMO_7054,axiom,
    s__subclass(s__FreshWaterArea,s__WaterArea) ).

fof(kb_SUMO_7055,axiom,
    s__instance(s__FreshWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_7056,axiom,
    s__documentation(s__FreshWaterArea,s__EnglishLanguage,'A &%WaterArea whose &%Water is not saline, e.g. most rivers and lakes.') ).

fof(kb_SUMO_7057,axiom,
    s__subclass(s__LandArea,s__GeographicArea) ).

fof(kb_SUMO_7058,axiom,
    s__documentation(s__LandArea,s__EnglishLanguage,'An area which is predominantly solid ground, e.g. a &%Nation, a mountain, a desert, etc. Note that a &%LandArea may contain some relatively small &%WaterAreas. For example, Australia is a &%LandArea even though it contains various rivers and lakes.') ).

fof(kb_SUMO_7059,axiom,
    ! [V__LAND1] :
      ( s__instance(V__LAND1,s__Object)
     => ( s__instance(V__LAND1,s__LandArea)
       => ? [V__LAND2] :
            ( s__instance(V__LAND2,s__Object)
            & s__part(V__LAND1,V__LAND2)
            & ( s__instance(V__LAND2,s__Continent)
              | s__instance(V__LAND2,s__Island) ) ) ) ) ).

fof(kb_SUMO_7060,axiom,
    s__subclass(s__ShoreArea,s__LandArea) ).

fof(kb_SUMO_7061,axiom,
    s__instance(s__ShoreArea__t,s__SetOrClass) ).

fof(kb_SUMO_7062,axiom,
    s__documentation(s__ShoreArea,s__EnglishLanguage,'A &%ShoreArea is a &%LandArea approximately 1-3 km wide bordering a body of water, such as an ocean, bay, river, or lake. A &%ShoreArea may comprise a variety of &%LandForms, such as dunes, sloughs, and marshes.') ).

fof(kb_SUMO_7063,axiom,
    ! [V__BANK] :
      ( s__instance(V__BANK,s__Object)
     => ( s__instance(V__BANK,s__ShoreArea)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__meetsSpatially(V__BANK,V__WATER) ) ) ) ).

fof(kb_SUMO_7064,axiom,
    s__subclass(s__Continent,s__LandArea) ).

fof(kb_SUMO_7065,axiom,
    s__instance(s__Continent__t,s__SetOrClass) ).

fof(kb_SUMO_7066,axiom,
    s__CardinalityFn(s__Continent) = "7" ).

fof(kb_SUMO_7067,axiom,
    s__documentation(s__Continent,s__EnglishLanguage,'As defined in the CIA World Fact Book, &%Continent covers seven land masses: &%Africa, &%NorthAmerica, &%SouthAmerica, &%Antarctica, &%Europe, &%Asia, and &%Oceania. Note that &%Australia, counted as a continent in some other systems, is included in &%Oceania in the Fact Book. As a consequence, there is no &%Nation which is also a &%Continent.') ).

fof(kb_SUMO_7068,axiom,
    s__subclass(s__Island,s__LandArea) ).

fof(kb_SUMO_7069,axiom,
    s__instance(s__Island__t,s__SetOrClass) ).

fof(kb_SUMO_7070,axiom,
    s__documentation(s__Island,s__EnglishLanguage,'A &%LandArea that is completely surrounded by a &%WaterArea.') ).

fof(kb_SUMO_7071,axiom,
    ! [V__ISLAND] :
      ( s__instance(V__ISLAND,s__Object)
     => ( s__instance(V__ISLAND,s__Island)
       => ~ ? [V__AREA,V__PART1,V__PART2] :
              ( s__instance(V__PART2,s__Object)
              & s__instance(V__PART1,s__Object)
              & s__instance(V__AREA,s__Object)
              & s__instance(V__AREA,s__LandArea)
              & s__part(V__PART1,V__ISLAND)
              & s__part(V__PART2,V__AREA)
              & ~ s__part(V__ISLAND,V__AREA)
              & ~ s__part(V__AREA,V__ISLAND)
              & s__meetsSpatially(V__PART1,V__PART2) ) ) ) ).

fof(kb_SUMO_7072,axiom,
    ! [V__AREA,V__ISLE] :
      ( ( s__instance(V__ISLE,s__Object)
        & s__instance(V__AREA,s__Object) )
     => ( ( s__instance(V__ISLE,s__Island)
          & s__instance(V__AREA,s__GeographicArea)
          & s__meetsSpatially(V__ISLE,V__AREA) )
       => ~ s__instance(V__AREA,s__LandArea) ) ) ).

fof(kb_SUMO_7073,axiom,
    ! [V__ISLE] :
      ( s__instance(V__ISLE,s__Object)
     => ( s__instance(V__ISLE,s__Island)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__meetsSpatially(V__ISLE,V__WATER) ) ) ) ).

fof(kb_SUMO_7074,axiom,
    s__subclass(s__Nation,s__GeopoliticalArea) ).

fof(kb_SUMO_7075,axiom,
    s__instance(s__Nation__t,s__SetOrClass) ).

fof(kb_SUMO_7076,axiom,
    s__subclass(s__Nation,s__LandArea) ).

fof(kb_SUMO_7077,axiom,
    s__documentation(s__Nation,s__EnglishLanguage,'The broadest &%GeopoliticalArea, i.e. &%Nations are &%GeopoliticalAreas that are not part of any other overarching and comprehensive governance structure (excepting commonwealths and other sorts of loose international organizations).') ).

fof(kb_SUMO_7078,axiom,
    s__subclass(s__StateOrProvince,s__GeopoliticalArea) ).

fof(kb_SUMO_7079,axiom,
    s__instance(s__StateOrProvince__t,s__SetOrClass) ).

fof(kb_SUMO_7080,axiom,
    s__subclass(s__StateOrProvince,s__LandArea) ).

fof(kb_SUMO_7081,axiom,
    s__documentation(s__StateOrProvince,s__EnglishLanguage,'Administrative subdivisions of a &%Nation that are broader than any other political subdivisions that may exist. This &%Class includes the states of the United States, as well as the provinces of Canada and European countries.') ).

fof(kb_SUMO_7082,axiom,
    ! [V__STATE] :
      ( s__instance(V__STATE,s__Object)
     => ( s__instance(V__STATE,s__StateOrProvince)
       => ? [V__LAND] :
            ( s__instance(V__LAND,s__Object)
            & s__instance(V__LAND,s__Nation)
            & s__properPart(V__STATE,V__LAND) ) ) ) ).

fof(kb_SUMO_7083,axiom,
    s__subclass(s__City,s__GeopoliticalArea) ).

fof(kb_SUMO_7084,axiom,
    s__subclass(s__City,s__LandArea) ).

fof(kb_SUMO_7085,axiom,
    s__instance(s__City__t,s__SetOrClass) ).

fof(kb_SUMO_7086,axiom,
    s__documentation(s__City,s__EnglishLanguage,'A &%LandArea of relatively small size, inhabited by a community of people, and having some sort of political structure. Note that this class includes both large cities and small settlements like towns, villages, hamlets, etc.') ).

fof(kb_SUMO_7087,axiom,
    s__subclass(s__County,s__GeopoliticalArea) ).

fof(kb_SUMO_7088,axiom,
    s__instance(s__County__t,s__SetOrClass) ).

fof(kb_SUMO_7089,axiom,
    s__instance(s__GeopoliticalArea__t,s__SetOrClass) ).

fof(kb_SUMO_7090,axiom,
    s__subclass(s__County,s__LandArea) ).

fof(kb_SUMO_7091,axiom,
    s__instance(s__LandArea__t,s__SetOrClass) ).

fof(kb_SUMO_7092,axiom,
    s__documentation(s__County,s__EnglishLanguage,'A &%GeopoliticalArea that is larger than a city, usually encompassing several cities, and smaller than a &%StateOrProvince. Aside from City, this is the smallest geopolitical subdivision, and it is known by various names in various counties, e.g. parrish, commune, etc.') ).

fof(kb_SUMO_7093,axiom,
    ! [V__STATE] :
      ( s__instance(V__STATE,s__Object)
     => ( s__instance(V__STATE,s__County)
       => ? [V__LAND] :
            ( s__instance(V__LAND,s__Object)
            & s__instance(V__LAND,s__StateOrProvince)
            & s__properPart(V__STATE,V__LAND) ) ) ) ).

fof(kb_SUMO_7094,axiom,
    s__subclass(s__Transitway,s__Region) ).

fof(kb_SUMO_7095,axiom,
    s__subclass(s__Transitway,s__SelfConnectedObject) ).

fof(kb_SUMO_7096,axiom,
    s__documentation(s__Transitway,s__EnglishLanguage,'&%Transitway is the broadest class of regions which may be passed through as a &%path in instances of &%Translocation. &%Transitway includes land, air, and sea regions, and it includes both natural and artificial transitways.') ).

fof(kb_SUMO_7097,axiom,
    s__subclass(s__LandTransitway,s__Transitway) ).

fof(kb_SUMO_7098,axiom,
    s__instance(s__LandTransitway__t,s__SetOrClass) ).

fof(kb_SUMO_7099,axiom,
    s__instance(s__Transitway__t,s__SetOrClass) ).

fof(kb_SUMO_7100,axiom,
    s__subclass(s__LandTransitway,s__LandArea) ).

fof(kb_SUMO_7101,axiom,
    s__documentation(s__LandTransitway,s__EnglishLanguage,'&%LandTransitway is the subclass of &%Transitway that represents areas intended for motion over the ground.') ).

fof(kb_SUMO_7102,axiom,
    ! [V__WAY] :
      ( s__instance(V__WAY,s__Object)
     => ( s__instance(V__WAY,s__Transitway)
       => s__hasPurpose(V__WAY,'(? [V__TRANSPORT] : (s__instance(V__TRANSPORT,s__Motion) & s__instance(V__TRANSPORT,s__Transportation) & s__path(V__TRANSPORT,V__WAY)))') ) ) ).

fof(kb_SUMO_7103,axiom,
    s__subclass(s__Roadway,s__LandTransitway) ).

fof(kb_SUMO_7104,axiom,
    s__instance(s__Roadway__t,s__SetOrClass) ).

fof(kb_SUMO_7105,axiom,
    s__documentation(s__Roadway,s__EnglishLanguage,'&%Roadway is the subclass of &%LandTransitways that are areas intended for surface travel by self-powered, wheeled vehicles, excluding those that travel on tracks. &%Roadways have been at least minimally improved to enable the passage of vehicles. &%Roadways include dirt and gravelled roads, paved streets, and expressways.') ).

fof(kb_SUMO_7106,axiom,
    s__subclass(s__Water,s__CompoundSubstance) ).

fof(kb_SUMO_7107,axiom,
    s__instance(s__Water__t,s__SetOrClass) ).

fof(kb_SUMO_7108,axiom,
    s__documentation(s__Water,s__EnglishLanguage,'The &%Class of samples of the compound H20. Note that this &%Class covers both pure and impure &%Water.') ).

fof(kb_SUMO_7109,axiom,
    s__subclass(s__Mineral,s__Substance) ).

fof(kb_SUMO_7110,axiom,
    s__instance(s__Mineral__t,s__SetOrClass) ).

fof(kb_SUMO_7111,axiom,
    s__instance(s__Substance__t,s__SetOrClass) ).

fof(kb_SUMO_7112,axiom,
    s__documentation(s__Mineral,s__EnglishLanguage,'Any of various naturally occurring homogeneous substances (such as stone, coal, salt, sulfur, sand, petroleum), or synthetic substances having the chemical composition and crystalline form and properties of a naturally occurring mineral.') ).

fof(kb_SUMO_7113,axiom,
    s__instance(s__developmentalForm__m,s__BinaryPredicate) ).

fof(kb_SUMO_7114,axiom,
    s__instance(s__developmentalForm__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7115,axiom,
    s__instance(s__developmentalForm__m,s__TransitiveRelation) ).

fof(kb_SUMO_7116,axiom,
    s__subrelation(s__developmentalForm__m,s__attribute__m) ).

fof(kb_SUMO_7117,axiom,
    s__domain(s__developmentalForm__m,"1",s__OrganicObject) ).

fof(kb_SUMO_7118,axiom,
    s__domain(s__developmentalForm__m,"2",s__DevelopmentalAttribute) ).

fof(kb_SUMO_7119,axiom,
    s__documentation(s__developmentalForm__m,s__EnglishLanguage,'(&%developmentalForm ?OBJECT ?FORM) means that ?FORM describes a stage in the individual maturation of ?OBJECT. For example, tadpole and caterpillar are &%developmentalForms of frogs and butterflies, respectively.') ).

%FOL fof(kb_SUMO_7120,axiom,(( (! [V__OBJ,V__ATTR2,V__ATTR1,V__TIME1] : ((s__instance(V__TIME1,s__TimeInterval) & s__instance(V__ATTR1,s__DevelopmentalAttribute) & s__instance(V__ATTR2,s__DevelopmentalAttribute) & s__instance(V__OBJ,s__OrganicObject)) => ((s__holdsDuring(V__TIME1,'s__developmentalForm(V__OBJ,V__ATTR1)') & s__successorAttributeClosure(V__ATTR2,V__ATTR1)) => (? [V__TIME2] : (s__instance(V__TIME2,s__TimeInterval) & s__earlier(V__TIME2,V__TIME1) & s__holdsDuring(V__TIME2,'s__developmentalForm(V__OBJ,V__ATTR2)')))))) ))).

fof(kb_SUMO_7121,axiom,
    s__subclass(s__OrganicObject,s__CorpuscularObject) ).

fof(kb_SUMO_7122,axiom,
    s__instance(s__OrganicObject__t,s__SetOrClass) ).

fof(kb_SUMO_7123,axiom,
    s__instance(s__CorpuscularObject__t,s__SetOrClass) ).

fof(kb_SUMO_7124,axiom,
    s__subclass(s__OrganicObject,s__OrganicThing) ).

fof(kb_SUMO_7125,axiom,
    s__instance(s__OrganicThing__t,s__SetOrClass) ).

fof(kb_SUMO_7126,axiom,
    s__partition_3(s__OrganicObject,s__Organism,s__AnatomicalStructure) ).

fof(kb_SUMO_7127,axiom,
    s__documentation(s__OrganicObject,s__EnglishLanguage,'This class encompasses &%Organisms, &%CorpuscularObjects that are parts of &%Organisms, i.e. &%BodyParts, and &%CorpuscularObjects that are nonintentionally produced by &%Organisms, e.g. &%ReproductiveBodies.') ).

fof(kb_SUMO_7128,axiom,
    s__subclass(s__Organism,s__OrganicObject) ).

fof(kb_SUMO_7129,axiom,
    s__subclass(s__Organism,s__Agent) ).

fof(kb_SUMO_7130,axiom,
    s__disjoint(s__Organism,s__Artifact) ).

fof(kb_SUMO_7131,axiom,
    s__partition_4(s__Organism,s__Animal,s__Plant,s__Microorganism) ).

fof(kb_SUMO_7132,axiom,
    s__documentation(s__Organism,s__EnglishLanguage,'Generally, a living individual, including all &%Plants and &%Animals.') ).

fof(kb_SUMO_7133,axiom,
    ! [V__ORGANISM] :
      ( s__instance(V__ORGANISM,s__Agent)
     => ( s__instance(V__ORGANISM,s__Organism)
       => ? [V__BIRTH] :
            ( s__instance(V__BIRTH,s__Process)
            & s__instance(V__BIRTH,s__Birth)
            & s__experiencer(V__BIRTH,V__ORGANISM) ) ) ) ).

fof(kb_SUMO_7134,axiom,
    s__instance(s__inhabits__m,s__BinaryPredicate) ).

fof(kb_SUMO_7135,axiom,
    s__instance(s__inhabits__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7136,axiom,
    s__domain(s__inhabits__m,"1",s__Organism) ).

fof(kb_SUMO_7137,axiom,
    s__domain(s__inhabits__m,"2",s__Object) ).

fof(kb_SUMO_7138,axiom,
    s__documentation(s__inhabits__m,s__EnglishLanguage,'A very basic notion of living within something else. (&%inhabits ?ORGANISM ?OBJECT) means that ?OBJECT is the residence (either permanent or temporary), nest, etc. of ?ORGANISM.') ).

%FOL fof(kb_SUMO_7139,axiom,(( (! [V__OBJ,V__T1,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Organism) & s__instance(V__T1,s__TimePosition) & s__instance(V__OBJ,s__Object)) => (s__holdsDuring(V__T1,'s__inhabits(V__ORGANISM,V__OBJ)') => (? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__TIME,s__TimeInterval) & s__temporalPart(V__TIME,V__T1) & s__holdsDuring(V__TIME,'s__located(V__ORGANISM,V__OBJ)')))))) ))).

fof(kb_SUMO_7140,axiom,
    s__subrelation(s__home__m,s__inhabits__m) ).

fof(kb_SUMO_7141,axiom,
    s__domain(s__home__m,"1",s__Human) ).

fof(kb_SUMO_7142,axiom,
    s__domain(s__home__m,"2",s__PermanentResidence) ).

fof(kb_SUMO_7143,axiom,
    s__documentation(s__home__m,s__EnglishLanguage,'The relation between a &%Human and a &%PermanentResidence of the &%Human.') ).

fof(kb_SUMO_7144,axiom,
    s__subrelation(s__stays__m,s__inhabits__m) ).

fof(kb_SUMO_7145,axiom,
    s__disjointRelation(s__stays__m,s__home__m) ).

fof(kb_SUMO_7146,axiom,
    s__domain(s__stays__m,"1",s__Human) ).

fof(kb_SUMO_7147,axiom,
    s__domain(s__stays__m,"2",s__TemporaryResidence) ).

fof(kb_SUMO_7148,axiom,
    s__documentation(s__stays__m,s__EnglishLanguage,'The relation between a &%Human and a &%TemporaryResidence of the &%Human.') ).

fof(kb_SUMO_7149,axiom,
    s__subclass(s__Plant,s__Organism) ).

fof(kb_SUMO_7150,axiom,
    s__documentation(s__Plant,s__EnglishLanguage,'An &%Organism having cellulose cell walls, growing by synthesis of &%Substances, generally distinguished by the presence of chlorophyll, and lacking the power of locomotion.') ).

fof(kb_SUMO_7151,axiom,
    s__subclass(s__FloweringPlant,s__Plant) ).

fof(kb_SUMO_7152,axiom,
    s__instance(s__FloweringPlant__t,s__SetOrClass) ).

fof(kb_SUMO_7153,axiom,
    s__documentation(s__FloweringPlant,s__EnglishLanguage,'A &%Plant that produces seeds and flowers. This class includes trees, shrubs, herbs, and flowers.') ).

fof(kb_SUMO_7154,axiom,
    s__subclass(s__NonFloweringPlant,s__Plant) ).

fof(kb_SUMO_7155,axiom,
    s__instance(s__NonFloweringPlant__t,s__SetOrClass) ).

fof(kb_SUMO_7156,axiom,
    s__instance(s__Plant__t,s__SetOrClass) ).

fof(kb_SUMO_7157,axiom,
    s__disjoint(s__NonFloweringPlant,s__FloweringPlant) ).

fof(kb_SUMO_7158,axiom,
    s__disjointDecomposition_4(s__NonFloweringPlant,s__Alga,s__Fern,s__Moss) ).

fof(kb_SUMO_7159,axiom,
    s__documentation(s__NonFloweringPlant,s__EnglishLanguage,'A &%Plant that reproduces with spores and does not produce flowers.') ).

fof(kb_SUMO_7160,axiom,
    s__subclass(s__Alga,s__NonFloweringPlant) ).

fof(kb_SUMO_7161,axiom,
    s__instance(s__Alga__t,s__SetOrClass) ).

fof(kb_SUMO_7162,axiom,
    s__documentation(s__Alga,s__EnglishLanguage,'A chiefly aquatic plant that contains chlorophyll, but does not form embryos during development and lacks vascular tissue.') ).

fof(kb_SUMO_7163,axiom,
    ! [V__ALGA] :
      ( s__instance(V__ALGA,s__Organism)
     => ( s__instance(V__ALGA,s__Alga)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__inhabits(V__ALGA,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_7164,axiom,
    s__subclass(s__Fungus,s__Organism) ).

fof(kb_SUMO_7165,axiom,
    s__instance(s__Fungus__t,s__SetOrClass) ).

fof(kb_SUMO_7166,axiom,
    s__documentation(s__Fungus,s__EnglishLanguage,'A eukaryotic &%Organism characterized by the absence of chlorophyll and the presence of rigid cell walls. Included here are both slime molds and true fungi such as yeasts, molds, mildews, and mushrooms.') ).

fof(kb_SUMO_7167,axiom,
    ! [V__OBJ,V__FUNGUS] :
      ( ( s__instance(V__FUNGUS,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__FUNGUS,s__Fungus)
          & s__inhabits(V__FUNGUS,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_7168,axiom,
    s__subclass(s__Moss,s__NonFloweringPlant) ).

fof(kb_SUMO_7169,axiom,
    s__instance(s__Moss__t,s__SetOrClass) ).

fof(kb_SUMO_7170,axiom,
    s__documentation(s__Moss,s__EnglishLanguage,'A &%NonFloweringPlant without true roots and little if any vascular tissue.') ).

fof(kb_SUMO_7171,axiom,
    s__subclass(s__Fern,s__NonFloweringPlant) ).

fof(kb_SUMO_7172,axiom,
    s__instance(s__Fern__t,s__SetOrClass) ).

fof(kb_SUMO_7173,axiom,
    s__documentation(s__Fern,s__EnglishLanguage,'A &%NonFloweringPlant that contains vascular tissue. This class includes true ferns, as well as horsetails, club mosses, and whisk ferns.') ).

fof(kb_SUMO_7174,axiom,
    s__subclass(s__Animal,s__Organism) ).

fof(kb_SUMO_7175,axiom,
    s__partition_3(s__Animal,s__Vertebrate,s__Invertebrate) ).

fof(kb_SUMO_7176,axiom,
    s__documentation(s__Animal,s__EnglishLanguage,'An &%Organism with eukaryotic &%Cells, and lacking stiff cell walls, plastids, and photosynthetic pigments.') ).

fof(kb_SUMO_7177,axiom,
    s__subclass(s__Microorganism,s__Organism) ).

fof(kb_SUMO_7178,axiom,
    s__instance(s__Microorganism__t,s__SetOrClass) ).

fof(kb_SUMO_7179,axiom,
    s__instance(s__Organism__t,s__SetOrClass) ).

fof(kb_SUMO_7180,axiom,
    s__documentation(s__Microorganism,s__EnglishLanguage,'An &%Organism that can be seen only with the aid of a microscope.') ).

fof(kb_SUMO_7181,axiom,
    s__subclass(s__Bacterium,s__Microorganism) ).

fof(kb_SUMO_7182,axiom,
    s__instance(s__Bacterium__t,s__SetOrClass) ).

fof(kb_SUMO_7183,axiom,
    s__documentation(s__Bacterium,s__EnglishLanguage,'A small, typically one-celled, prokaryotic &%Microorganism.') ).

fof(kb_SUMO_7184,axiom,
    ! [V__BACTERIUM] :
      ( s__instance(V__BACTERIUM,s__Bacterium)
     => ? [V__CELL1] :
          ( s__instance(V__CELL1,s__CorpuscularObject)
          & s__component(V__CELL1,V__BACTERIUM)
          & s__instance(V__CELL1,s__Cell)
          & ! [V__CELL2] :
              ( ( s__instance(V__CELL2,s__CorpuscularObject)
                & s__instance(V__BACTERIUM,s__CorpuscularObject) )
             => ( ( s__component(V__CELL2,V__BACTERIUM)
                  & s__instance(V__CELL2,s__Cell) )
               => V__CELL1 = V__CELL2 ) ) ) ) ).

fof(kb_SUMO_7185,axiom,
    ! [V__OBJ,V__BACTERIUM] :
      ( ( s__instance(V__BACTERIUM,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__BACTERIUM,s__Bacterium)
          & s__inhabits(V__BACTERIUM,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_7186,axiom,
    s__subclass(s__Virus,s__Microorganism) ).

fof(kb_SUMO_7187,axiom,
    s__instance(s__Virus__t,s__SetOrClass) ).

fof(kb_SUMO_7188,axiom,
    s__documentation(s__Virus,s__EnglishLanguage,'An &%Organism consisting of a core of a single nucleic acid enclosed in a protective coat of protein. A virus may replicate only inside a host living cell. A virus exhibits some but not all of the usual characteristics of living things.') ).

fof(kb_SUMO_7189,axiom,
    ! [V__OBJ,V__VIRUS] :
      ( ( s__instance(V__VIRUS,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__VIRUS,s__Virus)
          & s__inhabits(V__VIRUS,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_7190,axiom,
    ! [V__VIRUS,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__VIRUS,s__Agent) )
     => ( ( s__instance(V__VIRUS,s__Virus)
          & s__instance(V__PROC,s__Replication)
          & s__agent(V__PROC,V__VIRUS) )
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__located(V__PROC,V__CELL)
            & s__instance(V__CELL,s__Cell) ) ) ) ).

fof(kb_SUMO_7191,axiom,
    s__subclass(s__Vertebrate,s__Animal) ).

fof(kb_SUMO_7192,axiom,
    s__documentation(s__Vertebrate,s__EnglishLanguage,'An &%Animal which has a spinal column.') ).

fof(kb_SUMO_7193,axiom,
    s__subclass(s__Invertebrate,s__Animal) ).

fof(kb_SUMO_7194,axiom,
    s__instance(s__Invertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_7195,axiom,
    s__instance(s__Animal__t,s__SetOrClass) ).

fof(kb_SUMO_7196,axiom,
    s__disjointDecomposition_4(s__Invertebrate,s__Worm,s__Mollusk,s__Arthropod) ).

fof(kb_SUMO_7197,axiom,
    s__documentation(s__Invertebrate,s__EnglishLanguage,'An &%Animal which has no spinal column.') ).

fof(kb_SUMO_7198,axiom,
    s__subclass(s__Worm,s__Invertebrate) ).

fof(kb_SUMO_7199,axiom,
    s__instance(s__Worm__t,s__SetOrClass) ).

fof(kb_SUMO_7200,axiom,
    s__documentation(s__Worm,s__EnglishLanguage,'Long, narrow, soft-bodied &%Invertebrates.') ).

fof(kb_SUMO_7201,axiom,
    s__subclass(s__Mollusk,s__Invertebrate) ).

fof(kb_SUMO_7202,axiom,
    s__instance(s__Mollusk__t,s__SetOrClass) ).

fof(kb_SUMO_7203,axiom,
    s__documentation(s__Mollusk,s__EnglishLanguage,'Soft-bodied &%Invertebrate that is usually contained in a shell. Includes oysters, clams, mussels, snails, slugs, octopi, and squid.') ).

fof(kb_SUMO_7204,axiom,
    s__subclass(s__Arthropod,s__Invertebrate) ).

fof(kb_SUMO_7205,axiom,
    s__disjointDecomposition_5(s__Arthropod,s__Arachnid,s__Myriapod,s__Insect,s__Crustacean) ).

fof(kb_SUMO_7206,axiom,
    s__documentation(s__Arthropod,s__EnglishLanguage,'A &%Class of &%Invertebrate that includes &%Arachnids and &%Insects.') ).

fof(kb_SUMO_7207,axiom,
    s__subclass(s__Arachnid,s__Arthropod) ).

fof(kb_SUMO_7208,axiom,
    s__instance(s__Arachnid__t,s__SetOrClass) ).

fof(kb_SUMO_7209,axiom,
    s__instance(s__Arthropod__t,s__SetOrClass) ).

fof(kb_SUMO_7210,axiom,
    s__documentation(s__Arachnid,s__EnglishLanguage,'A &%Class of &%Arthropods that includes ticks and spiders.') ).

fof(kb_SUMO_7211,axiom,
    s__subclass(s__Myriapod,s__Arthropod) ).

fof(kb_SUMO_7212,axiom,
    s__instance(s__Myriapod__t,s__SetOrClass) ).

fof(kb_SUMO_7213,axiom,
    s__documentation(s__Myriapod,s__EnglishLanguage,'A &%Class of &%Arthropods that includes centipedes and millipedes.') ).

fof(kb_SUMO_7214,axiom,
    s__subclass(s__Insect,s__Arthropod) ).

fof(kb_SUMO_7215,axiom,
    s__instance(s__Insect__t,s__SetOrClass) ).

fof(kb_SUMO_7216,axiom,
    s__documentation(s__Insect,s__EnglishLanguage,'A &%Class of small &%Arthropods that are air-breathing and that are distinguished by appearance.') ).

fof(kb_SUMO_7217,axiom,
    s__subclass(s__Crustacean,s__Arthropod) ).

fof(kb_SUMO_7218,axiom,
    s__instance(s__Crustacean__t,s__SetOrClass) ).

fof(kb_SUMO_7219,axiom,
    s__documentation(s__Crustacean,s__EnglishLanguage,'A &%Class of &%Arthropods that mainly dwells in water and has a segmented body and a chitinous exoskeleton. Includes lobsters, crabs, shrimp, and barnacles.') ).

fof(kb_SUMO_7220,axiom,
    s__subclass(s__ColdBloodedVertebrate,s__Vertebrate) ).

fof(kb_SUMO_7221,axiom,
    s__instance(s__Vertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_7222,axiom,
    s__disjointDecomposition_4(s__ColdBloodedVertebrate,s__Amphibian,s__Fish,s__Reptile) ).

fof(kb_SUMO_7223,axiom,
    s__documentation(s__ColdBloodedVertebrate,s__EnglishLanguage,'&%Vertebrates whose body temperature is not internally regulated.') ).

fof(kb_SUMO_7224,axiom,
    s__subclass(s__WarmBloodedVertebrate,s__Vertebrate) ).

fof(kb_SUMO_7225,axiom,
    s__disjoint(s__WarmBloodedVertebrate,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_7226,axiom,
    s__documentation(s__WarmBloodedVertebrate,s__EnglishLanguage,'&%Vertebrates whose body temperature is internally regulated.') ).

fof(kb_SUMO_7227,axiom,
    s__subclass(s__Amphibian,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_7228,axiom,
    s__instance(s__Amphibian__t,s__SetOrClass) ).

fof(kb_SUMO_7229,axiom,
    s__instance(s__ColdBloodedVertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_7230,axiom,
    s__documentation(s__Amphibian,s__EnglishLanguage,'A cold-blooded, smooth-skinned &%Vertebrate which characteristically hatches as an aquatic larva, breathing by gills. When mature, the &%Amphibian breathes with &%Lungs.') ).

fof(kb_SUMO_7231,axiom,
    s__subclass(s__Bird,s__WarmBloodedVertebrate) ).

fof(kb_SUMO_7232,axiom,
    s__instance(s__Bird__t,s__SetOrClass) ).

fof(kb_SUMO_7233,axiom,
    s__instance(s__WarmBloodedVertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_7234,axiom,
    s__disjoint(s__Bird,s__Mammal) ).

fof(kb_SUMO_7235,axiom,
    s__documentation(s__Bird,s__EnglishLanguage,'A &%Vertebrate having a constant body temperature and characterized by the presence of feathers.') ).

fof(kb_SUMO_7236,axiom,
    s__subclass(s__Fish,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_7237,axiom,
    s__instance(s__Fish__t,s__SetOrClass) ).

fof(kb_SUMO_7238,axiom,
    s__documentation(s__Fish,s__EnglishLanguage,'A cold-blooded aquatic &%Vertebrate characterized by fins and breathing by gills. Included here are &%Fish having either a bony skeleton, such as a perch, or a cartilaginous skeleton, such as a shark. Also included are those &%Fish lacking a jaw, such as a lamprey or hagfish.') ).

fof(kb_SUMO_7239,axiom,
    ! [V__FISH] :
      ( s__instance(V__FISH,s__Organism)
     => ( s__instance(V__FISH,s__Fish)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__inhabits(V__FISH,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_7240,axiom,
    s__subclass(s__Mammal,s__WarmBloodedVertebrate) ).

fof(kb_SUMO_7241,axiom,
    s__disjointDecomposition_6(s__Mammal,s__AquaticMammal,s__HoofedMammal,s__Marsupial,s__Rodent,s__Primate) ).

fof(kb_SUMO_7242,axiom,
    s__documentation(s__Mammal,s__EnglishLanguage,'A &%Vertebrate having a constant body temperature and characterized by the presence of hair, mammary glands, and sweat glands.') ).

fof(kb_SUMO_7243,axiom,
    s__subclass(s__AquaticMammal,s__Mammal) ).

fof(kb_SUMO_7244,axiom,
    s__instance(s__AquaticMammal__t,s__SetOrClass) ).

fof(kb_SUMO_7245,axiom,
    s__documentation(s__AquaticMammal,s__EnglishLanguage,'The &%Class of &%Mammals that dwell chiefly in the water. Includes whales, dolphins, manatees, seals, and walruses.') ).

fof(kb_SUMO_7246,axiom,
    s__subclass(s__HoofedMammal,s__Mammal) ).

fof(kb_SUMO_7247,axiom,
    s__instance(s__HoofedMammal__t,s__SetOrClass) ).

fof(kb_SUMO_7248,axiom,
    s__documentation(s__HoofedMammal,s__EnglishLanguage,'The &%Class of quadruped &%Mammals with hooves. Includes horses, cows, sheep, pigs, antelope, etc.') ).

fof(kb_SUMO_7249,axiom,
    s__subclass(s__Marsupial,s__Mammal) ).

fof(kb_SUMO_7250,axiom,
    s__instance(s__Marsupial__t,s__SetOrClass) ).

fof(kb_SUMO_7251,axiom,
    s__instance(s__Mammal__t,s__SetOrClass) ).

fof(kb_SUMO_7252,axiom,
    s__documentation(s__Marsupial,s__EnglishLanguage,'The &%Class of &%Mammals which have a pouch for their young.') ).

fof(kb_SUMO_7253,axiom,
    s__subclass(s__Carnivore,s__Mammal) ).

fof(kb_SUMO_7254,axiom,
    s__documentation(s__Carnivore,s__EnglishLanguage,'The &%Class of flesh-eating &%Mammals. Members of this &%Class typically have four or five claws on each paw. Includes cats, dogs, bears, racoons, and skunks.') ).

fof(kb_SUMO_7255,axiom,
    ! [V__EAT,V__CARNIVORE,V__PREY] :
      ( ( s__instance(V__CARNIVORE,s__Agent)
        & s__instance(V__EAT,s__Process) )
     => ( ( s__instance(V__CARNIVORE,s__Carnivore)
          & s__instance(V__EAT,s__Eating)
          & s__agent(V__EAT,V__CARNIVORE)
          & s__patient(V__EAT,V__PREY) )
       => s__instance(V__PREY,s__Animal) ) ) ).

fof(kb_SUMO_7256,axiom,
    s__subclass(s__Canine,s__Carnivore) ).

fof(kb_SUMO_7257,axiom,
    s__instance(s__Canine__t,s__SetOrClass) ).

fof(kb_SUMO_7258,axiom,
    s__instance(s__Carnivore__t,s__SetOrClass) ).

fof(kb_SUMO_7259,axiom,
    s__disjoint(s__Canine,s__Feline) ).

fof(kb_SUMO_7260,axiom,
    s__documentation(s__Canine,s__EnglishLanguage,'The &%Class of &%Carnivores with completely separable toes, nonretractable claws, and long muzzles.') ).

fof(kb_SUMO_7261,axiom,
    s__subclass(s__Feline,s__Carnivore) ).

fof(kb_SUMO_7262,axiom,
    s__instance(s__Feline__t,s__SetOrClass) ).

fof(kb_SUMO_7263,axiom,
    s__documentation(s__Feline,s__EnglishLanguage,'The &%Class of &%Carnivores with completely separable toes, slim bodies, and rounded heads. All felines other than the cheetah have retractable claws.') ).

fof(kb_SUMO_7264,axiom,
    s__subclass(s__Rodent,s__Mammal) ).

fof(kb_SUMO_7265,axiom,
    s__instance(s__Rodent__t,s__SetOrClass) ).

fof(kb_SUMO_7266,axiom,
    s__documentation(s__Rodent,s__EnglishLanguage,'The &%Class of &%Mammals with one or two pairs of incisors for gnawing. Includes rats, mice, guinea pigs, and rabbits.') ).

fof(kb_SUMO_7267,axiom,
    s__subclass(s__Primate,s__Mammal) ).

fof(kb_SUMO_7268,axiom,
    s__disjointDecomposition_4(s__Primate,s__Ape,s__Monkey,s__Hominid) ).

fof(kb_SUMO_7269,axiom,
    s__documentation(s__Primate,s__EnglishLanguage,'The &%Class of &%Mammals which are &%Primates.') ).

fof(kb_SUMO_7270,axiom,
    s__subclass(s__Ape,s__Primate) ).

fof(kb_SUMO_7271,axiom,
    s__instance(s__Ape__t,s__SetOrClass) ).

fof(kb_SUMO_7272,axiom,
    s__documentation(s__Ape,s__EnglishLanguage,'Various &%Primates with no tails or only short tails.') ).

fof(kb_SUMO_7273,axiom,
    s__subclass(s__Monkey,s__Primate) ).

fof(kb_SUMO_7274,axiom,
    s__instance(s__Monkey__t,s__SetOrClass) ).

fof(kb_SUMO_7275,axiom,
    s__instance(s__Primate__t,s__SetOrClass) ).

fof(kb_SUMO_7276,axiom,
    s__documentation(s__Monkey,s__EnglishLanguage,'Various &%Primates with relatively long tails.') ).

fof(kb_SUMO_7277,axiom,
    s__subclass(s__Hominid,s__Primate) ).

fof(kb_SUMO_7278,axiom,
    s__instance(s__Hominid__t,s__SetOrClass) ).

fof(kb_SUMO_7279,axiom,
    s__documentation(s__Hominid,s__EnglishLanguage,'Includes &%Humans and relatively recent ancestors of &%Humans.') ).

fof(kb_SUMO_7280,axiom,
    s__subclass(s__Human,s__Hominid) ).

fof(kb_SUMO_7281,axiom,
    s__subclass(s__Human,s__CognitiveAgent) ).

fof(kb_SUMO_7282,axiom,
    s__instance(s__CognitiveAgent__t,s__SetOrClass) ).

fof(kb_SUMO_7283,axiom,
    s__partition_3(s__Human,s__Man,s__Woman) ).

fof(kb_SUMO_7284,axiom,
    s__documentation(s__Human,s__EnglishLanguage,'Modern man, the only remaining species of the Homo genus.') ).

fof(kb_SUMO_7285,axiom,
    s__subclass(s__Man,s__Human) ).

fof(kb_SUMO_7286,axiom,
    s__instance(s__Man__t,s__SetOrClass) ).

fof(kb_SUMO_7287,axiom,
    s__documentation(s__Man,s__EnglishLanguage,'The class of &%Male &%Humans.') ).

fof(kb_SUMO_7288,axiom,
    ! [V__MAN] :
      ( s__instance(V__MAN,s__Object)
     => ( s__instance(V__MAN,s__Man)
       => s__attribute(V__MAN,s__Male) ) ) ).

fof(kb_SUMO_7289,axiom,
    s__subclass(s__Woman,s__Human) ).

fof(kb_SUMO_7290,axiom,
    s__instance(s__Woman__t,s__SetOrClass) ).

fof(kb_SUMO_7291,axiom,
    s__instance(s__Human__t,s__SetOrClass) ).

fof(kb_SUMO_7292,axiom,
    s__documentation(s__Woman,s__EnglishLanguage,'The class of &%Female &%Humans.') ).

fof(kb_SUMO_7293,axiom,
    ! [V__WOMAN] :
      ( s__instance(V__WOMAN,s__Object)
     => ( s__instance(V__WOMAN,s__Woman)
       => s__attribute(V__WOMAN,s__Female) ) ) ).

fof(kb_SUMO_7294,axiom,
    s__subclass(s__Reptile,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_7295,axiom,
    s__instance(s__Reptile__t,s__SetOrClass) ).

fof(kb_SUMO_7296,axiom,
    s__documentation(s__Reptile,s__EnglishLanguage,'A &%ColdBloodedVertebrate having an external covering of scales or horny plates. &%Reptiles breathe by means of &%Lungs and generally lay eggs.') ).

fof(kb_SUMO_7297,axiom,
    s__subclass(s__BiologicallyActiveSubstance,s__Substance) ).

fof(kb_SUMO_7298,axiom,
    s__instance(s__BiologicallyActiveSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_7299,axiom,
    s__documentation(s__BiologicallyActiveSubstance,s__EnglishLanguage,'A &%Substance that is capable of inducing a change in the structure or functioning of an &%Organism. This &%Class includes &%Substances used in the treatment, diagnosis, prevention or analysis of normal and abnormal body function. This &%Class also includes &%Substances that occur naturally in the body and are administered therapeutically. Finally, &%BiologicallyActiveSubstance includes &%Nutrients, most drugs of abuse, and agents that require special handling because of their toxicity.') ).

fof(kb_SUMO_7300,axiom,
    s__subclass(s__Nutrient,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_7301,axiom,
    s__disjointDecomposition_4(s__Nutrient,s__Protein,s__Carbohydrate,s__Vitamin) ).

fof(kb_SUMO_7302,axiom,
    s__documentation(s__Nutrient,s__EnglishLanguage,'A &%BiologicallyActiveSubstance required by an &%Organism. It is generally ingested as &%Food, and it is of primary interest because of its role in the biologic functioning of the &%Organism.') ).

fof(kb_SUMO_7303,axiom,
    s__subclass(s__Protein,s__Nutrient) ).

fof(kb_SUMO_7304,axiom,
    s__instance(s__Protein__t,s__SetOrClass) ).

fof(kb_SUMO_7305,axiom,
    s__instance(s__Nutrient__t,s__SetOrClass) ).

fof(kb_SUMO_7306,axiom,
    s__documentation(s__Protein,s__EnglishLanguage,'A &%Nutrient made up of amino acids joined by peptide bonds.') ).

fof(kb_SUMO_7307,axiom,
    s__subclass(s__Enzyme,s__Protein) ).

fof(kb_SUMO_7308,axiom,
    s__instance(s__Enzyme__t,s__SetOrClass) ).

fof(kb_SUMO_7309,axiom,
    s__documentation(s__Enzyme,s__EnglishLanguage,'A complex &%Protein that is produced by living cells and which catalyzes specific biochemical reactions. There are six main types of enzymes: oxidoreductases, transferases, hydrolases, lyases, isomerases, and ligases.') ).

fof(kb_SUMO_7310,axiom,
    s__subclass(s__Carbohydrate,s__Nutrient) ).

fof(kb_SUMO_7311,axiom,
    s__instance(s__Carbohydrate__t,s__SetOrClass) ).

fof(kb_SUMO_7312,axiom,
    s__documentation(s__Carbohydrate,s__EnglishLanguage,'An element of living cells and a source of energy for &%Animals. This class includes both simple &%Carbohydrates, i.e. sugars, and complex &%Carbohydrates, i.e. starches.') ).

fof(kb_SUMO_7313,axiom,
    s__subclass(s__Vitamin,s__Nutrient) ).

fof(kb_SUMO_7314,axiom,
    s__instance(s__Vitamin__t,s__SetOrClass) ).

fof(kb_SUMO_7315,axiom,
    s__documentation(s__Vitamin,s__EnglishLanguage,'A &%Nutrient present in natural products or made synthetically, which is essential in the diet of &%Humans and other higher &%Animals. Included here are &%Vitamin precursors and provitamins.') ).

fof(kb_SUMO_7316,axiom,
    s__subclass(s__LiquidMixture,s__Mixture) ).

fof(kb_SUMO_7317,axiom,
    s__partition_3(s__LiquidMixture,s__Solution,s__Suspension) ).

fof(kb_SUMO_7318,axiom,
    s__documentation(s__LiquidMixture,s__EnglishLanguage,'Any &%Mixture that satisfies two conditions, viz. it is made up predominantly of things which are a &%Liquid and any component other than &%Liquid in the &%Mixture is in the form of fine particles which are suspended in the &%Liquid.') ).

fof(kb_SUMO_7319,axiom,
    ! [V__MIX] :
      ( s__instance(V__MIX,s__Object)
     => ( s__instance(V__MIX,s__LiquidMixture)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__MIX)
            & s__attribute(V__PART,s__Liquid) ) ) ) ).

fof(kb_SUMO_7320,axiom,
    s__subclass(s__Solution,s__LiquidMixture) ).

fof(kb_SUMO_7321,axiom,
    s__instance(s__Solution__t,s__SetOrClass) ).

fof(kb_SUMO_7322,axiom,
    s__instance(s__LiquidMixture__t,s__SetOrClass) ).

fof(kb_SUMO_7323,axiom,
    s__documentation(s__Solution,s__EnglishLanguage,'A liquid mixture. The most abundant component in a solution is called the solvent. Other components are called solutes. A solution, though homogeneous, may nonetheless have variable composition. Any amount of salt, up to a maximum limit, can be dissolved in a given amount of water.') ).

fof(kb_SUMO_7324,axiom,
    s__subclass(s__Suspension,s__LiquidMixture) ).

fof(kb_SUMO_7325,axiom,
    s__instance(s__Suspension__t,s__SetOrClass) ).

fof(kb_SUMO_7326,axiom,
    s__documentation(s__Suspension,s__EnglishLanguage,'A &%LiquidMixture where at least one of the components of the &%Mixture is equally distributed throughout the &%Mixture but is not dissolved in it.') ).

fof(kb_SUMO_7327,axiom,
    s__subclass(s__GasMixture,s__Mixture) ).

fof(kb_SUMO_7328,axiom,
    s__instance(s__Mixture__t,s__SetOrClass) ).

fof(kb_SUMO_7329,axiom,
    s__disjoint(s__GasMixture,s__LiquidMixture) ).

fof(kb_SUMO_7330,axiom,
    s__documentation(s__GasMixture,s__EnglishLanguage,'Any &%Mixture that satisfies two conditions, viz. it is made up predominantly of things which are a &%Gas and any component other than &%Gas in the &%Mixture is in the form of fine particles which are suspended in the &%Gas.') ).

fof(kb_SUMO_7331,axiom,
    ! [V__MIX] :
      ( s__instance(V__MIX,s__Object)
     => ( s__instance(V__MIX,s__GasMixture)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__MIX)
            & s__attribute(V__PART,s__Gas) ) ) ) ).

fof(kb_SUMO_7332,axiom,
    s__subclass(s__Cloud,s__GasMixture) ).

fof(kb_SUMO_7333,axiom,
    s__instance(s__Cloud__t,s__SetOrClass) ).

fof(kb_SUMO_7334,axiom,
    s__instance(s__GasMixture__t,s__SetOrClass) ).

fof(kb_SUMO_7335,axiom,
    s__documentation(s__Cloud,s__EnglishLanguage,'Any &%GasMixture that is visible, e.g. &%Smoke produced by a fire or clouds of water vapor in the sky.') ).

fof(kb_SUMO_7336,axiom,
    ! [V__CLOUD] :
      ( s__instance(V__CLOUD,s__Object)
     => ( s__instance(V__CLOUD,s__Cloud)
       => s__capability(s__Seeing,s__patient__m,V__CLOUD) ) ) ).

fof(kb_SUMO_7337,axiom,
    s__subclass(s__Smoke,s__Cloud) ).

fof(kb_SUMO_7338,axiom,
    s__instance(s__Smoke__t,s__SetOrClass) ).

fof(kb_SUMO_7339,axiom,
    s__documentation(s__Smoke,s__EnglishLanguage,'A mixture of fine particles suspended in a gas that is produced by &%Combustion.') ).

fof(kb_SUMO_7340,axiom,
    ! [V__SMOKE] :
      ( s__instance(V__SMOKE,s__Smoke)
     => ? [V__BURNING] :
          ( s__instance(V__BURNING,s__Process)
          & s__instance(V__BURNING,s__Combustion)
          & s__result(V__BURNING,V__SMOKE) ) ) ).

fof(kb_SUMO_7341,axiom,
    s__subclass(s__WaterCloud,s__Cloud) ).

fof(kb_SUMO_7342,axiom,
    s__instance(s__WaterCloud__t,s__SetOrClass) ).

fof(kb_SUMO_7343,axiom,
    s__documentation(s__WaterCloud,s__EnglishLanguage,'Any &%Cloud that is composed primarily of water vapor.') ).

fof(kb_SUMO_7344,axiom,
    ! [V__CLOUD] :
      ( s__instance(V__CLOUD,s__Object)
     => ( s__instance(V__CLOUD,s__WaterCloud)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__Water)
            & s__part(V__WATER,V__CLOUD) ) ) ) ).

fof(kb_SUMO_7345,axiom,
    ! [V__MEASURE2,V__MEASURE1,V__CLOUD] :
      ( s__instance(V__CLOUD,s__WaterCloud)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__CLOUD,s__Object)
            & s__instance(V__MEASURE1,s__PhysicalQuantity)
            & s__instance(V__MEASURE2,s__PhysicalQuantity) )
         => ( ( s__part(V__PART,V__CLOUD)
              & ~ s__instance(V__PART,s__Water) )
           => ? [V__WATER] :
                ( s__instance(V__WATER,s__Object)
                & s__instance(V__WATER,s__Water)
                & s__part(V__WATER,V__CLOUD)
                & s__measure(V__WATER,V__MEASURE1)
                & s__measure(V__PART,V__MEASURE2)
                & greater(V__MEASURE1,V__MEASURE2) ) ) ) ) ).

fof(kb_SUMO_7346,axiom,
    s__subclass(s__Air,s__GasMixture) ).

fof(kb_SUMO_7347,axiom,
    s__instance(s__Air__t,s__SetOrClass) ).

fof(kb_SUMO_7348,axiom,
    s__documentation(s__Air,s__EnglishLanguage,'&%Air is the gaseous stuff that makes up the atmosphere surrounding Earth.') ).

fof(kb_SUMO_7349,axiom,
    ! [V__WIND] :
      ( s__instance(V__WIND,s__Process)
     => ( s__instance(V__WIND,s__Wind)
       => ? [V__AIR] :
            ( s__patient(V__WIND,V__AIR)
            & s__instance(V__AIR,s__Air) ) ) ) ).

fof(kb_SUMO_7350,axiom,
    s__subclass(s__BodySubstance,s__Substance) ).

fof(kb_SUMO_7351,axiom,
    s__instance(s__BodySubstance__t,s__SetOrClass) ).

fof(kb_SUMO_7352,axiom,
    s__documentation(s__BodySubstance,s__EnglishLanguage,'Extracellular material and mixtures of cells and extracellular material that are produced, excreted or accreted by an &%Organism. Included here are &%Substances such as saliva, dental enamel, sweat, hormones, and gastric acid.') ).

fof(kb_SUMO_7353,axiom,
    s__subclass(s__AnimalSubstance,s__BodySubstance) ).

fof(kb_SUMO_7354,axiom,
    s__documentation(s__AnimalSubstance,s__EnglishLanguage,'&%BodySubstances that are produced exclusively by &%Animals.') ).

fof(kb_SUMO_7355,axiom,
    ! [V__SUBSTANCE,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__SUBSTANCE,s__Object) )
     => ( ( s__instance(V__SUBSTANCE,s__AnimalSubstance)
          & s__instance(V__ANIMAL,s__Organism)
          & s__part(V__SUBSTANCE,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Animal) ) ) ).

fof(kb_SUMO_7356,axiom,
    s__subclass(s__PlantSubstance,s__BodySubstance) ).

fof(kb_SUMO_7357,axiom,
    s__instance(s__PlantSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_7358,axiom,
    s__documentation(s__PlantSubstance,s__EnglishLanguage,'&%BodySubstances that are produced exclusively by &%Plants.') ).

fof(kb_SUMO_7359,axiom,
    ! [V__PLANT,V__SUBSTANCE] :
      ( ( s__instance(V__SUBSTANCE,s__Object)
        & s__instance(V__PLANT,s__Object) )
     => ( ( s__instance(V__SUBSTANCE,s__PlantSubstance)
          & s__instance(V__PLANT,s__Organism)
          & s__part(V__SUBSTANCE,V__PLANT) )
       => s__instance(V__PLANT,s__Plant) ) ) ).

fof(kb_SUMO_7360,axiom,
    s__subclass(s__Hormone,s__BodySubstance) ).

fof(kb_SUMO_7361,axiom,
    s__instance(s__Hormone__t,s__SetOrClass) ).

fof(kb_SUMO_7362,axiom,
    s__subclass(s__Hormone,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_7363,axiom,
    s__documentation(s__Hormone,s__EnglishLanguage,'In &%Animals, a chemical secreted by an endocrine gland whose products are released into the circulating fluid. &%Plant hormones or synthetic hormones which are used only to alter or control various physiologic processes, e.g., reproductive control agents, are assigned to the &%Class &%BiologicallyActiveSubstance. &%Hormones act as chemical messengers and regulate various physiologic processes such as growth, reproduction, metabolism, etc. They usually fall into two broad categories, viz. steroid hormones and peptide hormones.') ).

fof(kb_SUMO_7364,axiom,
    ! [V__HORMONE] :
      ( s__instance(V__HORMONE,s__Hormone)
     => ? [V__PROCESS,V__GLAND] :
          ( s__instance(V__GLAND,s__Object)
          & s__instance(V__PROCESS,s__Process)
          & s__instance(V__GLAND,s__Gland)
          & s__instrument(V__PROCESS,V__GLAND)
          & s__result(V__PROCESS,V__HORMONE) ) ) ).

fof(kb_SUMO_7365,axiom,
    s__subclass(s__Blood,s__BodySubstance) ).

fof(kb_SUMO_7366,axiom,
    s__instance(s__Blood__t,s__SetOrClass) ).

fof(kb_SUMO_7367,axiom,
    s__documentation(s__Blood,s__EnglishLanguage,'A fluid present in &%Animals that transports &%Nutrients to and waste products away from various &%BodyParts.') ).

fof(kb_SUMO_7368,axiom,
    s__instance(s__FoodForFn__m,s__UnaryFunction) ).

fof(kb_SUMO_7369,axiom,
    s__domainSubclass(s__FoodForFn__m,"1",s__Organism) ).

fof(kb_SUMO_7370,axiom,
    s__rangeSubclass(s__FoodForFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_7371,axiom,
    s__documentation(s__FoodForFn__m,s__EnglishLanguage,'A &%Function that denotes &%SelfConnectedObject containing &%Nutrients, such as carbohydrates, proteins, and fats, that can be ingested by a the given class of living &%Animal and metabolized into energy and body tissue.') ).

fof(kb_SUMO_7372,axiom,
    ! [V__A,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__subclass(V__A,s__Organism)
        & s__instance(V__A,s__SetOrClass) )
     => ( s__instance(V__FOOD,s__FoodForFn(V__A))
       => ? [V__NUTRIENT] :
            ( s__instance(V__NUTRIENT,s__Object)
            & s__instance(V__NUTRIENT,s__Nutrient)
            & s__part(V__NUTRIENT,V__FOOD) ) ) ) ).

fof(kb_SUMO_7373,axiom,
    s__subclass(s__Meat,s__SelfConnectedObject) ).

fof(kb_SUMO_7374,axiom,
    s__instance(s__Meat__t,s__SetOrClass) ).

fof(kb_SUMO_7375,axiom,
    s__documentation(s__Meat,s__EnglishLanguage,'Any food which was originally part of an &%Animal and is not ingested by drinking, including eggs and animal blood that is eaten as food. Note that this class covers both raw meat and meat that has been prepared in some way, e.g. by cooking. Note too that preparations involving &%Meat and &%FruitOrVegetable are classed directly under &%Food.') ).

fof(kb_SUMO_7376,axiom,
    ! [V__MEAT] :
      ( s__instance(V__MEAT,s__Meat)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__MEAT,s__Object) )
         => ( s__part(V__PART,V__MEAT)
           => ? [V__SUBPART,V__TIME,V__ANIMAL] :
                ( s__instance(V__ANIMAL,s__Object)
                & s__instance(V__TIME,s__TimePosition)
                & s__instance(V__SUBPART,s__Object)
                & s__part(V__SUBPART,V__PART)
                & s__holdsDuring(V__TIME,'(s__instance(V__ANIMAL,s__Animal) & s__part(V__SUBPART,V__ANIMAL))') ) ) ) ) ).

fof(kb_SUMO_7377,axiom,
    s__subclass(s__AnatomicalStructure,s__OrganicObject) ).

fof(kb_SUMO_7378,axiom,
    s__partition_3(s__AnatomicalStructure,s__BodyPart,s__AbnormalAnatomicalStructure) ).

fof(kb_SUMO_7379,axiom,
    s__partition_3(s__AnatomicalStructure,s__AnimalAnatomicalStructure,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_7380,axiom,
    s__documentation(s__AnatomicalStructure,s__EnglishLanguage,'A normal or pathological part of the anatomy or structural organization of an &%Organism. This class covers &%BodyParts, as well as structures that are given off by &%Organisms, e.g. &%ReproductiveBodies.') ).

%FOL fof(kb_SUMO_7381,axiom,(( (! [V__ANAT] : (s__instance(V__ANAT,s__Object) => (s__instance(V__ANAT,s__AnatomicalStructure) => (? [V__ORGANISM,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__ORGANISM,s__Object) & s__instance(V__ORGANISM,s__Organism) & s__temporalPart(V__TIME,s__WhenFn(V__ORGANISM)) & s__holdsDuring(V__TIME,'s__part(V__ANAT,V__ORGANISM)')))))) ))).

fof(kb_SUMO_7382,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__Object)
     => ( s__instance(V__PART,s__AnatomicalStructure)
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__instance(V__CELL,s__Cell)
            & s__part(V__CELL,V__PART) ) ) ) ).

fof(kb_SUMO_7383,axiom,
    s__subclass(s__AbnormalAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_7384,axiom,
    s__instance(s__AbnormalAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_7385,axiom,
    s__instance(s__AnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_7386,axiom,
    s__documentation(s__AbnormalAnatomicalStructure,s__EnglishLanguage,'Any &%AnatomicalStructure which is not normally found in the &%Organism of which it is a part, i.e. it is the result of a &%PathologicProcess. This class covers tumors, birth marks, goiters, etc.') ).

fof(kb_SUMO_7387,axiom,
    ! [V__STRUCTURE] :
      ( s__instance(V__STRUCTURE,s__AbnormalAnatomicalStructure)
     => ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__PathologicProcess)
          & s__result(V__PROC,V__STRUCTURE) ) ) ).

fof(kb_SUMO_7388,axiom,
    s__subclass(s__BodyPart,s__AnatomicalStructure) ).

fof(kb_SUMO_7389,axiom,
    s__documentation(s__BodyPart,s__EnglishLanguage,'A collection of &%Cells and &%Tissues which are localized to a specific area of an &%Organism and which are not pathological. The instances of this &%Class range from gross structures to small components of complex &%Organs.') ).

%FOL fof(kb_SUMO_7390,axiom,(( (! [V__PART] : (s__instance(V__PART,s__CorpuscularObject) => (s__instance(V__PART,s__BodyPart) => (? [V__ORGANISM,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__ORGANISM,s__CorpuscularObject) & s__instance(V__ORGANISM,s__Organism) & s__temporalPart(V__TIME,s__WhenFn(V__ORGANISM)) & s__holdsDuring(V__TIME,'s__component(V__PART,V__ORGANISM)')))))) ))).

fof(kb_SUMO_7391,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__BodyPart)
     => ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__PhysiologicProcess)
          & s__result(V__PROC,V__PART) ) ) ).

fof(kb_SUMO_7392,axiom,
    s__subclass(s__AnimalAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_7393,axiom,
    s__instance(s__AnimalAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_7394,axiom,
    s__documentation(s__AnimalAnatomicalStructure,s__EnglishLanguage,'&%AnatomicalStructures that are possessed exclusively by &%Animals.') ).

fof(kb_SUMO_7395,axiom,
    ! [V__STRUCTURE,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__STRUCTURE,s__Object) )
     => ( ( s__instance(V__STRUCTURE,s__AnimalAnatomicalStructure)
          & s__instance(V__ANIMAL,s__Organism)
          & s__part(V__STRUCTURE,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Animal) ) ) ).

fof(kb_SUMO_7396,axiom,
    s__subclass(s__PlantAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_7397,axiom,
    s__documentation(s__PlantAnatomicalStructure,s__EnglishLanguage,'&%AnatomicalStructures that are possessed exclusively by &%Plants.') ).

fof(kb_SUMO_7398,axiom,
    ! [V__STRUCTURE,V__PLANT] :
      ( ( s__instance(V__PLANT,s__Object)
        & s__instance(V__STRUCTURE,s__Object) )
     => ( ( s__instance(V__STRUCTURE,s__PlantAnatomicalStructure)
          & s__instance(V__PLANT,s__Organism)
          & s__part(V__STRUCTURE,V__PLANT) )
       => s__instance(V__PLANT,s__Plant) ) ) ).

fof(kb_SUMO_7399,axiom,
    s__subclass(s__ReproductiveBody,s__BodyPart) ).

fof(kb_SUMO_7400,axiom,
    s__documentation(s__ReproductiveBody,s__EnglishLanguage,'Reproductive structure of &%Organisms. Consists of an &%Embryonic &%Object and a nutritive/protective envelope. Note that this class includes seeds, spores, and &%FruitOrVegetables, as well as the eggs produced by &%Animals.') ).

fof(kb_SUMO_7401,axiom,
    s__subclass(s__Egg,s__ReproductiveBody) ).

fof(kb_SUMO_7402,axiom,
    s__instance(s__Egg__t,s__SetOrClass) ).

fof(kb_SUMO_7403,axiom,
    s__subclass(s__Egg,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_7404,axiom,
    s__documentation(s__Egg,s__EnglishLanguage,'The fertilized or unfertilized female &%ReproductiveBody of an &%Animal. This includes &%Bird and &%Reptile eggs, as well as mammalian ova.') ).

fof(kb_SUMO_7405,axiom,
    s__subclass(s__Seed,s__ReproductiveBody) ).

fof(kb_SUMO_7406,axiom,
    s__instance(s__Seed__t,s__SetOrClass) ).

fof(kb_SUMO_7407,axiom,
    s__instance(s__ReproductiveBody__t,s__SetOrClass) ).

fof(kb_SUMO_7408,axiom,
    s__subclass(s__Seed,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_7409,axiom,
    s__instance(s__PlantAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_7410,axiom,
    s__documentation(s__Seed,s__EnglishLanguage,'The fertilized or unfertilized female &%ReproductiveBody of a &%FloweringPlant.') ).

%FOL fof(kb_SUMO_7411,axiom,(( (! [V__SEED] : (s__instance(V__SEED,s__Object) => (s__instance(V__SEED,s__Seed) => (? [V__PLANT,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PLANT,s__Object) & s__instance(V__PLANT,s__FloweringPlant) & s__holdsDuring(V__TIME,'s__part(V__SEED,V__PLANT)')))))) ))).

fof(kb_SUMO_7412,axiom,
    s__subclass(s__Pollen,s__ReproductiveBody) ).

fof(kb_SUMO_7413,axiom,
    s__instance(s__Pollen__t,s__SetOrClass) ).

fof(kb_SUMO_7414,axiom,
    s__subclass(s__Pollen,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_7415,axiom,
    s__documentation(s__Pollen,s__EnglishLanguage,'A powder produced by &%FloweringPlants that contains male gametes and is capable of fertilizing the seeds of &%FloweringPlants of the same species.') ).

fof(kb_SUMO_7416,axiom,
    s__subclass(s__FruitOrVegetable,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_7417,axiom,
    s__instance(s__FruitOrVegetable__t,s__SetOrClass) ).

fof(kb_SUMO_7418,axiom,
    s__subclass(s__FruitOrVegetable,s__ReproductiveBody) ).

fof(kb_SUMO_7419,axiom,
    s__documentation(s__FruitOrVegetable,s__EnglishLanguage,'Any fruit or vegetable, i.e. a ripened &%ReproductiveBody of a &%Plant. Note that &%FruitOrVegetable is not a subclass of &%Food, because some fruits, e.g. poisonous berries, are not edible.') ).

fof(kb_SUMO_7420,axiom,
    s__subclass(s__Spore,s__ReproductiveBody) ).

fof(kb_SUMO_7421,axiom,
    s__instance(s__Spore__t,s__SetOrClass) ).

fof(kb_SUMO_7422,axiom,
    s__subclass(s__Spore,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_7423,axiom,
    s__documentation(s__Spore,s__EnglishLanguage,'Any &%ReproductiveBody of a &%NonFloweringPlant.') ).

%FOL fof(kb_SUMO_7424,axiom,(( (! [V__SPORE] : (s__instance(V__SPORE,s__Object) => (s__instance(V__SPORE,s__Spore) => (? [V__PLANT,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PLANT,s__Object) & s__instance(V__PLANT,s__NonFloweringPlant) & s__holdsDuring(V__TIME,'s__part(V__SPORE,V__PLANT)')))))) ))).

fof(kb_SUMO_7425,axiom,
    s__subclass(s__BodyCovering,s__BodyPart) ).

fof(kb_SUMO_7426,axiom,
    s__instance(s__BodyCovering__t,s__SetOrClass) ).

fof(kb_SUMO_7427,axiom,
    s__documentation(s__BodyCovering,s__EnglishLanguage,'Any &%BodyPart which is a covering of another &%BodyPart or of an entire &%Organism. This would include the rinds of &%FruitOrVegetables and the skins of &%Animals.') ).

fof(kb_SUMO_7428,axiom,
    ! [V__COVER] :
      ( s__instance(V__COVER,s__Object)
     => ( s__instance(V__COVER,s__BodyCovering)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__Object)
            & s__superficialPart(V__COVER,V__BODY)
            & ( s__instance(V__BODY,s__Organism)
              | s__instance(V__BODY,s__BodyPart) ) ) ) ) ).

fof(kb_SUMO_7429,axiom,
    s__subclass(s__BodyJunction,s__BodyPart) ).

fof(kb_SUMO_7430,axiom,
    s__instance(s__BodyJunction__t,s__SetOrClass) ).

fof(kb_SUMO_7431,axiom,
    s__documentation(s__BodyJunction,s__EnglishLanguage,'The place where two &%BodyParts meet or connect.') ).

fof(kb_SUMO_7432,axiom,
    ! [V__JUNCT] :
      ( s__instance(V__JUNCT,s__SelfConnectedObject)
     => ( s__instance(V__JUNCT,s__BodyJunction)
       => ? [V__OBJ1,V__OBJ2] :
            ( s__instance(V__OBJ2,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__BodyPart)
            & s__instance(V__OBJ2,s__BodyPart)
            & s__connects(V__JUNCT,V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_7433,axiom,
    s__subclass(s__BodyCavity,s__BodyPart) ).

fof(kb_SUMO_7434,axiom,
    s__instance(s__BodyCavity__t,s__SetOrClass) ).

fof(kb_SUMO_7435,axiom,
    s__instance(s__BodyPart__t,s__SetOrClass) ).

fof(kb_SUMO_7436,axiom,
    s__documentation(s__BodyCavity,s__EnglishLanguage,'Any &%BodyPart which contains an unfilled space, e.g. &%BodyVessels, the atria and ventricles of the heart, the lungs, etc.') ).

fof(kb_SUMO_7437,axiom,
    s__subclass(s__BodyVessel,s__BodyCavity) ).

fof(kb_SUMO_7438,axiom,
    s__instance(s__BodyVessel__t,s__SetOrClass) ).

fof(kb_SUMO_7439,axiom,
    s__documentation(s__BodyVessel,s__EnglishLanguage,'Any tube-like structure which occurs naturally in an &%Organism and through which a &%BodySubstance can circulate.') ).

fof(kb_SUMO_7440,axiom,
    s__subclass(s__Cell,s__BodyPart) ).

fof(kb_SUMO_7441,axiom,
    s__instance(s__Cell__t,s__SetOrClass) ).

fof(kb_SUMO_7442,axiom,
    s__documentation(s__Cell,s__EnglishLanguage,'The fundamental structural and functional unit of living &%Organisms.') ).

fof(kb_SUMO_7443,axiom,
    s__subclass(s__Organ,s__BodyPart) ).

fof(kb_SUMO_7444,axiom,
    s__instance(s__Organ__t,s__SetOrClass) ).

fof(kb_SUMO_7445,axiom,
    s__documentation(s__Organ,s__EnglishLanguage,'A somewhat independent &%BodyPart that performs a specialized function. Note that this functional definition covers bodily systems, e.g. the digestive system or the central nervous system.') ).

fof(kb_SUMO_7446,axiom,
    ! [V__ORGAN] :
      ( s__instance(V__ORGAN,s__Physical)
     => ( s__instance(V__ORGAN,s__Organ)
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurpose(V__ORGAN,V__PURP) ) ) ) ).

fof(kb_SUMO_7447,axiom,
    s__subclass(s__Gland,s__Organ) ).

fof(kb_SUMO_7448,axiom,
    s__instance(s__Gland__t,s__SetOrClass) ).

fof(kb_SUMO_7449,axiom,
    s__documentation(s__Gland,s__EnglishLanguage,'An &%Organ that removes &%Substances from the &%Blood, alters them in some way, and then releases them.') ).

fof(kb_SUMO_7450,axiom,
    s__subclass(s__Tissue,s__BodySubstance) ).

fof(kb_SUMO_7451,axiom,
    s__disjointDecomposition_4(s__Tissue,s__Bone,s__Muscle,s__FatTissue) ).

fof(kb_SUMO_7452,axiom,
    s__documentation(s__Tissue,s__EnglishLanguage,'An aggregation of similarly specialized &%Cells and the associated intercellular substance. &%Tissues are relatively non-localized in comparison to &%BodyParts, &%Organs or &%Organ components. The main features of &%Tissues are self-connectivity (see &%SelfConnectedObject) and being a homogeneous mass (all parts in the same granularity are instances of &%Tissue as well).') ).

fof(kb_SUMO_7453,axiom,
    ! [V__STUFF] :
      ( s__instance(V__STUFF,s__Object)
     => ( s__instance(V__STUFF,s__Tissue)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__PART,s__Cell)
            & s__part(V__PART,V__STUFF) ) ) ) ).

fof(kb_SUMO_7454,axiom,
    ! [V__STUFF] :
      ( s__instance(V__STUFF,s__Object)
     => ( s__instance(V__STUFF,s__Tissue)
       => ? [V__ORGANISM] :
            ( s__instance(V__ORGANISM,s__Object)
            & s__instance(V__ORGANISM,s__Organism)
            & s__part(V__STUFF,V__ORGANISM) ) ) ) ).

fof(kb_SUMO_7455,axiom,
    s__subclass(s__Bone,s__Tissue) ).

fof(kb_SUMO_7456,axiom,
    s__instance(s__Tissue__t,s__SetOrClass) ).

fof(kb_SUMO_7457,axiom,
    s__subclass(s__Bone,s__AnimalSubstance) ).

fof(kb_SUMO_7458,axiom,
    s__instance(s__Bone__t,s__SetOrClass) ).

fof(kb_SUMO_7459,axiom,
    s__instance(s__AnimalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_7460,axiom,
    s__documentation(s__Bone,s__EnglishLanguage,'Rigid &%Tissue composed largely of calcium that makes up the skeleton of &%Vertebrates. Note that this &%Class also includes teeth.') ).

fof(kb_SUMO_7461,axiom,
    ! [V__BONE] :
      ( s__instance(V__BONE,s__Object)
     => ( s__instance(V__BONE,s__Bone)
       => ? [V__VERT] :
            ( s__instance(V__VERT,s__Object)
            & s__instance(V__VERT,s__Vertebrate)
            & s__part(V__BONE,V__VERT) ) ) ) ).

fof(kb_SUMO_7462,axiom,
    s__subclass(s__Muscle,s__Tissue) ).

fof(kb_SUMO_7463,axiom,
    s__instance(s__Muscle__t,s__SetOrClass) ).

fof(kb_SUMO_7464,axiom,
    s__subclass(s__Muscle,s__AnimalSubstance) ).

fof(kb_SUMO_7465,axiom,
    s__documentation(s__Muscle,s__EnglishLanguage,'Nonrigid &%Tissue appearing only in &%Animals and composed largely of contractile cells.') ).

fof(kb_SUMO_7466,axiom,
    s__subclass(s__FatTissue,s__Tissue) ).

fof(kb_SUMO_7467,axiom,
    s__instance(s__FatTissue__t,s__SetOrClass) ).

fof(kb_SUMO_7468,axiom,
    s__documentation(s__FatTissue,s__EnglishLanguage,'Nonrigid &%Tissue that is composed largely of fat cells.') ).

fof(kb_SUMO_7469,axiom,
    s__subclass(s__Noun,s__Word) ).

fof(kb_SUMO_7470,axiom,
    s__instance(s__Noun__t,s__SetOrClass) ).

fof(kb_SUMO_7471,axiom,
    s__partition_6(s__Word,s__Noun,s__Verb,s__Adjective,s__Adverb,s__ParticleWord) ).

fof(kb_SUMO_7472,axiom,
    s__documentation(s__Noun,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Objects.') ).

fof(kb_SUMO_7473,axiom,
    s__subclass(s__Verb,s__Word) ).

fof(kb_SUMO_7474,axiom,
    s__instance(s__Verb__t,s__SetOrClass) ).

fof(kb_SUMO_7475,axiom,
    s__instance(s__Word__t,s__SetOrClass) ).

fof(kb_SUMO_7476,axiom,
    s__documentation(s__Verb,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Processes.') ).

fof(kb_SUMO_7477,axiom,
    s__subclass(s__Adjective,s__Word) ).

fof(kb_SUMO_7478,axiom,
    s__instance(s__Adjective__t,s__SetOrClass) ).

fof(kb_SUMO_7479,axiom,
    s__documentation(s__Adjective,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Attributes of &%Objects.') ).

fof(kb_SUMO_7480,axiom,
    s__subclass(s__Adverb,s__Word) ).

fof(kb_SUMO_7481,axiom,
    s__instance(s__Adverb__t,s__SetOrClass) ).

fof(kb_SUMO_7482,axiom,
    s__documentation(s__Adverb,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Attributes of &%Processes.') ).

fof(kb_SUMO_7483,axiom,
    s__subclass(s__ParticleWord,s__Word) ).

fof(kb_SUMO_7484,axiom,
    s__instance(s__ParticleWord__t,s__SetOrClass) ).

fof(kb_SUMO_7485,axiom,
    s__documentation(s__ParticleWord,s__EnglishLanguage,'An umbrella &%Class for any &%Word that does not fit into the other subclasses of &%Word. A &%ParticleWord is generally a small term that serves a grammatical or logical function, e.g. and, of, since, etc. At some point, this class might be broken up into the subclasses Connective, Preposition, etc. Note that the class &%ParticleWord includes both personal and possessive pronouns, e.g. she, hers, it, its, etc.') ).

fof(kb_SUMO_7486,axiom,
    s__subclass(s__Morpheme,s__LinguisticExpression) ).

fof(kb_SUMO_7487,axiom,
    s__instance(s__Morpheme__t,s__SetOrClass) ).

fof(kb_SUMO_7488,axiom,
    s__documentation(s__Morpheme,s__EnglishLanguage,'Part of a &%Word which cannot be subdivided and which expresses a meaning.') ).

fof(kb_SUMO_7489,axiom,
    ! [V__MORPH] :
      ( s__instance(V__MORPH,s__Object)
     => ( s__instance(V__MORPH,s__Morpheme)
       => ~ ? [V__OTHERMORPH] :
              ( s__instance(V__OTHERMORPH,s__Object)
              & s__instance(V__OTHERMORPH,s__Morpheme)
              & s__part(V__OTHERMORPH,V__MORPH)
              & V__OTHERMORPH != V__MORPH ) ) ) ).

fof(kb_SUMO_7490,axiom,
    ! [V__MORPH] :
      ( s__instance(V__MORPH,s__Object)
     => ( s__instance(V__MORPH,s__Morpheme)
       => ? [V__WORD] :
            ( s__instance(V__WORD,s__Object)
            & s__instance(V__WORD,s__Word)
            & s__part(V__MORPH,V__WORD) ) ) ) ).

fof(kb_SUMO_7491,axiom,
    ! [V__WORD] :
      ( s__instance(V__WORD,s__Object)
     => ( s__instance(V__WORD,s__Word)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__WORD)
            & s__instance(V__PART,s__Morpheme) ) ) ) ).

fof(kb_SUMO_7492,axiom,
    s__subclass(s__Phrase,s__LinguisticExpression) ).

fof(kb_SUMO_7493,axiom,
    s__disjointDecomposition_4(s__Phrase,s__VerbPhrase,s__NounPhrase,s__PrepositionalPhrase) ).

fof(kb_SUMO_7494,axiom,
    s__documentation(s__Phrase,s__EnglishLanguage,'A set of &%Words in a &%Language which form a unit, i.e. express a meaning in the &%Language.') ).

fof(kb_SUMO_7495,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__Phrase)
       => ? [V__PART1,V__PART2] :
            ( s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object)
            & s__part(V__PART1,V__PHRASE)
            & s__part(V__PART2,V__PHRASE)
            & s__instance(V__PART1,s__Word)
            & s__instance(V__PART2,s__Word)
            & V__PART1 != V__PART2 ) ) ) ).

fof(kb_SUMO_7496,axiom,
    s__subclass(s__VerbPhrase,s__Phrase) ).

fof(kb_SUMO_7497,axiom,
    s__instance(s__VerbPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_7498,axiom,
    s__documentation(s__VerbPhrase,s__EnglishLanguage,'A &%Phrase that has the same function as a &%Verb.') ).

fof(kb_SUMO_7499,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__VerbPhrase)
       => ? [V__VERB] :
            ( s__instance(V__VERB,s__Object)
            & s__instance(V__VERB,s__Verb)
            & s__part(V__VERB,V__PHRASE) ) ) ) ).

fof(kb_SUMO_7500,axiom,
    s__subclass(s__NounPhrase,s__Phrase) ).

fof(kb_SUMO_7501,axiom,
    s__instance(s__NounPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_7502,axiom,
    s__instance(s__Phrase__t,s__SetOrClass) ).

fof(kb_SUMO_7503,axiom,
    s__disjoint(s__NounPhrase,s__VerbPhrase) ).

fof(kb_SUMO_7504,axiom,
    s__documentation(s__NounPhrase,s__EnglishLanguage,'A &%Phrase that has the same function as a &%Noun.') ).

fof(kb_SUMO_7505,axiom,
    ! [V__SENTENCE] :
      ( s__instance(V__SENTENCE,s__Object)
     => ( s__instance(V__SENTENCE,s__Sentence)
       => ? [V__PHRASE1,V__PHRASE2] :
            ( s__instance(V__PHRASE2,s__Object)
            & s__instance(V__PHRASE1,s__Object)
            & s__instance(V__PHRASE1,s__NounPhrase)
            & s__instance(V__PHRASE2,s__VerbPhrase)
            & s__part(V__PHRASE1,V__SENTENCE)
            & s__part(V__PHRASE2,V__SENTENCE) ) ) ) ).

fof(kb_SUMO_7506,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__NounPhrase)
       => ? [V__NOUN] :
            ( s__instance(V__NOUN,s__Object)
            & s__instance(V__NOUN,s__Noun)
            & s__part(V__NOUN,V__PHRASE) ) ) ) ).

fof(kb_SUMO_7507,axiom,
    s__subclass(s__PrepositionalPhrase,s__Phrase) ).

fof(kb_SUMO_7508,axiom,
    s__instance(s__PrepositionalPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_7509,axiom,
    s__documentation(s__PrepositionalPhrase,s__EnglishLanguage,'A &%Phrase that begins with a preposition and that functions as an &%Adjective or an &%Adverb.') ).

fof(kb_SUMO_7510,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__PrepositionalPhrase)
       => ? [V__PREP] :
            ( s__instance(V__PREP,s__Object)
            & s__instance(V__PREP,s__ParticleWord)
            & s__part(V__PREP,V__PHRASE) ) ) ) ).

fof(kb_SUMO_7511,axiom,
    s__subclass(s__Text,s__LinguisticExpression) ).

fof(kb_SUMO_7512,axiom,
    s__instance(s__LinguisticExpression__t,s__SetOrClass) ).

fof(kb_SUMO_7513,axiom,
    s__subclass(s__Text,s__ContentBearingObject) ).

fof(kb_SUMO_7514,axiom,
    s__instance(s__ContentBearingObject__t,s__SetOrClass) ).

fof(kb_SUMO_7515,axiom,
    s__subclass(s__Text,s__Artifact) ).

fof(kb_SUMO_7516,axiom,
    s__instance(s__Artifact__t,s__SetOrClass) ).

fof(kb_SUMO_7517,axiom,
    s__documentation(s__Text,s__EnglishLanguage,'A &%LinguisticExpression or set of &%LinguisticExpressions that perform a specific function related to &%Communication, e.g. express a discourse about a particular topic, and that are inscribed in a &%CorpuscularObject by &%Humans.') ).

fof(kb_SUMO_7518,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__Object)
     => ( s__instance(V__TEXT,s__Text)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__TEXT)
            & s__instance(V__PART,s__LinguisticExpression) ) ) ) ).

fof(kb_SUMO_7519,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__Text)
     => ? [V__WRITE] :
          ( s__instance(V__WRITE,s__Process)
          & s__instance(V__WRITE,s__Writing)
          & s__result(V__WRITE,V__TEXT) ) ) ).

fof(kb_SUMO_7520,axiom,
    s__subclass(s__FactualText,s__Text) ).

fof(kb_SUMO_7521,axiom,
    s__instance(s__FactualText__t,s__SetOrClass) ).

fof(kb_SUMO_7522,axiom,
    s__instance(s__Text__t,s__SetOrClass) ).

fof(kb_SUMO_7523,axiom,
    s__disjoint(s__FactualText,s__FictionalText) ).

fof(kb_SUMO_7524,axiom,
    s__documentation(s__FactualText,s__EnglishLanguage,'The class of &%Texts that purport to reveal facts about the world. Such texts are often known as information or as non-fiction. Note that something can be an instance of &%FactualText, even if it is wholly inaccurate. Whether something is a &%FactualText is determined by the beliefs of the agent creating the text.') ).

fof(kb_SUMO_7525,axiom,
    ! [V__CONTENT,V__CLASS,V__AGENT,V__TEXT] :
      ( ( s__instance(V__TEXT,s__ContentBearingPhysical)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__subclass(V__CLASS,s__Text)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__TEXT,V__CLASS)
          & s__subclass(V__CLASS,s__FactualText)
          & s__authors(V__AGENT,V__CLASS)
          & s__subsumesContentInstance(V__TEXT,V__CONTENT)
          & s__instance(V__CONTENT,s__Formula) )
       => s__believes(V__AGENT,V__CONTENT) ) ) ).

fof(kb_SUMO_7526,axiom,
    s__subclass(s__FictionalText,s__Text) ).

fof(kb_SUMO_7527,axiom,
    s__instance(s__FictionalText__t,s__SetOrClass) ).

fof(kb_SUMO_7528,axiom,
    s__documentation(s__FictionalText,s__EnglishLanguage,'The class of &%Texts that purport to be largely a product of the authors imagination, i.e. the author does not believe that most of the content conveyed by the text is an accurate depiction of the real world. Note that something can be an instance of &%FictionalText, even if it is completely true. Whether something is a &%FictionalText is determined by the beliefs of the agent creating the text.') ).

fof(kb_SUMO_7529,axiom,
    ! [V__CLASS,V__AGENT,V__TEXT] :
      ( ( s__instance(V__TEXT,s__ContentBearingPhysical)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__subclass(V__CLASS,s__Text)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__TEXT,V__CLASS)
          & s__subclass(V__CLASS,s__FictionalText)
          & s__authors(V__AGENT,V__CLASS) )
       => ? [V__CONTENT] :
            ( s__subsumesContentInstance(V__TEXT,V__CONTENT)
            & s__instance(V__CONTENT,s__Formula)
            & ~ s__believes(V__AGENT,V__CONTENT) ) ) ) ).

fof(kb_SUMO_7530,axiom,
    s__subclass(s__Sentence,s__LinguisticExpression) ).

fof(kb_SUMO_7531,axiom,
    s__instance(s__Sentence__t,s__SetOrClass) ).

fof(kb_SUMO_7532,axiom,
    s__documentation(s__Sentence,s__EnglishLanguage,'A syntactically well-formed formula of a &%Language. It includes, at minimum, a predicate and a subject (which may be explicit or implicit), and it expresses a &%Proposition.') ).

fof(kb_SUMO_7533,axiom,
    ! [V__SENT] :
      ( s__instance(V__SENT,s__ContentBearingPhysical)
     => ( s__instance(V__SENT,s__Sentence)
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Proposition)
            & s__containsInformation(V__SENT,V__PROP) ) ) ) ).

fof(kb_SUMO_7534,axiom,
    s__instance(s__authors__m,s__BinaryPredicate) ).

fof(kb_SUMO_7535,axiom,
    s__instance(s__authors__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7536,axiom,
    s__domain(s__authors__m,"1",s__Agent) ).

fof(kb_SUMO_7537,axiom,
    s__domainSubclass(s__authors__m,"2",s__Text) ).

fof(kb_SUMO_7538,axiom,
    s__documentation(s__authors__m,s__EnglishLanguage,'(&%authors ?AGENT ?TEXTCLASS) means that ?AGENT is creatively responsible for the content of all instances of ?TEXTCLASS. For example, Agatha Christie is author of Murder_on_the_Orient_Express.') ).

fof(kb_SUMO_7539,axiom,
    ! [V__TEXTCLASS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__subclass(V__TEXTCLASS,s__Text)
        & s__instance(V__TEXTCLASS,s__SetOrClass) )
     => ( s__authors(V__AGENT,V__TEXTCLASS)
       => ? [V__PROCESS,V__INSTANCE] :
            ( s__instance(V__PROCESS,s__Process)
            & s__agent(V__PROCESS,V__AGENT)
            & s__instance(V__INSTANCE,V__TEXTCLASS)
            & s__result(V__PROCESS,V__INSTANCE) ) ) ) ).

fof(kb_SUMO_7540,axiom,
    s__instance(s__editor__m,s__BinaryPredicate) ).

fof(kb_SUMO_7541,axiom,
    s__instance(s__editor__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7542,axiom,
    s__domain(s__editor__m,"1",s__Agent) ).

fof(kb_SUMO_7543,axiom,
    s__domainSubclass(s__editor__m,"2",s__Text) ).

fof(kb_SUMO_7544,axiom,
    s__documentation(s__editor__m,s__EnglishLanguage,'(&%editor ?AGENT ?TEXTCLASS) means that ?AGENT is an editor of the content contained (or realized) in all instances of ?TEXTCLASS.') ).

fof(kb_SUMO_7545,axiom,
    s__instance(s__publishes__m,s__BinaryPredicate) ).

fof(kb_SUMO_7546,axiom,
    s__instance(s__publishes__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7547,axiom,
    s__domain(s__publishes__m,"1",s__Organization) ).

fof(kb_SUMO_7548,axiom,
    s__domainSubclass(s__publishes__m,"2",s__Text) ).

fof(kb_SUMO_7549,axiom,
    s__documentation(s__publishes__m,s__EnglishLanguage,'(&%publishes ?ORG ?TEXTCLASS) means that ?ORG publishes all instances of ?TEXTCLASS. For example, Bantam Books publishes Agatha Christies Murder_on_the_Orient_Express.') ).

fof(kb_SUMO_7550,axiom,
    ! [V__TEXTCLASS,V__ORG,V__INST] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__subclass(V__TEXTCLASS,s__Text)
        & s__instance(V__TEXTCLASS,s__SetOrClass) )
     => ( ( s__publishes(V__ORG,V__TEXTCLASS)
          & s__instance(V__INST,V__TEXTCLASS) )
       => ? [V__PUB] :
            ( s__instance(V__PUB,s__Process)
            & s__instance(V__PUB,s__Publication)
            & s__agent(V__PUB,V__ORG)
            & s__patient(V__PUB,V__INST) ) ) ) ).

fof(kb_SUMO_7551,axiom,
    s__instance(s__EditionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_7552,axiom,
    s__instance(s__EditionFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_7553,axiom,
    s__domainSubclass(s__EditionFn__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_7554,axiom,
    s__domain(s__EditionFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_7555,axiom,
    s__rangeSubclass(s__EditionFn__m,s__ContentBearingObject) ).

fof(kb_SUMO_7556,axiom,
    s__documentation(s__EditionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a type of text (e.g. Agatha Christies Murder_on_the_Orient_Express) and a number to the edition of the text type corresponding to the number.') ).

fof(kb_SUMO_7557,axiom,
    ! [V__CBO1,V__CBO2,V__PUB1,V__EDITION1,V__EDITION2,V__PUB2,V__INT2,V__DATE2,V__INT1,V__DATE1,V__TEXT] :
      ( ( s__subclass(V__TEXT,s__ContentBearingObject)
        & s__instance(V__TEXT,s__SetOrClass)
        & s__instance(V__DATE1,s__Day)
        & s__instance(V__INT1,s__PositiveInteger)
        & s__instance(V__DATE2,s__Day)
        & s__instance(V__INT2,s__PositiveInteger)
        & s__instance(V__PUB2,s__Process)
        & s__instance(V__EDITION2,s__SetOrClass)
        & s__instance(V__EDITION1,s__SetOrClass)
        & s__instance(V__PUB1,s__Process) )
     => ( ( s__EditionFn(V__TEXT,V__INT1) = V__EDITION1
          & s__EditionFn(V__TEXT,V__INT2) = V__EDITION2
          & greater(V__INT2,V__INT1)
          & s__instance(V__PUB1,s__Publication)
          & s__instance(V__PUB2,s__Publication)
          & s__instance(V__CBO1,V__EDITION1)
          & s__instance(V__CBO2,V__EDITION2)
          & s__patient(V__PUB1,V__CBO1)
          & s__patient(V__PUB2,V__CBO2)
          & s__date(V__PUB1,V__DATE1)
          & s__date(V__PUB2,V__DATE2) )
       => s__before(s__EndFn(V__DATE1),s__EndFn(V__DATE2)) ) ) ).

fof(kb_SUMO_7558,axiom,
    ! [V__NUMBER,V__TEXT2,V__TEXT1] :
      ( ( s__subclass(V__TEXT1,s__ContentBearingObject)
        & s__instance(V__TEXT1,s__SetOrClass)
        & s__subclass(V__TEXT2,s__ContentBearingPhysical)
        & s__instance(V__TEXT2,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__EditionFn(V__TEXT1,V__NUMBER) = V__TEXT2
       => s__subsumesContentClass(V__TEXT1,V__TEXT2) ) ) ).

fof(kb_SUMO_7559,axiom,
    s__subclass(s__Summary,s__Text) ).

fof(kb_SUMO_7560,axiom,
    s__instance(s__Summary__t,s__SetOrClass) ).

fof(kb_SUMO_7561,axiom,
    s__documentation(s__Summary,s__EnglishLanguage,'A short &%Text that is a summary of another, longer &%Text.') ).

fof(kb_SUMO_7562,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__ContentBearingPhysical)
     => ( s__instance(V__TEXT,s__Summary)
       => ? [V__TEXT2] :
            ( s__instance(V__TEXT2,s__ContentBearingPhysical)
            & s__instance(V__TEXT2,s__Text)
            & s__subsumesContentInstance(V__TEXT2,V__TEXT) ) ) ) ).

fof(kb_SUMO_7563,axiom,
    s__subclass(s__Certificate,s__Text) ).

fof(kb_SUMO_7564,axiom,
    s__instance(s__Certificate__t,s__SetOrClass) ).

fof(kb_SUMO_7565,axiom,
    s__documentation(s__Certificate,s__EnglishLanguage,'A &%Text that confers a right or obligation on the holder of the &%Certificate. Note that the right or obligation need not be a legal one, as in the case of an academic diploma that grants certain privileges in the professional world.') ).

fof(kb_SUMO_7566,axiom,
    ! [V__DOC] :
      ( s__instance(V__DOC,s__Certificate)
     => ? [V__PROP,V__NORM] :
          ( s__instance(V__NORM,s__ObjectiveNorm)
          & s__instance(V__PROP,s__Formula)
          & ( s__confersNorm(V__DOC,V__PROP,V__NORM)
            | s__deprivesNorm(V__DOC,V__PROP,V__NORM) ) ) ) ).

fof(kb_SUMO_7567,axiom,
    s__subclass(s__FinancialInstrument,s__Certificate) ).

fof(kb_SUMO_7568,axiom,
    s__instance(s__FinancialInstrument__t,s__SetOrClass) ).

fof(kb_SUMO_7569,axiom,
    s__documentation(s__FinancialInstrument,s__EnglishLanguage,'A document having monetary value or recording a monetary transaction') ).

fof(kb_SUMO_7570,axiom,
    s__subclass(s__Currency,s__FinancialInstrument) ).

fof(kb_SUMO_7571,axiom,
    s__instance(s__Currency__t,s__SetOrClass) ).

fof(kb_SUMO_7572,axiom,
    s__documentation(s__Currency,s__EnglishLanguage,'Any element of the official currrency of some &%Nation. This covers both &%CurrencyBills and &%CurrencyCoins.') ).

fof(kb_SUMO_7573,axiom,
    ! [V__CURRENCY] :
      ( s__instance(V__CURRENCY,s__Physical)
     => ( s__instance(V__CURRENCY,s__Currency)
       => ? [V__MEASURE] :
            ( s__instance(V__MEASURE,s__CurrencyMeasure)
            & s__monetaryValue(V__CURRENCY,V__MEASURE) ) ) ) ).

fof(kb_SUMO_7574,axiom,
    s__subclass(s__Patent,s__Certificate) ).

fof(kb_SUMO_7575,axiom,
    s__instance(s__Patent__t,s__SetOrClass) ).

fof(kb_SUMO_7576,axiom,
    s__documentation(s__Patent,s__EnglishLanguage,'A &%Certificate that expresses the content of an invention that has been accorded legal protection by a governemental entity.') ).

fof(kb_SUMO_7577,axiom,
    s__subclass(s__Molecule,s__CompoundSubstance) ).

fof(kb_SUMO_7578,axiom,
    s__instance(s__Molecule__t,s__SetOrClass) ).

fof(kb_SUMO_7579,axiom,
    s__instance(s__CompoundSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_7580,axiom,
    s__documentation(s__Molecule,s__EnglishLanguage,'A molecule is the smallest unit of matter of a &%CompoundSubstance that retains all the physical and chemical properties of that substance, e.g., Ne, H2, H2O. A molecule is two or more &%Atoms linked by a chemical bond.') ).

fof(kb_SUMO_7581,axiom,
    ! [V__MOLE] :
      ( s__instance(V__MOLE,s__Object)
     => ( s__instance(V__MOLE,s__Molecule)
       => ? [V__ATOM1,V__ATOM2] :
            ( s__instance(V__ATOM2,s__Object)
            & s__instance(V__ATOM1,s__Object)
            & s__instance(V__ATOM1,s__Atom)
            & s__instance(V__ATOM2,s__Atom)
            & s__part(V__ATOM1,V__MOLE)
            & s__part(V__ATOM2,V__MOLE)
            & V__ATOM1 != V__ATOM2 ) ) ) ).

fof(kb_SUMO_7582,axiom,
    s__subclass(s__Artifact,s__Object) ).

fof(kb_SUMO_7583,axiom,
    s__instance(s__Object__t,s__SetOrClass) ).

fof(kb_SUMO_7584,axiom,
    s__documentation(s__Artifact,s__EnglishLanguage,'An &%Object that is the product of a &%Making.') ).

fof(kb_SUMO_7585,axiom,
    ! [V__ARTIFACT] :
      ( s__instance(V__ARTIFACT,s__Artifact)
    <=> ? [V__MAKING] :
          ( s__instance(V__MAKING,s__Process)
          & s__instance(V__MAKING,s__Making)
          & s__result(V__MAKING,V__ARTIFACT) ) ) ).

fof(kb_SUMO_7586,axiom,
    s__subclass(s__Product,s__Artifact) ).

fof(kb_SUMO_7587,axiom,
    s__instance(s__Product__t,s__SetOrClass) ).

fof(kb_SUMO_7588,axiom,
    s__documentation(s__Product,s__EnglishLanguage,'An &%Artifact that is produced by &%Manufacture.') ).

fof(kb_SUMO_7589,axiom,
    ! [V__PRODUCT] :
      ( s__instance(V__PRODUCT,s__Product)
     => ? [V__MANUFACTURE] :
          ( s__instance(V__MANUFACTURE,s__Process)
          & s__instance(V__MANUFACTURE,s__Manufacture)
          & s__result(V__MANUFACTURE,V__PRODUCT) ) ) ).

fof(kb_SUMO_7590,axiom,
    s__instance(s__version__m,s__BinaryPredicate) ).

fof(kb_SUMO_7591,axiom,
    s__instance(s__version__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7592,axiom,
    s__instance(s__version__m,s__TransitiveRelation) ).

fof(kb_SUMO_7593,axiom,
    s__domainSubclass(s__version__m,"1",s__Artifact) ).

fof(kb_SUMO_7594,axiom,
    s__domainSubclass(s__version__m,"2",s__Artifact) ).

fof(kb_SUMO_7595,axiom,
    s__documentation(s__version__m,s__EnglishLanguage,'Some &%Artifacts have a life cycle with discrete stages or versions. (&%version ARTIFACT1 ARTIFACT2) means that ARTIFACT1 is a version of ARTIFACT2. Note that this &%Predicate relates subclasses of &%Artifact and not instances.') ).

fof(kb_SUMO_7596,axiom,
    ! [V__ARTIFACT1,V__ARTIFACT2] :
      ( ( s__subclass(V__ARTIFACT2,s__Artifact)
        & s__instance(V__ARTIFACT2,s__SetOrClass)
        & s__subclass(V__ARTIFACT1,s__Artifact)
        & s__instance(V__ARTIFACT1,s__SetOrClass) )
     => ( s__version(V__ARTIFACT1,V__ARTIFACT2)
       => s__subclass(V__ARTIFACT1,V__ARTIFACT2) ) ) ).

fof(kb_SUMO_7597,axiom,
    s__subclass(s__StationaryArtifact,s__Artifact) ).

fof(kb_SUMO_7598,axiom,
    s__documentation(s__StationaryArtifact,s__EnglishLanguage,'A &%StationaryArtifact is an &%Artifact that has a fixed spatial location. Most instances of this &%Class are architectural works, e.g. the Eiffel Tower, the Great Pyramids, office towers, single-family houses, etc.') ).

%FOL fof(kb_SUMO_7599,axiom,(( (! [V__ARTIFACT] : (s__instance(V__ARTIFACT,s__Physical) => (s__instance(V__ARTIFACT,s__StationaryArtifact) => (? [V__PLACE] : (s__holdsDuring(s__WhenFn(V__ARTIFACT),'s__located(V__ARTIFACT,V__PLACE)') & (~ (? [V__P2] : (s__instance(V__P2,s__Object) & s__instance(V__PLACE,s__Object) & s__holdsDuring(s__WhenFn(V__ARTIFACT),'s__located(V__ARTIFACT,V__P2)') & (~ (V__PLACE = V__P2)))))))))) ))).

fof(kb_SUMO_7600,axiom,
    s__subclass(s__Building,s__StationaryArtifact) ).

fof(kb_SUMO_7601,axiom,
    s__instance(s__Building__t,s__SetOrClass) ).

fof(kb_SUMO_7602,axiom,
    s__documentation(s__Building,s__EnglishLanguage,'The Class of &%StationaryArtifacts which are intended to house &%Humans and their activities.') ).

fof(kb_SUMO_7603,axiom,
    ! [V__BUILDING] :
      ( s__instance(V__BUILDING,s__Object)
     => ( s__instance(V__BUILDING,s__Building)
       => ? [V__HUMAN] :
            ( s__instance(V__HUMAN,s__Human)
            & ( s__inhabits(V__HUMAN,V__BUILDING)
              | ? [V__ACT] :
                  ( s__instance(V__ACT,s__Process)
                  & s__instance(V__HUMAN,s__Organism)
                  & s__agent(V__ACT,V__HUMAN)
                  & s__located(V__ACT,V__BUILDING) ) ) ) ) ) ).

fof(kb_SUMO_7604,axiom,
    s__subclass(s__Room,s__StationaryArtifact) ).

fof(kb_SUMO_7605,axiom,
    s__instance(s__Room__t,s__SetOrClass) ).

fof(kb_SUMO_7606,axiom,
    s__instance(s__StationaryArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_7607,axiom,
    s__disjoint(s__Room,s__Building) ).

fof(kb_SUMO_7608,axiom,
    s__documentation(s__Room,s__EnglishLanguage,'A &%properPart of a &%Building which is separated from the exterior of the &%Building and/or other &%Rooms of the &%Building by walls. Some &%Rooms may have a specific purpose, e.g. sleeping, bathing, cooking, entertainment, etc.') ).

fof(kb_SUMO_7609,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__Room)
       => ? [V__BUILD] :
            ( s__instance(V__BUILD,s__Object)
            & s__instance(V__BUILD,s__Building)
            & s__properPart(V__ROOM,V__BUILD) ) ) ) ).

fof(kb_SUMO_7610,axiom,
    s__subclass(s__House,s__ResidentialBuilding) ).

fof(kb_SUMO_7611,axiom,
    s__instance(s__ResidentialBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_7612,axiom,
    s__subclass(s__House,s__SingleFamilyResidence) ).

fof(kb_SUMO_7613,axiom,
    s__instance(s__House__t,s__SetOrClass) ).

fof(kb_SUMO_7614,axiom,
    s__instance(s__SingleFamilyResidence__t,s__SetOrClass) ).

fof(kb_SUMO_7615,axiom,
    s__documentation(s__House,s__EnglishLanguage,'A &%ResidentialBuilding which is intended to be inhabited by members of the same &%SocialUnit. &%Houses are distinguished from temporary housing like hotels and multi-family dwellings like condominium and apartment buildings.') ).

fof(kb_SUMO_7616,axiom,
    s__subclass(s__Residence,s__StationaryArtifact) ).

fof(kb_SUMO_7617,axiom,
    s__partition_3(s__Residence,s__PermanentResidence,s__TemporaryResidence) ).

fof(kb_SUMO_7618,axiom,
    s__documentation(s__Residence,s__EnglishLanguage,'A &%Building or part of a &%Building which provides some accomodation for sleeping.') ).

fof(kb_SUMO_7619,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__Object)
     => ( s__instance(V__RESIDENCE,s__Residence)
       => ( s__instance(V__RESIDENCE,s__House)
          | ? [V__BUILDING] :
              ( s__instance(V__BUILDING,s__Object)
              & s__instance(V__BUILDING,s__ResidentialBuilding)
              & s__part(V__RESIDENCE,V__BUILDING) ) ) ) ) ).

fof(kb_SUMO_7620,axiom,
    s__subclass(s__PermanentResidence,s__Residence) ).

fof(kb_SUMO_7621,axiom,
    s__instance(s__PermanentResidence__t,s__SetOrClass) ).

fof(kb_SUMO_7622,axiom,
    s__instance(s__Residence__t,s__SetOrClass) ).

fof(kb_SUMO_7623,axiom,
    s__documentation(s__PermanentResidence,s__EnglishLanguage,'A &%Residence where people live, i.e. where people have a &%home.') ).

fof(kb_SUMO_7624,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__PermanentResidence)
     => ? [V__PERSON] :
          ( s__instance(V__PERSON,s__Human)
          & s__home(V__PERSON,V__RESIDENCE) ) ) ).

fof(kb_SUMO_7625,axiom,
    s__subclass(s__TemporaryResidence,s__Residence) ).

fof(kb_SUMO_7626,axiom,
    s__instance(s__TemporaryResidence__t,s__SetOrClass) ).

fof(kb_SUMO_7627,axiom,
    s__documentation(s__TemporaryResidence,s__EnglishLanguage,'A &%Residence which is strictly temporary, i.e. where no one makes his/her &%home.') ).

fof(kb_SUMO_7628,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__PermanentResidence)
     => ( s__instance(V__RESIDENCE,s__TemporaryResidence)
       => ~ ? [V__PERSON] :
              ( s__instance(V__PERSON,s__Human)
              & s__home(V__PERSON,V__RESIDENCE) ) ) ) ).

fof(kb_SUMO_7629,axiom,
    s__subclass(s__ResidentialBuilding,s__Building) ).

fof(kb_SUMO_7630,axiom,
    s__subclass(s__ResidentialBuilding,s__Residence) ).

fof(kb_SUMO_7631,axiom,
    s__documentation(s__ResidentialBuilding,s__EnglishLanguage,'A &%Building which provides some accomodation for sleeping. Note that this class does not cover just permanent residences, e.g. &%Houses and condominium and apartment buildings, but also temporary residences, e.g. hotels and dormitories. &%ResidentialBuildings are also distinguished from &%CommercialBuildings, which are intended to serve an organizational rather than a residential function.') ).

fof(kb_SUMO_7632,axiom,
    s__subclass(s__SingleFamilyResidence,s__PermanentResidence) ).

fof(kb_SUMO_7633,axiom,
    s__documentation(s__SingleFamilyResidence,s__EnglishLanguage,'A &%PermanentResidence which is intended to be the &%home of a single &%SocialUnit. This class covers &%Houses, &%ApartmentUnits, and &%CondominiumUnits.') ).

fof(kb_SUMO_7634,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__SingleFamilyResidence)
     => s__hasPurpose(V__RESIDENCE,'(! [V__AGENT1,V__AGENT2] : ((s__instance(V__AGENT2,s__Human) & s__instance(V__AGENT1,s__Human) & s__instance(V__RESIDENCE,s__PermanentResidence)) => ((s__home(V__AGENT1,V__RESIDENCE) & s__home(V__AGENT2,V__RESIDENCE)) => (? [V__UNIT] : (s__instance(V__UNIT,s__Collection) & s__instance(V__UNIT,s__SocialUnit) & s__member(V__AGENT1,V__UNIT) & s__member(V__AGENT2,V__UNIT))))))') ) ).

fof(kb_SUMO_7635,axiom,
    s__subclass(s__ArtWork,s__Artifact) ).

fof(kb_SUMO_7636,axiom,
    s__instance(s__ArtWork__t,s__SetOrClass) ).

fof(kb_SUMO_7637,axiom,
    s__documentation(s__ArtWork,s__EnglishLanguage,'&%Artifacts that are created primarily for aesthetic appreciation. Note that this &%Class does not include most examples of architecture, which belong under &%StationaryArtifact.') ).

fof(kb_SUMO_7638,axiom,
    s__subclass(s__RepresentationalArtWork,s__ArtWork) ).

fof(kb_SUMO_7639,axiom,
    s__subclass(s__RepresentationalArtWork,s__Icon) ).

fof(kb_SUMO_7640,axiom,
    s__instance(s__RepresentationalArtWork__t,s__SetOrClass) ).

fof(kb_SUMO_7641,axiom,
    s__documentation(s__RepresentationalArtWork,s__EnglishLanguage,'Any &%ArtWork that represents something &%Physical.') ).

fof(kb_SUMO_7642,axiom,
    s__subclass(s__Fabric,s__Artifact) ).

fof(kb_SUMO_7643,axiom,
    s__instance(s__Fabric__t,s__SetOrClass) ).

fof(kb_SUMO_7644,axiom,
    s__disjoint(s__Fabric,s__StationaryArtifact) ).

fof(kb_SUMO_7645,axiom,
    s__documentation(s__Fabric,s__EnglishLanguage,'&%Artifacts that are created by weaving together natural or synthetic fibers or by treating the skins of certain sorts of &%Animals. Note that this &%Class includes articles that are created by stitching together various types of fabrics, e.g. bedspreads. On the other hand, &%Clothing is not a &%subclass of &%Fabric, because many clothing items contain elements that are not fabrics.') ).

fof(kb_SUMO_7646,axiom,
    s__subclass(s__WearableItem,s__Artifact) ).

fof(kb_SUMO_7647,axiom,
    s__documentation(s__WearableItem,s__EnglishLanguage,'&%WearableItem is the subclass of &%Artifacts that are made to be worn on the body.') ).

fof(kb_SUMO_7648,axiom,
    s__subclass(s__Clothing,s__WearableItem) ).

fof(kb_SUMO_7649,axiom,
    s__instance(s__Clothing__t,s__SetOrClass) ).

fof(kb_SUMO_7650,axiom,
    s__instance(s__WearableItem__t,s__SetOrClass) ).

fof(kb_SUMO_7651,axiom,
    s__disjoint(s__Clothing,s__StationaryArtifact) ).

fof(kb_SUMO_7652,axiom,
    s__documentation(s__Clothing,s__EnglishLanguage,'&%Artifact made out of fabrics and possibly other materials that are used to cover the bodies of &%Humans.') ).

fof(kb_SUMO_7653,axiom,
    ! [V__CLOTHING] :
      ( s__instance(V__CLOTHING,s__Object)
     => ( s__instance(V__CLOTHING,s__Clothing)
       => ? [V__FABRIC] :
            ( s__instance(V__FABRIC,s__Object)
            & s__instance(V__FABRIC,s__Fabric)
            & s__part(V__FABRIC,V__CLOTHING) ) ) ) ).

fof(kb_SUMO_7654,axiom,
    s__instance(s__wears__m,s__BinaryPredicate) ).

fof(kb_SUMO_7655,axiom,
    s__domain(s__wears__m,"1",s__Animal) ).

fof(kb_SUMO_7656,axiom,
    s__domain(s__wears__m,"2",s__WearableItem) ).

fof(kb_SUMO_7657,axiom,
    s__documentation(s__wears__m,s__EnglishLanguage,'(&%wears ?AGENT ?WI) means that ?AGENT is wearing the &%WearableItem item ?WI.') ).

fof(kb_SUMO_7658,axiom,
    ! [V__WI,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Animal)
        & s__instance(V__WI,s__WearableItem) )
     => ( s__wears(V__AGENT,V__WI)
       => s__located(V__WI,V__AGENT) ) ) ).

fof(kb_SUMO_7659,axiom,
    ! [V__P,V__A,V__C] :
      ( ( s__instance(V__C,s__WearableItem)
        & s__instance(V__A,s__Animal)
        & s__instance(V__P,s__WearableItem) )
     => ( ( s__wears(V__A,V__C)
          & s__part(V__P,V__C) )
       => s__wears(V__A,V__P) ) ) ).

fof(kb_SUMO_7660,axiom,
    s__subclass(s__Device,s__Artifact) ).

fof(kb_SUMO_7661,axiom,
    s__documentation(s__Device,s__EnglishLanguage,'A &%Device is an &%Artifact whose purpose is to serve as an &%instrument in a specific subclass of &%Process.') ).

fof(kb_SUMO_7662,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__Device)
       => ? [V__PROC] :
            ( s__subclass(V__PROC,s__Process)
            & s__capability(V__PROC,s__instrument__m,V__DEVICE) ) ) ) ).

fof(kb_SUMO_7663,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__Device)
       => ? [V__PROC] : s__hasPurpose(V__DEVICE,'(? [V__INST] : (s__instance(V__INST,s__Process) & s__instance(V__PROC,s__SetOrClass) & s__instance(V__INST,V__PROC) & s__instrument(V__INST,V__DEVICE)))') ) ) ).

fof(kb_SUMO_7664,axiom,
    s__subclass(s__MusicalInstrument,s__Device) ).

fof(kb_SUMO_7665,axiom,
    s__instance(s__MusicalInstrument__t,s__SetOrClass) ).

fof(kb_SUMO_7666,axiom,
    s__documentation(s__MusicalInstrument,s__EnglishLanguage,'A &%Device which is manipulated by a &%Human and whose purpose is &%MakingMusic.') ).

fof(kb_SUMO_7667,axiom,
    ! [V__INSTRUMENT] :
      ( s__instance(V__INSTRUMENT,s__Object)
     => ( s__instance(V__INSTRUMENT,s__MusicalInstrument)
       => s__capability(s__MakingMusic,s__instrument__m,V__INSTRUMENT) ) ) ).

fof(kb_SUMO_7668,axiom,
    s__subclass(s__TransportationDevice,s__Device) ).

fof(kb_SUMO_7669,axiom,
    s__instance(s__TransportationDevice__t,s__SetOrClass) ).

fof(kb_SUMO_7670,axiom,
    s__documentation(s__TransportationDevice,s__EnglishLanguage,'A &%TransportationDevice is a &%Device which serves as the &%instrument in a &%Transportation &%Process which carries the &%patient of the &%Process from one point to another.') ).

fof(kb_SUMO_7671,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__TransportationDevice)
       => s__capability(s__Transportation,s__instrument__m,V__DEVICE) ) ) ).

fof(kb_SUMO_7672,axiom,
    s__subclass(s__Vehicle,s__TransportationDevice) ).

fof(kb_SUMO_7673,axiom,
    s__instance(s__Vehicle__t,s__SetOrClass) ).

fof(kb_SUMO_7674,axiom,
    s__documentation(s__Vehicle,s__EnglishLanguage,'&%Vehicle is the subclass of &%TransportationDevices that transport passengers or goods from one place to another by moving from one place to the other with them, e.g., cars, trucks, ferries, and airplanes. Contrast with devices such as pipelines, escalators, or supermarket checkout belts, which carry items from one place to another by means of a moving part, without the device removing from the origin to the destination.') ).

%FOL fof(kb_SUMO_7675,axiom,(( (! [V__FROM,V__TRANSPORT,V__MOVE] : ((s__instance(V__MOVE,s__Process) & s__instance(V__TRANSPORT,s__Object) & s__instance(V__FROM,s__Object)) => ((s__instance(V__TRANSPORT,s__Vehicle) & s__instance(V__MOVE,s__Translocation) & s__instrument(V__MOVE,V__TRANSPORT) & s__origin(V__MOVE,V__FROM)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOVE)),'s__located(V__TRANSPORT,V__FROM)')))) ))).

%FOL fof(kb_SUMO_7676,axiom,(( (! [V__TO,V__TRANSPORT,V__MOVE] : ((s__instance(V__MOVE,s__Process) & s__instance(V__TRANSPORT,s__Object) & s__instance(V__TO,s__Object)) => ((s__instance(V__TRANSPORT,s__Vehicle) & s__instance(V__MOVE,s__Translocation) & s__instrument(V__MOVE,V__TRANSPORT) & s__destination(V__MOVE,V__TO)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOVE)),'s__located(V__TRANSPORT,V__TO)')))) ))).

fof(kb_SUMO_7677,axiom,
    s__subclass(s__MeasuringDevice,s__Device) ).

fof(kb_SUMO_7678,axiom,
    s__instance(s__MeasuringDevice__t,s__SetOrClass) ).

fof(kb_SUMO_7679,axiom,
    s__documentation(s__MeasuringDevice,s__EnglishLanguage,'Any &%Device whose purpose is to measure a &%PhysicalQuantity.') ).

fof(kb_SUMO_7680,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__MeasuringDevice)
       => s__hasPurpose(V__DEVICE,'(? [V__MEASURE] : (s__instance(V__MEASURE,s__Process) & s__instance(V__MEASURE,s__Measuring) & s__instrument(V__MEASURE,V__DEVICE)))') ) ) ).

fof(kb_SUMO_7681,axiom,
    s__subclass(s__AttachingDevice,s__Device) ).

fof(kb_SUMO_7682,axiom,
    s__instance(s__AttachingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_7683,axiom,
    s__documentation(s__AttachingDevice,s__EnglishLanguage,'A &%Device whose purpose is to attach one thing to something else, e.g. nails, screws, buttons, etc.') ).

fof(kb_SUMO_7684,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__AttachingDevice)
       => ? [V__ATTACH] :
            ( s__instance(V__ATTACH,s__Process)
            & s__instance(V__ATTACH,s__Attaching)
            & s__instrument(V__ATTACH,V__DEVICE) ) ) ) ).

fof(kb_SUMO_7685,axiom,
    s__subclass(s__Weapon,s__Device) ).

fof(kb_SUMO_7686,axiom,
    s__instance(s__Weapon__t,s__SetOrClass) ).

fof(kb_SUMO_7687,axiom,
    s__documentation(s__Weapon,s__EnglishLanguage,'The &%Class of &%Devices that are designed primarily to damage or destroy &%Humans/&%Animals, &%StationaryArtifacts or the places inhabited by &%Humans/&%Animals.') ).

fof(kb_SUMO_7688,axiom,
    ! [V__WEAPON] :
      ( s__instance(V__WEAPON,s__Object)
     => ( s__instance(V__WEAPON,s__Weapon)
       => s__capability(s__Damaging,s__instrument__m,V__WEAPON) ) ) ).

fof(kb_SUMO_7689,axiom,
    ! [V__WEAPON] :
      ( s__instance(V__WEAPON,s__Object)
     => ( s__instance(V__WEAPON,s__Weapon)
       => s__hasPurpose(V__WEAPON,'(? [V__D,V__PATIENT] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Damaging) & s__instrument(V__D,V__WEAPON) & s__patient(V__D,V__PATIENT)))') ) ) ).

fof(kb_SUMO_7690,axiom,
    s__subclass(s__Machine,s__Device) ).

fof(kb_SUMO_7691,axiom,
    s__instance(s__Machine__t,s__SetOrClass) ).

fof(kb_SUMO_7692,axiom,
    s__instance(s__Device__t,s__SetOrClass) ).

fof(kb_SUMO_7693,axiom,
    s__documentation(s__Machine,s__EnglishLanguage,'&%Machines are &%Devices that that have a well-defined &%resource and &%result and that automatically convert the &%resource into the &%result.') ).

fof(kb_SUMO_7694,axiom,
    ! [V__MACHINE] :
      ( s__instance(V__MACHINE,s__Machine)
     => ! [V__PROC] :
          ( ( s__instance(V__PROC,s__Process)
            & s__instance(V__MACHINE,s__Object) )
         => ( s__instrument(V__PROC,V__MACHINE)
           => ? [V__RESOURCE,V__RESULT] :
                ( s__instance(V__RESOURCE,s__Object)
                & s__resource(V__PROC,V__RESOURCE)
                & s__result(V__PROC,V__RESULT) ) ) ) ) ).

fof(kb_SUMO_7695,axiom,
    s__subclass(s__EngineeringComponent,s__Device) ).

fof(kb_SUMO_7696,axiom,
    s__documentation(s__EngineeringComponent,s__EnglishLanguage,'A fundamental concept that applies in many engineering domains. An &%EngineeringComponent is an element of a &%Device that is a physically whole object, such as one might see listed as standard parts in a catalog. The main difference betweeen &%EngineeringComponents and arbitrary globs of matter is that &%EngineeringComponents are object-like in a modeling sense. Thus, an &%EngineeringComponent is not an arbtrary subregion, but a part of a system with a stable identity.') ).

fof(kb_SUMO_7697,axiom,
    ! [V__COMP] :
      ( s__instance(V__COMP,s__CorpuscularObject)
     => ( s__instance(V__COMP,s__EngineeringComponent)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__CorpuscularObject)
            & s__instance(V__DEVICE,s__Device)
            & s__component(V__COMP,V__DEVICE) ) ) ) ).

fof(kb_SUMO_7698,axiom,
    ! [V__MACHINE] :
      ( s__instance(V__MACHINE,s__Object)
     => ( s__instance(V__MACHINE,s__Machine)
       => ? [V__COMP1,V__COMP2] :
            ( s__instance(V__COMP2,s__Object)
            & s__instance(V__COMP1,s__Object)
            & s__instance(V__COMP1,s__EngineeringComponent)
            & s__instance(V__COMP2,s__EngineeringComponent)
            & V__COMP1 != V__COMP2
            & s__part(V__COMP1,V__MACHINE)
            & s__part(V__COMP2,V__MACHINE) ) ) ) ).

fof(kb_SUMO_7699,axiom,
    s__subrelation(s__engineeringSubcomponent__m,s__properPart__m) ).

fof(kb_SUMO_7700,axiom,
    s__domain(s__engineeringSubcomponent__m,"1",s__EngineeringComponent) ).

fof(kb_SUMO_7701,axiom,
    s__domain(s__engineeringSubcomponent__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_7702,axiom,
    s__documentation(s__engineeringSubcomponent__m,s__EnglishLanguage,'(&%engineeringSubcomponent ?SUB ?SUPER) means that the &%EngineeringComponent ?SUB is structurally a &%properPart of ?SUPER. This relation is an &%AsymmetricRelation, since two &%EngineeringComponents cannot be subcomponents of each other.') ).

fof(kb_SUMO_7703,axiom,
    s__instance(s__connectedEngineeringComponents__m,s__SymmetricRelation) ).

fof(kb_SUMO_7704,axiom,
    s__instance(s__connectedEngineeringComponents__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7705,axiom,
    s__subrelation(s__connectedEngineeringComponents__m,s__connected__m) ).

fof(kb_SUMO_7706,axiom,
    s__domain(s__connectedEngineeringComponents__m,"1",s__EngineeringComponent) ).

fof(kb_SUMO_7707,axiom,
    s__domain(s__connectedEngineeringComponents__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_7708,axiom,
    s__documentation(s__connectedEngineeringComponents__m,s__EnglishLanguage,'This is the most general connection relation between &%EngineeringComponents. If (&%connectedEngineeringComponents ?COMP1 ?COMP2), then neither ?COMP1 nor ?COMP2 can be an &%engineeringSubcomponent of the other. The relation &%connectedEngineeringComponents is a &%SymmetricRelation, there is no information in the direction of connection between two components. It is also an &%IrreflexiveRelation, no &%EngineeringComponent bears this relation to itself. Note that this relation does not associate a name or type with the connection.') ).

fof(kb_SUMO_7709,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
       => ( ~ s__engineeringSubcomponent(V__COMP1,V__COMP2)
          & ~ s__engineeringSubcomponent(V__COMP2,V__COMP1) ) ) ) ).

fof(kb_SUMO_7710,axiom,
    s__subclass(s__EngineeringConnection,s__EngineeringComponent) ).

fof(kb_SUMO_7711,axiom,
    s__instance(s__EngineeringConnection__t,s__SetOrClass) ).

fof(kb_SUMO_7712,axiom,
    s__instance(s__EngineeringComponent__t,s__SetOrClass) ).

fof(kb_SUMO_7713,axiom,
    s__documentation(s__EngineeringConnection,s__EnglishLanguage,'An &%EngineeringConnection is an &%EngineeringComponent that represents a connection relationship between two other &%EngineeringComponents. It is a reification of the &%Predicate &%connectedEngineeringComponents. That means that whenever this &%Predicate holds between two &%EngineeringComponents, there exists an &%EngineeringConnection. The practical reason for reifying a relationship is to be able to attach other information about it. For example, one might want to say that a particular connection is associated with some shared parameters, or that it is of a particular type. &%EngineeringConnections are &%EngineeringComponents and can therefore be an &%engineeringSubcomponent of other &%EngineeringComponents. However, to provide for modular regularity in component systems, &%EngineeringConnections cannot be connected. For each pair of &%EngineeringComponents related by &%connectedEngineeringComponents, there exists at least one &%EngineeringConnection. However, that object may not be unique, and the same &%EngineeringConnection may be associated with several pairs of &%EngineeringComponents.') ).

fof(kb_SUMO_7714,axiom,
    ! [V__CONNECTION] :
      ( s__instance(V__CONNECTION,s__EngineeringConnection)
     => ? [V__COMP1,V__COMP2] :
          ( s__instance(V__COMP2,s__EngineeringComponent)
          & s__instance(V__COMP1,s__EngineeringComponent)
          & s__connectsEngineeringComponents(V__CONNECTION,V__COMP1,V__COMP2) ) ) ).

fof(kb_SUMO_7715,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
       => ~ ( s__instance(V__COMP1,s__EngineeringConnection)
            | s__instance(V__COMP2,s__EngineeringConnection) ) ) ) ).

fof(kb_SUMO_7716,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
      <=> ? [V__CONNECTION] :
            ( s__instance(V__CONNECTION,s__EngineeringConnection)
            & s__connectsEngineeringComponents(V__CONNECTION,V__COMP1,V__COMP2) ) ) ) ).

fof(kb_SUMO_7717,axiom,
    s__subrelation(s__connectsEngineeringComponents__m,s__connects__m) ).

fof(kb_SUMO_7718,axiom,
    s__domain(s__connectsEngineeringComponents__m,"1",s__EngineeringConnection) ).

fof(kb_SUMO_7719,axiom,
    s__domain(s__connectsEngineeringComponents__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_7720,axiom,
    s__domain(s__connectsEngineeringComponents__m,"3",s__EngineeringComponent) ).

fof(kb_SUMO_7721,axiom,
    s__documentation(s__connectsEngineeringComponents__m,s__EnglishLanguage,'&%connectsEngineeringComponents is a &%TernaryPredicate that maps from an &%EngineeringConnection to the &%EngineeringComponents it connects. Since &%EngineeringComponents cannot be connected to themselves and there cannot be an &%EngineeringConnection without a &%connectedEngineeringComponents &%Predicate, the second and third arguments of any &%connectsEngineeringComponents relationship will always be distinct for any given first argument.') ).

fof(kb_SUMO_7722,axiom,
    s__subclass(s__CommercialAgent,s__Agent) ).

fof(kb_SUMO_7723,axiom,
    s__documentation(s__CommercialAgent,s__EnglishLanguage,'An &%Agent that provides products and/or services for a fee with the aim of making a profit.') ).

fof(kb_SUMO_7724,axiom,
    s__subclass(s__Business,s__CommercialAgent) ).

fof(kb_SUMO_7725,axiom,
    s__instance(s__Business__t,s__SetOrClass) ).

fof(kb_SUMO_7726,axiom,
    s__instance(s__CommercialAgent__t,s__SetOrClass) ).

fof(kb_SUMO_7727,axiom,
    s__subclass(s__Business,s__Organization) ).

fof(kb_SUMO_7728,axiom,
    s__documentation(s__Business,s__EnglishLanguage,'An &%instance of &%Business is an &%Organization that is a &%CommercialAgent.') ).

fof(kb_SUMO_7729,axiom,
    s__subclass(s__Corporation,s__Business) ).

fof(kb_SUMO_7730,axiom,
    s__subclass(s__Corporation,s__LegalAgent) ).

fof(kb_SUMO_7731,axiom,
    s__documentation(s__Corporation,s__EnglishLanguage,'An &%Organization that has a special legal status that allows a group of persons to act as a &%CommercialAgent and that insulates the owners (shareholders) from many liabilities that might result from the corporations operation.') ).

fof(kb_SUMO_7732,axiom,
    s__subclass(s__Manufacturer,s__Corporation) ).

fof(kb_SUMO_7733,axiom,
    s__instance(s__Manufacturer__t,s__SetOrClass) ).

fof(kb_SUMO_7734,axiom,
    s__instance(s__Corporation__t,s__SetOrClass) ).

fof(kb_SUMO_7735,axiom,
    s__documentation(s__Manufacturer,s__EnglishLanguage,'Any &%Corporation which manufactures &%Products.') ).

fof(kb_SUMO_7736,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Agent)
     => ( s__instance(V__ORG,s__Manufacturer)
       => s__hasPurpose(V__ORG,'(? [V__MANUFACTURE] : (s__instance(V__MANUFACTURE,s__Process) & s__instance(V__MANUFACTURE,s__Manufacture) & s__instance(V__MANUFACTURE,s__CommercialService) & s__agent(V__MANUFACTURE,V__ORG)))') ) ) ).

fof(kb_SUMO_7737,axiom,
    s__subclass(s__MercantileOrganization,s__Corporation) ).

fof(kb_SUMO_7738,axiom,
    s__instance(s__MercantileOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7739,axiom,
    s__documentation(s__MercantileOrganization,s__EnglishLanguage,'Any &%Corporation which sells goods or services to customers for a profit.') ).

fof(kb_SUMO_7740,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Agent)
     => ( s__instance(V__ORG,s__MercantileOrganization)
       => s__hasPurpose(V__ORG,'(? [V__SELL] : (s__instance(V__SELL,s__Process) & s__instance(V__SELL,s__Selling) & s__instance(V__SELL,s__CommercialService) & s__agent(V__SELL,V__ORG)))') ) ) ).

fof(kb_SUMO_7741,axiom,
    s__subclass(s__Group,s__Collection) ).

fof(kb_SUMO_7742,axiom,
    s__subclass(s__Group,s__Agent) ).

fof(kb_SUMO_7743,axiom,
    s__instance(s__Group__t,s__SetOrClass) ).

fof(kb_SUMO_7744,axiom,
    s__instance(s__Agent__t,s__SetOrClass) ).

fof(kb_SUMO_7745,axiom,
    s__documentation(s__Group,s__EnglishLanguage,'A &%Collection of &%Agents, e.g. a flock of sheep, a herd of goats, or the local Boy Scout troop.') ).

fof(kb_SUMO_7746,axiom,
    ! [V__MEMB,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__MEMB,s__SelfConnectedObject) )
     => ( ( s__instance(V__GROUP,s__Group)
          & s__member(V__MEMB,V__GROUP) )
       => s__instance(V__MEMB,s__Agent) ) ) ).

fof(kb_SUMO_7747,axiom,
    s__subclass(s__GroupOfPeople,s__Group) ).

fof(kb_SUMO_7748,axiom,
    s__documentation(s__GroupOfPeople,s__EnglishLanguage,'Any &%Group whose &%members are exclusively &%Humans.') ).

fof(kb_SUMO_7749,axiom,
    ! [V__MEMBER,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__MEMBER,s__SelfConnectedObject) )
     => ( ( s__instance(V__GROUP,s__GroupOfPeople)
          & s__member(V__MEMBER,V__GROUP) )
       => s__instance(V__MEMBER,s__Human) ) ) ).

fof(kb_SUMO_7750,axiom,
    s__subclass(s__AgeGroup,s__GroupOfPeople) ).

fof(kb_SUMO_7751,axiom,
    s__instance(s__AgeGroup__t,s__SetOrClass) ).

fof(kb_SUMO_7752,axiom,
    s__instance(s__GroupOfPeople__t,s__SetOrClass) ).

fof(kb_SUMO_7753,axiom,
    s__documentation(s__AgeGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members all have the same &%age.') ).

fof(kb_SUMO_7754,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__AgeGroup)
     => ! [V__MEMB1,V__MEMB2,V__AGE1,V__AGE2] :
          ( ( s__instance(V__AGE2,s__TimeDuration)
            & s__instance(V__AGE1,s__TimeDuration)
            & s__instance(V__MEMB2,s__SelfConnectedObject)
            & s__instance(V__MEMB1,s__SelfConnectedObject)
            & s__instance(V__GROUP,s__Collection) )
         => ( ( s__member(V__MEMB1,V__GROUP)
              & s__member(V__MEMB2,V__GROUP)
              & s__age(V__MEMB1,V__AGE1)
              & s__age(V__MEMB2,V__AGE2) )
           => V__AGE1 = V__AGE2 ) ) ) ).

fof(kb_SUMO_7755,axiom,
    s__subclass(s__FamilyGroup,s__GroupOfPeople) ).

fof(kb_SUMO_7756,axiom,
    s__instance(s__FamilyGroup__t,s__SetOrClass) ).

fof(kb_SUMO_7757,axiom,
    s__documentation(s__FamilyGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members bear &%familyRelations to one another.') ).

fof(kb_SUMO_7758,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__FamilyGroup)
     => ! [V__MEMB1,V__MEMB2] :
          ( ( s__instance(V__MEMB2,s__Organism)
            & s__instance(V__MEMB1,s__Organism)
            & s__instance(V__GROUP,s__Collection) )
         => ( ( s__member(V__MEMB1,V__GROUP)
              & s__member(V__MEMB2,V__GROUP) )
           => s__familyRelation(V__MEMB1,V__MEMB2) ) ) ) ).

fof(kb_SUMO_7759,axiom,
    s__subclass(s__SocialUnit,s__GroupOfPeople) ).

fof(kb_SUMO_7760,axiom,
    s__instance(s__SocialUnit__t,s__SetOrClass) ).

fof(kb_SUMO_7761,axiom,
    s__documentation(s__SocialUnit,s__EnglishLanguage,'A &%GroupOfPeople who all have the same &%home.') ).

fof(kb_SUMO_7762,axiom,
    ! [V__MEMBER,V__UNIT] :
      ( ( s__instance(V__UNIT,s__Collection)
        & s__instance(V__MEMBER,s__Human) )
     => ( s__instance(V__UNIT,s__SocialUnit)
       => ? [V__HOME] :
            ( s__instance(V__HOME,s__PermanentResidence)
            & ( s__member(V__MEMBER,V__UNIT)
             => s__home(V__MEMBER,V__HOME) ) ) ) ) ).

fof(kb_SUMO_7763,axiom,
    s__instance(s__ImmediateFamilyFn__m,s__UnaryFunction) ).

fof(kb_SUMO_7764,axiom,
    s__domain(s__ImmediateFamilyFn__m,"1",s__Human) ).

fof(kb_SUMO_7765,axiom,
    s__range(s__ImmediateFamilyFn__m,s__FamilyGroup) ).

fof(kb_SUMO_7766,axiom,
    s__documentation(s__ImmediateFamilyFn__m,s__EnglishLanguage,'(&%ImmediateFamilyFn ?PERSON) denotes the immediate family of ?PERSON, i.e. the &%Group consisting of the &%parents of ?PERSON and anyone of whom ?PERSON is a &%parent.') ).

fof(kb_SUMO_7767,axiom,
    ! [V__P,V__FAMILY] :
      ( s__ImmediateFamilyFn(V__P) = V__FAMILY
     => ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__Organism)
            & s__instance(V__FAMILY,s__Collection)
            & s__instance(V__P,s__Human) )
         => ( s__member(V__MEMBER,V__FAMILY)
           => ? [V__OTHER] :
                ( s__instance(V__OTHER,s__Organism)
                & ( s__parent(V__MEMBER,V__OTHER)
                  | s__parent(V__OTHER,V__MEMBER) ) ) ) ) ) ).

fof(kb_SUMO_7768,axiom,
    ! [V__PERSON,V__FAMILY] :
      ( ( s__instance(V__FAMILY,s__Collection)
        & s__instance(V__PERSON,s__Human) )
     => ( s__ImmediateFamilyFn(V__PERSON) = V__FAMILY
       => ? [V__MEMBER] :
            ( s__instance(V__MEMBER,s__Organism)
            & s__member(V__MEMBER,V__FAMILY)
            & ( s__parent(V__MEMBER,V__PERSON)
              | s__parent(V__PERSON,V__MEMBER) ) ) ) ) ).

fof(kb_SUMO_7769,axiom,
    s__instance(s__relative__m,s__BinaryPredicate) ).

fof(kb_SUMO_7770,axiom,
    s__instance(s__relative__m,s__SymmetricRelation) ).

fof(kb_SUMO_7771,axiom,
    s__domain(s__relative__m,"1",s__Organism) ).

fof(kb_SUMO_7772,axiom,
    s__domain(s__relative__m,"2",s__Organism) ).

fof(kb_SUMO_7773,axiom,
    s__documentation(s__relative__m,s__EnglishLanguage,'(&%relative ?O1 ?O2) means that ?O1 and ?O2 are relatives, whether through common ancestry (consanguinity), someones marriage (affinity), or someones adoption. This definition is intentionally broad, so as to capture a wide array of `familial relations. The notion of who counts as `family also varies between cultures, but that aspect of meaning is not addressed here.') ).

fof(kb_SUMO_7774,axiom,
    s__subrelation(s__familyRelation__m,s__relative__m) ).

fof(kb_SUMO_7775,axiom,
    s__subrelation(s__spouse__m,s__relative__m) ).

%FOL fof(kb_SUMO_7776,axiom,(( (! [V__A1,V__T1,V__A2] : ((s__instance(V__A2,s__Human) & s__instance(V__T1,s__TimePosition) & s__instance(V__A1,s__Human)) => ((s__holdsDuring(V__T1,'s__legalRelation(V__A1,V__A2)') & s__instance(V__A1,s__Organism) & s__instance(V__A2,s__Organism)) => s__holdsDuring(V__T1,'s__relative(V__A1,V__A2)')))) ))).

fof(kb_SUMO_7777,axiom,
    s__instance(s__familyRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_7778,axiom,
    s__instance(s__familyRelation__m,s__EquivalenceRelation) ).

fof(kb_SUMO_7779,axiom,
    s__domain(s__familyRelation__m,"1",s__Organism) ).

fof(kb_SUMO_7780,axiom,
    s__domain(s__familyRelation__m,"2",s__Organism) ).

fof(kb_SUMO_7781,axiom,
    s__documentation(s__familyRelation__m,s__EnglishLanguage,'A very general &%Predicate for biological relationships. (&%familyRelation ?ORGANISM1 ?ORGANISM2) means that ?ORGANISM1 and ?ORGANISM2 are biologically derived from a common ancestor.') ).

fof(kb_SUMO_7782,axiom,
    ! [V__ORGANISM1,V__ORGANISM2] :
      ( ( s__instance(V__ORGANISM2,s__Organism)
        & s__instance(V__ORGANISM1,s__Organism) )
     => ( s__familyRelation(V__ORGANISM1,V__ORGANISM2)
       => ? [V__ORGANISM3] :
            ( s__instance(V__ORGANISM3,s__Organism)
            & s__ancestor(V__ORGANISM3,V__ORGANISM1)
            & s__ancestor(V__ORGANISM3,V__ORGANISM2) ) ) ) ).

fof(kb_SUMO_7783,axiom,
    s__subrelation(s__ancestor__m,s__familyRelation__m) ).

fof(kb_SUMO_7784,axiom,
    s__instance(s__ancestor__m,s__TransitiveRelation) ).

fof(kb_SUMO_7785,axiom,
    s__instance(s__ancestor__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7786,axiom,
    s__domain(s__ancestor__m,"1",s__Organism) ).

fof(kb_SUMO_7787,axiom,
    s__domain(s__ancestor__m,"2",s__Organism) ).

fof(kb_SUMO_7788,axiom,
    s__documentation(s__ancestor__m,s__EnglishLanguage,'The transitive closure of the &%parent predicate. (&%ancestor ?DESCENDANT ?ANCESTOR) means that ?ANCESTOR is either the &%parent of ?DESCENDANT or the &%parent of the &%parent of &%DESCENDANT or etc.') ).

fof(kb_SUMO_7789,axiom,
    s__subrelation(s__parent__m,s__ancestor__m) ).

fof(kb_SUMO_7790,axiom,
    s__instance(s__parent__m,s__BinaryPredicate) ).

fof(kb_SUMO_7791,axiom,
    s__subrelation(s__parent__m,s__familyRelation__m) ).

fof(kb_SUMO_7792,axiom,
    s__instance(s__parent__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7793,axiom,
    s__instance(s__parent__m,s__IntransitiveRelation) ).

fof(kb_SUMO_7794,axiom,
    s__domain(s__parent__m,"1",s__Organism) ).

fof(kb_SUMO_7795,axiom,
    s__domain(s__parent__m,"2",s__Organism) ).

fof(kb_SUMO_7796,axiom,
    s__documentation(s__parent__m,s__EnglishLanguage,'The general relationship of parenthood. (&%parent ?CHILD ?PARENT) means that ?PARENT is a biological parent of ?CHILD.') ).

fof(kb_SUMO_7797,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__parent(V__CHILD,V__PARENT)
       => s__before(s__BeginFn(s__WhenFn(V__PARENT)),s__BeginFn(s__WhenFn(V__CHILD))) ) ) ).

fof(kb_SUMO_7798,axiom,
    ! [V__CLASS,V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__subclass(V__CLASS,s__Organism)
          & s__instance(V__PARENT,V__CLASS) )
       => s__instance(V__CHILD,V__CLASS) ) ) ).

fof(kb_SUMO_7799,axiom,
    ! [V__REP,V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism)
        & s__instance(V__REP,s__Process) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__instance(V__REP,s__SexualReproduction)
          & s__agent(V__REP,V__PARENT)
          & s__result(V__REP,V__CHILD) )
       => ( s__mother(V__CHILD,V__PARENT)
          | s__father(V__CHILD,V__PARENT) ) ) ) ).

fof(kb_SUMO_7800,axiom,
    ! [V__ORGANISM] :
      ( s__instance(V__ORGANISM,s__Organism)
     => ? [V__PARENT] :
          ( s__instance(V__PARENT,s__Organism)
          & s__parent(V__ORGANISM,V__PARENT) ) ) ).

fof(kb_SUMO_7801,axiom,
    s__instance(s__mother__m,s__SingleValuedRelation) ).

fof(kb_SUMO_7802,axiom,
    s__subrelation(s__mother__m,s__parent__m) ).

fof(kb_SUMO_7803,axiom,
    s__domain(s__mother__m,"1",s__Organism) ).

fof(kb_SUMO_7804,axiom,
    s__domain(s__mother__m,"2",s__Organism) ).

fof(kb_SUMO_7805,axiom,
    s__documentation(s__mother__m,s__EnglishLanguage,'The general relationship of motherhood. (&%mother ?CHILD ?MOTHER) means that ?MOTHER is the biological mother of ?CHILD.') ).

fof(kb_SUMO_7806,axiom,
    ! [V__MOTHER,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Organism)
        & s__instance(V__MOTHER,s__Organism) )
     => ( s__mother(V__CHILD,V__MOTHER)
       => s__attribute(V__MOTHER,s__Female) ) ) ).

fof(kb_SUMO_7807,axiom,
    s__instance(s__father__m,s__SingleValuedRelation) ).

fof(kb_SUMO_7808,axiom,
    s__subrelation(s__father__m,s__parent__m) ).

fof(kb_SUMO_7809,axiom,
    s__domain(s__father__m,"1",s__Organism) ).

fof(kb_SUMO_7810,axiom,
    s__domain(s__father__m,"2",s__Organism) ).

fof(kb_SUMO_7811,axiom,
    s__documentation(s__father__m,s__EnglishLanguage,'The general relationship of fatherhood. (&%father ?CHILD ?FATHER) means that ?FATHER is the biological father of ?CHILD.') ).

fof(kb_SUMO_7812,axiom,
    ! [V__FATHER,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Organism)
        & s__instance(V__FATHER,s__Organism) )
     => ( s__father(V__CHILD,V__FATHER)
       => s__attribute(V__FATHER,s__Male) ) ) ).

fof(kb_SUMO_7813,axiom,
    s__subrelation(s__daughter__m,s__parent__m) ).

fof(kb_SUMO_7814,axiom,
    s__domain(s__daughter__m,"1",s__Organism) ).

fof(kb_SUMO_7815,axiom,
    s__domain(s__daughter__m,"2",s__Organism) ).

fof(kb_SUMO_7816,axiom,
    s__documentation(s__daughter__m,s__EnglishLanguage,'The general relationship of daughterhood. (&%daughter ?CHILD ?PARENT) means that ?CHILD is the biological daughter of ?PARENT.') ).

fof(kb_SUMO_7817,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__daughter(V__CHILD,V__PARENT)
       => s__attribute(V__CHILD,s__Female) ) ) ).

fof(kb_SUMO_7818,axiom,
    s__subrelation(s__son__m,s__parent__m) ).

fof(kb_SUMO_7819,axiom,
    s__domain(s__son__m,"1",s__Organism) ).

fof(kb_SUMO_7820,axiom,
    s__domain(s__son__m,"2",s__Organism) ).

fof(kb_SUMO_7821,axiom,
    s__documentation(s__son__m,s__EnglishLanguage,'The general relationship of being a son. (&%son ?CHILD ?PARENT) means that ?CHILD is the biological son of ?PARENT.') ).

fof(kb_SUMO_7822,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__son(V__CHILD,V__PARENT)
       => s__attribute(V__CHILD,s__Male) ) ) ).

fof(kb_SUMO_7823,axiom,
    s__instance(s__sibling__m,s__BinaryPredicate) ).

fof(kb_SUMO_7824,axiom,
    s__subrelation(s__sibling__m,s__familyRelation__m) ).

fof(kb_SUMO_7825,axiom,
    s__instance(s__sibling__m,s__SymmetricRelation) ).

fof(kb_SUMO_7826,axiom,
    s__instance(s__sibling__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7827,axiom,
    s__domain(s__sibling__m,"1",s__Organism) ).

fof(kb_SUMO_7828,axiom,
    s__domain(s__sibling__m,"2",s__Organism) ).

fof(kb_SUMO_7829,axiom,
    s__documentation(s__sibling__m,s__EnglishLanguage,'The relationship between two &%Organisms that have the same &%mother and &%father. Note that this relationship does not hold between half-brothers, half-sisters, etc.') ).

fof(kb_SUMO_7830,axiom,
    ! [V__PARENT2,V__ORGANISM1,V__ORGANISM2,V__PARENT1] :
      ( ( s__instance(V__PARENT1,s__Organism)
        & s__instance(V__ORGANISM2,s__Organism)
        & s__instance(V__ORGANISM1,s__Organism)
        & s__instance(V__PARENT2,s__Organism) )
     => ( ( s__parent(V__ORGANISM1,V__PARENT1)
          & s__parent(V__ORGANISM2,V__PARENT1)
          & s__parent(V__ORGANISM1,V__PARENT2)
          & s__parent(V__ORGANISM2,V__PARENT2)
          & V__ORGANISM1 != V__ORGANISM2
          & V__PARENT1 != V__PARENT2 )
       => s__sibling(V__ORGANISM1,V__ORGANISM2) ) ) ).

fof(kb_SUMO_7831,axiom,
    ! [V__ORG1,V__ORG2,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__ORG2,s__Organism)
        & s__instance(V__ORG1,s__Organism) )
     => ( ( s__sibling(V__ORG1,V__ORG2)
          & s__parent(V__ORG1,V__PARENT) )
       => s__parent(V__ORG2,V__PARENT) ) ) ).

fof(kb_SUMO_7832,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__attribute(V__PARENT,s__Male) )
       => s__father(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_7833,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__attribute(V__PARENT,s__Female) )
       => s__mother(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_7834,axiom,
    s__subrelation(s__brother__m,s__sibling__m) ).

fof(kb_SUMO_7835,axiom,
    s__instance(s__brother__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7836,axiom,
    s__instance(s__brother__m,s__TransitiveRelation) ).

fof(kb_SUMO_7837,axiom,
    s__domain(s__brother__m,"1",s__Man) ).

fof(kb_SUMO_7838,axiom,
    s__domain(s__brother__m,"2",s__Human) ).

fof(kb_SUMO_7839,axiom,
    s__documentation(s__brother__m,s__EnglishLanguage,'The general relationship of being a brother. (&%brother ?MAN ?PERSON) means that ?MAN is the brother of ?PERSON.') ).

fof(kb_SUMO_7840,axiom,
    s__subrelation(s__sister__m,s__sibling__m) ).

fof(kb_SUMO_7841,axiom,
    s__instance(s__sister__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7842,axiom,
    s__instance(s__sister__m,s__TransitiveRelation) ).

fof(kb_SUMO_7843,axiom,
    s__domain(s__sister__m,"1",s__Woman) ).

fof(kb_SUMO_7844,axiom,
    s__domain(s__sister__m,"2",s__Human) ).

fof(kb_SUMO_7845,axiom,
    s__documentation(s__sister__m,s__EnglishLanguage,'The general relationship of being a sister. (&%sister ?WOMAN ?PERSON) means that ?WOMAN is the sister of ?PERSON.') ).

fof(kb_SUMO_7846,axiom,
    s__instance(s__legalRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_7847,axiom,
    s__instance(s__legalRelation__m,s__SymmetricRelation) ).

fof(kb_SUMO_7848,axiom,
    s__domain(s__legalRelation__m,"1",s__Human) ).

fof(kb_SUMO_7849,axiom,
    s__domain(s__legalRelation__m,"2",s__Human) ).

fof(kb_SUMO_7850,axiom,
    s__documentation(s__legalRelation__m,s__EnglishLanguage,'(&%legalRelation ?AGENT1 ?AGENT2) means that ?AGENT1 and ?AGENT2 are relatives by virtue of a legal relationship. Some examples include marriage, adoption, etc.') ).

fof(kb_SUMO_7851,axiom,
    ! [V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Human)
        & s__instance(V__AGENT2,s__Human) )
     => ( s__legalRelation(V__AGENT1,V__AGENT2)
       => ? [V__DECLARE,V__OBLIGATION] :
            ( s__instance(V__OBLIGATION,s__Formula)
            & s__instance(V__DECLARE,s__Declaring)
            & s__confersObligation(V__OBLIGATION,V__DECLARE,V__AGENT1)
            & s__confersObligation(V__OBLIGATION,V__DECLARE,V__AGENT2) ) ) ) ).

fof(kb_SUMO_7852,axiom,
    s__instance(s__acquaintance__m,s__BinaryPredicate) ).

fof(kb_SUMO_7853,axiom,
    s__documentation(s__acquaintance__m,s__EnglishLanguage,'(&%acquaintance ?H1 ?H2) means that ?H1 has met and knows something about ?H2, such as ?H2s name and appearance. Statements made with this predicate should be temporally specified with &%holdsDuring. Note that &%acquaintance is not symmetric. For the symmetric version, see &%mutualAcquaintance.') ).

fof(kb_SUMO_7854,axiom,
    s__domain(s__acquaintance__m,"1",s__Human) ).

fof(kb_SUMO_7855,axiom,
    s__domain(s__acquaintance__m,"2",s__Human) ).

fof(kb_SUMO_7856,axiom,
    s__instance(s__mutualAcquaintance__m,s__BinaryPredicate) ).

fof(kb_SUMO_7857,axiom,
    s__instance(s__mutualAcquaintance__m,s__SymmetricRelation) ).

fof(kb_SUMO_7858,axiom,
    s__documentation(s__mutualAcquaintance__m,s__EnglishLanguage,'(&%mutualAcquaintance ?H1 ?H2) means that ?H1 and ?H2 have met each other and know something about each other, such as name and appearance. Statements made with this predicate should be temporally specified with &%holdsDuring. See also the weaker, non-symmetric version of this predicate, &%acquaintance.') ).

fof(kb_SUMO_7859,axiom,
    s__domain(s__mutualAcquaintance__m,"1",s__Human) ).

fof(kb_SUMO_7860,axiom,
    s__domain(s__mutualAcquaintance__m,"2",s__Human) ).

fof(kb_SUMO_7861,axiom,
    s__subrelation(s__mutualAcquaintance__m,s__acquaintance__m) ).

fof(kb_SUMO_7862,axiom,
    s__subrelation(s__spouse__m,s__mutualAcquaintance__m) ).

fof(kb_SUMO_7863,axiom,
    s__subrelation(s__spouse__m,s__legalRelation__m) ).

fof(kb_SUMO_7864,axiom,
    s__instance(s__spouse__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7865,axiom,
    s__instance(s__spouse__m,s__SymmetricRelation) ).

fof(kb_SUMO_7866,axiom,
    s__instance(s__SymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_7867,axiom,
    s__domain(s__spouse__m,"1",s__Human) ).

fof(kb_SUMO_7868,axiom,
    s__domain(s__spouse__m,"2",s__Human) ).

fof(kb_SUMO_7869,axiom,
    s__documentation(s__spouse__m,s__EnglishLanguage,'The relationship of marriage between two &%Humans.') ).

fof(kb_SUMO_7870,axiom,
    s__subrelation(s__husband__m,s__spouse__m) ).

fof(kb_SUMO_7871,axiom,
    s__instance(s__husband__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7872,axiom,
    s__instance(s__husband__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7873,axiom,
    s__instance(s__IrreflexiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_7874,axiom,
    s__domain(s__husband__m,"1",s__Man) ).

fof(kb_SUMO_7875,axiom,
    s__domain(s__husband__m,"2",s__Woman) ).

fof(kb_SUMO_7876,axiom,
    s__inverse(s__husband__m,s__wife__m) ).

fof(kb_SUMO_7877,axiom,
    s__documentation(s__husband__m,s__EnglishLanguage,'(&%husband ?MAN ?WOMAN) means that ?MAN is the husband of ?WOMAN.') ).

fof(kb_SUMO_7878,axiom,
    s__subrelation(s__wife__m,s__spouse__m) ).

fof(kb_SUMO_7879,axiom,
    s__instance(s__wife__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7880,axiom,
    s__instance(s__wife__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_7881,axiom,
    s__domain(s__wife__m,"1",s__Woman) ).

fof(kb_SUMO_7882,axiom,
    s__domain(s__wife__m,"2",s__Man) ).

fof(kb_SUMO_7883,axiom,
    s__documentation(s__wife__m,s__EnglishLanguage,'(&%wife ?WOMAN ?MAN) means that ?WOMAN is the wife of ?MAN.') ).

fof(kb_SUMO_7884,axiom,
    s__subclass(s__EthnicGroup,s__GroupOfPeople) ).

fof(kb_SUMO_7885,axiom,
    s__instance(s__EthnicGroup__t,s__SetOrClass) ).

fof(kb_SUMO_7886,axiom,
    s__documentation(s__EthnicGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members originate from the same &%GeographicArea or share the same &%Language and/or cultural practices.') ).

fof(kb_SUMO_7887,axiom,
    s__subclass(s__BeliefGroup,s__GroupOfPeople) ).

fof(kb_SUMO_7888,axiom,
    s__documentation(s__BeliefGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members share a belief or set of beliefs.') ).

fof(kb_SUMO_7889,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__BeliefGroup)
     => ? [V__BELIEF] :
          ( s__instance(V__BELIEF,s__Formula)
          & ! [V__MEMB] :
              ( ( s__instance(V__MEMB,s__SelfConnectedObject)
                & s__instance(V__MEMB,s__CognitiveAgent)
                & s__instance(V__GROUP,s__Collection) )
             => ( s__member(V__MEMB,V__GROUP)
               => s__believes(V__MEMB,V__BELIEF) ) ) ) ) ).

fof(kb_SUMO_7890,axiom,
    s__subclass(s__Organization,s__Group) ).

fof(kb_SUMO_7891,axiom,
    s__subclass(s__Organization,s__Agent) ).

fof(kb_SUMO_7892,axiom,
    s__documentation(s__Organization,s__EnglishLanguage,'An &%Organization is a corporate or similar institution. The &%members of an &%Organization typically have a common purpose or function. Note that this class also covers divisions, departments, etc. of organizations. For example, both the Shell Corporation and the accounting department at Shell would both be instances of &%Organization. Note too that the existence of an &%Organization is dependent on the existence of at least one &%member (since &%Organization is a subclass of &%Collection). Accordingly, in cases of purely legal organizations, a fictitious &%member should be assumed.') ).

fof(kb_SUMO_7893,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Organization)
     => ? [V__PURP] :
          ( s__instance(V__PURP,s__Formula)
          & ! [V__MEMBER] :
              ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
                & s__instance(V__ORG,s__Collection) )
             => ( s__member(V__MEMBER,V__ORG)
               => s__hasPurpose(V__MEMBER,V__PURP) ) ) ) ) ).

fof(kb_SUMO_7894,axiom,
    ! [V__ORG,V__AGENT] :
      ( ( s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ORG,s__Collection) )
     => ( ( s__instance(V__ORG,s__Organization)
          & s__member(V__AGENT,V__ORG) )
       => s__instance(V__AGENT,s__Agent) ) ) ).

fof(kb_SUMO_7895,axiom,
    s__instance(s__employs__m,s__BinaryPredicate) ).

fof(kb_SUMO_7896,axiom,
    s__domain(s__employs__m,"1",s__Organization) ).

fof(kb_SUMO_7897,axiom,
    s__domain(s__employs__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_7898,axiom,
    s__documentation(s__employs__m,s__EnglishLanguage,'(&%employs ?ORG ?PERSON) means that ?ORG has hired ?PERSON and currently retains ?PERSON, on a salaried, hourly or contractual basis, to provide services in exchange for monetary compensation.') ).

fof(kb_SUMO_7899,axiom,
    s__subclass(s__PoliticalOrganization,s__Organization) ).

fof(kb_SUMO_7900,axiom,
    s__documentation(s__PoliticalOrganization,s__EnglishLanguage,'An &%Organization that is attempting to bring about some sort of political change.') ).

fof(kb_SUMO_7901,axiom,
    ! [V__POL] :
      ( s__instance(V__POL,s__Agent)
     => ( s__instance(V__POL,s__PoliticalOrganization)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__PoliticalProcess)
            & s__agent(V__PROC,V__POL) ) ) ) ).

fof(kb_SUMO_7902,axiom,
    s__subclass(s__MilitaryForce,s__PoliticalOrganization) ).

fof(kb_SUMO_7903,axiom,
    s__instance(s__MilitaryForce__t,s__SetOrClass) ).

fof(kb_SUMO_7904,axiom,
    s__instance(s__PoliticalOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7905,axiom,
    s__documentation(s__MilitaryForce,s__EnglishLanguage,'&%MilitaryForce is the subclass of &%Organizations that are organized along military lines and for the purpose of either defensive or offensive combat, whether or not the force is an official &%GovernmentOrganization.') ).

fof(kb_SUMO_7906,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__MilitaryForce)
       => s__capability(s__ViolentContest,s__agent__m,V__ORG) ) ) ).

fof(kb_SUMO_7907,axiom,
    s__subclass(s__MilitaryOrganization,s__MilitaryForce) ).

fof(kb_SUMO_7908,axiom,
    s__subclass(s__MilitaryOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_7909,axiom,
    s__instance(s__MilitaryOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7910,axiom,
    s__documentation(s__MilitaryOrganization,s__EnglishLanguage,'Any heavily armed &%Organization that is part of a &%Government and that is charged with representing the &%Government in international conflicts.') ).

fof(kb_SUMO_7911,axiom,
    s__subclass(s__ParamilitaryOrganization,s__MilitaryForce) ).

fof(kb_SUMO_7912,axiom,
    s__instance(s__ParamilitaryOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7913,axiom,
    s__disjoint(s__ParamilitaryOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_7914,axiom,
    s__documentation(s__ParamilitaryOrganization,s__EnglishLanguage,'An &%Organization which is much like a &%MilitaryOrganization, e.g. it is made up of armed fighters, except that it is not associated with a &%Government.') ).

fof(kb_SUMO_7915,axiom,
    s__subclass(s__GovernmentOrganization,s__Organization) ).

fof(kb_SUMO_7916,axiom,
    s__instance(s__GovernmentOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7917,axiom,
    s__documentation(s__GovernmentOrganization,s__EnglishLanguage,'&%GovernmentOrganization is the class of official &%Organizations that are concerned with the government of a &%GeopoliticalArea at some level. They may be a &%subOrganization of a government.') ).

fof(kb_SUMO_7918,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Organization)
     => ( s__instance(V__ORG,s__GovernmentOrganization)
      <=> ? [V__GOV] :
            ( s__instance(V__GOV,s__Organization)
            & s__instance(V__GOV,s__Government)
            & s__subOrganization(V__ORG,V__GOV) ) ) ) ).

fof(kb_SUMO_7919,axiom,
    ! [V__GOV,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__GOV,s__Organization) )
     => ( ( s__subOrganization(V__ORG,V__GOV)
          & s__instance(V__GOV,s__GovernmentOrganization) )
       => s__instance(V__ORG,s__GovernmentOrganization) ) ) ).

fof(kb_SUMO_7920,axiom,
    s__subclass(s__Government,s__GovernmentOrganization) ).

fof(kb_SUMO_7921,axiom,
    s__subclass(s__Government,s__LegalAgent) ).

fof(kb_SUMO_7922,axiom,
    s__instance(s__Government__t,s__SetOrClass) ).

fof(kb_SUMO_7923,axiom,
    s__instance(s__LegalAgent__t,s__SetOrClass) ).

fof(kb_SUMO_7924,axiom,
    s__documentation(s__Government,s__EnglishLanguage,'The ruling body of a &%GeopoliticalArea.') ).

fof(kb_SUMO_7925,axiom,
    s__instance(s__GovernmentFn__m,s__UnaryFunction) ).

fof(kb_SUMO_7926,axiom,
    s__domain(s__GovernmentFn__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_7927,axiom,
    s__range(s__GovernmentFn__m,s__Government) ).

fof(kb_SUMO_7928,axiom,
    s__documentation(s__GovernmentFn__m,s__EnglishLanguage,'(&%GovernmentFn ?AREA) denotes the &%Government of the &%GeopoliticalArea ?AREA. For example, (&%GovernmentFn &%UnitedStates) denotes the Federal-level government of the United States, (&%GovernmentFn &%PuertoRico) denotes the government of the Commonwealth of Puerto Rico.') ).

fof(kb_SUMO_7929,axiom,
    s__subclass(s__PoliceOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_7930,axiom,
    s__instance(s__PoliceOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7931,axiom,
    s__documentation(s__PoliceOrganization,s__EnglishLanguage,'Any &%GovernmentOrganization that is charged with domestic enforcement of the laws of the &%Government.') ).

fof(kb_SUMO_7932,axiom,
    s__subclass(s__JudicialOrganization,s__Organization) ).

fof(kb_SUMO_7933,axiom,
    s__instance(s__JudicialOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7934,axiom,
    s__documentation(s__JudicialOrganization,s__EnglishLanguage,'&%JudicialOrganization is the class of &%Organizations whose primary purpose is to render judgments according to the statutes or regulations of a government or other organization. Judicial bodies are not necessarily government organizations, for example, those associated with sporting associations.') ).

fof(kb_SUMO_7935,axiom,
    s__subclass(s__EducationalOrganization,s__Organization) ).

fof(kb_SUMO_7936,axiom,
    s__instance(s__EducationalOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7937,axiom,
    s__instance(s__Organization__t,s__SetOrClass) ).

fof(kb_SUMO_7938,axiom,
    s__documentation(s__EducationalOrganization,s__EnglishLanguage,'A &%EducationalOrganization is an institution of learning. Some examples are public and private K-12 schools, and colleges and universities.') ).

fof(kb_SUMO_7939,axiom,
    s__subclass(s__ReligiousOrganization,s__Organization) ).

fof(kb_SUMO_7940,axiom,
    s__subclass(s__ReligiousOrganization,s__BeliefGroup) ).

fof(kb_SUMO_7941,axiom,
    s__instance(s__ReligiousOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_7942,axiom,
    s__instance(s__BeliefGroup__t,s__SetOrClass) ).

fof(kb_SUMO_7943,axiom,
    s__documentation(s__ReligiousOrganization,s__EnglishLanguage,'An &%Organization whose members share a set of religious beliefs.') ).

fof(kb_SUMO_7944,axiom,
    s__subrelation(s__subOrganization__m,s__subCollection__m) ).

fof(kb_SUMO_7945,axiom,
    s__instance(s__subOrganization__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_7946,axiom,
    s__domain(s__subOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_7947,axiom,
    s__domain(s__subOrganization__m,"2",s__Organization) ).

fof(kb_SUMO_7948,axiom,
    s__documentation(s__subOrganization__m,s__EnglishLanguage,'(&%subOrganization ?ORG1 ?ORG2) means that ?ORG1 is an &%Organization which is a part of the &%Organization ?ORG2. Note that &%subOrganization is a &%ReflexiveRelation, so every &%Organization is a &%subOrganization of itself.') ).

fof(kb_SUMO_7949,axiom,
    s__instance(s__citizen__m,s__BinaryPredicate) ).

fof(kb_SUMO_7950,axiom,
    s__instance(s__citizen__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7951,axiom,
    s__domain(s__citizen__m,"1",s__Human) ).

fof(kb_SUMO_7952,axiom,
    s__domain(s__citizen__m,"2",s__Nation) ).

fof(kb_SUMO_7953,axiom,
    s__documentation(s__citizen__m,s__EnglishLanguage,'(&%citizen ?PERSON ?NATION) means that the &%Human ?PERSON is a citizen of &%Nation ?NATION.') ).

fof(kb_SUMO_7954,axiom,
    s__subclass(s__FieldOfStudy,s__Proposition) ).

fof(kb_SUMO_7955,axiom,
    s__instance(s__FieldOfStudy__t,s__SetOrClass) ).

fof(kb_SUMO_7956,axiom,
    s__instance(s__Proposition__t,s__SetOrClass) ).

fof(kb_SUMO_7957,axiom,
    s__documentation(s__FieldOfStudy,s__EnglishLanguage,'An academic or applied discipline with recognized experts and with a core of accepted theory or practice. Note that &%FieldOfStudy is a &%subclass of &%Proposition, because a &%FieldOfStudy is understood to be a body of abstract, informational content, with varying degrees of certainty attached to each element of this content.') ).

fof(kb_SUMO_7958,axiom,
    s__subclass(s__Procedure,s__Proposition) ).

fof(kb_SUMO_7959,axiom,
    s__documentation(s__Procedure,s__EnglishLanguage,'A sequence-dependent specification. Some examples are &%ComputerPrograms, finite-state machines, cooking recipes, musical scores, conference schedules, driving directions, and the scripts of plays and movies.') ).

fof(kb_SUMO_7960,axiom,
    s__subclass(s__ComputerProgram,s__Procedure) ).

fof(kb_SUMO_7961,axiom,
    s__instance(s__ComputerProgram__t,s__SetOrClass) ).

fof(kb_SUMO_7962,axiom,
    s__documentation(s__ComputerProgram,s__EnglishLanguage,'A set of instructions in a computer programming language that can be executed by a computer.') ).

fof(kb_SUMO_7963,axiom,
    s__subclass(s__ComputerProgramming,s__ContentDevelopment) ).

fof(kb_SUMO_7964,axiom,
    s__instance(s__ComputerProgramming__t,s__SetOrClass) ).

fof(kb_SUMO_7965,axiom,
    s__documentation(s__ComputerProgramming,s__EnglishLanguage,'The process of developing a &%ComputerProgram') ).

fof(kb_SUMO_7966,axiom,
    ! [V__CP] :
      ( s__instance(V__CP,s__Process)
     => ( s__instance(V__CP,s__ComputerProgramming)
       => ? [V__C] :
            ( s__instance(V__C,s__ComputerProgram)
            & s__result(V__CP,V__C) ) ) ) ).

fof(kb_SUMO_7967,axiom,
    s__subclass(s__Plan,s__Procedure) ).

fof(kb_SUMO_7968,axiom,
    s__instance(s__Plan__t,s__SetOrClass) ).

fof(kb_SUMO_7969,axiom,
    s__instance(s__Procedure__t,s__SetOrClass) ).

fof(kb_SUMO_7970,axiom,
    s__documentation(s__Plan,s__EnglishLanguage,'A specification of a sequence of &%Processes which is intended to satisfy a specified purpose at some future time.') ).

fof(kb_SUMO_7971,axiom,
    ! [V__OBJ,V__PLAN] :
      ( ( s__instance(V__PLAN,s__Proposition)
        & s__instance(V__OBJ,s__ContentBearingPhysical) )
     => ( ( s__instance(V__PLAN,s__Plan)
          & s__instance(V__OBJ,s__ContentBearingObject)
          & s__containsInformation(V__OBJ,V__PLAN) )
       => ? [V__PLANNING] :
            ( s__instance(V__PLANNING,s__Process)
            & s__instance(V__PLANNING,s__Planning)
            & s__result(V__PLANNING,V__OBJ) ) ) ) ).

fof(kb_SUMO_7972,axiom,
    s__subclass(s__Argument,s__Proposition) ).

fof(kb_SUMO_7973,axiom,
    s__partition_3(s__Argument,s__DeductiveArgument,s__InductiveArgument) ).

fof(kb_SUMO_7974,axiom,
    s__documentation(s__Argument,s__EnglishLanguage,'Any proposition which has the form of a deductive or inductive argument, i.e. a set of premises which, it is claimed, imply a conclusion.') ).

fof(kb_SUMO_7975,axiom,
    ! [V__REASON] :
      ( s__instance(V__REASON,s__Process)
     => ( s__instance(V__REASON,s__Reasoning)
       => ? [V__ARGUMENT] :
            ( s__instance(V__ARGUMENT,s__Proposition)
            & s__instance(V__ARGUMENT,s__Argument)
            & s__realization(V__REASON,V__ARGUMENT) ) ) ) ).

fof(kb_SUMO_7976,axiom,
    ! [V__ARGUMENT] :
      ( s__instance(V__ARGUMENT,s__Argument)
     => ? [V__PREMISES,V__CONCLUSION] :
          ( s__instance(V__CONCLUSION,s__Argument)
          & s__PremisesFn(V__ARGUMENT) = V__PREMISES
          & s__conclusion(V__CONCLUSION,V__ARGUMENT) ) ) ).

fof(kb_SUMO_7977,axiom,
    s__subclass(s__DeductiveArgument,s__Argument) ).

fof(kb_SUMO_7978,axiom,
    s__partition_3(s__DeductiveArgument,s__ValidDeductiveArgument,s__InvalidDeductiveArgument) ).

fof(kb_SUMO_7979,axiom,
    s__documentation(s__DeductiveArgument,s__EnglishLanguage,'An &%Argument which has the form of a deduction, i.e. it is claimed that the set of &%premises &%entails the &%conclusion.') ).

fof(kb_SUMO_7980,axiom,
    s__subclass(s__ValidDeductiveArgument,s__DeductiveArgument) ).

fof(kb_SUMO_7981,axiom,
    s__instance(s__ValidDeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_7982,axiom,
    s__instance(s__DeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_7983,axiom,
    s__documentation(s__ValidDeductiveArgument,s__EnglishLanguage,'A &%DeductiveArgument which is valid, i.e. the set of &%premises in fact &%entails the &%conclusion.') ).

fof(kb_SUMO_7984,axiom,
    ! [V__PREMISES,V__ARGUMENT,V__CONCLUSION] :
      ( ( s__instance(V__CONCLUSION,s__Argument)
        & s__instance(V__CONCLUSION,s__Formula)
        & s__instance(V__ARGUMENT,s__Argument)
        & s__instance(V__PREMISES,s__Proposition)
        & s__instance(V__PREMISES,s__Formula) )
     => ( ( s__instance(V__ARGUMENT,s__ValidDeductiveArgument)
          & V__PREMISES = s__PremisesFn(V__ARGUMENT)
          & s__conclusion(V__CONCLUSION,V__ARGUMENT) )
       => ? [V__FORMULA1,V__FORMULA2] :
            ( s__instance(V__FORMULA2,s__ContentBearingPhysical)
            & s__instance(V__FORMULA1,s__ContentBearingPhysical)
            & s__containsInformation(V__FORMULA1,V__PREMISES)
            & s__containsInformation(V__FORMULA2,V__CONCLUSION)
            & s__entails(V__PREMISES,V__CONCLUSION) ) ) ) ).

fof(kb_SUMO_7985,axiom,
    s__subclass(s__InvalidDeductiveArgument,s__DeductiveArgument) ).

fof(kb_SUMO_7986,axiom,
    s__instance(s__InvalidDeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_7987,axiom,
    s__documentation(s__InvalidDeductiveArgument,s__EnglishLanguage,'&%DeductiveArguments that are not &%ValidDeductiveArguments, i.e. it is not the case that the set of &%premises in fact &%entails the &%conclusion.') ).

fof(kb_SUMO_7988,axiom,
    s__subclass(s__Explanation,s__DeductiveArgument) ).

fof(kb_SUMO_7989,axiom,
    s__instance(s__Explanation__t,s__SetOrClass) ).

fof(kb_SUMO_7990,axiom,
    s__documentation(s__Explanation,s__EnglishLanguage,'An &%Argument where the conclusion is an observed fact and the premises are other facts which collectively imply the conclusion. Note that this is the they hypothetico-deductive model of explanation.') ).

fof(kb_SUMO_7991,axiom,
    s__subclass(s__InductiveArgument,s__Argument) ).

fof(kb_SUMO_7992,axiom,
    s__instance(s__InductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_7993,axiom,
    s__instance(s__Argument__t,s__SetOrClass) ).

fof(kb_SUMO_7994,axiom,
    s__documentation(s__InductiveArgument,s__EnglishLanguage,'An &%Argument which is inductive, i.e. it is claimed that a set of specific cases makes the &%conclusion, which generalizes these cases, more likely to be true.') ).

fof(kb_SUMO_7995,axiom,
    s__instance(s__premise__m,s__BinaryPredicate) ).

fof(kb_SUMO_7996,axiom,
    s__instance(s__premise__m,s__TotalValuedRelation) ).

fof(kb_SUMO_7997,axiom,
    s__domain(s__premise__m,"1",s__Argument) ).

fof(kb_SUMO_7998,axiom,
    s__domain(s__premise__m,"2",s__Proposition) ).

fof(kb_SUMO_7999,axiom,
    s__documentation(s__premise__m,s__EnglishLanguage,'(&%premise ?ARGUMENT ?PROPOSITION) means that the &%Proposition ?PROPOSITION is an explicit assumption of the &%Argument ?ARGUMENT.') ).

fof(kb_SUMO_8000,axiom,
    s__instance(s__PremisesFn__m,s__UnaryFunction) ).

fof(kb_SUMO_8001,axiom,
    s__domain(s__PremisesFn__m,"1",s__Argument) ).

fof(kb_SUMO_8002,axiom,
    s__range(s__PremisesFn__m,s__Proposition) ).

fof(kb_SUMO_8003,axiom,
    s__documentation(s__PremisesFn__m,s__EnglishLanguage,'(&%PremisesFn ?ARGUMENT) returns the complete set of &%premises of the &%Argument ?ARGUMENT.') ).

fof(kb_SUMO_8004,axiom,
    ! [V__PREMISES,V__ARGUMENT,V__PROPOSITION] :
      ( ( s__instance(V__PROPOSITION,s__Proposition)
        & s__instance(V__PREMISES,s__Proposition) )
     => ( ( s__instance(V__ARGUMENT,s__Argument)
          & V__PREMISES = s__PremisesFn(V__ARGUMENT) )
       => ( s__subProposition(V__PROPOSITION,V__PREMISES)
        <=> s__premise(V__ARGUMENT,V__PROPOSITION) ) ) ) ).

fof(kb_SUMO_8005,axiom,
    s__instance(s__conclusion__m,s__BinaryPredicate) ).

fof(kb_SUMO_8006,axiom,
    s__instance(s__conclusion__m,s__SingleValuedRelation) ).

fof(kb_SUMO_8007,axiom,
    s__instance(s__conclusion__m,s__TotalValuedRelation) ).

fof(kb_SUMO_8008,axiom,
    s__domain(s__conclusion__m,"1",s__Argument) ).

fof(kb_SUMO_8009,axiom,
    s__domain(s__conclusion__m,"2",s__Proposition) ).

fof(kb_SUMO_8010,axiom,
    s__documentation(s__conclusion__m,s__EnglishLanguage,'(&%conclusion ?ARGUMENT ?PROPOSITION) means that the &%Proposition ?PROPOSITION is the conclusion explicitly drawn from the &%Argument ?ARGUMENT. Note that it may or may not be the case that ?ARGUMENT &%entails ?PROPOSITION.') ).

fof(kb_SUMO_8011,axiom,
    s__instance(s__consistent__m,s__BinaryPredicate) ).

fof(kb_SUMO_8012,axiom,
    s__instance(s__consistent__m,s__SymmetricRelation) ).

fof(kb_SUMO_8013,axiom,
    s__domain(s__consistent__m,"1",s__Proposition) ).

fof(kb_SUMO_8014,axiom,
    s__domain(s__consistent__m,"2",s__Proposition) ).

fof(kb_SUMO_8015,axiom,
    s__documentation(s__consistent__m,s__EnglishLanguage,'(&%consistent ?PROP1 ?PROP2) means that the two &%Propositions ?PROP1 and ?PROP2 are consistent with one another, i.e. it is possible for both of them to be true at the same time.') ).

fof(kb_SUMO_8016,axiom,
    s__instance(s__orientation__m,s__SpatialRelation) ).

fof(kb_SUMO_8017,axiom,
    s__instance(s__orientation__m,s__TernaryPredicate) ).

fof(kb_SUMO_8018,axiom,
    s__domain(s__orientation__m,"1",s__Object) ).

fof(kb_SUMO_8019,axiom,
    s__domain(s__orientation__m,"2",s__Object) ).

fof(kb_SUMO_8020,axiom,
    s__domain(s__orientation__m,"3",s__PositionalAttribute) ).

fof(kb_SUMO_8021,axiom,
    s__documentation(s__orientation__m,s__EnglishLanguage,'A general &%Predicate for indicating how two &%Objects are oriented with respect to one another. For example, (orientation ?OBJ1 ?OBJ2 North) means that ?OBJ1 is north of ?OBJ2, and (orientation ?OBJ1 ?OBJ2 Vertical) means that ?OBJ1 is positioned vertically with respect to ?OBJ2.') ).

fof(kb_SUMO_8022,axiom,
    ! [V__ROW1,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_1(V__ROW1)
          & s__inList(V__ATTR1,s__ListFn_1(V__ROW1))
          & s__inList(V__ATTR2,s__ListFn_1(V__ROW1))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8023,axiom,
    ! [V__ROW1,V__ROW2,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_2(V__ROW1,V__ROW2)
          & s__inList(V__ATTR1,s__ListFn_2(V__ROW1,V__ROW2))
          & s__inList(V__ATTR2,s__ListFn_2(V__ROW1,V__ROW2))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8024,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
          & s__inList(V__ATTR1,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
          & s__inList(V__ATTR2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8025,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
          & s__inList(V__ATTR1,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
          & s__inList(V__ATTR2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8026,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
          & s__inList(V__ATTR1,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
          & s__inList(V__ATTR2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8027,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
          & s__inList(V__ATTR1,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
          & s__inList(V__ATTR2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8028,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTR2,V__ROW7,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
          & s__inList(V__ATTR1,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
          & s__inList(V__ATTR2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_8029,axiom,
    s__instance(s__direction__m,s__CaseRole) ).

fof(kb_SUMO_8030,axiom,
    s__domain(s__direction__m,"1",s__Process) ).

fof(kb_SUMO_8031,axiom,
    s__domain(s__direction__m,"2",s__DirectionalAttribute) ).

fof(kb_SUMO_8032,axiom,
    s__subrelation(s__direction__m,s__involvedInEvent__m) ).

fof(kb_SUMO_8033,axiom,
    s__documentation(s__direction__m,s__EnglishLanguage,'(&%direction ?PROC ?ATTR) means that the &%Process ?PROC is moving in the direction ?ATTR. For example, one would use this &%Predicate to represent the fact that Max is moving &%North.') ).

%FOL fof(kb_SUMO_8034,axiom,(( (! [V__TIME,V__PROC,V__ATTR1] : (s__holdsDuring(V__TIME,'s__direction(V__PROC,V__ATTR1)') => (! [V__ATTR2] : ((s__instance(V__ATTR2,s__DirectionalAttribute) & s__instance(V__ATTR1,s__DirectionalAttribute) & s__instance(V__PROC,s__Process) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__direction(V__PROC,V__ATTR2)') => (V__ATTR2 = V__ATTR1)))))) ))).

fof(kb_SUMO_8035,axiom,
    s__instance(s__faces__m,s__BinaryPredicate) ).

fof(kb_SUMO_8036,axiom,
    s__domain(s__faces__m,"1",s__Object) ).

fof(kb_SUMO_8037,axiom,
    s__domain(s__faces__m,"2",s__DirectionalAttribute) ).

fof(kb_SUMO_8038,axiom,
    s__documentation(s__faces__m,s__EnglishLanguage,'(&%faces ?OBJ ?DIRECTION) means that the front of ?OBJ (see &%FrontFn) is positioned towards the compass direction ?DIRECTION. More precisely, it means that if a line were extended from the center of ?DIRECTION, the line would intersect with the front of ?OBJ before it intersected with its back (see &%BackFn).') ).

%FOL fof(kb_SUMO_8039,axiom,(( (! [V__TIME,V__PROC,V__ATTR1] : (s__holdsDuring(V__TIME,'s__faces(V__PROC,V__ATTR1)') => (! [V__ATTR2] : ((s__instance(V__ATTR2,s__DirectionalAttribute) & s__instance(V__ATTR1,s__DirectionalAttribute) & s__instance(V__PROC,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__faces(V__PROC,V__ATTR2)') => (V__ATTR2 = V__ATTR1)))))) ))).

fof(kb_SUMO_8040,axiom,
    s__subclass(s__TruthValue,s__RelationalAttribute) ).

fof(kb_SUMO_8041,axiom,
    s__documentation(s__TruthValue,s__EnglishLanguage,'The &%Class of truth values, e.g. &%True and &%False. These are &%Attributes of &%Sentences and &%Propositions.') ).

fof(kb_SUMO_8042,axiom,
    ! [V__VALUE,V__ITEM] :
      ( s__instance(V__VALUE,s__Attribute)
     => ( ( s__property(V__ITEM,V__VALUE)
          & s__instance(V__VALUE,s__TruthValue) )
       => ( s__instance(V__ITEM,s__Sentence)
          | s__instance(V__ITEM,s__Proposition) ) ) ) ).

fof(kb_SUMO_8043,axiom,
    s__instance('$true__m',s__TruthValue) ).

fof(kb_SUMO_8044,axiom,
    s__instance(s__TruthValue__t,s__SetOrClass) ).

fof(kb_SUMO_8045,axiom,
    s__documentation('$true__m',s__EnglishLanguage,'The &%TruthValue of being true.') ).

fof(kb_SUMO_8046,axiom,
    s__instance('$false__m',s__TruthValue) ).

fof(kb_SUMO_8047,axiom,
    s__contraryAttribute_2('$false__m','$true__m') ).

fof(kb_SUMO_8048,axiom,
    s__documentation('$false__m',s__EnglishLanguage,'The &%TruthValue of being false.') ).

fof(kb_SUMO_8049,axiom,
    s__subrelation(s__truth__m,s__property__m) ).

fof(kb_SUMO_8050,axiom,
    s__domain(s__truth__m,"1",s__Sentence) ).

fof(kb_SUMO_8051,axiom,
    s__domain(s__truth__m,"2",s__TruthValue) ).

fof(kb_SUMO_8052,axiom,
    s__documentation(s__truth__m,s__EnglishLanguage,'The &%BinaryPredicate that relates a &%Sentence to its &%TruthValue.') ).

fof(kb_SUMO_8053,axiom,
    s__subclass(s__PositionalAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_8054,axiom,
    s__documentation(s__PositionalAttribute,s__EnglishLanguage,'&%Attributes characterizing the orientation of an &%Object, e.g. &%Vertical versus &%Horizontal, &%Left versus &%Right etc.') ).

fof(kb_SUMO_8055,axiom,
    s__subclass(s__DirectionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_8056,axiom,
    s__instance(s__DirectionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8057,axiom,
    s__instance(s__PositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8058,axiom,
    s__documentation(s__DirectionalAttribute,s__EnglishLanguage,'The subclass of &%PositionalAttributes that concern compass directions.') ).

fof(kb_SUMO_8059,axiom,
    ! [V__DIRECT,V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__Object)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__DIRECT,s__PositionalAttribute) )
     => ( ( s__instance(V__DIRECT,s__DirectionalAttribute)
          & s__orientation(V__OBJ1,V__OBJ2,V__DIRECT)
          & s__orientation(V__OBJ2,V__OBJ3,V__DIRECT) )
       => s__between(V__OBJ1,V__OBJ2,V__OBJ3) ) ) ).

fof(kb_SUMO_8060,axiom,
    s__instance(s__North,s__DirectionalAttribute) ).

fof(kb_SUMO_8061,axiom,
    s__contraryAttribute_4(s__North,s__South,s__East,s__West) ).

fof(kb_SUMO_8062,axiom,
    s__documentation(s__North,s__EnglishLanguage,'The compass direction of &%North.') ).

fof(kb_SUMO_8063,axiom,
    s__instance(s__South,s__DirectionalAttribute) ).

fof(kb_SUMO_8064,axiom,
    s__documentation(s__South,s__EnglishLanguage,'The compass direction of &%South.') ).

fof(kb_SUMO_8065,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__North)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__South) ) ) ).

fof(kb_SUMO_8066,axiom,
    s__instance(s__East,s__DirectionalAttribute) ).

fof(kb_SUMO_8067,axiom,
    s__documentation(s__East,s__EnglishLanguage,'The compass direction of &%East.') ).

fof(kb_SUMO_8068,axiom,
    s__instance(s__West,s__DirectionalAttribute) ).

fof(kb_SUMO_8069,axiom,
    s__documentation(s__West,s__EnglishLanguage,'The compass direction of &%West.') ).

fof(kb_SUMO_8070,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__East)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__West) ) ) ).

fof(kb_SUMO_8071,axiom,
    s__instance(s__Vertical,s__PositionalAttribute) ).

fof(kb_SUMO_8072,axiom,
    s__documentation(s__Vertical,s__EnglishLanguage,'Attribute used to indicate that an &%Object is positioned height-wise with respect to another &%Object.') ).

fof(kb_SUMO_8073,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Vertical)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Vertical) ) ) ).

fof(kb_SUMO_8074,axiom,
    s__instance(s__Horizontal,s__PositionalAttribute) ).

fof(kb_SUMO_8075,axiom,
    s__contraryAttribute_2(s__Horizontal,s__Vertical) ).

fof(kb_SUMO_8076,axiom,
    s__documentation(s__Horizontal,s__EnglishLanguage,'Attribute used to indicate that an &%Object is positioned width-wise with respect to another &%Object.') ).

fof(kb_SUMO_8077,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Horizontal)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Horizontal) ) ) ).

fof(kb_SUMO_8078,axiom,
    s__subclass(s__SymmetricPositionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_8079,axiom,
    s__documentation(s__SymmetricPositionalAttribute,s__EnglishLanguage,'&%SymmetricAttribute is the class of &%PositionalAttribute that hold between two items regardless of their order or orientation.') ).

fof(kb_SUMO_8080,axiom,
    ! [V__P,V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__O2,s__Object)
        & s__instance(V__P,s__PositionalAttribute) )
     => ( ( s__instance(V__P,s__SymmetricPositionalAttribute)
          & s__orientation(V__O1,V__O2,V__P) )
       => s__orientation(V__O2,V__O1,V__P) ) ) ).

fof(kb_SUMO_8081,axiom,
    s__subclass(s__AntiSymmetricPositionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_8082,axiom,
    s__documentation(s__AntiSymmetricPositionalAttribute,s__EnglishLanguage,'&%AntiSymmetricPositionalAttribute is the class of &%PositionalAttribute that hold in only one direction. I.e. two objects cannot simulataneously be &%On each other.') ).

fof(kb_SUMO_8083,axiom,
    ! [V__P,V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__O2,s__Object)
        & s__instance(V__P,s__PositionalAttribute) )
     => ( ( s__instance(V__P,s__AntiSymmetricPositionalAttribute)
          & s__orientation(V__O1,V__O2,V__P) )
       => ~ s__orientation(V__O2,V__O1,V__P) ) ) ).

fof(kb_SUMO_8084,axiom,
    s__instance(s__Above,s__PositionalAttribute) ).

fof(kb_SUMO_8085,axiom,
    s__instance(s__Above,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_8086,axiom,
    s__contraryAttribute_2(s__Above,s__Below) ).

fof(kb_SUMO_8087,axiom,
    s__documentation(s__Above,s__EnglishLanguage,'This is a &%PositionalAttribute derived from the up/down schema and not involving contact. Note that this means directly above, i.e., if one object is &%Above another object, then the projections of the two objects overlap.') ).

fof(kb_SUMO_8088,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Above)
       => ~ s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_8089,axiom,
    s__instance(s__Below,s__PositionalAttribute) ).

fof(kb_SUMO_8090,axiom,
    s__instance(s__Below,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_8091,axiom,
    s__documentation(s__Below,s__EnglishLanguage,'This &%PositionalAttribute is derived from the up/down schema and may or may not involve contact. Note that this means directly below, i.e., if one object is &%Below another object, then the projections of the two objects overlap.') ).

fof(kb_SUMO_8092,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Below)
      <=> ( s__orientation(V__OBJ2,V__OBJ1,s__On)
          | s__orientation(V__OBJ2,V__OBJ1,s__Above) ) ) ) ).

fof(kb_SUMO_8093,axiom,
    s__instance(s__Adjacent,s__SymmetricPositionalAttribute) ).

fof(kb_SUMO_8094,axiom,
    s__instance(s__SymmetricPositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8095,axiom,
    s__documentation(s__Adjacent,s__EnglishLanguage,'Used to assert that an object ?OBJ1 is close to, near or abutting ?OBJ2. This &%PositionalAttribute covers the following common sense notions: adjoins, abuts, is contiguous to, is juxtaposed, and is close to.') ).

fof(kb_SUMO_8096,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Adjacent)
      <=> ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
          | s__connected(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_8097,axiom,
    s__instance(s__Left,s__PositionalAttribute) ).

fof(kb_SUMO_8098,axiom,
    s__instance(s__Left,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_8099,axiom,
    s__documentation(s__Left,s__EnglishLanguage,'This &%PositionalAttribute is derived from the left/right schema. Note that this means directly to the left, so that, if one object is to the left of another, then the projections of the two objects overlap.') ).

fof(kb_SUMO_8100,axiom,
    s__instance(s__Right,s__PositionalAttribute) ).

fof(kb_SUMO_8101,axiom,
    s__instance(s__Right,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_8102,axiom,
    s__instance(s__AntiSymmetricPositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8103,axiom,
    s__contraryAttribute_2(s__Right,s__Left) ).

fof(kb_SUMO_8104,axiom,
    s__documentation(s__Right,s__EnglishLanguage,'This &%PositionalAttribute is derived from the left/right schema. Note that this means directly to the right, so that, if one object is to the right of another, then the projections of the two objects overlap.') ).

fof(kb_SUMO_8105,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Right)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Left) ) ) ).

fof(kb_SUMO_8106,axiom,
    s__instance(s__Near,s__SymmetricPositionalAttribute) ).

fof(kb_SUMO_8107,axiom,
    s__documentation(s__Near,s__EnglishLanguage,'The relation of common sense adjacency. Note that, if an object is &%Near another object, then the objects are not &%connected.') ).

fof(kb_SUMO_8108,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
       => ~ s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_8109,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
       => s__orientation(V__OBJ2,V__OBJ1,s__Near) ) ) ).

fof(kb_SUMO_8110,axiom,
    s__instance(s__On,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_8111,axiom,
    s__documentation(s__On,s__EnglishLanguage,'This is used to assert that an object is on top of another object, and it is derived from the up/down schema and involves contact.') ).

fof(kb_SUMO_8112,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_8113,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => s__located(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_8114,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => ~ s__orientation(V__OBJ2,V__OBJ1,s__On) ) ) ).

fof(kb_SUMO_8115,axiom,
    s__subclass(s__TimeZone,s__RelationalAttribute) ).

fof(kb_SUMO_8116,axiom,
    s__documentation(s__TimeZone,s__EnglishLanguage,'An &%Attribute which is used to specify coordinates in which time measures are uniform, i.e. all time devices are synchronized to the same &%TimePositions.') ).

fof(kb_SUMO_8117,axiom,
    s__instance(s__CoordinatedUniversalTimeZone,s__TimeZone) ).

fof(kb_SUMO_8118,axiom,
    s__instance(s__TimeZone__t,s__SetOrClass) ).

fof(kb_SUMO_8119,axiom,
    s__documentation(s__CoordinatedUniversalTimeZone,s__EnglishLanguage,'A &%TimeZone which functions as the standard time zone. It is also known as Zulu time (in the military), Greenwich Mean Time, and the Western European time zone. Note that whenever a &%TimeZone is not specified, the &%TimePosition is understood to be with respect to the &%CoordinatedUniversalTimeZone.') ).

fof(kb_SUMO_8120,axiom,
    s__instance(s__PacificTimeZone,s__TimeZone) ).

fof(kb_SUMO_8121,axiom,
    s__documentation(s__PacificTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the western part of the United States.') ).

fof(kb_SUMO_8122,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__PacificTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"8") ) ) ).

fof(kb_SUMO_8123,axiom,
    s__instance(s__MountainTimeZone,s__TimeZone) ).

fof(kb_SUMO_8124,axiom,
    s__documentation(s__MountainTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the Rocky Mountain region of the United States.') ).

fof(kb_SUMO_8125,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__MountainTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"7") ) ) ).

fof(kb_SUMO_8126,axiom,
    s__instance(s__CentralTimeZone,s__TimeZone) ).

fof(kb_SUMO_8127,axiom,
    s__documentation(s__CentralTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the midwestern United States.') ).

fof(kb_SUMO_8128,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__CentralTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"6") ) ) ).

fof(kb_SUMO_8129,axiom,
    s__instance(s__EasternTimeZone,s__TimeZone) ).

fof(kb_SUMO_8130,axiom,
    s__documentation(s__EasternTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the eastern United States.') ).

fof(kb_SUMO_8131,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__EasternTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"5") ) ) ).

fof(kb_SUMO_8132,axiom,
    s__instance(s__RelativeTimeFn__m,s__BinaryFunction) ).

fof(kb_SUMO_8133,axiom,
    s__instance(s__RelativeTimeFn__m,s__TemporalRelation) ).

fof(kb_SUMO_8134,axiom,
    s__instance(s__RelativeTimeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_8135,axiom,
    s__domain(s__RelativeTimeFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_8136,axiom,
    s__domain(s__RelativeTimeFn__m,"2",s__TimeZone) ).

fof(kb_SUMO_8137,axiom,
    s__range(s__RelativeTimeFn__m,s__TimePosition) ).

fof(kb_SUMO_8138,axiom,
    s__documentation(s__RelativeTimeFn__m,s__EnglishLanguage,'A means of converting &%TimePositions between different &%TimeZones. (&%RelativeTimeFn ?TIME ?ZONE) denotes the &%TimePosition in &%CoordinatedUniversalTime that is contemporaneous with the &%TimePosition ?TIME in &%TimeZone ?ZONE. For example, (&%RelativeTimeFn (&%MeasureFn 14 &%HourDuration) &%EasternTimeZone) would return the value (&%MeasureFn 19 &%HourDuration).') ).

fof(kb_SUMO_8139,axiom,
    s__subclass(s__SocialRole,s__RelationalAttribute) ).

fof(kb_SUMO_8140,axiom,
    s__instance(s__SocialRole__t,s__SetOrClass) ).

fof(kb_SUMO_8141,axiom,
    s__documentation(s__SocialRole,s__EnglishLanguage,'The &%Class of all &%Attributes that specify the position or status of a &%CognitiveAgent within an &%Organization or other &%Group.') ).

fof(kb_SUMO_8142,axiom,
    ! [V__PERSON,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__PERSON,s__Object) )
     => ( ( s__attribute(V__PERSON,V__ATTRIBUTE)
          & s__instance(V__ATTRIBUTE,s__SocialRole) )
       => s__instance(V__PERSON,s__Human) ) ) ).

fof(kb_SUMO_8143,axiom,
    s__instance(s__Unemployed,s__SocialRole) ).

fof(kb_SUMO_8144,axiom,
    s__documentation(s__Unemployed,s__EnglishLanguage,'The &%Attribute of a &%CognitiveAgent when he/she is unemployed.') ).

fof(kb_SUMO_8145,axiom,
    ! [V__PERSON] :
      ( ( s__instance(V__PERSON,s__Human)
        & ! [V__ORG] :
            ( ( s__instance(V__ORG,s__Organization)
              & s__instance(V__PERSON,s__CognitiveAgent) )
           => ~ s__employs(V__ORG,V__PERSON) ) )
    <=> s__attribute(V__PERSON,s__Unemployed) ) ).

fof(kb_SUMO_8146,axiom,
    s__subclass(s__Position,s__SocialRole) ).

fof(kb_SUMO_8147,axiom,
    s__instance(s__Position__t,s__SetOrClass) ).

fof(kb_SUMO_8148,axiom,
    s__documentation(s__Position,s__EnglishLanguage,'A formal position of reponsibility within an &%Organization. Examples of &%Positions include president, laboratory director, senior researcher, sales representative, etc.') ).

fof(kb_SUMO_8149,axiom,
    s__instance(s__occupiesPosition__m,s__TernaryPredicate) ).

fof(kb_SUMO_8150,axiom,
    s__domain(s__occupiesPosition__m,"1",s__Human) ).

fof(kb_SUMO_8151,axiom,
    s__domain(s__occupiesPosition__m,"2",s__Position) ).

fof(kb_SUMO_8152,axiom,
    s__domain(s__occupiesPosition__m,"3",s__Organization) ).

fof(kb_SUMO_8153,axiom,
    s__documentation(s__occupiesPosition__m,s__EnglishLanguage,'(&%occupiesPosition ?PERSON ?POSITION ?ORG) means that ?PERSON holds the &%Position ?POSITION at &%Organization ?ORG. For example, (&%occupiesPosition &%TomSmith &%ResearchDirector &%AcmeLaboratory) means that &%TomSmith is a research director at Acme Labs.') ).

fof(kb_SUMO_8154,axiom,
    ! [V__ORG,V__POSITION,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Human)
        & s__instance(V__POSITION,s__Position)
        & s__instance(V__ORG,s__Organization) )
     => ( s__occupiesPosition(V__AGENT,V__POSITION,V__ORG)
       => s__attribute(V__AGENT,V__POSITION) ) ) ).

fof(kb_SUMO_8155,axiom,
    ! [V__PERSON,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON,s__Human) )
     => ( s__employs(V__ORG,V__PERSON)
       => ? [V__POSITION] :
            ( s__instance(V__POSITION,s__Position)
            & s__occupiesPosition(V__PERSON,V__POSITION,V__ORG) ) ) ) ).

fof(kb_SUMO_8156,axiom,
    ! [V__PERSON,V__ORGANIZATION,V__POSITION] :
      ( ( s__instance(V__POSITION,s__Position)
        & s__instance(V__ORGANIZATION,s__Organization)
        & s__instance(V__PERSON,s__Human) )
     => ( s__occupiesPosition(V__PERSON,V__POSITION,V__ORGANIZATION)
       => s__member(V__PERSON,V__ORGANIZATION) ) ) ).

fof(kb_SUMO_8157,axiom,
    s__subclass(s__NormativeAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_8158,axiom,
    s__instance(s__NormativeAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8159,axiom,
    s__instance(s__RelationalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8160,axiom,
    s__documentation(s__NormativeAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes that are specific to morality, legality, aesthetics, etiquette, etc. Many of these attributes express a judgement that something ought or ought not to be the case.') ).

fof(kb_SUMO_8161,axiom,
    s__instance(s__modalAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_8162,axiom,
    s__instance(s__modalAttribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_8163,axiom,
    s__instance(s__modalAttribute__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_8164,axiom,
    s__subrelation(s__modalAttribute__m,s__property__m) ).

fof(kb_SUMO_8165,axiom,
    s__domain(s__modalAttribute__m,"1",s__Formula) ).

fof(kb_SUMO_8166,axiom,
    s__domain(s__modalAttribute__m,"2",s__NormativeAttribute) ).

fof(kb_SUMO_8167,axiom,
    s__documentation(s__modalAttribute__m,s__EnglishLanguage,'A &%BinaryRelation that is used to state the normative force of a &%Proposition. (&%modalAttribute ?FORMULA ?PROP) means that the &%Proposition expressed by ?FORMULA has the &%NormativeAttribute ?PROP. For example, (&%modalAttribute (&%exists (?ACT ?OBJ) (&%and (&%instance ?ACT &%Giving) (&%agent ?ACT John) (&%patient ?ACT ?OBJ) (&%destination ?ACT Tom))) &%Obligation) means that John is obligated to give Tom something.') ).

fof(kb_SUMO_8168,axiom,
    ! [V__PROP,V__FORMULA1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__PROP,s__NormativeAttribute) )
     => ( ( s__modalAttribute(V__FORMULA1,V__PROP)
          & s__entails(V__FORMULA1,V__FORMULA2) )
       => s__modalAttribute(V__FORMULA2,V__PROP) ) ) ).

fof(kb_SUMO_8169,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Permission)
       => s__modalAttribute(V__FORMULA,s__Possibility) ) ) ).

fof(kb_SUMO_8170,axiom,
    s__subclass(s__SubjectiveAssessmentAttribute,s__NormativeAttribute) ).

fof(kb_SUMO_8171,axiom,
    s__instance(s__SubjectiveAssessmentAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8172,axiom,
    s__disjoint(s__SubjectiveAssessmentAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_8173,axiom,
    s__documentation(s__SubjectiveAssessmentAttribute,s__EnglishLanguage,'The &%Class of &%NormativeAttributes which lack an objective criterion for their attribution, i.e. the attribution of these &%Attributes varies from subject to subject and even with respect to the same subject over time. This &%Class is, generally speaking, only used when mapping external knowledge sources to the SUMO. If a term from such a knowledge source seems to lack objective criteria for its attribution, it is assigned to this &%Class.') ).

fof(kb_SUMO_8174,axiom,
    s__subclass(s__ObjectiveNorm,s__NormativeAttribute) ).

fof(kb_SUMO_8175,axiom,
    s__documentation(s__ObjectiveNorm,s__EnglishLanguage,'The &%Class of &%NormativeAttributes that are associated with an objective criterion for their attribution, i.e. there is broad consensus about the cases where these attributes are applicable.') ).

fof(kb_SUMO_8176,axiom,
    s__subclass(s__ContestAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_8177,axiom,
    s__instance(s__ContestAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8178,axiom,
    s__documentation(s__ContestAttribute,s__EnglishLanguage,'A &%Class containing &%Attributes that are specific to participants in a &%Contest. In particular, these &%Attributes indicate the position of one of the &%agents in the &%Contest with respect to other &%agent(s) in the &%Contest. Some examples of these &%Attributes are winning, losing, won, lost, etc.') ).

fof(kb_SUMO_8179,axiom,
    ! [V__ATTR,V__THING] :
      ( ( s__instance(V__THING,s__Agent)
        & s__instance(V__THING,s__Process)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__property(V__THING,V__ATTR)
          & s__instance(V__ATTR,s__ContestAttribute) )
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__Contest)
            & ( s__agent(V__CONTEST,V__THING)
              | s__patient(V__CONTEST,V__THING)
              | s__subProcess(V__THING,V__CONTEST) ) ) ) ) ).

fof(kb_SUMO_8180,axiom,
    s__subclass(s__AlethicAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_8181,axiom,
    s__documentation(s__AlethicAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes relating to the notions of possibility and necessity.') ).

fof(kb_SUMO_8182,axiom,
    s__instance(s__Possibility,s__AlethicAttribute) ).

fof(kb_SUMO_8183,axiom,
    s__instance(s__AlethicAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8184,axiom,
    s__documentation(s__Possibility,s__EnglishLanguage,'Attribute that applies to &%Propositions that are possible, i.e. true in at least one possible world.') ).

fof(kb_SUMO_8185,axiom,
    s__instance(s__Necessity,s__AlethicAttribute) ).

fof(kb_SUMO_8186,axiom,
    s__documentation(s__Necessity,s__EnglishLanguage,'Attribute that applies to &%Propositions that are necessary, i.e. true in every possible world.') ).

fof(kb_SUMO_8187,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Necessity)
      <=> ~ s__modalAttribute('(~ V__FORMULA)',s__Possibility) ) ) ).

fof(kb_SUMO_8188,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Necessity)
       => s__modalAttribute(V__FORMULA,s__Possibility) ) ) ).

fof(kb_SUMO_8189,axiom,
    s__instance(s__holdsRight__m,s__BinaryPredicate) ).

fof(kb_SUMO_8190,axiom,
    s__instance(s__holdsRight__m,s__AsymmetricRelation) ).

fof(kb_SUMO_8191,axiom,
    s__domain(s__holdsRight__m,"1",s__Formula) ).

fof(kb_SUMO_8192,axiom,
    s__domain(s__holdsRight__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_8193,axiom,
    s__documentation(s__holdsRight__m,s__EnglishLanguage,'Expresses a relationship between a &%Formula and a &%CognitiveAgent whereby the &%CognitiveAgent has the right to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_8194,axiom,
    s__instance(s__confersRight__m,s__TernaryPredicate) ).

fof(kb_SUMO_8195,axiom,
    s__domain(s__confersRight__m,"1",s__Formula) ).

fof(kb_SUMO_8196,axiom,
    s__domain(s__confersRight__m,"2",s__Entity) ).

fof(kb_SUMO_8197,axiom,
    s__domain(s__confersRight__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_8198,axiom,
    s__documentation(s__confersRight__m,s__EnglishLanguage,'Expresses the relationship between a &%Formula, an &%Entity, and a &%CognitiveAgent when the &%Entity authorizes the &%CognitiveAgent to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_8199,axiom,
    ! [V__FORMULA,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__confersRight(V__FORMULA,V__AGENT1,V__AGENT2)
       => s__holdsRight(V__FORMULA,V__AGENT2) ) ) ).

fof(kb_SUMO_8200,axiom,
    s__instance(s__holdsObligation__m,s__BinaryPredicate) ).

fof(kb_SUMO_8201,axiom,
    s__instance(s__holdsObligation__m,s__AsymmetricRelation) ).

fof(kb_SUMO_8202,axiom,
    s__domain(s__holdsObligation__m,"1",s__Formula) ).

fof(kb_SUMO_8203,axiom,
    s__domain(s__holdsObligation__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_8204,axiom,
    s__relatedInternalConcept(s__holdsObligation__m,s__holdsRight__m) ).

fof(kb_SUMO_8205,axiom,
    s__documentation(s__holdsObligation__m,s__EnglishLanguage,'Expresses a relationship between a &%Formula and a &%CognitiveAgent whereby the &%CognitiveAgent has the obligation to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_8206,axiom,
    s__instance(s__confersObligation__m,s__TernaryPredicate) ).

fof(kb_SUMO_8207,axiom,
    s__domain(s__confersObligation__m,"1",s__Formula) ).

fof(kb_SUMO_8208,axiom,
    s__domain(s__confersObligation__m,"2",s__Entity) ).

fof(kb_SUMO_8209,axiom,
    s__domain(s__confersObligation__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_8210,axiom,
    s__relatedInternalConcept(s__confersObligation__m,s__confersRight__m) ).

fof(kb_SUMO_8211,axiom,
    s__documentation(s__confersObligation__m,s__EnglishLanguage,'Expresses the relationship between a a &%Formula, an &%Entity, and a &%CognitiveAgent when the &%Entity obligates the &%CognitiveAgent to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_8212,axiom,
    ! [V__FORMULA,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__confersObligation(V__FORMULA,V__AGENT1,V__AGENT2)
       => s__holdsObligation(V__FORMULA,V__AGENT2) ) ) ).

fof(kb_SUMO_8213,axiom,
    s__subclass(s__DeonticAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_8214,axiom,
    s__documentation(s__DeonticAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes relating to the notions of permission, obligation, and prohibition.') ).

fof(kb_SUMO_8215,axiom,
    s__instance(s__Permission,s__DeonticAttribute) ).

fof(kb_SUMO_8216,axiom,
    s__instance(s__DeonticAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8217,axiom,
    s__documentation(s__Permission,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent is permitted, by some authority, to make true.') ).

fof(kb_SUMO_8218,axiom,
    s__instance(s__Obligation,s__DeonticAttribute) ).

fof(kb_SUMO_8219,axiom,
    s__documentation(s__Obligation,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent is required, by some authority, to make true.') ).

fof(kb_SUMO_8220,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Obligation)
      <=> ~ s__modalAttribute('(~ V__FORMULA)',s__Permission) ) ) ).

fof(kb_SUMO_8221,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Obligation)
       => s__modalAttribute(V__FORMULA,s__Permission) ) ) ).

fof(kb_SUMO_8222,axiom,
    s__subAttribute(s__Law,s__Obligation) ).

fof(kb_SUMO_8223,axiom,
    s__documentation(s__Law,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that are required by a government or a branch of the government and that are enforced with penalties for noncompliance. These &%Propositions may be codified as legislation or they may be more informal, as in the case of government policy.') ).

fof(kb_SUMO_8224,axiom,
    s__subAttribute(s__Promise,s__Obligation) ).

fof(kb_SUMO_8225,axiom,
    s__documentation(s__Promise,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent promises to make true. &%Promises may be implicit or explicit. They may be expressed in a written or verbal or gestural manner.') ).

fof(kb_SUMO_8226,axiom,
    s__instance(s__Prohibition,s__DeonticAttribute) ).

fof(kb_SUMO_8227,axiom,
    s__documentation(s__Prohibition,s__EnglishLanguage,'&%Prohibition is the &%DeonticAttribute that applies to &%Formulas that an &%Agent is forbidden, by some authority, to make true.') ).

fof(kb_SUMO_8228,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Prohibition)
      <=> ~ s__modalAttribute(V__FORMULA,s__Permission) ) ) ).

fof(kb_SUMO_8229,axiom,
    s__subclass(s__ProbabilityAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_8230,axiom,
    s__instance(s__ObjectiveNorm__t,s__SetOrClass) ).

fof(kb_SUMO_8231,axiom,
    s__documentation(s__ProbabilityAttribute,s__EnglishLanguage,'A class containing all of the &%Attributes relating to objective, qualitative assessments of probability, e.g. &%Likely and &%Unlikely.') ).

fof(kb_SUMO_8232,axiom,
    s__instance(s__Likely,s__ProbabilityAttribute) ).

fof(kb_SUMO_8233,axiom,
    s__instance(s__ProbabilityAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8234,axiom,
    s__contraryAttribute_2(s__Likely,s__Unlikely) ).

fof(kb_SUMO_8235,axiom,
    s__documentation(s__Likely,s__EnglishLanguage,'The &%ProbabilityAttribute of being probable, i.e. more likely than not to be &%True.') ).

%FOL fof(kb_SUMO_8236,axiom,(( (! [V__FORMULA] : (s__instance(V__FORMULA,s__Formula) => (s__modalAttribute(V__FORMULA,s__Likely) => greater(s__ProbabilityFn('s__truth(V__FORMULA,'$true__m')'),s__ProbabilityFn('s__truth(V__FORMULA,'$false__m')'))))) ))).

fof(kb_SUMO_8237,axiom,
    s__instance(s__Unlikely,s__ProbabilityAttribute) ).

fof(kb_SUMO_8238,axiom,
    s__documentation(s__Unlikely,s__EnglishLanguage,'The &%ProbabilityAttribute of being improbable, i.e. more likely than not to be &%False.') ).

%FOL fof(kb_SUMO_8239,axiom,(( (! [V__FORMULA] : (s__instance(V__FORMULA,s__Formula) => (s__modalAttribute(V__FORMULA,s__Unlikely) => greater(s__ProbabilityFn('s__truth(V__FORMULA,'$false__m')'),s__ProbabilityFn('s__truth(V__FORMULA,'$true__m')'))))) ))).

fof(kb_SUMO_8240,axiom,
    s__subclass(s__PhysicalState,s__InternalAttribute) ).

fof(kb_SUMO_8241,axiom,
    s__contraryAttribute_4(s__Solid,s__Liquid,s__Gas,s__Plasma) ).

fof(kb_SUMO_8242,axiom,
    s__exhaustiveAttribute_6(s__PhysicalState,s__Solid,s__Fluid,s__Liquid,s__Gas,s__Plasma) ).

fof(kb_SUMO_8243,axiom,
    s__documentation(s__PhysicalState,s__EnglishLanguage,'The physical state of an &%Object. There are three reified instances of this &%Class: &%Solid, &%Liquid, and &%Gas. Physical changes are not characterized by the transformation of one substance into another, but rather by the change of the form (physical states) of a given substance. For example, melting an iron nail yields a substance still called iron.') ).

fof(kb_SUMO_8244,axiom,
    s__instance(s__Solid,s__PhysicalState) ).

fof(kb_SUMO_8245,axiom,
    s__documentation(s__Solid,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Solid if it has a fixed shape and a fixed volume.') ).

fof(kb_SUMO_8246,axiom,
    s__instance(s__Fluid,s__PhysicalState) ).

fof(kb_SUMO_8247,axiom,
    s__documentation(s__Fluid,s__EnglishLanguage,'&%Fluid is the &%PhysicalState attribute of an &%Object that does not have a fixed shape and thus tends to flow or to conform to the shape of a container.') ).

fof(kb_SUMO_8248,axiom,
    s__instance(s__Liquid,s__PhysicalState) ).

fof(kb_SUMO_8249,axiom,
    s__instance(s__PhysicalState__t,s__SetOrClass) ).

fof(kb_SUMO_8250,axiom,
    s__subAttribute(s__Liquid,s__Fluid) ).

fof(kb_SUMO_8251,axiom,
    s__documentation(s__Liquid,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Liquid if it has a fixed volume but not a fixed shape.') ).

fof(kb_SUMO_8252,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Solution)
       => s__attribute(V__OBJ,s__Liquid) ) ) ).

fof(kb_SUMO_8253,axiom,
    s__instance(s__Gas,s__PhysicalState) ).

fof(kb_SUMO_8254,axiom,
    s__subAttribute(s__Gas,s__Fluid) ).

fof(kb_SUMO_8255,axiom,
    s__documentation(s__Gas,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Gas if it has neither a fixed volume nor a fixed shape.') ).

fof(kb_SUMO_8256,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Substance)
      <=> ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__PhysicalState)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_8257,axiom,
    s__instance(s__Plasma,s__PhysicalState) ).

fof(kb_SUMO_8258,axiom,
    s__subAttribute(s__Plasma,s__Fluid) ).

fof(kb_SUMO_8259,axiom,
    s__documentation(s__Plasma,s__EnglishLanguage,'An extremely energetic &%PhysicalState that consists of atomic nuclei stripped of electrons. That is, a plasma is composed of positive ions and free electrons. &%Plasma behaves differently enough from &%Gas that it is referred to as the fourth state of matter.') ).

fof(kb_SUMO_8260,axiom,
    s__subclass(s__PerceptualAttribute,s__Attribute) ).

fof(kb_SUMO_8261,axiom,
    s__documentation(s__PerceptualAttribute,s__EnglishLanguage,'Any &%Attribute whose presence is detected by an act of &%Perception.') ).

fof(kb_SUMO_8262,axiom,
    ! [V__OBJ,V__PERCEPTION] :
      ( ( s__instance(V__PERCEPTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__PERCEPTION,s__Perception)
          & s__patient(V__PERCEPTION,V__OBJ) )
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Attribute)
            & s__instance(V__PROP,s__PerceptualAttribute)
            & s__attribute(V__OBJ,V__PROP) ) ) ) ).

fof(kb_SUMO_8263,axiom,
    s__subclass(s__TasteAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_8264,axiom,
    s__instance(s__TasteAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8265,axiom,
    s__documentation(s__TasteAttribute,s__EnglishLanguage,'The &%Class of &%Attributes relating to the taste of &%Objects.') ).

fof(kb_SUMO_8266,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__FoodForFn(s__Animal))
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__TasteAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_8267,axiom,
    s__subclass(s__OlfactoryAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_8268,axiom,
    s__instance(s__OlfactoryAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8269,axiom,
    s__documentation(s__OlfactoryAttribute,s__EnglishLanguage,'The &%Class of properties that are detectable by smell.') ).

fof(kb_SUMO_8270,axiom,
    s__subclass(s__VisualAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_8271,axiom,
    s__documentation(s__VisualAttribute,s__EnglishLanguage,'The &%Class of visually discernible properties.') ).

fof(kb_SUMO_8272,axiom,
    s__instance(s__Illuminated,s__VisualAttribute) ).

fof(kb_SUMO_8273,axiom,
    s__instance(s__VisualAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8274,axiom,
    s__documentation(s__Illuminated,s__EnglishLanguage,'The &%Attribute of &%Regions that are illuminated to some degree, i.e. in which some shapes are visually discernable.') ).

fof(kb_SUMO_8275,axiom,
    s__instance(s__Unilluminated,s__VisualAttribute) ).

fof(kb_SUMO_8276,axiom,
    s__contraryAttribute_2(s__Unilluminated,s__Illuminated) ).

fof(kb_SUMO_8277,axiom,
    s__documentation(s__Unilluminated,s__EnglishLanguage,'The &%Attribute of &%Regions that are unilluminated, i.e in which no shapes are visually discernable.') ).

fof(kb_SUMO_8278,axiom,
    s__subclass(s__ColorAttribute,s__VisualAttribute) ).

fof(kb_SUMO_8279,axiom,
    s__documentation(s__ColorAttribute,s__EnglishLanguage,'The &%Class of &%Attributes relating to the color of &%Objects.') ).

fof(kb_SUMO_8280,axiom,
    s__subclass(s__PrimaryColor,s__ColorAttribute) ).

fof(kb_SUMO_8281,axiom,
    s__documentation(s__PrimaryColor,s__EnglishLanguage,'Colors which can be blended to form any color and which cannot be derived from any other colors.') ).

fof(kb_SUMO_8282,axiom,
    s__instance(s__Red,s__PrimaryColor) ).

fof(kb_SUMO_8283,axiom,
    s__documentation(s__Red,s__EnglishLanguage,'The &%Attribute of redness.') ).

fof(kb_SUMO_8284,axiom,
    s__instance(s__Blue,s__PrimaryColor) ).

fof(kb_SUMO_8285,axiom,
    s__documentation(s__Blue,s__EnglishLanguage,'The &%Attribute of being blue in color.') ).

fof(kb_SUMO_8286,axiom,
    s__instance(s__Yellow,s__PrimaryColor) ).

fof(kb_SUMO_8287,axiom,
    s__documentation(s__Yellow,s__EnglishLanguage,'The &%Attribute of being yellow in color.') ).

fof(kb_SUMO_8288,axiom,
    s__instance(s__White,s__PrimaryColor) ).

fof(kb_SUMO_8289,axiom,
    s__documentation(s__White,s__EnglishLanguage,'The &%Attribute of being white in color.') ).

fof(kb_SUMO_8290,axiom,
    s__instance(s__Black,s__PrimaryColor) ).

fof(kb_SUMO_8291,axiom,
    s__instance(s__PrimaryColor__t,s__SetOrClass) ).

fof(kb_SUMO_8292,axiom,
    s__documentation(s__Black,s__EnglishLanguage,'The &%Attribute of being black in color.') ).

fof(kb_SUMO_8293,axiom,
    s__instance(s__Monochromatic,s__ColorAttribute) ).

fof(kb_SUMO_8294,axiom,
    s__documentation(s__Monochromatic,s__EnglishLanguage,'An &%Object with this &%Attribute has the same color on every part of its surface.') ).

fof(kb_SUMO_8295,axiom,
    ! [V__OBJ,V__PART,V__COLOR] :
      ( ( s__attribute(V__OBJ,s__Monochromatic)
        & s__superficialPart(V__PART,V__OBJ)
        & s__attribute(V__PART,V__COLOR)
        & s__instance(V__COLOR,s__PrimaryColor) )
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Object)
            & s__instance(V__COLOR,s__Attribute)
            & s__instance(V__PART,s__Object)
            & s__instance(V__OBJ,s__Object) )
         => ( s__superficialPart(V__ELEMENT,V__OBJ)
           => s__attribute(V__ELEMENT,V__COLOR) ) ) ) ).

fof(kb_SUMO_8296,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Monochromatic)
        | s__attribute(V__OBJ,s__Polychromatic) ) ) ).

fof(kb_SUMO_8297,axiom,
    s__instance(s__Polychromatic,s__ColorAttribute) ).

fof(kb_SUMO_8298,axiom,
    s__instance(s__ColorAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8299,axiom,
    s__contraryAttribute_2(s__Polychromatic,s__Monochromatic) ).

fof(kb_SUMO_8300,axiom,
    s__documentation(s__Polychromatic,s__EnglishLanguage,'An &%Object with this &%Attribute has different colors on different parts of its surface.') ).

fof(kb_SUMO_8301,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Polychromatic)
       => ? [V__PART1,V__PART2,V__COLOR1,V__COLOR2] :
            ( s__instance(V__COLOR2,s__Attribute)
            & s__instance(V__COLOR1,s__Attribute)
            & s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object)
            & s__superficialPart(V__PART1,V__OBJ)
            & s__superficialPart(V__PART2,V__OBJ)
            & s__attribute(V__PART1,V__COLOR1)
            & s__attribute(V__PART2,V__COLOR2)
            & s__instance(V__COLOR1,s__ColorAttribute)
            & s__instance(V__COLOR2,s__ColorAttribute)
            & V__COLOR1 != V__COLOR2 ) ) ) ).

fof(kb_SUMO_8302,axiom,
    s__subclass(s__StructureAttribute,s__InternalAttribute) ).

fof(kb_SUMO_8303,axiom,
    s__documentation(s__StructureAttribute,s__EnglishLanguage,'Each &%subclass of &%StructureAttribute denotes some facet of the structure of physical entities. Each &%instance of &%StructureAttribute denotes some structural characteristic that may pertain to some &%Physical entity.') ).

fof(kb_SUMO_8304,axiom,
    s__subclass(s__ShapeAttribute,s__StructureAttribute) ).

fof(kb_SUMO_8305,axiom,
    s__instance(s__ShapeAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8306,axiom,
    s__instance(s__StructureAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8307,axiom,
    s__documentation(s__ShapeAttribute,s__EnglishLanguage,'Any &%Attribute that relates to the shape of an &%Object.') ).

fof(kb_SUMO_8308,axiom,
    ! [V__SURFACE,V__OBJ,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__OBJ,s__SelfConnectedObject)
        & s__instance(V__SURFACE,s__SelfConnectedObject) )
     => ( ( s__instance(V__ATTRIBUTE,s__ShapeAttribute)
          & s__attribute(V__OBJ,V__ATTRIBUTE)
          & s__surface(V__SURFACE,V__OBJ) )
       => s__attribute(V__SURFACE,V__ATTRIBUTE) ) ) ).

fof(kb_SUMO_8309,axiom,
    s__instance(s__Pliable,s__InternalAttribute) ).

fof(kb_SUMO_8310,axiom,
    s__documentation(s__Pliable,s__EnglishLanguage,'The shape of an &%Object with this &%Attribute can easily be altered.') ).

fof(kb_SUMO_8311,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( ? [V__CHANGE] :
            ( s__instance(V__CHANGE,s__Process)
            & s__instance(V__CHANGE,s__ShapeChange)
            & s__patient(V__CHANGE,V__OBJ) )
       => s__attribute(V__OBJ,s__Pliable) ) ) ).

fof(kb_SUMO_8312,axiom,
    s__instance(s__Rigid,s__InternalAttribute) ).

fof(kb_SUMO_8313,axiom,
    s__contraryAttribute_2(s__Rigid,s__Pliable) ).

fof(kb_SUMO_8314,axiom,
    s__documentation(s__Rigid,s__EnglishLanguage,'The shape of an &%Object with this &%Attribute cannot be altered without breaking.') ).

fof(kb_SUMO_8315,axiom,
    s__subclass(s__TextureAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_8316,axiom,
    s__instance(s__TextureAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8317,axiom,
    s__documentation(s__TextureAttribute,s__EnglishLanguage,'Any &%Attribute that characterizes the texture of an &%Object.') ).

fof(kb_SUMO_8318,axiom,
    ! [V__SURFACE,V__OBJ,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__OBJ,s__SelfConnectedObject)
        & s__instance(V__SURFACE,s__SelfConnectedObject) )
     => ( ( s__instance(V__ATTRIBUTE,s__TextureAttribute)
          & s__attribute(V__OBJ,V__ATTRIBUTE)
          & s__surface(V__SURFACE,V__OBJ) )
       => s__attribute(V__SURFACE,V__ATTRIBUTE) ) ) ).

fof(kb_SUMO_8319,axiom,
    s__instance(s__Smooth,s__TextureAttribute) ).

fof(kb_SUMO_8320,axiom,
    s__documentation(s__Smooth,s__EnglishLanguage,'An &%Object with this &%Attribute has a smooth surface.') ).

fof(kb_SUMO_8321,axiom,
    s__instance(s__Rough,s__TextureAttribute) ).

fof(kb_SUMO_8322,axiom,
    s__contraryAttribute_2(s__Smooth,s__Rough) ).

fof(kb_SUMO_8323,axiom,
    s__documentation(s__Rough,s__EnglishLanguage,'An &%Object with this &%Attribute has a rough surface.') ).

fof(kb_SUMO_8324,axiom,
    s__subclass(s__GeometricFigure,s__ShapeAttribute) ).

fof(kb_SUMO_8325,axiom,
    s__partition_5(s__GeometricFigure,s__GeometricPoint,s__OneDimensionalFigure,s__TwoDimensionalFigure,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_8326,axiom,
    s__documentation(s__GeometricFigure,s__EnglishLanguage,'The class of all geometric figures, i.e. the class of all abstract, spatial representations. The instances of this class are &%GeometricPoints, &%TwoDimensionalFigures or &%ThreeDimensionalFigures.') ).

fof(kb_SUMO_8327,axiom,
    s__subclass(s__GeometricPoint,s__GeometricFigure) ).

fof(kb_SUMO_8328,axiom,
    s__instance(s__GeometricPoint__t,s__SetOrClass) ).

fof(kb_SUMO_8329,axiom,
    s__documentation(s__GeometricPoint,s__EnglishLanguage,'The class of zero-dimensional &%GeometricFigures, i.e. the class of &%GeometricFigures that have position but lack extension in any dimension.') ).

fof(kb_SUMO_8330,axiom,
    s__subclass(s__OneDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_8331,axiom,
    s__instance(s__OneDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8332,axiom,
    s__documentation(s__OneDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along a single dimension, viz. straight lines.') ).

fof(kb_SUMO_8333,axiom,
    s__subclass(s__TwoDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_8334,axiom,
    s__instance(s__GeometricFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8335,axiom,
    s__partition_3(s__TwoDimensionalFigure,s__OpenTwoDimensionalFigure,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_8336,axiom,
    s__documentation(s__TwoDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along two dimensions, viz. plane figures like circles and polygons.') ).

fof(kb_SUMO_8337,axiom,
    s__subclass(s__OpenTwoDimensionalFigure,s__TwoDimensionalFigure) ).

fof(kb_SUMO_8338,axiom,
    s__instance(s__OpenTwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8339,axiom,
    s__instance(s__TwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8340,axiom,
    s__documentation(s__OpenTwoDimensionalFigure,s__EnglishLanguage,'The class of &%TwoDimensionalFigures that are not &%ClosedTwoDimensionalFigures.') ).

fof(kb_SUMO_8341,axiom,
    s__subclass(s__TwoDimensionalAngle,s__OpenTwoDimensionalFigure) ).

fof(kb_SUMO_8342,axiom,
    s__instance(s__TwoDimensionalAngle__t,s__SetOrClass) ).

fof(kb_SUMO_8343,axiom,
    s__documentation(s__TwoDimensionalAngle,s__EnglishLanguage,'Any two &%OneDimensionalFigures (i.e. straight lines) meeting at a single &%GeometricPoint.') ).

fof(kb_SUMO_8344,axiom,
    s__subclass(s__ClosedTwoDimensionalFigure,s__TwoDimensionalFigure) ).

fof(kb_SUMO_8345,axiom,
    s__instance(s__ClosedTwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8346,axiom,
    s__documentation(s__ClosedTwoDimensionalFigure,s__EnglishLanguage,'Any &%TwoDimensionalFigure which has a well defined interior and exterior.') ).

fof(kb_SUMO_8347,axiom,
    s__subclass(s__ThreeDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_8348,axiom,
    s__instance(s__ThreeDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_8349,axiom,
    s__documentation(s__ThreeDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along three dimensions, viz. geometric solids like polyhedrons and cylinders.') ).

fof(kb_SUMO_8350,axiom,
    s__instance(s__geometricPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_8351,axiom,
    s__instance(s__geometricPart__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_8352,axiom,
    s__domain(s__geometricPart__m,"1",s__GeometricFigure) ).

fof(kb_SUMO_8353,axiom,
    s__domain(s__geometricPart__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_8354,axiom,
    s__documentation(s__geometricPart__m,s__EnglishLanguage,'(&%geometricPart ?PART ?WHOLE) means that the &%GeometricFigure ?PART is part of the &%GeometricFigure ?WHOLE.') ).

fof(kb_SUMO_8355,axiom,
    s__subrelation(s__pointOfFigure__m,s__geometricPart__m) ).

fof(kb_SUMO_8356,axiom,
    s__domain(s__pointOfFigure__m,"1",s__GeometricPoint) ).

fof(kb_SUMO_8357,axiom,
    s__domain(s__pointOfFigure__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_8358,axiom,
    s__documentation(s__pointOfFigure__m,s__EnglishLanguage,'(&%pointOfFigure ?POINT ?FIGURE) means that the &%GeometricPoint ?POINT is part of the &%GeometricFigure ?FIGURE.') ).

fof(kb_SUMO_8359,axiom,
    s__subrelation(s__angleOfFigure__m,s__geometricPart__m) ).

fof(kb_SUMO_8360,axiom,
    s__domain(s__angleOfFigure__m,"1",s__TwoDimensionalAngle) ).

fof(kb_SUMO_8361,axiom,
    s__domain(s__angleOfFigure__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_8362,axiom,
    s__documentation(s__angleOfFigure__m,s__EnglishLanguage,'(&%angleOfFigure ?ANGLE ?FIGURE) means that the &%TwoDimensionalAngle ?ANGLE is part of the &%GeometricFigure ?FIGURE.') ).

fof(kb_SUMO_8363,axiom,
    s__instance(s__pointOfIntersection__m,s__TernaryPredicate) ).

fof(kb_SUMO_8364,axiom,
    s__domain(s__pointOfIntersection__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_8365,axiom,
    s__domain(s__pointOfIntersection__m,"2",s__OneDimensionalFigure) ).

fof(kb_SUMO_8366,axiom,
    s__domain(s__pointOfIntersection__m,"3",s__GeometricPoint) ).

fof(kb_SUMO_8367,axiom,
    s__documentation(s__pointOfIntersection__m,s__EnglishLanguage,'(&%pointOfIntersection ?FIGURE1 ?FIGURE2 ?POINT) means that the two straight lines ?FIGURE1 and ?FIGURE2 meet at the point ?POINT.') ).

fof(kb_SUMO_8368,axiom,
    ! [V__POINT,V__FIGURE1,V__FIGURE2] :
      ( ( s__instance(V__FIGURE2,s__OneDimensionalFigure)
        & s__instance(V__FIGURE1,s__OneDimensionalFigure)
        & s__instance(V__POINT,s__GeometricPoint) )
     => ( s__pointOfIntersection(V__FIGURE1,V__FIGURE2,V__POINT)
       => ( s__pointOfFigure(V__POINT,V__FIGURE1)
          & s__pointOfFigure(V__POINT,V__FIGURE2) ) ) ) ).

fof(kb_SUMO_8369,axiom,
    s__instance(s__parallel__m,s__BinaryPredicate) ).

fof(kb_SUMO_8370,axiom,
    s__domain(s__parallel__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_8371,axiom,
    s__domain(s__parallel__m,"2",s__OneDimensionalFigure) ).

fof(kb_SUMO_8372,axiom,
    s__documentation(s__parallel__m,s__EnglishLanguage,'(&%parallel ?LINE1 ?LINE2) means that the &%OneDimensionalFigures ?LINE1 and ?LINE2 are parallel to one another, i.e. they are equidistant from one another at every point.') ).

fof(kb_SUMO_8373,axiom,
    ! [V__LINE2,V__LINE1] :
      ( ( s__instance(V__LINE1,s__OneDimensionalFigure)
        & s__instance(V__LINE2,s__OneDimensionalFigure) )
     => ( s__parallel(V__LINE1,V__LINE2)
       => ~ ? [V__POINT] :
              ( s__instance(V__POINT,s__GeometricPoint)
              & s__pointOfIntersection(V__LINE1,V__LINE2,V__POINT) ) ) ) ).

fof(kb_SUMO_8374,axiom,
    s__instance(s__angularMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_8375,axiom,
    s__instance(s__angularMeasure__m,s__TotalValuedRelation) ).

fof(kb_SUMO_8376,axiom,
    s__domain(s__angularMeasure__m,"1",s__TwoDimensionalAngle) ).

fof(kb_SUMO_8377,axiom,
    s__domain(s__angularMeasure__m,"2",s__PlaneAngleMeasure) ).

fof(kb_SUMO_8378,axiom,
    s__documentation(s__angularMeasure__m,s__EnglishLanguage,'(&%angularMeasure ?ANGLE ?MEASURE) means that the two-dimensional geometric angle ?ANGLE has the &%PlaneAngleMeasure of ?MEASURE.') ).

fof(kb_SUMO_8379,axiom,
    s__instance(s__lineMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_8380,axiom,
    s__instance(s__lineMeasure__m,s__TotalValuedRelation) ).

fof(kb_SUMO_8381,axiom,
    s__domain(s__lineMeasure__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_8382,axiom,
    s__domain(s__lineMeasure__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_8383,axiom,
    s__documentation(s__lineMeasure__m,s__EnglishLanguage,'(&%lineMeasure ?LINE ?MEASURE) means that the straight line ?LINE has the &%LengthMeasure of ?MEASURE.') ).

fof(kb_SUMO_8384,axiom,
    s__instance(s__geometricDistance__m,s__TernaryPredicate) ).

fof(kb_SUMO_8385,axiom,
    s__instance(s__geometricDistance__m,s__SingleValuedRelation) ).

fof(kb_SUMO_8386,axiom,
    s__instance(s__geometricDistance__m,s__TotalValuedRelation) ).

fof(kb_SUMO_8387,axiom,
    s__domain(s__geometricDistance__m,"1",s__GeometricPoint) ).

fof(kb_SUMO_8388,axiom,
    s__domain(s__geometricDistance__m,"2",s__GeometricPoint) ).

fof(kb_SUMO_8389,axiom,
    s__domain(s__geometricDistance__m,"3",s__LengthMeasure) ).

fof(kb_SUMO_8390,axiom,
    s__documentation(s__geometricDistance__m,s__EnglishLanguage,'(&%geometricDistance ?POINT1 ?POINT2 ?LENGTH) means that ?LENGTH is the distance between the two &%GeometricPoints ?POINT1 and ?POINT2.') ).

fof(kb_SUMO_8391,axiom,
    ! [V__POINT2,V__POINT1,V__LENGTH] :
      ( ( s__instance(V__LENGTH,s__LengthMeasure)
        & s__instance(V__POINT1,s__GeometricPoint)
        & s__instance(V__POINT2,s__GeometricPoint) )
     => ( s__geometricDistance(V__POINT1,V__POINT2,V__LENGTH)
       => s__geometricDistance(V__POINT2,V__POINT1,V__LENGTH) ) ) ).

fof(kb_SUMO_8392,axiom,
    s__subclass(s__SaturationAttribute,s__InternalAttribute) ).

fof(kb_SUMO_8393,axiom,
    s__instance(s__SaturationAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8394,axiom,
    s__documentation(s__SaturationAttribute,s__EnglishLanguage,'A &%Class of &%Attributes that specify, in a qualitative manner, the extent of the presence of one kind of &%Object in another kind of &%Object.') ).

fof(kb_SUMO_8395,axiom,
    s__instance(s__Dry,s__SaturationAttribute) ).

fof(kb_SUMO_8396,axiom,
    s__contraryAttribute_2(s__Dry,s__Damp) ).

fof(kb_SUMO_8397,axiom,
    s__documentation(s__Dry,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object contains no &%Liquid.') ).

fof(kb_SUMO_8398,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Dry)
       => ~ ? [V__SUBOBJ] :
              ( s__instance(V__SUBOBJ,s__Object)
              & s__part(V__SUBOBJ,V__OBJ)
              & s__attribute(V__SUBOBJ,s__Liquid) ) ) ) ).

fof(kb_SUMO_8399,axiom,
    s__instance(s__Damp,s__SaturationAttribute) ).

fof(kb_SUMO_8400,axiom,
    s__documentation(s__Damp,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object contains some &%Liquid.') ).

fof(kb_SUMO_8401,axiom,
    s__instance(s__Wet,s__SaturationAttribute) ).

fof(kb_SUMO_8402,axiom,
    s__subAttribute(s__Wet,s__Damp) ).

fof(kb_SUMO_8403,axiom,
    s__documentation(s__Wet,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object is fully saturated with a &%Liquid, i.e. every part of the &%Object has a subpart which is a &%Liquid.') ).

fof(kb_SUMO_8404,axiom,
    ! [V__OBJ] :
      ( s__attribute(V__OBJ,s__Wet)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ,s__Object) )
         => ( s__part(V__PART,V__OBJ)
           => ? [V__SUBPART] :
                ( s__instance(V__SUBPART,s__Object)
                & s__part(V__SUBPART,V__PART)
                & s__attribute(V__SUBPART,s__Liquid) ) ) ) ) ).

fof(kb_SUMO_8405,axiom,
    s__subclass(s__BiologicalAttribute,s__InternalAttribute) ).

fof(kb_SUMO_8406,axiom,
    s__documentation(s__BiologicalAttribute,s__EnglishLanguage,'&%Attributes that apply specifically to instances of &%Organism.') ).

fof(kb_SUMO_8407,axiom,
    ! [V__ORG,V__ATT] :
      ( ( s__instance(V__ATT,s__Attribute)
        & s__instance(V__ORG,s__Object) )
     => ( ( s__attribute(V__ORG,V__ATT)
          & s__instance(V__ATT,s__BiologicalAttribute) )
       => s__instance(V__ORG,s__OrganicObject) ) ) ).

fof(kb_SUMO_8408,axiom,
    s__subclass(s__BodyPosition,s__BiologicalAttribute) ).

fof(kb_SUMO_8409,axiom,
    s__documentation(s__BodyPosition,s__EnglishLanguage,'The class of &%Attributes expressing configurations of bodies or parts of bodies of animals or humans, e.g. standing, sitting, kneeling, lying down, etc.') ).

fof(kb_SUMO_8410,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__Agent)
     => ( s__instance(V__ANIMAL,s__Animal)
       => ( ? [V__MOTION] :
              ( s__instance(V__MOTION,s__Process)
              & s__instance(V__MOTION,s__BodyMotion)
              & s__agent(V__MOTION,V__ANIMAL) )
          | ? [V__ATTR] :
              ( s__instance(V__ATTR,s__Attribute)
              & s__instance(V__ATTR,s__BodyPosition)
              & s__attribute(V__ANIMAL,V__ATTR) ) ) ) ) ).

fof(kb_SUMO_8411,axiom,
    s__instance(s__Standing,s__BodyPosition) ).

fof(kb_SUMO_8412,axiom,
    s__documentation(s__Standing,s__EnglishLanguage,'The &%BodyPosition of being upright, i.e. being fully extended and supported by nothing other than ones own feet.') ).

fof(kb_SUMO_8413,axiom,
    ! [V__AMBULATE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AMBULATE,s__Process) )
     => ( ( s__instance(V__AMBULATE,s__Ambulating)
          & s__agent(V__AMBULATE,V__AGENT) )
       => s__attribute(V__AGENT,s__Standing) ) ) ).

fof(kb_SUMO_8414,axiom,
    s__instance(s__Sitting,s__BodyPosition) ).

fof(kb_SUMO_8415,axiom,
    s__instance(s__BodyPosition__t,s__SetOrClass) ).

fof(kb_SUMO_8416,axiom,
    s__documentation(s__Sitting,s__EnglishLanguage,'The &%BodyPosition of being recumbent, i.e. knees bent and back side supported.') ).

fof(kb_SUMO_8417,axiom,
    s__instance(s__Prostrate,s__BodyPosition) ).

fof(kb_SUMO_8418,axiom,
    s__documentation(s__Prostrate,s__EnglishLanguage,'The &%BodyPosition of lying down, being in a horizontal position.') ).

fof(kb_SUMO_8419,axiom,
    s__subclass(s__AnimacyAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_8420,axiom,
    s__exhaustiveAttribute_3(s__AnimacyAttribute,s__Living,s__Dead) ).

fof(kb_SUMO_8421,axiom,
    s__documentation(s__AnimacyAttribute,s__EnglishLanguage,'&%Attributes that indicate whether an &%Organism is alive or not.') ).

fof(kb_SUMO_8422,axiom,
    s__instance(s__Living,s__AnimacyAttribute) ).

fof(kb_SUMO_8423,axiom,
    s__instance(s__AnimacyAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8424,axiom,
    s__documentation(s__Living,s__EnglishLanguage,'This &%Attribute applies to &%Organisms that are alive.') ).

%FOL fof(kb_SUMO_8425,axiom,(( (! [V__PROCESS,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Agent) & s__instance(V__PROCESS,s__Process)) => ((s__instance(V__ORGANISM,s__Organism) & s__agent(V__PROCESS,V__ORGANISM)) => s__holdsDuring(s__WhenFn(V__PROCESS),'s__attribute(V__ORGANISM,s__Living)')))) ))).

fof(kb_SUMO_8426,axiom,
    s__instance(s__Dead,s__AnimacyAttribute) ).

fof(kb_SUMO_8427,axiom,
    s__subAttribute(s__Dead,s__Unconscious) ).

fof(kb_SUMO_8428,axiom,
    s__contraryAttribute_2(s__Dead,s__Living) ).

fof(kb_SUMO_8429,axiom,
    s__documentation(s__Dead,s__EnglishLanguage,'This &%Attribute applies to &%Organisms that are not alive.') ).

fof(kb_SUMO_8430,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__Organism)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__AnimacyAttribute)
            & s__attribute(V__ORG,V__ATTR) ) ) ) ).

fof(kb_SUMO_8431,axiom,
    s__subclass(s__SexAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_8432,axiom,
    s__exhaustiveAttribute_3(s__SexAttribute,s__Female,s__Male) ).

fof(kb_SUMO_8433,axiom,
    s__documentation(s__SexAttribute,s__EnglishLanguage,'&%Attributes that indicate the sex of an &%Organism.') ).

fof(kb_SUMO_8434,axiom,
    s__instance(s__Female,s__SexAttribute) ).

fof(kb_SUMO_8435,axiom,
    s__documentation(s__Female,s__EnglishLanguage,'An &%Attribute indicating that an &%Organism is female in nature.') ).

fof(kb_SUMO_8436,axiom,
    ! [V__BODY,V__ORG] :
      ( ( s__instance(V__ORG,s__Object)
        & s__instance(V__BODY,s__Object) )
     => ( ( s__instance(V__BODY,s__ReproductiveBody)
          & s__part(V__BODY,V__ORG)
          & s__instance(V__ORG,s__Organism) )
       => s__attribute(V__ORG,s__Female) ) ) ).

fof(kb_SUMO_8437,axiom,
    s__instance(s__Male,s__SexAttribute) ).

fof(kb_SUMO_8438,axiom,
    s__instance(s__SexAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8439,axiom,
    s__contraryAttribute_2(s__Male,s__Female) ).

fof(kb_SUMO_8440,axiom,
    s__documentation(s__Male,s__EnglishLanguage,'An &%Attribute indicating that an &%Organism is male in nature.') ).

fof(kb_SUMO_8441,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__Object)
     => ( s__instance(V__ANIMAL,s__Animal)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SexAttribute)
            & s__attribute(V__ANIMAL,V__ATTR) ) ) ) ).

fof(kb_SUMO_8442,axiom,
    s__subclass(s__DevelopmentalAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_8443,axiom,
    s__instance(s__DevelopmentalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8444,axiom,
    s__instance(s__BiologicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8445,axiom,
    s__exhaustiveAttribute_3(s__DevelopmentalAttribute,s__FullyFormed,s__NonFullyFormed) ).

fof(kb_SUMO_8446,axiom,
    s__documentation(s__DevelopmentalAttribute,s__EnglishLanguage,'&%Attributes that indicate the stage of development of an &%Organism.') ).

fof(kb_SUMO_8447,axiom,
    s__instance(s__FullyFormed,s__DevelopmentalAttribute) ).

fof(kb_SUMO_8448,axiom,
    s__documentation(s__FullyFormed,s__EnglishLanguage,'The stage of an &%Organism when it has reached the end of its growth phase.') ).

%FOL fof(kb_SUMO_8449,axiom,(( (! [V__OBJ] : (s__instance(V__OBJ,s__Agent) => (s__attribute(V__OBJ,s__FullyFormed) => (? [V__GROWTH] : (s__instance(V__GROWTH,s__Process) & s__instance(V__GROWTH,s__Growth) & s__experiencer(V__GROWTH,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__OBJ)),'s__attribute(V__OBJ,s__NonFullyFormed)')))))) ))).

fof(kb_SUMO_8450,axiom,
    s__instance(s__NonFullyFormed,s__DevelopmentalAttribute) ).

fof(kb_SUMO_8451,axiom,
    s__contraryAttribute_2(s__NonFullyFormed,s__FullyFormed) ).

fof(kb_SUMO_8452,axiom,
    s__successorAttribute(s__NonFullyFormed,s__FullyFormed) ).

fof(kb_SUMO_8453,axiom,
    s__documentation(s__NonFullyFormed,s__EnglishLanguage,'The stage of an &%Organism before it is &%FullyFormed.') ).

fof(kb_SUMO_8454,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__Organism)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__DevelopmentalAttribute)
            & s__attribute(V__ORG,V__ATTR) ) ) ) ).

fof(kb_SUMO_8455,axiom,
    s__subAttribute(s__Larval,s__NonFullyFormed) ).

fof(kb_SUMO_8456,axiom,
    s__documentation(s__Larval,s__EnglishLanguage,'Form of most &%Invertebrates, &%Amphibians, and &%Fish immediately after they hatch. This form is fundamentally unlike the adult form, and metamorphosis is required to reach the latter form.') ).

%FOL fof(kb_SUMO_8457,axiom,(( (! [V__TIME,V__ORG,V__BIRTH,V__BW] : ((s__instance(V__BW,s__TimeInterval) & s__instance(V__BIRTH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__TIME,s__TimeInterval)) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORG,s__Larval)') & s__instance(V__BIRTH,s__Birth) & (V__BW = s__WhenFn(V__BIRTH)) & s__experiencer(V__BIRTH,V__ORG)) => s__meetsTemporally(V__BW,V__TIME)))) ))).

fof(kb_SUMO_8458,axiom,
    s__subAttribute(s__Embryonic,s__NonFullyFormed) ).

fof(kb_SUMO_8459,axiom,
    s__contraryAttribute_2(s__Embryonic,s__Larval) ).

fof(kb_SUMO_8460,axiom,
    s__documentation(s__Embryonic,s__EnglishLanguage,'The stage of an &%Organism or an &%AnatomicalStructure that exists only before the &%Organism is born. &%Mammals, for example, have this &%Attribute only prior to their birth.') ).

fof(kb_SUMO_8461,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__attribute(V__ORG,s__Embryonic)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__Object)
            & s__instance(V__BODY,s__ReproductiveBody)
            & s__located(V__ORG,V__BODY) ) ) ) ).

%FOL fof(kb_SUMO_8462,axiom,(( (! [V__TIME,V__ORG,V__BIRTH,V__BW] : ((s__instance(V__BW,s__TimeInterval) & s__instance(V__BIRTH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__TIME,s__TimeInterval)) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORG,s__Embryonic)') & s__instance(V__BIRTH,s__Birth) & (V__BW = s__WhenFn(V__BIRTH)) & s__experiencer(V__BIRTH,V__ORG)) => (~ s__overlapsTemporally(V__TIME,V__BW))))) ))).

fof(kb_SUMO_8463,axiom,
    s__subclass(s__DiseaseOrSyndrome,s__BiologicalAttribute) ).

fof(kb_SUMO_8464,axiom,
    s__documentation(s__DiseaseOrSyndrome,s__EnglishLanguage,'A &%BiologicalAttribute which qualifies something that alters or interferes with a normal process, state or activity of an &%Organism. It is usually characterized by the abnormal functioning of one or more of the hosts systems, parts, or &%Organs.') ).

fof(kb_SUMO_8465,axiom,
    s__subclass(s__PsychologicalAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_8466,axiom,
    s__partition_3(s__PsychologicalAttribute,s__StateOfMind,s__TraitAttribute) ).

fof(kb_SUMO_8467,axiom,
    s__documentation(s__PsychologicalAttribute,s__EnglishLanguage,'&%Attributes that characterize the mental or behavioral life of an &%Organism.') ).

%FOL fof(kb_SUMO_8468,axiom,(( (! [V__TIME,V__ATTR,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Object) & s__instance(V__ATTR,s__Attribute) & s__instance(V__TIME,s__TimePosition)) => (s__instance(V__ATTR,s__PsychologicalAttribute) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORGANISM,V__ATTR)') & s__instance(V__ORGANISM,s__Organism)) => s__holdsDuring(V__TIME,'s__attribute(V__ORGANISM,s__Living)'))))) ))).

fof(kb_SUMO_8469,axiom,
    ! [V__ATTR,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Object)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__instance(V__ATTR,s__PsychologicalAttribute)
          & s__attribute(V__AGENT,V__ATTR) )
       => s__instance(V__AGENT,s__SentientAgent) ) ) ).

fof(kb_SUMO_8470,axiom,
    s__subclass(s__StateOfMind,s__PsychologicalAttribute) ).

fof(kb_SUMO_8471,axiom,
    s__documentation(s__StateOfMind,s__EnglishLanguage,'The class &%StateOfMind is distinguished from its complement &%TraitAttribute by the fact that instances of the former are transient while instances of the latter are persistent features of a creatures behavioral/psychological make-up.') ).

fof(kb_SUMO_8472,axiom,
    s__subclass(s__EmotionalState,s__StateOfMind) ).

fof(kb_SUMO_8473,axiom,
    s__instance(s__EmotionalState__t,s__SetOrClass) ).

fof(kb_SUMO_8474,axiom,
    s__instance(s__StateOfMind__t,s__SetOrClass) ).

fof(kb_SUMO_8475,axiom,
    s__documentation(s__EmotionalState,s__EnglishLanguage,'The &%Class of &%Attributes that denote emotional states of &%Organisms.') ).

fof(kb_SUMO_8476,axiom,
    s__subclass(s__ConsciousnessAttribute,s__StateOfMind) ).

fof(kb_SUMO_8477,axiom,
    s__documentation(s__ConsciousnessAttribute,s__EnglishLanguage,'&%Attributes that indicate whether an &%Organism is conscious or the qualitative degree of consciousness of an &%Organism.') ).

fof(kb_SUMO_8478,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( ( s__instance(V__AGENT,s__SentientAgent)
          & s__attribute(V__AGENT,s__Living) )
      <=> ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__ConsciousnessAttribute)
            & s__attribute(V__AGENT,V__ATTR) ) ) ) ).

fof(kb_SUMO_8479,axiom,
    s__instance(s__Asleep,s__ConsciousnessAttribute) ).

fof(kb_SUMO_8480,axiom,
    s__documentation(s__Asleep,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are sleeping.') ).

fof(kb_SUMO_8481,axiom,
    s__instance(s__Unconscious,s__ConsciousnessAttribute) ).

fof(kb_SUMO_8482,axiom,
    s__contraryAttribute_2(s__Unconscious,s__Awake) ).

fof(kb_SUMO_8483,axiom,
    s__documentation(s__Unconscious,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are unconscious. An &%Organism may be &%Unconscious because it is &%Dead or because of a blow to the head, a drug, etc.') ).

fof(kb_SUMO_8484,axiom,
    s__instance(s__Awake,s__ConsciousnessAttribute) ).

fof(kb_SUMO_8485,axiom,
    s__instance(s__ConsciousnessAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8486,axiom,
    s__documentation(s__Awake,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are neither &%Unconscious nor &%Asleep.') ).

fof(kb_SUMO_8487,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( ( s__attribute(V__AGENT,s__Asleep)
          | s__attribute(V__AGENT,s__Awake) )
       => s__attribute(V__AGENT,s__Living) ) ) ).

fof(kb_SUMO_8488,axiom,
    s__subclass(s__TraitAttribute,s__PsychologicalAttribute) ).

fof(kb_SUMO_8489,axiom,
    s__instance(s__TraitAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8490,axiom,
    s__documentation(s__TraitAttribute,s__EnglishLanguage,'&%Attributes that indicate the the behavior/personality traits of an &%Organism.') ).

fof(kb_SUMO_8491,axiom,
    s__subclass(s__PsychologicalDysfunction,s__PsychologicalAttribute) ).

fof(kb_SUMO_8492,axiom,
    s__instance(s__PsychologicalDysfunction__t,s__SetOrClass) ).

fof(kb_SUMO_8493,axiom,
    s__instance(s__PsychologicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_8494,axiom,
    s__subclass(s__PsychologicalDysfunction,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_8495,axiom,
    s__instance(s__DiseaseOrSyndrome__t,s__SetOrClass) ).

fof(kb_SUMO_8496,axiom,
    s__documentation(s__PsychologicalDysfunction,s__EnglishLanguage,'A clinically significant dysfunction whose major manifestation is behavioral or psychological. These dysfunctions may have identified or presumed biological etiologies or manifestations.') ).

fof(kb_SUMO_8497,axiom,
    s__instance(s__comment__m,s__TernaryPredicate) ).

fof(kb_SUMO_8498,axiom,
    s__documentation(s__comment__m,s__EnglishLanguage,'(&%comment ?ENT ?STR ?PER) is a convenience relationship that allows ontologists represented by &%SymbolicString ?PER to write down commentaries ?STR on a defined &%Entity ?ENT') ).

fof(kb_SUMO_8499,axiom,
    s__termFormat(s__EnglishLanguage,s__comment__m,comment) ).

fof(kb_SUMO_8500,axiom,
    s__domain(s__comment__m,"1",s__Entity) ).

fof(kb_SUMO_8501,axiom,
    s__domain(s__comment__m,"2",s__SymbolicString) ).

fof(kb_SUMO_8502,axiom,
    s__domain(s__comment__m,"3",s__SymbolicString) ).

fof(kb_SUMO_8503,axiom,
    s__subclass(s__OrganismRemains,s__OrganicObject) ).

fof(kb_SUMO_8504,axiom,
    s__documentation(s__OrganismRemains,s__EnglishLanguage,'An &%instance of &%OrganismRemains is &%Dead matter of a formerly &%Living &%Organism: &%Plant, &%Animal, or &%Microorganism. An &%instance of &%OrganismRemains might or might not be recognizable as the remains of a particular kind or species of organism, depending on the cause of the &%Organisms &%Death (heart failure, stroke, roadkill, dismemberment, etc.), the elapsed time since death, the speed of decomposition, and any post-mortem processing of the dead organism (embalming, cremation, mummification, boiling, consumption as food, etc.).') ).

%FOL fof(kb_SUMO_8505,axiom,(( (! [V__X] : (s__instance(V__X,s__Object) => (s__instance(V__X,s__OrganismRemains) => s__holdsDuring(s__WhenFn(V__X),'s__attribute(V__X,s__Dead)')))) ))).

%FOL fof(kb_SUMO_8506,axiom,(( (! [V__OBJ,V__T2,V__REM] : ((s__instance(V__REM,s__Object) & s__instance(V__T2,s__TimePosition) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__REM,s__OrganismRemains) & s__holdsDuring(V__T2,'s__part(V__OBJ,V__REM)')) => (? [V__ORG,V__T1] : (s__instance(V__ORG,s__Object) & s__instance(V__ORG,s__Organism) & s__earlier(s__WhenFn(V__ORG),s__WhenFn(V__REM)) & s__instance(V__T1,s__TimeInterval) & s__finishes(V__T1,s__WhenFn(V__ORG)) & s__holdsDuring(V__T1,'s__part(V__OBJ,V__ORG)')))))) ))).

fof(kb_SUMO_8507,axiom,
    ! [V__ORG,V__REM,V__DEATH] :
      ( ( s__instance(V__DEATH,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__REM,s__OrganicObject)
          & s__instance(V__DEATH,s__Death)
          & s__instance(V__ORG,s__Organism)
          & s__experiencer(V__DEATH,V__ORG)
          & s__result(V__DEATH,V__REM) )
       => s__instance(V__REM,s__OrganismRemains) ) ) ).

fof(kb_SUMO_8508,axiom,
    ! [V__REM] :
      ( s__instance(V__REM,s__OrganismRemains)
     => ? [V__DEATH] :
          ( s__instance(V__DEATH,s__Process)
          & s__instance(V__DEATH,s__Death)
          & s__result(V__DEATH,V__REM) ) ) ).

%FOL fof(kb_SUMO_8509,axiom,(( (! [V__OBJ,V__T2,V__T1,V__ORG,V__REM,V__DEATH] : ((s__instance(V__DEATH,s__Process) & s__instance(V__REM,s__Object) & s__instance(V__ORG,s__Agent) & s__instance(V__T1,s__TimeInterval) & s__instance(V__T2,s__TimeInterval) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DEATH,s__Death) & s__instance(V__REM,s__OrganismRemains) & s__instance(V__ORG,s__Organism) & s__holdsDuring(V__T2,'s__part(V__OBJ,V__REM)') & s__holdsDuring(V__T1,'s__part(V__OBJ,V__ORG)') & s__earlier(V__T1,V__T2) & s__result(V__DEATH,V__REM)) => s__experiencer(V__DEATH,V__ORG)))) ))).

%FOL fof(kb_SUMO_8510,axiom,(( (! [V__OBJ,V__T2,V__T1,V__ORG,V__REM,V__DEATH] : ((s__instance(V__DEATH,s__Process) & s__instance(V__REM,s__Object) & s__instance(V__ORG,s__Agent) & s__instance(V__T1,s__TimeInterval) & s__instance(V__T2,s__TimeInterval) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DEATH,s__Death) & s__instance(V__REM,s__OrganismRemains) & s__instance(V__ORG,s__Organism) & s__holdsDuring(V__T2,'s__part(V__OBJ,V__REM)') & s__holdsDuring(V__T1,'s__part(V__OBJ,V__ORG)') & s__earlier(V__T1,V__T2) & s__experiencer(V__DEATH,V__ORG)) => s__result(V__DEATH,V__REM)))) ))).

%FOL fof(kb_SUMO_8511,axiom,(( (! [V__ORG] : (s__instance(V__ORG,s__Object) => (s__instance(V__ORG,s__Organism) => s__holdsDuring(s__WhenFn(V__ORG),'s__attribute(V__ORG,s__Living)')))) ))).

fof(kb_SUMO_8512,axiom,
    s__subclass(s__HumanCorpse,s__OrganismRemains) ).

fof(kb_SUMO_8513,axiom,
    s__instance(s__HumanCorpse__t,s__SetOrClass) ).

fof(kb_SUMO_8514,axiom,
    s__instance(s__OrganismRemains__t,s__SetOrClass) ).

fof(kb_SUMO_8515,axiom,
    s__documentation(s__HumanCorpse,s__EnglishLanguage,'&%HumanCorpse is the &%OrganismRemains of a &%Human') ).

fof(kb_SUMO_8516,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__HumanCorpse)
     => s__instance(V__X,s__DeadFn(s__Human)) ) ).

fof(kb_SUMO_8517,axiom,
    s__instance(s__DeadFn__m,s__UnaryFunction) ).

fof(kb_SUMO_8518,axiom,
    s__domainSubclass(s__DeadFn__m,"1",s__Organism) ).

fof(kb_SUMO_8519,axiom,
    s__rangeSubclass(s__DeadFn__m,s__OrganismRemains) ).

fof(kb_SUMO_8520,axiom,
    s__documentation(s__DeadFn__m,s__EnglishLanguage,'(&%DeadFn ?ORGCLASS) denotes the &%Class of all remains that were once part of &%Living &%Organisms of the type ?ORGCLASS.') ).

fof(kb_SUMO_8521,axiom,
    ! [V__ORG,V__REM,V__ORGTYPE,V__DEATH] :
      ( ( s__instance(V__DEATH,s__Process)
        & s__subclass(V__ORGTYPE,s__Organism)
        & s__instance(V__ORGTYPE,s__SetOrClass)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__REM,s__DeadFn(V__ORGTYPE))
          & s__instance(V__DEATH,s__Death)
          & s__result(V__DEATH,V__REM)
          & s__experiencer(V__DEATH,V__ORG) )
       => s__instance(V__ORG,V__ORGTYPE) ) ) ).

fof(kb_SUMO_8522,axiom,
    ! [V__ORG,V__REM,V__ORGTYPE,V__DEATH] :
      ( ( s__instance(V__DEATH,s__Process)
        & s__subclass(V__ORGTYPE,s__Organism)
        & s__instance(V__ORGTYPE,s__SetOrClass)
        & s__instance(V__ORG,s__Agent)
        & s__instance(V__ORG,s__SetOrClass) )
     => ( ( s__instance(V__REM,s__OrganicObject)
          & s__instance(V__DEATH,s__Death)
          & s__experiencer(V__DEATH,V__ORG)
          & s__instance(V__ORG,V__ORGTYPE)
          & s__subclass(V__ORG,s__Organism)
          & s__result(V__DEATH,V__REM) )
       => s__instance(V__REM,s__DeadFn(V__ORGTYPE)) ) ) ).

fof(kb_SUMO_8523,axiom,
    s__instance(s__HumanSlave,s__SocialRole) ).

fof(kb_SUMO_8524,axiom,
    s__documentation(s__HumanSlave,s__EnglishLanguage,'A &%Human who is owned by someone else.') ).

%FOL fof(kb_SUMO_8525,axiom,(( (! [V__TIME,V__SLAVE] : ((s__instance(V__SLAVE,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__attribute(V__SLAVE,s__HumanSlave)') => (? [V__PERSON] : (s__instance(V__PERSON,s__Agent) & s__instance(V__PERSON,s__Human) & (~ (V__PERSON = V__SLAVE)) & s__holdsDuring(V__TIME,'s__possesses(V__PERSON,V__SLAVE)')))))) ))).

fof(kb_SUMO_8526,axiom,
    s__subclass(s__HumanAdult,s__Human) ).

fof(kb_SUMO_8527,axiom,
    s__instance(s__HumanAdult__t,s__SetOrClass) ).

fof(kb_SUMO_8528,axiom,
    s__subclass(s__HumanAdult,s__LegalAgent) ).

fof(kb_SUMO_8529,axiom,
    s__documentation(s__HumanAdult,s__EnglishLanguage,'The class of &%Humans that are 18 years of age or older.') ).

fof(kb_SUMO_8530,axiom,
    ! [V__NUMBER,V__ADULT,V__TIME] :
      ( ( s__instance(V__TIME,s__TimePosition)
        & s__instance(V__ADULT,s__Object)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__holdsDuring(V__TIME,'(s__instance(V__ADULT,s__HumanAdult) & s__age(V__ADULT,s__MeasureFn(V__NUMBER,s__YearDuration)))')
       => greatereq(V__NUMBER,"18") ) ) ).

%FOL fof(kb_SUMO_8531,axiom,(( (! [V__TIME,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__H,s__HumanAdult)') => (? [V__AGE] : (s__instance(V__AGE,s__TimeDuration) & s__holdsDuring(V__TIME,'s__age(V__H,V__AGE)') & s__instance(V__AGE,s__IntervalFn(s__MeasureFn(18,s__YearDuration),s__MeasureFn(120,s__YearDuration)))))))) ))).

%FOL fof(kb_SUMO_8532,axiom,(( (! [V__T1,V__H,V__N] : ((s__instance(V__N,s__RealNumber) & s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__H,s__Human) & s__holdsDuring(V__T1,'s__age(V__H,s__MeasureFn(V__N,s__YearDuration))') & greatereq(V__N,18)) => s__holdsDuring(V__T1,'s__instance(V__H,s__HumanAdult)')))) ))).

%FOL fof(kb_SUMO_8533,axiom,(( (! [V__ADULT,V__TIME] : ((s__instance(V__TIME,s__TimePosition) & s__instance(V__ADULT,s__OrganicObject)) => (s__holdsDuring(V__TIME,'s__instance(V__ADULT,s__HumanAdult)') => s__holdsDuring(V__TIME,'s__developmentalForm(V__ADULT,s__FullyFormed)')))) ))).

%FOL fof(kb_SUMO_8534,axiom,(( (! [V__TIME,V__ORG] : ((s__instance(V__ORG,s__Object) & s__instance(V__TIME,s__TimePosition)) => ((s__instance(V__ORG,s__Human) & s__holdsDuring(V__TIME,'s__attribute(V__ORG,s__FullyFormed)')) => s__holdsDuring(V__TIME,'s__instance(V__ORG,s__HumanAdult)')))) ))).

%FOL fof(kb_SUMO_8535,axiom,(( (! [V__TIME,V__ATTR,V__ORG] : (s__instance(V__TIME,s__TimePosition) => ((s__instance(V__ORG,s__OrganicObject) & s__instance(V__ATTR,s__DevelopmentalAttribute) & s__holdsDuring(V__TIME,'s__property(V__ORG,V__ATTR)')) => s__holdsDuring(V__TIME,'s__developmentalForm(V__ORG,V__ATTR)')))) ))).

fof(kb_SUMO_8536,axiom,
    s__subclass(s__HumanYouth,s__Human) ).

fof(kb_SUMO_8537,axiom,
    s__documentation(s__HumanYouth,s__EnglishLanguage,'The class of &%Humans that are younger than 18 years of age.') ).

fof(kb_SUMO_8538,axiom,
    ! [V__NUMBER,V__YOUTH,V__TIME] :
      ( ( s__instance(V__TIME,s__TimePosition)
        & s__instance(V__YOUTH,s__Object)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__holdsDuring(V__TIME,'(s__instance(V__YOUTH,s__HumanYouth) & s__age(V__YOUTH,s__MeasureFn(V__NUMBER,s__YearDuration)))')
       => less(V__NUMBER,"18") ) ) ).

%FOL fof(kb_SUMO_8539,axiom,(( (! [V__TIME,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__H,s__HumanYouth)') => (? [V__AGE] : (s__instance(V__AGE,s__TimeDuration) & s__holdsDuring(V__TIME,'s__age(V__H,V__AGE)') & s__instance(V__AGE,s__IntervalFn(s__MeasureFn(0,s__YearDuration),s__MeasureFn(17,s__YearDuration)))))))) ))).

%FOL fof(kb_SUMO_8540,axiom,(( (! [V__T1,V__H,V__N] : ((s__instance(V__N,s__RealNumber) & s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__H,s__Human) & s__holdsDuring(V__T1,'s__age(V__H,s__MeasureFn(V__N,s__YearDuration))') & less(V__N,18)) => s__holdsDuring(V__T1,'s__instance(V__H,s__HumanYouth)')))) ))).

fof(kb_SUMO_8541,axiom,
    s__subclass(s__HumanChild,s__HumanYouth) ).

fof(kb_SUMO_8542,axiom,
    s__instance(s__HumanChild__t,s__SetOrClass) ).

fof(kb_SUMO_8543,axiom,
    s__instance(s__HumanYouth__t,s__SetOrClass) ).

fof(kb_SUMO_8544,axiom,
    s__documentation(s__HumanChild,s__EnglishLanguage,'A &%HumanYouth between birth and puberty, i.e a &%Human who is &%NonFullyFormed.') ).

%FOL fof(kb_SUMO_8545,axiom,(( (! [V__TIME,V__CHILD] : ((s__instance(V__CHILD,s__OrganicObject) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__CHILD,s__HumanChild)') => s__holdsDuring(V__TIME,'s__developmentalForm(V__CHILD,s__NonFullyFormed)')))) ))).

%FOL fof(kb_SUMO_8546,axiom,(( (! [V__TIME,V__CHILD] : ((s__instance(V__CHILD,s__Object) & s__instance(V__TIME,s__TimePosition)) => ((s__instance(V__CHILD,s__Human) & s__holdsDuring(V__TIME,'s__attribute(V__CHILD,s__NonFullyFormed)')) => s__holdsDuring(V__TIME,'s__instance(V__CHILD,s__HumanYouth)')))) ))).

fof(kb_SUMO_8547,axiom,
    ! [V__NUMBER,V__TIME,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Object)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__holdsDuring(V__TIME,'(s__instance(V__CHILD,s__HumanChild) & s__age(V__CHILD,s__MeasureFn(V__NUMBER,s__YearDuration)))')
       => lesseq(V__NUMBER,"14") ) ) ).

%FOL fof(kb_SUMO_8548,axiom,(( (! [V__TIME,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__H,s__HumanChild)') => (? [V__AGE] : (s__instance(V__AGE,s__TimeDuration) & s__holdsDuring(V__TIME,'s__age(V__H,V__AGE)') & s__instance(V__AGE,s__IntervalFn(s__MeasureFn(0,s__YearDuration),s__MeasureFn(14,s__YearDuration)))))))) ))).

%FOL fof(kb_SUMO_8549,axiom,(( (! [V__T1,V__H,V__N] : ((s__instance(V__N,s__RealNumber) & s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__H,s__Human) & s__holdsDuring(V__T1,'s__age(V__H,s__MeasureFn(V__N,s__YearDuration))') & lesseq(V__N,14)) => s__holdsDuring(V__T1,'s__instance(V__H,s__HumanChild)')))) ))).

fof(kb_SUMO_8550,axiom,
    s__subclass(s__Teenager,s__Human) ).

fof(kb_SUMO_8551,axiom,
    s__instance(s__Teenager__t,s__SetOrClass) ).

fof(kb_SUMO_8552,axiom,
    s__documentation(s__Teenager,s__EnglishLanguage,'A &%Human between puberty and the age of 20.') ).

fof(kb_SUMO_8553,axiom,
    ! [V__TEEN,V__NUMBER,V__TIME] :
      ( ( s__instance(V__TIME,s__TimePosition)
        & s__instance(V__NUMBER,s__RealNumber)
        & s__instance(V__TEEN,s__Object) )
     => ( s__holdsDuring(V__TIME,'(s__instance(V__TEEN,s__Teenager) & s__age(V__TEEN,s__MeasureFn(V__NUMBER,s__YearDuration)))')
       => ( greater(V__NUMBER,"12")
          & less(V__NUMBER,"20") ) ) ) ).

%FOL fof(kb_SUMO_8554,axiom,(( (! [V__TIME,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__H,s__Teenager)') => (? [V__AGE] : (s__instance(V__AGE,s__TimeDuration) & s__holdsDuring(V__TIME,'s__age(V__H,V__AGE)') & s__instance(V__AGE,s__IntervalFn(s__MeasureFn(13,s__YearDuration),s__MeasureFn(19,s__YearDuration)))))))) ))).

%FOL fof(kb_SUMO_8555,axiom,(( (! [V__T1,V__H,V__N] : ((s__instance(V__N,s__RealNumber) & s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__H,s__Human) & s__holdsDuring(V__T1,'s__age(V__H,s__MeasureFn(V__N,s__YearDuration))') & greater(V__N,12) & less(V__N,20)) => s__holdsDuring(V__T1,'s__instance(V__H,s__Teenager)')))) ))).

fof(kb_SUMO_8556,axiom,
    s__subclass(s__Boy,s__HumanChild) ).

fof(kb_SUMO_8557,axiom,
    s__instance(s__Boy__t,s__SetOrClass) ).

fof(kb_SUMO_8558,axiom,
    s__subclass(s__Boy,s__Man) ).

fof(kb_SUMO_8559,axiom,
    s__documentation(s__Boy,s__EnglishLanguage,'A &%HumanChild who is &%Male.') ).

%FOL fof(kb_SUMO_8560,axiom,(( (! [V__T1,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'(s__instance(V__H,s__HumanChild) & s__attribute(V__H,s__Male))') => s__holdsDuring(V__T1,'s__instance(V__H,s__Boy)')))) ))).

fof(kb_SUMO_8561,axiom,
    s__subclass(s__Girl,s__HumanChild) ).

fof(kb_SUMO_8562,axiom,
    s__instance(s__Girl__t,s__SetOrClass) ).

fof(kb_SUMO_8563,axiom,
    s__subclass(s__Girl,s__Woman) ).

fof(kb_SUMO_8564,axiom,
    s__documentation(s__Girl,s__EnglishLanguage,'A &%HumanChild who is &%Female.') ).

%FOL fof(kb_SUMO_8565,axiom,(( (! [V__T1,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'(s__instance(V__H,s__HumanChild) & s__attribute(V__H,s__Female))') => s__holdsDuring(V__T1,'s__instance(V__H,s__Girl)')))) ))).

fof(kb_SUMO_8566,axiom,
    s__subclass(s__HumanBaby,s__HumanChild) ).

fof(kb_SUMO_8567,axiom,
    s__instance(s__HumanBaby__t,s__SetOrClass) ).

fof(kb_SUMO_8568,axiom,
    s__documentation(s__HumanBaby,s__EnglishLanguage,'A &%Human between birth and the first year of age.') ).

fof(kb_SUMO_8569,axiom,
    ! [V__NUMBER,V__TIME,V__BABY] :
      ( ( s__instance(V__BABY,s__Object)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__holdsDuring(V__TIME,'(s__instance(V__BABY,s__HumanBaby) & s__age(V__BABY,s__MeasureFn(V__NUMBER,s__YearDuration)))')
       => lesseq(V__NUMBER,"1") ) ) ).

%FOL fof(kb_SUMO_8570,axiom,(( (! [V__TIME,V__BABY] : ((s__instance(V__BABY,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__BABY,s__HumanBaby)') => (? [V__AGE] : (s__instance(V__AGE,s__TimeDuration) & s__holdsDuring(V__TIME,'s__age(V__BABY,V__AGE)') & s__instance(V__AGE,s__IntervalFn(s__MeasureFn(0,s__YearDuration),s__MeasureFn(1,s__YearDuration)))))))) ))).

%FOL fof(kb_SUMO_8571,axiom,(( (! [V__T1,V__H,V__N] : ((s__instance(V__N,s__RealNumber) & s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__H,s__Human) & s__holdsDuring(V__T1,'s__age(V__H,s__MeasureFn(V__N,s__YearDuration))') & lesseq(V__N,1)) => s__holdsDuring(V__T1,'s__instance(V__H,s__HumanBaby)')))) ))).

fof(kb_SUMO_8572,axiom,
    s__documentation(s__older__m,s__EnglishLanguage,'(older ?OBJ1 ?OBJ2) means that ?OBJ1 is older than ?OBJ2, i.e. the age of ?OBJ1 is &%greaterThan the age of ?OBJ2.') ).

fof(kb_SUMO_8573,axiom,
    s__instance(s__older__m,s__BinaryPredicate) ).

fof(kb_SUMO_8574,axiom,
    s__domain(s__older__m,"1",s__Object) ).

fof(kb_SUMO_8575,axiom,
    s__domain(s__older__m,"2",s__Object) ).

fof(kb_SUMO_8576,axiom,
    ! [V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__O2,s__Object) )
     => ( s__older(V__O1,V__O2)
       => ? [V__N1,V__N2,V__U] :
            ( s__instance(V__U,s__UnitOfMeasure)
            & s__instance(V__N2,s__RealNumber)
            & s__instance(V__N1,s__RealNumber)
            & s__age(V__O1,s__MeasureFn(V__N1,V__U))
            & s__age(V__O2,s__MeasureFn(V__N2,V__U))
            & greater(V__N1,V__N2) ) ) ) ).

fof(kb_SUMO_8577,axiom,
    s__documentation(s__StartFn__m,s__EnglishLanguage,'(StartFn ?PROCESS) denotes &%IntentionalProcesses of bringing it about that &%Processes of type ?PROCESS begin, e.g. start working, begin running, etc.') ).

fof(kb_SUMO_8578,axiom,
    s__instance(s__StartFn__m,s__UnaryFunction) ).

fof(kb_SUMO_8579,axiom,
    s__domain(s__StartFn__m,"1",s__Process) ).

fof(kb_SUMO_8580,axiom,
    s__rangeSubclass(s__StartFn__m,s__IntentionalProcess) ).

fof(kb_SUMO_8581,axiom,
    ! [V__P,V__S] :
      ( ( s__instance(V__S,s__Physical)
        & s__instance(V__P,s__Process)
        & s__instance(V__P,s__SetOrClass) )
     => ( s__instance(V__S,s__StartFn(V__P))
       => ? [V__I] :
            ( s__instance(V__I,s__Physical)
            & s__instance(V__I,V__P)
            & s__starts(s__WhenFn(V__S),s__WhenFn(V__I)) ) ) ) ).

fof(kb_SUMO_8582,axiom,
    s__documentation(s__StopFn__m,s__EnglishLanguage,'(StopFn ?PROCESS) denotes &%IntentionalProcesses of bringing it about that &%Processes of type ?PROCESS end, e.g. stop walking, quit working, etc.') ).

fof(kb_SUMO_8583,axiom,
    s__instance(s__StopFn__m,s__UnaryFunction) ).

fof(kb_SUMO_8584,axiom,
    s__domain(s__StopFn__m,"1",s__Process) ).

fof(kb_SUMO_8585,axiom,
    s__rangeSubclass(s__StopFn__m,s__IntentionalProcess) ).

fof(kb_SUMO_8586,axiom,
    ! [V__P,V__S] :
      ( ( s__instance(V__S,s__Physical)
        & s__instance(V__P,s__Process)
        & s__instance(V__P,s__SetOrClass) )
     => ( s__instance(V__S,s__StopFn(V__P))
       => ? [V__I] :
            ( s__instance(V__I,s__Physical)
            & s__instance(V__I,V__P)
            & s__finishes(s__WhenFn(V__S),s__WhenFn(V__I)) ) ) ) ).

fof(kb_SUMO_8587,axiom,
    s__subclass(s__Dodging,s__BodyMotion) ).

fof(kb_SUMO_8588,axiom,
    s__instance(s__Dodging__t,s__SetOrClass) ).

fof(kb_SUMO_8589,axiom,
    s__subclass(s__Dodging,s__IntentionalProcess) ).

fof(kb_SUMO_8590,axiom,
    s__documentation(s__Dodging,s__EnglishLanguage,'Purposely moving ones body in such a way as to avoid being hit by something.') ).

fof(kb_SUMO_8591,axiom,
    ! [V__A,V__D,V__DT] :
      ( ( s__instance(V__DT,s__TimeInterval)
        & s__instance(V__D,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__D,s__Dodging)
          & s__agent(V__D,V__A)
          & V__DT = s__WhenFn(V__D) )
       => s__hasPurpose(V__D,'(~ (? [V__I] : (s__instance(V__I,s__Process) & (s__meetsTemporally(V__DT,s__WhenFn(V__I)) | s__overlapsTemporally(V__DT,s__WhenFn(V__I))) & s__instance(V__I,s__Impacting) & s__patient(V__I,V__A))))') ) ) ).

fof(kb_SUMO_8592,axiom,
    s__subclass(s__Mounting,s__BodyMotion) ).

fof(kb_SUMO_8593,axiom,
    s__instance(s__Mounting__t,s__SetOrClass) ).

fof(kb_SUMO_8594,axiom,
    s__documentation(s__Mounting,s__EnglishLanguage,'Any &%BodyMotion which results in being &%On something else.') ).

%FOL fof(kb_SUMO_8595,axiom,(( (! [V__O,V__A,V__M] : ((s__instance(V__M,s__Process) & s__instance(V__A,s__Agent) & s__instance(V__O,s__Object)) => ((s__instance(V__M,s__Mounting) & s__agent(V__M,V__A) & s__patient(V__M,V__O)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__M)),'(~ s__orientation(V__A,V__O,s__On))') & s__holdsDuring(s__EndFn(s__WhenFn(V__M)),'s__orientation(V__A,V__O,s__On)'))))) ))).

fof(kb_SUMO_8596,axiom,
    s__subclass(s__Stepping,s__BodyMotion) ).

fof(kb_SUMO_8597,axiom,
    s__instance(s__Stepping__t,s__SetOrClass) ).

fof(kb_SUMO_8598,axiom,
    s__documentation(s__Stepping,s__EnglishLanguage,'The &%BodyMotion of extending one foot forward and then bringing the other foot to the same lateral position as the first leg.') ).

fof(kb_SUMO_8599,axiom,
    ! [V__AMBULATE,V__DURATION] :
      ( ( s__instance(V__DURATION,s__TimeInterval)
        & s__instance(V__AMBULATE,s__Process) )
     => ( ( s__instance(V__AMBULATE,s__Ambulating)
          & V__DURATION = s__WhenFn(V__AMBULATE) )
       => ? [V__STEP1,V__STEPN] :
            ( s__instance(V__STEPN,s__Process)
            & s__instance(V__STEP1,s__Process)
            & s__instance(V__STEP1,s__Stepping)
            & s__instance(V__STEPN,s__Stepping)
            & s__subProcess(V__STEP1,V__AMBULATE)
            & s__subProcess(V__STEPN,V__AMBULATE)
            & s__starts(s__WhenFn(V__STEP1),V__DURATION)
            & s__finishes(s__WhenFn(V__STEPN),V__DURATION)
            & V__STEP1 != V__STEPN ) ) ) ).

fof(kb_SUMO_8600,axiom,
    ! [V__S1_START,V__A,V__S1,V__S2_START,V__S2] :
      ( ( s__instance(V__S2,s__Process)
        & s__instance(V__S2_START,s__TimePoint)
        & s__instance(V__S1,s__Process)
        & s__instance(V__A,s__Process)
        & s__instance(V__S1_START,s__TimePoint) )
     => ( ( s__instance(V__A,s__Ambulating)
          & s__subProcess(V__S1,V__A)
          & s__instance(V__S1,s__Stepping)
          & s__subProcess(V__S2,V__A)
          & s__instance(V__S2,s__Stepping)
          & V__S1_START = s__BeginFn(s__WhenFn(V__S1))
          & V__S2_START = s__BeginFn(s__WhenFn(V__S2))
          & ~ ( s__before(V__S1_START,V__S2_START)
              | s__before(V__S2_START,V__S1_START) ) )
       => V__S1 = V__S2 ) ) ).

fof(kb_SUMO_8601,axiom,
    ! [V__STEP,V__AMBULATE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AMBULATE,s__Process)
        & s__instance(V__STEP,s__Process) )
     => ( ( s__instance(V__AMBULATE,s__Ambulating)
          & s__instance(V__STEP,s__Stepping)
          & s__subProcess(V__STEP,V__AMBULATE)
          & s__agent(V__AMBULATE,V__AGENT) )
       => s__agent(V__STEP,V__AGENT) ) ) ).

fof(kb_SUMO_8602,axiom,
    ! [V__STEP,V__AMBULATE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AMBULATE,s__Process)
        & s__instance(V__STEP,s__Process) )
     => ( ( s__instance(V__AMBULATE,s__Ambulating)
          & s__instance(V__STEP,s__Stepping)
          & s__subProcess(V__STEP,V__AMBULATE)
          & s__agent(V__STEP,V__AGENT) )
       => s__agent(V__AMBULATE,V__AGENT) ) ) ).

fof(kb_SUMO_8603,axiom,
    s__subclass(s__Wading,s__Walking) ).

fof(kb_SUMO_8604,axiom,
    s__instance(s__Wading__t,s__SetOrClass) ).

fof(kb_SUMO_8605,axiom,
    s__documentation(s__Wading,s__EnglishLanguage,'Any instance of &%Walking which occurs through a &%BodyOfWater.') ).

fof(kb_SUMO_8606,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__Wading)
       => ? [V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__W,s__WaterArea)
            & s__eventLocated(V__P,V__W) ) ) ) ).

fof(kb_SUMO_8607,axiom,
    s__subclass(s__Jumping,s__BodyMotion) ).

fof(kb_SUMO_8608,axiom,
    s__instance(s__Jumping__t,s__SetOrClass) ).

fof(kb_SUMO_8609,axiom,
    s__subclass(s__Jumping,s__MotionUpward) ).

fof(kb_SUMO_8610,axiom,
    s__documentation(s__Jumping,s__EnglishLanguage,'Any &%MotionUpward which is done by ones body and which results in a situation where ones feet are unsupported.') ).

fof(kb_SUMO_8611,axiom,
    ! [V__A,V__J] :
      ( ( s__instance(V__J,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__J,s__Jumping)
          & s__agent(V__J,V__A) )
       => s__holdsDuring(s__EndFn(s__WhenFn(V__J)),'(~ s__attribute(V__A,s__Standing))') ) ) ).

fof(kb_SUMO_8612,axiom,
    s__subclass(s__Somersaulting,s__BodyMotion) ).

fof(kb_SUMO_8613,axiom,
    s__instance(s__Somersaulting__t,s__SetOrClass) ).

fof(kb_SUMO_8614,axiom,
    s__documentation(s__Somersaulting,s__EnglishLanguage,'Any &%BodyMotion which begins and ends in a &%Sitting position and where the feet roll over the head and return to their original position.') ).

%FOL fof(kb_SUMO_8615,axiom,(( (! [V__A,V__S] : ((s__instance(V__S,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__S,s__Somersaulting) & s__agent(V__S,V__A)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__S)),'s__attribute(V__A,s__Sitting)') & s__holdsDuring(s__EndFn(s__WhenFn(V__S)),'s__attribute(V__A,s__Sitting)'))))) ))).

fof(kb_SUMO_8616,axiom,
    s__subclass(s__Reflecting,s__Radiating) ).

fof(kb_SUMO_8617,axiom,
    s__documentation(s__Reflecting,s__EnglishLanguage,'Any instance of &%Radiating where the radiated waves rebound from a surface, e.g. an echo of sound or a reflection of light.') ).

fof(kb_SUMO_8618,axiom,
    s__subclass(s__ReflectingLight,s__Reflecting) ).

fof(kb_SUMO_8619,axiom,
    s__instance(s__ReflectingLight__t,s__SetOrClass) ).

fof(kb_SUMO_8620,axiom,
    s__instance(s__Reflecting__t,s__SetOrClass) ).

fof(kb_SUMO_8621,axiom,
    s__subclass(s__ReflectingLight,s__RadiatingLight) ).

fof(kb_SUMO_8622,axiom,
    s__documentation(s__ReflectingLight,s__EnglishLanguage,'Those instances of &%RadiatingLight where the &%instrument is not a light source, but is simply a surface which bends light waves that come in contact with it.') ).

fof(kb_SUMO_8623,axiom,
    s__documentation(s__wavelength__m,s__EnglishLanguage,'(wavelength ?RADIATION ?MEASURE) means that the instance of radiation, ?RADIATION, has an average wavelength of ?MEASURE.') ).

fof(kb_SUMO_8624,axiom,
    s__instance(s__wavelength__m,s__SingleValuedRelation) ).

fof(kb_SUMO_8625,axiom,
    s__domain(s__wavelength__m,"1",s__Radiating) ).

fof(kb_SUMO_8626,axiom,
    s__domain(s__wavelength__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_8627,axiom,
    s__subrelation(s__wavelength__m,s__measure__m) ).

fof(kb_SUMO_8628,axiom,
    s__subclass(s__RadiatingInfrared,s__Radiating) ).

fof(kb_SUMO_8629,axiom,
    s__disjoint(s__RadiatingInfrared,s__RadiatingLight) ).

fof(kb_SUMO_8630,axiom,
    s__disjoint(s__RadiatingInfrared,s__RadioEmission) ).

fof(kb_SUMO_8631,axiom,
    s__documentation(s__RadiatingInfrared,s__EnglishLanguage,'Any instance of &%Radiating where the &%wavelengths are longer than those of visible light and shorter than those of radio emissions.') ).

fof(kb_SUMO_8632,axiom,
    s__subclass(s__RadiatingUltraviolet,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_8633,axiom,
    s__instance(s__RadiatingUltraviolet__t,s__SetOrClass) ).

fof(kb_SUMO_8634,axiom,
    s__disjoint(s__RadiatingUltraviolet,s__RadiatingLight) ).

fof(kb_SUMO_8635,axiom,
    s__disjoint(s__RadiatingUltraviolet,s__XRayRadiation) ).

fof(kb_SUMO_8636,axiom,
    s__documentation(s__RadiatingUltraviolet,s__EnglishLanguage,'Any case of &%RadiatingElectromagnetic where the &%wavelengths are shorter than those of visible light and longer than those of X-Rays.') ).

fof(kb_SUMO_8637,axiom,
    s__abbreviation('UV',s__RadiatingUltraviolet) ).

fof(kb_SUMO_8638,axiom,
    s__subclass(s__XRayRadiation,s__Radiating) ).

fof(kb_SUMO_8639,axiom,
    s__instance(s__XRayRadiation__t,s__SetOrClass) ).

fof(kb_SUMO_8640,axiom,
    s__documentation(s__XRayRadiation,s__EnglishLanguage,'Electro-magnetic radiation of short wavelength, often made use of by devices that scan the inside of objects.') ).

fof(kb_SUMO_8641,axiom,
    s__subclass(s__RadiatingVisibleLight,s__RadiatingLight) ).

fof(kb_SUMO_8642,axiom,
    s__instance(s__RadiatingVisibleLight__t,s__SetOrClass) ).

fof(kb_SUMO_8643,axiom,
    s__disjoint(s__RadiatingVisibleLight,s__RadiatingUltraviolet) ).

fof(kb_SUMO_8644,axiom,
    s__documentation(s__RadiatingVisibleLight,s__EnglishLanguage,'Any instance of &%RadiatingLight that can be detected by normal human visual perception.') ).

fof(kb_SUMO_8645,axiom,
    ! [V__R,V__S,V__H] :
      ( ( s__instance(V__H,s__Agent)
        & s__instance(V__S,s__Process) )
     => ( ( s__instance(V__R,s__RadiatingLight)
          & s__instance(V__H,s__Human)
          & s__instance(V__S,s__Seeing)
          & s__agent(V__S,V__H)
          & s__patient(V__S,V__R) )
       => s__instance(V__R,s__RadiatingVisibleLight) ) ) ).

fof(kb_SUMO_8646,axiom,
    s__subclass(s__Sunlight,s__RadiatingLight) ).

fof(kb_SUMO_8647,axiom,
    s__instance(s__Sunlight__t,s__SetOrClass) ).

fof(kb_SUMO_8648,axiom,
    s__documentation(s__Sunlight,s__EnglishLanguage,'Any instance of &%RadiatingLight where the Sun (&%Sol) is the origin.') ).

fof(kb_SUMO_8649,axiom,
    s__subclass(s__RadioReceiver,s__ReceiverDevice) ).

fof(kb_SUMO_8650,axiom,
    s__instance(s__RadioReceiver__t,s__SetOrClass) ).

fof(kb_SUMO_8651,axiom,
    s__documentation(s__RadioReceiver,s__EnglishLanguage,'A &%RadioReceiver is a &%Device for receiving radio broadcast signals from a &%RadioStation.') ).

fof(kb_SUMO_8652,axiom,
    s__subclass(s__Script,s__Collection) ).

fof(kb_SUMO_8653,axiom,
    s__instance(s__Script__t,s__SetOrClass) ).

fof(kb_SUMO_8654,axiom,
    s__documentation(s__Script,s__EnglishLanguage,'The collection of &%Characters in a particular written language. Every &%WrittenCommunication consists of &%Characters written in a particular script. Scripts include different typefaces, as well as entirely different characters. Times Roman is a very specific script. While the latin character set is a general one, that has specific subclasses like Times Roman. Other scripts include Devanagri (which may be expressed in many different more specific typefaces), or Simplified Chinese.') ).

fof(kb_SUMO_8655,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Process)
     => ( s__instance(V__W,s__WrittenCommunication)
       => ? [V__T,V__C,V__S] :
            ( s__instance(V__S,s__Collection)
            & s__instance(V__C,s__SelfConnectedObject)
            & s__instance(V__T,s__Object)
            & s__result(V__W,V__T)
            & s__instance(V__T,s__Text)
            & s__part(V__C,V__T)
            & s__instance(V__C,s__Character)
            & s__instance(V__S,s__Script)
            & s__member(V__C,V__S) ) ) ) ).

fof(kb_SUMO_8656,axiom,
    s__subclass(s__Orthography,s__Procedure) ).

fof(kb_SUMO_8657,axiom,
    s__instance(s__Orthography__t,s__SetOrClass) ).

fof(kb_SUMO_8658,axiom,
    s__documentation(s__Orthography,s__EnglishLanguage,'A method for representing the sounds of a &%Language with written &%Characters.') ).

fof(kb_SUMO_8659,axiom,
    s__subclass(s__Lyrics,s__Text) ).

fof(kb_SUMO_8660,axiom,
    s__instance(s__Lyrics__t,s__SetOrClass) ).

fof(kb_SUMO_8661,axiom,
    s__documentation(s__Lyrics,s__EnglishLanguage,'Any &%Text which is intended to be sung.') ).

fof(kb_SUMO_8662,axiom,
    ! [V__LYRIC] :
      ( s__instance(V__LYRIC,s__Physical)
     => ( s__instance(V__LYRIC,s__Lyrics)
       => s__hasPurpose(V__LYRIC,'(? [V__SING] : (s__instance(V__SING,s__Process) & s__instance(V__SING,s__Singing) & s__patient(V__SING,V__LYRIC)))') ) ) ).

fof(kb_SUMO_8663,axiom,
    s__subclass(s__Paragraph,s__Text) ).

fof(kb_SUMO_8664,axiom,
    s__instance(s__Paragraph__t,s__SetOrClass) ).

fof(kb_SUMO_8665,axiom,
    s__documentation(s__Paragraph,s__EnglishLanguage,'A &%Text which consists of one or more sentences, begins with an indented line, and expresses a single topic.') ).

fof(kb_SUMO_8666,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Paragraph)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__Sentence)
            & s__part(V__S,V__T) ) ) ) ).

fof(kb_SUMO_8667,axiom,
    s__documentation(s__sententialObject__m,s__EnglishLanguage,'(sententialObject ?OBJECT ?SENTENCE) means that the &%NounPhrase ?OBJECT is the object of the &%Sentence ?SENTENCE.') ).

fof(kb_SUMO_8668,axiom,
    s__domain(s__sententialObject__m,"1",s__NounPhrase) ).

fof(kb_SUMO_8669,axiom,
    s__domain(s__sententialObject__m,"2",s__Sentence) ).

fof(kb_SUMO_8670,axiom,
    s__subrelation(s__sententialObject__m,s__grammaticalRelation__m) ).

fof(kb_SUMO_8671,axiom,
    s__documentation(s__sententialSubject__m,s__EnglishLanguage,'(sententialSubject ?SUBJECT ?SENTENCE) means that the &%NounPhrase ?SUBJECT is the subject of the &%Sentence ?SENTENCE.') ).

fof(kb_SUMO_8672,axiom,
    s__domain(s__sententialSubject__m,"1",s__NounPhrase) ).

fof(kb_SUMO_8673,axiom,
    s__domain(s__sententialSubject__m,"2",s__Sentence) ).

fof(kb_SUMO_8674,axiom,
    s__subrelation(s__sententialSubject__m,s__grammaticalRelation__m) ).

fof(kb_SUMO_8675,axiom,
    s__documentation(s__speaksLanguage__m,s__EnglishLanguage,'(speaksLanguage ?AGENT ?LANGUAGE) means that the &%SentientAgent ?AGENT is capable of understanding and/or generating the &%Language ?LANGUAGE.') ).

fof(kb_SUMO_8676,axiom,
    s__instance(s__speaksLanguage__m,s__BinaryPredicate) ).

fof(kb_SUMO_8677,axiom,
    s__domain(s__speaksLanguage__m,"1",s__SentientAgent) ).

fof(kb_SUMO_8678,axiom,
    s__domain(s__speaksLanguage__m,"2",s__Language) ).

fof(kb_SUMO_8679,axiom,
    s__instance(s__MonophonicMusic,s__RelationalAttribute) ).

fof(kb_SUMO_8680,axiom,
    s__documentation(s__MonophonicMusic,s__EnglishLanguage,'&%MakingMusic which has a single part, i.e. &%MakingMusic which cannot be divided into two or more contemporaneous &%subProcesses which are also instances of &%MakingMusic.') ).

fof(kb_SUMO_8681,axiom,
    s__instance(s__PolyphonicMusic,s__RelationalAttribute) ).

fof(kb_SUMO_8682,axiom,
    s__documentation(s__PolyphonicMusic,s__EnglishLanguage,'&%MakingMusic which has two or more parts, i.e. &%MakingMusic which can be divided into two or more contemporaneous &%subProcesses which are also instances of &%MakingMusic.') ).

fof(kb_SUMO_8683,axiom,
    ! [V__MUSIC] :
      ( ( s__instance(V__MUSIC,s__Object)
        & s__instance(V__MUSIC,s__Process) )
     => ( s__attribute(V__MUSIC,s__PolyphonicMusic)
      <=> ? [V__PART1,V__PART2] :
            ( s__instance(V__PART2,s__Process)
            & s__instance(V__PART1,s__Process)
            & s__instance(V__MUSIC,s__MakingMusic)
            & s__instance(V__PART1,s__MakingMusic)
            & s__instance(V__PART2,s__MakingMusic)
            & s__subProcess(V__PART1,V__MUSIC)
            & s__subProcess(V__PART2,V__MUSIC)
            & V__PART1 != V__PART2
            & s__cooccur(V__PART1,V__MUSIC)
            & s__cooccur(V__PART2,V__MUSIC) ) ) ) ).

fof(kb_SUMO_8684,axiom,
    s__subclass(s__MusicalTone,s__RadiatingSound) ).

fof(kb_SUMO_8685,axiom,
    s__instance(s__MusicalTone__t,s__SetOrClass) ).

fof(kb_SUMO_8686,axiom,
    s__documentation(s__MusicalTone,s__EnglishLanguage,'A &%Process of &%RadiatingSound where the sound has a fundamental frequency and 0 or more partial frequencies or unrelated transients or noise components that have a lesser amplitude than the fundamental.') ).

fof(kb_SUMO_8687,axiom,
    s__subclass(s__RadiatingSoundUltrasonic,s__RadiatingSound) ).

fof(kb_SUMO_8688,axiom,
    s__instance(s__RadiatingSoundUltrasonic__t,s__SetOrClass) ).

fof(kb_SUMO_8689,axiom,
    s__documentation(s__RadiatingSoundUltrasonic,s__EnglishLanguage,'All sound waves that have frequencies above those that normal &%Human ears can detect.') ).

fof(kb_SUMO_8690,axiom,
    s__subclass(s__soundFrequency__m,s__BinaryRelation) ).

fof(kb_SUMO_8691,axiom,
    s__instance(s__soundFrequency__t__m,s__SetOrClass) ).

fof(kb_SUMO_8692,axiom,
    s__documentation(s__soundFrequency__m,s__EnglishLanguage,'A relation between a &%Process of &%MusicalTone and the fundamental frequency of that tone.') ).

fof(kb_SUMO_8693,axiom,
    s__domain(s__soundFrequency__m,"1",s__MusicalTone) ).

fof(kb_SUMO_8694,axiom,
    s__domain(s__soundFrequency__m,"2",s__FunctionQuantity) ).

fof(kb_SUMO_8695,axiom,
    s__subclass(s__WrittenCommunication,s__LinguisticCommunication) ).

fof(kb_SUMO_8696,axiom,
    s__instance(s__WrittenCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_8697,axiom,
    s__documentation(s__WrittenCommunication,s__EnglishLanguage,'Any &%LinguisticCommunication where the &%instrument is a &%Text, e.g. a letter, an email, a memo, etc.') ).

fof(kb_SUMO_8698,axiom,
    s__subclass(s__Corresponding,s__LinguisticCommunication) ).

fof(kb_SUMO_8699,axiom,
    s__instance(s__Corresponding__t,s__SetOrClass) ).

fof(kb_SUMO_8700,axiom,
    s__documentation(s__Corresponding,s__EnglishLanguage,'Instances of &%LinguisticCommunication which are achieved by means of &%Texts that are mailed between the persons communicating with one another.') ).

fof(kb_SUMO_8701,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Process)
     => ( s__instance(V__C,s__Corresponding)
       => ? [V__M,V__T] :
            ( s__instance(V__M,s__Process)
            & s__instance(V__M,s__Mailing)
            & s__subProcess(V__M,V__C)
            & s__instance(V__T,s__Text)
            & s__patient(V__M,V__T)
            & s__patient(V__C,V__T) ) ) ) ).

fof(kb_SUMO_8702,axiom,
    s__subclass(s__Reminding,s__Requesting) ).

fof(kb_SUMO_8703,axiom,
    s__instance(s__Reminding__t,s__SetOrClass) ).

fof(kb_SUMO_8704,axiom,
    s__documentation(s__Reminding,s__EnglishLanguage,'Any &%Requesting that is intended to cause a &%Remembering of something.') ).

fof(kb_SUMO_8705,axiom,
    ! [V__REMIND] :
      ( s__instance(V__REMIND,s__Process)
     => ( s__instance(V__REMIND,s__Reminding)
       => ? [V__REMEMBER] :
            ( s__instance(V__REMEMBER,s__Process)
            & s__instance(V__REMEMBER,s__Remembering)
            & s__causes(V__REMIND,V__REMEMBER) ) ) ) ).

fof(kb_SUMO_8706,axiom,
    s__subclass(s__Threatening,s__Committing) ).

fof(kb_SUMO_8707,axiom,
    s__instance(s__Threatening__t,s__SetOrClass) ).

fof(kb_SUMO_8708,axiom,
    s__documentation(s__Threatening,s__EnglishLanguage,'Any &%Committing where the thing promised is something that is deemed undesirable by the &%destination of the &%Committing.') ).

fof(kb_SUMO_8709,axiom,
    ! [V__PROP,V__AGENT,V__DEST,V__THREATEN] :
      ( ( s__instance(V__THREATEN,s__Process)
        & s__instance(V__DEST,s__CognitiveAgent)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__PROP,s__Formula) )
     => ( ( s__instance(V__THREATEN,s__Threatening)
          & s__agent(V__THREATEN,V__AGENT)
          & s__patient(V__THREATEN,V__PROP)
          & s__destination(V__THREATEN,V__DEST) )
       => ~ s__desires(V__DEST,V__PROP) ) ) ).

fof(kb_SUMO_8710,axiom,
    s__subclass(s__Punishing,s__RegulatoryProcess) ).

fof(kb_SUMO_8711,axiom,
    s__instance(s__Punishing__t,s__SetOrClass) ).

fof(kb_SUMO_8712,axiom,
    s__documentation(s__Punishing,s__EnglishLanguage,'A &%RegulatoryProcess where the agent does something to the &%destination that the &%agent knows is undesirable for the &%destination.') ).

fof(kb_SUMO_8713,axiom,
    ! [V__P,V__A,V__D,V__F] :
      ( ( s__instance(V__F,s__Formula)
        & s__instance(V__D,s__CognitiveAgent)
        & s__instance(V__A,s__CognitiveAgent)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__P,s__Punishing)
          & s__agent(V__P,V__A)
          & s__patient(V__P,V__F)
          & s__destination(V__P,V__D) )
       => s__knows(V__A,'(~ s__desires(V__D,V__F))') ) ) ).

fof(kb_SUMO_8714,axiom,
    s__subclass(s__Registering,s__Stating) ).

fof(kb_SUMO_8715,axiom,
    s__instance(s__Registering__t,s__SetOrClass) ).

fof(kb_SUMO_8716,axiom,
    s__subclass(s__Registering,s__PoliticalProcess) ).

fof(kb_SUMO_8717,axiom,
    s__documentation(s__Registering,s__EnglishLanguage,'Submitting official paperwork in a government agency, e.g. filing for divorce, making a legal claim against someone.') ).

fof(kb_SUMO_8718,axiom,
    ! [V__ACTION] :
      ( s__instance(V__ACTION,s__Process)
     => ( s__instance(V__ACTION,s__LegalAction)
       => ? [V__REGISTER] :
            ( s__instance(V__REGISTER,s__Process)
            & s__instance(V__REGISTER,s__Registering)
            & s__subProcess(V__REGISTER,V__ACTION) ) ) ) ).

fof(kb_SUMO_8719,axiom,
    s__subclass(s__Answering,s__Stating) ).

fof(kb_SUMO_8720,axiom,
    s__instance(s__Answering__t,s__SetOrClass) ).

fof(kb_SUMO_8721,axiom,
    s__documentation(s__Answering,s__EnglishLanguage,'Responding to a &%Questioning, i.e. trying to answer someones question.') ).

fof(kb_SUMO_8722,axiom,
    ! [V__ANSWER] :
      ( s__instance(V__ANSWER,s__Physical)
     => ( s__instance(V__ANSWER,s__Answering)
       => ? [V__QUESTION] :
            ( s__instance(V__QUESTION,s__Physical)
            & s__instance(V__QUESTION,s__Questioning)
            & s__refers(V__ANSWER,V__QUESTION)
            & s__earlier(s__WhenFn(V__QUESTION),s__WhenFn(V__ANSWER)) ) ) ) ).

fof(kb_SUMO_8723,axiom,
    s__subclass(s__Arguing,s__Stating) ).

fof(kb_SUMO_8724,axiom,
    s__instance(s__Arguing__t,s__SetOrClass) ).

fof(kb_SUMO_8725,axiom,
    s__documentation(s__Arguing,s__EnglishLanguage,'Any &%Stating which has the form of an &%Argument.') ).

fof(kb_SUMO_8726,axiom,
    ! [V__ARGUE] :
      ( s__instance(V__ARGUE,s__Process)
     => ( s__instance(V__ARGUE,s__Arguing)
       => ? [V__STATEMENT,V__ARGUMENT] :
            ( s__instance(V__ARGUMENT,s__Proposition)
            & s__instance(V__STATEMENT,s__ContentBearingPhysical)
            & s__patient(V__ARGUE,V__STATEMENT)
            & s__instance(V__STATEMENT,s__Statement)
            & s__containsInformation(V__STATEMENT,V__ARGUMENT)
            & s__instance(V__ARGUMENT,s__Argument) ) ) ) ).

fof(kb_SUMO_8727,axiom,
    s__subclass(s__TellingALie,s__LinguisticCommunication) ).

fof(kb_SUMO_8728,axiom,
    s__instance(s__TellingALie__t,s__SetOrClass) ).

fof(kb_SUMO_8729,axiom,
    s__documentation(s__TellingALie,s__EnglishLanguage,'Any &%LinguisticCommunication which is both &%False and believed to be &%False by the &%agent of the &%LinguisticCommunication.') ).

%FOL fof(kb_SUMO_8730,axiom,(( (! [V__AGENT,V__STATE,V__STATEMENT] : ((s__instance(V__STATEMENT,s__Sentence) & s__instance(V__STATE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent)) => ((s__instance(V__STATE,s__TellingALie) & s__agent(V__STATE,V__AGENT) & s__patient(V__STATE,V__STATEMENT)) => s__holdsDuring(s__WhenFn(V__STATE),'s__believes(V__AGENT,s__truth(V__STATEMENT,'$false__m'))')))) ))).

fof(kb_SUMO_8731,axiom,
    s__subclass(s__Founding,s__Declaring) ).

fof(kb_SUMO_8732,axiom,
    s__instance(s__Founding__t,s__SetOrClass) ).

fof(kb_SUMO_8733,axiom,
    s__subclass(s__Founding,s__OrganizationalProcess) ).

fof(kb_SUMO_8734,axiom,
    s__documentation(s__Founding,s__EnglishLanguage,'Setting up an &%Organization.') ).

fof(kb_SUMO_8735,axiom,
    ! [V__FOUND] :
      ( s__instance(V__FOUND,s__Process)
     => ( s__instance(V__FOUND,s__Founding)
       => ? [V__ORG] :
            ( s__instance(V__ORG,s__Organization)
            & s__result(V__FOUND,V__ORG) ) ) ) ).

fof(kb_SUMO_8736,axiom,
    s__subclass(s__Club,s__Organization) ).

fof(kb_SUMO_8737,axiom,
    s__instance(s__Club__t,s__SetOrClass) ).

fof(kb_SUMO_8738,axiom,
    s__documentation(s__Club,s__EnglishLanguage,'A Club is an &%Organization of people that share some &%desire') ).

fof(kb_SUMO_8739,axiom,
    ! [V__CLUB,V__MEM1,V__MEM2] :
      ( ( s__instance(V__MEM2,s__SelfConnectedObject)
        & s__instance(V__MEM2,s__CognitiveAgent)
        & s__instance(V__MEM1,s__SelfConnectedObject)
        & s__instance(V__MEM1,s__CognitiveAgent)
        & s__instance(V__CLUB,s__Collection) )
     => ( ( s__instance(V__CLUB,s__Club)
          & s__member(V__MEM1,V__CLUB)
          & s__member(V__MEM2,V__CLUB) )
       => ? [V__DESIRE] :
            ( s__instance(V__DESIRE,s__Formula)
            & s__desires(V__MEM1,V__DESIRE)
            & s__desires(V__MEM2,V__DESIRE) ) ) ) ).

fof(kb_SUMO_8740,axiom,
    s__documentation(s__yearOfFounding__m,s__EnglishLanguage,'(yearOfFounding ?ORG ?NUMBER) means that the &%Organization ?ORG was founded in the year expressed in ?NUMBER.') ).

fof(kb_SUMO_8741,axiom,
    s__instance(s__yearOfFounding__m,s__BinaryPredicate) ).

fof(kb_SUMO_8742,axiom,
    s__instance(s__yearOfFounding__m,s__AsymmetricRelation) ).

fof(kb_SUMO_8743,axiom,
    s__domain(s__yearOfFounding__m,"1",s__Organization) ).

fof(kb_SUMO_8744,axiom,
    s__domain(s__yearOfFounding__m,"2",s__Integer) ).

fof(kb_SUMO_8745,axiom,
    ! [V__O,V__Y] :
      ( ( s__instance(V__Y,s__Integer)
        & s__instance(V__O,s__Organization) )
     => ( s__yearOfFounding(V__O,V__Y)
       => s__dateEstablished(V__O,s__YearFn(V__Y)) ) ) ).

fof(kb_SUMO_8746,axiom,
    ! [V__O,V__Y] :
      ( ( s__instance(V__Y,s__Integer)
        & s__instance(V__O,s__Organization) )
     => ( s__yearOfFounding(V__O,V__Y)
      <=> ? [V__F] :
            ( s__instance(V__F,s__TimeInterval)
            & s__instance(V__F,s__Process)
            & s__overlapsTemporally(V__F,s__YearFn(V__Y))
            & s__instance(V__F,s__Founding)
            & s__result(V__F,V__O) ) ) ) ).

fof(kb_SUMO_8747,axiom,
    s__instance(s__dateEstablished__m,s__BinaryPredicate) ).

fof(kb_SUMO_8748,axiom,
    s__domain(s__dateEstablished__m,"1",s__Physical) ).

fof(kb_SUMO_8749,axiom,
    s__domainSubclass(s__dateEstablished__m,"2",s__TimePosition) ).

fof(kb_SUMO_8750,axiom,
    s__documentation(s__dateEstablished__m,s__EnglishLanguage,'(&%dateEstablished ?THING ?TIME) means that the &%Physical ?THING was founded on the date indicated by ?TIME. For example, (&%dateEstablished &%UnitedNations (&%DayFn 26 (&%MonthFn &%June (&%YearFn 1945)))).') ).

fof(kb_SUMO_8751,axiom,
    ! [V__THING,V__DATE] :
      ( ( s__subclass(V__DATE,s__TimePosition)
        & s__instance(V__DATE,s__SetOrClass)
        & s__instance(V__THING,s__Physical) )
     => ( s__dateEstablished(V__THING,V__DATE)
       => ? [V__DAY] :
            ( s__instance(V__DAY,s__TimeInterval)
            & s__instance(V__DAY,V__DATE)
            & s__overlapsTemporally(V__DAY,s__BeginFn(s__WhenFn(V__THING))) ) ) ) ).

fof(kb_SUMO_8752,axiom,
    s__instance(s__dateUsed__m,s__TernaryPredicate) ).

fof(kb_SUMO_8753,axiom,
    s__domain(s__dateUsed__m,"1",s__Object) ).

fof(kb_SUMO_8754,axiom,
    s__domain(s__dateUsed__m,"2",s__TimePoint) ).

fof(kb_SUMO_8755,axiom,
    s__domain(s__dateUsed__m,"3",s__Agent) ).

fof(kb_SUMO_8756,axiom,
    s__documentation(s__dateUsed__m,s__EnglishLanguage,'The date an &%Object is used by an &%Agent.') ).

fof(kb_SUMO_8757,axiom,
    s__termFormat(s__EnglishLanguage,s__dateUsed__m,'date used') ).

fof(kb_SUMO_8758,axiom,
    ! [V__OBJECT,V__AGENT,V__DATE] :
      ( ( s__instance(V__DATE,s__TimePoint)
        & s__instance(V__DATE,s__TimeInterval)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__dateUsed(V__OBJECT,V__DATE,V__AGENT)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__patient(V__PROCESS,V__OBJECT)
            & s__agent(V__PROCESS,V__AGENT)
            & s__uses(V__OBJECT,V__AGENT)
            & s__overlapsTemporally(V__DATE,s__WhenFn(V__PROCESS)) ) ) ) ).

fof(kb_SUMO_8759,axiom,
    s__subclass(s__Accrediting,s__Declaring) ).

fof(kb_SUMO_8760,axiom,
    s__instance(s__Accrediting__t,s__SetOrClass) ).

fof(kb_SUMO_8761,axiom,
    s__documentation(s__Accrediting,s__EnglishLanguage,'Any process of certifying an &%EducationalOrganization.') ).

fof(kb_SUMO_8762,axiom,
    ! [V__A,V__EO] :
      ( s__instance(V__A,s__Process)
     => ( ( s__instance(V__A,s__Accrediting)
          & s__patient(V__A,V__EO) )
       => s__instance(V__EO,s__EducationalOrganization) ) ) ).

fof(kb_SUMO_8763,axiom,
    s__subclass(s__Indicating,s__Communication) ).

fof(kb_SUMO_8764,axiom,
    s__subclass(s__Indicating,s__BodyMotion) ).

fof(kb_SUMO_8765,axiom,
    s__instance(s__Indicating__t,s__SetOrClass) ).

fof(kb_SUMO_8766,axiom,
    s__documentation(s__Indicating,s__EnglishLanguage,'Pointing out a person, place or thing with ones hand or with an &%Artifact.') ).

fof(kb_SUMO_8767,axiom,
    s__subclass(s__Divorcing,s__Declaring) ).

fof(kb_SUMO_8768,axiom,
    s__instance(s__Divorcing__t,s__SetOrClass) ).

fof(kb_SUMO_8769,axiom,
    s__documentation(s__Divorcing,s__EnglishLanguage,'A &%LegalAction whereby a marriage (&%Wedding) is dissolved. This includes annulments.') ).

%FOL fof(kb_SUMO_8770,axiom,(( (! [V__D] : (s__instance(V__D,s__TimeInterval) => (s__instance(V__D,s__Divorcing) => (? [V__P1,V__P2,V__T1,V__T2] : (s__instance(V__T2,s__TimeInterval) & s__instance(V__T1,s__TimeInterval) & s__instance(V__P2,s__Human) & s__instance(V__P1,s__Human) & s__holdsDuring(V__T1,'s__spouse(V__P1,V__P2)') & s__holdsDuring(V__T2,'(~ s__spouse(V__P1,V__P2))') & s__finishes(V__T1,V__D) & s__starts(V__T2,V__D)))))) ))).

fof(kb_SUMO_8771,axiom,
    s__subclass(s__Appointing,s__Declaring) ).

fof(kb_SUMO_8772,axiom,
    s__instance(s__Appointing__t,s__SetOrClass) ).

fof(kb_SUMO_8773,axiom,
    s__documentation(s__Appointing,s__EnglishLanguage,'Any instance of &%Declaring by which the patient is assigned to a &%Position within an &%Organization where the patient previously had no position. For example, the appointments of people to non-elective offices in a government.') ).

%FOL fof(kb_SUMO_8774,axiom,(( (! [V__A,V__H] : ((s__instance(V__H,s__Human) & s__instance(V__A,s__Process)) => ((s__instance(V__A,s__Appointing) & s__patient(V__A,V__H)) => (? [V__P,V__ORG] : (s__instance(V__ORG,s__Organization) & s__instance(V__P,s__Position) & s__holdsDuring(s__BeginFn(s__WhenFn(V__A)),'(~ s__occupiesPosition(V__H,V__P,V__ORG))') & s__holdsDuring(s__EndFn(s__WhenFn(V__A)),'s__occupiesPosition(V__H,V__P,V__ORG)')))))) ))).

fof(kb_SUMO_8775,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Process)
     => ( s__instance(V__A,s__Appointing)
       => ~ ? [V__H] :
              ( s__instance(V__H,s__Agent)
              & s__agent(V__A,V__H)
              & s__instance(V__H,s__Public) ) ) ) ).

fof(kb_SUMO_8776,axiom,
    s__subclass(s__TurningOffDevice,s__InternalChange) ).

fof(kb_SUMO_8777,axiom,
    s__instance(s__TurningOffDevice__t,s__SetOrClass) ).

fof(kb_SUMO_8778,axiom,
    s__documentation(s__TurningOffDevice,s__EnglishLanguage,'Any &%Process whose result is that the patient of the process is in the state of &%DeviceOff. In other words, this class covers any process of turning off a device, e.g. turning off the lights, switching off a television set, etc.') ).

%FOL fof(kb_SUMO_8779,axiom,(( (! [V__P,V__D] : ((s__instance(V__D,s__Object) & s__instance(V__P,s__Process)) => ((s__instance(V__P,s__TurningOffDevice) & s__patient(V__P,V__D)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__P)),'s__attribute(V__D,s__DeviceOn)') & s__holdsDuring(s__EndFn(s__WhenFn(V__P)),'s__attribute(V__D,s__DeviceOff)'))))) ))).

fof(kb_SUMO_8780,axiom,
    ! [V__P,V__D] :
      ( s__instance(V__P,s__Process)
     => ( ( s__instance(V__P,s__TurningOffDevice)
          & s__patient(V__P,V__D) )
       => s__instance(V__D,s__Device) ) ) ).

fof(kb_SUMO_8781,axiom,
    s__subclass(s__TurningOnDevice,s__InternalChange) ).

fof(kb_SUMO_8782,axiom,
    s__instance(s__TurningOnDevice__t,s__SetOrClass) ).

fof(kb_SUMO_8783,axiom,
    s__documentation(s__TurningOnDevice,s__EnglishLanguage,'Any &%Process whose result is that the patient of the process is in the state of &%DeviceOn. In other words, this class covers any process of turning on a device, e.g. turning on the lights, switching on a television set, etc.') ).

%FOL fof(kb_SUMO_8784,axiom,(( (! [V__P,V__D] : ((s__instance(V__D,s__Object) & s__instance(V__P,s__Process)) => ((s__instance(V__P,s__TurningOnDevice) & s__patient(V__P,V__D)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__P)),'s__attribute(V__D,s__DeviceOff)') & s__holdsDuring(s__EndFn(s__WhenFn(V__P)),'s__attribute(V__D,s__DeviceOn)'))))) ))).

fof(kb_SUMO_8785,axiom,
    ! [V__P,V__D] :
      ( s__instance(V__P,s__Process)
     => ( ( s__instance(V__P,s__TurningOnDevice)
          & s__patient(V__P,V__D) )
       => s__instance(V__D,s__Device) ) ) ).

fof(kb_SUMO_8786,axiom,
    s__subclass(s__Projectile,s__Weapon) ).

fof(kb_SUMO_8787,axiom,
    s__documentation(s__Projectile,s__EnglishLanguage,'A missile, bullet, etc. that is fired from a &%Weapon.') ).

fof(kb_SUMO_8788,axiom,
    ! [V__PROJECTILE] :
      ( s__instance(V__PROJECTILE,s__Object)
     => ( s__instance(V__PROJECTILE,s__Projectile)
       => s__capability(s__Shooting,s__patient__m,V__PROJECTILE) ) ) ).

fof(kb_SUMO_8789,axiom,
    s__subclass(s__ProjectileShell,s__Container) ).

fof(kb_SUMO_8790,axiom,
    s__instance(s__ProjectileShell__t,s__SetOrClass) ).

fof(kb_SUMO_8791,axiom,
    s__documentation(s__ProjectileShell,s__EnglishLanguage,'The outer casing of a &%Projectile.') ).

fof(kb_SUMO_8792,axiom,
    ! [V__PROJECTILE] :
      ( s__instance(V__PROJECTILE,s__Object)
     => ( s__instance(V__PROJECTILE,s__Projectile)
       => ? [V__SHELL] :
            ( s__instance(V__SHELL,s__Object)
            & s__instance(V__SHELL,s__ProjectileShell)
            & s__part(V__SHELL,V__PROJECTILE) ) ) ) ).

fof(kb_SUMO_8793,axiom,
    s__subclass(s__ProjectileLauncher,s__Weapon) ).

fof(kb_SUMO_8794,axiom,
    s__instance(s__ProjectileLauncher__t,s__SetOrClass) ).

fof(kb_SUMO_8795,axiom,
    s__documentation(s__ProjectileLauncher,s__EnglishLanguage,'A &%Weapon that shoots a &%Projectile.') ).

fof(kb_SUMO_8796,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__ProjectileLauncher)
       => s__capability(s__Shooting,s__instrument__m,V__L) ) ) ).

fof(kb_SUMO_8797,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Shooting)
       => ? [V__P,V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__P,s__Projectile)
            & s__patient(V__S,V__P)
            & s__instance(V__L,s__ProjectileLauncher)
            & s__instrument(V__S,V__L) ) ) ) ).

fof(kb_SUMO_8798,axiom,
    s__subclass(s__Spear,s__Weapon) ).

fof(kb_SUMO_8799,axiom,
    s__instance(s__Spear__t,s__SetOrClass) ).

fof(kb_SUMO_8800,axiom,
    s__documentation(s__Spear,s__EnglishLanguage,'A &%Weapon with a long handle and a short blade.') ).

fof(kb_SUMO_8801,axiom,
    s__subclass(s__Sword,s__Weapon) ).

fof(kb_SUMO_8802,axiom,
    s__instance(s__Sword__t,s__SetOrClass) ).

fof(kb_SUMO_8803,axiom,
    s__documentation(s__Sword,s__EnglishLanguage,'A &%Weapon with a long blade and covered handle.') ).

fof(kb_SUMO_8804,axiom,
    s__subclass(s__Whip,s__Weapon) ).

fof(kb_SUMO_8805,axiom,
    s__instance(s__Whip__t,s__SetOrClass) ).

fof(kb_SUMO_8806,axiom,
    s__documentation(s__Whip,s__EnglishLanguage,'A &%Weapon that consists of a thin strand of &%Fabric, usually &%Leather, and a handle by which the strand is impelled at a high rate of speed.') ).

fof(kb_SUMO_8807,axiom,
    s__subclass(s__Gun,s__Weapon) ).

fof(kb_SUMO_8808,axiom,
    s__instance(s__Gun__t,s__SetOrClass) ).

fof(kb_SUMO_8809,axiom,
    s__subclass(s__Gun,s__ProjectileLauncher) ).

fof(kb_SUMO_8810,axiom,
    s__partition_3(s__Gun,s__ArtilleryGun,s__Firearm) ).

fof(kb_SUMO_8811,axiom,
    s__documentation(s__Gun,s__EnglishLanguage,'A &%Weapon that shoots a &%Projectile.') ).

fof(kb_SUMO_8812,axiom,
    ! [V__GUN] :
      ( s__instance(V__GUN,s__Object)
     => ( s__instance(V__GUN,s__Gun)
       => s__capability(s__Shooting,s__instrument__m,V__GUN) ) ) ).

fof(kb_SUMO_8813,axiom,
    ! [V__SHOOT] :
      ( s__instance(V__SHOOT,s__Process)
     => ( s__instance(V__SHOOT,s__Shooting)
       => ? [V__PROJECTILE,V__GUN] :
            ( s__instance(V__GUN,s__Object)
            & s__instance(V__PROJECTILE,s__Projectile)
            & s__patient(V__SHOOT,V__PROJECTILE)
            & s__instance(V__GUN,s__Gun)
            & s__instrument(V__SHOOT,V__GUN) ) ) ) ).

fof(kb_SUMO_8814,axiom,
    s__subclass(s__MortarGun,s__ArtilleryGun) ).

fof(kb_SUMO_8815,axiom,
    s__instance(s__MortarGun__t,s__SetOrClass) ).

fof(kb_SUMO_8816,axiom,
    s__documentation(s__MortarGun,s__EnglishLanguage,'A short-range &%Gun that is positioned on the ground at a high angle and fires explosive shells.') ).

fof(kb_SUMO_8817,axiom,
    s__subclass(s__Bullet,s__Projectile) ).

fof(kb_SUMO_8818,axiom,
    s__instance(s__Bullet__t,s__SetOrClass) ).

fof(kb_SUMO_8819,axiom,
    s__documentation(s__Bullet,s__EnglishLanguage,'A &%Projectile that is designed to be fired by a &%Gun.') ).

fof(kb_SUMO_8820,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Physical)
     => ( s__instance(V__B,s__Bullet)
       => s__hasPurpose(V__B,'(? [V__S,V__GUN] : (s__instance(V__GUN,s__Object) & s__instance(V__S,s__Process) & s__instance(V__S,s__Shooting) & s__instrument(V__S,V__GUN) & s__instance(V__GUN,s__Gun) & s__patient(V__S,V__B)))') ) ) ).

fof(kb_SUMO_8821,axiom,
    s__subclass(s__BulletCartridge,s__Projectile) ).

fof(kb_SUMO_8822,axiom,
    s__instance(s__BulletCartridge__t,s__SetOrClass) ).

fof(kb_SUMO_8823,axiom,
    s__documentation(s__BulletCartridge,s__EnglishLanguage,'The entire projectile consisting of a bullet, casing, gunpowder, and primer.') ).

fof(kb_SUMO_8824,axiom,
    s__termFormat(s__EnglishLanguage,s__BulletCartridge,'bullet cartridge') ).

fof(kb_SUMO_8825,axiom,
    ! [V__CARTRIDGE] :
      ( s__instance(V__CARTRIDGE,s__Object)
     => ( s__instance(V__CARTRIDGE,s__BulletCartridge)
       => s__hasPurpose(V__CARTRIDGE,'(? [V__BULLET,V__CASE] : (s__instance(V__CASE,s__Object) & s__instance(V__BULLET,s__Object) & s__instance(V__BULLET,s__Bullet) & s__instance(V__CASE,s__CartridgeCase) & s__properPart(V__BULLET,V__CARTRIDGE) & s__properPart(V__CASE,V__CARTRIDGE)))') ) ) ).

fof(kb_SUMO_8826,axiom,
    s__subclass(s__CartridgeCase,s__EngineeringComponent) ).

fof(kb_SUMO_8827,axiom,
    s__instance(s__CartridgeCase__t,s__SetOrClass) ).

fof(kb_SUMO_8828,axiom,
    s__documentation(s__CartridgeCase,s__EnglishLanguage,'the part of a cartridge that holds the bullet') ).

fof(kb_SUMO_8829,axiom,
    s__termFormat(s__EnglishLanguage,s__CartridgeCase,case) ).

fof(kb_SUMO_8830,axiom,
    ! [V__CASE] :
      ( s__instance(V__CASE,s__Agent)
     => ( s__instance(V__CASE,s__CartridgeCase)
       => ? [V__CARTRIDGE,V__BULLET,V__K] :
            ( s__instance(V__K,s__Process)
            & s__instance(V__BULLET,s__Object)
            & s__instance(V__CARTRIDGE,s__Object)
            & s__instance(V__CARTRIDGE,s__BulletCartridge)
            & s__instance(V__BULLET,s__Bullet)
            & s__instance(V__K,s__Keeping)
            & s__properPart(V__CASE,V__CARTRIDGE)
            & s__properPart(V__BULLET,V__CARTRIDGE)
            & s__agent(V__K,V__CASE)
            & s__patient(V__K,V__BULLET) ) ) ) ).

fof(kb_SUMO_8831,axiom,
    s__subclass(s__GunBarrel,s__EngineeringComponent) ).

fof(kb_SUMO_8832,axiom,
    s__instance(s__GunBarrel__t,s__SetOrClass) ).

fof(kb_SUMO_8833,axiom,
    s__documentation(s__GunBarrel,s__EnglishLanguage,'The part of a &%Gun through which a &%Projectile travels when it is fired.') ).

fof(kb_SUMO_8834,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__GunBarrel)
       => ? [V__G] :
            ( s__instance(V__G,s__Object)
            & s__instance(V__G,s__Gun)
            & s__part(V__B,V__G) ) ) ) ).

fof(kb_SUMO_8835,axiom,
    ! [V__P,V__B,V__S,V__G,V__GUN] :
      ( ( s__instance(V__GUN,s__Object)
        & s__instance(V__G,s__Object)
        & s__instance(V__S,s__Process)
        & s__instance(V__B,s__Object) )
     => ( ( s__instance(V__G,s__Gun)
          & s__instance(V__B,s__GunBarrel)
          & s__part(V__B,V__G)
          & s__instance(V__S,s__Shooting)
          & s__instrument(V__S,V__GUN)
          & s__patient(V__S,V__P)
          & s__instance(V__P,s__Projectile) )
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Motion)
            & s__subProcess(V__SUB,V__S)
            & s__path(V__SUB,V__B) ) ) ) ).

fof(kb_SUMO_8836,axiom,
    s__subclass(s__GunPowder,s__Mixture) ).

fof(kb_SUMO_8837,axiom,
    s__instance(s__GunPowder__t,s__SetOrClass) ).

fof(kb_SUMO_8838,axiom,
    s__documentation(s__GunPowder,s__EnglishLanguage,'A &%Mixture of potassium nitrate, sulfur, and charcoal that is used in &%ExplosiveDevices and to propell &%Projectiles in &%ProjectileWeapons.') ).

fof(kb_SUMO_8839,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__GunPowder)
       => s__capability(s__Explosion,s__instrument__m,V__P) ) ) ).

fof(kb_SUMO_8840,axiom,
    s__subclass(s__GunTrigger,s__EngineeringComponent) ).

fof(kb_SUMO_8841,axiom,
    s__subclass(s__GunTrigger,s__Lever) ).

fof(kb_SUMO_8842,axiom,
    s__instance(s__GunTrigger__t,s__SetOrClass) ).

fof(kb_SUMO_8843,axiom,
    s__instance(s__Lever__t,s__SetOrClass) ).

fof(kb_SUMO_8844,axiom,
    s__documentation(s__GunTrigger,s__EnglishLanguage,'The part of the &%Gun which is pulled in &%Shooting the &%Gun.') ).

fof(kb_SUMO_8845,axiom,
    s__typicalPart(s__GunTrigger,s__Gun) ).

fof(kb_SUMO_8846,axiom,
    s__typicallyContainsPart(s__GunTrigger,s__Gun) ).

fof(kb_SUMO_8847,axiom,
    s__subclass(s__LoadingWeapon,s__Inserting) ).

fof(kb_SUMO_8848,axiom,
    s__instance(s__LoadingWeapon__t,s__SetOrClass) ).

fof(kb_SUMO_8849,axiom,
    s__documentation(s__LoadingWeapon,s__EnglishLanguage,'Inserting ammunition into a &%ProjectileWeapon in such a way that the ammunition can be fired by the weapon.') ).

fof(kb_SUMO_8850,axiom,
    ! [V__P,V__L] :
      ( s__instance(V__L,s__Process)
     => ( ( s__instance(V__L,s__LoadingWeapon)
          & s__patient(V__L,V__P) )
       => s__instance(V__P,s__Projectile) ) ) ).

fof(kb_SUMO_8851,axiom,
    ! [V__W,V__L] :
      ( s__instance(V__L,s__Process)
     => ( ( s__instance(V__L,s__LoadingWeapon)
          & s__destination(V__L,V__W) )
       => s__instance(V__W,s__ProjectileLauncher) ) ) ).

fof(kb_SUMO_8852,axiom,
    s__instance(s__effectiveRange__m,s__BinaryPredicate) ).

fof(kb_SUMO_8853,axiom,
    s__instance(s__effectiveRange__m,s__SingleValuedRelation) ).

fof(kb_SUMO_8854,axiom,
    s__subrelation(s__effectiveRange__m,s__measure__m) ).

fof(kb_SUMO_8855,axiom,
    s__domain(s__effectiveRange__m,"1",s__Device) ).

fof(kb_SUMO_8856,axiom,
    s__domain(s__effectiveRange__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_8857,axiom,
    s__documentation(s__effectiveRange__m,s__EnglishLanguage,'Models the effective range of some device that is able to move by itself (like vehicles, rockets and so on) or move other things (like weapons).') ).

fof(kb_SUMO_8858,axiom,
    ! [V__DAMAGING,V__O,V__LM,V__LM1,V__GUN] :
      ( ( s__instance(V__GUN,s__Device)
        & s__instance(V__LM1,s__LengthMeasure)
        & s__instance(V__LM,s__LengthMeasure)
        & s__instance(V__O,s__Object) )
     => ( ( s__instance(V__GUN,s__Gun)
          & s__effectiveRange(V__GUN,V__LM)
          & s__distance(V__GUN,V__O,V__LM1)
          & ~ ? [V__O2] :
                ( s__instance(V__O2,s__Object)
                & s__between(V__O,V__O2,V__GUN) )
          & lesseq(V__LM1,V__LM) )
       => s__capability(s__KappaFn(V__DAMAGING,'(s__instance(V__DAMAGING,s__Damaging) & s__patient(V__DAMAGING,V__O))'),s__instrument__m,V__GUN) ) ) ).

fof(kb_SUMO_8859,axiom,
    ! [V__KILLING,V__O,V__LM,V__LM1,V__GUN] :
      ( ( s__instance(V__GUN,s__Device)
        & s__instance(V__LM1,s__LengthMeasure)
        & s__instance(V__LM,s__LengthMeasure)
        & s__instance(V__O,s__Object) )
     => ( ( s__instance(V__GUN,s__Gun)
          & s__effectiveRange(V__GUN,V__LM)
          & s__distance(V__GUN,V__O,V__LM1)
          & s__instance(V__O,s__Organism)
          & ~ ? [V__O2] :
                ( s__instance(V__O2,s__Object)
                & s__between(V__O,V__O2,V__GUN) )
          & lesseq(V__LM1,V__LM) )
       => s__capability(s__KappaFn(V__KILLING,'(s__instance(V__KILLING,s__Killing) & s__patient(V__KILLING,V__O))'),s__instrument__m,V__GUN) ) ) ).

fof(kb_SUMO_8860,axiom,
    s__subclass(s__GunStock,s__EngineeringComponent) ).

fof(kb_SUMO_8861,axiom,
    s__instance(s__GunStock__t,s__SetOrClass) ).

fof(kb_SUMO_8862,axiom,
    s__documentation(s__GunStock,s__EnglishLanguage,'The part of a &%Gun that is placed against the shoulder to absorb some of the recoil action when it is fired.') ).

fof(kb_SUMO_8863,axiom,
    ! [V__STOCK] :
      ( s__instance(V__STOCK,s__Object)
     => ( s__instance(V__STOCK,s__GunStock)
       => ? [V__GUN] :
            ( s__instance(V__GUN,s__Object)
            & s__instance(V__GUN,s__Gun)
            & s__part(V__STOCK,V__GUN) ) ) ) ).

fof(kb_SUMO_8864,axiom,
    s__subclass(s__WeaponOfMassDestruction,s__Weapon) ).

fof(kb_SUMO_8865,axiom,
    s__instance(s__WeaponOfMassDestruction__t,s__SetOrClass) ).

fof(kb_SUMO_8866,axiom,
    s__documentation(s__WeaponOfMassDestruction,s__EnglishLanguage,'Nuclear, chemical and biological weapons. What these weapons have in common is that they are designed to kill large numbers of people indiscriminately.') ).

fof(kb_SUMO_8867,axiom,
    s__subclass(s__Handle,s__EngineeringComponent) ).

fof(kb_SUMO_8868,axiom,
    s__instance(s__Handle__t,s__SetOrClass) ).

fof(kb_SUMO_8869,axiom,
    s__documentation(s__Handle,s__EnglishLanguage,'The part or parts of an &%Artifact that are designed to be held with the &%Hands when the &%Artifact is used or carried.') ).

fof(kb_SUMO_8870,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Physical)
     => ( s__instance(V__H,s__Handle)
       => s__hasPurpose(V__H,'(? [V__G,V__D] : (s__instance(V__D,s__Object) & s__instance(V__G,s__Process) & s__instance(V__G,s__Grabbing) & s__patient(V__G,V__H) & s__instrument(V__G,V__D) & s__instance(V__D,s__Hand)))') ) ) ).

fof(kb_SUMO_8871,axiom,
    s__subclass(s__Shield,s__Artifact) ).

fof(kb_SUMO_8872,axiom,
    s__instance(s__Shield__t,s__SetOrClass) ).

fof(kb_SUMO_8873,axiom,
    s__documentation(s__Shield,s__EnglishLanguage,'An &%Artifact that is held by the hand or whole arm and is used to prevent injuries from &%Weapons.') ).

%FOL fof(kb_SUMO_8874,axiom,(( (! [V__S] : ((s__subclass(V__S,s__Process) & s__instance(V__S,s__Physical) & s__instance(V__S,s__SetOrClass)) => (s__instance(V__S,s__Shield) => s__hasPurpose(V__S,'s__prevents(V__S,s__Injuring)')))) ))).

fof(kb_SUMO_8875,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Shield)
       => ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__H,s__Handle)
            & s__part(V__H,V__S) ) ) ) ).

fof(kb_SUMO_8876,axiom,
    s__subclass(s__Mast,s__Artifact) ).

fof(kb_SUMO_8877,axiom,
    s__instance(s__Mast__t,s__SetOrClass) ).

fof(kb_SUMO_8878,axiom,
    s__documentation(s__Mast,s__EnglishLanguage,'A large pole in the center of a &%WaterVehicle which is used to support a sail.') ).

fof(kb_SUMO_8879,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Mast)
       => ? [V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__W,s__WaterVehicle)
            & s__part(V__M,V__W) ) ) ) ).

fof(kb_SUMO_8880,axiom,
    s__subclass(s__WingDevice,s__EngineeringComponent) ).

fof(kb_SUMO_8881,axiom,
    s__instance(s__WingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_8882,axiom,
    s__documentation(s__WingDevice,s__EnglishLanguage,'The wings of &%Aircraft, i.e. the parts of &%Aircraft that allow them to become and remain airborne.') ).

fof(kb_SUMO_8883,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__WingDevice)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Aircraft)
            & s__part(V__W,V__A) ) ) ) ).

fof(kb_SUMO_8884,axiom,
    s__subclass(s__Tube,s__Artifact) ).

fof(kb_SUMO_8885,axiom,
    s__instance(s__Tube__t,s__SetOrClass) ).

fof(kb_SUMO_8886,axiom,
    s__documentation(s__Tube,s__EnglishLanguage,'A long, narrow, and hollow &%Artifact that is designed for moving &%Fluids from place to another.') ).

fof(kb_SUMO_8887,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Tube)
       => s__hasPurpose(V__T,'(? [V__P,V__OBJ] : (s__instance(V__OBJ,s__Object) & s__instance(V__P,s__Motion) & s__instance(V__P,s__Transfer) & s__path(V__P,V__T) & s__patient(V__P,V__OBJ) & s__attribute(V__OBJ,s__Fluid)))') ) ) ).

fof(kb_SUMO_8888,axiom,
    s__subclass(s__PhotographicFilm,s__Artifact) ).

fof(kb_SUMO_8889,axiom,
    s__instance(s__PhotographicFilm__t,s__SetOrClass) ).

fof(kb_SUMO_8890,axiom,
    s__documentation(s__PhotographicFilm,s__EnglishLanguage,'Celluloid covered with an emulsion which can be converted into photographic negatives by a &%Camera.') ).

fof(kb_SUMO_8891,axiom,
    s__subclass(s__PictureFrame,s__Artifact) ).

fof(kb_SUMO_8892,axiom,
    s__instance(s__PictureFrame__t,s__SetOrClass) ).

fof(kb_SUMO_8893,axiom,
    s__documentation(s__PictureFrame,s__EnglishLanguage,'A frame which surrounds a &%PaintedPicture or &%Photograph and has the function of protecting and accenting the picture.') ).

fof(kb_SUMO_8894,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__PictureFrame)
       => s__hasPurpose(V__F,'(? [V__P] : (s__instance(V__P,s__Object) & s__meetsSpatially(V__F,V__P) & (s__instance(V__P,s__PaintedPicture) | s__instance(V__P,s__Photograph))))') ) ) ).

fof(kb_SUMO_8895,axiom,
    s__subclass(s__Shelf,s__Artifact) ).

fof(kb_SUMO_8896,axiom,
    s__instance(s__Shelf__t,s__SetOrClass) ).

fof(kb_SUMO_8897,axiom,
    s__documentation(s__Shelf,s__EnglishLanguage,'An piece of &%Furniture or part of a piece of &%Furniture that is used for keeping or displaying things.') ).

fof(kb_SUMO_8898,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Shelf)
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__Furniture)
            & s__part(V__S,V__F) ) ) ) ).

fof(kb_SUMO_8899,axiom,
    s__subclass(s__AutomaticGun,s__Gun) ).

fof(kb_SUMO_8900,axiom,
    s__instance(s__AutomaticGun__t,s__SetOrClass) ).

fof(kb_SUMO_8901,axiom,
    s__documentation(s__AutomaticGun,s__EnglishLanguage,'A &%Gun that fires a burst of &%Projectiles with each pull of the trigger. Also known as a machine gun.') ).

fof(kb_SUMO_8902,axiom,
    ! [V__P,V__T,V__G] :
      ( ( s__instance(V__G,s__Object)
        & s__instance(V__T,s__Process)
        & s__instance(V__T,s__Object)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__G,s__AutomaticGun)
          & s__instance(V__P,s__Pulling)
          & s__patient(V__T,s__GunTrigger)
          & s__part(V__T,V__G) )
       => ? [V__S1,V__S2] :
            ( s__instance(V__S2,s__Process)
            & s__instance(V__S1,s__Process)
            & s__instance(V__S1,s__Shooting)
            & s__instance(V__S2,s__Shooting)
            & s__instrument(V__S1,V__G)
            & s__instrument(V__S2,V__G)
            & V__S1 != V__S2
            & s__causes(V__P,V__S1)
            & s__causes(V__P,V__S2) ) ) ) ).

fof(kb_SUMO_8903,axiom,
    s__subclass(s__ArtilleryGun,s__Gun) ).

fof(kb_SUMO_8904,axiom,
    s__instance(s__ArtilleryGun__t,s__SetOrClass) ).

fof(kb_SUMO_8905,axiom,
    s__documentation(s__ArtilleryGun,s__EnglishLanguage,'A &%Gun that is too large to be carried and fired by a single &%Human. Typically, &%ArtilleryGuns are on wheels.') ).

fof(kb_SUMO_8906,axiom,
    s__subclass(s__Firearm,s__Gun) ).

fof(kb_SUMO_8907,axiom,
    s__partition_3(s__Firearm,s__Rifle,s__Pistol) ).

fof(kb_SUMO_8908,axiom,
    s__documentation(s__Firearm,s__EnglishLanguage,'A &%Gun that is small enough to be carried and fired by a single &%Human.') ).

fof(kb_SUMO_8909,axiom,
    s__subclass(s__Rifle,s__Firearm) ).

fof(kb_SUMO_8910,axiom,
    s__instance(s__Rifle__t,s__SetOrClass) ).

fof(kb_SUMO_8911,axiom,
    s__instance(s__Firearm__t,s__SetOrClass) ).

fof(kb_SUMO_8912,axiom,
    s__documentation(s__Rifle,s__EnglishLanguage,'A &%Firearm with a long barrel that is intended to be fired from the shoulder.') ).

fof(kb_SUMO_8913,axiom,
    s__subclass(s__Pistol,s__Firearm) ).

fof(kb_SUMO_8914,axiom,
    s__documentation(s__Pistol,s__EnglishLanguage,'A &%Firearm that is intended to be aimed and fired with a single hand.') ).

fof(kb_SUMO_8915,axiom,
    s__subclass(s__RevolverGun,s__Pistol) ).

fof(kb_SUMO_8916,axiom,
    s__instance(s__RevolverGun__t,s__SetOrClass) ).

fof(kb_SUMO_8917,axiom,
    s__instance(s__Pistol__t,s__SetOrClass) ).

fof(kb_SUMO_8918,axiom,
    s__documentation(s__RevolverGun,s__EnglishLanguage,'A &%Pistol whose magazine is a revolving cylinder with six chambers for &%Bullets.') ).

fof(kb_SUMO_8919,axiom,
    s__instance(s__ContainerEmpty,s__RelationalAttribute) ).

fof(kb_SUMO_8920,axiom,
    s__documentation(s__ContainerEmpty,s__EnglishLanguage,'&%ContainerEmpty is the &%Attribute of a &%Container that is empty.') ).

fof(kb_SUMO_8921,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__attribute(V__C,s__ContainerEmpty)
       => s__instance(V__C,s__Container) ) ) ).

fof(kb_SUMO_8922,axiom,
    ! [V__C] :
      ( ( s__instance(V__C,s__SelfConnectedObject)
        & s__instance(V__C,s__Hole) )
     => ( s__attribute(V__C,s__ContainerEmpty)
       => ~ ? [V__H,V__S] :
              ( s__instance(V__S,s__Object)
              & s__instance(V__H,s__Hole)
              & s__hole(V__H,V__C)
              & s__partiallyFills(V__S,V__C) ) ) ) ).

fof(kb_SUMO_8923,axiom,
    s__instance(s__ContainerFull,s__RelationalAttribute) ).

fof(kb_SUMO_8924,axiom,
    s__contraryAttribute_2(s__ContainerFull,s__ContainerEmpty) ).

fof(kb_SUMO_8925,axiom,
    s__documentation(s__ContainerFull,s__EnglishLanguage,'&%ContainerFull is the &%Attribute of a &%Container that is full to capacity.') ).

fof(kb_SUMO_8926,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__attribute(V__C,s__ContainerFull)
       => s__instance(V__C,s__Container) ) ) ).

fof(kb_SUMO_8927,axiom,
    ! [V__C] :
      ( ( s__instance(V__C,s__SelfConnectedObject)
        & s__instance(V__C,s__Hole) )
     => ( s__attribute(V__C,s__ContainerFull)
       => ? [V__H,V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__H,s__Hole)
            & s__hole(V__H,V__C)
            & s__fills(V__S,V__C) ) ) ) ).

fof(kb_SUMO_8928,axiom,
    s__subclass(s__Holster,s__Container) ).

fof(kb_SUMO_8929,axiom,
    s__instance(s__Holster__t,s__SetOrClass) ).

fof(kb_SUMO_8930,axiom,
    s__documentation(s__Holster,s__EnglishLanguage,'A &%Container for a &%Pistol. It is generally made of Leather and worn on either the shoulder or the waist.') ).

fof(kb_SUMO_8931,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__SelfConnectedObject)
     => ( s__instance(V__H,s__Holster)
       => s__hasPurpose(V__H,'(? [V__P] : (s__instance(V__P,s__Object) & s__instance(V__P,s__Pistol) & s__contains(V__H,V__P)))') ) ) ).

fof(kb_SUMO_8932,axiom,
    s__subclass(s__Wastebasket,s__Container) ).

fof(kb_SUMO_8933,axiom,
    s__instance(s__Wastebasket__t,s__SetOrClass) ).

fof(kb_SUMO_8934,axiom,
    s__documentation(s__Wastebasket,s__EnglishLanguage,'A &%Container which is used for trash.') ).

fof(kb_SUMO_8935,axiom,
    s__subclass(s__ArrowProjectile,s__Projectile) ).

fof(kb_SUMO_8936,axiom,
    s__instance(s__ArrowProjectile__t,s__SetOrClass) ).

fof(kb_SUMO_8937,axiom,
    s__documentation(s__ArrowProjectile,s__EnglishLanguage,'A long, thin &%Projectile with a pointed tip is fired from a bow.') ).

fof(kb_SUMO_8938,axiom,
    s__subclass(s__DriveComponent,s__EngineeringComponent) ).

fof(kb_SUMO_8939,axiom,
    s__instance(s__DriveComponent__t,s__SetOrClass) ).

fof(kb_SUMO_8940,axiom,
    s__documentation(s__DriveComponent,s__EnglishLanguage,'An &%EngineeringComponent whose purpose is to transfer force from one part of a &%Device to another part.') ).

fof(kb_SUMO_8941,axiom,
    s__subclass(s__PetroleumProduct,s__Oil) ).

fof(kb_SUMO_8942,axiom,
    s__documentation(s__PetroleumProduct,s__EnglishLanguage,'&%PetroleumProduct is a broad class that includes both crude oil (Petroleum) and &%RefinedPetroleumProducts.') ).

fof(kb_SUMO_8943,axiom,
    ! [V__PP] :
      ( s__instance(V__PP,s__Object)
     => ( s__instance(V__PP,s__PetroleumProduct)
       => ? [V__O] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__O,s__OrganicCompound)
            & s__part(V__O,V__PP) ) ) ) ).

fof(kb_SUMO_8944,axiom,
    s__subclass(s__FossilFuel,s__Fuel) ).

fof(kb_SUMO_8945,axiom,
    s__instance(s__FossilFuel__t,s__SetOrClass) ).

fof(kb_SUMO_8946,axiom,
    s__instance(s__Fuel__t,s__SetOrClass) ).

fof(kb_SUMO_8947,axiom,
    s__subclass(s__FossilFuel,s__PetroleumProduct) ).

fof(kb_SUMO_8948,axiom,
    s__instance(s__PetroleumProduct__t,s__SetOrClass) ).

fof(kb_SUMO_8949,axiom,
    s__documentation(s__FossilFuel,s__EnglishLanguage,'&%FossilFuel is the subclass of &%Fuel whose instances are derived from fossilized organic deposits, such as &%Coal and &%LiquefiedPetroleumGas.') ).

fof(kb_SUMO_8950,axiom,
    s__subclass(s__Fuel,s__Substance) ).

fof(kb_SUMO_8951,axiom,
    s__documentation(s__Fuel,s__EnglishLanguage,'Fuel is the class of &%Substances that can be used as resources in Combustion processes in order to produce heat. Mechanical energy can be produced by burning fuel in an &%Engine.') ).

fof(kb_SUMO_8952,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__FossilFuel)
       => s__attribute(V__X,s__Flammable) ) ) ).

fof(kb_SUMO_8953,axiom,
    s__subclass(s__Wax,s__Substance) ).

fof(kb_SUMO_8954,axiom,
    s__instance(s__Wax__t,s__SetOrClass) ).

fof(kb_SUMO_8955,axiom,
    s__documentation(s__Wax,s__EnglishLanguage,'Any &%Substance of high molecular weight that resembles beeswax.') ).

fof(kb_SUMO_8956,axiom,
    s__subclass(s__LiquefiedPetroleumGas,s__FossilFuel) ).

fof(kb_SUMO_8957,axiom,
    s__instance(s__LiquefiedPetroleumGas__t,s__SetOrClass) ).

fof(kb_SUMO_8958,axiom,
    s__documentation(s__LiquefiedPetroleumGas,s__EnglishLanguage,'&%LiquefiedPetroleumGas is a compressed hydrocarbon gas.') ).

fof(kb_SUMO_8959,axiom,
    s__subclass(s__Gasoline,s__FossilFuel) ).

fof(kb_SUMO_8960,axiom,
    s__instance(s__Gasoline__t,s__SetOrClass) ).

fof(kb_SUMO_8961,axiom,
    s__documentation(s__Gasoline,s__EnglishLanguage,'&%Gasoline is the subclass of RefinedPetroleumProducts that are fuels for internal combustion engines.') ).

fof(kb_SUMO_8962,axiom,
    s__subclass(s__DieselFuel,s__FossilFuel) ).

fof(kb_SUMO_8963,axiom,
    s__instance(s__DieselFuel__t,s__SetOrClass) ).

fof(kb_SUMO_8964,axiom,
    s__documentation(s__DieselFuel,s__EnglishLanguage,'&%DieselFuel is the subclass of RefinedPetroleumProducts that are fuels for diesel engines.') ).

fof(kb_SUMO_8965,axiom,
    s__documentation(s__Transducer,s__EnglishLanguage,'A &%Device which is capable of converting one form of energy into another. Formally, a &%Twoport that neither stores nor dissipates, but only transfers energy between its two ports.') ).

fof(kb_SUMO_8966,axiom,
    s__subclass(s__Transducer,s__Device) ).

fof(kb_SUMO_8967,axiom,
    s__instance(s__Transducer__t,s__SetOrClass) ).

fof(kb_SUMO_8968,axiom,
    s__subclass(s__Engine,s__Transducer) ).

fof(kb_SUMO_8969,axiom,
    s__documentation(s__Engine,s__EnglishLanguage,'Engine is a subclass of &%Transducer. &%Engines are devices for converting some form of energy resource into mechanical power.') ).

fof(kb_SUMO_8970,axiom,
    s__documentation(s__powerPlant__m,s__EnglishLanguage,'(powerPlant ?GENERATOR ?THING) means that the &%Device ?GENERATOR is the power-producing component of the &%Artifact ?THING which provides the energy for its operation.') ).

fof(kb_SUMO_8971,axiom,
    s__instance(s__powerPlant__m,s__BinaryPredicate) ).

fof(kb_SUMO_8972,axiom,
    s__instance(s__powerPlant__m,s__AsymmetricRelation) ).

fof(kb_SUMO_8973,axiom,
    s__instance(s__powerPlant__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_8974,axiom,
    s__domain(s__powerPlant__m,"1",s__Device) ).

fof(kb_SUMO_8975,axiom,
    s__domain(s__powerPlant__m,"2",s__Artifact) ).

fof(kb_SUMO_8976,axiom,
    s__subrelation(s__powerPlant__m,s__component__m) ).

fof(kb_SUMO_8977,axiom,
    ! [V__O,V__G] :
      ( ( s__instance(V__G,s__Device)
        & s__instance(V__O,s__Artifact) )
     => ( ( s__powerPlant(V__G,V__O)
          & s__instance(V__O,s__Device) )
       => s__instance(V__O,s__SelfPoweredDevice) ) ) ).

fof(kb_SUMO_8978,axiom,
    ! [V__O,V__G] :
      ( ( s__instance(V__G,s__Device)
        & s__instance(V__O,s__Artifact) )
     => ( s__powerPlant(V__G,V__O)
       => ( s__instance(V__G,s__Engine)
          | s__instance(V__G,s__Battery) ) ) ) ).

fof(kb_SUMO_8979,axiom,
    s__subclass(s__SteamEngine,s__Engine) ).

fof(kb_SUMO_8980,axiom,
    s__instance(s__SteamEngine__t,s__SetOrClass) ).

fof(kb_SUMO_8981,axiom,
    s__documentation(s__SteamEngine,s__EnglishLanguage,'&%SteamEngine is the subclass of &%Engines that produce mechanical power from heat and steam pressure.') ).

fof(kb_SUMO_8982,axiom,
    s__subclass(s__Turbine,s__Engine) ).

fof(kb_SUMO_8983,axiom,
    s__instance(s__Turbine__t,s__SetOrClass) ).

fof(kb_SUMO_8984,axiom,
    s__instance(s__Engine__t,s__SetOrClass) ).

fof(kb_SUMO_8985,axiom,
    s__documentation(s__Turbine,s__EnglishLanguage,'An &%Engine which converts the kinetic energy of a moving &%Liquid (typically &%Water) into mechanical energy.') ).

fof(kb_SUMO_8986,axiom,
    s__subclass(s__Windmill,s__Engine) ).

fof(kb_SUMO_8987,axiom,
    s__instance(s__Windmill__t,s__SetOrClass) ).

fof(kb_SUMO_8988,axiom,
    s__documentation(s__Windmill,s__EnglishLanguage,'Windmill is the subclass of &%Engines that produce mechanical power from &%Wind energy.') ).

fof(kb_SUMO_8989,axiom,
    s__subclass(s__InternalCombustionEngine,s__Engine) ).

fof(kb_SUMO_8990,axiom,
    s__documentation(s__InternalCombustionEngine,s__EnglishLanguage,'&%InternalCombustionEngine is the subclass of &%Engines in which a heat reaction that occurs inside the engine is transformed into mechanical energy.') ).

fof(kb_SUMO_8991,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__OperatingFn(s__InternalCombustionEngine))
       => ? [V__E,V__C,V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__C,s__Hole)
            & s__instance(V__E,s__SelfConnectedObject)
            & s__instance(V__E,s__InternalCombustionEngine)
            & s__instrument(V__R,V__E)
            & s__hole(V__C,V__E)
            & s__instance(V__F,s__Combustion)
            & s__completelyFills(V__F,V__C) ) ) ) ).

fof(kb_SUMO_8992,axiom,
    s__subclass(s__Manifold,s__EngineeringComponent) ).

fof(kb_SUMO_8993,axiom,
    s__instance(s__Manifold__t,s__SetOrClass) ).

fof(kb_SUMO_8994,axiom,
    s__documentation(s__Manifold,s__EnglishLanguage,'A pipe which has several outlets for other pipes that flow into or out of it.') ).

fof(kb_SUMO_8995,axiom,
    s__subclass(s__ElectricMotor,s__Engine) ).

fof(kb_SUMO_8996,axiom,
    s__subclass(s__ElectricMotor,s__ElectricDevice) ).

fof(kb_SUMO_8997,axiom,
    s__instance(s__ElectricMotor__t,s__SetOrClass) ).

fof(kb_SUMO_8998,axiom,
    s__documentation(s__ElectricMotor,s__EnglishLanguage,'&%ElectricMotor is the subclass of &%Engines that produce mechanical power from electricity.') ).

fof(kb_SUMO_8999,axiom,
    s__subclass(s__SwitchDevice,s__EngineeringComponent) ).

fof(kb_SUMO_9000,axiom,
    s__instance(s__SwitchDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9001,axiom,
    s__documentation(s__SwitchDevice,s__EnglishLanguage,'An &%EngineeringComponent which is capable of turning an &%ElectricDevice on and off.') ).

fof(kb_SUMO_9002,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__SwitchDevice)
       => ? [V__PROC1,V__PROC2,V__ELECTRIC] :
            ( s__instance(V__ELECTRIC,s__Object)
            & s__instance(V__PROC2,s__Process)
            & s__instance(V__PROC1,s__Process)
            & s__instrument(V__PROC1,V__DEVICE)
            & s__causes(V__PROC1,V__PROC2)
            & s__instrument(V__PROC2,V__ELECTRIC)
            & s__instance(V__ELECTRIC,s__ElectricDevice) ) ) ) ).

fof(kb_SUMO_9003,axiom,
    s__subclass(s__Microphone,s__ElectricDevice) ).

fof(kb_SUMO_9004,axiom,
    s__subclass(s__Microphone,s__CommunicationDevice) ).

fof(kb_SUMO_9005,axiom,
    s__instance(s__Microphone__t,s__SetOrClass) ).

fof(kb_SUMO_9006,axiom,
    s__documentation(s__Microphone,s__EnglishLanguage,'A &%CommunicationDevice that converts sound into electrical energy.') ).

fof(kb_SUMO_9007,axiom,
    s__subclass(s__ReceiverDevice,s__CommunicationDevice) ).

fof(kb_SUMO_9008,axiom,
    s__subclass(s__ReceiverDevice,s__ElectricDevice) ).

fof(kb_SUMO_9009,axiom,
    s__instance(s__ReceiverDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9010,axiom,
    s__documentation(s__ReceiverDevice,s__EnglishLanguage,'An &%ElectricDevice that is capable of receiving and decoding &%RadioEmissions, e.g. &%Radios and &%Televisions.') ).

fof(kb_SUMO_9011,axiom,
    ! [V__D,V__E] :
      ( s__instance(V__E,s__Process)
     => ( ( s__instance(V__E,s__RadioEmission)
          & s__destination(V__E,V__D) )
       => s__instance(V__D,s__ReceiverDevice) ) ) ).

fof(kb_SUMO_9012,axiom,
    s__subclass(s__Telegraph,s__ElectricDevice) ).

fof(kb_SUMO_9013,axiom,
    s__instance(s__Telegraph__t,s__SetOrClass) ).

fof(kb_SUMO_9014,axiom,
    s__subclass(s__Telegraph,s__CommunicationDevice) ).

fof(kb_SUMO_9015,axiom,
    s__documentation(s__Telegraph,s__EnglishLanguage,'A &%Device that permits &%LinguisticCommunication between remote points by means of a code of aural dots and dashes that can be converted into letters of an alphabet.') ).

fof(kb_SUMO_9016,axiom,
    s__subclass(s__ProjectionScreen,s__CommunicationDevice) ).

fof(kb_SUMO_9017,axiom,
    s__instance(s__ProjectionScreen__t,s__SetOrClass) ).

fof(kb_SUMO_9018,axiom,
    s__documentation(s__ProjectionScreen,s__EnglishLanguage,'A &%CommunicationDevice upon which images are projected so that they can be viewed.') ).

fof(kb_SUMO_9019,axiom,
    s__subclass(s__Pencil,s__WritingDevice) ).

fof(kb_SUMO_9020,axiom,
    s__instance(s__Pencil__t,s__SetOrClass) ).

fof(kb_SUMO_9021,axiom,
    s__documentation(s__Pencil,s__EnglishLanguage,'A &%WritingDevice that consists of an encased piece of graphite.') ).

fof(kb_SUMO_9022,axiom,
    s__subclass(s__DeviceAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_9023,axiom,
    s__documentation(s__DeviceAttribute,s__EnglishLanguage,'This class contains &%Attributes that indicate how a &%Device is behaving with respect to some norm or expectation. Examples: &%Functioning, &%Malfunctioning.') ).

fof(kb_SUMO_9024,axiom,
    ! [V__ATTRIBUTE,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__Object)
        & s__instance(V__ATTRIBUTE,s__Attribute) )
     => ( ( s__attribute(V__DEVICE,V__ATTRIBUTE)
          & s__instance(V__ATTRIBUTE,s__DeviceAttribute) )
       => s__instance(V__DEVICE,s__Device) ) ) ).

fof(kb_SUMO_9025,axiom,
    s__instance(s__Functioning,s__DeviceAttribute) ).

fof(kb_SUMO_9026,axiom,
    s__contraryAttribute_2(s__Functioning,s__Malfunctioning) ).

fof(kb_SUMO_9027,axiom,
    s__documentation(s__Functioning,s__EnglishLanguage,'Indicates that a &%Device is performing its intended function.') ).

fof(kb_SUMO_9028,axiom,
    ! [V__PROP,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__Object)
        & s__instance(V__PROP,s__Formula) )
     => ( ( s__attribute(V__DEVICE,s__Functioning)
          & s__hasPurpose(V__DEVICE,V__PROP) )
       => s__truth(V__PROP,'$true__m') ) ) ).

fof(kb_SUMO_9029,axiom,
    s__instance(s__Malfunctioning,s__DeviceAttribute) ).

fof(kb_SUMO_9030,axiom,
    s__instance(s__DeviceAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_9031,axiom,
    s__documentation(s__Malfunctioning,s__EnglishLanguage,'Indicates that a &%Device is not performing its intended function.') ).

fof(kb_SUMO_9032,axiom,
    ! [V__PROP,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__Object)
        & s__instance(V__PROP,s__Formula) )
     => ( ( s__attribute(V__DEVICE,s__Malfunctioning)
          & s__hasPurpose(V__DEVICE,V__PROP) )
       => s__truth(V__PROP,'$false__m') ) ) ).

fof(kb_SUMO_9033,axiom,
    s__subclass(s__DeviceStateAttribute,s__InternalAttribute) ).

fof(kb_SUMO_9034,axiom,
    s__documentation(s__DeviceStateAttribute,s__EnglishLanguage,'&%DeviceStateAttribute is the class of attributes that represent different states that a Device may be in. Examples: &%DeviceOff, &%DeviceOn, &%DeviceOpen, and &%DeviceClosed.') ).

fof(kb_SUMO_9035,axiom,
    s__instance(s__DeviceClosed,s__DeviceStateAttribute) ).

fof(kb_SUMO_9036,axiom,
    s__instance(s__DeviceOff,s__DeviceStateAttribute) ).

fof(kb_SUMO_9037,axiom,
    s__instance(s__DeviceOn,s__DeviceStateAttribute) ).

fof(kb_SUMO_9038,axiom,
    s__instance(s__DeviceOpen,s__DeviceStateAttribute) ).

fof(kb_SUMO_9039,axiom,
    s__instance(s__DeviceStateAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_9040,axiom,
    s__documentation(s__deviceState__m,s__EnglishLanguage,'(deviceState ?DEVICE ?STATE) means that the &%Object ?DEVICE is in the &%DeviceStateAttribute ?STATE.') ).

fof(kb_SUMO_9041,axiom,
    s__instance(s__deviceState__m,s__BinaryPredicate) ).

fof(kb_SUMO_9042,axiom,
    s__domain(s__deviceState__m,"1",s__Object) ).

fof(kb_SUMO_9043,axiom,
    s__domain(s__deviceState__m,"2",s__DeviceStateAttribute) ).

fof(kb_SUMO_9044,axiom,
    s__subrelation(s__deviceState__m,s__attribute__m) ).

fof(kb_SUMO_9045,axiom,
    s__subclass(s__Aerator,s__Device) ).

fof(kb_SUMO_9046,axiom,
    s__instance(s__Aerator__t,s__SetOrClass) ).

fof(kb_SUMO_9047,axiom,
    s__documentation(s__Aerator,s__EnglishLanguage,'A &%Device whose purpose is to mix &%Substances with &%Air.') ).

fof(kb_SUMO_9048,axiom,
    ! [V__AERATOR] :
      ( s__instance(V__AERATOR,s__Object)
     => ( s__instance(V__AERATOR,s__Aerator)
       => s__hasPurpose(V__AERATOR,'(? [V__COMBINE,V__AIR] : (s__instance(V__AIR,s__Object) & s__instance(V__COMBINE,s__Process) & s__instance(V__COMBINE,s__Combining) & s__resource(V__COMBINE,V__AIR) & s__instance(V__AIR,s__Air) & s__instrument(V__COMBINE,V__AERATOR)))') ) ) ).

fof(kb_SUMO_9049,axiom,
    s__subclass(s__Aerating,s__Combining) ).

fof(kb_SUMO_9050,axiom,
    s__instance(s__Aerating__t,s__SetOrClass) ).

fof(kb_SUMO_9051,axiom,
    s__documentation(s__Aerating,s__EnglishLanguage,'Combining a substance with &%Air.') ).

fof(kb_SUMO_9052,axiom,
    ! [V__AERATE] :
      ( s__instance(V__AERATE,s__Process)
     => ( s__instance(V__AERATE,s__Aerating)
       => ? [V__AIR,V__S] :
            ( s__instance(V__S,s__Object)
            & s__patient(V__AERATE,V__AIR)
            & s__instance(V__AIR,s__Air)
            & s__patient(V__AERATE,V__S)
            & s__attribute(V__S,s__Liquid) ) ) ) ).

fof(kb_SUMO_9053,axiom,
    s__subclass(s__Broom,s__BrushOrComb) ).

fof(kb_SUMO_9054,axiom,
    s__instance(s__Broom__t,s__SetOrClass) ).

fof(kb_SUMO_9055,axiom,
    s__instance(s__BrushOrComb__t,s__SetOrClass) ).

fof(kb_SUMO_9056,axiom,
    s__documentation(s__Broom,s__EnglishLanguage,'A &%BrushOrComb whose purpose is to remove dirt and other small particles from floors.') ).

fof(kb_SUMO_9057,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Broom)
       => s__hasPurpose(V__B,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Sweeping) & s__instrument(V__S,V__B)))') ) ) ).

fof(kb_SUMO_9058,axiom,
    s__subclass(s__BrushOrComb,s__Device) ).

fof(kb_SUMO_9059,axiom,
    s__documentation(s__BrushOrComb,s__EnglishLanguage,'A &%Device which consists of a handle and bristles and whose purpose is to remove particles from something or to smooth something out.') ).

fof(kb_SUMO_9060,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BrushOrComb)
       => s__hasPurpose(V__B,'(? [V__S] : (s__instance(V__S,s__Process) & (s__instance(V__S,s__Removing) | s__instance(V__S,s__SurfaceChange)) & s__instrument(V__S,V__B)))') ) ) ).

fof(kb_SUMO_9061,axiom,
    s__subclass(s__MatchDevice,s__Device) ).

fof(kb_SUMO_9062,axiom,
    s__instance(s__MatchDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9063,axiom,
    s__documentation(s__MatchDevice,s__EnglishLanguage,'A small stick of carboard or wood that is treated with chemicals that can be easily ignited with friction. MatchDevices are used for starting fires.') ).

fof(kb_SUMO_9064,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__MatchDevice)
       => s__capability(s__StartFn(s__Combustion),s__instrument__m,V__M) ) ) ).

fof(kb_SUMO_9065,axiom,
    s__subclass(s__VendingDevice,s__Device) ).

fof(kb_SUMO_9066,axiom,
    s__instance(s__VendingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9067,axiom,
    s__documentation(s__VendingDevice,s__EnglishLanguage,'A &%Device which is capable of &%Selling a &%Product to a customer automatically when the customer inserts the appropriate amount of Currency.') ).

fof(kb_SUMO_9068,axiom,
    ! [V__VD] :
      ( s__instance(V__VD,s__Object)
     => ( s__instance(V__VD,s__VendingDevice)
       => s__hasPurpose(V__VD,'(? [V__T,V__C,V__P] : (s__instance(V__T,s__Process) & s__instance(V__T,s__FinancialTransaction) & s__instrument(V__T,V__VD) & s__patient(V__T,V__C) & s__instance(V__C,s__Currency) & s__patient(V__T,V__P) & s__instance(V__P,s__Product)))') ) ) ).

fof(kb_SUMO_9069,axiom,
    s__subclass(s__WritingDevice,s__Device) ).

fof(kb_SUMO_9070,axiom,
    s__instance(s__WritingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9071,axiom,
    s__documentation(s__WritingDevice,s__EnglishLanguage,'A &%Device whose purpose is to be an instrument of &%Writing, e.g. pens, pencils, crayons, etc.') ).

fof(kb_SUMO_9072,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__WritingDevice)
       => s__hasPurpose(V__D,'(? [V__W] : (s__instance(V__W,s__Process) & s__instance(V__W,s__Writing) & s__instrument(V__W,V__D)))') ) ) ).

fof(kb_SUMO_9073,axiom,
    s__subclass(s__SmokingDevice,s__Device) ).

fof(kb_SUMO_9074,axiom,
    s__documentation(s__SmokingDevice,s__EnglishLanguage,'Any Device whose purpose is &%Smoking.') ).

fof(kb_SUMO_9075,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__SmokingDevice)
       => s__hasPurpose(V__D,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Smoking) & s__instrument(V__S,V__D)))') ) ) ).

fof(kb_SUMO_9076,axiom,
    s__subclass(s__SmokingPipe,s__SmokingDevice) ).

fof(kb_SUMO_9077,axiom,
    s__instance(s__SmokingPipe__t,s__SetOrClass) ).

fof(kb_SUMO_9078,axiom,
    s__instance(s__SmokingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9079,axiom,
    s__documentation(s__SmokingPipe,s__EnglishLanguage,'A &%SmokingDevice consisting of a tube and a small bowl.') ).

fof(kb_SUMO_9080,axiom,
    s__subclass(s__Shower,s__BathingDevice) ).

fof(kb_SUMO_9081,axiom,
    s__instance(s__Shower__t,s__SetOrClass) ).

fof(kb_SUMO_9082,axiom,
    s__documentation(s__Shower,s__EnglishLanguage,'&%Shower refers to a plumbing fixture that sprays water over you.') ).

fof(kb_SUMO_9083,axiom,
    s__termFormat(s__EnglishLanguage,s__Shower,shower) ).

fof(kb_SUMO_9084,axiom,
    ! [V__SHOWER] :
      ( s__instance(V__SHOWER,s__Object)
     => ( s__instance(V__SHOWER,s__Shower)
       => s__hasPurpose(V__SHOWER,'(? [V__SPRAY] : (s__instance(V__SPRAY,s__Process) & s__instance(V__SPRAY,s__WaterMotion) & s__origin(V__SPRAY,V__SHOWER)))') ) ) ).

fof(kb_SUMO_9085,axiom,
    ! [V__SHOWER] :
      ( s__instance(V__SHOWER,s__Object)
     => ( s__instance(V__SHOWER,s__Shower)
       => ? [V__X,V__FLOOR] :
            ( s__instance(V__FLOOR,s__Object)
            & s__instance(V__X,s__Object)
            & ( s__instance(V__X,s__Wall)
              | s__instance(V__X,s__Ceiling) )
            & s__connected(V__SHOWER,V__X)
            & s__instance(V__FLOOR,s__Floor)
            & s__orientation(V__SHOWER,V__FLOOR,s__Above) ) ) ) ).

fof(kb_SUMO_9086,axiom,
    s__subclass(s__BathTub,s__BathingDevice) ).

fof(kb_SUMO_9087,axiom,
    s__instance(s__BathingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9088,axiom,
    s__subclass(s__BathTub,s__FluidContainer) ).

fof(kb_SUMO_9089,axiom,
    s__documentation(s__BathTub,s__BathingDevice,'&%BathTub refers to a &%BathingDevice that you can fill with water to use to watch the body') ).

fof(kb_SUMO_9090,axiom,
    s__termFormat(s__EnglishLanguage,s__BathTub,tub) ).

fof(kb_SUMO_9091,axiom,
    ! [V__TUB] :
      ( s__instance(V__TUB,s__SelfConnectedObject)
     => ( s__instance(V__TUB,s__BathTub)
       => s__hasPurpose(V__TUB,'(? [V__WATER] : (s__instance(V__WATER,s__Object) & s__instance(V__WATER,s__Water) & s__contains(V__TUB,V__WATER)))') ) ) ).

fof(kb_SUMO_9092,axiom,
    s__subclass(s__Excrement,s__BodySubstance) ).

fof(kb_SUMO_9093,axiom,
    s__documentation(s__Excrement,s__EnglishLanguage,'&%Excrement refers to the waste matter that is discharged from the body') ).

fof(kb_SUMO_9094,axiom,
    s__termFormat(s__EnglishLanguage,s__Excrement,excrement) ).

fof(kb_SUMO_9095,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Excrement)
     => ? [V__PROC,V__ORG] :
          ( s__instance(V__ORG,s__Agent)
          & s__instance(V__PROC,s__Process)
          & s__instance(V__ORG,s__Organism)
          & s__instance(V__PROC,s__PhysiologicProcess)
          & s__result(V__PROC,V__X)
          & s__agent(V__PROC,V__ORG) ) ) ).

fof(kb_SUMO_9096,axiom,
    s__subclass(s__Feces,s__Excrement) ).

fof(kb_SUMO_9097,axiom,
    s__instance(s__Feces__t,s__SetOrClass) ).

fof(kb_SUMO_9098,axiom,
    s__instance(s__Excrement__t,s__SetOrClass) ).

fof(kb_SUMO_9099,axiom,
    s__documentation(s__Feces,s__EnglishLanguage,'&%Feces is a type of &%Solid &%Excrement evacuated from the bowels') ).

fof(kb_SUMO_9100,axiom,
    s__termFormat(s__EnglishLanguage,s__Feces,feces) ).

fof(kb_SUMO_9101,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Feces)
       => s__attribute(V__X,s__Solid) ) ) ).

fof(kb_SUMO_9102,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Feces)
     => ? [V__PROC,V__INT] :
          ( s__instance(V__INT,s__Object)
          & s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__PhysiologicProcess)
          & s__instrument(V__PROC,V__INT)
          & s__instance(V__INT,s__Intestine)
          & s__result(V__PROC,V__X) ) ) ).

fof(kb_SUMO_9103,axiom,
    s__subclass(s__Urine,s__Excrement) ).

fof(kb_SUMO_9104,axiom,
    s__instance(s__Urine__t,s__SetOrClass) ).

fof(kb_SUMO_9105,axiom,
    s__documentation(s__Urine,s__EnglishLanguage,'&%Urine is a type of &%Liquid &%Excrement that is secreted by the &%Kidney') ).

fof(kb_SUMO_9106,axiom,
    s__termFormat(s__EnglishLanguage,s__Urine,urine) ).

fof(kb_SUMO_9107,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Urine)
       => s__attribute(V__X,s__Solid) ) ) ).

fof(kb_SUMO_9108,axiom,
    ! [V__PROX,V__X] :
      ( s__instance(V__PROX,s__Process)
     => ( s__instance(V__X,s__Urine)
       => ? [V__PROC,V__KIDNEY] :
            ( s__instance(V__KIDNEY,s__Object)
            & s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__PhysiologicProcess)
            & s__instrument(V__PROC,V__KIDNEY)
            & s__instance(V__KIDNEY,s__Kidney)
            & s__result(V__PROX,V__X) ) ) ) ).

fof(kb_SUMO_9109,axiom,
    s__subclass(s__Excretion,s__OrganismProcess) ).

fof(kb_SUMO_9110,axiom,
    s__documentation(s__Excretion,s__EnglishLanguage,'&%Excretion is a type of &%OrganismProcess that discharges waste from tissues, organs or the body') ).

fof(kb_SUMO_9111,axiom,
    s__termFormat(s__EnglishLanguage,s__Excretion,excretion) ).

fof(kb_SUMO_9112,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__Excretion)
       => ? [V__ORG,V__WASTE,V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__ORG,s__Agent)
            & s__instance(V__ORG,s__Organism)
            & s__agent(V__PROC,V__ORG)
            & s__patient(V__PROC,V__WASTE)
            & s__instance(V__WASTE,s__Excrement)
            & s__instance(V__PART,s__BodyPart)
            & s__instrument(V__PROC,V__PART) ) ) ) ).

fof(kb_SUMO_9113,axiom,
    s__subclass(s__Urination,s__Excretion) ).

fof(kb_SUMO_9114,axiom,
    s__instance(s__Urination__t,s__SetOrClass) ).

fof(kb_SUMO_9115,axiom,
    s__instance(s__Excretion__t,s__SetOrClass) ).

fof(kb_SUMO_9116,axiom,
    s__documentation(s__Urination,s__EnglishLanguage,'&%Urination is a type of &%Excretion that discharges &%Urine') ).

fof(kb_SUMO_9117,axiom,
    s__termFormat(s__EnglishLanguage,s__Urination,urination) ).

fof(kb_SUMO_9118,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__Urination)
       => ? [V__URINE] :
            ( s__instance(V__URINE,s__Urine)
            & s__patient(V__PROC,V__URINE) ) ) ) ).

fof(kb_SUMO_9119,axiom,
    s__subclass(s__Defecation,s__Excretion) ).

fof(kb_SUMO_9120,axiom,
    s__instance(s__Defecation__t,s__SetOrClass) ).

fof(kb_SUMO_9121,axiom,
    s__documentation(s__Defecation,s__EnglishLanguage,'&%Defecation is a type of &%Excretion that discharges &%Feces') ).

fof(kb_SUMO_9122,axiom,
    s__termFormat(s__EnglishLanguage,s__Defecation,defecation) ).

fof(kb_SUMO_9123,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__Defecation)
       => ? [V__FECES] :
            ( s__instance(V__FECES,s__Feces)
            & s__patient(V__PROC,V__FECES) ) ) ) ).

fof(kb_SUMO_9124,axiom,
    s__subclass(s__Sewage,s__Mixture) ).

fof(kb_SUMO_9125,axiom,
    s__instance(s__Sewage__t,s__SetOrClass) ).

fof(kb_SUMO_9126,axiom,
    s__documentation(s__Sewage,s__EnglishLanguage,'The byproduct of &%Animal digestion. Sewage is a waste product that is removed from the body of an animal by a normally functioning &%BiologicalProcess. Sewage consists largely of substances which the animal cannot digest, or may be harmful, so the breakdown of the biological waste removal process can be evidence or cause of a &%DiseaseOrSyndrome.') ).

fof(kb_SUMO_9127,axiom,
    ! [V__D,V__ANI] :
      ( ( s__instance(V__ANI,s__Agent)
        & s__instance(V__D,s__Attribute) )
     => ( ( s__instance(V__ANI,s__Animal)
          & s__instance(V__D,s__DiseaseOrSyndrome)
          & ~ s__attribute(V__ANI,V__D) )
       => ? [V__P,V__W] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__BiologicalProcess)
            & s__instance(V__P,s__Removing)
            & s__origin(V__P,V__ANI)
            & s__instance(V__W,s__Sewage)
            & s__agent(V__P,V__ANI)
            & s__patient(V__P,V__W) ) ) ) ).

fof(kb_SUMO_9128,axiom,
    s__subclass(s__Bidet,s__WashingDevice) ).

fof(kb_SUMO_9129,axiom,
    s__instance(s__Bidet__t,s__SetOrClass) ).

fof(kb_SUMO_9130,axiom,
    s__documentation(s__Bidet,s__EnglishLanguage,'&%Bidet is a &%WashingDevice intended for washing genitals and the anal area while on the toilet') ).

fof(kb_SUMO_9131,axiom,
    s__termFormat(s__EnglishLanguage,s__Bidet,bidet) ).

fof(kb_SUMO_9132,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Bidet)
       => s__hasPurpose(V__X,'(? [V__PROC,V__WASH,V__PART] : (s__instance(V__PART,s__Object) & s__instance(V__WASH,s__Process) & s__instance(V__PROC,s__Process) & (s__instance(V__PROC,s__Defecation) | s__instance(V__PROC,s__Urination)) & s__instrument(V__PROC,V__PART) & s__instance(V__WASH,s__Washing) & s__patient(V__WASH,V__PART) & s__instrument(V__WASH,V__X) & s__before(s__BeginFn(s__WhenFn(V__PROC)),s__BeginFn(s__WhenFn(V__WASH)))))') ) ) ).

fof(kb_SUMO_9133,axiom,
    s__subclass(s__Toilet,s__Device) ).

fof(kb_SUMO_9134,axiom,
    s__instance(s__Toilet__t,s__SetOrClass) ).

fof(kb_SUMO_9135,axiom,
    s__documentation(s__Toilet,s__EnglishLanguage,'A &%Device for the disposal of wastes resulting from urination and defecation.') ).

fof(kb_SUMO_9136,axiom,
    ! [V__R,V__T] :
      ( ( s__instance(V__T,s__Physical)
        & s__instance(V__R,s__Object) )
     => ( ( s__located(V__T,V__R)
          & s__instance(V__T,s__Toilet)
          & s__instance(V__R,s__Room) )
       => s__instance(V__R,s__Bathroom) ) ) ).

fof(kb_SUMO_9137,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Physical)
     => ( s__instance(V__X,s__Toilet)
       => s__hasPurpose(V__X,'(? [V__PROC] : (s__instance(V__PROC,s__Process) & (s__instance(V__PROC,s__Defecation) | s__instance(V__PROC,s__Urination)) & s__destination(V__PROC,V__X)))') ) ) ).

fof(kb_SUMO_9138,axiom,
    s__subclass(s__Toothbrush,s__BrushOrComb) ).

fof(kb_SUMO_9139,axiom,
    s__instance(s__Toothbrush__t,s__SetOrClass) ).

fof(kb_SUMO_9140,axiom,
    s__documentation(s__Toothbrush,s__EnglishLanguage,'A small &%BrushOrComb with relatively soft bristles and a long handle, used for brushing teeth (see &%Tooth). It is used help control bacteria living in the mouth. While most typically used by humans on themselves, it can be used by &%Dentists on their patients and by adults assisting children. They are occasionally used by humans caring for pets, zoo animals and valuable livestock.') ).

fof(kb_SUMO_9141,axiom,
    ! [V__TOOTH,V__B,V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Toothbrush)
       => s__hasPurpose(V__T,'(? [V__K] : (s__instance(V__K,s__Process) & s__instance(V__TOOTH,s__Tooth) & s__instrument(V__K,V__T) & s__instance(V__K,s__Killing) & s__instance(V__B,s__Bacterium) & s__patient(V__K,V__B) & s__patient(V__K,V__TOOTH)))') ) ) ).

fof(kb_SUMO_9142,axiom,
    s__subclass(s__CigarOrCigarette,s__SmokingDevice) ).

fof(kb_SUMO_9143,axiom,
    s__instance(s__CigarOrCigarette__t,s__SetOrClass) ).

fof(kb_SUMO_9144,axiom,
    s__documentation(s__CigarOrCigarette,s__EnglishLanguage,'A tube of thin paper containing finely ground tobacco that is smoked.') ).

fof(kb_SUMO_9145,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__CigarOrCigarette)
       => ? [V__T] :
            ( s__instance(V__T,s__Object)
            & s__instance(V__T,s__Tobacco)
            & s__part(V__T,V__C) ) ) ) ).

fof(kb_SUMO_9146,axiom,
    s__subclass(s__Tableware,s__Device) ).

fof(kb_SUMO_9147,axiom,
    s__instance(s__Tableware__t,s__SetOrClass) ).

fof(kb_SUMO_9148,axiom,
    s__documentation(s__Tableware,s__EnglishLanguage,'&%Devices that are used in &%Ingesting (&%Eating and/or &%Drinking) a meal. This coves dishware, flatware, and glassware.') ).

fof(kb_SUMO_9149,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Tableware)
       => s__hasPurpose(V__T,'(? [V__I] : (s__instance(V__I,s__Process) & s__instance(V__I,s__Ingesting) & s__instrument(V__I,V__T)))') ) ) ).

fof(kb_SUMO_9150,axiom,
    s__subclass(s__Compass,s__Device) ).

fof(kb_SUMO_9151,axiom,
    s__subclass(s__Compass,s__ContentBearingObject) ).

fof(kb_SUMO_9152,axiom,
    s__instance(s__Compass__t,s__SetOrClass) ).

fof(kb_SUMO_9153,axiom,
    s__documentation(s__Compass,s__EnglishLanguage,'A &%Device that indicates the direction of the various &%DirectionalAttributes with respect to the device.') ).

fof(kb_SUMO_9154,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Compass)
     => ? [V__D] :
          ( s__instance(V__D,s__DirectionalAttribute)
          & s__represents(V__C,V__D) ) ) ).

fof(kb_SUMO_9155,axiom,
    s__subclass(s__MajorAppliance,s__Device) ).

fof(kb_SUMO_9156,axiom,
    s__subclass(s__Refrigerator,s__MajorAppliance) ).

fof(kb_SUMO_9157,axiom,
    s__instance(s__Refrigerator__t,s__SetOrClass) ).

fof(kb_SUMO_9158,axiom,
    s__subclass(s__Freezer,s__MajorAppliance) ).

fof(kb_SUMO_9159,axiom,
    s__instance(s__Freezer__t,s__SetOrClass) ).

fof(kb_SUMO_9160,axiom,
    s__subclass(s__CookingRange,s__MajorAppliance) ).

fof(kb_SUMO_9161,axiom,
    s__instance(s__CookingRange__t,s__SetOrClass) ).

fof(kb_SUMO_9162,axiom,
    s__subclass(s__CookingOven,s__MajorAppliance) ).

fof(kb_SUMO_9163,axiom,
    s__instance(s__CookingOven__t,s__SetOrClass) ).

fof(kb_SUMO_9164,axiom,
    s__instance(s__MajorAppliance__t,s__SetOrClass) ).

fof(kb_SUMO_9165,axiom,
    s__subclass(s__HotWaterHeater,s__MajorAppliance) ).

fof(kb_SUMO_9166,axiom,
    s__instance(s__HotWaterHeater__t,s__SetOrClass) ).

fof(kb_SUMO_9167,axiom,
    s__subclass(s__ClothesWashingMachine,s__MajorAppliance) ).

fof(kb_SUMO_9168,axiom,
    s__instance(s__ClothesWashingMachine__t,s__SetOrClass) ).

fof(kb_SUMO_9169,axiom,
    s__subclass(s__ClothesDryer,s__MajorAppliance) ).

fof(kb_SUMO_9170,axiom,
    s__subclass(s__Dishwasher,s__MajorAppliance) ).

fof(kb_SUMO_9171,axiom,
    s__instance(s__Dishwasher__t,s__SetOrClass) ).

fof(kb_SUMO_9172,axiom,
    s__subclass(s__CoolingDevice,s__Device) ).

fof(kb_SUMO_9173,axiom,
    s__documentation(s__CoolingDevice,s__EnglishLanguage,'A &%Device whose purpose is &%Cooling something, e.g. air conditioners, refrigerators, freezers, etc.') ).

fof(kb_SUMO_9174,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__CoolingDevice)
       => s__hasPurpose(V__D,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Cooling) & s__instrument(V__C,V__D)))') ) ) ).

fof(kb_SUMO_9175,axiom,
    s__subclass(s__FanDevice,s__CoolingDevice) ).

fof(kb_SUMO_9176,axiom,
    s__instance(s__FanDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9177,axiom,
    s__instance(s__CoolingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9178,axiom,
    s__documentation(s__FanDevice,s__EnglishLanguage,'A &%CoolingDevice which consists simply of one or more blades that circulate the air. Note that this class covers both electrical fans and fans that are manually operated.') ).

fof(kb_SUMO_9179,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__FanDevice)
       => s__hasPurpose(V__F,'(? [V__W] : (s__instance(V__W,s__Process) & s__instance(V__W,s__Wind) & s__instrument(V__W,V__F)))') ) ) ).

fof(kb_SUMO_9180,axiom,
    s__subclass(s__HeatingDevice,s__Device) ).

fof(kb_SUMO_9181,axiom,
    s__documentation(s__HeatingDevice,s__EnglishLanguage,'A &%Device whose purpose is &%Heating something, e.g. electric heaters, heat lamps, ovens, stoves, etc.') ).

fof(kb_SUMO_9182,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__HeatingDevice)
       => s__hasPurpose(V__D,'(? [V__H] : (s__instance(V__H,s__Process) & s__instance(V__H,s__Heating) & s__instrument(V__H,V__D)))') ) ) ).

fof(kb_SUMO_9183,axiom,
    s__subclass(s__Oven,s__HeatingDevice) ).

fof(kb_SUMO_9184,axiom,
    s__subclass(s__Oven,s__Container) ).

fof(kb_SUMO_9185,axiom,
    s__instance(s__Oven__t,s__SetOrClass) ).

fof(kb_SUMO_9186,axiom,
    s__documentation(s__Oven,s__EnglishLanguage,'A &%HeatingDevice with a door for inserting and removing &%Food that is to undergo &%Baking.') ).

fof(kb_SUMO_9187,axiom,
    ! [V__O] :
      ( s__instance(V__O,s__Object)
     => ( s__instance(V__O,s__Oven)
       => s__hasPurpose(V__O,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Cooking) & s__instrument(V__C,V__O)))') ) ) ).

fof(kb_SUMO_9188,axiom,
    s__subclass(s__Stove,s__HeatingDevice) ).

fof(kb_SUMO_9189,axiom,
    s__instance(s__Stove__t,s__SetOrClass) ).

fof(kb_SUMO_9190,axiom,
    s__instance(s__HeatingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9191,axiom,
    s__documentation(s__Stove,s__EnglishLanguage,'A &%HeatingDevice which consists one or more burners for heating pots and pans of &%Food.') ).

fof(kb_SUMO_9192,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Stove)
       => s__hasPurpose(V__S,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Cooking) & s__instrument(V__C,V__S)))') ) ) ).

fof(kb_SUMO_9193,axiom,
    s__subclass(s__Refrigerator,s__CoolingDevice) ).

fof(kb_SUMO_9194,axiom,
    s__subclass(s__Refrigerator,s__ElectricDevice) ).

fof(kb_SUMO_9195,axiom,
    s__subclass(s__Refrigerator,s__Container) ).

fof(kb_SUMO_9196,axiom,
    s__documentation(s__Refrigerator,s__EnglishLanguage,'The intersection of &%Containers and &%ElectricDevices in which the temperature is reduced from that of the outside air by a &%Cooling process.') ).

fof(kb_SUMO_9197,axiom,
    s__subclass(s__PotOrPan,s__Container) ).

fof(kb_SUMO_9198,axiom,
    s__instance(s__PotOrPan__t,s__SetOrClass) ).

fof(kb_SUMO_9199,axiom,
    s__documentation(s__PotOrPan,s__EnglishLanguage,'A &%Container which has a handle and is used for &%Cooking.') ).

fof(kb_SUMO_9200,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__PotOrPan)
       => s__hasPurpose(V__P,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Cooking) & s__instrument(V__C,V__P)))') ) ) ).

fof(kb_SUMO_9201,axiom,
    s__subclass(s__Ramp,s__SelfConnectedObject) ).

fof(kb_SUMO_9202,axiom,
    s__instance(s__Ramp__t,s__SetOrClass) ).

fof(kb_SUMO_9203,axiom,
    s__documentation(s__Ramp,s__EnglishLanguage,'Ramp is the class of &%SelfConnectedObjects that are inclined planes used for moving objects from one level to another, especially used for wheeled vehicles and people who cannot climb stairs.') ).

fof(kb_SUMO_9204,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Ramp)
       => s__capability(s__MotionUpward,s__path__m,V__R) ) ) ).

fof(kb_SUMO_9205,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Ramp)
       => s__capability(s__MotionDownward,s__path__m,V__R) ) ) ).

fof(kb_SUMO_9206,axiom,
    s__subclass(s__RecreationOrExerciseDevice,s__Device) ).

fof(kb_SUMO_9207,axiom,
    s__documentation(s__RecreationOrExerciseDevice,s__EnglishLanguage,'A &%Device whose purpose is &%RecreationOrExercise.') ).

fof(kb_SUMO_9208,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__RecreationOrExerciseDevice)
       => s__hasPurpose(V__D,'(? [V__E] : (s__instance(V__E,s__Process) & s__instance(V__E,s__RecreationOrExercise) & s__instrument(V__E,V__D)))') ) ) ).

fof(kb_SUMO_9209,axiom,
    s__subclass(s__WalkingCane,s__Device) ).

fof(kb_SUMO_9210,axiom,
    s__instance(s__WalkingCane__t,s__SetOrClass) ).

fof(kb_SUMO_9211,axiom,
    s__documentation(s__WalkingCane,s__EnglishLanguage,'A &%Device which has the form of a staff with a handle and which enables some people to walk with greater assurance.') ).

fof(kb_SUMO_9212,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__WalkingCane)
       => s__hasPurpose(V__C,'(? [V__W] : (s__instance(V__W,s__Process) & s__instance(V__W,s__Walking) & s__instrument(V__W,V__C)))') ) ) ).

fof(kb_SUMO_9213,axiom,
    s__subclass(s__WashingDevice,s__Device) ).

fof(kb_SUMO_9214,axiom,
    s__documentation(s__WashingDevice,s__EnglishLanguage,'Any &%Device whose purpose is &%Washing something, e.g. washing machines, dishwashers, bathtubs, etc.') ).

fof(kb_SUMO_9215,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__WashingDevice)
       => s__hasPurpose(V__D,'(? [V__W] : (s__instance(V__W,s__Process) & s__instance(V__W,s__Washing) & s__instrument(V__W,V__D)))') ) ) ).

fof(kb_SUMO_9216,axiom,
    s__subclass(s__MaterialHandlingEquipment,s__Device) ).

fof(kb_SUMO_9217,axiom,
    s__documentation(s__MaterialHandlingEquipment,s__EnglishLanguage,'&%MaterialHandlingEquipment is a class of &%Devices that are equipment used for handling goods and supplies more efficiently or safely. Examples are cranes, hoists, forklifts, conveyors, racks, etc.') ).

fof(kb_SUMO_9218,axiom,
    s__subclass(s__Crane,s__MaterialHandlingEquipment) ).

fof(kb_SUMO_9219,axiom,
    s__instance(s__Crane__t,s__SetOrClass) ).

fof(kb_SUMO_9220,axiom,
    s__instance(s__MaterialHandlingEquipment__t,s__SetOrClass) ).

fof(kb_SUMO_9221,axiom,
    s__documentation(s__Crane,s__EnglishLanguage,'Crane is a subclass of mechanical &%Devices that consist of a &%HoistingDevice on a moveable boom, designed to assist in moving heavy loads.') ).

fof(kb_SUMO_9222,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__CorpuscularObject)
     => ( s__instance(V__C,s__Crane)
       => ? [V__H] :
            ( s__instance(V__H,s__CorpuscularObject)
            & s__instance(V__H,s__HoistingDevice)
            & s__component(V__H,V__C) ) ) ) ).

fof(kb_SUMO_9223,axiom,
    s__subclass(s__HoistingDevice,s__MaterialHandlingEquipment) ).

fof(kb_SUMO_9224,axiom,
    s__instance(s__HoistingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9225,axiom,
    s__documentation(s__HoistingDevice,s__EnglishLanguage,'&%HoistingDevice is a subclass of mechanical &%Devices that provide a mechanical advantage in lifting and lowering, e.g., by use of a block and tackle.') ).

fof(kb_SUMO_9226,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__HoistingDevice)
       => s__capability(s__MotionUpward,s__instrument__m,V__H) ) ) ).

fof(kb_SUMO_9227,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__HoistingDevice)
       => s__capability(s__MotionDownward,s__instrument__m,V__H) ) ) ).

fof(kb_SUMO_9228,axiom,
    s__subclass(s__OpticalDevice,s__Device) ).

fof(kb_SUMO_9229,axiom,
    s__documentation(s__OpticalDevice,s__EnglishLanguage,'A &%Device which enables someone to see something more clearly or with greater magnification.') ).

fof(kb_SUMO_9230,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__OpticalDevice)
       => s__hasPurpose(V__D,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Seeing) & s__instrument(V__S,V__D)))') ) ) ).

fof(kb_SUMO_9231,axiom,
    s__subclass(s__EyeGlass,s__OpticalDevice) ).

fof(kb_SUMO_9232,axiom,
    s__instance(s__EyeGlass__t,s__SetOrClass) ).

fof(kb_SUMO_9233,axiom,
    s__documentation(s__EyeGlass,s__EnglishLanguage,'A lens or pair of lenses with or without frames whose purpose is to to correct a defect in vision. This class covers ordinary eye glasses, reading glasses, contact lenses, monocles, etc.') ).

fof(kb_SUMO_9234,axiom,
    s__subclass(s__Lens,s__OpticalDevice) ).

fof(kb_SUMO_9235,axiom,
    s__instance(s__Lens__t,s__SetOrClass) ).

fof(kb_SUMO_9236,axiom,
    s__documentation(s__Lens,s__EnglishLanguage,'An &%OpticalDevice which consists of a polished, transparent piece of glass or plastic. Lenses are often part of other &%OpticalDevices.') ).

fof(kb_SUMO_9237,axiom,
    s__subclass(s__Microscope,s__OpticalDevice) ).

fof(kb_SUMO_9238,axiom,
    s__instance(s__Microscope__t,s__SetOrClass) ).

fof(kb_SUMO_9239,axiom,
    s__instance(s__OpticalDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9240,axiom,
    s__documentation(s__Microscope,s__EnglishLanguage,'An &%OpticalDevice with a stand and a focus, which is used for magnifying the images of things that are placed in the stand.') ).

fof(kb_SUMO_9241,axiom,
    s__subclass(s__Filter,s__Device) ).

fof(kb_SUMO_9242,axiom,
    s__instance(s__Filter__t,s__SetOrClass) ).

fof(kb_SUMO_9243,axiom,
    s__documentation(s__Filter,s__EnglishLanguage,'A &%Device whose purpose is to remove part of a &%Mixture that is passed through the &%Filter.') ).

fof(kb_SUMO_9244,axiom,
    ! [V__FILTER] :
      ( s__instance(V__FILTER,s__Object)
     => ( s__instance(V__FILTER,s__Filter)
       => s__hasPurpose(V__FILTER,'(? [V__REMOVE,V__M] : (s__instance(V__M,s__Object) & s__instance(V__REMOVE,s__Process) & s__instance(V__REMOVE,s__Removing) & s__origin(V__REMOVE,V__M) & s__instance(V__M,s__Mixture) & s__instrument(V__REMOVE,V__FILTER)))') ) ) ).

fof(kb_SUMO_9245,axiom,
    s__subclass(s__FileDevice,s__Device) ).

fof(kb_SUMO_9246,axiom,
    s__instance(s__FileDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9247,axiom,
    s__documentation(s__FileDevice,s__EnglishLanguage,'A &%Device whose purpose is to make something smoother. For example, a nail file is used to even out the tips of ones finger nails.') ).

fof(kb_SUMO_9248,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__FileDevice)
       => s__capability(s__SurfaceChange,s__instrument__m,V__DEVICE) ) ) ).

fof(kb_SUMO_9249,axiom,
    s__subclass(s__ElectricDevice,s__Device) ).

fof(kb_SUMO_9250,axiom,
    s__documentation(s__ElectricDevice,s__EnglishLanguage,'A &%Device that uses &%Electricity as its primary power source.') ).

fof(kb_SUMO_9251,axiom,
    ! [V__DEV,V__EV] :
      ( s__instance(V__DEV,s__Object)
     => ( ( s__instance(V__DEV,s__ElectricDevice)
          & s__instance(V__EV,s__Process)
          & s__instrument(V__EV,V__DEV) )
       => ? [V__R] :
            ( s__instance(V__R,s__Object)
            & s__instance(V__R,s__Electricity)
            & s__resource(V__EV,V__R) ) ) ) ).

fof(kb_SUMO_9252,axiom,
    s__subclass(s__Electricity,s__Substance) ).

fof(kb_SUMO_9253,axiom,
    s__instance(s__Electricity__t,s__SetOrClass) ).

fof(kb_SUMO_9254,axiom,
    s__documentation(s__Electricity,s__EnglishLanguage,'While electricity is typically thought of as just a difference in electrical potential, one way of modeling electricity is as a substance that can be moved from one point to another or consumed. One could make the claim that subatomic physics also supports the classification as a substance since electrons are objects.') ).

fof(kb_SUMO_9255,axiom,
    s__documentation(s__PowerSource,s__EnglishLanguage,'A source of electrical power.') ).

fof(kb_SUMO_9256,axiom,
    s__termFormat(s__EnglishLanguage,s__PowerSource,'power source') ).

fof(kb_SUMO_9257,axiom,
    s__subclass(s__PowerSource,s__Device) ).

fof(kb_SUMO_9258,axiom,
    ! [V__PS] :
      ( s__instance(V__PS,s__Object)
     => ( s__instance(V__PS,s__PowerSource)
       => ? [V__RE] :
            ( s__instance(V__RE,s__Process)
            & s__instance(V__RE,s__RadiatingElectromagnetic)
            & s__origin(V__RE,V__PS) ) ) ) ).

fof(kb_SUMO_9259,axiom,
    s__documentation(s__DCPowerSource,s__EnglishLanguage,'A direct-current &%PowerSource.') ).

fof(kb_SUMO_9260,axiom,
    s__termFormat(s__EnglishLanguage,s__DCPowerSource,'DC power source') ).

fof(kb_SUMO_9261,axiom,
    s__subclass(s__DCPowerSource,s__PowerSource) ).

fof(kb_SUMO_9262,axiom,
    s__instance(s__DCPowerSource__t,s__SetOrClass) ).

fof(kb_SUMO_9263,axiom,
    s__subclass(s__Battery,s__DCPowerSource) ).

fof(kb_SUMO_9264,axiom,
    s__instance(s__Battery__t,s__SetOrClass) ).

fof(kb_SUMO_9265,axiom,
    s__subclass(s__Battery,s__ElectricDevice) ).

fof(kb_SUMO_9266,axiom,
    s__documentation(s__Battery,s__EnglishLanguage,'Battery is a subclass of &%Device. Batteries are devices that use chemical means to store or produce electrical power.') ).

fof(kb_SUMO_9267,axiom,
    s__subclass(s__Radar,s__ElectricDevice) ).

fof(kb_SUMO_9268,axiom,
    s__instance(s__Radar__t,s__SetOrClass) ).

fof(kb_SUMO_9269,axiom,
    s__documentation(s__Radar,s__EnglishLanguage,'An &%ElectricDevice that emits and receives microwave radiation for the purpose of locating and tracking distant objects.') ).

fof(kb_SUMO_9270,axiom,
    ! [V__RADAR] :
      ( s__instance(V__RADAR,s__Object)
     => ( s__instance(V__RADAR,s__Radar)
       => s__hasPurpose(V__RADAR,'(? [V__DISCOVER] : (s__instance(V__DISCOVER,s__Process) & s__instance(V__DISCOVER,s__Discovering) & s__instrument(V__DISCOVER,V__RADAR)))') ) ) ).

fof(kb_SUMO_9271,axiom,
    ! [V__RADAR] :
      ( s__instance(V__RADAR,s__Object)
     => ( s__instance(V__RADAR,s__Radar)
       => s__capability(s__RadiatingElectromagnetic,s__agent__m,V__RADAR) ) ) ).

fof(kb_SUMO_9272,axiom,
    s__instance(s__discovers__m,s__BinaryPredicate) ).

fof(kb_SUMO_9273,axiom,
    s__domain(s__discovers__m,"1",s__Agent) ).

fof(kb_SUMO_9274,axiom,
    s__domain(s__discovers__m,"2",s__Object) ).

fof(kb_SUMO_9275,axiom,
    s__documentation(s__discovers__m,s__EnglishLanguage,'(discovers ?AGENT ?OBJECT) means that the &%Agent ?AGENT discovered the &%Object ?OBJECT.') ).

fof(kb_SUMO_9276,axiom,
    s__termFormat(s__EnglishLanguage,s__discovers__m,discovers) ).

fof(kb_SUMO_9277,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__discovers(V__AGENT,V__OBJECT)
       => ? [V__DISCOVERING] :
            ( s__instance(V__DISCOVERING,s__Process)
            & s__instance(V__DISCOVERING,s__Discovering)
            & s__agent(V__DISCOVERING,V__AGENT)
            & s__patient(V__DISCOVERING,V__OBJECT) ) ) ) ).

fof(kb_SUMO_9278,axiom,
    s__subclass(s__Sonar,s__CorpuscularObject) ).

fof(kb_SUMO_9279,axiom,
    s__instance(s__Sonar__t,s__SetOrClass) ).

fof(kb_SUMO_9280,axiom,
    s__documentation(s__Sonar,s__EnglishLanguage,'Something that emits and receives sound for the purpose of locating and tracking distant objects. Note that this covers both manmade devices and &%BodyParts such as the sonar of bats and dolphins.') ).

fof(kb_SUMO_9281,axiom,
    ! [V__SONAR] :
      ( s__instance(V__SONAR,s__Object)
     => ( s__instance(V__SONAR,s__Sonar)
       => s__hasPurpose(V__SONAR,'(? [V__DISCOVER] : (s__instance(V__DISCOVER,s__Process) & s__instance(V__DISCOVER,s__Discovering) & s__instrument(V__DISCOVER,V__SONAR)))') ) ) ).

fof(kb_SUMO_9282,axiom,
    ! [V__SONAR] :
      ( s__instance(V__SONAR,s__Object)
     => ( s__instance(V__SONAR,s__Sonar)
       => s__capability(s__RadiatingSound,s__agent__m,V__SONAR) ) ) ).

fof(kb_SUMO_9283,axiom,
    s__subclass(s__Echoing,s__RadiatingSound) ).

fof(kb_SUMO_9284,axiom,
    s__instance(s__Echoing__t,s__SetOrClass) ).

fof(kb_SUMO_9285,axiom,
    s__documentation(s__Echoing,s__EnglishLanguage,'Instances of &%RadiatingSound where the instrument is a surface which bounces sound waves back to their origin, where they can be heard again.') ).

fof(kb_SUMO_9286,axiom,
    s__subclass(s__ElectricalSignalling,s__Signalling) ).

fof(kb_SUMO_9287,axiom,
    s__instance(s__ElectricalSignalling__t,s__SetOrClass) ).

fof(kb_SUMO_9288,axiom,
    s__instance(s__Signalling__t,s__SetOrClass) ).

fof(kb_SUMO_9289,axiom,
    s__documentation(s__ElectricalSignalling,s__EnglishLanguage,'&%ElectricalSignalling is the subclass of &%Signalling processes that involve control of an electrical current. Cf. &%ElectronicSignalling.') ).

fof(kb_SUMO_9290,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__ElectricalSignalling)
       => ? [V__D] :
            ( s__instance(V__D,s__Object)
            & s__instance(V__D,s__ElectricDevice)
            & s__instrument(V__S,V__D) ) ) ) ).

fof(kb_SUMO_9291,axiom,
    s__subclass(s__ElectronicSignalling,s__ElectricalSignalling) ).

fof(kb_SUMO_9292,axiom,
    s__instance(s__ElectronicSignalling__t,s__SetOrClass) ).

fof(kb_SUMO_9293,axiom,
    s__documentation(s__ElectronicSignalling,s__EnglishLanguage,'&%ElectronicSignalling is the subclass of &%ElectricalSignalling that involve a signal generated through electronic means.') ).

fof(kb_SUMO_9294,axiom,
    s__subclass(s__SecurityDevice,s__Device) ).

fof(kb_SUMO_9295,axiom,
    s__instance(s__SecurityDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9296,axiom,
    s__documentation(s__SecurityDevice,s__EnglishLanguage,'A &%Device whose purpose is to protect people or property from kidnappers and/or thieves.') ).

fof(kb_SUMO_9297,axiom,
    s__subclass(s__Lock,s__SecurityDevice) ).

fof(kb_SUMO_9298,axiom,
    s__documentation(s__Lock,s__EnglishLanguage,'A &%Device, which, through a &%Key or a combination prevents access to a &%Container or &%StationaryArtifact.') ).

fof(kb_SUMO_9299,axiom,
    s__subclass(s__Key,s__SecurityDevice) ).

fof(kb_SUMO_9300,axiom,
    s__instance(s__Key__t,s__SetOrClass) ).

fof(kb_SUMO_9301,axiom,
    s__documentation(s__Key,s__EnglishLanguage,'A &%Device which opens and closes a &%Lock.') ).

fof(kb_SUMO_9302,axiom,
    ! [V__KEY] :
      ( s__instance(V__KEY,s__Key)
     => ? [V__LOCK] :
          ( s__instance(V__LOCK,s__Object)
          & s__instance(V__LOCK,s__Lock)
          & s__capability(s__Opening,s__instrument__m,V__LOCK)
          & s__capability(s__Closing,s__instrument__m,V__LOCK) ) ) ).

fof(kb_SUMO_9303,axiom,
    s__subclass(s__SafeContainer,s__Container) ).

fof(kb_SUMO_9304,axiom,
    s__instance(s__SafeContainer__t,s__SetOrClass) ).

fof(kb_SUMO_9305,axiom,
    s__subclass(s__SafeContainer,s__SecurityDevice) ).

fof(kb_SUMO_9306,axiom,
    s__documentation(s__SafeContainer,s__EnglishLanguage,'A &%Container with a &%Lock which is intended to secure items from theft. Note that this covers safes, lockers, and locked storage compartments.') ).

fof(kb_SUMO_9307,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__SafeContainer)
       => ? [V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__L,s__Lock)
            & s__part(V__L,V__S) ) ) ) ).

fof(kb_SUMO_9308,axiom,
    s__subclass(s__AnimalController,s__Device) ).

fof(kb_SUMO_9309,axiom,
    s__instance(s__AnimalController__t,s__SetOrClass) ).

fof(kb_SUMO_9310,axiom,
    s__documentation(s__AnimalController,s__EnglishLanguage,'Any &%Device which is used to control the movements of an &%Animal or &%Human, e.g. leashes, reins, harnesses, muzzles, bridles, shackles, handcuffs, etc.') ).

fof(kb_SUMO_9311,axiom,
    ! [V__AC] :
      ( s__instance(V__AC,s__Object)
     => ( s__instance(V__AC,s__AnimalController)
       => s__hasPurpose(V__AC,'(? [V__G,V__A] : (s__instance(V__G,s__Process) & s__instance(V__G,s__Guiding) & s__instrument(V__G,V__AC) & s__instance(V__A,s__Animal) & s__patient(V__G,V__A)))') ) ) ).

fof(kb_SUMO_9312,axiom,
    s__subclass(s__SelfPoweredDevice,s__Device) ).

fof(kb_SUMO_9313,axiom,
    s__documentation(s__SelfPoweredDevice,s__EnglishLanguage,'&%SelfPoweredDevice is the subclass of &%Devices whose action is powered by some kind of on-board component or power source (not the user, which would be a &%UserPoweredVehicle).') ).

fof(kb_SUMO_9314,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Device)
     => ( s__instance(V__DEVICE,s__SelfPoweredDevice)
       => ? [V__SOURCE] :
            ( s__instance(V__SOURCE,s__Artifact)
            & s__instance(V__SOURCE,s__Device)
            & s__powerPlant(V__DEVICE,V__SOURCE) ) ) ) ).

fof(kb_SUMO_9315,axiom,
    s__subclass(s__AnimalPoweredDevice,s__Device) ).

fof(kb_SUMO_9316,axiom,
    s__instance(s__AnimalPoweredDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9317,axiom,
    s__documentation(s__AnimalPoweredDevice,s__EnglishLanguage,'&%AnimalPoweredDevice is the subclass of &%Devices that function with power supplied by animals. Examples: oxcarts, horse-drawn plows, mule-driven mills.') ).

fof(kb_SUMO_9318,axiom,
    ! [V__P,V__D] :
      ( ( s__instance(V__D,s__Object)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__D,s__AnimalPoweredDevice)
          & s__instrument(V__P,V__D) )
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Animal)
            & s__instrument(V__P,V__A) ) ) ) ).

fof(kb_SUMO_9319,axiom,
    s__documentation(s__Flat,s__EnglishLanguage,'This &%ShapeAttribute describes a three dimensional &%Object for which two dimensions are markedly larger than the third, and the two larger dimensions also are not of markedly different lengths.') ).

fof(kb_SUMO_9320,axiom,
    s__instance(s__Flat,s__ShapeAttribute) ).

fof(kb_SUMO_9321,axiom,
    ! [V__S1,V__F,V__S2,V__H] :
      ( ( s__instance(V__H,s__LengthMeasure)
        & s__instance(V__S2,s__SelfConnectedObject)
        & s__instance(V__S2,s__Quantity)
        & s__instance(V__F,s__SelfConnectedObject)
        & s__instance(V__S1,s__SelfConnectedObject)
        & s__instance(V__S1,s__Quantity) )
     => ( s__attribute(V__F,s__Flat)
       => ( s__side(V__S1,V__F)
          & s__side(V__S2,V__F)
          & s__meetsSpatially(V__S1,V__S2)
          & V__S1 != V__S2
          & s__height(V__F,V__H)
          & greater(V__S1,times("2",V__H))
          & greater(V__S2,times("2",V__H)) ) ) ) ).

fof(kb_SUMO_9322,axiom,
    s__documentation(s__LongAndThin,s__EnglishLanguage,'This &%ShapeAttribute describes a three dimensional &%Object that is markedly longer in one dimension than in the other two.') ).

fof(kb_SUMO_9323,axiom,
    s__instance(s__LongAndThin,s__ShapeAttribute) ).

fof(kb_SUMO_9324,axiom,
    ! [V__S1,V__F,V__S2,V__H] :
      ( ( s__instance(V__H,s__LengthMeasure)
        & s__instance(V__S2,s__SelfConnectedObject)
        & s__instance(V__S2,s__Quantity)
        & s__instance(V__F,s__SelfConnectedObject)
        & s__instance(V__S1,s__SelfConnectedObject)
        & s__instance(V__S1,s__Quantity) )
     => ( s__attribute(V__F,s__LongAndThin)
       => ( s__side(V__S1,V__F)
          & s__side(V__S2,V__F)
          & s__meetsSpatially(V__S1,V__S2)
          & V__S1 != V__S2
          & s__length(V__F,V__H)
          & less(V__S1,times("3",V__H))
          & less(V__S2,times("3",V__H)) ) ) ) ).

fof(kb_SUMO_9325,axiom,
    s__instance(s__LevelShape,s__ShapeAttribute) ).

fof(kb_SUMO_9326,axiom,
    s__documentation(s__LevelShape,s__EnglishLanguage,'The &%ShapeAttribute of &%Objects where no part of the top of the &%Object is higher than any other part of the top.') ).

fof(kb_SUMO_9327,axiom,
    ! [V__O] :
      ( s__instance(V__O,s__SelfConnectedObject)
     => ( s__attribute(V__O,s__LevelShape)
       => ~ ? [V__P1,V__P2,V__T,V__H1,V__H2] :
              ( s__instance(V__H2,s__LengthMeasure)
              & s__instance(V__H1,s__LengthMeasure)
              & s__instance(V__T,s__SelfConnectedObject)
              & s__instance(V__P2,s__SelfConnectedObject)
              & s__instance(V__P1,s__SelfConnectedObject)
              & s__top(V__T,V__O)
              & s__part(V__P1,V__T)
              & s__part(V__P2,V__T)
              & s__height(V__P1,V__H1)
              & s__height(V__P2,V__H2)
              & greater(V__H1,V__H2) ) ) ) ).

fof(kb_SUMO_9328,axiom,
    s__instance(s__SymmetricShape,s__ShapeAttribute) ).

fof(kb_SUMO_9329,axiom,
    s__documentation(s__SymmetricShape,s__EnglishLanguage,'A &%ShapeAttribute that applies to a &%SelfConnectedObject that can be divided into two copies of each other.') ).

fof(kb_SUMO_9330,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__attribute(V__T,s__SymmetricShape)
       => ? [V__C1,V__C2] :
            ( s__instance(V__C2,s__Object)
            & s__instance(V__C1,s__Object)
            & s__copy(V__C1,V__C2)
            & V__T = s__MereologicalSumFn(V__C1,V__C2) ) ) ) ).

fof(kb_SUMO_9331,axiom,
    s__subclass(s__Baton,s__Device) ).

fof(kb_SUMO_9332,axiom,
    s__instance(s__Baton__t,s__SetOrClass) ).

fof(kb_SUMO_9333,axiom,
    s__documentation(s__Baton,s__EnglishLanguage,'A thin stick which is used for &%MusicalConducting.') ).

fof(kb_SUMO_9334,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Baton)
       => s__hasPurpose(V__B,'(? [V__M,V__G] : (s__instance(V__G,s__Process) & s__instance(V__M,s__Process) & s__instance(V__M,s__MusicalPerformance) & s__instance(V__G,s__Guiding) & s__subProcess(V__G,V__M) & s__instrument(V__G,V__B)))') ) ) ).

fof(kb_SUMO_9335,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Baton)
       => s__attribute(V__B,s__LongAndThin) ) ) ).

fof(kb_SUMO_9336,axiom,
    s__subclass(s__SecurityAlarm,s__SecurityDevice) ).

fof(kb_SUMO_9337,axiom,
    s__subclass(s__SecurityAlarm,s__ElectricDevice) ).

fof(kb_SUMO_9338,axiom,
    s__instance(s__SecurityAlarm__t,s__SetOrClass) ).

fof(kb_SUMO_9339,axiom,
    s__documentation(s__SecurityAlarm,s__EnglishLanguage,'A &%SecurityDevice that detects intrusions to a &%StationaryArtifact and issues a warning of some sort.') ).

fof(kb_SUMO_9340,axiom,
    s__partition_3(s__Quantity,s__FiniteQuantity,s__InfiniteQuantity) ).

fof(kb_SUMO_9341,axiom,
    s__subclass(s__FiniteQuantity,s__Quantity) ).

fof(kb_SUMO_9342,axiom,
    s__instance(s__FiniteQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_9343,axiom,
    s__documentation(s__FiniteQuantity,s__EnglishLanguage,'Any &%Quantity that is limited or bounded in magnitude.') ).

fof(kb_SUMO_9344,axiom,
    s__subclass(s__InfiniteQuantity,s__Quantity) ).

fof(kb_SUMO_9345,axiom,
    s__instance(s__InfiniteQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_9346,axiom,
    s__documentation(s__InfiniteQuantity,s__EnglishLanguage,'Any &%Quantity that is not limited or bounded in magnitude.') ).

fof(kb_SUMO_9347,axiom,
    s__subclass(s__Clock,s__MeasuringDevice) ).

fof(kb_SUMO_9348,axiom,
    s__documentation(s__Clock,s__EnglishLanguage,'Any &%Device that measures and represents &%TimeDuration or &%TimePosition.') ).

fof(kb_SUMO_9349,axiom,
    ! [V__Q,V__C,V__M] :
      ( ( s__instance(V__M,s__Process)
        & s__instance(V__C,s__Object) )
     => ( ( s__instance(V__M,s__Measuring)
          & s__result(V__M,V__Q)
          & s__instrument(V__M,V__C)
          & s__instance(V__C,s__Clock) )
       => s__instance(V__Q,s__TimeMeasure) ) ) ).

fof(kb_SUMO_9350,axiom,
    s__subclass(s__WatchClock,s__Clock) ).

fof(kb_SUMO_9351,axiom,
    s__instance(s__WatchClock__t,s__SetOrClass) ).

fof(kb_SUMO_9352,axiom,
    s__instance(s__Clock__t,s__SetOrClass) ).

fof(kb_SUMO_9353,axiom,
    s__documentation(s__WatchClock,s__EnglishLanguage,'A &%Clock that can be worn on the &%Wrist.') ).

fof(kb_SUMO_9354,axiom,
    ! [V__P,V__C,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__C,s__WearableItem)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__C)
          & s__located(V__C,V__W)
          & s__instance(V__C,s__Clock)
          & s__instance(V__W,s__Wrist) )
       => s__instance(V__C,s__WatchClock) ) ) ).

fof(kb_SUMO_9355,axiom,
    s__subclass(s__Thermometer,s__MeasuringDevice) ).

fof(kb_SUMO_9356,axiom,
    s__instance(s__Thermometer__t,s__SetOrClass) ).

fof(kb_SUMO_9357,axiom,
    s__documentation(s__Thermometer,s__EnglishLanguage,'Any &%Device that measures and represents &%TemperatureMeasure.') ).

fof(kb_SUMO_9358,axiom,
    ! [V__THERMOMETER,V__QUANTITY,V__MEASURE] :
      ( ( s__instance(V__MEASURE,s__Process)
        & s__instance(V__THERMOMETER,s__Object) )
     => ( ( s__instance(V__MEASURE,s__Measuring)
          & s__result(V__MEASURE,V__QUANTITY)
          & s__instrument(V__MEASURE,V__THERMOMETER)
          & s__instance(V__THERMOMETER,s__Thermometer) )
       => s__instance(V__QUANTITY,s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_9359,axiom,
    s__subclass(s__PressureMeasuringDevice,s__MeasuringDevice) ).

fof(kb_SUMO_9360,axiom,
    s__instance(s__PressureMeasuringDevice__t,s__SetOrClass) ).

fof(kb_SUMO_9361,axiom,
    s__documentation(s__PressureMeasuringDevice,s__EnglishLanguage,'Any &%Device that measures and represents &%PressureMeasure.') ).

fof(kb_SUMO_9362,axiom,
    ! [V__Q,V__T,V__M] :
      ( ( s__instance(V__M,s__Process)
        & s__instance(V__T,s__Object) )
     => ( ( s__instance(V__M,s__Measuring)
          & s__result(V__M,V__Q)
          & s__instrument(V__M,V__T)
          & s__instance(V__T,s__Thermometer) )
       => s__instance(V__Q,s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_9363,axiom,
    s__documentation(s__measurementReading__m,s__EnglishLanguage,'(measurementReading ?DEVICE ?QUANTITY) means that ?QUANTITY is a reading of the &%MeasuringDevice ?DEVICE, e.g. if ?THERMOMETER is a &%Thermometer, (measurementReading ?THERMOMETER (&%MeasureFn 42 &%CelsiusDegree)) would mean that ?THERMOMETER registers 42 degrees &%Celsius.') ).

fof(kb_SUMO_9364,axiom,
    s__instance(s__measurementReading__m,s__BinaryPredicate) ).

fof(kb_SUMO_9365,axiom,
    s__domain(s__measurementReading__m,"1",s__MeasuringDevice) ).

fof(kb_SUMO_9366,axiom,
    s__domain(s__measurementReading__m,"2",s__ConstantQuantity) ).

fof(kb_SUMO_9367,axiom,
    s__subclass(s__CommunicationDevice,s__EngineeringComponent) ).

fof(kb_SUMO_9368,axiom,
    s__documentation(s__CommunicationDevice,s__EnglishLanguage,'A &%CommunicationDevice is a &%Device which serves at the &%instrument in a &%Communication &%Process by allowing the communicated message to be conveyed between the participants.') ).

fof(kb_SUMO_9369,axiom,
    s__relatedInternalConcept(s__Communication,s__CommunicationDevice) ).

fof(kb_SUMO_9370,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__CommunicationDevice)
       => s__capability(s__Communication,s__instrument__m,V__DEVICE) ) ) ).

fof(kb_SUMO_9371,axiom,
    s__subclass(s__Telephone,s__ElectricDevice) ).

fof(kb_SUMO_9372,axiom,
    s__subclass(s__Telephone,s__CommunicationDevice) ).

fof(kb_SUMO_9373,axiom,
    s__documentation(s__Telephone,s__EnglishLanguage,'A &%Telephone is a &%CommunicationDevice that enables &%LinguisticCommunication between nodes in a &%TelephoneSystem by converting sound into electrical signals that are then transmitted. When the signals are received, they are converted back into sound.') ).

fof(kb_SUMO_9374,axiom,
    s__subclass(s__Telephoning,s__Communication) ).

fof(kb_SUMO_9375,axiom,
    s__instance(s__Telephoning__t,s__SetOrClass) ).

fof(kb_SUMO_9376,axiom,
    s__documentation(s__Telephoning,s__EnglishLanguage,'A &%Telephoning is a &%Communication in which the &%instrument is a &%Telephone, and which typically includes an &%instance of &%Speaking as a &%subProcess.') ).

fof(kb_SUMO_9377,axiom,
    ! [V__TEL] :
      ( s__instance(V__TEL,s__Process)
     => ( s__instance(V__TEL,s__Telephoning)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__Object)
            & s__instance(V__DEVICE,s__Telephone)
            & s__instrument(V__TEL,V__DEVICE) ) ) ) ).

fof(kb_SUMO_9378,axiom,
    ! [V__TEL,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__TEL,s__Process) )
     => ( s__instance(V__TEL,s__Telephoning)
       => ? [V__SPEAK] :
            ( s__instance(V__SPEAK,s__Process)
            & s__instance(V__SPEAK,s__Speaking)
            & s__subProcess(V__SPEAK,V__TEL)
            & ( s__agent(V__TEL,V__AGENT)
             => s__agent(V__SPEAK,V__AGENT) ) ) ) ) ).

fof(kb_SUMO_9379,axiom,
    s__subclass(s__Fax,s__ArtifactMediatedCommunication) ).

fof(kb_SUMO_9380,axiom,
    s__instance(s__Fax__t,s__SetOrClass) ).

fof(kb_SUMO_9381,axiom,
    s__documentation(s__Fax,s__EnglishLanguage,'The communication of a printed page between remote locations.') ).

fof(kb_SUMO_9382,axiom,
    ! [V__Fax] :
      ( s__instance(V__Fax,s__Process)
     => ( s__instance(V__Fax,s__Fax)
       => ? [V__FaxMachine] :
            ( s__instance(V__FaxMachine,s__Object)
            & s__instance(V__FaxMachine,s__FaxMachine)
            & s__instrument(V__Fax,V__FaxMachine) ) ) ) ).

fof(kb_SUMO_9383,axiom,
    s__subclass(s__FaxMachine,s__TelephonyDevice) ).

fof(kb_SUMO_9384,axiom,
    s__subclass(s__FaxMachine,s__ElectricDevice) ).

fof(kb_SUMO_9385,axiom,
    s__subclass(s__FaxMachine,s__CommunicationDevice) ).

fof(kb_SUMO_9386,axiom,
    s__instance(s__FaxMachine__t,s__SetOrClass) ).

fof(kb_SUMO_9387,axiom,
    s__documentation(s__FaxMachine,s__EnglishLanguage,'A &%FaxMachine is a &%TelephonyDevice that scans a paper page and transmits a coded image of the page over a &%TelephoneSystem to a receiving &%FaxMachine, which decodes the coded and image and prints a replica of the original. A typical &%FaxMachine is made up of a scanner, a printer, a modem, and a control panel with some sort of status display.') ).

fof(kb_SUMO_9388,axiom,
    s__instance(s__emailAddress__m,s__BinaryPredicate) ).

fof(kb_SUMO_9389,axiom,
    s__subrelation(s__emailAddress__m,s__refers__m) ).

fof(kb_SUMO_9390,axiom,
    s__domain(s__emailAddress__m,"1",s__SymbolicString) ).

fof(kb_SUMO_9391,axiom,
    s__domain(s__emailAddress__m,"2",s__Agent) ).

fof(kb_SUMO_9392,axiom,
    s__documentation(s__emailAddress__m,s__EnglishLanguage,'(&%emailAddress ?Address ?Agent) means that ?Address denotes a &%VirtualPlace at which ?Agent can be contacted.') ).

fof(kb_SUMO_9393,axiom,
    s__subclass(s__LightFixture,s__Device) ).

fof(kb_SUMO_9394,axiom,
    s__documentation(s__LightFixture,s__EnglishLanguage,'Any &%Device whose purpose is to be a source of visible light.') ).

fof(kb_SUMO_9395,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__LightFixture)
       => s__capability(s__RadiatingLight,s__instrument__m,V__F) ) ) ).

fof(kb_SUMO_9396,axiom,
    s__subclass(s__Candle,s__LightFixture) ).

fof(kb_SUMO_9397,axiom,
    s__instance(s__Candle__t,s__SetOrClass) ).

fof(kb_SUMO_9398,axiom,
    s__documentation(s__Candle,s__EnglishLanguage,'An &%LightFixture that consists of &%Wax and a wick, which is lit with a flame.') ).

fof(kb_SUMO_9399,axiom,
    ! [V__CANDLE] :
      ( s__instance(V__CANDLE,s__CorpuscularObject)
     => ( s__instance(V__CANDLE,s__Candle)
       => s__material(s__Wax,V__CANDLE) ) ) ).

fof(kb_SUMO_9400,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Candle)
       => s__hasPurpose(V__C,'(? [V__F] : (s__instance(V__F,s__Process) & s__instance(V__F,s__Fire) & s__resource(V__F,V__C)))') ) ) ).

fof(kb_SUMO_9401,axiom,
    s__subclass(s__Lightning,s__WeatherProcess) ).

fof(kb_SUMO_9402,axiom,
    s__instance(s__Lightning__t,s__SetOrClass) ).

fof(kb_SUMO_9403,axiom,
    s__subclass(s__Lightning,s__Radiating) ).

fof(kb_SUMO_9404,axiom,
    s__documentation(s__Lightning,s__EnglishLanguage,'A &%WeatherProcess which involves a significant release of electricity from a &%Cloud.') ).

fof(kb_SUMO_9405,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Process)
     => ( s__instance(V__L,s__Lightning)
       => ? [V__C] :
            ( s__instance(V__C,s__Object)
            & s__instance(V__C,s__Cloud)
            & s__eventLocated(V__L,V__C) ) ) ) ).

fof(kb_SUMO_9406,axiom,
    s__subclass(s__Thunder,s__WeatherProcess) ).

fof(kb_SUMO_9407,axiom,
    s__instance(s__Thunder__t,s__SetOrClass) ).

fof(kb_SUMO_9408,axiom,
    s__subclass(s__Thunder,s__RadiatingSound) ).

fof(kb_SUMO_9409,axiom,
    s__documentation(s__Thunder,s__EnglishLanguage,'Any instance of &%RadiatingSound which is caused by an instance of Lightning.') ).

fof(kb_SUMO_9410,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Process)
     => ( s__instance(V__T,s__Thunder)
       => ? [V__L] :
            ( s__instance(V__L,s__Process)
            & s__instance(V__L,s__Lightning)
            & s__causes(V__L,V__T) ) ) ) ).

fof(kb_SUMO_9411,axiom,
    s__subclass(s__VehicleLight,s__LightFixture) ).

fof(kb_SUMO_9412,axiom,
    s__instance(s__LightFixture__t,s__SetOrClass) ).

fof(kb_SUMO_9413,axiom,
    s__documentation(s__VehicleLight,s__EnglishLanguage,'Any &%LightFixture which is attached to the surface of a &%Vehicle and whose purpose is to illuminate that area around the &%Vehicle so that potential obstacles can be detected or alerted.') ).

fof(kb_SUMO_9414,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__VehicleLight)
       => ? [V__V] :
            ( s__instance(V__V,s__Object)
            & s__instance(V__V,s__Vehicle)
            & s__part(V__L,V__V) ) ) ) ).

fof(kb_SUMO_9415,axiom,
    s__subclass(s__Headlight,s__VehicleLight) ).

fof(kb_SUMO_9416,axiom,
    s__instance(s__Headlight__t,s__SetOrClass) ).

fof(kb_SUMO_9417,axiom,
    s__instance(s__VehicleLight__t,s__SetOrClass) ).

fof(kb_SUMO_9418,axiom,
    s__documentation(s__Headlight,s__EnglishLanguage,'Any &%VehicleLight which is attached to the front of a &%Vehicle.') ).

fof(kb_SUMO_9419,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__Headlight)
       => ? [V__V] :
            ( s__instance(V__V,s__SelfConnectedObject)
            & s__instance(V__V,s__Vehicle)
            & s__part(V__L,s__FrontFn(V__V)) ) ) ) ).

fof(kb_SUMO_9420,axiom,
    s__subclass(s__Taillight,s__VehicleLight) ).

fof(kb_SUMO_9421,axiom,
    s__instance(s__Taillight__t,s__SetOrClass) ).

fof(kb_SUMO_9422,axiom,
    s__documentation(s__Taillight,s__EnglishLanguage,'Any &%VehicleLight which is attached to the back of a &%Vehicle.') ).

fof(kb_SUMO_9423,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__Taillight)
       => ? [V__V] :
            ( s__instance(V__V,s__SelfConnectedObject)
            & s__instance(V__V,s__Vehicle)
            & s__part(V__L,s__BackFn(V__V)) ) ) ) ).

fof(kb_SUMO_9424,axiom,
    s__subclass(s__PaintedPicture,s__ArtWork) ).

fof(kb_SUMO_9425,axiom,
    s__documentation(s__PaintedPicture,s__EnglishLanguage,'Any &%ArtWork which is produced by &%Painting.') ).

fof(kb_SUMO_9426,axiom,
    ! [V__PP] :
      ( s__instance(V__PP,s__PaintedPicture)
     => ? [V__PAINT,V__PAINTING] :
          ( s__instance(V__PAINTING,s__Process)
          & s__instance(V__PAINT,s__Object)
          & s__instance(V__PAINT,s__Paint)
          & s__instance(V__PAINTING,s__Painting)
          & s__resource(V__PAINTING,V__PAINT)
          & s__result(V__PAINTING,V__PP) ) ) ).

fof(kb_SUMO_9427,axiom,
    s__subclass(s__WatercolorPicture,s__PaintedPicture) ).

fof(kb_SUMO_9428,axiom,
    s__instance(s__WatercolorPicture__t,s__SetOrClass) ).

fof(kb_SUMO_9429,axiom,
    s__documentation(s__WatercolorPicture,s__EnglishLanguage,'Any &%PaintedPicture which is created with water-based paints.') ).

fof(kb_SUMO_9430,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__WatercolorPicture)
     => ? [V__WP,V__P] :
          ( s__instance(V__P,s__Process)
          & s__instance(V__WP,s__Object)
          & s__instance(V__WP,s__WatercolorPaint)
          & s__instance(V__P,s__Painting)
          & s__resource(V__P,V__WP)
          & s__result(V__P,V__W) ) ) ).

fof(kb_SUMO_9431,axiom,
    s__subclass(s__Wallpaper,s__ArtWork) ).

fof(kb_SUMO_9432,axiom,
    s__instance(s__Wallpaper__t,s__SetOrClass) ).

fof(kb_SUMO_9433,axiom,
    s__documentation(s__Wallpaper,s__EnglishLanguage,'Any decorative paper that is used to cover the &%Walls of &%Rooms.') ).

fof(kb_SUMO_9434,axiom,
    ! [V__P,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__P,s__Object) )
     => ( ( s__instance(V__W,s__Wallpaper)
          & s__part(V__P,V__W) )
       => s__instance(V__P,s__Paper) ) ) ).

fof(kb_SUMO_9435,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__Wallpaper)
       => s__hasPurpose(V__P,'(? [V__W,V__R,V__C] : (s__instance(V__C,s__Process) & s__instance(V__R,s__Object) & s__instance(V__W,s__Object) & s__instance(V__W,s__Wall) & s__part(V__W,V__R) & s__instance(V__R,s__Room) & s__instance(V__C,s__Covering) & s__patient(V__C,V__W) & s__instrument(V__C,V__P)))') ) ) ).

fof(kb_SUMO_9436,axiom,
    s__subclass(s__Sculpture,s__ArtWork) ).

fof(kb_SUMO_9437,axiom,
    s__instance(s__Sculpture__t,s__SetOrClass) ).

fof(kb_SUMO_9438,axiom,
    s__documentation(s__Sculpture,s__EnglishLanguage,'Any &%ArtWork which is not constructed on the two-dimensional surface of a canvas, piece of paper, etc.') ).

fof(kb_SUMO_9439,axiom,
    s__subclass(s__Portrait,s__PaintedPicture) ).

fof(kb_SUMO_9440,axiom,
    s__instance(s__Portrait__t,s__SetOrClass) ).

fof(kb_SUMO_9441,axiom,
    s__instance(s__PaintedPicture__t,s__SetOrClass) ).

fof(kb_SUMO_9442,axiom,
    s__documentation(s__Portrait,s__EnglishLanguage,'A &%PaintedPicture that represents someones &%Face.') ).

fof(kb_SUMO_9443,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Portrait)
     => ? [V__F] :
          ( s__instance(V__F,s__Face)
          & s__represents(V__P,V__F) ) ) ).

fof(kb_SUMO_9444,axiom,
    s__subclass(s__Sketch,s__ArtWork) ).

fof(kb_SUMO_9445,axiom,
    s__instance(s__Sketch__t,s__SetOrClass) ).

fof(kb_SUMO_9446,axiom,
    s__documentation(s__Sketch,s__EnglishLanguage,'Any &%ArtWork which is produced by a pencil or piece of charcoal.') ).

fof(kb_SUMO_9447,axiom,
    s__subclass(s__Collage,s__ArtWork) ).

fof(kb_SUMO_9448,axiom,
    s__instance(s__Collage__t,s__SetOrClass) ).

fof(kb_SUMO_9449,axiom,
    s__documentation(s__Collage,s__EnglishLanguage,'Any abstract &%ArtWork that is produced by arranging bits of paper or photographs.') ).

fof(kb_SUMO_9450,axiom,
    s__subclass(s__Folding,s__ShapeChange) ).

fof(kb_SUMO_9451,axiom,
    s__instance(s__Folding__t,s__SetOrClass) ).

fof(kb_SUMO_9452,axiom,
    s__documentation(s__Folding,s__EnglishLanguage,'Bending something in such a way that one part of it covers another part.') ).

fof(kb_SUMO_9453,axiom,
    ! [V__O,V__F] :
      ( ( s__instance(V__F,s__Process)
        & s__instance(V__O,s__Object) )
     => ( ( s__instance(V__F,s__Folding)
          & s__patient(V__F,V__O) )
       => ? [V__C,V__P1,V__P2] :
            ( s__instance(V__P2,s__Object)
            & s__instance(V__P1,s__Object)
            & s__instance(V__C,s__Process)
            & s__instance(V__C,s__Covering)
            & s__subProcess(V__C,V__F)
            & s__part(V__P1,V__O)
            & s__part(V__P2,V__O)
            & s__instrument(V__C,V__P1)
            & s__patient(V__C,V__P2) ) ) ) ).

fof(kb_SUMO_9454,axiom,
    s__subclass(s__Painting,s__Covering) ).

fof(kb_SUMO_9455,axiom,
    s__subclass(s__Painting,s__Coloring) ).

fof(kb_SUMO_9456,axiom,
    s__instance(s__Painting__t,s__SetOrClass) ).

fof(kb_SUMO_9457,axiom,
    s__documentation(s__Painting,s__EnglishLanguage,'The application of &%Paint to a &%surface. Note that this class covers both &%ArtPainting (the creation of &%PaintedPictures), as well as painting ones kitchen, for example.') ).

fof(kb_SUMO_9458,axiom,
    ! [V__SURFACE,V__STUFF,V__PAINT] :
      ( ( s__instance(V__PAINT,s__Process)
        & s__instance(V__STUFF,s__Object)
        & s__instance(V__SURFACE,s__SelfConnectedObject) )
     => ( ( s__instance(V__PAINT,s__Painting)
          & s__patient(V__PAINT,V__SURFACE)
          & s__instrument(V__PAINT,V__STUFF) )
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__SelfConnectedObject)
            & s__surface(V__SURFACE,V__OBJ)
            & s__instance(V__STUFF,s__Paint) ) ) ) ).

fof(kb_SUMO_9459,axiom,
    s__subclass(s__Paint,s__Solution) ).

fof(kb_SUMO_9460,axiom,
    s__instance(s__Paint__t,s__SetOrClass) ).

fof(kb_SUMO_9461,axiom,
    s__documentation(s__Paint,s__EnglishLanguage,'Any &%Solution which is capable of &%Coloring something.') ).

fof(kb_SUMO_9462,axiom,
    ! [V__PAINT] :
      ( s__instance(V__PAINT,s__Object)
     => ( s__instance(V__PAINT,s__Paint)
       => s__capability(s__Coloring,s__instrument__m,V__PAINT) ) ) ).

fof(kb_SUMO_9463,axiom,
    s__subclass(s__WatercolorPaint,s__Paint) ).

fof(kb_SUMO_9464,axiom,
    s__instance(s__WatercolorPaint__t,s__SetOrClass) ).

fof(kb_SUMO_9465,axiom,
    s__documentation(s__WatercolorPaint,s__EnglishLanguage,'Any &%Paint which is a water-based &%Solution.') ).

fof(kb_SUMO_9466,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__WatercolorPaint)
       => ? [V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__W,s__Water)
            & s__part(V__W,V__P) ) ) ) ).

fof(kb_SUMO_9467,axiom,
    s__subclass(s__OilPaint,s__Paint) ).

fof(kb_SUMO_9468,axiom,
    s__instance(s__OilPaint__t,s__SetOrClass) ).

fof(kb_SUMO_9469,axiom,
    s__disjoint(s__OilPaint,s__WatercolorPaint) ).

fof(kb_SUMO_9470,axiom,
    s__documentation(s__OilPaint,s__EnglishLanguage,'Any &%Paint which is an oil-based &%Solution.') ).

fof(kb_SUMO_9471,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__OilPaint)
       => ? [V__O] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__O,s__Oil)
            & s__part(V__O,V__P) ) ) ) ).

fof(kb_SUMO_9472,axiom,
    s__subclass(s__OilPicture,s__PaintedPicture) ).

fof(kb_SUMO_9473,axiom,
    s__instance(s__OilPicture__t,s__SetOrClass) ).

fof(kb_SUMO_9474,axiom,
    s__disjoint(s__OilPicture,s__WatercolorPicture) ).

fof(kb_SUMO_9475,axiom,
    s__documentation(s__OilPicture,s__EnglishLanguage,'Any &%OilPicture which is created with oil-based paints.') ).

fof(kb_SUMO_9476,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__OilPicture)
     => ? [V__O,V__PAINTING] :
          ( s__instance(V__PAINTING,s__Process)
          & s__instance(V__O,s__Object)
          & s__instance(V__O,s__OilPaint)
          & s__instance(V__PAINTING,s__Painting)
          & s__resource(V__PAINTING,V__O)
          & s__result(V__PAINTING,V__P) ) ) ).

fof(kb_SUMO_9477,axiom,
    s__subclass(s__ArtPainting,s__ContentDevelopment) ).

fof(kb_SUMO_9478,axiom,
    s__subclass(s__ArtPainting,s__Painting) ).

fof(kb_SUMO_9479,axiom,
    s__instance(s__ArtPainting__t,s__SetOrClass) ).

fof(kb_SUMO_9480,axiom,
    s__documentation(s__ArtPainting,s__EnglishLanguage,'Any &%ContentDevelopment that results in a &%PaintedPicture.') ).

fof(kb_SUMO_9481,axiom,
    ! [V__PAINT] :
      ( s__instance(V__PAINT,s__Process)
     => ( s__instance(V__PAINT,s__ArtPainting)
       => ? [V__PICTURE] :
            ( s__instance(V__PICTURE,s__PaintedPicture)
            & s__result(V__PAINT,V__PICTURE) ) ) ) ).

fof(kb_SUMO_9482,axiom,
    s__documentation(s__potentialOfHydrogen__m,s__EnglishLanguage,'(potentialOfHydrogen ?SOLUTION ?NUMBER) means that the Solution ?SOLUTION has a pH value of ?NUMBER. The ph varies between 0 and 14, and it is a measure of the acidity or alkalinity of ?SOLUTION. More precisely, and it is the logarithm of the reciprocal of the quantity of &%AtomGrams of &%Hydrogen ions.') ).

fof(kb_SUMO_9483,axiom,
    s__instance(s__potentialOfHydrogen__m,s__BinaryPredicate) ).

fof(kb_SUMO_9484,axiom,
    s__domain(s__potentialOfHydrogen__m,"1",s__Solution) ).

fof(kb_SUMO_9485,axiom,
    s__domain(s__potentialOfHydrogen__m,"2",s__RealNumber) ).

fof(kb_SUMO_9486,axiom,
    ! [V__S,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__S,s__Solution) )
     => ( s__potentialOfHydrogen(V__S,V__N)
       => ( greatereq(V__N,"0")
          & lesseq(V__N,"14") ) ) ) ).

fof(kb_SUMO_9487,axiom,
    s__subclass(s__Tracing,s__ContentDevelopment) ).

fof(kb_SUMO_9488,axiom,
    s__subclass(s__Tracing,s__SurfaceChange) ).

fof(kb_SUMO_9489,axiom,
    s__instance(s__Tracing__t,s__SetOrClass) ).

fof(kb_SUMO_9490,axiom,
    s__documentation(s__Tracing,s__EnglishLanguage,'Any &%ContentDevelopment that results in a &%Blueprint.') ).

fof(kb_SUMO_9491,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Process)
     => ( s__instance(V__T,s__Tracing)
       => ? [V__P] :
            ( s__instance(V__P,s__Blueprint)
            & s__result(V__T,V__P) ) ) ) ).

fof(kb_SUMO_9492,axiom,
    s__subclass(s__ComposingMusic,s__ContentDevelopment) ).

fof(kb_SUMO_9493,axiom,
    s__instance(s__ComposingMusic__t,s__SetOrClass) ).

fof(kb_SUMO_9494,axiom,
    s__documentation(s__ComposingMusic,s__EnglishLanguage,'&%ComposingMusic is a type of &%ContentDevelopment that results in a &%MusicalComposition') ).

fof(kb_SUMO_9495,axiom,
    s__termFormat(s__EnglishLanguage,s__ComposingMusic,'composing music') ).

fof(kb_SUMO_9496,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Process)
     => ( s__instance(V__C,s__ComposingMusic)
       => ? [V__M] :
            ( s__instance(V__M,s__MusicalComposition)
            & s__result(V__C,V__M) ) ) ) ).

fof(kb_SUMO_9497,axiom,
    s__subclass(s__Drawing,s__ContentDevelopment) ).

fof(kb_SUMO_9498,axiom,
    s__subclass(s__Drawing,s__SurfaceChange) ).

fof(kb_SUMO_9499,axiom,
    s__instance(s__Drawing__t,s__SetOrClass) ).

fof(kb_SUMO_9500,axiom,
    s__documentation(s__Drawing,s__EnglishLanguage,'Any &%ContentDevelopment that results in a &%Sketch.') ).

fof(kb_SUMO_9501,axiom,
    ! [V__DRAW] :
      ( s__instance(V__DRAW,s__Process)
     => ( s__instance(V__DRAW,s__Drawing)
       => ? [V__SKETCH] :
            ( s__instance(V__SKETCH,s__Sketch)
            & s__result(V__DRAW,V__SKETCH) ) ) ) ).

fof(kb_SUMO_9502,axiom,
    s__subclass(s__Focusing,s__QuantityChange) ).

fof(kb_SUMO_9503,axiom,
    s__instance(s__Focusing__t,s__SetOrClass) ).

fof(kb_SUMO_9504,axiom,
    s__documentation(s__Focusing,s__EnglishLanguage,'Altering the relative distance of a &%Lens so that a visual image is sharper.') ).

fof(kb_SUMO_9505,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Process)
     => ( s__instance(V__F,s__Focusing)
       => ? [V__L] :
            ( s__instance(V__L,s__Lens)
            & s__patient(V__F,V__L) ) ) ) ).

fof(kb_SUMO_9506,axiom,
    s__subclass(s__DisplayArtifact,s__Artifact) ).

fof(kb_SUMO_9507,axiom,
    s__documentation(s__DisplayArtifact,s__EnglishLanguage,'Something for posting content so that it can be disseminated to the public.') ).

fof(kb_SUMO_9508,axiom,
    ! [V__DA] :
      ( s__instance(V__DA,s__Physical)
     => ( s__instance(V__DA,s__DisplayArtifact)
       => s__hasPurpose(V__DA,'(? [V__P,V__D,V__I] : (s__instance(V__D,s__Process) & s__instance(V__P,s__Process) & s__instance(V__P,s__Putting) & s__instance(V__D,s__Disseminating) & s__instance(V__I,s__ContentBearingObject) & s__patient(V__P,V__I) & s__patient(V__D,V__I) & s__destination(V__P,V__DA)))') ) ) ).

fof(kb_SUMO_9509,axiom,
    s__subclass(s__VehicleWheel,s__Wheel) ).

fof(kb_SUMO_9510,axiom,
    s__instance(s__VehicleWheel__t,s__SetOrClass) ).

fof(kb_SUMO_9511,axiom,
    s__instance(s__Wheel__t,s__SetOrClass) ).

fof(kb_SUMO_9512,axiom,
    s__documentation(s__VehicleWheel,s__EnglishLanguage,'&%VehicleWheel is a class of cylindrical &%Devices used to move a &%RoadVehicle along a road, running either directly on the wheel rims or on tires attached to the wheel rims.') ).

fof(kb_SUMO_9513,axiom,
    s__subclass(s__Wheel,s__Artifact) ).

fof(kb_SUMO_9514,axiom,
    s__documentation(s__Wheel,s__EnglishLanguage,'A circular &%Artifact which is a component of &%LandVehicles and of some &%Devices.') ).

fof(kb_SUMO_9515,axiom,
    ! [V__VEHICLE] :
      ( s__instance(V__VEHICLE,s__Object)
     => ( s__instance(V__VEHICLE,s__LandVehicle)
       => ? [V__WHEEL] :
            ( s__instance(V__WHEEL,s__Object)
            & s__instance(V__WHEEL,s__Wheel)
            & s__part(V__WHEEL,V__VEHICLE) ) ) ) ).

fof(kb_SUMO_9516,axiom,
    s__subclass(s__VehicleController,s__Device) ).

fof(kb_SUMO_9517,axiom,
    s__documentation(s__VehicleController,s__EnglishLanguage,'Any &%Device which is used to start, stop or control the movements of a &%Vehicle. This class covers steering wheels, brakes, acceleration pedals, airplane sticks, etc.') ).

fof(kb_SUMO_9518,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__VehicleController)
       => ? [V__V] :
            ( s__instance(V__V,s__Object)
            & s__instance(V__V,s__Vehicle)
            & s__part(V__C,V__V) ) ) ) ).

fof(kb_SUMO_9519,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__VehicleController)
       => s__hasPurpose(V__C,'(? [V__D] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Driving) & s__instrument(V__D,V__C)))') ) ) ).

fof(kb_SUMO_9520,axiom,
    s__subclass(s__SteeringWheel,s__VehicleController) ).

fof(kb_SUMO_9521,axiom,
    s__instance(s__SteeringWheel__t,s__SetOrClass) ).

fof(kb_SUMO_9522,axiom,
    s__instance(s__VehicleController__t,s__SetOrClass) ).

fof(kb_SUMO_9523,axiom,
    s__documentation(s__SteeringWheel,s__EnglishLanguage,'A &%VehicleController which enables one to steer a &%Vehicle.') ).

fof(kb_SUMO_9524,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__SteeringWheel)
       => s__capability(s__DirectionChange,s__instrument__m,V__W) ) ) ).

fof(kb_SUMO_9525,axiom,
    s__subclass(s__VehicleBrake,s__VehicleController) ).

fof(kb_SUMO_9526,axiom,
    s__instance(s__VehicleBrake__t,s__SetOrClass) ).

fof(kb_SUMO_9527,axiom,
    s__documentation(s__VehicleBrake,s__EnglishLanguage,'A &%VehicleController which is capable of stopping the motion of a &%Vehicle.') ).

fof(kb_SUMO_9528,axiom,
    ! [V__B,V__V] :
      ( ( s__instance(V__V,s__Object)
        & s__instance(V__B,s__Object) )
     => ( ( s__instance(V__B,s__VehicleBrake)
          & s__instance(V__V,s__Vehicle)
          & s__part(V__B,V__V) )
       => s__hasPurpose(V__B,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__StopFn(s__Motion)) & s__patient(V__S,V__V) & s__instrument(V__S,V__B)))') ) ) ).

fof(kb_SUMO_9529,axiom,
    s__subclass(s__VehicleThrottle,s__VehicleController) ).

fof(kb_SUMO_9530,axiom,
    s__instance(s__VehicleThrottle__t,s__SetOrClass) ).

fof(kb_SUMO_9531,axiom,
    s__documentation(s__VehicleThrottle,s__EnglishLanguage,'A &%VehicleController which controls the amount of &%Fuel which is supplied to the &%Engine.') ).

fof(kb_SUMO_9532,axiom,
    s__subclass(s__VehicleTire,s__Artifact) ).

fof(kb_SUMO_9533,axiom,
    s__instance(s__VehicleTire__t,s__SetOrClass) ).

fof(kb_SUMO_9534,axiom,
    s__documentation(s__VehicleTire,s__EnglishLanguage,'A covering, usually made of rubber, for a &%Wheel.') ).

fof(kb_SUMO_9535,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__VehicleTire)
       => ? [V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__W,s__VehicleWheel)
            & s__part(V__T,V__W) ) ) ) ).

fof(kb_SUMO_9536,axiom,
    s__subclass(s__VehicleWindow,s__Window) ).

fof(kb_SUMO_9537,axiom,
    s__instance(s__VehicleWindow__t,s__SetOrClass) ).

fof(kb_SUMO_9538,axiom,
    s__instance(s__Window__t,s__SetOrClass) ).

fof(kb_SUMO_9539,axiom,
    s__documentation(s__VehicleWindow,s__EnglishLanguage,'Any &%Window which is part of a &%Vehicle, e.g. the &%Windshield and &%RearWindow of an &%Automobile.') ).

fof(kb_SUMO_9540,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__VehicleWindow)
       => ? [V__V] :
            ( s__instance(V__V,s__Object)
            & s__instance(V__V,s__Vehicle)
            & s__part(V__W,V__V) ) ) ) ).

fof(kb_SUMO_9541,axiom,
    s__subclass(s__Windshield,s__VehicleWindow) ).

fof(kb_SUMO_9542,axiom,
    s__instance(s__Windshield__t,s__SetOrClass) ).

fof(kb_SUMO_9543,axiom,
    s__disjoint(s__Windshield,s__RearWindow) ).

fof(kb_SUMO_9544,axiom,
    s__documentation(s__Windshield,s__EnglishLanguage,'Any &%VehicleWindow which located at the front of a &%RoadVehicle.') ).

fof(kb_SUMO_9545,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__Windshield)
       => ? [V__A] :
            ( s__instance(V__A,s__SelfConnectedObject)
            & s__instance(V__A,s__RoadVehicle)
            & s__part(V__W,s__FrontFn(V__A)) ) ) ) ).

fof(kb_SUMO_9546,axiom,
    s__subclass(s__LandVehicle,s__Vehicle) ).

fof(kb_SUMO_9547,axiom,
    s__documentation(s__LandVehicle,s__EnglishLanguage,'&%LandVehicle is the class of &%TransportationDevices that travel on land. The two main types of &%LandVehicle are &%RoadVehicle and &%RailVehicle. Note that this includes vehicles which travel on any solid surface, including a frozen body of water or snow.') ).

fof(kb_SUMO_9548,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__LandVehicle)
       => s__hasPurpose(V__X,'(? [V__EV,V__SURF] : (s__instance(V__SURF,s__SelfConnectedObject) & s__instance(V__EV,s__Physical) & s__surface(V__SURF,s__GeographicArea) & s__instance(V__EV,s__Transportation) & s__holdsDuring(s__WhenFn(V__EV),s__meetsSpatially(V__X,V__SURF))))') ) ) ).

fof(kb_SUMO_9549,axiom,
    s__subclass(s__WaterVehicle,s__Vehicle) ).

fof(kb_SUMO_9550,axiom,
    s__instance(s__WaterVehicle__t,s__SetOrClass) ).

fof(kb_SUMO_9551,axiom,
    s__documentation(s__WaterVehicle,s__EnglishLanguage,'&%WaterVehicle is the class of all &%TransportationDevices used to travel on or in water.') ).

fof(kb_SUMO_9552,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__WaterVehicle)
       => s__hasPurpose(V__X,'(? [V__EV,V__SURF] : (s__instance(V__SURF,s__Object) & s__instance(V__EV,s__Physical) & s__instance(V__SURF,s__Water) & s__instance(V__EV,s__Transportation) & s__holdsDuring(s__WhenFn(V__EV),s__meetsSpatially(V__X,V__SURF))))') ) ) ).

fof(kb_SUMO_9553,axiom,
    ! [V__CRAFT,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__CRAFT,s__Object) )
     => ( ( s__instance(V__CRAFT,s__WaterVehicle)
          & s__instance(V__EVENT,s__Transportation)
          & s__instrument(V__EVENT,V__CRAFT) )
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__eventLocated(V__EVENT,V__WATER) ) ) ) ).

fof(kb_SUMO_9554,axiom,
    s__subclass(s__RoadVehicle,s__LandVehicle) ).

fof(kb_SUMO_9555,axiom,
    s__instance(s__RoadVehicle__t,s__SetOrClass) ).

fof(kb_SUMO_9556,axiom,
    s__instance(s__LandVehicle__t,s__SetOrClass) ).

fof(kb_SUMO_9557,axiom,
    s__documentation(s__RoadVehicle,s__EnglishLanguage,'The class of &%LandVehicles that are not &%RollingStock.') ).

fof(kb_SUMO_9558,axiom,
    s__subclass(s__Fleet,s__Collection) ).

fof(kb_SUMO_9559,axiom,
    s__instance(s__Fleet__t,s__SetOrClass) ).

fof(kb_SUMO_9560,axiom,
    s__documentation(s__Fleet,s__EnglishLanguage,'A &%Collection of &%Vehicle') ).

fof(kb_SUMO_9561,axiom,
    s__termFormat(s__EnglishLanguage,s__Fleet,'Fleet') ).

fof(kb_SUMO_9562,axiom,
    ! [V__FLEET] :
      ( s__instance(V__FLEET,s__Collection)
     => ( s__instance(V__FLEET,s__Fleet)
       => s__memberType(V__FLEET,s__Vehicle) ) ) ).

fof(kb_SUMO_9563,axiom,
    s__instance(s__fleetSize__m,s__BinaryPredicate) ).

fof(kb_SUMO_9564,axiom,
    s__domain(s__fleetSize__m,"1",s__Agent) ).

fof(kb_SUMO_9565,axiom,
    s__domain(s__fleetSize__m,"2",s__Integer) ).

fof(kb_SUMO_9566,axiom,
    s__documentation(s__fleetSize__m,s__EnglishLanguage,'(fleetSize ?AGENT ?NUM) means the &%Agent ?AGENT has a fleet size of an &%Integer ?NUM. The &%Fleet can consists of any type of &%Vehicle') ).

fof(kb_SUMO_9567,axiom,
    s__termFormat(s__EnglishLanguage,s__fleetSize__m,'Fleet Size') ).

fof(kb_SUMO_9568,axiom,
    ! [V__FLEET,V__AGENT,V__NUM] :
      ( ( s__instance(V__NUM,s__Integer)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__FLEET,s__Collection) )
     => ( ( s__instance(V__FLEET,s__Fleet)
          & s__fleetSize(V__AGENT,V__NUM)
          & s__possesses(V__AGENT,V__FLEET) )
       => s__memberCount(V__FLEET,V__NUM) ) ) ).

fof(kb_SUMO_9569,axiom,
    s__subclass(s__Axle,s__Device) ).

fof(kb_SUMO_9570,axiom,
    s__instance(s__Axle__t,s__SetOrClass) ).

fof(kb_SUMO_9571,axiom,
    s__documentation(s__Axle,s__EnglishLanguage,'Axle is a class of &%Devices each of which can be paired with two &%VehicleWheels to rotate and move a &%RoadVehicle.') ).

fof(kb_SUMO_9572,axiom,
    ! [V__V,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__V,s__CorpuscularObject) )
     => ( ( s__instance(V__W,s__VehicleWheel)
          & s__instance(V__V,s__RoadVehicle)
          & s__part(V__W,V__V) )
       => ? [V__A] :
            ( s__instance(V__A,s__CorpuscularObject)
            & s__instance(V__A,s__Axle)
            & s__component(V__A,V__V)
            & s__connected(V__W,V__A) ) ) ) ).

fof(kb_SUMO_9573,axiom,
    s__documentation(s__Paper,s__EnglishLanguage,'Paper is a flat sheet of fibers, usually produced by spreading a wet solution of wood particles on a flat surface and drying through heat and pressure. The fibers can also be cotton or a synthetic, although typically the bulk of the substance is wood fibers. This includes all manner of paper products that may have varying thicknesses, colors or texture. This is distinguished from flat wood products such as plywood and particle board which have a structural function in building construction. Sheathing materials such as the paper affixed to sheetrock however, is paper.') ).

fof(kb_SUMO_9574,axiom,
    s__subclass(s__Paper,s__Artifact) ).

fof(kb_SUMO_9575,axiom,
    s__instance(s__Paper__t,s__SetOrClass) ).

fof(kb_SUMO_9576,axiom,
    ! [V__PAPER] :
      ( s__instance(V__PAPER,s__Object)
     => ( s__instance(V__PAPER,s__Paper)
       => s__hasPurpose(V__PAPER,'(? [V__TEXT] : (s__instance(V__TEXT,s__Object) & s__instance(V__TEXT,s__Text) & s__part(V__TEXT,V__PAPER)))') ) ) ).

fof(kb_SUMO_9577,axiom,
    s__subclass(s__CurrencyBill,s__Currency) ).

fof(kb_SUMO_9578,axiom,
    s__instance(s__CurrencyBill__t,s__SetOrClass) ).

fof(kb_SUMO_9579,axiom,
    s__partition_3(s__Currency,s__CurrencyBill,s__CurrencyCoin) ).

fof(kb_SUMO_9580,axiom,
    s__documentation(s__CurrencyBill,s__EnglishLanguage,'Any instance of &%Currency that is made of paper.') ).

fof(kb_SUMO_9581,axiom,
    ! [V__BILL] :
      ( s__instance(V__BILL,s__Object)
     => ( s__instance(V__BILL,s__CurrencyBill)
       => ? [V__PAPER] :
            ( s__instance(V__PAPER,s__Object)
            & s__instance(V__PAPER,s__Paper)
            & s__part(V__PAPER,V__BILL) ) ) ) ).

fof(kb_SUMO_9582,axiom,
    s__subclass(s__CurrencyCoin,s__Currency) ).

fof(kb_SUMO_9583,axiom,
    s__instance(s__CurrencyCoin__t,s__SetOrClass) ).

fof(kb_SUMO_9584,axiom,
    s__documentation(s__CurrencyCoin,s__EnglishLanguage,'Any instance of &%Currency that is made of &%Metal.') ).

fof(kb_SUMO_9585,axiom,
    ! [V__COIN] :
      ( s__instance(V__COIN,s__CorpuscularObject)
     => ( s__instance(V__COIN,s__CurrencyCoin)
       => ? [V__METAL] :
            ( s__instance(V__METAL,s__SetOrClass)
            & s__subclass(V__METAL,s__Substance)
            & s__subclass(V__METAL,s__Metal)
            & s__material(V__METAL,V__COIN) ) ) ) ).

fof(kb_SUMO_9586,axiom,
    s__subclass(s__Wire,s__Artifact) ).

fof(kb_SUMO_9587,axiom,
    s__instance(s__Wire__t,s__SetOrClass) ).

fof(kb_SUMO_9588,axiom,
    s__documentation(s__Wire,s__EnglishLanguage,'A long, thin strand of &%Metal that is used in a wide range of applications, including the wiring of electrical systems, creating bundles and the construction of cages.') ).

fof(kb_SUMO_9589,axiom,
    ! [V__WIRE] :
      ( s__instance(V__WIRE,s__CorpuscularObject)
     => ( s__instance(V__WIRE,s__Wire)
       => s__material(s__Metal,V__WIRE) ) ) ).

fof(kb_SUMO_9590,axiom,
    s__subclass(s__WireSpring,s__Wire) ).

fof(kb_SUMO_9591,axiom,
    s__subclass(s__WireSpring,s__EngineeringComponent) ).

fof(kb_SUMO_9592,axiom,
    s__instance(s__WireSpring__t,s__SetOrClass) ).

fof(kb_SUMO_9593,axiom,
    s__documentation(s__WireSpring,s__EnglishLanguage,'An &%EngineeringComponent consisting of a coil of &%Wire that returns to its original shape when pulled apart or pressed together.') ).

fof(kb_SUMO_9594,axiom,
    s__subclass(s__WireLine,s__Wire) ).

fof(kb_SUMO_9595,axiom,
    s__subclass(s__WireLine,s__EngineeringComponent) ).

fof(kb_SUMO_9596,axiom,
    s__instance(s__WireLine__t,s__SetOrClass) ).

fof(kb_SUMO_9597,axiom,
    s__documentation(s__WireLine,s__EnglishLanguage,'A &%Wire that is designed for conducting electricity.') ).

fof(kb_SUMO_9598,axiom,
    ! [V__WL] :
      ( s__instance(V__WL,s__Object)
     => ( s__instance(V__WL,s__WireLine)
       => s__hasPurpose(V__WL,'(? [V__R] : (s__instance(V__R,s__Motion) & s__instance(V__R,s__Radiating) & s__path(V__R,V__WL)))') ) ) ).

fof(kb_SUMO_9599,axiom,
    s__subclass(s__TelephoneLine,s__WireLine) ).

fof(kb_SUMO_9600,axiom,
    s__instance(s__TelephoneLine__t,s__SetOrClass) ).

fof(kb_SUMO_9601,axiom,
    s__documentation(s__TelephoneLine,s__EnglishLanguage,'A &%WireLine that carries telephone signals and allows users of &%Telephones or &%Telegraphs to communicate with one another.') ).

fof(kb_SUMO_9602,axiom,
    ! [V__TL] :
      ( s__instance(V__TL,s__SelfConnectedObject)
     => ( s__instance(V__TL,s__TelephoneLine)
       => ? [V__T1,V__T2] :
            ( s__instance(V__T2,s__SelfConnectedObject)
            & s__instance(V__T1,s__SelfConnectedObject)
            & ( s__instance(V__T1,s__Telephone)
              | s__instance(V__T1,s__Telegraph) )
            & ( s__instance(V__T2,s__Telephone)
              | s__instance(V__T2,s__Telegraph) )
            & V__T1 != V__T2
            & s__connects(V__TL,V__T1,V__T2) ) ) ) ).

fof(kb_SUMO_9603,axiom,
    s__subclass(s__String,s__Artifact) ).

fof(kb_SUMO_9604,axiom,
    s__instance(s__String__t,s__SetOrClass) ).

fof(kb_SUMO_9605,axiom,
    s__documentation(s__String,s__EnglishLanguage,'A long, thin strand of Fabric that is used for &%Tying things together, etc. Note that this class covers a cord of any width, including rope, twine, and thread, for example.') ).

fof(kb_SUMO_9606,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__CorpuscularObject)
     => ( s__instance(V__S,s__String)
       => s__material(s__Fabric,V__S) ) ) ).

fof(kb_SUMO_9607,axiom,
    s__subclass(s__Plug,s__Artifact) ).

fof(kb_SUMO_9608,axiom,
    s__documentation(s__Plug,s__EnglishLanguage,'An &%Artifact which is designed to fit snugly within a &%Hole.') ).

fof(kb_SUMO_9609,axiom,
    ! [V__PLUG] :
      ( s__instance(V__PLUG,s__Object)
     => ( s__instance(V__PLUG,s__Plug)
       => ? [V__HOLE] :
            ( s__instance(V__HOLE,s__Hole)
            & s__completelyFills(V__PLUG,V__HOLE) ) ) ) ).

fof(kb_SUMO_9610,axiom,
    s__subclass(s__Pottery,s__Artifact) ).

fof(kb_SUMO_9611,axiom,
    s__instance(s__Pottery__t,s__SetOrClass) ).

fof(kb_SUMO_9612,axiom,
    s__documentation(s__Pottery,s__EnglishLanguage,'Household &%Artifacts that are made out of baked &%Clay.') ).

fof(kb_SUMO_9613,axiom,
    ! [V__POTTERY] :
      ( s__instance(V__POTTERY,s__Object)
     => ( s__instance(V__POTTERY,s__Pottery)
       => ? [V__CLAY] :
            ( s__instance(V__CLAY,s__Object)
            & s__instance(V__CLAY,s__Clay)
            & s__part(V__CLAY,V__POTTERY) ) ) ) ).

fof(kb_SUMO_9614,axiom,
    s__subclass(s__Pillow,s__Artifact) ).

fof(kb_SUMO_9615,axiom,
    s__instance(s__Pillow__t,s__SetOrClass) ).

fof(kb_SUMO_9616,axiom,
    s__documentation(s__Pillow,s__EnglishLanguage,'A soft, stuffed &%Artifact to support the &%Head or the body as a whole while one is sleeping or relaxing.') ).

fof(kb_SUMO_9617,axiom,
    s__subclass(s__Mirror,s__Artifact) ).

fof(kb_SUMO_9618,axiom,
    s__instance(s__Mirror__t,s__SetOrClass) ).

fof(kb_SUMO_9619,axiom,
    s__documentation(s__Mirror,s__EnglishLanguage,'An &%Artifact with a surface that is capable of displaying an image by reflecting light.') ).

fof(kb_SUMO_9620,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Mirror)
       => s__capability(s__ReflectingLight,s__instrument__m,V__M) ) ) ).

fof(kb_SUMO_9621,axiom,
    s__subclass(s__Furniture,s__Artifact) ).

fof(kb_SUMO_9622,axiom,
    s__documentation(s__Furniture,s__EnglishLanguage,'Any free-standing and movable &%Artifacts which which are used in day-to-day living and designed to rest on the &%Floor of a &%Room. This excludes items such as a rock which may serve as a chair but was not created with the intention of supporting that use.') ).

fof(kb_SUMO_9623,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Furniture)
       => s__hasPurpose(V__F,'(? [V__FL] : (s__instance(V__FL,s__Object) & s__instance(V__FL,s__Floor) & s__meetsSpatially(V__F,V__FL)))') ) ) ).

fof(kb_SUMO_9624,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Furniture)
       => s__capability(s__Translocation,s__moves__m,V__F) ) ) ).

fof(kb_SUMO_9625,axiom,
    s__disjoint(s__Furniture,s__EngineeringComponent) ).

fof(kb_SUMO_9626,axiom,
    s__disjoint(s__Furniture,s__Machine) ).

fof(kb_SUMO_9627,axiom,
    s__disjoint(s__Furniture,s__TransportationDevice) ).

fof(kb_SUMO_9628,axiom,
    s__disjoint(s__Furniture,s__Weapon) ).

fof(kb_SUMO_9629,axiom,
    s__subclass(s__Seat,s__Furniture) ).

fof(kb_SUMO_9630,axiom,
    s__documentation(s__Seat,s__EnglishLanguage,'Any instance of &%Furniture which is designed to accommodate &%Humans who are &%Sitting.') ).

fof(kb_SUMO_9631,axiom,
    ! [V__SEAT] :
      ( s__instance(V__SEAT,s__Object)
     => ( s__instance(V__SEAT,s__Seat)
       => s__hasPurpose(V__SEAT,'(? [V__PERSON] : (s__instance(V__PERSON,s__Object) & s__instance(V__PERSON,s__Human) & s__located(V__PERSON,V__SEAT) & s__attribute(V__PERSON,s__Sitting)))') ) ) ).

fof(kb_SUMO_9632,axiom,
    s__subclass(s__Chair,s__Seat) ).

fof(kb_SUMO_9633,axiom,
    s__instance(s__Chair__t,s__SetOrClass) ).

fof(kb_SUMO_9634,axiom,
    s__instance(s__Seat__t,s__SetOrClass) ).

fof(kb_SUMO_9635,axiom,
    s__documentation(s__Chair,s__EnglishLanguage,'A &%Seat that is designed to accommodate a single &%Human.') ).

fof(kb_SUMO_9636,axiom,
    ! [V__CHAIR] :
      ( s__instance(V__CHAIR,s__Object)
     => ( s__instance(V__CHAIR,s__Chair)
       => ~ ? [V__PERSON1,V__PERSON2] :
              ( s__instance(V__PERSON2,s__Object)
              & s__instance(V__PERSON1,s__Object)
              & s__instance(V__PERSON1,s__Human)
              & s__instance(V__PERSON2,s__Human)
              & s__attribute(V__PERSON1,s__Sitting)
              & s__attribute(V__PERSON2,s__Sitting)
              & s__located(V__PERSON1,V__CHAIR)
              & s__located(V__PERSON2,V__CHAIR)
              & V__PERSON1 != V__PERSON2 ) ) ) ).

fof(kb_SUMO_9637,axiom,
    s__subclass(s__Sofa,s__Seat) ).

fof(kb_SUMO_9638,axiom,
    s__instance(s__Sofa__t,s__SetOrClass) ).

fof(kb_SUMO_9639,axiom,
    s__documentation(s__Sofa,s__EnglishLanguage,'A padded &%Seat that is designed to accommodate more than one &%Human.') ).

fof(kb_SUMO_9640,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Sofa)
       => s__hasPurpose(V__S,'(? [V__P1,V__P2,V__T] : (s__instance(V__T,s__TimePosition) & s__instance(V__P2,s__Object) & s__instance(V__P2,s__Process) & s__instance(V__P1,s__Object) & s__instance(V__P1,s__Process) & (~ (V__P1 = V__P2)) & s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human) & s__holdsDuring(V__T,(s__attribute(V__P1,s__Sitting) & s__attribute(V__P2,s__Sitting) & s__eventLocated(V__P1,V__S) & s__eventLocated(V__P2,V__S)))))') ) ) ).

fof(kb_SUMO_9641,axiom,
    s__subclass(s__Bed,s__Furniture) ).

fof(kb_SUMO_9642,axiom,
    s__instance(s__Furniture__t,s__SetOrClass) ).

fof(kb_SUMO_9643,axiom,
    s__documentation(s__Bed,s__EnglishLanguage,'A piece of &%Furniture which is primarily for sleeping.') ).

fof(kb_SUMO_9644,axiom,
    ! [V__BED] :
      ( s__instance(V__BED,s__Object)
     => ( s__instance(V__BED,s__Bed)
       => s__hasPurpose(V__BED,'(? [V__PERSON] : (s__instance(V__PERSON,s__Object) & s__attribute(V__PERSON,s__Asleep) & s__located(V__PERSON,V__BED)))') ) ) ).

fof(kb_SUMO_9645,axiom,
    s__subclass(s__KingBed,s__Bed) ).

fof(kb_SUMO_9646,axiom,
    s__instance(s__KingBed__t,s__SetOrClass) ).

fof(kb_SUMO_9647,axiom,
    s__documentation(s__KingBed,s__EnglishLanguage,'A &%KingBed is a type of &%Bed that is 1.9m by 2.0m in size') ).

fof(kb_SUMO_9648,axiom,
    s__termFormat(s__EnglishLanguage,s__KingBed,'king-sized bed') ).

fof(kb_SUMO_9649,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__KingBed)
       => ( s__width(V__X,s__MeasureFn("1.9",s__Meter))
          & s__length(V__X,s__MeasureFn("2.0",s__Meter)) ) ) ) ).

fof(kb_SUMO_9650,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__KingBed)
       => s__modalAttribute('(? [V__P1,V__P2,V__P3,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__P3,s__Object) & s__instance(V__P2,s__Object) & s__instance(V__P1,s__Object) & (~ (V__P1 = V__P2)) & (~ (V__P2 = V__P3)) & (~ (V__P1 = V__P3)) & s__attribute(V__P1,s__Asleep) & s__attribute(V__P2,s__Asleep) & s__attribute(V__P3,s__Asleep) & s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human) & s__instance(V__P3,s__Human) & s__holdsDuring(V__TIME,(s__located(V__P1,V__X) & s__located(V__P2,V__X) & s__located(V__P3,V__X)))))',s__Possibility) ) ) ).

fof(kb_SUMO_9651,axiom,
    s__subclass(s__QueenBed,s__Bed) ).

fof(kb_SUMO_9652,axiom,
    s__instance(s__QueenBed__t,s__SetOrClass) ).

fof(kb_SUMO_9653,axiom,
    s__documentation(s__QueenBed,s__EnglishLanguage,'A &%QueenBed is a type of &%Bed that is 1.5m by 2.0m in size') ).

fof(kb_SUMO_9654,axiom,
    s__termFormat(s__EnglishLanguage,s__QueenBed,'queen-sized bed') ).

fof(kb_SUMO_9655,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__QueenBed)
       => ( s__width(V__X,s__MeasureFn("1.5",s__Meter))
          & s__length(V__X,s__MeasureFn("2.0",s__Meter)) ) ) ) ).

fof(kb_SUMO_9656,axiom,
    ! [V__TIME,V__P3,V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__TIME,s__TimePosition) )
     => ( s__instance(V__X,s__QueenBed)
       => s__modalAttribute('(? [V__P1,V__P2] : (s__instance(V__P2,s__Object) & s__instance(V__P1,s__Object) & (~ (V__P1 = V__P2)) & (~ (V__P2 = V__P3)) & s__attribute(V__P1,s__Asleep) & s__attribute(V__P2,s__Asleep) & s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human) & s__holdsDuring(V__TIME,(s__located(V__P1,V__X) & s__located(V__P2,V__X)))))',s__Possibility) ) ) ).

fof(kb_SUMO_9657,axiom,
    s__subclass(s__DoubleBed,s__Bed) ).

fof(kb_SUMO_9658,axiom,
    s__instance(s__DoubleBed__t,s__SetOrClass) ).

fof(kb_SUMO_9659,axiom,
    s__documentation(s__DoubleBed,s__EnglishLanguage,'A &%DoubleBed is a type of &%Bed that is 1.35m by 2.0m in size') ).

fof(kb_SUMO_9660,axiom,
    s__termFormat(s__EnglishLanguage,s__DoubleBed,'full-sized bed') ).

fof(kb_SUMO_9661,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__DoubleBed)
       => ( s__width(V__X,s__MeasureFn("1.35",s__Meter))
          & s__length(V__X,s__MeasureFn("2.0",s__Meter)) ) ) ) ).

fof(kb_SUMO_9662,axiom,
    ! [V__TIME,V__P3,V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__TIME,s__TimePosition) )
     => ( s__instance(V__X,s__DoubleBed)
       => s__modalAttribute('(? [V__P1,V__P2] : (s__instance(V__P2,s__Object) & s__instance(V__P1,s__Object) & (~ (V__P1 = V__P2)) & (~ (V__P2 = V__P3)) & s__attribute(V__P1,s__Asleep) & s__attribute(V__P2,s__Asleep) & s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human) & s__holdsDuring(V__TIME,(s__located(V__P1,V__X) & s__located(V__P2,V__X)))))',s__Possibility) ) ) ).

fof(kb_SUMO_9663,axiom,
    s__subclass(s__SingleBed,s__Bed) ).

fof(kb_SUMO_9664,axiom,
    s__instance(s__SingleBed__t,s__SetOrClass) ).

fof(kb_SUMO_9665,axiom,
    s__documentation(s__SingleBed,s__EnglishLanguage,'A &%SingleBed is a type of &%Bed that is 1m by 2.0m in size') ).

fof(kb_SUMO_9666,axiom,
    s__termFormat(s__EnglishLanguage,s__SingleBed,'twin-sized bed') ).

fof(kb_SUMO_9667,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__SingleBed)
       => ( s__width(V__X,s__MeasureFn("1.0",s__Meter))
          & s__length(V__X,s__MeasureFn("2.0",s__Meter)) ) ) ) ).

fof(kb_SUMO_9668,axiom,
    s__subclass(s__BunkBed,s__Bed) ).

fof(kb_SUMO_9669,axiom,
    s__instance(s__BunkBed__t,s__SetOrClass) ).

fof(kb_SUMO_9670,axiom,
    s__documentation(s__BunkBed,s__EnglishLanguage,'A &%BunkBed is a type of &%Bed has one bed directly above another') ).

fof(kb_SUMO_9671,axiom,
    s__termFormat(s__EnglishLanguage,s__BunkBed,'bunk bed') ).

fof(kb_SUMO_9672,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__BunkBed)
       => ? [V__BED1,V__BED2] :
            ( s__instance(V__BED2,s__Object)
            & s__instance(V__BED1,s__Object)
            & s__instance(V__BED1,s__SingleBed)
            & s__instance(V__BED2,s__SingleBed)
            & s__part(V__BED1,V__X)
            & s__part(V__BED2,V__X)
            & s__orientation(V__BED1,V__BED2,s__Above) ) ) ) ).

fof(kb_SUMO_9673,axiom,
    s__subclass(s__MurphyBed,s__Bed) ).

fof(kb_SUMO_9674,axiom,
    s__instance(s__MurphyBed__t,s__SetOrClass) ).

fof(kb_SUMO_9675,axiom,
    s__documentation(s__MurphyBed,s__EnglishLanguage,'A &%MurphyBed is a type of &%Bed that can be stored vertically inside a wall, closet or cabinet') ).

fof(kb_SUMO_9676,axiom,
    s__termFormat(s__EnglishLanguage,s__MurphyBed,'pull-down bed') ).

fof(kb_SUMO_9677,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__MurphyBed)
       => ? [V__STORAGE] :
            ( s__instance(V__STORAGE,s__Compartment)
            & s__meetsSpatially(V__STORAGE,V__X)
            & s__hasPurpose(V__STORAGE,'(? [V__K] : (s__instance(V__K,s__Process) & s__instance(V__STORAGE,s__Object) & s__instance(V__K,s__Keeping) & s__patient(V__K,V__X) & s__destination(V__K,V__STORAGE) & s__holdsDuring(s__WhenFn(V__K),s__attribute(V__X,s__Vertical))))') ) ) ) ).

fof(kb_SUMO_9678,axiom,
    s__subclass(s__RollawayBed,s__Bed) ).

fof(kb_SUMO_9679,axiom,
    s__instance(s__RollawayBed__t,s__SetOrClass) ).

fof(kb_SUMO_9680,axiom,
    s__documentation(s__RollawayBed,s__EnglishLanguage,'A &%RollawayBed is a type of &%Bed that is mounted on rollers so that it can be easily moved') ).

fof(kb_SUMO_9681,axiom,
    s__termFormat(s__EnglishLanguage,s__RollawayBed,'rollaway bed') ).

fof(kb_SUMO_9682,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__RollawayBed)
       => ? [V__WHEEL] :
            ( s__instance(V__WHEEL,s__Object)
            & s__instance(V__WHEEL,s__Wheel)
            & s__part(V__WHEEL,V__X) ) ) ) ).

fof(kb_SUMO_9683,axiom,
    s__subclass(s__SofaBed,s__Bed) ).

fof(kb_SUMO_9684,axiom,
    s__instance(s__SofaBed__t,s__SetOrClass) ).

fof(kb_SUMO_9685,axiom,
    s__documentation(s__SofaBed,s__EnglishLanguage,'A &%SofaBed is a &%Bed that can be kept inside a compartment in a &%Sofa') ).

fof(kb_SUMO_9686,axiom,
    s__termFormat(s__EnglishLanguage,s__SofaBed,'sofa bed') ).

fof(kb_SUMO_9687,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__SofaBed)
     => ? [V__SOFA,V__STORAGE] :
          ( s__instance(V__STORAGE,s__Compartment)
          & s__part(V__STORAGE,V__SOFA)
          & s__instance(V__SOFA,s__Sofa)
          & s__hasPurpose(V__STORAGE,'(? [V__K] : (s__instance(V__K,s__Process) & s__instance(V__STORAGE,s__Object) & s__instance(V__SOFA,s__Object) & s__instance(V__K,s__Keeping) & s__patient(V__K,V__X) & s__destination(V__K,V__STORAGE)))') ) ) ).

fof(kb_SUMO_9688,axiom,
    s__subclass(s__Crib,s__Bed) ).

fof(kb_SUMO_9689,axiom,
    s__instance(s__Crib__t,s__SetOrClass) ).

fof(kb_SUMO_9690,axiom,
    s__instance(s__Bed__t,s__SetOrClass) ).

fof(kb_SUMO_9691,axiom,
    s__documentation(s__Crib,s__EnglishLanguage,'A &%Crib is a &%Bed for babies') ).

fof(kb_SUMO_9692,axiom,
    s__termFormat(s__EnglishLanguage,s__Crib,crib) ).

fof(kb_SUMO_9693,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Crib)
       => s__hasPurpose(V__X,'(? [V__BABY] : (s__instance(V__BABY,s__Object) & s__instance(V__BABY,s__HumanBaby) & s__attribute(V__BABY,s__Asleep) & s__located(V__BABY,V__X)))') ) ) ).

fof(kb_SUMO_9694,axiom,
    s__subclass(s__Hammock,s__Bed) ).

fof(kb_SUMO_9695,axiom,
    s__instance(s__Hammock__t,s__SetOrClass) ).

fof(kb_SUMO_9696,axiom,
    s__documentation(s__Hammock,s__EnglishLanguage,'&%Hammock is a type of &%Bed made of rope or canvas and is suspended between two stationary objects') ).

fof(kb_SUMO_9697,axiom,
    s__termFormat(s__EnglishLanguage,s__Hammock,hammock) ).

fof(kb_SUMO_9698,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CorpuscularObject)
     => ( s__instance(V__X,s__Hammock)
       => ( s__material(s__Fabric,V__X)
          & ? [V__POLE1,V__POLE2,V__GROUND] :
              ( s__instance(V__GROUND,s__Object)
              & s__instance(V__POLE2,s__Object)
              & s__instance(V__POLE1,s__Object)
              & s__orientation(V__POLE1,V__POLE2,s__Near)
              & s__connected(V__POLE1,V__X)
              & s__connected(V__POLE2,V__X)
              & s__instance(V__GROUND,s__LandArea)
              & s__located(V__X,V__GROUND)
              & s__orientation(V__X,V__GROUND,s__Above) ) ) ) ) ).

fof(kb_SUMO_9699,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Hammock)
       => s__hasPurpose(V__X,'(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__instance(V__PROC,s__LyingDown) & s__eventLocated(V__PROC,V__X)))') ) ) ).

fof(kb_SUMO_9700,axiom,
    s__subclass(s__Mattress,s__Artifact) ).

fof(kb_SUMO_9701,axiom,
    s__instance(s__Mattress__t,s__SetOrClass) ).

fof(kb_SUMO_9702,axiom,
    s__documentation(s__Mattress,s__EnglishLanguage,'A &%Mattress is a &%component of a &%Bed that is a cushion to make it more comfortable') ).

fof(kb_SUMO_9703,axiom,
    s__termFormat(s__EnglishLanguage,s__Mattress,mattress) ).

fof(kb_SUMO_9704,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CorpuscularObject)
     => ( s__instance(V__X,s__Mattress)
       => ? [V__BED] :
            ( s__instance(V__BED,s__CorpuscularObject)
            & s__instance(V__BED,s__Bed)
            & s__component(V__X,V__BED) ) ) ) ).

fof(kb_SUMO_9705,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Mattress)
       => s__hasPurpose(V__X,'(? [V__PERSON] : (s__instance(V__PERSON,s__Object) & s__attribute(V__PERSON,s__Asleep) & s__orientation(V__PERSON,V__X,s__On)))') ) ) ).

fof(kb_SUMO_9706,axiom,
    s__subclass(s__BedFrame,s__Artifact) ).

fof(kb_SUMO_9707,axiom,
    s__documentation(s__BedFrame,s__EnglishLanguage,'A &%BedFrame is a %&component of a &%Bed that supports the mattress') ).

fof(kb_SUMO_9708,axiom,
    s__termFormat(s__EnglishLanguage,s__BedFrame,'bed frame') ).

fof(kb_SUMO_9709,axiom,
    ! [V__MATTRESS,V__BEDFRAME,V__X] :
      ( ( s__instance(V__X,s__CorpuscularObject)
        & s__instance(V__BEDFRAME,s__CorpuscularObject)
        & s__instance(V__MATTRESS,s__CorpuscularObject) )
     => ( ( s__instance(V__X,s__Bed)
          & s__component(V__BEDFRAME,V__X)
          & s__instance(V__BEDFRAME,s__BedFrame)
          & s__component(V__MATTRESS,V__X)
          & s__instance(V__MATTRESS,s__Mattress) )
       => s__orientation(V__MATTRESS,V__BEDFRAME,s__On) ) ) ).

fof(kb_SUMO_9710,axiom,
    s__subclass(s__FourPosterBed,s__BedFrame) ).

fof(kb_SUMO_9711,axiom,
    s__instance(s__FourPosterBed__t,s__SetOrClass) ).

fof(kb_SUMO_9712,axiom,
    s__instance(s__BedFrame__t,s__SetOrClass) ).

fof(kb_SUMO_9713,axiom,
    s__documentation(s__FourPosterBed,s__EnglishLanguage,'&%FourPosterBed is a type of &%BedFrame with a post at each corner to support curtains or a canopy') ).

fof(kb_SUMO_9714,axiom,
    s__termFormat(s__EnglishLanguage,s__FourPosterBed,'four-poster bed') ).

fof(kb_SUMO_9715,axiom,
    ! [V__SIDE1,V__SIDE2,V__X,V__BED] :
      ( s__instance(V__X,s__FourPosterBed)
     => ? [V__SHAPE] :
          ( s__attribute(V__X,V__SHAPE)
          & s__instance(V__SHAPE,s__Quadrilateral)
          & ! [V__CORNER] :
              ( ( s__instance(V__CORNER,s__GeometricPoint)
                & s__instance(V__CORNER,s__Object)
                & s__instance(V__BED,s__Object)
                & s__instance(V__X,s__Object)
                & s__instance(V__SIDE2,s__OneDimensionalFigure)
                & s__instance(V__SIDE1,s__OneDimensionalFigure) )
             => ( ( s__pointOfIntersection(V__SIDE1,V__SIDE2,V__CORNER)
                  & s__sideOfFigure(V__SIDE1,V__SHAPE)
                  & s__sideOfFigure(V__SIDE2,V__SHAPE)
                  & V__SIDE1 != V__SIDE2 )
               => ? [V__POST,V__FLOOR] :
                    ( s__instance(V__FLOOR,s__Object)
                    & s__instance(V__POST,s__Object)
                    & s__instance(V__SHAPE,s__GeometricFigure)
                    & s__meetsSpatially(V__CORNER,V__POST)
                    & s__instance(V__POST,s__Artifact)
                    & s__instance(V__FLOOR,s__Floor)
                    & s__orientation(V__BED,V__FLOOR,s__On)
                    & s__orientation(V__POST,V__FLOOR,s__Vertical) ) ) ) ) ) ).

fof(kb_SUMO_9716,axiom,
    s__subclass(s__BedAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_9717,axiom,
    s__documentation(s__BedAttribute,s__EnglishLanguage,'&%BedAttribute is the class of attributes attached to the type of cushion a &%Bed has') ).

fof(kb_SUMO_9718,axiom,
    s__termFormat(s__EnglishLanguage,s__BedAttribute,'bed attribute') ).

fof(kb_SUMO_9719,axiom,
    ! [V__ATTR,V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__attribute(V__X,V__ATTR)
          & s__instance(V__ATTR,s__BedAttribute) )
       => s__instance(V__X,s__Bed) ) ) ).

fof(kb_SUMO_9720,axiom,
    s__instance(s__WaterBed,s__BedAttribute) ).

fof(kb_SUMO_9721,axiom,
    s__instance(s__BedAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_9722,axiom,
    s__documentation(s__WaterBed,s__EnglishLanguage,'&%WaterBed describes how the cushion of a &%Bed is filled with water') ).

fof(kb_SUMO_9723,axiom,
    s__termFormat(s__EnglishLanguage,s__WaterBed,'water bed') ).

fof(kb_SUMO_9724,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CorpuscularObject)
     => ( s__attribute(V__X,s__WaterBed)
       => ? [V__MATTRESS,V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__MATTRESS,s__CorpuscularObject)
            & s__component(V__MATTRESS,V__X)
            & s__contains(V__MATTRESS,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_9725,axiom,
    s__subclass(s__BedLinen,s__Artifact) ).

fof(kb_SUMO_9726,axiom,
    s__instance(s__BedLinen__t,s__SetOrClass) ).

fof(kb_SUMO_9727,axiom,
    s__documentation(s__BedLinen,s__EnglishLanguage,'&%BedLinen is an &%Artifact made of &%Fabric that is used to &%Covering a &%Bed') ).

fof(kb_SUMO_9728,axiom,
    s__termFormat(s__EnglishLanguage,s__BedLinen,'bed linen') ).

fof(kb_SUMO_9729,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CorpuscularObject)
     => ( s__instance(V__X,s__BedLinen)
       => s__material(s__Fabric,V__X) ) ) ).

fof(kb_SUMO_9730,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__BedLinen)
       => s__hasPurpose(V__X,'(? [V__COVER,V__BED] : (s__instance(V__COVER,s__Process) & s__instance(V__COVER,s__Covering) & s__patient(V__COVER,V__BED) & s__instance(V__BED,s__Bed) & s__instrument(V__COVER,V__X)))') ) ) ).

fof(kb_SUMO_9731,axiom,
    s__subclass(s__Table,s__Furniture) ).

fof(kb_SUMO_9732,axiom,
    s__instance(s__Table__t,s__SetOrClass) ).

fof(kb_SUMO_9733,axiom,
    s__documentation(s__Table,s__EnglishLanguage,'A piece of &%Furniture with four legs and a flat top. It is used either for eating, paperwork or meetings.') ).

fof(kb_SUMO_9734,axiom,
    s__subclass(s__Desk,s__Table) ).

fof(kb_SUMO_9735,axiom,
    s__instance(s__Desk__t,s__SetOrClass) ).

fof(kb_SUMO_9736,axiom,
    s__documentation(s__Desk,s__EnglishLanguage,'A &%Table for a single person which is intended to be used for paperwork.') ).

fof(kb_SUMO_9737,axiom,
    s__subclass(s__ChestOrCabinet,s__Furniture) ).

fof(kb_SUMO_9738,axiom,
    s__subclass(s__ChestOrCabinet,s__Container) ).

fof(kb_SUMO_9739,axiom,
    s__instance(s__ChestOrCabinet__t,s__SetOrClass) ).

fof(kb_SUMO_9740,axiom,
    s__documentation(s__ChestOrCabinet,s__EnglishLanguage,'Any piece of &%Furniture which is also a Container, e.g. a chest of drawers, a memory chest, an armoire, etc.') ).

fof(kb_SUMO_9741,axiom,
    s__subclass(s__Coffin,s__Container) ).

fof(kb_SUMO_9742,axiom,
    s__instance(s__Coffin__t,s__SetOrClass) ).

fof(kb_SUMO_9743,axiom,
    s__documentation(s__Coffin,s__EnglishLanguage,'A &%Container for a &%HumanCorpse.') ).

fof(kb_SUMO_9744,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Coffin)
       => s__hasPurpose(V__C,'(? [V__HC] : (s__instance(V__HC,s__Physical) & s__instance(V__HC,s__HumanCorpse) & s__located(V__HC,V__C)))') ) ) ).

fof(kb_SUMO_9745,axiom,
    s__subclass(s__Compartment,s__Container) ).

fof(kb_SUMO_9746,axiom,
    s__instance(s__Compartment__t,s__SetOrClass) ).

fof(kb_SUMO_9747,axiom,
    s__documentation(s__Compartment,s__EnglishLanguage,'A &%Container which is part of another &%Container, e.g. a drawer, a zippered pouch in a piece of luggage, a compartment in a TV dinner, etc.') ).

fof(kb_SUMO_9748,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Compartment)
       => ? [V__O] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__O,s__Container)
            & V__C != V__O
            & s__part(V__C,V__O) ) ) ) ).

fof(kb_SUMO_9749,axiom,
    s__subclass(s__Mailbox,s__Container) ).

fof(kb_SUMO_9750,axiom,
    s__instance(s__Mailbox__t,s__SetOrClass) ).

fof(kb_SUMO_9751,axiom,
    s__documentation(s__Mailbox,s__EnglishLanguage,'A &%Container whose purpose is to receive items that are mailed to the address associated with the &%Mailbox.') ).

fof(kb_SUMO_9752,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Physical)
     => ( s__instance(V__B,s__Mailbox)
       => s__hasPurpose(V__B,'(? [V__M,V__I] : (s__instance(V__M,s__Process) & s__instance(V__M,s__Mailing) & s__patient(V__M,V__I) & s__destination(V__M,V__B)))') ) ) ).

fof(kb_SUMO_9753,axiom,
    s__subclass(s__Screw,s__AttachingDevice) ).

fof(kb_SUMO_9754,axiom,
    s__instance(s__Screw__t,s__SetOrClass) ).

fof(kb_SUMO_9755,axiom,
    s__documentation(s__Screw,s__EnglishLanguage,'An &%AttachingDevice which contains a spiral of grooves to hold it in place and which is fastened with a &%Screwdriver.') ).

fof(kb_SUMO_9756,axiom,
    s__subclass(s__Screwdriver,s__Device) ).

fof(kb_SUMO_9757,axiom,
    s__instance(s__Screwdriver__t,s__SetOrClass) ).

fof(kb_SUMO_9758,axiom,
    s__documentation(s__Screwdriver,s__EnglishLanguage,'A &%Device that is used to rotate a &%Screw, which by the action of its helical threads is driven into a medium that is softer than the material of the screw itself.') ).

fof(kb_SUMO_9759,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__Screwdriver)
       => s__hasPurpose(V__D,'(? [V__R,V__S] : (s__instance(V__R,s__Process) & s__instance(V__R,s__Rotating) & s__instrument(V__R,V__D) & s__patient(V__R,V__S) & s__instance(V__S,s__Screw)))') ) ) ).

fof(kb_SUMO_9760,axiom,
    s__subclass(s__Hammer,s__Device) ).

fof(kb_SUMO_9761,axiom,
    s__instance(s__Hammer__t,s__SetOrClass) ).

fof(kb_SUMO_9762,axiom,
    s__documentation(s__Hammer,s__EnglishLanguage,'A &%Device that is used to pound &%Nails into a surface, where they become firmly attached.') ).

fof(kb_SUMO_9763,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__Hammer)
       => s__hasPurpose(V__H,'(? [V__I,V__N] : (s__instance(V__I,s__Process) & s__instance(V__I,s__Impelling) & s__instrument(V__I,V__H) & s__patient(V__I,V__N) & s__instance(V__N,s__Nail)))') ) ) ).

fof(kb_SUMO_9764,axiom,
    s__subclass(s__Nail,s__AttachingDevice) ).

fof(kb_SUMO_9765,axiom,
    s__instance(s__Nail__t,s__SetOrClass) ).

fof(kb_SUMO_9766,axiom,
    s__documentation(s__Nail,s__EnglishLanguage,'An &%AttachingDevice which is a thin piece of metal, with or without a head, that is fastened with a &%Hammer.') ).

fof(kb_SUMO_9767,axiom,
    s__subclass(s__Tape,s__AttachingDevice) ).

fof(kb_SUMO_9768,axiom,
    s__instance(s__Tape__t,s__SetOrClass) ).

fof(kb_SUMO_9769,axiom,
    s__documentation(s__Tape,s__EnglishLanguage,'A thin strip of &%Fabric or &%Paper that is used to attach two things.') ).

fof(kb_SUMO_9770,axiom,
    ! [V__TAPE] :
      ( s__instance(V__TAPE,s__Object)
     => ( s__instance(V__TAPE,s__Tape)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__TAPE)
            & ( s__instance(V__PART,s__Paper)
              | s__instance(V__PART,s__Fabric) ) ) ) ) ).

fof(kb_SUMO_9771,axiom,
    s__subclass(s__Anchor,s__AttachingDevice) ).

fof(kb_SUMO_9772,axiom,
    s__instance(s__Anchor__t,s__SetOrClass) ).

fof(kb_SUMO_9773,axiom,
    s__documentation(s__Anchor,s__EnglishLanguage,'An &%AttachingDevice which is large hook or set of hooks that are used to secure a &%WaterVehicle on the open water.') ).

fof(kb_SUMO_9774,axiom,
    ! [V__A,V__S,V__ATTACH] :
      ( ( s__instance(V__ATTACH,s__Process)
        & s__instance(V__A,s__Object) )
     => ( ( s__instance(V__A,s__Anchor)
          & s__instance(V__ATTACH,s__Attaching)
          & s__instrument(V__ATTACH,V__A)
          & s__patient(V__ATTACH,V__S) )
       => s__instance(V__S,s__WaterVehicle) ) ) ).

fof(kb_SUMO_9775,axiom,
    s__subclass(s__BoatDeck,s__Artifact) ).

fof(kb_SUMO_9776,axiom,
    s__instance(s__BoatDeck__t,s__SetOrClass) ).

fof(kb_SUMO_9777,axiom,
    s__documentation(s__BoatDeck,s__EnglishLanguage,'One of the levels of a &%WaterVehicle, e.g. the upper deck and lower deck of small boats with a cabin.') ).

fof(kb_SUMO_9778,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__BoatDeck)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__WaterVehicle)
            & s__part(V__D,V__B) ) ) ) ).

fof(kb_SUMO_9779,axiom,
    s__subclass(s__Button,s__AttachingDevice) ).

fof(kb_SUMO_9780,axiom,
    s__instance(s__Button__t,s__SetOrClass) ).

fof(kb_SUMO_9781,axiom,
    s__documentation(s__Button,s__EnglishLanguage,'An &%AttachingDevice that is used on &%Clothing.') ).

fof(kb_SUMO_9782,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Button)
       => s__hasPurpose(V__B,'(? [V__C] : (s__instance(V__C,s__Object) & s__instance(V__C,s__Clothing) & s__part(V__B,V__C)))') ) ) ).

fof(kb_SUMO_9783,axiom,
    s__subclass(s__Clamp,s__AttachingDevice) ).

fof(kb_SUMO_9784,axiom,
    s__instance(s__Clamp__t,s__SetOrClass) ).

fof(kb_SUMO_9785,axiom,
    s__documentation(s__Clamp,s__EnglishLanguage,'An &%AttachingDevice which is designed to attach two things together by means of a movable part which can be tightened or loosened.') ).

fof(kb_SUMO_9786,axiom,
    s__subclass(s__Holder,s__Device) ).

fof(kb_SUMO_9787,axiom,
    s__documentation(s__Holder,s__EnglishLanguage,'A large class of &%Devices whose purpose is to hold something else, i.e. be the &%instrument of a &%Keeping.') ).

fof(kb_SUMO_9788,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__Holder)
       => s__capability(s__Keeping,s__instrument__m,V__DEVICE) ) ) ).

fof(kb_SUMO_9789,axiom,
    s__subclass(s__Saddle,s__Holder) ).

fof(kb_SUMO_9790,axiom,
    s__instance(s__Saddle__t,s__SetOrClass) ).

fof(kb_SUMO_9791,axiom,
    s__documentation(s__Saddle,s__EnglishLanguage,'A &%Device which allows a &%Human to ride on a &%Horse.') ).

fof(kb_SUMO_9792,axiom,
    ! [V__RIDE,V__SADDLE] :
      ( s__instance(V__SADDLE,s__Object)
     => ( s__instance(V__SADDLE,s__Saddle)
       => s__capability(s__KappaFn(V__RIDE,'(? [V__HUMAN,V__HORSE] : (s__instance(V__HORSE,s__Agent) & s__instance(V__RIDE,s__Carrying) & s__patient(V__RIDE,V__HUMAN) & s__instance(V__HUMAN,s__Human) & s__agent(V__RIDE,V__HORSE) & s__instance(V__HORSE,s__Horse)))'),s__instrument__m,V__SADDLE) ) ) ).

fof(kb_SUMO_9793,axiom,
    s__subclass(s__HorseRiding,s__Carrying) ).

fof(kb_SUMO_9794,axiom,
    s__instance(s__HorseRiding__t,s__SetOrClass) ).

fof(kb_SUMO_9795,axiom,
    s__documentation(s__HorseRiding,s__EnglishLanguage,'Any instance of &%Carrying where the &%Animal is a &%Horse.') ).

fof(kb_SUMO_9796,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__HorseRiding)
       => ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__H,s__Horse)
            & s__instrument(V__R,V__H) ) ) ) ).

fof(kb_SUMO_9797,axiom,
    s__instance(s__carries__m,s__BinaryPredicate) ).

fof(kb_SUMO_9798,axiom,
    s__domain(s__carries__m,"1",s__Agent) ).

fof(kb_SUMO_9799,axiom,
    s__domain(s__carries__m,"2",s__Object) ).

fof(kb_SUMO_9800,axiom,
    s__documentation(s__carries__m,s__EnglishLanguage,'(carries ?AGENT ?OBJECT) means that an &%Agent ?AGENT transers an &%OBJECT ?OBJECT from one point to another') ).

fof(kb_SUMO_9801,axiom,
    s__termFormat(s__EnglishLanguage,s__carries__m,carries) ).

fof(kb_SUMO_9802,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__carries(V__AGENT,V__OBJECT)
       => ? [V__CARRYING] :
            ( s__instance(V__CARRYING,s__Process)
            & s__instrument(V__CARRYING,V__AGENT)
            & s__patient(V__CARRYING,V__OBJECT) ) ) ) ).

fof(kb_SUMO_9803,axiom,
    s__subclass(s__Tray,s__Holder) ).

fof(kb_SUMO_9804,axiom,
    s__instance(s__Tray__t,s__SetOrClass) ).

fof(kb_SUMO_9805,axiom,
    s__documentation(s__Tray,s__EnglishLanguage,'A &%Holder that is designed for &%Food, dishes, and flatware.') ).

fof(kb_SUMO_9806,axiom,
    s__subclass(s__Dish,s__Holder) ).

fof(kb_SUMO_9807,axiom,
    s__instance(s__Dish__t,s__SetOrClass) ).

fof(kb_SUMO_9808,axiom,
    s__documentation(s__Dish,s__EnglishLanguage,'A &%Holder for &%Food while the &%Food is being eaten.') ).

fof(kb_SUMO_9809,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__Dish)
       => s__hasPurpose(V__D,'(? [V__F,V__E] : (s__instance(V__E,s__Process) & s__instance(V__F,s__Physical) & s__instance(V__E,s__Eating) & s__patient(V__E,V__F) & s__patient(V__E,V__D) & s__instance(V__F,s__FoodForFn(s__Animal)) & s__located(V__F,V__D)))') ) ) ).

fof(kb_SUMO_9810,axiom,
    s__subclass(s__Container,s__Holder) ).

fof(kb_SUMO_9811,axiom,
    s__documentation(s__Container,s__EnglishLanguage,'Any &%Holder whose purpose is to contain something else. Note that &%Container is more specific in meaning than &%Holder, because a &%Container must have a &%Hole that is at least partially filled by the thing contained.') ).

fof(kb_SUMO_9812,axiom,
    ! [V__CONTAINER] :
      ( s__instance(V__CONTAINER,s__SelfConnectedObject)
     => ( s__instance(V__CONTAINER,s__Container)
       => s__hasPurpose(V__CONTAINER,'(? [V__OBJ] : (s__instance(V__OBJ,s__Object) & s__contains(V__CONTAINER,V__OBJ)))') ) ) ).

fof(kb_SUMO_9813,axiom,
    s__subclass(s__Bag,s__Container) ).

fof(kb_SUMO_9814,axiom,
    s__instance(s__Bag__t,s__SetOrClass) ).

fof(kb_SUMO_9815,axiom,
    s__documentation(s__Bag,s__EnglishLanguage,'Any &%Container which is made of &%Fabric.') ).

fof(kb_SUMO_9816,axiom,
    ! [V__BAG] :
      ( s__instance(V__BAG,s__Object)
     => ( s__instance(V__BAG,s__Bag)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__BAG)
            & s__instance(V__PART,s__Fabric) ) ) ) ).

fof(kb_SUMO_9817,axiom,
    s__subclass(s__Box,s__Container) ).

fof(kb_SUMO_9818,axiom,
    s__instance(s__Box__t,s__SetOrClass) ).

fof(kb_SUMO_9819,axiom,
    s__documentation(s__Box,s__EnglishLanguage,'Any six-sided &%Container whose sides are rectangular in shape.') ).

fof(kb_SUMO_9820,axiom,
    ! [V__SIDE,V__BOX] :
      ( s__instance(V__BOX,s__SelfConnectedObject)
     => ( s__instance(V__BOX,s__Box)
       => s__CardinalityFn(s__KappaFn(V__SIDE,'(s__top(V__SIDE,V__BOX) | s__bottom(V__SIDE,V__BOX) | s__side(V__SIDE,V__BOX))')) = "6" ) ) ).

fof(kb_SUMO_9821,axiom,
    s__subclass(s__TrapOrCage,s__Holder) ).

fof(kb_SUMO_9822,axiom,
    s__instance(s__TrapOrCage__t,s__SetOrClass) ).

fof(kb_SUMO_9823,axiom,
    s__instance(s__Holder__t,s__SetOrClass) ).

fof(kb_SUMO_9824,axiom,
    s__documentation(s__TrapOrCage,s__EnglishLanguage,'A &%Device whose purpose is to trap or cage &%Animals, i.e. to be in instrument in an act of &%Confining.') ).

fof(kb_SUMO_9825,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__TrapOrCage)
       => s__hasPurpose(V__T,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Confining) & s__instrument(V__C,V__T)))') ) ) ).

fof(kb_SUMO_9826,axiom,
    s__subclass(s__Envelope,s__Container) ).

fof(kb_SUMO_9827,axiom,
    s__instance(s__Envelope__t,s__SetOrClass) ).

fof(kb_SUMO_9828,axiom,
    s__documentation(s__Envelope,s__EnglishLanguage,'A sealable &%Container for one or more pieces of paper which is designed to protect the papers while they are transferred to someone.') ).

fof(kb_SUMO_9829,axiom,
    s__subclass(s__TravelContainer,s__Container) ).

fof(kb_SUMO_9830,axiom,
    s__instance(s__TravelContainer__t,s__SetOrClass) ).

fof(kb_SUMO_9831,axiom,
    s__documentation(s__TravelContainer,s__EnglishLanguage,'Any &%Container which is intended to be used for carrying clothing, toiletries, and other personal effects that would be needed on a overnight trip.') ).

fof(kb_SUMO_9832,axiom,
    s__subclass(s__FluidContainer,s__Container) ).

fof(kb_SUMO_9833,axiom,
    s__instance(s__FluidContainer__t,s__SetOrClass) ).

fof(kb_SUMO_9834,axiom,
    s__instance(s__Container__t,s__SetOrClass) ).

fof(kb_SUMO_9835,axiom,
    s__documentation(s__FluidContainer,s__EnglishLanguage,'A &%Container which is used to store &%Fluids, i.e. &%Liquids and &%Gases.') ).

fof(kb_SUMO_9836,axiom,
    ! [V__TANK,V__STUFF] :
      ( ( s__instance(V__STUFF,s__Object)
        & s__instance(V__TANK,s__SelfConnectedObject) )
     => ( ( s__instance(V__TANK,s__FluidContainer)
          & s__contains(V__TANK,V__STUFF) )
       => s__attribute(V__STUFF,s__Fluid) ) ) ).

fof(kb_SUMO_9837,axiom,
    s__subclass(s__Bottle,s__FluidContainer) ).

fof(kb_SUMO_9838,axiom,
    s__instance(s__Bottle__t,s__SetOrClass) ).

fof(kb_SUMO_9839,axiom,
    s__documentation(s__Bottle,s__EnglishLanguage,'A &%Container whose top is narrower than its bottom, which has no handle, and which is intended to store &%Liquids.') ).

fof(kb_SUMO_9840,axiom,
    ! [V__BOTTLE,V__STUFF] :
      ( ( s__instance(V__STUFF,s__Object)
        & s__instance(V__BOTTLE,s__SelfConnectedObject) )
     => ( ( s__instance(V__BOTTLE,s__Bottle)
          & s__contains(V__BOTTLE,V__STUFF) )
       => s__attribute(V__STUFF,s__Liquid) ) ) ).

fof(kb_SUMO_9841,axiom,
    ! [V__BOTTLE,V__WIDTH1,V__BOTTOM,V__WIDTH2,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__WIDTH2,s__LengthMeasure)
        & s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__WIDTH1,s__LengthMeasure)
        & s__instance(V__BOTTLE,s__SelfConnectedObject) )
     => ( ( s__instance(V__BOTTLE,s__Bottle)
          & s__bottom(V__BOTTOM,V__BOTTLE)
          & s__top(V__TOP,V__BOTTLE)
          & s__width(V__BOTTOM,V__WIDTH1)
          & s__width(V__TOP,V__WIDTH2) )
       => less(V__WIDTH2,V__WIDTH1) ) ) ).

fof(kb_SUMO_9842,axiom,
    s__subclass(s__DrinkingCup,s__FluidContainer) ).

fof(kb_SUMO_9843,axiom,
    s__instance(s__DrinkingCup__t,s__SetOrClass) ).

fof(kb_SUMO_9844,axiom,
    s__documentation(s__DrinkingCup,s__EnglishLanguage,'An open &%FluidContainer that is intended to serve a &%Beverage to a single person. Note that this class includes both cups with handles and drinking glasses.') ).

fof(kb_SUMO_9845,axiom,
    ! [V__STUFF,V__CUP] :
      ( ( s__instance(V__CUP,s__SelfConnectedObject)
        & s__instance(V__STUFF,s__Object) )
     => ( ( s__instance(V__CUP,s__DrinkingCup)
          & s__contains(V__CUP,V__STUFF) )
       => s__instance(V__STUFF,s__Beverage) ) ) ).

fof(kb_SUMO_9846,axiom,
    s__subclass(s__SwimmingPool,s__FluidContainer) ).

fof(kb_SUMO_9847,axiom,
    s__subclass(s__SwimmingPool,s__StationaryArtifact) ).

fof(kb_SUMO_9848,axiom,
    s__instance(s__SwimmingPool__t,s__SetOrClass) ).

fof(kb_SUMO_9849,axiom,
    s__documentation(s__SwimmingPool,s__EnglishLanguage,'A &%FluidContainer that is filled with &%Water and that is used for &%Swimming.') ).

fof(kb_SUMO_9850,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__SwimmingPool)
       => s__hasPurpose(V__P,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Swimming) & s__eventLocated(V__S,V__P)))') ) ) ).

fof(kb_SUMO_9851,axiom,
    ! [V__P,V__F] :
      ( ( s__instance(V__F,s__Object)
        & s__instance(V__P,s__SelfConnectedObject) )
     => ( ( s__instance(V__P,s__SwimmingPool)
          & s__contains(V__P,V__F)
          & s__instance(V__F,s__Fluid) )
       => s__instance(V__F,s__Water) ) ) ).

fof(kb_SUMO_9852,axiom,
    s__subclass(s__BoardOrBlock,s__Artifact) ).

fof(kb_SUMO_9853,axiom,
    s__instance(s__BoardOrBlock__t,s__SetOrClass) ).

fof(kb_SUMO_9854,axiom,
    s__documentation(s__BoardOrBlock,s__EnglishLanguage,'A piece of material with flat, rectangular sides. Note that boards and blocks are lumped into a single concept, because the difference between these notions cannot be precisely defined.') ).

fof(kb_SUMO_9855,axiom,
    ! [V__BOARD] :
      ( s__instance(V__BOARD,s__Object)
     => ( s__instance(V__BOARD,s__BoardOrBlock)
       => s__capability(s__Constructing,s__resource__m,V__BOARD) ) ) ).

fof(kb_SUMO_9856,axiom,
    s__subclass(s__Brick,s__BoardOrBlock) ).

fof(kb_SUMO_9857,axiom,
    s__instance(s__Brick__t,s__SetOrClass) ).

fof(kb_SUMO_9858,axiom,
    s__documentation(s__Brick,s__EnglishLanguage,'A block of fired &%Clay that is used in &%Constructing.') ).

fof(kb_SUMO_9859,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__CorpuscularObject)
     => ( s__instance(V__B,s__Brick)
       => s__material(s__Clay,V__B) ) ) ).

fof(kb_SUMO_9860,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Brick)
       => s__hasPurpose(V__B,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Constructing) & s__resource(V__C,V__B)))') ) ) ).

fof(kb_SUMO_9861,axiom,
    s__instance(s__tangent__m,s__BinaryPredicate) ).

fof(kb_SUMO_9862,axiom,
    s__domain(s__tangent__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_9863,axiom,
    s__domain(s__tangent__m,"2",s__TwoDimensionalObject) ).

fof(kb_SUMO_9864,axiom,
    s__documentation(s__tangent__m,s__EnglishLanguage,'(&%tangent ?LINE ?CIRCLE) means that the straight line ?LINE is tangent to the figure ?CIRCLE, i.e. ?LINE touches ?CIRCLE without intersecting it.') ).

fof(kb_SUMO_9865,axiom,
    ! [V__CIRCLE,V__LINE] :
      ( s__tangent(V__LINE,V__CIRCLE)
     => ? [V__POINT1] :
          ( s__instance(V__POINT1,s__GeometricPoint)
          & s__pointOfFigure(V__POINT1,V__LINE)
          & s__pointOfFigure(V__POINT1,V__CIRCLE)
          & ! [V__POINT2] :
              ( ( s__instance(V__POINT2,s__GeometricPoint)
                & s__instance(V__LINE,s__OneDimensionalFigure)
                & s__instance(V__CIRCLE,s__TwoDimensionalObject)
                & s__instance(V__CIRCLE,s__GeometricFigure) )
             => ( ( s__pointOfFigure(V__POINT2,V__LINE)
                  & s__pointOfFigure(V__POINT2,V__CIRCLE) )
               => V__POINT1 = V__POINT2 ) ) ) ) ).

fof(kb_SUMO_9866,axiom,
    s__subclass(s__TwoDimensionalObject,s__Object) ).

fof(kb_SUMO_9867,axiom,
    s__instance(s__TwoDimensionalObject__t,s__SetOrClass) ).

fof(kb_SUMO_9868,axiom,
    s__documentation(s__TwoDimensionalObject,s__EnglishLanguage,'A real-world physical object with a very flat aspect. This includes drawings on paper, cave paintings and other surface alterations.') ).

fof(kb_SUMO_9869,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__TwoDimensionalObject)
       => s__attribute(V__T,s__TwoDimensionalFigure) ) ) ).

fof(kb_SUMO_9870,axiom,
    s__instance(s__sliceOfFigure__m,s__BinaryPredicate) ).

fof(kb_SUMO_9871,axiom,
    s__documentation(s__sliceOfFigure__m,s__EnglishLanguage,'(sliceOfFigure ?SLICE ?FIGURE) indicates that ?SLICE is a 2-d section of the 3-d figure ?FIGURE. Or, more formally, ?SLICE is 2-d figure formed by the intersection of a plane with the 3-d figure ?FIGURE.') ).

fof(kb_SUMO_9872,axiom,
    s__domain(s__sliceOfFigure__m,"1",s__TwoDimensionalObject) ).

fof(kb_SUMO_9873,axiom,
    s__domain(s__sliceOfFigure__m,"2",s__CorpuscularObject) ).

fof(kb_SUMO_9874,axiom,
    s__instance(s__RoundShape,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_9875,axiom,
    s__documentation(s__RoundShape,s__EnglishLanguage,'Any &%ThreeDimensionalFigure that has a single tangent at every point on its surface.') ).

fof(kb_SUMO_9876,axiom,
    ! [V__O,V__TO] :
      ( s__attribute(V__O,s__RoundShape)
     => ! [V__P] :
          ( ( s__instance(V__P,s__GeometricPoint)
            & s__instance(V__P,s__Object)
            & s__instance(V__O,s__Object)
            & s__instance(V__O,s__GeometricFigure) )
         => ( s__pointOfFigure(V__P,V__O)
            & s__instance(V__TO,s__TwoDimensionalObject)
            & s__meetsSpatially(V__P,V__O)
            & s__meetsSpatially(V__P,V__TO)
            & ? [V__T] :
                ( s__instance(V__T,s__OneDimensionalFigure)
                & s__tangent(V__T,V__TO) ) ) ) ) ).

fof(kb_SUMO_9877,axiom,
    s__subclass(s__Cone,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_9878,axiom,
    s__instance(s__Cone__t,s__SetOrClass) ).

fof(kb_SUMO_9879,axiom,
    s__documentation(s__Cone,s__EnglishLanguage,'The class of &%ThreeDimensionalFigures which are produced by rotating a &%RightTriangle around its &%RightAngle.') ).

fof(kb_SUMO_9880,axiom,
    s__subclass(s__Cylinder,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_9881,axiom,
    s__instance(s__Cylinder__t,s__SetOrClass) ).

fof(kb_SUMO_9882,axiom,
    s__documentation(s__Cylinder,s__EnglishLanguage,'The class of &%ThreeDimensionalFigures such that all &%GeometricPoints that make up the &%Cylinder are equidistant from a &%OneDimensionalFigure, known as the axis of the &%Cylinder.') ).

fof(kb_SUMO_9883,axiom,
    s__subclass(s__ObliqueAngle,s__TwoDimensionalAngle) ).

fof(kb_SUMO_9884,axiom,
    s__instance(s__ObliqueAngle__t,s__SetOrClass) ).

fof(kb_SUMO_9885,axiom,
    s__documentation(s__ObliqueAngle,s__EnglishLanguage,'Any &%TwoDimensionalAngle that has an &%angularMeasure that is greater than 90 &%AngularDegrees.') ).

fof(kb_SUMO_9886,axiom,
    ! [V__A,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__A,s__TwoDimensionalAngle) )
     => ( ( s__instance(V__A,s__ObliqueAngle)
          & s__angularMeasure(V__A,s__MeasureFn(V__N,s__AngularDegree)) )
       => greater(V__N,"90") ) ) ).

fof(kb_SUMO_9887,axiom,
    s__subclass(s__RightAngle,s__TwoDimensionalAngle) ).

fof(kb_SUMO_9888,axiom,
    s__instance(s__RightAngle__t,s__SetOrClass) ).

fof(kb_SUMO_9889,axiom,
    s__documentation(s__RightAngle,s__EnglishLanguage,'Any &%TwoDimensionalAngle that has the &%angularMeasure of 90 &%AngularDegrees.') ).

fof(kb_SUMO_9890,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__TwoDimensionalAngle)
     => ( s__instance(V__A,s__RightAngle)
       => s__angularMeasure(V__A,s__MeasureFn("90",s__AngularDegree)) ) ) ).

fof(kb_SUMO_9891,axiom,
    s__subclass(s__AcuteAngle,s__TwoDimensionalAngle) ).

fof(kb_SUMO_9892,axiom,
    s__instance(s__AcuteAngle__t,s__SetOrClass) ).

fof(kb_SUMO_9893,axiom,
    s__documentation(s__AcuteAngle,s__EnglishLanguage,'Any &%TwoDimensionalAngle that has an &%angularMeasure that is less than 90 &%AngularDegrees.') ).

fof(kb_SUMO_9894,axiom,
    s__partition_4(s__TwoDimensionalAngle,s__RightAngle,s__ObliqueAngle,s__AcuteAngle) ).

fof(kb_SUMO_9895,axiom,
    ! [V__A,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__A,s__TwoDimensionalAngle) )
     => ( ( s__instance(V__A,s__AcuteAngle)
          & s__angularMeasure(V__A,s__MeasureFn(V__N,s__AngularDegree)) )
       => less(V__N,"90") ) ) ).

fof(kb_SUMO_9896,axiom,
    s__subclass(s__Polygon,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_9897,axiom,
    s__instance(s__Polygon__t,s__SetOrClass) ).

fof(kb_SUMO_9898,axiom,
    s__documentation(s__Polygon,s__EnglishLanguage,'A &%ClosedTwoDimensionalFigure that is composed exclusively of straight lines, i.e. &%OneDimensionalFigures.') ).

fof(kb_SUMO_9899,axiom,
    ! [V__POLYGON,V__PART] :
      ( ( s__instance(V__PART,s__OneDimensionalFigure)
        & s__instance(V__POLYGON,s__GeometricFigure) )
     => ( s__instance(V__POLYGON,s__Polygon)
       => ( s__geometricPart(V__PART,V__POLYGON)
         => ( s__sideOfFigure(V__PART,V__POLYGON)
            | ? [V__SIDE] :
                ( s__instance(V__SIDE,s__OneDimensionalFigure)
                & s__sideOfFigure(V__SIDE,V__POLYGON)
                & s__geometricPart(V__PART,V__SIDE) ) ) ) ) ) ).

fof(kb_SUMO_9900,axiom,
    s__subclass(s__Triangle,s__Polygon) ).

fof(kb_SUMO_9901,axiom,
    s__documentation(s__Triangle,s__EnglishLanguage,'Any three-sided &%Polygon.') ).

%FOL fof(kb_SUMO_9902,axiom,(( ( ! [V__SIDE] : (! [V__TRIANGLE] : (s__instance(V__TRIANGLE,s__GeometricFigure) => (s__instance(V__TRIANGLE,s__Triangle) => (s__CardinalityFn(s__KappaFn(V__SIDE,'s__sideOfFigure(V__SIDE,V__TRIANGLE)')) = 3)))) ) ))).

fof(kb_SUMO_9903,axiom,
    s__subclass(s__RightTriangle,s__Triangle) ).

fof(kb_SUMO_9904,axiom,
    s__instance(s__RightTriangle__t,s__SetOrClass) ).

fof(kb_SUMO_9905,axiom,
    s__instance(s__Triangle__t,s__SetOrClass) ).

fof(kb_SUMO_9906,axiom,
    s__documentation(s__RightTriangle,s__EnglishLanguage,'Any &%Triangle that contains a &%RightAngle.') ).

fof(kb_SUMO_9907,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__GeometricFigure)
     => ( s__instance(V__T,s__RightTriangle)
       => ? [V__A] :
            ( s__instance(V__A,s__TwoDimensionalAngle)
            & s__instance(V__A,s__RightAngle)
            & s__angleOfFigure(V__A,V__T) ) ) ) ).

fof(kb_SUMO_9908,axiom,
    s__subclass(s__Quadrilateral,s__Polygon) ).

fof(kb_SUMO_9909,axiom,
    s__documentation(s__Quadrilateral,s__EnglishLanguage,'Any four-sided &%Polygon.') ).

%FOL fof(kb_SUMO_9910,axiom,(( ( ! [V__SIDE] : (! [V__QUAD] : (s__instance(V__QUAD,s__GeometricFigure) => (s__instance(V__QUAD,s__Quadrilateral) => (s__CardinalityFn(s__KappaFn(V__SIDE,'s__sideOfFigure(V__SIDE,V__QUAD)')) = 4)))) ) ))).

fof(kb_SUMO_9911,axiom,
    s__subclass(s__Rectangle,s__Quadrilateral) ).

fof(kb_SUMO_9912,axiom,
    s__instance(s__Rectangle__t,s__SetOrClass) ).

fof(kb_SUMO_9913,axiom,
    s__instance(s__Quadrilateral__t,s__SetOrClass) ).

fof(kb_SUMO_9914,axiom,
    s__documentation(s__Rectangle,s__EnglishLanguage,'Any &%Quadrilateral whose angles are all &%RightAngles.') ).

fof(kb_SUMO_9915,axiom,
    ! [V__ANGLE,V__RECTANGLE] :
      ( ( s__instance(V__RECTANGLE,s__GeometricFigure)
        & s__instance(V__ANGLE,s__TwoDimensionalAngle) )
     => ( s__instance(V__RECTANGLE,s__Rectangle)
       => ( s__angleOfFigure(V__ANGLE,V__RECTANGLE)
         => s__instance(V__ANGLE,s__RightAngle) ) ) ) ).

fof(kb_SUMO_9916,axiom,
    s__subclass(s__Square,s__Rectangle) ).

fof(kb_SUMO_9917,axiom,
    s__instance(s__Square__t,s__SetOrClass) ).

fof(kb_SUMO_9918,axiom,
    s__documentation(s__Square,s__EnglishLanguage,'Any &%Rectangle whose sides are all equal.') ).

fof(kb_SUMO_9919,axiom,
    ! [V__SQUARE] :
      ( s__instance(V__SQUARE,s__Square)
     => ? [V__LENGTH] :
          ( s__instance(V__LENGTH,s__LengthMeasure)
          & ! [V__SIDE] :
              ( ( s__instance(V__SIDE,s__OneDimensionalFigure)
                & s__instance(V__SQUARE,s__GeometricFigure) )
             => ( s__sideOfFigure(V__SIDE,V__SQUARE)
               => s__lineMeasure(V__SIDE,V__LENGTH) ) ) ) ) ).

fof(kb_SUMO_9920,axiom,
    s__documentation(s__DiameterFn__m,s__EnglishLanguage,'(DiameterFn ?CIRCLE) denotes the length of the diameter of the &%Circle ?CIRCLE.') ).

fof(kb_SUMO_9921,axiom,
    s__instance(s__DiameterFn__m,s__UnaryFunction) ).

fof(kb_SUMO_9922,axiom,
    s__instance(s__DiameterFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_9923,axiom,
    s__domain(s__DiameterFn__m,"1",s__Circle) ).

fof(kb_SUMO_9924,axiom,
    s__range(s__DiameterFn__m,s__LengthMeasure) ).

fof(kb_SUMO_9925,axiom,
    ! [V__C,V__L] :
      ( s__instance(V__C,s__Circle)
     => ( s__DiameterFn(V__C) = V__L
       => ? [V__R] :
            ( s__instance(V__R,s__Quantity)
            & s__RadiusFn(V__C) = V__R
            & times(V__R,"2") = V__L ) ) ) ).

fof(kb_SUMO_9926,axiom,
    s__documentation(s__RadiusFn__m,s__EnglishLanguage,'(RadiusFn ?CIRCLE) denotes the length of the radius of the &%Circle ?CIRCLE.') ).

fof(kb_SUMO_9927,axiom,
    s__instance(s__RadiusFn__m,s__UnaryFunction) ).

fof(kb_SUMO_9928,axiom,
    s__instance(s__RadiusFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_9929,axiom,
    s__domain(s__RadiusFn__m,"1",s__Circle) ).

fof(kb_SUMO_9930,axiom,
    s__range(s__RadiusFn__m,s__LengthMeasure) ).

fof(kb_SUMO_9931,axiom,
    ! [V__P,V__R,V__P2,V__C] :
      ( ( s__instance(V__C,s__Circle)
        & s__instance(V__P2,s__GeometricPoint)
        & s__instance(V__R,s__LengthMeasure)
        & s__instance(V__P,s__GeometricPoint) )
     => ( ( s__CenterOfCircleFn(V__C) = V__P
          & s__pointOfFigure(V__P2,V__C)
          & s__geometricDistance(V__P2,V__P,V__R) )
       => s__RadiusFn(V__C) = V__R ) ) ).

fof(kb_SUMO_9932,axiom,
    s__subclass(s__CircleSector,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_9933,axiom,
    s__instance(s__CircleSector__t,s__SetOrClass) ).

fof(kb_SUMO_9934,axiom,
    s__documentation(s__CircleSector,s__EnglishLanguage,'A slice of a &%Circle, i.e. any &%ClosedTwoDimensionalFigure which consists of two Radii and the arc of the &%Circle that they bound.') ).

fof(kb_SUMO_9935,axiom,
    s__subrelation(s__sideOfFigure__m,s__geometricPart__m) ).

fof(kb_SUMO_9936,axiom,
    s__domain(s__sideOfFigure__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_9937,axiom,
    s__domain(s__sideOfFigure__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_9938,axiom,
    s__documentation(s__sideOfFigure__m,s__EnglishLanguage,'(&%sideOfFigure ?SIDE ?FIGURE) means that the &%OneDimensionalFigure ?POINT is a side of the &%GeometricFigure ?FIGURE.') ).

fof(kb_SUMO_9939,axiom,
    s__subclass(s__Sphere,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_9940,axiom,
    s__instance(s__Sphere__t,s__SetOrClass) ).

fof(kb_SUMO_9941,axiom,
    s__documentation(s__Sphere,s__EnglishLanguage,'The class of &%ThreeDimensionalFigures such that all &%GeometricPoints that make up the &%Sphere are equidistant from a single &%GeometricPoint, known as the center of the &%Sphere.') ).

fof(kb_SUMO_9942,axiom,
    ! [V__OBJ,V__SPHERE] :
      ( ( s__attribute(V__OBJ,V__SPHERE)
        & s__instance(V__SPHERE,s__Sphere) )
     => ? [V__CENTER,V__DIST] :
          ( s__instance(V__DIST,s__LengthMeasure)
          & s__instance(V__CENTER,s__GeometricPoint)
          & ! [V__PT] :
              ( ( s__instance(V__PT,s__GeometricPoint)
                & s__instance(V__SPHERE,s__Attribute)
                & s__instance(V__OBJ,s__Object)
                & s__instance(V__OBJ,s__GeometricFigure) )
             => ( s__pointOfFigure(V__PT,V__OBJ)
               => s__geometricDistance(V__PT,V__CENTER,V__DIST) ) ) ) ) ).

fof(kb_SUMO_9943,axiom,
    s__subclass(s__Bubble,s__CorpuscularObject) ).

fof(kb_SUMO_9944,axiom,
    s__instance(s__Bubble__t,s__SetOrClass) ).

fof(kb_SUMO_9945,axiom,
    s__documentation(s__Bubble,s__EnglishLanguage,'A globe which has a &%Liquid surface and which contains a &%Gas.') ).

fof(kb_SUMO_9946,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__SelfConnectedObject)
     => ( s__instance(V__B,s__Bubble)
       => ? [V__S] :
            ( s__instance(V__S,s__SelfConnectedObject)
            & s__surface(V__S,V__B)
            & s__attribute(V__S,s__Liquid) ) ) ) ).

fof(kb_SUMO_9947,axiom,
    ! [V__P,V__B] :
      ( ( s__instance(V__B,s__Object)
        & s__instance(V__P,s__Object) )
     => ( ( s__instance(V__B,s__Bubble)
          & s__interiorPart(V__P,V__B) )
       => s__attribute(V__P,s__Gas) ) ) ).

fof(kb_SUMO_9948,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( ( s__instance(V__B,s__Bubble)
          & ~ ? [V__X,V__S] :
                ( s__instance(V__S,s__Attribute)
                & s__instance(V__X,s__Object)
                & s__attribute(V__X,V__S)
                & V__X != s__Gas
                & s__meetsSpatially(V__X,V__B) ) )
       => s__attribute(V__B,s__RoundShape) ) ) ).

fof(kb_SUMO_9949,axiom,
    s__subclass(s__Nest,s__CorpuscularObject) ).

fof(kb_SUMO_9950,axiom,
    s__instance(s__Nest__t,s__SetOrClass) ).

fof(kb_SUMO_9951,axiom,
    s__documentation(s__Nest,s__EnglishLanguage,'Any structure which is created by nonhuman &%Animals for the purpose of giving birth to their offspring.') ).

fof(kb_SUMO_9952,axiom,
    ! [V__NEST] :
      ( s__instance(V__NEST,s__Object)
     => ( s__instance(V__NEST,s__Nest)
       => s__hasPurpose(V__NEST,'(? [V__BIRTH] : (s__instance(V__BIRTH,s__Process) & s__instance(V__BIRTH,s__Birth) & s__eventLocated(V__BIRTH,V__NEST)))') ) ) ).

fof(kb_SUMO_9953,axiom,
    s__subclass(s__OutdoorClothing,s__Clothing) ).

fof(kb_SUMO_9954,axiom,
    s__instance(s__OutdoorClothing__t,s__SetOrClass) ).

fof(kb_SUMO_9955,axiom,
    s__documentation(s__OutdoorClothing,s__EnglishLanguage,'&%Clothing that is intended to be worn outdoors.') ).

%FOL fof(kb_SUMO_9956,axiom,(( (! [V__TIME,V__PERSON,V__CLOTHING] : ((s__instance(V__CLOTHING,s__WearableItem) & s__instance(V__PERSON,s__Animal) & s__instance(V__TIME,s__TimePosition)) => ((s__instance(V__CLOTHING,s__OutdoorClothing) & s__holdsDuring(V__TIME,'s__wears(V__PERSON,V__CLOTHING)')) => (~ (? [V__BUILDING] : (s__instance(V__BUILDING,s__Object) & s__instance(V__BUILDING,s__Building) & s__holdsDuring(V__TIME,'s__located(V__PERSON,V__BUILDING)'))))))) ))).

fof(kb_SUMO_9957,axiom,
    s__subclass(s__Apron,s__Clothing) ).

fof(kb_SUMO_9958,axiom,
    s__instance(s__Apron__t,s__SetOrClass) ).

fof(kb_SUMO_9959,axiom,
    s__documentation(s__Apron,s__EnglishLanguage,'An item of &%Clothing that protects the front and middle part of the body while one is &%Cooking or doing other work.') ).

fof(kb_SUMO_9960,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__WearableItem)
     => ( s__instance(V__A,s__Apron)
       => s__hasPurpose(V__A,'(? [V__P,V__C] : (s__instance(V__C,s__Process) & s__instance(V__P,s__Animal) & s__instance(V__C,s__Cooking) & s__agent(V__C,V__P) & s__holdsDuring(s__WhenFn(V__C),s__wears(V__P,V__A))))') ) ) ).

fof(kb_SUMO_9961,axiom,
    s__subclass(s__Belt,s__Clothing) ).

fof(kb_SUMO_9962,axiom,
    s__instance(s__Belt__t,s__SetOrClass) ).

fof(kb_SUMO_9963,axiom,
    s__documentation(s__Belt,s__EnglishLanguage,'A piece of &%Clothing that is worn around the waist to restrain another piece of clothing.') ).

fof(kb_SUMO_9964,axiom,
    ! [V__P,V__B] :
      ( ( s__instance(V__B,s__WearableItem)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__B)
          & s__instance(V__B,s__Belt) )
       => ? [V__C] :
            ( s__instance(V__C,s__WearableItem)
            & s__instance(V__C,s__Clothing)
            & s__wears(V__P,V__C)
            & s__meetsSpatially(V__B,V__C) ) ) ) ).

fof(kb_SUMO_9965,axiom,
    s__subclass(s__TieClothing,s__Clothing) ).

fof(kb_SUMO_9966,axiom,
    s__instance(s__TieClothing__t,s__SetOrClass) ).

fof(kb_SUMO_9967,axiom,
    s__documentation(s__TieClothing,s__EnglishLanguage,'&%Clothing that is intended to be worn around the &%Neck and knotted at the front.') ).

fof(kb_SUMO_9968,axiom,
    ! [V__P,V__T] :
      ( ( s__instance(V__T,s__WearableItem)
        & s__instance(V__T,s__SelfConnectedObject)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__T)
          & s__instance(V__T,s__TieClothing) )
       => ? [V__N] :
            ( s__instance(V__N,s__Object)
            & s__instance(V__N,s__Neck)
            & s__part(V__N,V__P)
            & s__contains(V__T,V__N) ) ) ) ).

fof(kb_SUMO_9969,axiom,
    s__subclass(s__Cloak,s__Clothing) ).

fof(kb_SUMO_9970,axiom,
    s__instance(s__Cloak__t,s__SetOrClass) ).

fof(kb_SUMO_9971,axiom,
    s__documentation(s__Cloak,s__EnglishLanguage,'A piece of &%Clothing that covers the whole body except the face (and possibly entire head), hands, and feet.') ).

fof(kb_SUMO_9972,axiom,
    s__subclass(s__Collar,s__Clothing) ).

fof(kb_SUMO_9973,axiom,
    s__instance(s__Collar__t,s__SetOrClass) ).

fof(kb_SUMO_9974,axiom,
    s__documentation(s__Collar,s__EnglishLanguage,'A piece of &%Clothing that fits around the &%Neck. A &%Collar is always part of a &%Coat or a &%Shirt.') ).

fof(kb_SUMO_9975,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Collar)
       => ? [V__OC] :
            ( s__instance(V__OC,s__Object)
            & s__part(V__C,V__OC)
            & ( s__instance(V__OC,s__Coat)
              | s__instance(V__OC,s__Shirt) ) ) ) ) ).

fof(kb_SUMO_9976,axiom,
    ! [V__P,V__C] :
      ( ( s__instance(V__C,s__WearableItem)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__C)
          & s__instance(V__C,s__Collar) )
       => ? [V__N] :
            ( s__instance(V__N,s__Object)
            & s__instance(V__N,s__Neck)
            & s__part(V__N,V__P)
            & s__meetsSpatially(V__C,V__N) ) ) ) ).

fof(kb_SUMO_9977,axiom,
    s__subclass(s__Glove,s__Clothing) ).

fof(kb_SUMO_9978,axiom,
    s__instance(s__Glove__t,s__SetOrClass) ).

fof(kb_SUMO_9979,axiom,
    s__documentation(s__Glove,s__EnglishLanguage,'Clothing that is intended to be worn on the &%Hand. Note that this class covers both gloves which have individual compartments for each of the &%Fingers and mittens.') ).

fof(kb_SUMO_9980,axiom,
    ! [V__P,V__G] :
      ( ( s__instance(V__G,s__WearableItem)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__G)
          & s__instance(V__G,s__Glove) )
       => ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__H,s__Hand)
            & s__part(V__H,V__P)
            & s__meetsSpatially(V__G,V__H) ) ) ) ).

fof(kb_SUMO_9981,axiom,
    s__subclass(s__Hat,s__Clothing) ).

fof(kb_SUMO_9982,axiom,
    s__instance(s__Hat__t,s__SetOrClass) ).

fof(kb_SUMO_9983,axiom,
    s__documentation(s__Hat,s__EnglishLanguage,'A type of &%Clothing that is worn on the &%Head. Note that this class covers caps, bonnets, berets, etc.') ).

fof(kb_SUMO_9984,axiom,
    ! [V__PERSON,V__HAT] :
      ( ( s__instance(V__HAT,s__WearableItem)
        & s__instance(V__PERSON,s__Animal) )
     => ( ( s__wears(V__PERSON,V__HAT)
          & s__instance(V__HAT,s__Hat) )
       => ? [V__HEAD] :
            ( s__instance(V__HEAD,s__Object)
            & s__instance(V__HEAD,s__Head)
            & s__part(V__HEAD,V__PERSON)
            & s__meetsSpatially(V__HAT,V__HEAD) ) ) ) ).

fof(kb_SUMO_9985,axiom,
    s__subclass(s__Coat,s__OutdoorClothing) ).

fof(kb_SUMO_9986,axiom,
    s__instance(s__Coat__t,s__SetOrClass) ).

fof(kb_SUMO_9987,axiom,
    s__documentation(s__Coat,s__EnglishLanguage,'&%Clothing that has sleeves and covers from the neck down. &%Coats are intended to be worn outdoors.') ).

fof(kb_SUMO_9988,axiom,
    s__subclass(s__Trousers,s__Clothing) ).

fof(kb_SUMO_9989,axiom,
    s__instance(s__Trousers__t,s__SetOrClass) ).

fof(kb_SUMO_9990,axiom,
    s__documentation(s__Trousers,s__EnglishLanguage,'A piece of &%Clothing that covers each &%Leg of a person separately.') ).

fof(kb_SUMO_9991,axiom,
    ! [V__T,V__H] :
      ( ( s__instance(V__H,s__Animal)
        & s__instance(V__T,s__WearableItem)
        & s__instance(V__T,s__SelfConnectedObject) )
     => ( ( s__wears(V__H,V__T)
          & s__instance(V__T,s__Trousers) )
       => ? [V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__L,s__Leg)
            & s__part(V__L,V__H)
            & s__contains(V__T,V__L) ) ) ) ).

fof(kb_SUMO_9992,axiom,
    s__subclass(s__Shoe,s__Clothing) ).

fof(kb_SUMO_9993,axiom,
    s__instance(s__Shoe__t,s__SetOrClass) ).

fof(kb_SUMO_9994,axiom,
    s__documentation(s__Shoe,s__EnglishLanguage,'&%Clothing that is intended to be worn on the &%Foot. It consists of an upper, a sole, and a heel.') ).

fof(kb_SUMO_9995,axiom,
    ! [V__PERSON,V__SHOE] :
      ( ( s__instance(V__SHOE,s__WearableItem)
        & s__instance(V__PERSON,s__Animal) )
     => ( ( s__wears(V__PERSON,V__SHOE)
          & s__instance(V__SHOE,s__Shoe) )
       => ? [V__FOOT] :
            ( s__instance(V__FOOT,s__Object)
            & s__instance(V__FOOT,s__Foot)
            & s__part(V__FOOT,V__PERSON)
            & s__meetsSpatially(V__SHOE,V__FOOT) ) ) ) ).

fof(kb_SUMO_9996,axiom,
    s__documentation(s__ShoeSole,s__EnglishLanguage,'The bottom part of a &%Shoe that is intended to be the point of contact with the ground while the shoe is being worn.') ).

fof(kb_SUMO_9997,axiom,
    s__subclass(s__ShoeSole,s__Artifact) ).

fof(kb_SUMO_9998,axiom,
    s__instance(s__ShoeSole__t,s__SetOrClass) ).

fof(kb_SUMO_9999,axiom,
    ! [V__SS] :
      ( s__instance(V__SS,s__SelfConnectedObject)
     => ( s__instance(V__SS,s__ShoeSole)
       => ? [V__S] :
            ( s__instance(V__S,s__SelfConnectedObject)
            & s__instance(V__S,s__Shoe)
            & s__bottom(V__SS,V__S) ) ) ) ).

fof(kb_SUMO_10000,axiom,
    s__documentation(s__Sandal,s__EnglishLanguage,'Any kind of open shoe lacking a markedly thicker heel. The toe may be enclosed, but there must be some opening in the upper other than the &%Hole through which the foot is inserted.') ).

fof(kb_SUMO_10001,axiom,
    s__subclass(s__Sandal,s__Shoe) ).

fof(kb_SUMO_10002,axiom,
    s__instance(s__Sandal__t,s__SetOrClass) ).

fof(kb_SUMO_10003,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Sandal)
     => ? [V__H1,V__H2] :
          ( s__instance(V__H1,s__Hole)
          & s__instance(V__H2,s__Hole)
          & V__H1 != V__H2
          & s__hasPurpose(V__H1,'(? [V__D,V__F,V__A,V__I] : (s__instance(V__I,s__Process) & s__instance(V__A,s__Agent) & s__instance(V__F,s__Object) & s__instance(V__D,s__Process) & s__instance(V__H1,s__Physical) & s__instance(V__D,s__Dressing) & s__instance(V__F,s__Foot) & s__agent(V__D,V__A) & s__part(V__F,V__A) & s__subProcess(V__I,V__D) & s__instance(V__I,s__Inserting) & s__patient(V__I,V__F) & s__destination(V__I,V__H1)))') ) ) ).

fof(kb_SUMO_10004,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Sandal)
       => ? [V__SOLE] :
            ( s__instance(V__SOLE,s__Object)
            & s__instance(V__SOLE,s__ShoeSole)
            & s__part(V__SOLE,V__S)
            & s__attribute(V__SOLE,s__Flat) ) ) ) ).

fof(kb_SUMO_10005,axiom,
    s__subclass(s__Sock,s__Clothing) ).

fof(kb_SUMO_10006,axiom,
    s__instance(s__Sock__t,s__SetOrClass) ).

fof(kb_SUMO_10007,axiom,
    s__documentation(s__Sock,s__EnglishLanguage,'A piece of &%Clothing that is made of a soft &%Fabric like &%Cotton and that is intended to be worn on the &%Foot.') ).

fof(kb_SUMO_10008,axiom,
    ! [V__P,V__S] :
      ( ( s__instance(V__S,s__WearableItem)
        & s__instance(V__S,s__SelfConnectedObject)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__S)
          & s__instance(V__S,s__Sock) )
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__Foot)
            & s__part(V__F,V__P)
            & s__contains(V__S,V__F) ) ) ) ).

fof(kb_SUMO_10009,axiom,
    s__subclass(s__Shirt,s__Clothing) ).

fof(kb_SUMO_10010,axiom,
    s__instance(s__Shirt__t,s__SetOrClass) ).

fof(kb_SUMO_10011,axiom,
    s__documentation(s__Shirt,s__EnglishLanguage,'An item of &%Clothing which covers the upper body of a &%Human.') ).

fof(kb_SUMO_10012,axiom,
    ! [V__SHIRT,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Animal)
        & s__instance(V__SHIRT,s__WearableItem) )
     => ( ( s__instance(V__SHIRT,s__Shirt)
          & s__wears(V__PERSON,V__SHIRT) )
       => s__instance(V__PERSON,s__Human) ) ) ).

fof(kb_SUMO_10013,axiom,
    s__subclass(s__Sleeve,s__Clothing) ).

fof(kb_SUMO_10014,axiom,
    s__instance(s__Sleeve__t,s__SetOrClass) ).

fof(kb_SUMO_10015,axiom,
    s__documentation(s__Sleeve,s__EnglishLanguage,'A piece of &%Clothing that covers the Arm. A &%Sleeve is always part of a &%Coat or a &%Shirt.') ).

fof(kb_SUMO_10016,axiom,
    ! [V__P,V__S] :
      ( ( s__instance(V__S,s__WearableItem)
        & s__instance(V__S,s__SelfConnectedObject)
        & s__instance(V__P,s__Animal) )
     => ( ( s__wears(V__P,V__S)
          & s__instance(V__S,s__Sleeve) )
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Arm)
            & s__part(V__A,V__P)
            & s__contains(V__S,V__A) ) ) ) ).

fof(kb_SUMO_10017,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Sleeve)
       => ? [V__C] :
            ( s__instance(V__C,s__Object)
            & s__part(V__S,V__C)
            & ( s__instance(V__C,s__Shirt)
              | s__instance(V__C,s__Coat) ) ) ) ) ).

fof(kb_SUMO_10018,axiom,
    s__subclass(s__Dress,s__Clothing) ).

fof(kb_SUMO_10019,axiom,
    s__instance(s__Dress__t,s__SetOrClass) ).

fof(kb_SUMO_10020,axiom,
    s__documentation(s__Dress,s__EnglishLanguage,'An item of &%Clothing which covers the lower body of a &%Woman.') ).

fof(kb_SUMO_10021,axiom,
    ! [V__PERSON,V__DRESS] :
      ( ( s__instance(V__DRESS,s__WearableItem)
        & s__instance(V__PERSON,s__Animal) )
     => ( ( s__instance(V__DRESS,s__Dress)
          & s__wears(V__PERSON,V__DRESS) )
       => s__instance(V__PERSON,s__Woman) ) ) ).

fof(kb_SUMO_10022,axiom,
    s__subclass(s__ClothingSuit,s__Collection) ).

fof(kb_SUMO_10023,axiom,
    s__instance(s__ClothingSuit__t,s__SetOrClass) ).

fof(kb_SUMO_10024,axiom,
    s__documentation(s__ClothingSuit,s__EnglishLanguage,'A &%Collection of instances of &%Clothing that are designed to be worn together.') ).

%FOL fof(kb_SUMO_10025,axiom,(( (! [V__TIME,V__PERSON,V__ITEM1,V__SUIT] : ((s__instance(V__SUIT,s__ClothingSuit) & s__member(V__ITEM1,V__SUIT) & s__holdsDuring(V__TIME,'s__wears(V__PERSON,V__ITEM1)')) => (! [V__ITEM2] : ((s__instance(V__ITEM2,s__SelfConnectedObject) & s__instance(V__ITEM2,s__WearableItem) & s__instance(V__SUIT,s__Collection) & s__instance(V__ITEM1,s__SelfConnectedObject) & s__instance(V__ITEM1,s__WearableItem) & s__instance(V__PERSON,s__Animal) & s__instance(V__TIME,s__TimePosition)) => (s__member(V__ITEM2,V__SUIT) => s__holdsDuring(V__TIME,'s__wears(V__PERSON,V__ITEM2)')))))) ))).

fof(kb_SUMO_10026,axiom,
    s__subclass(s__Rug,s__Fabric) ).

fof(kb_SUMO_10027,axiom,
    s__documentation(s__Rug,s__EnglishLanguage,'A piece of &%Fabric whose purpose is to cover a &%Floor.') ).

fof(kb_SUMO_10028,axiom,
    ! [V__R,V__F] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Rug)
       => s__hasPurpose(V__R,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Covering) & s__instrument(V__C,V__R) & s__patient(V__C,V__F) & s__instance(V__F,s__Floor)))') ) ) ).

fof(kb_SUMO_10029,axiom,
    s__documentation(s__Towel,s__EnglishLanguage,'A piece of &%Fabric which is used for &%Drying.') ).

fof(kb_SUMO_10030,axiom,
    s__subclass(s__Towel,s__Fabric) ).

fof(kb_SUMO_10031,axiom,
    s__instance(s__Towel__t,s__SetOrClass) ).

fof(kb_SUMO_10032,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Towel)
       => s__capability(s__Drying,s__instrument__m,V__X) ) ) ).

fof(kb_SUMO_10033,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Towel)
       => s__hasPurpose(V__T,'(? [V__D] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Drying) & s__instrument(V__D,V__T)))') ) ) ).

fof(kb_SUMO_10034,axiom,
    s__subclass(s__Leather,s__Fabric) ).

fof(kb_SUMO_10035,axiom,
    s__instance(s__Leather__t,s__SetOrClass) ).

fof(kb_SUMO_10036,axiom,
    s__documentation(s__Leather,s__EnglishLanguage,'A &%Fabric that is the result of tanning an &%Animal &%Skin.') ).

fof(kb_SUMO_10037,axiom,
    ! [V__LEATHER] :
      ( s__instance(V__LEATHER,s__Leather)
     => ? [V__MAKE,V__SKIN] :
          ( s__instance(V__SKIN,s__Object)
          & s__instance(V__MAKE,s__Process)
          & s__instance(V__MAKE,s__Making)
          & s__resource(V__MAKE,V__SKIN)
          & s__instance(V__SKIN,s__Skin)
          & s__result(V__MAKE,V__LEATHER) ) ) ).

fof(kb_SUMO_10038,axiom,
    s__subclass(s__Silk,s__Fabric) ).

fof(kb_SUMO_10039,axiom,
    s__instance(s__Silk__t,s__SetOrClass) ).

fof(kb_SUMO_10040,axiom,
    s__documentation(s__Silk,s__EnglishLanguage,'Fabric that is woven from the strands produced by certain &%Larval &%Insects.') ).

fof(kb_SUMO_10041,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Silk)
     => ? [V__M,V__T,V__I] :
          ( s__instance(V__I,s__Object)
          & s__instance(V__T,s__Object)
          & s__instance(V__M,s__Process)
          & s__instance(V__M,s__Making)
          & s__result(V__M,V__S)
          & s__resource(V__M,V__T)
          & s__part(V__T,V__I)
          & s__instance(V__I,s__Insect)
          & s__attribute(V__I,s__Larval) ) ) ).

fof(kb_SUMO_10042,axiom,
    s__subclass(s__Wool,s__Fabric) ).

fof(kb_SUMO_10043,axiom,
    s__instance(s__Wool__t,s__SetOrClass) ).

fof(kb_SUMO_10044,axiom,
    s__documentation(s__Wool,s__EnglishLanguage,'&%Fabric that is made from the &%Hair of &%Sheep.') ).

fof(kb_SUMO_10045,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Wool)
     => ? [V__M,V__H,V__S] :
          ( s__instance(V__S,s__Object)
          & s__instance(V__H,s__Object)
          & s__instance(V__M,s__Process)
          & s__instance(V__M,s__Making)
          & s__result(V__M,V__W)
          & s__resource(V__M,V__H)
          & s__part(V__H,V__S)
          & s__instance(V__H,s__Hair)
          & s__instance(V__S,s__Sheep) ) ) ).

fof(kb_SUMO_10046,axiom,
    s__subclass(s__Pocket,s__Fabric) ).

fof(kb_SUMO_10047,axiom,
    s__instance(s__Pocket__t,s__SetOrClass) ).

fof(kb_SUMO_10048,axiom,
    s__documentation(s__Pocket,s__EnglishLanguage,'A pouch of &%Fabric in an instance of &%Clothing where something can be kept.') ).

fof(kb_SUMO_10049,axiom,
    ! [V__POCKET] :
      ( s__instance(V__POCKET,s__Object)
     => ( s__instance(V__POCKET,s__Pocket)
       => ? [V__CLOTHING] :
            ( s__instance(V__CLOTHING,s__Object)
            & s__instance(V__CLOTHING,s__Clothing)
            & s__part(V__POCKET,V__CLOTHING) ) ) ) ).

fof(kb_SUMO_10050,axiom,
    ! [V__POCKET] :
      ( s__instance(V__POCKET,s__Object)
     => ( s__instance(V__POCKET,s__Pocket)
       => s__capability(s__Keeping,s__instrument__m,V__POCKET) ) ) ).

fof(kb_SUMO_10051,axiom,
    s__subclass(s__Blanket,s__Fabric) ).

fof(kb_SUMO_10052,axiom,
    s__instance(s__Blanket__t,s__SetOrClass) ).

fof(kb_SUMO_10053,axiom,
    s__documentation(s__Blanket,s__EnglishLanguage,'A piece of &%Fabric whose purpose is to keep a person who is in bed warm.') ).

fof(kb_SUMO_10054,axiom,
    ! [V__BLANKET] :
      ( s__instance(V__BLANKET,s__Physical)
     => ( s__instance(V__BLANKET,s__Blanket)
       => s__hasPurpose(V__BLANKET,'(? [V__HEAT,V__PERSON,V__BED] : (s__instance(V__BED,s__Object) & s__instance(V__PERSON,s__Physical) & s__instance(V__HEAT,s__Process) & s__instance(V__HEAT,s__Heating) & s__patient(V__HEAT,V__PERSON) & s__instance(V__PERSON,s__Human) & s__located(V__PERSON,V__BED) & s__instance(V__BED,s__Bed)))') ) ) ).

fof(kb_SUMO_10055,axiom,
    s__subclass(s__Cotton,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_10056,axiom,
    s__instance(s__Cotton__t,s__SetOrClass) ).

fof(kb_SUMO_10057,axiom,
    s__documentation(s__Cotton,s__EnglishLanguage,'Fibers from the cotton plant that are used in &%Making &%CottonFabric.') ).

fof(kb_SUMO_10058,axiom,
    s__subclass(s__CottonFabric,s__Fabric) ).

fof(kb_SUMO_10059,axiom,
    s__instance(s__CottonFabric__t,s__SetOrClass) ).

fof(kb_SUMO_10060,axiom,
    s__documentation(s__CottonFabric,s__EnglishLanguage,'Any &%Fabric that is made entirely out of &%Cotton.') ).

fof(kb_SUMO_10061,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__CottonFabric)
     => ? [V__M,V__C] :
          ( s__instance(V__C,s__Object)
          & s__instance(V__M,s__Process)
          & s__instance(V__M,s__Making)
          & s__resource(V__M,V__C)
          & s__instance(V__C,s__Cotton)
          & s__result(V__M,V__F) ) ) ).

fof(kb_SUMO_10062,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__CorpuscularObject)
     => ( s__instance(V__F,s__CottonFabric)
       => s__material(s__Cotton,V__F) ) ) ).

fof(kb_SUMO_10063,axiom,
    s__documentation(s__Veil,s__EnglishLanguage,'A piece of &%Clothing intended to cover or obscure the face or hair of a &%Woman. This is commonly worn for religious reasons when in public in &%Muslim countries, but is also customary at &%Weddings and &%Funerals among some non-Muslim women.') ).

fof(kb_SUMO_10064,axiom,
    s__subclass(s__Veil,s__Clothing) ).

fof(kb_SUMO_10065,axiom,
    s__instance(s__Veil__t,s__SetOrClass) ).

fof(kb_SUMO_10066,axiom,
    ! [V__V] :
      ( s__instance(V__V,s__Object)
     => ( s__instance(V__V,s__Veil)
       => s__hasPurpose(V__V,'(? [V__F,V__H] : (s__instance(V__H,s__Object) & s__instance(V__F,s__Object) & ((s__instance(V__F,s__Face) & s__meetsSpatially(V__V,V__F)) | (s__instance(V__H,s__Hair) & s__meetsSpatially(V__V,V__H)))))') ) ) ).

fof(kb_SUMO_10067,axiom,
    s__subclass(s__Concealing,s__Putting) ).

fof(kb_SUMO_10068,axiom,
    s__instance(s__Concealing__t,s__SetOrClass) ).

fof(kb_SUMO_10069,axiom,
    s__documentation(s__Concealing,s__EnglishLanguage,'Locating something in such a way that it cannot be seen.') ).

fof(kb_SUMO_10070,axiom,
    ! [V__OBJ,V__C] :
      ( s__instance(V__C,s__Process)
     => ( ( s__instance(V__C,s__Concealing)
          & s__patient(V__C,V__OBJ) )
       => s__hasPurpose(V__C,'(~ (? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Seeing) & s__patient(V__S,V__OBJ))))') ) ) ).

fof(kb_SUMO_10071,axiom,
    s__subclass(s__Dressing,s__Putting) ).

fof(kb_SUMO_10072,axiom,
    s__instance(s__Dressing__t,s__SetOrClass) ).

fof(kb_SUMO_10073,axiom,
    s__documentation(s__Dressing,s__EnglishLanguage,'The &%Process of putting on &%Clothing.') ).

%FOL fof(kb_SUMO_10074,axiom,(( (! [V__AGENT,V__DRESS,V__CLOTHING] : ((s__instance(V__CLOTHING,s__WearableItem) & s__instance(V__DRESS,s__Process) & s__instance(V__AGENT,s__Animal)) => ((s__instance(V__DRESS,s__Dressing) & s__agent(V__DRESS,V__AGENT) & s__patient(V__DRESS,V__CLOTHING)) => (s__instance(V__CLOTHING,s__Clothing) & s__holdsDuring(s__BeginFn(s__WhenFn(V__DRESS)),'(~ s__wears(V__AGENT,V__CLOTHING))') & s__holdsDuring(s__EndFn(s__WhenFn(V__DRESS)),'s__wears(V__AGENT,V__CLOTHING)'))))) ))).

fof(kb_SUMO_10075,axiom,
    s__subclass(s__ChangingClothing,s__Transfer) ).

fof(kb_SUMO_10076,axiom,
    s__instance(s__ChangingClothing__t,s__SetOrClass) ).

fof(kb_SUMO_10077,axiom,
    s__documentation(s__ChangingClothing,s__EnglishLanguage,'Any instance of a process of &%RemovingClothing and &%Dressing.') ).

fof(kb_SUMO_10078,axiom,
    ! [V__CC] :
      ( s__instance(V__CC,s__Process)
     => ( s__instance(V__CC,s__ChangingClothing)
       => ? [V__R,V__D] :
            ( s__instance(V__D,s__Process)
            & s__instance(V__R,s__Process)
            & s__instance(V__R,s__RemovingClothing)
            & s__instance(V__D,s__Dressing)
            & s__subProcess(V__R,V__CC)
            & s__subProcess(V__D,V__CC) ) ) ) ).

fof(kb_SUMO_10079,axiom,
    s__subclass(s__RemovingClothing,s__Uncovering) ).

fof(kb_SUMO_10080,axiom,
    s__instance(s__RemovingClothing__t,s__SetOrClass) ).

fof(kb_SUMO_10081,axiom,
    s__documentation(s__RemovingClothing,s__EnglishLanguage,'Removing &%Clothing from a &%Human or &%Animal in such a way that the &%Human or &%Animal no longer wears the &%Clothing.') ).

%FOL fof(kb_SUMO_10082,axiom,(( (! [V__REMOVE,V__AGENT,V__CLOTHING] : ((s__instance(V__CLOTHING,s__WearableItem) & s__instance(V__AGENT,s__Animal) & s__instance(V__REMOVE,s__Process)) => ((s__instance(V__REMOVE,s__RemovingClothing) & s__agent(V__REMOVE,V__AGENT) & s__patient(V__REMOVE,V__CLOTHING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__REMOVE)),'s__wears(V__AGENT,V__CLOTHING)') & s__holdsDuring(s__EndFn(s__WhenFn(V__REMOVE)),'(~ s__wears(V__AGENT,V__CLOTHING))'))))) ))).

fof(kb_SUMO_10083,axiom,
    s__subclass(s__Sweeping,s__Removing) ).

fof(kb_SUMO_10084,axiom,
    s__instance(s__Sweeping__t,s__SetOrClass) ).

fof(kb_SUMO_10085,axiom,
    s__documentation(s__Sweeping,s__EnglishLanguage,'Removing small particles from the floor by means of a &%Broom.') ).

fof(kb_SUMO_10086,axiom,
    ! [V__B,V__S] :
      ( ( s__instance(V__S,s__Process)
        & s__instance(V__B,s__Object) )
     => ( ( s__instance(V__S,s__Sweeping)
          & s__instrument(V__S,V__B) )
       => s__instance(V__B,s__Broom) ) ) ).

fof(kb_SUMO_10087,axiom,
    s__subclass(s__Washing,s__Removing) ).

fof(kb_SUMO_10088,axiom,
    s__instance(s__Washing__t,s__SetOrClass) ).

fof(kb_SUMO_10089,axiom,
    s__documentation(s__Washing,s__EnglishLanguage,'&%Removing small particles from something by means of a &%Detergent and &%Water.') ).

fof(kb_SUMO_10090,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__Washing)
       => ? [V__D,V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__D,s__Object)
            & s__instance(V__D,s__Detergent)
            & s__instrument(V__P,V__D)
            & s__instance(V__W,s__Water)
            & s__instrument(V__P,V__W) ) ) ) ).

fof(kb_SUMO_10091,axiom,
    s__subclass(s__Tying,s__Attaching) ).

fof(kb_SUMO_10092,axiom,
    s__instance(s__Tying__t,s__SetOrClass) ).

fof(kb_SUMO_10093,axiom,
    s__documentation(s__Tying,s__EnglishLanguage,'The &%Process of tying two things, or two strands of the same thing, together.') ).

fof(kb_SUMO_10094,axiom,
    s__subclass(s__Untying,s__Detaching) ).

fof(kb_SUMO_10095,axiom,
    s__instance(s__Untying__t,s__SetOrClass) ).

fof(kb_SUMO_10096,axiom,
    s__disjoint(s__Untying,s__Tying) ).

fof(kb_SUMO_10097,axiom,
    s__documentation(s__Untying,s__EnglishLanguage,'The &%Process of untying two things, or two strands of the same thing.') ).

fof(kb_SUMO_10098,axiom,
    s__subclass(s__Sewing,s__Attaching) ).

fof(kb_SUMO_10099,axiom,
    s__instance(s__Sewing__t,s__SetOrClass) ).

fof(kb_SUMO_10100,axiom,
    s__documentation(s__Sewing,s__EnglishLanguage,'Attaching two pieces of &%Fabric or one part of a piece of &%Fabric to another part by means of needle and thread.') ).

fof(kb_SUMO_10101,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Sewing)
       => ? [V__F] :
            ( s__instance(V__F,s__Fabric)
            & s__patient(V__S,V__F) ) ) ) ).

fof(kb_SUMO_10102,axiom,
    s__subclass(s__Soldering,s__Attaching) ).

fof(kb_SUMO_10103,axiom,
    s__instance(s__Soldering__t,s__SetOrClass) ).

fof(kb_SUMO_10104,axiom,
    s__documentation(s__Soldering,s__EnglishLanguage,'Attaching two things by means of a &%MetallicAlloy.') ).

fof(kb_SUMO_10105,axiom,
    ! [V__S,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__S,s__Process) )
     => ( ( s__instance(V__S,s__Soldering)
          & s__patient(V__S,V__OBJ1)
          & s__patient(V__S,V__OBJ2)
          & V__OBJ1 != V__OBJ2 )
       => ? [V__A] :
            ( s__instance(V__A,s__SelfConnectedObject)
            & s__instance(V__A,s__MetallicAlloy)
            & s__connects(V__A,V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_10106,axiom,
    s__instance(s__patientMedical__m,s__BinaryPredicate) ).

fof(kb_SUMO_10107,axiom,
    s__domain(s__patientMedical__m,"1",s__Human) ).

fof(kb_SUMO_10108,axiom,
    s__domain(s__patientMedical__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_10109,axiom,
    s__documentation(s__patientMedical__m,s__EnglishLanguage,'The relation of receiving medical care from a recognized medical practitioner. (&%patientMedical ?PATIENT ?DOCTOR) means that ?PATIENT is the patient of ?DOCTOR. Note that argument type restriction on the second argument is &%CognitiveAgent to allow for cases where someone is the patient of an &%Organization, viz. a &%CareOrganization.') ).

fof(kb_SUMO_10110,axiom,
    ! [V__DOCTOR,V__PATIENT] :
      ( ( s__instance(V__PATIENT,s__Human)
        & s__instance(V__DOCTOR,s__CognitiveAgent) )
     => ( s__patientMedical(V__PATIENT,V__DOCTOR)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__patient(V__PROCESS,V__PATIENT)
            & s__agent(V__PROCESS,V__DOCTOR)
            & ( s__instance(V__PROCESS,s__DiagnosticProcess)
              | s__instance(V__PROCESS,s__TherapeuticProcess) ) ) ) ) ).

fof(kb_SUMO_10111,axiom,
    s__subclass(s__Bandage,s__Fabric) ).

fof(kb_SUMO_10112,axiom,
    s__instance(s__Bandage__t,s__SetOrClass) ).

fof(kb_SUMO_10113,axiom,
    s__documentation(s__Bandage,s__EnglishLanguage,'A piece of &%Fabric that is used in &%Covering an open wound.') ).

fof(kb_SUMO_10114,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Bandage)
       => s__hasPurpose(V__B,'(? [V__TP,V__C] : (s__instance(V__C,s__Process) & s__instance(V__TP,s__Process) & s__instance(V__TP,s__TherapeuticProcess) & s__instance(V__C,s__Covering) & s__subProcess(V__C,V__TP) & s__instrument(V__C,V__B)))') ) ) ).

fof(kb_SUMO_10115,axiom,
    s__subclass(s__Massaging,s__TherapeuticProcess) ).

fof(kb_SUMO_10116,axiom,
    s__instance(s__Massaging__t,s__SetOrClass) ).

fof(kb_SUMO_10117,axiom,
    s__subclass(s__Massaging,s__Touching) ).

fof(kb_SUMO_10118,axiom,
    s__documentation(s__Massaging,s__EnglishLanguage,'A subclass of &%TherapeuticProcess which involves kneading &%Muscles in such a way that tension is relieved, blood circulation is increased, etc.') ).

fof(kb_SUMO_10119,axiom,
    s__subclass(s__RelievingPain,s__TherapeuticProcess) ).

fof(kb_SUMO_10120,axiom,
    s__instance(s__RelievingPain__t,s__SetOrClass) ).

fof(kb_SUMO_10121,axiom,
    s__documentation(s__RelievingPain,s__EnglishLanguage,'Any &%TherapeuticProcess that removes &%Pain from the patient of the process.') ).

%FOL fof(kb_SUMO_10122,axiom,(( (! [V__P,V__R] : ((s__instance(V__R,s__Process) & s__instance(V__P,s__Object)) => ((s__instance(V__R,s__RelievingPain) & s__patient(V__R,V__P)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__R)),'s__attribute(V__P,s__Pain)') & s__holdsDuring(s__EndFn(s__WhenFn(V__R)),'(~ s__attribute(V__P,s__Pain))'))))) ))).

fof(kb_SUMO_10123,axiom,
    s__subclass(s__NonspecificDisease,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10124,axiom,
    s__instance(s__NonspecificDisease__t,s__SetOrClass) ).

fof(kb_SUMO_10125,axiom,
    s__documentation(s__NonspecificDisease,s__EnglishLanguage,'The class of &%DiseaseOrSyndromes that are not caused by a single type of &%Microorganism.') ).

fof(kb_SUMO_10126,axiom,
    ! [V__DISEASE] :
      ( s__instance(V__DISEASE,s__NonspecificDisease)
     => ~ ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Physical)
            & s__instance(V__AGENT,s__Microorganism)
            & ! [V__VICTIM] :
                ( ( s__instance(V__VICTIM,s__Object)
                  & s__instance(V__DISEASE,s__Attribute) )
               => ( s__attribute(V__VICTIM,V__DISEASE)
                 => s__located(V__AGENT,V__VICTIM) ) ) ) ) ).

fof(kb_SUMO_10127,axiom,
    s__subclass(s__BacterialDisease,s__InfectiousDisease) ).

fof(kb_SUMO_10128,axiom,
    s__documentation(s__BacterialDisease,s__EnglishLanguage,'A disease that is caused by instances of &%Bacterium.') ).

fof(kb_SUMO_10129,axiom,
    s__subclass(s__InfectiousDisease,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10130,axiom,
    s__documentation(s__InfectiousDisease,s__EnglishLanguage,'Any &%DiseaseOrSyndrome that is caused by a &%Microorganism.') ).

fof(kb_SUMO_10131,axiom,
    ! [V__O,V__A,V__I] :
      ( ( s__instance(V__I,s__Attribute)
        & s__instance(V__A,s__Agent)
        & s__instance(V__O,s__Agent) )
     => ( ( s__instance(V__I,s__InfectiousDisease)
          & s__attribute(V__A,V__I) )
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__PathologicProcess)
            & s__agent(V__P,V__O)
            & s__instance(V__O,s__Microorganism)
            & s__experiencer(V__P,V__A) ) ) ) ).

fof(kb_SUMO_10132,axiom,
    s__subclass(s__TakingIll,s__PathologicProcess) ).

fof(kb_SUMO_10133,axiom,
    s__instance(s__TakingIll__t,s__SetOrClass) ).

fof(kb_SUMO_10134,axiom,
    s__documentation(s__TakingIll,s__EnglishLanguage,'Any &%Process where the experiencer contracts a &%DiseaseOrSyndrome.') ).

%FOL fof(kb_SUMO_10135,axiom,(( (! [V__A,V__T] : ((s__instance(V__T,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__T,s__TakingIll) & s__experiencer(V__T,V__A)) => (? [V__D] : (s__instance(V__D,s__Attribute) & s__instance(V__D,s__DiseaseOrSyndrome) & s__holdsDuring(s__BeginFn(s__WhenFn(V__T)),'(~ s__attribute(V__A,V__D))') & s__holdsDuring(s__EndFn(s__WhenFn(V__T)),'s__attribute(V__A,V__D)')))))) ))).

fof(kb_SUMO_10136,axiom,
    s__subclass(s__ViralDisease,s__InfectiousDisease) ).

fof(kb_SUMO_10137,axiom,
    s__instance(s__ViralDisease__t,s__SetOrClass) ).

fof(kb_SUMO_10138,axiom,
    s__instance(s__InfectiousDisease__t,s__SetOrClass) ).

fof(kb_SUMO_10139,axiom,
    s__documentation(s__ViralDisease,s__EnglishLanguage,'A disease that is caused by instances of &%Virus.') ).

fof(kb_SUMO_10140,axiom,
    s__instance(s__Diarrhea,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10141,axiom,
    s__documentation(s__Diarrhea,s__EnglishLanguage,'A &%DiseaseOrSyndrome of frequent, watery bowel movements. Severe cases can be fatal for the young or weak. It is a common cause of death for the very young in poor developing countries.') ).

fof(kb_SUMO_10142,axiom,
    s__instance(s__Emphysema,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10143,axiom,
    s__documentation(s__Emphysema,s__EnglishLanguage,'A &%DiseaseOrSyndrome that affects the &%Lungs and which results in a decrease of breathing ability.') ).

fof(kb_SUMO_10144,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__attribute(V__H,s__Emphysema)
       => ? [V__L,V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__L,s__Object)
            & s__instance(V__L,s__Lung)
            & s__part(V__L,V__H)
            & s__instance(V__P,s__PathologicProcess)
            & s__eventLocated(V__P,V__L) ) ) ) ).

fof(kb_SUMO_10145,axiom,
    s__instance(s__Fever,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10146,axiom,
    s__documentation(s__Fever,s__EnglishLanguage,'Having a body temperature which is (significantly) greater than 98.6 degrees Fahrenheit. This syndrome is often associated with dehydration and chills.') ).

fof(kb_SUMO_10147,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( ( s__instance(V__H,s__Human)
          & s__attribute(V__H,s__Fever) )
       => ? [V__N] :
            ( s__instance(V__N,s__RealNumber)
            & s__measure(V__H,s__MeasureFn(V__N,s__FahrenheitDegree))
            & greater(V__N,"98.6") ) ) ) ).

fof(kb_SUMO_10148,axiom,
    s__instance(s__Goiter,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10149,axiom,
    s__documentation(s__Goiter,s__EnglishLanguage,'A &%DiseaseOrSyndrome which is due to an &%Iodine deficiency and which results in an enlarged &%ThyroidGland.') ).

fof(kb_SUMO_10150,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__attribute(V__H,s__Goiter)
       => ? [V__G,V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__G,s__Object)
            & s__instance(V__G,s__ThyroidGland)
            & s__part(V__G,V__H)
            & s__instance(V__P,s__PathologicProcess)
            & s__eventLocated(V__P,V__G) ) ) ) ).

fof(kb_SUMO_10151,axiom,
    s__instance(s__Tuberculosis,s__BacterialDisease) ).

fof(kb_SUMO_10152,axiom,
    s__instance(s__BacterialDisease__t,s__SetOrClass) ).

fof(kb_SUMO_10153,axiom,
    s__documentation(s__Tuberculosis,s__EnglishLanguage,'A &%BacterialDisease caused by the &%Tubercle &%Bacillus that results in lesions on various body parts, especially the &%Lungs.') ).

fof(kb_SUMO_10154,axiom,
    s__subclass(s__RecoveringFromIllness,s__OrganismProcess) ).

fof(kb_SUMO_10155,axiom,
    s__instance(s__RecoveringFromIllness__t,s__SetOrClass) ).

fof(kb_SUMO_10156,axiom,
    s__documentation(s__RecoveringFromIllness,s__EnglishLanguage,'Any &%Process where the experiencer recovers from a &%DiseaseOrSyndrome.') ).

%FOL fof(kb_SUMO_10157,axiom,(( (! [V__A,V__R,V__T] : ((s__instance(V__T,s__Physical) & s__instance(V__R,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__R,s__RecoveringFromIllness) & s__experiencer(V__R,V__A)) => (? [V__D] : (s__instance(V__D,s__Attribute) & s__instance(V__D,s__DiseaseOrSyndrome) & s__holdsDuring(s__BeginFn(s__WhenFn(V__T)),'s__attribute(V__A,V__D)') & s__holdsDuring(s__EndFn(s__WhenFn(V__T)),'(~ s__attribute(V__A,V__D))')))))) ))).

fof(kb_SUMO_10158,axiom,
    s__subclass(s__Protozoa,s__Microorganism) ).

fof(kb_SUMO_10159,axiom,
    s__instance(s__Protozoa__t,s__SetOrClass) ).

fof(kb_SUMO_10160,axiom,
    s__documentation(s__Protozoa,s__EnglishLanguage,'Unicellular &%Organisms that are capable of movement and that are found in almost every part of the world. This class includes amoebas, sporozoans, and paramecia.') ).

fof(kb_SUMO_10161,axiom,
    s__documentation(s__parasite__m,s__EnglishLanguage,'(parasite ?ORGANISM1 ?ORGANISM2) means that there is a parasitic relationship between ?ORGANISM1 and ?ORGANISM2, i.e. ?ORGANISM1 inhabits and obtains nourishment from ?ORGANISM2 in such a way that ?ORGANISM2 is injured.') ).

fof(kb_SUMO_10162,axiom,
    s__instance(s__parasite__m,s__BinaryPredicate) ).

fof(kb_SUMO_10163,axiom,
    s__domain(s__parasite__m,"1",s__Organism) ).

fof(kb_SUMO_10164,axiom,
    s__domain(s__parasite__m,"2",s__Organism) ).

fof(kb_SUMO_10165,axiom,
    ! [V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Organism)
        & s__instance(V__O2,s__Organism) )
     => ( s__parasite(V__O1,V__O2)
       => s__inhabits(V__O1,V__O2) ) ) ).

fof(kb_SUMO_10166,axiom,
    ! [V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Organism)
        & s__instance(V__O2,s__Organism) )
     => ( s__parasite(V__O1,V__O2)
       => ? [V__I] :
            ( s__instance(V__I,s__Process)
            & s__instance(V__I,s__Injuring)
            & s__agent(V__I,V__O1)
            & s__patient(V__I,V__O2) ) ) ) ).

fof(kb_SUMO_10167,axiom,
    s__instance(s__Cancer,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_10168,axiom,
    s__documentation(s__Cancer,s__EnglishLanguage,'A &%DiseaseOrSyndrome characterized by pathologic and uncontrolled cell division that results in a &%Tumor.') ).

fof(kb_SUMO_10169,axiom,
    ! [V__PERSON] :
      ( s__instance(V__PERSON,s__Object)
     => ( s__attribute(V__PERSON,s__Cancer)
       => ? [V__TUMOR] :
            ( s__instance(V__TUMOR,s__Object)
            & s__instance(V__TUMOR,s__Tumor)
            & s__part(V__TUMOR,V__PERSON) ) ) ) ).

fof(kb_SUMO_10170,axiom,
    s__subclass(s__Neurosis,s__PsychologicalDysfunction) ).

fof(kb_SUMO_10171,axiom,
    s__instance(s__Neurosis__t,s__SetOrClass) ).

fof(kb_SUMO_10172,axiom,
    s__documentation(s__Neurosis,s__EnglishLanguage,'Any &%PsychologicalDysfunction which is not due to an organic impairment of the &%NervousSystem.') ).

fof(kb_SUMO_10173,axiom,
    s__subclass(s__Psychosis,s__PsychologicalDysfunction) ).

fof(kb_SUMO_10174,axiom,
    s__instance(s__Psychosis__t,s__SetOrClass) ).

fof(kb_SUMO_10175,axiom,
    s__documentation(s__Psychosis,s__EnglishLanguage,'Any &%PsychologicalDysfunction which is the result of an organic impairment of the &%NervousSystem.') ).

fof(kb_SUMO_10176,axiom,
    s__subclass(s__Atrophy,s__PathologicProcess) ).

fof(kb_SUMO_10177,axiom,
    s__subclass(s__Atrophy,s__Decreasing) ).

fof(kb_SUMO_10178,axiom,
    s__instance(s__Atrophy__t,s__SetOrClass) ).

fof(kb_SUMO_10179,axiom,
    s__documentation(s__Atrophy,s__EnglishLanguage,'Any decrease in the size of a &%BodyPart which is due to disease or lack of use.') ).

fof(kb_SUMO_10180,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Process)
     => ( s__instance(V__A,s__Atrophy)
       => ? [V__B] :
            ( s__instance(V__B,s__Agent)
            & s__experiencer(V__A,V__B)
            & s__instance(V__B,s__BodyPart) ) ) ) ).

fof(kb_SUMO_10181,axiom,
    s__subclass(s__Bloating,s__Increasing) ).

fof(kb_SUMO_10182,axiom,
    s__subclass(s__Bloating,s__PathologicProcess) ).

fof(kb_SUMO_10183,axiom,
    s__instance(s__Bloating__t,s__SetOrClass) ).

fof(kb_SUMO_10184,axiom,
    s__documentation(s__Bloating,s__EnglishLanguage,'Any &%Process where the stomach or instestines of a &%Human or &%Animal become distended from excessive gas.') ).

fof(kb_SUMO_10185,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Process)
     => ( s__instance(V__B,s__Bloating)
       => ? [V__P,V__S,V__I,V__G] :
            ( s__instance(V__G,s__Object)
            & s__instance(V__I,s__SelfConnectedObject)
            & s__instance(V__S,s__SelfConnectedObject)
            & s__instance(V__P,s__Agent)
            & s__experiencer(V__B,V__P)
            & s__instance(V__G,s__Gas)
            & ( ( s__part(V__I,V__P)
                & s__instance(V__I,s__Intestine)
                & s__contains(V__I,V__G) )
              | ( s__part(V__S,V__P)
                & s__instance(V__S,s__Stomach)
                & s__contains(V__S,V__G) ) ) ) ) ) ).

fof(kb_SUMO_10186,axiom,
    s__subclass(s__ConjugatedSubstance,s__CompoundSubstance) ).

fof(kb_SUMO_10187,axiom,
    s__instance(s__ConjugatedSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_10188,axiom,
    s__documentation(s__ConjugatedSubstance,s__EnglishLanguage,'A &%CompoundSubstance that results from the &%ChemicalSynthesis of two or more &%CompoundSubstances.') ).

fof(kb_SUMO_10189,axiom,
    ! [V__CS] :
      ( s__instance(V__CS,s__ConjugatedSubstance)
    <=> ? [V__C1,V__C2,V__P] :
          ( s__instance(V__P,s__Process)
          & s__instance(V__C2,s__Object)
          & s__instance(V__C1,s__Object)
          & s__instance(V__C1,s__CompoundSubstance)
          & s__instance(V__C2,s__CompoundSubstance)
          & V__C1 != V__C2
          & s__instance(V__P,s__ChemicalSynthesis)
          & s__resource(V__P,V__C1)
          & s__resource(V__P,V__C2)
          & s__result(V__P,V__CS) ) ) ).

fof(kb_SUMO_10190,axiom,
    s__instance(s__conjugate__m,s__BinaryPredicate) ).

fof(kb_SUMO_10191,axiom,
    s__instance(s__conjugate__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_10192,axiom,
    s__instance(s__conjugate__m,s__SymmetricRelation) ).

fof(kb_SUMO_10193,axiom,
    s__instance(s__conjugate__m,s__TransitiveRelation) ).

fof(kb_SUMO_10194,axiom,
    s__domain(s__conjugate__m,"1",s__CompoundSubstance) ).

fof(kb_SUMO_10195,axiom,
    s__domain(s__conjugate__m,"2",s__CompoundSubstance) ).

fof(kb_SUMO_10196,axiom,
    s__documentation(s__conjugate__m,s__EnglishLanguage,'(&%conjugate ?COMPOUND1 ?COMPOUND2) means that ?COMPOUND1 and ?COMPOUND2 are identical &%CompoundSubstances except that one has one more &%Proton than the other.') ).

fof(kb_SUMO_10197,axiom,
    ! [V__COMPOUND1,V__COMPOUND2] :
      ( ( s__instance(V__COMPOUND2,s__CompoundSubstance)
        & s__instance(V__COMPOUND1,s__CompoundSubstance) )
     => ( s__conjugate(V__COMPOUND1,V__COMPOUND2)
       => ? [V__NUMBER1,V__NUMBER2] :
            ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__protonNumber(V__COMPOUND1,V__NUMBER1)
            & s__protonNumber(V__COMPOUND2,V__NUMBER2)
            & ( V__NUMBER1 = plus(V__NUMBER2,"1")
              | V__NUMBER2 = plus(V__NUMBER1,"1") ) ) ) ) ).

fof(kb_SUMO_10198,axiom,
    s__subclass(s__Biting,s__Grabbing) ).

fof(kb_SUMO_10199,axiom,
    s__instance(s__Biting__t,s__SetOrClass) ).

fof(kb_SUMO_10200,axiom,
    s__documentation(s__Biting,s__EnglishLanguage,'Any instance of &%Grabbing where the &%instrument is the &%Mouth of the &%agent.') ).

fof(kb_SUMO_10201,axiom,
    ! [V__BITE,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Agent)
        & s__instance(V__BITE,s__Process) )
     => ( ( s__instance(V__BITE,s__Biting)
          & s__agent(V__BITE,V__ANIMAL) )
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__part(V__MOUTH,V__ANIMAL)
            & s__instrument(V__BITE,V__MOUTH) ) ) ) ).

fof(kb_SUMO_10202,axiom,
    s__subclass(s__Strangling,s__Grabbing) ).

fof(kb_SUMO_10203,axiom,
    s__instance(s__Strangling__t,s__SetOrClass) ).

fof(kb_SUMO_10204,axiom,
    s__documentation(s__Strangling,s__EnglishLanguage,'Any instance of &%Grabbing where the patient is someone elses throat and the intention is to make it impossible for the other person to breathe.') ).

fof(kb_SUMO_10205,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Strangling)
       => ? [V__T] :
            ( s__patient(V__S,V__T)
            & s__instance(V__T,s__Throat) ) ) ) ).

fof(kb_SUMO_10206,axiom,
    ! [V__A,V__S,V__V] :
      ( ( s__instance(V__V,s__Agent)
        & s__instance(V__S,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__S,s__Strangling)
          & s__agent(V__S,V__A)
          & s__patient(V__S,V__V)
          & s__instance(V__V,s__Human) )
       => s__hasPurpose(V__S,'(~ (? [V__B] : (s__instance(V__B,s__Process) & s__instance(V__B,s__Breathing) & s__agent(V__B,V__V))))') ) ) ).

fof(kb_SUMO_10207,axiom,
    s__subclass(s__Spitting,s__Impelling) ).

fof(kb_SUMO_10208,axiom,
    s__instance(s__Spitting__t,s__SetOrClass) ).

fof(kb_SUMO_10209,axiom,
    s__documentation(s__Spitting,s__EnglishLanguage,'Any instance of &%Impelling where the &%origin is the &%Mouth of the &%agent.') ).

fof(kb_SUMO_10210,axiom,
    ! [V__SPIT,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Agent)
        & s__instance(V__SPIT,s__Process) )
     => ( ( s__instance(V__SPIT,s__Spitting)
          & s__agent(V__SPIT,V__ANIMAL) )
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__part(V__MOUTH,V__ANIMAL)
            & s__origin(V__SPIT,V__MOUTH) ) ) ) ).

fof(kb_SUMO_10211,axiom,
    s__subclass(s__Punching,s__Impelling) ).

fof(kb_SUMO_10212,axiom,
    s__instance(s__Punching__t,s__SetOrClass) ).

fof(kb_SUMO_10213,axiom,
    s__documentation(s__Punching,s__EnglishLanguage,'Any instance of &%Impelling where the instrument is a &%Fist of the agent.') ).

fof(kb_SUMO_10214,axiom,
    ! [V__P,V__A] :
      ( ( s__instance(V__A,s__Agent)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__P,s__Punching)
          & s__agent(V__P,V__A) )
       => ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__H,s__Hand)
            & s__attribute(V__H,s__Fist)
            & s__part(V__H,V__A)
            & s__instrument(V__P,V__H) ) ) ) ).

fof(kb_SUMO_10215,axiom,
    s__subclass(s__Kicking,s__Impelling) ).

fof(kb_SUMO_10216,axiom,
    s__instance(s__Kicking__t,s__SetOrClass) ).

fof(kb_SUMO_10217,axiom,
    s__documentation(s__Kicking,s__EnglishLanguage,'Any instance of &%Impelling where the &%instrument is a &%Foot of the &%agent.') ).

fof(kb_SUMO_10218,axiom,
    ! [V__ANIMAL,V__KICK] :
      ( ( s__instance(V__KICK,s__Process)
        & s__instance(V__ANIMAL,s__Agent) )
     => ( ( s__instance(V__KICK,s__Kicking)
          & s__agent(V__KICK,V__ANIMAL) )
       => ? [V__FOOT] :
            ( s__instance(V__FOOT,s__Object)
            & s__instance(V__FOOT,s__Foot)
            & s__part(V__FOOT,V__ANIMAL)
            & s__instrument(V__KICK,V__FOOT) ) ) ) ).

fof(kb_SUMO_10219,axiom,
    s__subclass(s__Mailing,s__Transfer) ).

fof(kb_SUMO_10220,axiom,
    s__instance(s__Mailing__t,s__SetOrClass) ).

fof(kb_SUMO_10221,axiom,
    s__documentation(s__Mailing,s__EnglishLanguage,'Any instance of &%Transfer where a postal system is used to move the &%patient, either a letter or a package.') ).

fof(kb_SUMO_10222,axiom,
    s__subclass(s__Messaging,s__Transfer) ).

fof(kb_SUMO_10223,axiom,
    s__instance(s__Messaging__t,s__SetOrClass) ).

fof(kb_SUMO_10224,axiom,
    s__documentation(s__Messaging,s__EnglishLanguage,'Any instance of &%Transfer where a &%Message is the patient.') ).

fof(kb_SUMO_10225,axiom,
    ! [V__MESSAGING] :
      ( s__instance(V__MESSAGING,s__Process)
     => ( s__instance(V__MESSAGING,s__Messaging)
       => ? [V__M] :
            ( s__instance(V__M,s__Message)
            & s__patient(V__MESSAGING,V__M) ) ) ) ).

fof(kb_SUMO_10226,axiom,
    s__instance(s__neighbor__m,s__BinaryPredicate) ).

fof(kb_SUMO_10227,axiom,
    s__instance(s__neighbor__m,s__SymmetricRelation) ).

fof(kb_SUMO_10228,axiom,
    s__instance(s__neighbor__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_10229,axiom,
    s__domain(s__neighbor__m,"1",s__Human) ).

fof(kb_SUMO_10230,axiom,
    s__domain(s__neighbor__m,"2",s__Human) ).

fof(kb_SUMO_10231,axiom,
    s__documentation(s__neighbor__m,s__EnglishLanguage,'(&%neighbor ?PERSON1 ?PERSON2) means that ?PERSON1 is a neighbor of ?PERSON2, i.e. ?PERSON1 and ?PERSON2 have their &%homes &%Near one another.') ).

fof(kb_SUMO_10232,axiom,
    ! [V__PERSON2,V__PERSON1] :
      ( ( s__instance(V__PERSON1,s__Human)
        & s__instance(V__PERSON2,s__Human) )
     => ( s__neighbor(V__PERSON1,V__PERSON2)
       => ? [V__HOME1,V__HOME2] :
            ( s__instance(V__HOME2,s__PermanentResidence)
            & s__instance(V__HOME1,s__PermanentResidence)
            & s__home(V__PERSON1,V__HOME1)
            & s__home(V__PERSON2,V__HOME2)
            & V__HOME1 != V__HOME2
            & s__orientation(V__HOME1,V__HOME2,s__Near) ) ) ) ).

fof(kb_SUMO_10233,axiom,
    s__instance(s__capacity__m,s__BinaryPredicate) ).

fof(kb_SUMO_10234,axiom,
    s__domain(s__capacity__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_10235,axiom,
    s__domain(s__capacity__m,"2",s__ConstantQuantity) ).

fof(kb_SUMO_10236,axiom,
    s__relatedInternalConcept(s__capacity__m,s__humanCapacity__m) ).

fof(kb_SUMO_10237,axiom,
    s__documentation(s__capacity__m,s__EnglishLanguage,'(&%capacity ?OBJ ?QUANTITY) means that ?OBJ can contain something that has the &%measure of ?QUANTITY. This predicate denotes maximal capacity, i.e. ?OBJ can hold no more than ?QUANTITY. Note, however, that this does not mean that &%capacity is a &%SingleValuedRelation, since an object may have various maximal capacities across different dimensions, e.g. a particular box may have a &%capacity of 3 pounds and a &%capacity of 1 liter.') ).

fof(kb_SUMO_10238,axiom,
    ! [V__MEAS,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__MEAS,s__ConstantQuantity) )
     => ( ( s__measure(V__OBJ1,V__MEAS)
          & s__contains(V__OBJ2,V__OBJ1) )
       => s__capacity(V__OBJ2,V__MEAS) ) ) ).

fof(kb_SUMO_10239,axiom,
    s__instance(s__humanCapacity__m,s__BinaryPredicate) ).

fof(kb_SUMO_10240,axiom,
    s__instance(s__humanCapacity__m,s__SingleValuedRelation) ).

fof(kb_SUMO_10241,axiom,
    s__domain(s__humanCapacity__m,"1",s__StationaryArtifact) ).

fof(kb_SUMO_10242,axiom,
    s__domain(s__humanCapacity__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_10243,axiom,
    s__documentation(s__humanCapacity__m,s__EnglishLanguage,'(&%humanCapacity ?CONSTRUCT ?NUMBER) means that the &%StationaryArtifact ?CONSTRUCT, e.g. a &%Building or a &%Room, can hold a maximum of ?NUMBER &%Humans without crowding.') ).

fof(kb_SUMO_10244,axiom,
    s__instance(s__LastFn__m,s__UnaryFunction) ).

fof(kb_SUMO_10245,axiom,
    s__domain(s__LastFn__m,"1",s__List) ).

fof(kb_SUMO_10246,axiom,
    s__range(s__LastFn__m,s__Entity) ).

fof(kb_SUMO_10247,axiom,
    s__documentation(s__LastFn__m,s__EnglishLanguage,'(&%LastFn ?LIST) returns the last item in the &%List ?LIST. For example, (&%LastFn (&%ListFn &%Monday &%Tuesday &%Wednesday)) would return the value of &%Wednesday.') ).

fof(kb_SUMO_10248,axiom,
    ! [V__ITEM,V__LIST] :
      ( s__instance(V__LIST,s__List)
     => ( s__LastFn(V__LIST) = V__ITEM
      <=> ? [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
            & s__ListLengthFn(V__LIST) = V__NUMBER
            & s__ListOrderFn(V__LIST,V__NUMBER) = V__ITEM ) ) ) ).

fof(kb_SUMO_10249,axiom,
    s__instance(s__FirstFn__m,s__UnaryFunction) ).

fof(kb_SUMO_10250,axiom,
    s__domain(s__FirstFn__m,"1",s__List) ).

fof(kb_SUMO_10251,axiom,
    s__range(s__FirstFn__m,s__Entity) ).

fof(kb_SUMO_10252,axiom,
    s__documentation(s__FirstFn__m,s__EnglishLanguage,'(&%FirstFn ?LIST) returns the first item in the &%List ?LIST. For example, (&%FirstFn (&%ListFn &%Monday &%Tuesday &%Wednesday)) would return the value of &%Monday.') ).

fof(kb_SUMO_10253,axiom,
    ! [V__LIST] :
      ( ( s__instance(V__LIST,s__List)
        & V__LIST != s__NullList__m )
     => s__FirstFn(V__LIST) = s__ListOrderFn(V__LIST,"1") ) ).

fof(kb_SUMO_10254,axiom,
    s__instance(s__StreetAddressFn__m,s__QuaternaryFunction) ).

fof(kb_SUMO_10255,axiom,
    s__domain(s__StreetAddressFn__m,"1",s__StationaryArtifact) ).

fof(kb_SUMO_10256,axiom,
    s__domain(s__StreetAddressFn__m,"2",s__Roadway) ).

fof(kb_SUMO_10257,axiom,
    s__domain(s__StreetAddressFn__m,"3",s__City) ).

fof(kb_SUMO_10258,axiom,
    s__domain(s__StreetAddressFn__m,"4",s__Nation) ).

fof(kb_SUMO_10259,axiom,
    s__range(s__StreetAddressFn__m,s__Agent) ).

fof(kb_SUMO_10260,axiom,
    s__documentation(s__StreetAddressFn__m,s__EnglishLanguage,'(&%StreetAddressFn ?BUILDING ?ROAD ?CITY ?COUNTRY) returns the &%Agent, e.g. a family, an organization, a person, etc. that resides or conducts business at the corresponding &%postContactSite.') ).

fof(kb_SUMO_10261,axiom,
    ! [V__CITY,V__PLACE,V__ROAD,V__AGENT,V__COUNTRY] :
      ( ( s__instance(V__COUNTRY,s__Nation)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__ROAD,s__Roadway)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__CITY,s__City) )
     => ( s__StreetAddressFn(V__PLACE,V__ROAD,V__CITY,V__COUNTRY) = V__AGENT
       => s__postContactSite(V__PLACE,V__AGENT) ) ) ).

fof(kb_SUMO_10262,axiom,
    ! [V__CITY,V__PLACE,V__ROAD,V__AGENT,V__COUNTRY] :
      ( ( s__instance(V__COUNTRY,s__Nation)
        & s__instance(V__ROAD,s__Roadway)
        & s__instance(V__PLACE,s__StationaryArtifact)
        & s__instance(V__CITY,s__City) )
     => ( s__StreetAddressFn(V__PLACE,V__ROAD,V__CITY,V__COUNTRY) = V__AGENT
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__PLACE,V__BUILDING) ) ) ) ).

fof(kb_SUMO_10263,axiom,
    s__subclass(s__ArtStudio,s__Workshop) ).

fof(kb_SUMO_10264,axiom,
    s__instance(s__ArtStudio__t,s__SetOrClass) ).

fof(kb_SUMO_10265,axiom,
    s__documentation(s__ArtStudio,s__EnglishLanguage,'A &%Workshop, which is devoted to the creation of &%ArtWorks.') ).

fof(kb_SUMO_10266,axiom,
    ! [V__STUDIO] :
      ( s__instance(V__STUDIO,s__Physical)
     => ( s__instance(V__STUDIO,s__ArtStudio)
       => s__hasPurpose(V__STUDIO,'(? [V__MAKE,V__WORK] : (s__instance(V__MAKE,s__Process) & s__instance(V__MAKE,s__Making) & s__result(V__MAKE,V__WORK) & s__instance(V__WORK,s__ArtWork)))') ) ) ).

fof(kb_SUMO_10267,axiom,
    s__subclass(s__Mine,s__StationaryArtifact) ).

fof(kb_SUMO_10268,axiom,
    s__instance(s__Mine__t,s__SetOrClass) ).

fof(kb_SUMO_10269,axiom,
    s__documentation(s__Mine,s__EnglishLanguage,'An construction in the earth from which &%Minerals are removed, either in pure form or as part of ores.') ).

fof(kb_SUMO_10270,axiom,
    ! [V__MINE] :
      ( s__instance(V__MINE,s__Object)
     => ( s__instance(V__MINE,s__Mine)
       => s__hasPurpose(V__MINE,'(? [V__REMOVE,V__MINERAL] : (s__instance(V__REMOVE,s__Process) & s__instance(V__REMOVE,s__Removing) & s__patient(V__REMOVE,V__MINERAL) & s__instance(V__MINERAL,s__Mineral) & s__origin(V__REMOVE,V__MINE)))') ) ) ).

fof(kb_SUMO_10271,axiom,
    s__subclass(s__MobileResidence,s__Artifact) ).

fof(kb_SUMO_10272,axiom,
    s__disjoint(s__MobileResidence,s__Residence) ).

fof(kb_SUMO_10273,axiom,
    s__documentation(s__MobileResidence,s__EnglishLanguage,'Anything which serves to house people but which changes its location from time to time, e.g. a motorhome, a mobile home, a camp, etc. Note that &%MobileResidence is disjoint from &%Residence, because the latter is a subclass of &%StationaryArtifact.') ).

fof(kb_SUMO_10274,axiom,
    s__subclass(s__Prison,s__StationaryArtifact) ).

fof(kb_SUMO_10275,axiom,
    s__instance(s__Prison__t,s__SetOrClass) ).

fof(kb_SUMO_10276,axiom,
    s__documentation(s__Prison,s__EnglishLanguage,'An installation which is owned and maintained by a &%Government for the purpose of &%Confining people. This class covers jails, federal prisons, concentration camps, gulags, etc.') ).

fof(kb_SUMO_10277,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__Prison)
       => s__hasPurpose(V__P,'(? [V__C,V__H,V__G] : (s__instance(V__G,s__Agent) & s__instance(V__C,s__Process) & s__instance(V__C,s__Confining) & s__eventLocated(V__C,V__P) & s__patient(V__C,V__H) & s__instance(V__H,s__Human) & s__agent(V__C,V__G) & s__instance(V__G,s__Government)))') ) ) ).

fof(kb_SUMO_10278,axiom,
    s__documentation(s__detainee__m,s__EnglishLanguage,'(detainee ?EVENT ?OBJECT) means that in the Confining ?EVENT, the Object ?OBJECT is restrained by force, threat, or other form of intimidation.') ).

fof(kb_SUMO_10279,axiom,
    s__instance(s__detainee__m,s__CaseRole) ).

fof(kb_SUMO_10280,axiom,
    s__domain(s__detainee__m,"1",s__Confining) ).

fof(kb_SUMO_10281,axiom,
    s__domain(s__detainee__m,"2",s__Animal) ).

fof(kb_SUMO_10282,axiom,
    s__subrelation(s__detainee__m,s__patient__m) ).

fof(kb_SUMO_10283,axiom,
    s__instance(s__targetInAttack__m,s__BinaryPredicate) ).

fof(kb_SUMO_10284,axiom,
    s__instance(s__targetInAttack__m,s__CaseRole) ).

fof(kb_SUMO_10285,axiom,
    s__domain(s__targetInAttack__m,"1",s__Process) ).

fof(kb_SUMO_10286,axiom,
    s__domain(s__targetInAttack__m,"2",s__Object) ).

fof(kb_SUMO_10287,axiom,
    s__subrelation(s__targetInAttack__m,s__patient__m) ).

fof(kb_SUMO_10288,axiom,
    s__documentation(s__targetInAttack__m,s__EnglishLanguage,'This relation identifies the &%patient in the event that is the object of the attack.') ).

fof(kb_SUMO_10289,axiom,
    s__subclass(s__VotingPoll,s__StationaryArtifact) ).

fof(kb_SUMO_10290,axiom,
    s__instance(s__VotingPoll__t,s__SetOrClass) ).

fof(kb_SUMO_10291,axiom,
    s__documentation(s__VotingPoll,s__EnglishLanguage,'A structure where Voting for an &%Election takes place.') ).

fof(kb_SUMO_10292,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__VotingPoll)
       => ? [V__V] :
            ( s__instance(V__V,s__Process)
            & s__instance(V__V,s__Voting)
            & s__eventLocated(V__V,V__P) ) ) ) ).

fof(kb_SUMO_10293,axiom,
    s__subclass(s__Camp,s__MobileResidence) ).

fof(kb_SUMO_10294,axiom,
    s__instance(s__Camp__t,s__SetOrClass) ).

fof(kb_SUMO_10295,axiom,
    s__documentation(s__Camp,s__EnglishLanguage,'A &%MobileResidence consisting of tents and other temporary living quarters that is constructed on an undeveloped &%LandArea.') ).

fof(kb_SUMO_10296,axiom,
    ! [V__CAMP] :
      ( s__instance(V__CAMP,s__Object)
     => ( s__instance(V__CAMP,s__Camp)
       => ? [V__TENT] :
            ( s__instance(V__TENT,s__Object)
            & s__instance(V__TENT,s__Tent)
            & s__part(V__TENT,V__CAMP) ) ) ) ).

fof(kb_SUMO_10297,axiom,
    s__subclass(s__Tent,s__MobileResidence) ).

fof(kb_SUMO_10298,axiom,
    s__instance(s__Tent__t,s__SetOrClass) ).

fof(kb_SUMO_10299,axiom,
    s__instance(s__MobileResidence__t,s__SetOrClass) ).

fof(kb_SUMO_10300,axiom,
    s__documentation(s__Tent,s__EnglishLanguage,'A &%MobileResidence that is made of &%Fabric and poles and can be easily assembled and disassembled.') ).

fof(kb_SUMO_10301,axiom,
    ! [V__TENT] :
      ( s__instance(V__TENT,s__Object)
     => ( s__instance(V__TENT,s__Tent)
       => ? [V__FABRIC] :
            ( s__instance(V__FABRIC,s__Object)
            & s__instance(V__FABRIC,s__Fabric)
            & s__part(V__FABRIC,V__TENT) ) ) ) ).

fof(kb_SUMO_10302,axiom,
    s__subclass(s__Monument,s__StationaryArtifact) ).

fof(kb_SUMO_10303,axiom,
    s__instance(s__Monument__t,s__SetOrClass) ).

fof(kb_SUMO_10304,axiom,
    s__documentation(s__Monument,s__EnglishLanguage,'A &%StationaryArtifact whose purpose is to commemorate a person, animal or event.') ).

fof(kb_SUMO_10305,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Monument)
       => s__hasPurpose(V__M,'(? [V__R] : (s__instance(V__R,s__Process) & s__instance(V__R,s__Remembering) & s__instrument(V__R,V__M)))') ) ) ).

fof(kb_SUMO_10306,axiom,
    s__subclass(s__Tomb,s__StationaryArtifact) ).

fof(kb_SUMO_10307,axiom,
    s__instance(s__Tomb__t,s__SetOrClass) ).

fof(kb_SUMO_10308,axiom,
    s__documentation(s__Tomb,s__EnglishLanguage,'A &%StationaryArtifact which is meant to contain someone who is &%Dead.') ).

fof(kb_SUMO_10309,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__SelfConnectedObject)
     => ( s__instance(V__T,s__Tomb)
       => s__hasPurpose(V__T,'(? [V__P] : (s__instance(V__P,s__Object) & s__attribute(V__P,s__Dead) & s__contains(V__T,V__P)))') ) ) ).

fof(kb_SUMO_10310,axiom,
    s__subclass(s__Workshop,s__StationaryArtifact) ).

fof(kb_SUMO_10311,axiom,
    s__instance(s__Workshop__t,s__SetOrClass) ).

fof(kb_SUMO_10312,axiom,
    s__documentation(s__Workshop,s__EnglishLanguage,'A &%Room, suite of &%Rooms or &%Building which is devoted to hand-crafting &%Artifacts.') ).

fof(kb_SUMO_10313,axiom,
    ! [V__S,V__W] :
      ( s__instance(V__S,s__Physical)
     => ( s__instance(V__S,s__Workshop)
       => s__hasPurpose(V__S,'(? [V__M] : (s__instance(V__M,s__Process) & s__instance(V__M,s__Making) & s__result(V__M,V__W) & s__instance(V__W,s__Artifact)))') ) ) ).

fof(kb_SUMO_10314,axiom,
    s__subclass(s__ApartmentUnit,s__SingleFamilyResidence) ).

fof(kb_SUMO_10315,axiom,
    s__instance(s__ApartmentUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10316,axiom,
    s__documentation(s__ApartmentUnit,s__EnglishLanguage,'A &%SingleFamilyResidence that is not owned by any member of the &%SocialUnit that lives there.') ).

fof(kb_SUMO_10317,axiom,
    ! [V__PERSON,V__UNIT] :
      ( ( s__instance(V__UNIT,s__PermanentResidence)
        & s__instance(V__PERSON,s__Human) )
     => ( ( s__instance(V__UNIT,s__ApartmentUnit)
          & s__home(V__PERSON,V__UNIT) )
       => ~ s__possesses(V__PERSON,V__UNIT) ) ) ).

fof(kb_SUMO_10318,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__Object)
     => ( s__instance(V__UNIT,s__ApartmentUnit)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__ApartmentBuilding)
            & s__part(V__UNIT,V__BUILDING) ) ) ) ).

fof(kb_SUMO_10319,axiom,
    s__documentation(s__landlord__m,s__EnglishLanguage,'(landlord ?PERSON ?UNIT) means that ?PERSON is a landlord of the &%Residence ?UNIT, i.e. he or she owns ?UNIT and is renting the unit to someone else.') ).

fof(kb_SUMO_10320,axiom,
    s__instance(s__landlord__m,s__BinaryPredicate) ).

fof(kb_SUMO_10321,axiom,
    s__domain(s__landlord__m,"1",s__Agent) ).

fof(kb_SUMO_10322,axiom,
    s__domain(s__landlord__m,"2",s__PermanentResidence) ).

fof(kb_SUMO_10323,axiom,
    ! [V__U,V__L] :
      ( ( s__instance(V__L,s__Agent)
        & s__instance(V__U,s__PermanentResidence) )
     => ( s__landlord(V__L,V__U)
       => ? [V__R,V__P] :
            ( s__instance(V__P,s__Agent)
            & s__instance(V__R,s__Process)
            & s__possesses(V__L,V__U)
            & s__tenant(V__P,V__U)
            & s__agent(V__R,V__P)
            & s__instance(V__R,s__Renting)
            & s__patient(V__R,V__U) ) ) ) ).

fof(kb_SUMO_10324,axiom,
    s__documentation(s__tenant__m,s__EnglishLanguage,'(tenant ?PERSON ?UNIT) means that ?PERSON is a tenant of the &%Residence ?UNIT, i.e. he or she is renting the unit.') ).

fof(kb_SUMO_10325,axiom,
    s__instance(s__tenant__m,s__BinaryPredicate) ).

fof(kb_SUMO_10326,axiom,
    s__domain(s__tenant__m,"1",s__Agent) ).

fof(kb_SUMO_10327,axiom,
    s__domain(s__tenant__m,"2",s__Residence) ).

fof(kb_SUMO_10328,axiom,
    ! [V__P,V__U] :
      ( ( s__instance(V__U,s__PermanentResidence)
        & s__instance(V__P,s__Agent) )
     => ( s__tenant(V__P,V__U)
       => ? [V__L,V__R] :
            ( s__instance(V__R,s__Process)
            & s__instance(V__L,s__Agent)
            & s__instance(V__R,s__Renting)
            & s__landlord(V__L,V__U)
            & s__agent(V__R,V__P)
            & s__possesses(V__L,V__U)
            & s__patient(V__R,V__U) ) ) ) ).

fof(kb_SUMO_10329,axiom,
    s__subclass(s__CondominiumUnit,s__SingleFamilyResidence) ).

fof(kb_SUMO_10330,axiom,
    s__instance(s__CondominiumUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10331,axiom,
    s__documentation(s__CondominiumUnit,s__EnglishLanguage,'A &%SingleFamilyResidence that may be owned by a member of the &%SocialUnit that lives there.') ).

fof(kb_SUMO_10332,axiom,
    ! [V__PERSON,V__UNIT] :
      ( ( s__instance(V__UNIT,s__PermanentResidence)
        & s__instance(V__PERSON,s__Human) )
     => ( ( s__instance(V__UNIT,s__SingleFamilyResidence)
          & s__home(V__PERSON,V__UNIT)
          & s__possesses(V__PERSON,V__UNIT)
          & ~ s__instance(V__UNIT,s__Building) )
       => s__instance(V__UNIT,s__CondominiumUnit) ) ) ).

fof(kb_SUMO_10333,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__Object)
     => ( s__instance(V__UNIT,s__CondominiumUnit)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__CondominiumBuilding)
            & s__part(V__UNIT,V__BUILDING) ) ) ) ).

fof(kb_SUMO_10334,axiom,
    s__subclass(s__ApartmentBuilding,s__ResidentialBuilding) ).

fof(kb_SUMO_10335,axiom,
    s__instance(s__ApartmentBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10336,axiom,
    s__disjoint(s__ApartmentBuilding,s__SingleFamilyResidence) ).

fof(kb_SUMO_10337,axiom,
    s__documentation(s__ApartmentBuilding,s__EnglishLanguage,'A &%ResidentialBuilding containing &%ApartmentUnits.') ).

fof(kb_SUMO_10338,axiom,
    ! [V__BUILDING] :
      ( s__instance(V__BUILDING,s__Object)
     => ( s__instance(V__BUILDING,s__ApartmentBuilding)
       => ? [V__UNIT1,V__UNIT2] :
            ( s__instance(V__UNIT2,s__Object)
            & s__instance(V__UNIT1,s__Object)
            & s__instance(V__UNIT1,s__ApartmentUnit)
            & s__instance(V__UNIT2,s__ApartmentUnit)
            & s__part(V__UNIT1,V__BUILDING)
            & s__part(V__UNIT2,V__BUILDING)
            & V__UNIT1 != V__UNIT2 ) ) ) ).

fof(kb_SUMO_10339,axiom,
    s__subclass(s__CondominiumBuilding,s__ResidentialBuilding) ).

fof(kb_SUMO_10340,axiom,
    s__instance(s__CondominiumBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10341,axiom,
    s__disjoint(s__CondominiumBuilding,s__SingleFamilyResidence) ).

fof(kb_SUMO_10342,axiom,
    s__documentation(s__CondominiumBuilding,s__EnglishLanguage,'A &%ResidentialBuilding containing &%CondominiumUnits.') ).

fof(kb_SUMO_10343,axiom,
    ! [V__BUILDING] :
      ( s__instance(V__BUILDING,s__Object)
     => ( s__instance(V__BUILDING,s__CondominiumBuilding)
       => ? [V__UNIT1,V__UNIT2] :
            ( s__instance(V__UNIT2,s__Object)
            & s__instance(V__UNIT1,s__Object)
            & s__instance(V__UNIT1,s__CondominiumUnit)
            & s__instance(V__UNIT2,s__CondominiumUnit)
            & s__part(V__UNIT1,V__BUILDING)
            & s__part(V__UNIT2,V__BUILDING)
            & V__UNIT1 != V__UNIT2 ) ) ) ).

fof(kb_SUMO_10344,axiom,
    s__subclass(s__Dormitory,s__ResidentialBuilding) ).

fof(kb_SUMO_10345,axiom,
    s__subclass(s__Dormitory,s__TemporaryResidence) ).

fof(kb_SUMO_10346,axiom,
    s__instance(s__Dormitory__t,s__SetOrClass) ).

fof(kb_SUMO_10347,axiom,
    s__disjoint(s__Dormitory,s__SingleFamilyResidence) ).

fof(kb_SUMO_10348,axiom,
    s__documentation(s__Dormitory,s__EnglishLanguage,'A &%TemporaryResidence which is owned by a &%School and which is used to house students while they take classes at the &%School.') ).

fof(kb_SUMO_10349,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__Dormitory)
       => ? [V__S] :
            ( s__instance(V__S,s__Agent)
            & s__instance(V__S,s__School)
            & s__possesses(V__S,V__D) ) ) ) ).

fof(kb_SUMO_10350,axiom,
    s__subclass(s__AnimalResidence,s__Artifact) ).

fof(kb_SUMO_10351,axiom,
    s__instance(s__AnimalResidence__t,s__SetOrClass) ).

fof(kb_SUMO_10352,axiom,
    s__documentation(s__AnimalResidence,s__EnglishLanguage,'An &%Artifact which is intended to house &%Animals and not &%Humans. Note that an &%AnimalResidence may or may not be a &%StationaryArtifact, e.g. a horse stall is stationary while a doghouse generally is not.') ).

fof(kb_SUMO_10353,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__Object)
     => ( s__instance(V__RESIDENCE,s__AnimalResidence)
       => s__hasPurpose(V__RESIDENCE,'(? [V__ANIMAL] : (s__instance(V__ANIMAL,s__Organism) & s__instance(V__ANIMAL,s__Animal) & (~ s__instance(V__ANIMAL,s__Human)) & s__inhabits(V__ANIMAL,V__RESIDENCE)))') ) ) ).

fof(kb_SUMO_10354,axiom,
    s__subclass(s__SportsFacility,s__StationaryArtifact) ).

fof(kb_SUMO_10355,axiom,
    s__instance(s__SportsFacility__t,s__SetOrClass) ).

fof(kb_SUMO_10356,axiom,
    s__documentation(s__SportsFacility,s__EnglishLanguage,'A specially designated and maintained facility where &%Sports are played. Note that this covers sports fields, stadiums, and gymnasiums.') ).

fof(kb_SUMO_10357,axiom,
    ! [V__G] :
      ( s__instance(V__G,s__Object)
     => ( s__instance(V__G,s__SportsFacility)
       => s__hasPurpose(V__G,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Sport) & s__eventLocated(V__S,V__G)))') ) ) ).

fof(kb_SUMO_10358,axiom,
    s__subclass(s__SportsLeague,s__Organization) ).

fof(kb_SUMO_10359,axiom,
    s__instance(s__SportsLeague__t,s__SetOrClass) ).

fof(kb_SUMO_10360,axiom,
    s__documentation(s__SportsLeague,s__EnglishLanguage,'An &%Organization whose members are &%SportsTeams and whose purpose is to set up games between its members.') ).

fof(kb_SUMO_10361,axiom,
    ! [V__L,V__M] :
      ( ( s__instance(V__M,s__SelfConnectedObject)
        & s__instance(V__L,s__Collection) )
     => ( ( s__instance(V__L,s__SportsLeague)
          & s__member(V__M,V__L) )
       => s__instance(V__M,s__SportsTeam) ) ) ).

fof(kb_SUMO_10362,axiom,
    s__subclass(s__PlaceOfCommerce,s__StationaryArtifact) ).

fof(kb_SUMO_10363,axiom,
    s__partition_3(s__PlaceOfCommerce,s__CommercialBuilding,s__CommercialUnit) ).

fof(kb_SUMO_10364,axiom,
    s__documentation(s__PlaceOfCommerce,s__EnglishLanguage,'A &%Building or part of a &%Building which is intended for organizational activities, e.g. retail or wholesale selling, manufacturing, office work, etc.') ).

fof(kb_SUMO_10365,axiom,
    ! [V__OFFICE] :
      ( s__instance(V__OFFICE,s__Object)
     => ( s__instance(V__OFFICE,s__PlaceOfCommerce)
       => ( s__instance(V__OFFICE,s__CommercialBuilding)
          | ? [V__BUILDING] :
              ( s__instance(V__BUILDING,s__Object)
              & s__instance(V__BUILDING,s__CommercialBuilding)
              & s__part(V__OFFICE,V__BUILDING) ) ) ) ) ).

fof(kb_SUMO_10366,axiom,
    s__subclass(s__CommercialBuilding,s__Building) ).

fof(kb_SUMO_10367,axiom,
    s__subclass(s__CommercialBuilding,s__PlaceOfCommerce) ).

fof(kb_SUMO_10368,axiom,
    s__documentation(s__CommercialBuilding,s__EnglishLanguage,'A &%Building which is intended for organizational activities, e.g. retail or wholesale selling, manufacturing, office work, etc.') ).

fof(kb_SUMO_10369,axiom,
    s__subclass(s__Warehouse,s__CommercialBuilding) ).

fof(kb_SUMO_10370,axiom,
    s__instance(s__Warehouse__t,s__SetOrClass) ).

fof(kb_SUMO_10371,axiom,
    s__instance(s__CommercialBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10372,axiom,
    s__documentation(s__Warehouse,s__EnglishLanguage,'A very large &%CommercialBuilding whose purpose is to store commodities.') ).

fof(kb_SUMO_10373,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Warehouse)
       => s__hasPurpose(V__B,'(? [V__K,V__P] : (s__instance(V__K,s__Process) & s__instance(V__K,s__Keeping) & s__patient(V__K,V__P) & s__instance(V__P,s__Product) & s__eventLocated(V__K,V__B)))') ) ) ).

fof(kb_SUMO_10374,axiom,
    s__subclass(s__CommercialUnit,s__PlaceOfCommerce) ).

fof(kb_SUMO_10375,axiom,
    s__instance(s__CommercialUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10376,axiom,
    s__instance(s__PlaceOfCommerce__t,s__SetOrClass) ).

fof(kb_SUMO_10377,axiom,
    s__documentation(s__CommercialUnit,s__EnglishLanguage,'A &%Room or suite of &%Rooms intended for clerical and/or professional work of a single &%Organization.') ).

fof(kb_SUMO_10378,axiom,
    ! [V__ORG,V__UNIT] :
      ( ( s__instance(V__UNIT,s__Object)
        & s__instance(V__ORG,s__Physical) )
     => ( ( s__instance(V__UNIT,s__CommercialUnit)
          & s__instance(V__ORG,s__Organization)
          & s__located(V__ORG,V__UNIT) )
       => ~ ? [V__OTHER] :
              ( s__instance(V__OTHER,s__Physical)
              & s__instance(V__OTHER,s__Organization)
              & s__located(V__OTHER,V__UNIT)
              & V__OTHER != V__ORG ) ) ) ).

fof(kb_SUMO_10379,axiom,
    s__subclass(s__Store,s__Building) ).

fof(kb_SUMO_10380,axiom,
    s__instance(s__Store__t,s__SetOrClass) ).

fof(kb_SUMO_10381,axiom,
    s__documentation(s__Store,s__EnglishLanguage,'A &%Building that has the purpose of housing &%FinancialTransactions.') ).

fof(kb_SUMO_10382,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Store)
       => s__hasPurpose(V__X,'(? [V__EV] : (s__instance(V__EV,s__Process) & s__instance(V__EV,s__FinancialTransaction) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_10383,axiom,
    s__subclass(s__FarmBuilding,s__Building) ).

fof(kb_SUMO_10384,axiom,
    s__instance(s__FarmBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10385,axiom,
    s__disjoint(s__FarmBuilding,s__ResidentialBuilding) ).

fof(kb_SUMO_10386,axiom,
    s__documentation(s__FarmBuilding,s__EnglishLanguage,'A &%Building on a &%Farm that is used for keeping &%DomesticAnimals, &%Fodder or harvested crops.') ).

fof(kb_SUMO_10387,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Physical)
     => ( s__instance(V__B,s__FarmBuilding)
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__Farm)
            & s__located(V__B,V__F) ) ) ) ).

fof(kb_SUMO_10388,axiom,
    s__subclass(s__Agency,s__Business) ).

fof(kb_SUMO_10389,axiom,
    s__instance(s__Agency__t,s__SetOrClass) ).

fof(kb_SUMO_10390,axiom,
    s__documentation(s__Agency,s__EnglishLanguage,'A &%CommercialAgent whose customers are all other &%CommercialAgents, e.g. staffing agencies, food-service providers, etc.') ).

fof(kb_SUMO_10391,axiom,
    ! [V__A,V__C] :
      ( ( s__instance(V__C,s__CognitiveAgent)
        & s__instance(V__A,s__CognitiveAgent) )
     => ( ( s__instance(V__A,s__Agency)
          & s__customer(V__C,V__A) )
       => s__instance(V__C,s__CommercialAgent) ) ) ).

fof(kb_SUMO_10392,axiom,
    s__subclass(s__EntertainmentCompany,s__Business) ).

fof(kb_SUMO_10393,axiom,
    s__instance(s__EntertainmentCompany__t,s__SetOrClass) ).

fof(kb_SUMO_10394,axiom,
    s__documentation(s__EntertainmentCompany,s__EnglishLanguage,'Any business whose services include &%Performances. This class covers nightclubs, commercial live theaters, and comedy clubs.') ).

fof(kb_SUMO_10395,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Agent)
     => ( s__instance(V__C,s__EntertainmentCompany)
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__CommercialService)
            & s__agent(V__P,V__C)
            & s__instance(V__P,s__Performance) ) ) ) ).

fof(kb_SUMO_10396,axiom,
    s__subclass(s__FinancialCompany,s__Business) ).

fof(kb_SUMO_10397,axiom,
    s__documentation(s__FinancialCompany,s__EnglishLanguage,'The class &%FinancialCompany includes, as subclasses, &%FinancialBank, &%CreditUnion and &%SavingsAndLoan.') ).

fof(kb_SUMO_10398,axiom,
    s__subclass(s__SavingsAndLoan,s__FinancialCompany) ).

fof(kb_SUMO_10399,axiom,
    s__instance(s__SavingsAndLoan__t,s__SetOrClass) ).

fof(kb_SUMO_10400,axiom,
    s__instance(s__FinancialCompany__t,s__SetOrClass) ).

fof(kb_SUMO_10401,axiom,
    s__documentation(s__SavingsAndLoan,s__EnglishLanguage,'A federally or state chartered &%FinancialCompany that takes &%Deposits from individuals, funds &%Mortgages, and pays &%Dividends.') ).

fof(kb_SUMO_10402,axiom,
    s__instance(s__insured__m,s__BinaryPredicate) ).

fof(kb_SUMO_10403,axiom,
    s__instance(s__insured__m,s__AsymmetricRelation) ).

fof(kb_SUMO_10404,axiom,
    s__domain(s__insured__m,"1",s__Proposition) ).

fof(kb_SUMO_10405,axiom,
    s__domain(s__insured__m,"2",s__Organization) ).

fof(kb_SUMO_10406,axiom,
    s__documentation(s__insured__m,s__EnglishLanguage,'(insured ?Contract ?Org) means that ?Contract is insured by the ?Organization.') ).

fof(kb_SUMO_10407,axiom,
    ! [V__ORG,V__PROP] :
      ( ( s__instance(V__PROP,s__Proposition)
        & s__instance(V__ORG,s__Organization) )
     => ( s__insured(V__PROP,V__ORG)
       => s__property(V__PROP,s__Contract) ) ) ).

fof(kb_SUMO_10408,axiom,
    s__subclass(s__InsuranceCompany,s__Business) ).

fof(kb_SUMO_10409,axiom,
    s__instance(s__InsuranceCompany__t,s__SetOrClass) ).

fof(kb_SUMO_10410,axiom,
    s__documentation(s__InsuranceCompany,s__EnglishLanguage,'A &%CommercialAgent that insures &%Agents for the payment of a premium or premiums.') ).

fof(kb_SUMO_10411,axiom,
    ! [V__I] :
      ( s__instance(V__I,s__Organization)
     => ( s__instance(V__I,s__InsuranceCompany)
       => ? [V__C] :
            ( s__instance(V__C,s__Proposition)
            & s__insured(V__C,V__I) ) ) ) ).

fof(kb_SUMO_10412,axiom,
    s__subclass(s__TransportationCompany,s__Business) ).

fof(kb_SUMO_10413,axiom,
    s__instance(s__TransportationCompany__t,s__SetOrClass) ).

fof(kb_SUMO_10414,axiom,
    s__documentation(s__TransportationCompany,s__EnglishLanguage,'A &%CommercialAgent whose services include &%Transportation, e.g. a &%RailroadCompany, an airline, a cruise ship line, etc.') ).

fof(kb_SUMO_10415,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Agent)
     => ( s__instance(V__C,s__TransportationCompany)
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__CommercialService)
            & s__agent(V__S,V__C)
            & s__instance(V__S,s__Transportation) ) ) ) ).

fof(kb_SUMO_10416,axiom,
    s__subclass(s__FinancialService,s__CommercialService) ).

fof(kb_SUMO_10417,axiom,
    s__instance(s__FinancialService__t,s__SetOrClass) ).

fof(kb_SUMO_10418,axiom,
    s__documentation(s__FinancialService,s__EnglishLanguage,'&%Services performed by a &%FinancialCompany.') ).

fof(kb_SUMO_10419,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__FinancialService)
       => ? [V__O] :
            ( s__instance(V__O,s__Agent)
            & s__instance(V__O,s__FinancialCompany)
            & s__agent(V__S,V__O) ) ) ) ).

fof(kb_SUMO_10420,axiom,
    s__documentation(s__loss__m,s__EnglishLanguage,'The amount by which the cost of an investment or business operation exceeds its return, i.e. the negative quantity left after subtracting for all expenses.') ).

fof(kb_SUMO_10421,axiom,
    s__instance(s__loss__m,s__AsymmetricRelation) ).

fof(kb_SUMO_10422,axiom,
    s__domain(s__loss__m,"1",s__FinancialTransaction) ).

fof(kb_SUMO_10423,axiom,
    s__domain(s__loss__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_10424,axiom,
    s__subclass(s__Financing,s__Funding) ).

fof(kb_SUMO_10425,axiom,
    s__instance(s__Financing__t,s__SetOrClass) ).

fof(kb_SUMO_10426,axiom,
    s__subclass(s__Financing,s__FinancialService) ).

fof(kb_SUMO_10427,axiom,
    s__documentation(s__Financing,s__EnglishLanguage,'Any &%Funding which is provided by a &%FinancialCompany with the aim of making a profit on the money invested.') ).

fof(kb_SUMO_10428,axiom,
    s__subclass(s__Partnership,s__Business) ).

fof(kb_SUMO_10429,axiom,
    s__documentation(s__Partnership,s__EnglishLanguage,'A &%CommercialAgent that is owned by more than one person.') ).

fof(kb_SUMO_10430,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Partnership)
       => ? [V__H1,V__H2] :
            ( s__instance(V__H2,s__Agent)
            & s__instance(V__H1,s__Agent)
            & s__instance(V__H1,s__Human)
            & s__instance(V__H2,s__Human)
            & V__H1 != V__H2
            & s__possesses(V__H1,V__C)
            & s__possesses(V__H2,V__C) ) ) ) ).

fof(kb_SUMO_10431,axiom,
    s__subclass(s__Scholarship,s__Funding) ).

fof(kb_SUMO_10432,axiom,
    s__instance(s__Scholarship__t,s__SetOrClass) ).

fof(kb_SUMO_10433,axiom,
    s__documentation(s__Scholarship,s__EnglishLanguage,'Any &%Funding which is made on the basis of merit and whose purpose is to allow the destination to realize an &%EducationalProgram.') ).

fof(kb_SUMO_10434,axiom,
    ! [V__F,V__H] :
      ( ( s__instance(V__H,s__Agent)
        & s__instance(V__F,s__Process) )
     => ( ( s__instance(V__F,s__Scholarship)
          & s__destination(V__F,V__H) )
       => s__hasPurpose(V__F,'(? [V__EP,V__P] : (s__instance(V__P,s__Process) & s__instance(V__EP,s__Proposition) & s__instance(V__EP,s__EducationalProgram) & s__realization(V__P,V__EP) & s__experiencer(V__P,V__H)))') ) ) ).

fof(kb_SUMO_10435,axiom,
    s__subclass(s__Welfare,s__Funding) ).

fof(kb_SUMO_10436,axiom,
    s__instance(s__Welfare__t,s__SetOrClass) ).

fof(kb_SUMO_10437,axiom,
    s__documentation(s__Welfare,s__EnglishLanguage,'Any &%Funding which is provided by a &%ServiceOrganization to people in need.') ).

fof(kb_SUMO_10438,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Process)
     => ( s__instance(V__W,s__Welfare)
       => ? [V__O] :
            ( s__instance(V__O,s__Agent)
            & s__instance(V__O,s__ServiceOrganization)
            & s__agent(V__W,V__O) ) ) ) ).

fof(kb_SUMO_10439,axiom,
    s__subclass(s__Publisher,s__Manufacturer) ).

fof(kb_SUMO_10440,axiom,
    s__instance(s__Publisher__t,s__SetOrClass) ).

fof(kb_SUMO_10441,axiom,
    s__documentation(s__Publisher,s__EnglishLanguage,'Any business whose services include the &%Publication of &%Texts.') ).

fof(kb_SUMO_10442,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Agent)
     => ( s__instance(V__C,s__Publisher)
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__CommercialService)
            & s__agent(V__S,V__C)
            & s__instance(V__S,s__Publication) ) ) ) ).

fof(kb_SUMO_10443,axiom,
    s__subclass(s__FamilyBusiness,s__Partnership) ).

fof(kb_SUMO_10444,axiom,
    s__instance(s__FamilyBusiness__t,s__SetOrClass) ).

fof(kb_SUMO_10445,axiom,
    s__instance(s__Partnership__t,s__SetOrClass) ).

fof(kb_SUMO_10446,axiom,
    s__documentation(s__FamilyBusiness,s__EnglishLanguage,'A &%Partnership that is owned by a single family.') ).

fof(kb_SUMO_10447,axiom,
    ! [V__P2,V__P1,V__C] :
      ( ( s__instance(V__C,s__Object)
        & s__instance(V__P1,s__Organism)
        & s__instance(V__P2,s__Organism) )
     => ( ( s__instance(V__C,s__FamilyBusiness)
          & s__possesses(V__P1,V__C)
          & s__possesses(V__P2,V__C) )
       => s__familyRelation(V__P1,V__P2) ) ) ).

fof(kb_SUMO_10448,axiom,
    s__subclass(s__Restaurant,s__Business) ).

fof(kb_SUMO_10449,axiom,
    s__documentation(s__Restaurant,s__EnglishLanguage,'Any &%CommercialAgent whose services include selling Food to customers which is intended to be eaten on the premises.') ).

fof(kb_SUMO_10450,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Agent)
     => ( s__instance(V__C,s__Restaurant)
       => ? [V__S,V__F,V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__S,s__Process)
            & s__instance(V__S,s__CommercialService)
            & s__agent(V__S,V__C)
            & s__instance(V__S,s__Selling)
            & s__instance(V__B,s__RestaurantBuilding)
            & s__eventLocated(V__S,V__B)
            & s__patient(V__S,V__F)
            & s__instance(V__F,s__FoodForFn(s__Human)) ) ) ) ).

fof(kb_SUMO_10451,axiom,
    ! [V__PLACE] :
      ( s__instance(V__PLACE,s__Object)
     => ( s__instance(V__PLACE,s__RestaurantBuilding)
       => s__capability(s__Cooking,s__eventLocated__m,V__PLACE) ) ) ).

fof(kb_SUMO_10452,axiom,
    ! [V__R,V__D] :
      ( ( s__instance(V__D,s__Object)
        & s__instance(V__R,s__Agent) )
     => ( s__instance(V__R,s__Restaurant)
       => ? [V__D] :
            ( s__possesses(V__R,V__D)
            & s__instance(V__D,s__DiningArea) ) ) ) ).

fof(kb_SUMO_10453,axiom,
    s__subclass(s__Proprietorship,s__Business) ).

fof(kb_SUMO_10454,axiom,
    s__instance(s__Proprietorship__t,s__SetOrClass) ).

fof(kb_SUMO_10455,axiom,
    s__documentation(s__Proprietorship,s__EnglishLanguage,'A &%CommercialAgent that is owned by a single person.') ).

fof(kb_SUMO_10456,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Proprietorship)
       => ? [V__H] :
            ( s__instance(V__H,s__Human)
            & s__possesses(V__H,V__C)
            & ~ ? [V__H2] :
                  ( s__instance(V__H2,s__Agent)
                  & s__instance(V__H,s__Agent)
                  & V__H != V__H2
                  & s__possesses(V__H2,V__C) ) ) ) ) ).

fof(kb_SUMO_10457,axiom,
    s__subclass(s__Auditorium,s__Building) ).

fof(kb_SUMO_10458,axiom,
    s__instance(s__Auditorium__t,s__SetOrClass) ).

fof(kb_SUMO_10459,axiom,
    s__documentation(s__Auditorium,s__EnglishLanguage,'Any &%Building whose purpose is to hold concerts, sports events, plays, etc. before an audience. This class includes theaters, sports stadiums, university auditoriums, etc.') ).

fof(kb_SUMO_10460,axiom,
    ! [V__AUDITORIUM] :
      ( s__instance(V__AUDITORIUM,s__Object)
     => ( s__instance(V__AUDITORIUM,s__Auditorium)
       => s__hasPurpose(V__AUDITORIUM,'(? [V__DEMO] : (s__instance(V__DEMO,s__Process) & s__instance(V__DEMO,s__Demonstrating) & s__eventLocated(V__DEMO,V__AUDITORIUM)))') ) ) ).

fof(kb_SUMO_10461,axiom,
    ! [V__AUDITORIUM] :
      ( s__instance(V__AUDITORIUM,s__Object)
     => ( s__instance(V__AUDITORIUM,s__Auditorium)
       => ? [V__STAGE] :
            ( s__instance(V__STAGE,s__Object)
            & s__instance(V__STAGE,s__PerformanceStage)
            & s__part(V__STAGE,V__AUDITORIUM) ) ) ) ).

fof(kb_SUMO_10462,axiom,
    s__subclass(s__AuditoriumSeat,s__Seat) ).

fof(kb_SUMO_10463,axiom,
    s__instance(s__AuditoriumSeat__t,s__SetOrClass) ).

fof(kb_SUMO_10464,axiom,
    s__documentation(s__AuditoriumSeat,s__EnglishLanguage,'A &%Seat within an &%Auditorium from which one can observe the &%PerformanceStage.') ).

fof(kb_SUMO_10465,axiom,
    ! [V__SEAT] :
      ( s__instance(V__SEAT,s__Object)
     => ( s__instance(V__SEAT,s__AuditoriumSeat)
       => ? [V__AUDITORIUM] :
            ( s__instance(V__AUDITORIUM,s__Object)
            & s__instance(V__AUDITORIUM,s__Auditorium)
            & s__part(V__SEAT,V__AUDITORIUM) ) ) ) ).

fof(kb_SUMO_10466,axiom,
    ! [V__STAGE,V__PERSON,V__AUDITORIUM,V__SEAT,V__SEE] :
      ( ( s__subclass(V__SEE,s__Process)
        & s__instance(V__PERSON,s__Object) )
     => ( ( s__instance(V__SEAT,s__AuditoriumSeat)
          & s__part(V__SEAT,V__AUDITORIUM)
          & s__part(V__STAGE,V__AUDITORIUM)
          & s__instance(V__AUDITORIUM,s__Auditorium)
          & s__instance(V__STAGE,s__PerformanceStage)
          & s__located(V__PERSON,V__SEAT)
          & s__instance(V__PERSON,s__Human)
          & s__subclass(V__SEE,s__Seeing)
          & ! [V__INST] :
              ( ( s__instance(V__INST,s__Process)
                & s__instance(V__SEE,s__SetOrClass)
                & s__instance(V__SEAT,s__Object)
                & s__instance(V__AUDITORIUM,s__Object)
                & s__instance(V__PERSON,s__Physical)
                & s__instance(V__STAGE,s__Object) )
             => ( s__instance(V__INST,V__SEE)
               => s__patient(V__INST,V__STAGE) ) ) )
       => s__capability(V__SEE,s__agent__m,V__PERSON) ) ) ).

fof(kb_SUMO_10467,axiom,
    s__subrelation(s__enjoys__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_10468,axiom,
    s__domain(s__enjoys__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10469,axiom,
    s__domainSubclass(s__enjoys__m,"2",s__IntentionalProcess) ).

fof(kb_SUMO_10470,axiom,
    s__documentation(s__enjoys__m,s__EnglishLanguage,'(&%enjoys ?AGENT ?PROCESS) means that the &%CognitiveAgent ?AGENT tends to enjoy actions of type ?PROCESS, i.e. tends to enjoy being the &%agent or &%experiencer of such actions.') ).

fof(kb_SUMO_10471,axiom,
    ! [V__PROCESS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__subclass(V__PROCESS,s__IntentionalProcess)
        & s__instance(V__PROCESS,s__SetOrClass) )
     => ( s__enjoys(V__AGENT,V__PROCESS)
       => s__desires(V__AGENT,'(? [V__INSTANCE] : (s__instance(V__INSTANCE,s__Process) & s__instance(V__INSTANCE,V__PROCESS) & (s__agent(V__INSTANCE,V__AGENT) | s__experiencer(V__INSTANCE,V__AGENT))))') ) ) ).

fof(kb_SUMO_10472,axiom,
    s__instance(s__expects__m,s__BinaryPredicate) ).

fof(kb_SUMO_10473,axiom,
    s__domain(s__expects__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10474,axiom,
    s__domain(s__expects__m,"2",s__Formula) ).

fof(kb_SUMO_10475,axiom,
    s__documentation(s__expects__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%expects ?AGENT ?BELIEF)) means (and (&%holdDuring ?T1 (&%believes ?AGENT (&%holdsDuring ?T2 ?BELIEF))) (&%earlier ?T1 ?T2)).') ).

%FOL fof(kb_SUMO_10476,axiom,(( (! [V__T2,V__T1,V__FORMULA,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__FORMULA,s__Formula) & s__instance(V__T1,s__TimeInterval) & s__instance(V__T2,s__TimeInterval)) => (s__holdsDuring(V__T1,'s__expects(V__AGENT,V__FORMULA)') => (s__holdsDuring(V__T1,'s__believes(V__AGENT,s__holdsDuring(V__T2,V__FORMULA))') & s__earlier(V__T1,V__T2))))) ))).

fof(kb_SUMO_10477,axiom,
    s__subrelation(s__fears__m,s__expects__m) ).

fof(kb_SUMO_10478,axiom,
    s__documentation(s__fears__m,s__EnglishLanguage,'(&%fears ?AGENT ?FORMULA) means that ?AGENT fears that the proposition ?FORMULA will be true, i.e. he/she believes that it will come to pass in the future and that it will be undesirable for ?AGENT.') ).

fof(kb_SUMO_10479,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__fears(V__AGENT,V__FORMULA)
       => ~ s__desires(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_10480,axiom,
    s__subrelation(s__hopes__m,s__expects__m) ).

fof(kb_SUMO_10481,axiom,
    s__documentation(s__hopes__m,s__EnglishLanguage,'(&%hopes ?AGENT ?FORMULA) means that ?AGENT hopes that the proposition ?FORMULA will be true, i.e. he/she believes that it will come to pass in the future and that it will be desirable for ?AGENT.') ).

fof(kb_SUMO_10482,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__hopes(V__AGENT,V__FORMULA)
       => s__desires(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_10483,axiom,
    s__instance(s__doubts__m,s__PropositionalAttitude) ).

fof(kb_SUMO_10484,axiom,
    s__instance(s__doubts__m,s__BinaryPredicate) ).

fof(kb_SUMO_10485,axiom,
    s__domain(s__doubts__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10486,axiom,
    s__domain(s__doubts__m,"2",s__Formula) ).

fof(kb_SUMO_10487,axiom,
    s__documentation(s__doubts__m,s__EnglishLanguage,'(&%doubts ?AGENT ?FORMULA) means that ?AGENT is unsure about the truth of ?FORMULA, in particular ?AGENT does not believe that ?FORMULA is true.') ).

fof(kb_SUMO_10488,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__doubts(V__AGENT,V__FORMULA)
       => ~ s__believes(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_10489,axiom,
    s__instance(s__dislikes__m,s__ObjectAttitude) ).

fof(kb_SUMO_10490,axiom,
    s__subrelation(s__dislikes__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_10491,axiom,
    s__disjointRelation(s__dislikes__m,s__wants__m) ).

fof(kb_SUMO_10492,axiom,
    s__relatedInternalConcept(s__dislikes__m,s__disapproves__m) ).

fof(kb_SUMO_10493,axiom,
    s__domain(s__dislikes__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10494,axiom,
    s__domain(s__dislikes__m,"2",s__Object) ).

fof(kb_SUMO_10495,axiom,
    s__documentation(s__dislikes__m,s__EnglishLanguage,'(&%dislikes ?AGENT ?OBJECT) means that ?AGENT has a feeling of antipathy to ?OBJECT, i.e. ?AGENT believes that ?OBJECT will thwart one of his/her goals. Note that there is no implication that what is hated by an agent is not already possessed by the agent.') ).

fof(kb_SUMO_10496,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__dislikes(V__AGENT,V__OBJECT)
       => s__desires(V__AGENT,'(~ s__possesses(V__AGENT,V__OBJECT))') ) ) ).

fof(kb_SUMO_10497,axiom,
    s__instance(s__disapproves__m,s__PropositionalAttitude) ).

fof(kb_SUMO_10498,axiom,
    s__instance(s__disapproves__m,s__BinaryPredicate) ).

fof(kb_SUMO_10499,axiom,
    s__subrelation(s__disapproves__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_10500,axiom,
    s__disjointRelation(s__disapproves__m,s__desires__m) ).

fof(kb_SUMO_10501,axiom,
    s__domain(s__disapproves__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10502,axiom,
    s__domain(s__disapproves__m,"2",s__Formula) ).

fof(kb_SUMO_10503,axiom,
    s__documentation(s__disapproves__m,s__EnglishLanguage,'(&%disapproves ?AGENT ?FORMULA) means that ?AGENT has a feeling of antipathy to the state of affairs represented by ?FORMULA, i.e. ?AGENT believes that the realization of ?FORMULA will thwart one of his/her goals. Note that there is no implication that what is disapproved of by an agent is not already true.') ).

fof(kb_SUMO_10504,axiom,
    s__subrelation(s__lacks__m,s__needs__m) ).

fof(kb_SUMO_10505,axiom,
    s__documentation(s__lacks__m,s__EnglishLanguage,'(&%lacks ?AGENT ?OBJECT) means that ?AGENT &%needs ?OBJECT and it is not currently the case that ?AGENT &%possesses ?OBJECT.') ).

%FOL fof(kb_SUMO_10506,axiom,(( (! [V__OBJECT,V__TIME,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__TIME,s__TimePosition) & s__instance(V__OBJECT,s__Object)) => (s__holdsDuring(V__TIME,'s__lacks(V__AGENT,V__OBJECT)') => s__holdsDuring(V__TIME,'(~ s__possesses(V__AGENT,V__OBJECT))')))) ))).

fof(kb_SUMO_10507,axiom,
    s__instance(s__DescendantsFn__m,s__UnaryFunction) ).

fof(kb_SUMO_10508,axiom,
    s__domain(s__DescendantsFn__m,"1",s__Human) ).

fof(kb_SUMO_10509,axiom,
    s__range(s__DescendantsFn__m,s__FamilyGroup) ).

fof(kb_SUMO_10510,axiom,
    s__documentation(s__DescendantsFn__m,s__EnglishLanguage,'(&%DescendantsFn ?PERSON) denotes all and only the descendants of ?PERSON, i.e. the &%Group consisting of ?OFFSPRING who satisfy the following formula: (&%ancestor ?OFFSPRING ?PERSON).') ).

fof(kb_SUMO_10511,axiom,
    ! [V__DESCENDANTS,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Human)
        & s__DescendantsFn(V__PERSON) = V__DESCENDANTS )
     => ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__Organism)
            & s__instance(V__PERSON,s__Human)
            & s__instance(V__DESCENDANTS,s__Collection) )
         => ( s__member(V__MEMBER,V__DESCENDANTS)
          <=> s__ancestor(V__MEMBER,V__PERSON) ) ) ) ).

fof(kb_SUMO_10512,axiom,
    s__subclass(s__GroupOfAnimals,s__Group) ).

fof(kb_SUMO_10513,axiom,
    s__instance(s__GroupOfAnimals__t,s__SetOrClass) ).

fof(kb_SUMO_10514,axiom,
    s__documentation(s__GroupOfAnimals,s__EnglishLanguage,'Any &%Group which contains exclusively non-human &%members.') ).

fof(kb_SUMO_10515,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__GroupOfAnimals)
     => ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
            & s__instance(V__GROUP,s__Collection) )
         => ( s__member(V__MEMBER,V__GROUP)
           => ( s__instance(V__MEMBER,s__Animal)
              & ~ s__instance(V__MEMBER,s__Human) ) ) ) ) ).

fof(kb_SUMO_10516,axiom,
    s__subclass(s__Brood,s__GroupOfAnimals) ).

fof(kb_SUMO_10517,axiom,
    s__instance(s__Brood__t,s__SetOrClass) ).

fof(kb_SUMO_10518,axiom,
    s__documentation(s__Brood,s__EnglishLanguage,'A &%GroupOfAnimals that are all born at the same time and to the same parents.') ).

fof(kb_SUMO_10519,axiom,
    ! [V__BROOD] :
      ( s__instance(V__BROOD,s__Brood)
     => ! [V__MEMBER1,V__MEMBER2] :
          ( ( s__instance(V__MEMBER2,s__Organism)
            & s__instance(V__MEMBER1,s__Organism)
            & s__instance(V__BROOD,s__Collection) )
         => ( ( s__member(V__MEMBER1,V__BROOD)
              & s__member(V__MEMBER2,V__BROOD) )
           => s__sibling(V__MEMBER1,V__MEMBER2) ) ) ) ).

fof(kb_SUMO_10520,axiom,
    ! [V__BROOD] :
      ( s__instance(V__BROOD,s__Brood)
     => ? [V__TIME] :
        ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
            & s__instance(V__MEMBER,s__Agent)
            & s__instance(V__BROOD,s__Collection) )
         => ( s__member(V__MEMBER,V__BROOD)
           => ? [V__BIRTH] :
                ( s__instance(V__BIRTH,s__Process)
                & s__instance(V__BIRTH,s__Birth)
                & s__experiencer(V__BIRTH,V__MEMBER)
                & V__TIME = s__WhenFn(V__BIRTH) ) ) ) ) ).

fof(kb_SUMO_10521,axiom,
    s__subclass(s__AnimalTeam,s__GroupOfAnimals) ).

fof(kb_SUMO_10522,axiom,
    s__instance(s__AnimalTeam__t,s__SetOrClass) ).

fof(kb_SUMO_10523,axiom,
    s__documentation(s__AnimalTeam,s__EnglishLanguage,'A &%GroupOfAnimals which are &%Pulling something.') ).

fof(kb_SUMO_10524,axiom,
    ! [V__AT] :
      ( s__instance(V__AT,s__Agent)
     => ( s__instance(V__AT,s__AnimalTeam)
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__Pulling)
            & s__agent(V__P,V__AT) ) ) ) ).

fof(kb_SUMO_10525,axiom,
    s__subclass(s__SportsTeam,s__GroupOfPeople) ).

fof(kb_SUMO_10526,axiom,
    s__instance(s__SportsTeam__t,s__SetOrClass) ).

fof(kb_SUMO_10527,axiom,
    s__documentation(s__SportsTeam,s__EnglishLanguage,'A &%GroupOfPeople who habitually play a &%Sport together, either as an occupation or as a leisure activity.') ).

fof(kb_SUMO_10528,axiom,
    ! [V__TEAM] :
      ( s__instance(V__TEAM,s__Object)
     => ( s__instance(V__TEAM,s__SportsTeam)
       => ? [V__SPORT] :
            ( s__instance(V__SPORT,s__SetOrClass)
            & s__subclass(V__SPORT,s__Process)
            & s__subclass(V__SPORT,s__Sport)
            & s__capability(V__SPORT,s__agent__m,V__TEAM) ) ) ) ).

fof(kb_SUMO_10529,axiom,
    s__subclass(s__TeamSport,s__Sport) ).

fof(kb_SUMO_10530,axiom,
    s__instance(s__TeamSport__t,s__SetOrClass) ).

fof(kb_SUMO_10531,axiom,
    s__documentation(s__TeamSport,s__EnglishLanguage,'Any &%Sport which is played by &%SportsTeams, e.g. &%Baseball and &%Football.') ).

fof(kb_SUMO_10532,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Contest)
     => ( s__instance(V__S,s__TeamSport)
       => ? [V__T1,V__T2] :
            ( s__instance(V__T2,s__Agent)
            & s__instance(V__T1,s__Agent)
            & s__contestParticipant(V__S,V__T1)
            & s__contestParticipant(V__S,V__T2)
            & s__instance(V__T1,s__SportsTeam)
            & s__instance(V__T2,s__SportsTeam)
            & V__T1 != V__T2 ) ) ) ).

fof(kb_SUMO_10533,axiom,
    s__subclass(s__Racing,s__Sport) ).

fof(kb_SUMO_10534,axiom,
    s__instance(s__Racing__t,s__SetOrClass) ).

fof(kb_SUMO_10535,axiom,
    s__documentation(s__Racing,s__EnglishLanguage,'A sport which involves a contest of speed between the participants. Note that this covers a variety of things, including auto racing, running competitions, etc.') ).

fof(kb_SUMO_10536,axiom,
    s__subrelation(s__groupMember__m,s__member__m) ).

fof(kb_SUMO_10537,axiom,
    s__domain(s__groupMember__m,"1",s__Human) ).

fof(kb_SUMO_10538,axiom,
    s__domain(s__groupMember__m,"2",s__GroupOfPeople) ).

fof(kb_SUMO_10539,axiom,
    s__documentation(s__groupMember__m,s__EnglishLanguage,'A &%subrelation of &%member, &%groupMember is used to relate a &%Human to a &%GroupOfPeople of which he/she is a &%member.') ).

fof(kb_SUMO_10540,axiom,
    s__documentation(s__headquartersOfOrganization__m,s__EnglishLanguage,'(headquartersOfOrganization ?ORG ?AREA) means that the &%Organization ?ORG is headquartered in ?AREA.') ).

fof(kb_SUMO_10541,axiom,
    s__domain(s__headquartersOfOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_10542,axiom,
    s__domain(s__headquartersOfOrganization__m,"2",s__GeopoliticalArea) ).

fof(kb_SUMO_10543,axiom,
    s__subrelation(s__headquartersOfOrganization__m,s__located__m) ).

fof(kb_SUMO_10544,axiom,
    s__subclass(s__CommunicationOrganization,s__Organization) ).

fof(kb_SUMO_10545,axiom,
    s__instance(s__CommunicationOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10546,axiom,
    s__documentation(s__CommunicationOrganization,s__EnglishLanguage,'&%CommunicationOrganization is the subclass of &%Organizations that manage &%Communications over physical infrastructure owned or leased by the organization. Such organizations may also produce and disseminate information, entertainment, or other content. Also see &%MediaOrganization.') ).

fof(kb_SUMO_10547,axiom,
    ! [V__CO] :
      ( s__instance(V__CO,s__Agent)
     => ( s__instance(V__CO,s__CommunicationOrganization)
       => ? [V__CS,V__C] :
            ( s__instance(V__C,s__Process)
            & s__instance(V__CS,s__Object)
            & s__instance(V__C,s__Communication)
            & s__instance(V__CS,s__CommunicationSystem)
            & s__instrument(V__C,V__CS)
            & s__agent(V__C,V__CO) ) ) ) ).

fof(kb_SUMO_10548,axiom,
    s__subclass(s__MediaOrganization,s__Organization) ).

fof(kb_SUMO_10549,axiom,
    s__instance(s__MediaOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10550,axiom,
    s__documentation(s__MediaOrganization,s__EnglishLanguage,'&%MediaOrganization is the subclass of &%Organization for groups whose primary purpose is the production or dissemination of media content. For organizations that physically enable &%Communication, see &%CommunicationOrganization.') ).

fof(kb_SUMO_10551,axiom,
    s__instance(s__profit__m,s__AsymmetricRelation) ).

fof(kb_SUMO_10552,axiom,
    s__domain(s__profit__m,"1",s__FinancialTransaction) ).

fof(kb_SUMO_10553,axiom,
    s__domain(s__profit__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_10554,axiom,
    s__documentation(s__profit__m,s__EnglishLanguage,'The positive gain from an investment or business operation after subtracting for all expenses.') ).

fof(kb_SUMO_10555,axiom,
    s__subclass(s__NonprofitOrganization,s__Organization) ).

fof(kb_SUMO_10556,axiom,
    s__instance(s__NonprofitOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10557,axiom,
    s__disjoint(s__NonprofitOrganization,s__CommercialAgent) ).

fof(kb_SUMO_10558,axiom,
    s__documentation(s__NonprofitOrganization,s__EnglishLanguage,'Any &%Organization whose purpose is something other than making a profit.') ).

fof(kb_SUMO_10559,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__FinancialTransaction)
     => ( s__instance(V__N,s__NonprofitOrganization)
       => ~ s__hasPurpose(V__N,'(? [V__P] : (s__instance(V__P,s__CurrencyMeasure) & s__profit(V__N,V__P)))') ) ) ).

fof(kb_SUMO_10560,axiom,
    s__subclass(s__CommunicationSystem,s__Collection) ).

fof(kb_SUMO_10561,axiom,
    s__instance(s__CommunicationSystem__t,s__SetOrClass) ).

fof(kb_SUMO_10562,axiom,
    s__documentation(s__CommunicationSystem,s__EnglishLanguage,'&%CommunicationSystem is a complex system with various components, enabling communication (in some medium) between points in a specific area, whether local or worldwide.') ).

fof(kb_SUMO_10563,axiom,
    s__subclass(s__CareOrganization,s__Organization) ).

fof(kb_SUMO_10564,axiom,
    s__instance(s__CareOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10565,axiom,
    s__partition_3(s__CareOrganization,s__HospitalOrganization,s__MedicalClinic) ).

fof(kb_SUMO_10566,axiom,
    s__documentation(s__CareOrganization,s__EnglishLanguage,'Any &%Organization whose purpose is to provide medical care for for &%Humans who reside there, either permanently or temporarily.') ).

fof(kb_SUMO_10567,axiom,
    s__instance(s__medicalPatient__m,s__BinaryPredicate) ).

fof(kb_SUMO_10568,axiom,
    s__documentation(s__medicalPatient__m,s__EnglishLanguage,'A relation between a &%Human and a &%CareOrganization that treats the patient.') ).

fof(kb_SUMO_10569,axiom,
    s__domain(s__medicalPatient__m,"1",s__Human) ).

fof(kb_SUMO_10570,axiom,
    s__domain(s__medicalPatient__m,"2",s__CareOrganization) ).

fof(kb_SUMO_10571,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__CareOrganization)
     => s__hasPurpose(V__ORG,'(? [V__PATIENT] : (s__instance(V__PATIENT,s__Human) & s__medicalPatient(V__PATIENT,V__ORG)))') ) ).

fof(kb_SUMO_10572,axiom,
    s__subclass(s__HospitalOrganization,s__CareOrganization) ).

fof(kb_SUMO_10573,axiom,
    s__instance(s__HospitalOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10574,axiom,
    s__documentation(s__HospitalOrganization,s__EnglishLanguage,'A &%CareOrganization where patients reside for a short period of time while they undergo treatment for a disease or disorder.') ).

fof(kb_SUMO_10575,axiom,
    s__subclass(s__HospitalBuilding,s__TemporaryResidence) ).

fof(kb_SUMO_10576,axiom,
    s__instance(s__HospitalBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10577,axiom,
    s__documentation(s__HospitalBuilding,s__EnglishLanguage,'A &%Building that serves at the place of business for a &%HospitalOrganization.') ).

fof(kb_SUMO_10578,axiom,
    s__subclass(s__MedicalClinic,s__CareOrganization) ).

fof(kb_SUMO_10579,axiom,
    s__instance(s__MedicalClinic__t,s__SetOrClass) ).

fof(kb_SUMO_10580,axiom,
    s__documentation(s__MedicalClinic,s__EnglishLanguage,'A &%CareOrganization which provides medical care on an out-patient basis only, i.e. there are no rooms where patients may take up residence for a period of time while they receive care.') ).

fof(kb_SUMO_10581,axiom,
    s__subclass(s__MedicalClinicBuilding,s__ComplementFn(s__Residence)) ).

fof(kb_SUMO_10582,axiom,
    s__instance(s__MedicalClinicBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10583,axiom,
    s__subclass(s__MedicalClinicBuilding,s__Building) ).

fof(kb_SUMO_10584,axiom,
    s__subclass(s__Cafeteria,s__Restaurant) ).

fof(kb_SUMO_10585,axiom,
    s__instance(s__Cafeteria__t,s__SetOrClass) ).

fof(kb_SUMO_10586,axiom,
    s__documentation(s__Cafeteria,s__EnglishLanguage,'Any &%Restaurant which does not offer table service. Food is selected and purchased at a central counter.') ).

fof(kb_SUMO_10587,axiom,
    ! [V__COMPANY] :
      ( s__instance(V__COMPANY,s__Organization)
     => ( s__instance(V__COMPANY,s__Cafeteria)
       => ~ ? [V__PERSON] :
              ( s__instance(V__PERSON,s__Human)
              & s__occupiesPosition(V__PERSON,s__ServicePosition,V__COMPANY) ) ) ) ).

fof(kb_SUMO_10588,axiom,
    s__subclass(s__Tavern,s__Restaurant) ).

fof(kb_SUMO_10589,axiom,
    s__instance(s__Tavern__t,s__SetOrClass) ).

fof(kb_SUMO_10590,axiom,
    s__instance(s__Restaurant__t,s__SetOrClass) ).

fof(kb_SUMO_10591,axiom,
    s__documentation(s__Tavern,s__EnglishLanguage,'A &%Restaurant whose primary service is selling &%AlcoholicBeverages to customers.') ).

fof(kb_SUMO_10592,axiom,
    ! [V__COMPANY] :
      ( s__instance(V__COMPANY,s__Agent)
     => ( s__instance(V__COMPANY,s__Tavern)
       => ? [V__SERVICE,V__BEVERAGE] :
            ( s__instance(V__SERVICE,s__Process)
            & s__instance(V__SERVICE,s__CommercialService)
            & s__agent(V__SERVICE,V__COMPANY)
            & s__instance(V__SERVICE,s__Selling)
            & s__patient(V__SERVICE,V__BEVERAGE)
            & s__instance(V__BEVERAGE,s__AlcoholicBeverage) ) ) ) ).

fof(kb_SUMO_10593,axiom,
    s__subclass(s__Shipping,s__Transportation) ).

fof(kb_SUMO_10594,axiom,
    s__instance(s__Shipping__t,s__SetOrClass) ).

fof(kb_SUMO_10595,axiom,
    s__documentation(s__Shipping,s__EnglishLanguage,'Shipping is the subclass of &%Transportation events in which goods are transported from one place to another by an agent who is entrusted with the goods temporarily just in order to move them. Shipping may be done within an organization or it may be done by an outside commercial agent. See &%CommercialShipping.') ).

fof(kb_SUMO_10596,axiom,
    s__subclass(s__CommercialShipping,s__Shipping) ).

fof(kb_SUMO_10597,axiom,
    s__instance(s__CommercialShipping__t,s__SetOrClass) ).

fof(kb_SUMO_10598,axiom,
    s__subclass(s__CommercialShipping,s__CommercialService) ).

fof(kb_SUMO_10599,axiom,
    s__documentation(s__CommercialShipping,s__EnglishLanguage,'&%CommercialShipping is the subclass of &%Transportation events in which a commercial agent provides transportation of goods for remuneration.') ).

fof(kb_SUMO_10600,axiom,
    s__subclass(s__Smuggling,s__Transportation) ).

fof(kb_SUMO_10601,axiom,
    s__instance(s__Smuggling__t,s__SetOrClass) ).

fof(kb_SUMO_10602,axiom,
    s__subclass(s__Smuggling,s__CriminalAction) ).

fof(kb_SUMO_10603,axiom,
    s__documentation(s__Smuggling,s__EnglishLanguage,'Any instance &%Transportation which is also a &%CriminalAction.') ).

fof(kb_SUMO_10604,axiom,
    s__instance(s__customer__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_10605,axiom,
    s__instance(s__customer__m,s__BinaryPredicate) ).

fof(kb_SUMO_10606,axiom,
    s__instance(s__customer__m,s__AsymmetricRelation) ).

fof(kb_SUMO_10607,axiom,
    s__domain(s__customer__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_10608,axiom,
    s__domain(s__customer__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_10609,axiom,
    s__documentation(s__customer__m,s__EnglishLanguage,'A very general relation that exists whenever there is a &%FinancialTransaction between the two &%Agents such that the first is the &%destination of the &%FinancialTransaction and the second is the &%agent.') ).

fof(kb_SUMO_10610,axiom,
    ! [V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__CognitiveAgent)
        & s__instance(V__AGENT2,s__CognitiveAgent) )
     => ( s__customer(V__AGENT1,V__AGENT2)
      <=> ? [V__SERVICE] :
            ( s__instance(V__SERVICE,s__Process)
            & s__instance(V__SERVICE,s__FinancialTransaction)
            & s__agent(V__SERVICE,V__AGENT2)
            & s__destination(V__SERVICE,V__AGENT1) ) ) ) ).

fof(kb_SUMO_10611,axiom,
    s__instance(s__price__m,s__TernaryPredicate) ).

fof(kb_SUMO_10612,axiom,
    s__domain(s__price__m,"1",s__Physical) ).

fof(kb_SUMO_10613,axiom,
    s__domain(s__price__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_10614,axiom,
    s__domain(s__price__m,"3",s__Agent) ).

fof(kb_SUMO_10615,axiom,
    s__documentation(s__price__m,s__EnglishLanguage,'(&%price ?Obj ?Money ?Agent) means that ?Agent pays the amount of money ?Money for ?Obj.') ).

fof(kb_SUMO_10616,axiom,
    ! [V__Agent,V__Money,V__Obj] :
      ( ( s__instance(V__Obj,s__Physical)
        & s__instance(V__Money,s__CurrencyMeasure)
        & s__instance(V__Agent,s__Agent) )
     => ( s__price(V__Obj,V__Money,V__Agent)
       => ? [V__Buying] :
            ( s__instance(V__Buying,s__FinancialTransaction)
            & s__instance(V__Buying,s__Buying)
            & s__agent(V__Buying,V__Agent)
            & s__patient(V__Buying,V__Obj)
            & s__transactionAmount(V__Buying,V__Money) ) ) ) ).

fof(kb_SUMO_10617,axiom,
    s__subclass(s__WholesaleStore,s__MercantileOrganization) ).

fof(kb_SUMO_10618,axiom,
    s__instance(s__WholesaleStore__t,s__SetOrClass) ).

fof(kb_SUMO_10619,axiom,
    s__documentation(s__WholesaleStore,s__EnglishLanguage,'A &%MercantileOrganization that sells its goods exclusively to &%CommercialAgents, typically for resale, rather than to end-point consumers.') ).

fof(kb_SUMO_10620,axiom,
    ! [V__CUSTOMER,V__STORE] :
      ( ( s__instance(V__STORE,s__CognitiveAgent)
        & s__instance(V__CUSTOMER,s__CognitiveAgent) )
     => ( ( s__instance(V__STORE,s__WholesaleStore)
          & s__customer(V__CUSTOMER,V__STORE) )
       => s__instance(V__CUSTOMER,s__CommercialAgent) ) ) ).

fof(kb_SUMO_10621,axiom,
    s__subclass(s__RetailStore,s__MercantileOrganization) ).

fof(kb_SUMO_10622,axiom,
    s__instance(s__RetailStore__t,s__SetOrClass) ).

fof(kb_SUMO_10623,axiom,
    s__disjoint(s__RetailStore,s__WholesaleStore) ).

fof(kb_SUMO_10624,axiom,
    s__documentation(s__RetailStore,s__EnglishLanguage,'A &%RetailStore is a &%MercantileOrganization that sells goods to customers who are end-point consumers, rather than to &%CommercialAgents who are buying the goods in order to resell them at a higher price. This distinguishes retail stores from wholesale establishments, where the purchasers are businesses or their representatives, as well as mail order or office buildings where transactions are facillitated but the consumer does not take possession of the item on the premises. More succinctly, &%RetailStore is the complement of &%WholesaleStore, which is the class of &%MercantileOrganizations that sell goods to the general public.') ).

fof(kb_SUMO_10625,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__RetailStore)
       => ( s__capability(s__Selling,s__agent__m,V__X)
          & ? [V__P,V__EV] :
              ( s__instance(V__EV,s__Process)
              & s__instance(V__EV,s__Selling)
              & s__destination(V__EV,V__P)
              & s__instance(V__P,s__Human) ) ) ) ) ).

fof(kb_SUMO_10626,axiom,
    s__subclass(s__ShoppingMall,s__MercantileOrganization) ).

fof(kb_SUMO_10627,axiom,
    s__instance(s__ShoppingMall__t,s__SetOrClass) ).

fof(kb_SUMO_10628,axiom,
    s__documentation(s__ShoppingMall,s__EnglishLanguage,'A &%MercantileOrganization which is a collection of various shops gathered together in a single, modern development.') ).

fof(kb_SUMO_10629,axiom,
    ! [V__S,V__M] :
      ( ( s__instance(V__M,s__Collection)
        & s__instance(V__S,s__SelfConnectedObject) )
     => ( ( s__instance(V__M,s__ShoppingMall)
          & s__member(V__S,V__M) )
       => s__instance(V__S,s__RetailStore) ) ) ).

fof(kb_SUMO_10630,axiom,
    s__subclass(s__DrugStore,s__RetailStore) ).

fof(kb_SUMO_10631,axiom,
    s__instance(s__DrugStore__t,s__SetOrClass) ).

fof(kb_SUMO_10632,axiom,
    s__documentation(s__DrugStore,s__EnglishLanguage,'A &%RetailStore that sells &%Medicine, and perhaps other items as well.') ).

fof(kb_SUMO_10633,axiom,
    ! [V__D,V__M] :
      ( s__instance(V__D,s__Agent)
     => ( s__instance(V__D,s__DrugStore)
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__Selling)
            & s__agent(V__S,V__D)
            & s__patient(V__S,V__M)
            & s__instance(V__M,s__Medicine) ) ) ) ).

fof(kb_SUMO_10634,axiom,
    s__subclass(s__GroceryStore,s__RetailStore) ).

fof(kb_SUMO_10635,axiom,
    s__instance(s__GroceryStore__t,s__SetOrClass) ).

fof(kb_SUMO_10636,axiom,
    s__documentation(s__GroceryStore,s__EnglishLanguage,'A &%RetailStore that sells Food, and perhaps other items as well.') ).

fof(kb_SUMO_10637,axiom,
    ! [V__STORE] :
      ( s__instance(V__STORE,s__Agent)
     => ( s__instance(V__STORE,s__GroceryStore)
       => ? [V__SELL,V__FOOD] :
            ( s__instance(V__SELL,s__Process)
            & s__instance(V__SELL,s__Selling)
            & s__agent(V__SELL,V__STORE)
            & s__patient(V__SELL,V__FOOD)
            & s__instance(V__FOOD,s__FoodForFn(s__Animal)) ) ) ) ).

fof(kb_SUMO_10638,axiom,
    s__subclass(s__OfferingForSale,s__Offering) ).

fof(kb_SUMO_10639,axiom,
    s__instance(s__OfferingForSale__t,s__SetOrClass) ).

fof(kb_SUMO_10640,axiom,
    s__documentation(s__OfferingForSale,s__EnglishLanguage,'&%Offering to sell something to someone.') ).

fof(kb_SUMO_10641,axiom,
    ! [V__AGENT,V__SALE] :
      ( ( s__instance(V__SALE,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__SALE,s__OfferingForSale)
          & s__agent(V__SALE,V__AGENT) )
       => s__patient(V__SALE,'(? [V__SELL,V__OBJ] : (s__instance(V__SELL,s__Process) & s__instance(V__SELL,s__Selling) & s__patient(V__SELL,V__OBJ) & s__agent(V__SELL,V__AGENT)))') ) ) ).

fof(kb_SUMO_10642,axiom,
    s__subclass(s__OfferingToPurchase,s__Offering) ).

fof(kb_SUMO_10643,axiom,
    s__instance(s__OfferingToPurchase__t,s__SetOrClass) ).

fof(kb_SUMO_10644,axiom,
    s__documentation(s__OfferingToPurchase,s__EnglishLanguage,'&%Offering to buy something from someone.') ).

fof(kb_SUMO_10645,axiom,
    s__subclass(s__BargainSale,s__Offering) ).

fof(kb_SUMO_10646,axiom,
    s__instance(s__BargainSale__t,s__SetOrClass) ).

fof(kb_SUMO_10647,axiom,
    s__documentation(s__BargainSale,s__EnglishLanguage,'&%Offering to sell something to someone at a reduced price.') ).

%FOL fof(kb_SUMO_10648,axiom,(( (! [V__OBJ,V__SALE] : ((s__instance(V__SALE,s__Process) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__SALE,s__BargainSale) & s__patient(V__SALE,V__OBJ) & s__instance(V__OBJ,s__Object)) => (? [V__PRICE1,V__PRICE2,V__AGENT1,V__AGENT2] : (s__instance(V__AGENT2,s__Agent) & s__instance(V__AGENT1,s__Agent) & s__instance(V__PRICE2,s__CurrencyMeasure) & s__instance(V__PRICE1,s__CurrencyMeasure) & s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__SALE)),'s__price(V__OBJ,V__PRICE1,V__AGENT1)') & s__holdsDuring(s__WhenFn(V__SALE),'s__price(V__OBJ,V__PRICE2,V__AGENT2)') & less(V__PRICE2,V__PRICE1)))))) ))).

fof(kb_SUMO_10649,axiom,
    s__subclass(s__ChristianBible,s__Book) ).

fof(kb_SUMO_10650,axiom,
    s__instance(s__ChristianBible__t,s__SetOrClass) ).

fof(kb_SUMO_10651,axiom,
    s__subsumesContentClass(s__ChristianBible,s__NewTestament) ).

fof(kb_SUMO_10652,axiom,
    s__subsumesContentClass(s__ChristianBible,s__OldTestament) ).

fof(kb_SUMO_10653,axiom,
    s__documentation(s__ChristianBible,s__EnglishLanguage,'Any instance of the collection of writings which is regarded as scripture by those who embrace &%Christianity.') ).

fof(kb_SUMO_10654,axiom,
    s__subclass(s__ChristianGospel,s__Text) ).

fof(kb_SUMO_10655,axiom,
    s__instance(s__ChristianGospel__t,s__SetOrClass) ).

fof(kb_SUMO_10656,axiom,
    s__documentation(s__ChristianGospel,s__EnglishLanguage,'Four books in the New Testament of the &%ChristianBible that describe the life and teachings of Jesus Christ and that are referred to, respectively, as Matthew, Mark, Luke, and John.') ).

fof(kb_SUMO_10657,axiom,
    s__subclass(s__OldTestament,s__Book) ).

fof(kb_SUMO_10658,axiom,
    s__instance(s__OldTestament__t,s__SetOrClass) ).

fof(kb_SUMO_10659,axiom,
    s__documentation(s__OldTestament,s__EnglishLanguage,'The first part of the &%ChristianBible, describing the history of the Hebrew people.') ).

fof(kb_SUMO_10660,axiom,
    s__subclass(s__NewTestament,s__Book) ).

fof(kb_SUMO_10661,axiom,
    s__instance(s__NewTestament__t,s__SetOrClass) ).

fof(kb_SUMO_10662,axiom,
    s__instance(s__Book__t,s__SetOrClass) ).

fof(kb_SUMO_10663,axiom,
    s__subsumesContentClass(s__NewTestament,s__ChristianGospel) ).

fof(kb_SUMO_10664,axiom,
    s__documentation(s__NewTestament,s__EnglishLanguage,'The second and final part of the &%ChristianBible, describing the life and teachings of Jesus Christ and the activities of his apostles.') ).

fof(kb_SUMO_10665,axiom,
    s__instance(s__BeforeCommonEra,s__TimeInterval) ).

fof(kb_SUMO_10666,axiom,
    s__documentation(s__BeforeCommonEra,s__EnglishLanguage,'The &%TimeInterval that runs from &%NegativeInfinity to the time of the birth of Christ.') ).

fof(kb_SUMO_10667,axiom,
    s__BeginFn(s__BeforeCommonEra) = s__NegativeInfinity ).

fof(kb_SUMO_10668,axiom,
    ~ s__overlapsTemporally(s__CommonEra,s__BeforeCommonEra) ).

fof(kb_SUMO_10669,axiom,
    s__instance(s__CommonEra,s__TimeInterval) ).

fof(kb_SUMO_10670,axiom,
    s__documentation(s__CommonEra,s__EnglishLanguage,'The &%TimeInterval that runs from the supposed time of the death of Christ to &%PositiveInfinity.') ).

fof(kb_SUMO_10671,axiom,
    s__EndFn(s__CommonEra) = s__PositiveInfinity ).

fof(kb_SUMO_10672,axiom,
    s__subclass(s__MissionOrganization,s__ReligiousOrganization) ).

fof(kb_SUMO_10673,axiom,
    s__instance(s__MissionOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10674,axiom,
    s__documentation(s__MissionOrganization,s__EnglishLanguage,'The class of &%ReligiousOrganizations that send members to foreign countries with the aim of coverting citizens of those countries to the beliefs of the &%ReligiousOrganization.') ).

fof(kb_SUMO_10675,axiom,
    s__subclass(s__ReligiousBuilding,s__Building) ).

fof(kb_SUMO_10676,axiom,
    s__instance(s__ReligiousBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_10677,axiom,
    s__subclass(s__ReligiousBuilding,s__PlaceOfWorship) ).

fof(kb_SUMO_10678,axiom,
    s__documentation(s__ReligiousBuilding,s__EnglishLanguage,'A &%Building which is intended to be used for religious worship. This class covers churches, temples, religious shrines, etc.') ).

fof(kb_SUMO_10679,axiom,
    s__subclass(s__Steeple,s__StationaryArtifact) ).

fof(kb_SUMO_10680,axiom,
    s__instance(s__Steeple__t,s__SetOrClass) ).

fof(kb_SUMO_10681,axiom,
    s__documentation(s__Steeple,s__EnglishLanguage,'A component of a &%ReligiousBuilding that is tall and narrow and symbolizes the connection between humanity and a deity.') ).

fof(kb_SUMO_10682,axiom,
    ! [V__STEEPLE] :
      ( s__instance(V__STEEPLE,s__Object)
     => ( s__instance(V__STEEPLE,s__Steeple)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__STEEPLE,V__BUILDING) ) ) ) ).

fof(kb_SUMO_10683,axiom,
    s__subclass(s__Ceremony,s__IntentionalProcess) ).

fof(kb_SUMO_10684,axiom,
    s__subclass(s__Ceremony,s__SocialInteraction) ).

fof(kb_SUMO_10685,axiom,
    s__documentation(s__Ceremony,s__EnglishLanguage,'An &%instance of &%Ceremony is a relatively stylized, highly conventional &%SocialInteraction, typically guided or controlled by officials or professionals, to commemorate or mark some transformative event, such as a &%Wedding or a &%Baptizing.') ).

fof(kb_SUMO_10686,axiom,
    s__subclass(s__Wedding,s__Ceremony) ).

fof(kb_SUMO_10687,axiom,
    s__instance(s__Wedding__t,s__SetOrClass) ).

fof(kb_SUMO_10688,axiom,
    s__subclass(s__Wedding,s__Declaring) ).

fof(kb_SUMO_10689,axiom,
    s__documentation(s__Wedding,s__EnglishLanguage,'Any &%Declaring that leads to one person being the &%spouse of another.') ).

%FOL fof(kb_SUMO_10690,axiom,(( (! [V__WED] : (s__instance(V__WED,s__Physical) => (s__instance(V__WED,s__Wedding) => (? [V__PERSON1,V__PERSON2] : (s__instance(V__PERSON2,s__Human) & s__instance(V__PERSON1,s__Human) & s__holdsDuring(s__ImmediateFutureFn(s__WhenFn(V__WED)),'s__spouse(V__PERSON1,V__PERSON2)')))))) ))).

%FOL fof(kb_SUMO_10691,axiom,(( (! [V__T1,V__P2,V__P1] : ((s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human)) => ((s__holdsDuring(V__T1,'s__spouse(V__P1,V__P2)') & s__instance(V__T1,s__TimeInterval)) => (? [V__WED] : (s__instance(V__WED,s__Process) & s__instance(V__WED,s__Wedding) & s__patient(V__WED,V__P1) & s__patient(V__WED,V__P2) & s__earlier(s__WhenFn(V__WED),V__T1)))))) ))).

fof(kb_SUMO_10692,axiom,
    s__subclass(s__ReligiousService,s__ReligiousProcess) ).

fof(kb_SUMO_10693,axiom,
    s__subclass(s__ReligiousService,s__Demonstrating) ).

fof(kb_SUMO_10694,axiom,
    s__instance(s__ReligiousService__t,s__SetOrClass) ).

fof(kb_SUMO_10695,axiom,
    s__documentation(s__ReligiousService,s__EnglishLanguage,'A formal process of public worship which is typically carried out in a church, temple or other sanctified building and which typically accords with a prescribed set of rules.') ).

fof(kb_SUMO_10696,axiom,
    s__subclass(s__Baptizing,s__Ceremony) ).

fof(kb_SUMO_10697,axiom,
    s__instance(s__Baptizing__t,s__SetOrClass) ).

fof(kb_SUMO_10698,axiom,
    s__subclass(s__Baptizing,s__ReligiousProcess) ).

fof(kb_SUMO_10699,axiom,
    s__subclass(s__Baptizing,s__JoiningAnOrganization) ).

fof(kb_SUMO_10700,axiom,
    s__documentation(s__Baptizing,s__EnglishLanguage,'A &%ReligiousProcess which marks the acceptance of the person being baptized into the &%ReligiousOrganization.') ).

fof(kb_SUMO_10701,axiom,
    ! [V__B,V__H] :
      ( s__instance(V__B,s__Process)
     => ( ( s__instance(V__B,s__Baptizing)
          & s__patient(V__B,V__H) )
       => s__instance(V__H,s__Human) ) ) ).

fof(kb_SUMO_10702,axiom,
    s__subclass(s__Praying,s__ReligiousProcess) ).

fof(kb_SUMO_10703,axiom,
    s__subclass(s__Praying,s__Requesting) ).

fof(kb_SUMO_10704,axiom,
    s__instance(s__Praying__t,s__SetOrClass) ).

fof(kb_SUMO_10705,axiom,
    s__documentation(s__Praying,s__EnglishLanguage,'A formal or informal process of private worship which may or may not be carried out in a &%ReligiousBuilding.') ).

fof(kb_SUMO_10706,axiom,
    s__subclass(s__ReferenceText,s__FactualText) ).

fof(kb_SUMO_10707,axiom,
    s__instance(s__ReferenceText__t,s__SetOrClass) ).

fof(kb_SUMO_10708,axiom,
    s__documentation(s__ReferenceText,s__EnglishLanguage,'A &%Text which is not intended to be read from beginning to end, but which is meant to be consulted to answer specific factual questions, e.g. about the meaning of a word, the location of a country, etc.') ).

fof(kb_SUMO_10709,axiom,
    s__subclass(s__IndependentState,s__GeopoliticalArea) ).

fof(kb_SUMO_10710,axiom,
    s__subclass(s__IndependentState,s__Nation) ).

fof(kb_SUMO_10711,axiom,
    s__instance(s__IndependentState__t,s__SetOrClass) ).

fof(kb_SUMO_10712,axiom,
    s__documentation(s__IndependentState,s__EnglishLanguage,'&%IndependentState is a subclass of &%GeopoliticalArea, representing the classification Independent State used by the CIA World Fact Book. Cf. &%DependencyOrSpecialSovereigntyArea.') ).

fof(kb_SUMO_10713,axiom,
    s__subclass(s__DependencyOrSpecialSovereigntyArea,s__GeopoliticalArea) ).

fof(kb_SUMO_10714,axiom,
    s__disjoint(s__IndependentState,s__DependencyOrSpecialSovereigntyArea) ).

fof(kb_SUMO_10715,axiom,
    s__subclass(s__OverseasArea,s__DependencyOrSpecialSovereigntyArea) ).

fof(kb_SUMO_10716,axiom,
    s__instance(s__OverseasArea__t,s__SetOrClass) ).

fof(kb_SUMO_10717,axiom,
    s__instance(s__DependencyOrSpecialSovereigntyArea__t,s__SetOrClass) ).

fof(kb_SUMO_10718,axiom,
    s__documentation(s__DependencyOrSpecialSovereigntyArea,s__EnglishLanguage,'&%DependencyOrSpecialSovereigntyArea is a subclass of &%GeopoliticalArea, representing the classification Dependency or Special Sovereignty Area used by the CIA World Fact Book. Cf. &%IndependentState.') ).

fof(kb_SUMO_10719,axiom,
    s__instance(s__ResidentFn__m,s__UnaryFunction) ).

fof(kb_SUMO_10720,axiom,
    s__domain(s__ResidentFn__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_10721,axiom,
    s__range(s__ResidentFn__m,s__GroupOfPeople) ).

fof(kb_SUMO_10722,axiom,
    s__documentation(s__ResidentFn__m,s__EnglishLanguage,'(&%ResidentFn ?AREA) denotes the &%GroupOfPeople who have their &%home in ?AREA.') ).

fof(kb_SUMO_10723,axiom,
    ! [V__PERSON,V__AREA] :
      ( ( s__instance(V__AREA,s__GeopoliticalArea)
        & s__instance(V__AREA,s__PermanentResidence)
        & s__instance(V__PERSON,s__Human) )
     => ( s__member(V__PERSON,s__ResidentFn(V__AREA))
       => s__home(V__PERSON,V__AREA) ) ) ).

fof(kb_SUMO_10724,axiom,
    s__subrelation(s__CitizenryFn__m,s__ResidentFn__m) ).

fof(kb_SUMO_10725,axiom,
    s__domain(s__CitizenryFn__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_10726,axiom,
    s__range(s__CitizenryFn__m,s__GroupOfPeople) ).

fof(kb_SUMO_10727,axiom,
    s__documentation(s__CitizenryFn__m,s__EnglishLanguage,'(&%CitizenryFn ?AREA) denotes the &%GroupOfPeople who are legal and permanent residents of the &%GeopoliticalArea ?AREA.') ).

fof(kb_SUMO_10728,axiom,
    ! [V__CITIZENRY,V__POPULATION,V__AREA] :
      ( ( s__instance(V__POPULATION,s__Quantity)
        & s__instance(V__CITIZENRY,s__Quantity) )
     => ( ( s__instance(V__AREA,s__GeopoliticalArea)
          & V__CITIZENRY = s__CitizenryFn(V__AREA)
          & V__POPULATION = s__ResidentFn(V__AREA) )
       => greatereq(V__POPULATION,V__CITIZENRY) ) ) ).

fof(kb_SUMO_10729,axiom,
    s__instance(s__PerCapitaFn__m,s__BinaryFunction) ).

fof(kb_SUMO_10730,axiom,
    s__domain(s__PerCapitaFn__m,"1",s__Quantity) ).

fof(kb_SUMO_10731,axiom,
    s__domain(s__PerCapitaFn__m,"2",s__GeopoliticalArea) ).

fof(kb_SUMO_10732,axiom,
    s__range(s__PerCapitaFn__m,s__Quantity) ).

fof(kb_SUMO_10733,axiom,
    s__documentation(s__PerCapitaFn__m,s__EnglishLanguage,'(&%PerCapitaFn ?AREA ?QUANTITY) denotes the average amount of ?QUANTITY possessed by a resident of &%GeopoliticalArea ?AREA.') ).

fof(kb_SUMO_10734,axiom,
    ! [V__QUANTITY1,V__QUANTITY2,V__AREA] :
      ( ( s__instance(V__AREA,s__Quantity)
        & s__instance(V__AREA,s__GeopoliticalArea)
        & s__instance(V__QUANTITY1,s__GeopoliticalArea)
        & s__instance(V__QUANTITY1,s__Quantity) )
     => ( s__PerCapitaFn(V__AREA,V__QUANTITY1) = V__QUANTITY2
       => ? [V__POPULATION] :
            ( s__instance(V__POPULATION,s__Quantity)
            & V__POPULATION = s__CardinalityFn(s__ResidentFn(V__AREA))
            & V__QUANTITY2 = divide(V__QUANTITY1,V__POPULATION) ) ) ) ).

fof(kb_SUMO_10735,axiom,
    s__subclass(s__CityDistrict,s__GeopoliticalArea) ).

fof(kb_SUMO_10736,axiom,
    s__documentation(s__CityDistrict,s__EnglishLanguage,'Any &%geopoliticalSubdivision of a &%City.') ).

fof(kb_SUMO_10737,axiom,
    ! [V__DISTRICT] :
      ( s__instance(V__DISTRICT,s__GeopoliticalArea)
     => ( s__instance(V__DISTRICT,s__CityDistrict)
      <=> ? [V__CITY] :
            ( s__instance(V__CITY,s__GeopoliticalArea)
            & s__instance(V__CITY,s__City)
            & s__geopoliticalSubdivision(V__DISTRICT,V__CITY) ) ) ) ).

fof(kb_SUMO_10738,axiom,
    s__subclass(s__Downtown,s__CityDistrict) ).

fof(kb_SUMO_10739,axiom,
    s__instance(s__Downtown__t,s__SetOrClass) ).

fof(kb_SUMO_10740,axiom,
    s__instance(s__CityDistrict__t,s__SetOrClass) ).

fof(kb_SUMO_10741,axiom,
    s__documentation(s__Downtown,s__EnglishLanguage,'The commercial center of a &%City. The part of the &%City that contains more shops and offices than any other part.') ).

fof(kb_SUMO_10742,axiom,
    s__subclass(s__Cemetery,s__LandArea) ).

fof(kb_SUMO_10743,axiom,
    s__instance(s__Cemetery__t,s__SetOrClass) ).

fof(kb_SUMO_10744,axiom,
    s__documentation(s__Cemetery,s__EnglishLanguage,'A &%LandArea which is used for burying the dead.') ).

fof(kb_SUMO_10745,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Cemetery)
       => ? [V__T] :
            ( s__instance(V__T,s__Physical)
            & s__instance(V__T,s__Tomb)
            & s__located(V__T,V__C) ) ) ) ).

fof(kb_SUMO_10746,axiom,
    s__subclass(s__Park,s__LandArea) ).

fof(kb_SUMO_10747,axiom,
    s__instance(s__Park__t,s__SetOrClass) ).

fof(kb_SUMO_10748,axiom,
    s__documentation(s__Park,s__EnglishLanguage,'A publicly owned &%LandArea which is intended to be used for recreation and/or exercise.') ).

fof(kb_SUMO_10749,axiom,
    ! [V__PARK] :
      ( s__instance(V__PARK,s__Object)
     => ( s__instance(V__PARK,s__Park)
       => ? [V__GOV] :
            ( s__instance(V__GOV,s__Agent)
            & s__instance(V__GOV,s__Government)
            & s__possesses(V__GOV,V__PARK) ) ) ) ).

fof(kb_SUMO_10750,axiom,
    ! [V__PARK] :
      ( s__instance(V__PARK,s__Object)
     => ( s__instance(V__PARK,s__Park)
       => s__hasPurpose(V__PARK,'(? [V__REC] : (s__instance(V__REC,s__Process) & s__instance(V__REC,s__RecreationOrExercise) & s__eventLocated(V__REC,V__PARK)))') ) ) ).

fof(kb_SUMO_10751,axiom,
    s__subclass(s__PublicPark,s__Park) ).

fof(kb_SUMO_10752,axiom,
    s__instance(s__PublicPark__t,s__SetOrClass) ).

fof(kb_SUMO_10753,axiom,
    s__documentation(s__PublicPark,s__EnglishLanguage,'A &%Park that is publicly owned, i.e. owned by a &%Government.') ).

fof(kb_SUMO_10754,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__PublicPark)
       => ? [V__G] :
            ( s__instance(V__G,s__Agent)
            & s__instance(V__G,s__Government)
            & s__possesses(V__G,V__P) ) ) ) ).

fof(kb_SUMO_10755,axiom,
    s__subclass(s__CultivatedLandArea,s__LandArea) ).

fof(kb_SUMO_10756,axiom,
    s__instance(s__CultivatedLandArea__t,s__SetOrClass) ).

fof(kb_SUMO_10757,axiom,
    s__documentation(s__CultivatedLandArea,s__EnglishLanguage,'A &%LandArea which is dedicated to &%Agriculture, e.g. &%Lawns, gardens, and fields for growing crops.') ).

fof(kb_SUMO_10758,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__CultivatedLandArea)
       => ? [V__C] :
            ( s__instance(V__C,s__Process)
            & s__instance(V__C,s__Agriculture)
            & s__eventLocated(V__C,V__A) ) ) ) ).

fof(kb_SUMO_10759,axiom,
    s__subclass(s__Campground,s__LandArea) ).

fof(kb_SUMO_10760,axiom,
    s__instance(s__Campground__t,s__SetOrClass) ).

fof(kb_SUMO_10761,axiom,
    s__documentation(s__Campground,s__EnglishLanguage,'A &%LandArea whose purpose is to have &%MobileResidences (e.g. recreational vehicles, mobile homes, &%Tents, etc.) located there.') ).

fof(kb_SUMO_10762,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Campground)
       => s__hasPurpose(V__C,'(? [V__R] : (s__instance(V__R,s__Physical) & s__instance(V__R,s__MobileResidence) & s__located(V__R,V__C)))') ) ) ).

fof(kb_SUMO_10763,axiom,
    s__subclass(s__CityBlock,s__LandArea) ).

fof(kb_SUMO_10764,axiom,
    s__instance(s__CityBlock__t,s__SetOrClass) ).

fof(kb_SUMO_10765,axiom,
    s__documentation(s__CityBlock,s__EnglishLanguage,'A square-shaped area surrounded by &%Roadways which is part of a &%City and typically contains &%Buildings.') ).

fof(kb_SUMO_10766,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__CityBlock)
       => ? [V__C] :
            ( s__instance(V__C,s__Object)
            & s__instance(V__C,s__City)
            & s__part(V__B,V__C) ) ) ) ).

fof(kb_SUMO_10767,axiom,
    s__subclass(s__AerobicExerciseDevice,s__RecreationOrExerciseDevice) ).

fof(kb_SUMO_10768,axiom,
    s__instance(s__AerobicExerciseDevice__t,s__SetOrClass) ).

fof(kb_SUMO_10769,axiom,
    s__instance(s__RecreationOrExerciseDevice__t,s__SetOrClass) ).

fof(kb_SUMO_10770,axiom,
    s__documentation(s__AerobicExerciseDevice,s__EnglishLanguage,'An &%RecreationOrExerciseDevice whose purpose is to develop the cardiovascular system.') ).

fof(kb_SUMO_10771,axiom,
    s__subclass(s__AnaerobicExerciseDevice,s__RecreationOrExerciseDevice) ).

fof(kb_SUMO_10772,axiom,
    s__instance(s__AnaerobicExerciseDevice__t,s__SetOrClass) ).

fof(kb_SUMO_10773,axiom,
    s__disjoint(s__AnaerobicExerciseDevice,s__AerobicExerciseDevice) ).

fof(kb_SUMO_10774,axiom,
    s__documentation(s__AnaerobicExerciseDevice,s__EnglishLanguage,'An &%RecreationOrExerciseDevice whose purpose is to develop &%Muscles without also developing the cardiovascular system.') ).

fof(kb_SUMO_10775,axiom,
    s__subclass(s__SkilledOccupation,s__OccupationalRole) ).

fof(kb_SUMO_10776,axiom,
    s__documentation(s__SkilledOccupation,s__EnglishLanguage,'Any &%Position which requires learning a set of skills.') ).

fof(kb_SUMO_10777,axiom,
    ! [V__OCCUPATION,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Object)
        & s__instance(V__OCCUPATION,s__Attribute) )
     => ( ( s__instance(V__OCCUPATION,s__SkilledOccupation)
          & s__attribute(V__PERSON,V__OCCUPATION) )
       => ? [V__TRAINING] :
            ( s__instance(V__TRAINING,s__Process)
            & s__instance(V__TRAINING,s__EducationalProcess)
            & s__destination(V__TRAINING,V__PERSON) ) ) ) ).

fof(kb_SUMO_10778,axiom,
    s__subclass(s__ManualLabor,s__Position) ).

fof(kb_SUMO_10779,axiom,
    s__subclass(s__ManualLabor,s__OccupationalRole) ).

fof(kb_SUMO_10780,axiom,
    s__documentation(s__ManualLabor,s__EnglishLanguage,'Any &%Position which involves manual work.') ).

fof(kb_SUMO_10781,axiom,
    s__subclass(s__UnskilledOccupation,s__ManualLabor) ).

fof(kb_SUMO_10782,axiom,
    s__instance(s__UnskilledOccupation__t,s__SetOrClass) ).

fof(kb_SUMO_10783,axiom,
    s__disjoint(s__UnskilledOccupation,s__SkilledOccupation) ).

fof(kb_SUMO_10784,axiom,
    s__documentation(s__UnskilledOccupation,s__EnglishLanguage,'Any &%Position which does not require learning a set of skills.') ).

fof(kb_SUMO_10785,axiom,
    s__subclass(s__OccupationalTrade,s__SkilledOccupation) ).

fof(kb_SUMO_10786,axiom,
    s__subclass(s__OccupationalTrade,s__ManualLabor) ).

fof(kb_SUMO_10787,axiom,
    s__instance(s__ManualLabor__t,s__SetOrClass) ).

fof(kb_SUMO_10788,axiom,
    s__documentation(s__OccupationalTrade,s__EnglishLanguage,'Any &%Position that involves skilled manual work.') ).

fof(kb_SUMO_10789,axiom,
    s__subclass(s__Profession,s__SkilledOccupation) ).

fof(kb_SUMO_10790,axiom,
    s__instance(s__SkilledOccupation__t,s__SetOrClass) ).

fof(kb_SUMO_10791,axiom,
    s__disjoint(s__Profession,s__OccupationalTrade) ).

fof(kb_SUMO_10792,axiom,
    s__documentation(s__Profession,s__EnglishLanguage,'Any occupation that requires at least a bachelors degree.') ).

%FOL fof(kb_SUMO_10793,axiom,(( (! [V__HUMAN,V__T1,V__ROLE] : ((s__instance(V__ROLE,s__Attribute) & s__instance(V__T1,s__TimePosition) & s__instance(V__HUMAN,s__CognitiveAgent)) => (((s__instance(V__ROLE,s__OccupationalTrade) | s__instance(V__ROLE,s__Profession)) & s__holdsDuring(V__T1,'s__attribute(V__HUMAN,V__ROLE)')) => (? [V__FIELD] : (s__instance(V__FIELD,s__Formula) & s__instance(V__FIELD,s__FieldOfStudy) & s__holdsDuring(V__T1,'s__knows(V__HUMAN,V__FIELD)')))))) ))).

fof(kb_SUMO_10794,axiom,
    s__documentation(s__GovernmentSecretary,s__EnglishLanguage,'This &%Position &%Attribute describes a person who is head of an adminstrative department of &%Government.') ).

fof(kb_SUMO_10795,axiom,
    s__instance(s__GovernmentSecretary,s__GovernmentPosition) ).

fof(kb_SUMO_10796,axiom,
    s__instance(s__SecretaryOfTheInterior,s__GovernmentPosition) ).

fof(kb_SUMO_10797,axiom,
    s__subAttribute(s__SecretaryOfTheInterior,s__GovernmentSecretary) ).

fof(kb_SUMO_10798,axiom,
    s__documentation(s__SecretaryOfTheInterior,s__EnglishLanguage,'This &%Position &%Attribute describes the head of the &%UnitedStatesDepartmentOfInterior.') ).

fof(kb_SUMO_10799,axiom,
    s__instance(s__SecretaryOfTheTreasury,s__GovernmentPosition) ).

fof(kb_SUMO_10800,axiom,
    s__subAttribute(s__SecretaryOfTheTreasury,s__GovernmentSecretary) ).

fof(kb_SUMO_10801,axiom,
    s__documentation(s__SecretaryOfTheTreasury,s__EnglishLanguage,'This &%Position &%Attribute describes the head of the United States Treasury Department.') ).

fof(kb_SUMO_10802,axiom,
    s__subclass(s__StateGovernment,s__Government) ).

fof(kb_SUMO_10803,axiom,
    s__instance(s__StateGovernment__t,s__SetOrClass) ).

fof(kb_SUMO_10804,axiom,
    s__documentation(s__StateGovernment,s__EnglishLanguage,'The class of &%Governments whose jurisdictions are &%StateOrProvinces.') ).

fof(kb_SUMO_10805,axiom,
    ! [V__STATE] :
      ( s__instance(V__STATE,s__GeopoliticalArea)
     => ( s__instance(V__STATE,s__StateOrProvince)
      <=> s__instance(s__GovernmentFn(V__STATE),s__StateGovernment) ) ) ).

fof(kb_SUMO_10806,axiom,
    s__subclass(s__CityGovernment,s__Government) ).

fof(kb_SUMO_10807,axiom,
    s__instance(s__CityGovernment__t,s__SetOrClass) ).

fof(kb_SUMO_10808,axiom,
    s__documentation(s__CityGovernment,s__EnglishLanguage,'&%CityGovernment is the class of governments of &%Cities.') ).

fof(kb_SUMO_10809,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__GeopoliticalArea)
     => ( s__instance(V__C,s__City)
      <=> s__instance(s__GovernmentFn(V__C),s__CityGovernment) ) ) ).

fof(kb_SUMO_10810,axiom,
    s__subclass(s__MilitaryService,s__MilitaryOrganization) ).

fof(kb_SUMO_10811,axiom,
    s__documentation(s__MilitaryService,s__EnglishLanguage,'A branch of the armed forces of a &%Nation. For example, there are five military services in the United States, the army, the navy, the air force, the marines, and the coast guard.') ).

fof(kb_SUMO_10812,axiom,
    s__subclass(s__CoastGuard,s__GovernmentOrganization) ).

fof(kb_SUMO_10813,axiom,
    s__instance(s__CoastGuard__t,s__SetOrClass) ).

fof(kb_SUMO_10814,axiom,
    s__documentation(s__CoastGuard,s__EnglishLanguage,'&%CoastGuard is the subclass of &%GovernmentOrganizations that enforce the maritime laws of a &%Nation and guard its &%Seacoast. This may be a military or quasi-military organization.') ).

fof(kb_SUMO_10815,axiom,
    s__subclass(s__Army,s__MilitaryService) ).

fof(kb_SUMO_10816,axiom,
    s__instance(s__Army__t,s__SetOrClass) ).

fof(kb_SUMO_10817,axiom,
    s__instance(s__MilitaryService__t,s__SetOrClass) ).

fof(kb_SUMO_10818,axiom,
    s__documentation(s__Army,s__EnglishLanguage,'&%MilitaryServices that are land forces.') ).

fof(kb_SUMO_10819,axiom,
    s__subclass(s__AirForce,s__MilitaryService) ).

fof(kb_SUMO_10820,axiom,
    s__instance(s__AirForce__t,s__SetOrClass) ).

fof(kb_SUMO_10821,axiom,
    s__documentation(s__AirForce,s__EnglishLanguage,'&%AirForce is the subclass of &%MilitaryService that comprises military air forces.') ).

fof(kb_SUMO_10822,axiom,
    s__subclass(s__MilitaryUnit,s__MilitaryOrganization) ).

fof(kb_SUMO_10823,axiom,
    s__instance(s__MilitaryUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10824,axiom,
    s__documentation(s__MilitaryUnit,s__EnglishLanguage,'Any &%MilitaryOrganization that can be dispatched to an area of operations.') ).

fof(kb_SUMO_10825,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Process)
     => ( s__instance(V__B,s__Battle)
       => ? [V__U1,V__U2] :
            ( s__instance(V__U2,s__Agent)
            & s__instance(V__U1,s__Agent)
            & s__instance(V__U1,s__MilitaryUnit)
            & s__instance(V__U2,s__MilitaryUnit)
            & V__U1 != V__U2
            & s__agent(V__B,V__U1)
            & s__agent(V__B,V__U2) ) ) ) ).

fof(kb_SUMO_10826,axiom,
    s__subclass(s__MilitaryReserveForce,s__MilitaryOrganization) ).

fof(kb_SUMO_10827,axiom,
    s__instance(s__MilitaryReserveForce__t,s__SetOrClass) ).

fof(kb_SUMO_10828,axiom,
    s__documentation(s__MilitaryReserveForce,s__EnglishLanguage,'&%MilitaryReserveForce is the subclass of &%MilitaryOrganizations that consist of forces trained in military procedures and activities, which are subject to being called to active duty if needed.') ).

fof(kb_SUMO_10829,axiom,
    s__subclass(s__MilitarySquad,s__MilitaryUnit) ).

fof(kb_SUMO_10830,axiom,
    s__instance(s__MilitarySquad__t,s__SetOrClass) ).

fof(kb_SUMO_10831,axiom,
    s__documentation(s__MilitarySquad,s__EnglishLanguage,'Any &%MilitaryUnit with the rank of squad.') ).

fof(kb_SUMO_10832,axiom,
    s__subclass(s__MilitaryCorps,s__MilitaryUnit) ).

fof(kb_SUMO_10833,axiom,
    s__instance(s__MilitaryCorps__t,s__SetOrClass) ).

fof(kb_SUMO_10834,axiom,
    s__documentation(s__MilitaryCorps,s__EnglishLanguage,'Any &%MilitaryUnit with the rank of corps.') ).

fof(kb_SUMO_10835,axiom,
    s__subclass(s__CavalryUnit,s__MilitaryUnit) ).

fof(kb_SUMO_10836,axiom,
    s__instance(s__CavalryUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10837,axiom,
    s__documentation(s__CavalryUnit,s__EnglishLanguage,'&%MilitaryUnits composed primarily of &%Soldiers who are mounted, i.e. who perform their combat missions from a &%Horse or &%Vehicle.') ).

fof(kb_SUMO_10838,axiom,
    ! [V__B,V__C] :
      ( ( s__instance(V__C,s__Agent)
        & s__instance(V__C,s__Collection)
        & s__instance(V__B,s__Process)
        & s__instance(V__B,s__TimeInterval) )
     => ( ( s__instance(V__C,s__CavalryUnit)
          & s__instance(V__B,s__Battle)
          & s__agent(V__B,V__C) )
       => ? [V__P,V__V,V__T] :
            ( s__instance(V__T,s__Process)
            & s__instance(V__T,s__TimeInterval)
            & s__instance(V__P,s__SelfConnectedObject)
            & s__instance(V__P,s__Agent)
            & s__attribute(V__P,s__Soldier)
            & s__member(V__P,V__C)
            & s__instance(V__T,s__Transportation)
            & s__agent(V__T,V__P)
            & s__instance(V__V,s__Vehicle)
            & s__patient(V__T,V__V)
            & s__during(V__T,V__B) ) ) ) ).

fof(kb_SUMO_10839,axiom,
    s__subclass(s__MilitarySurplus,s__MilitaryArtifact) ).

fof(kb_SUMO_10840,axiom,
    s__instance(s__MilitarySurplus__t,s__SetOrClass) ).

fof(kb_SUMO_10841,axiom,
    s__documentation(s__MilitarySurplus,s__EnglishLanguage,'Any &%MilitaryArtifact which is sold to a non-military customer.') ).

fof(kb_SUMO_10842,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__MilitarySurplus)
     => ? [V__A,V__B] :
          ( s__instance(V__B,s__Process)
          & s__instance(V__A,s__SelfConnectedObject)
          & s__instance(V__B,s__Buying)
          & s__patient(V__B,V__A)
          & ~ s__instance(V__A,s__MilitaryOrganization)
          & ~ s__member(V__A,s__MilitaryOrganization) ) ) ).

fof(kb_SUMO_10843,axiom,
    s__documentation(s__hostileForces__m,s__EnglishLanguage,'(hostileForces ?UNIT1 ?UNIT2) means that the &%MilitaryUnits ?UNIT1 and ?UNIT2 are, respectively, allied with &%GeopoliticalAreas that are at war with one another.') ).

fof(kb_SUMO_10844,axiom,
    s__instance(s__hostileForces__m,s__BinaryPredicate) ).

fof(kb_SUMO_10845,axiom,
    s__instance(s__hostileForces__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_10846,axiom,
    s__domain(s__hostileForces__m,"1",s__MilitaryUnit) ).

fof(kb_SUMO_10847,axiom,
    s__domain(s__hostileForces__m,"2",s__MilitaryUnit) ).

fof(kb_SUMO_10848,axiom,
    ! [V__U2,V__U1,V__WAR] :
      ( ( s__instance(V__U1,s__MilitaryUnit)
        & s__instance(V__U2,s__MilitaryUnit) )
     => ( s__hostileForces(V__U1,V__U2)
       => ? [V__W,V__A1,V__A2] :
            ( s__instance(V__A2,s__GeopoliticalArea)
            & s__instance(V__A1,s__GeopoliticalArea)
            & s__instance(V__W,s__Contest)
            & s__instance(V__WAR,s__War)
            & s__contestParticipant(V__W,V__A1)
            & s__contestParticipant(V__W,V__A2)
            & s__subOrganization(V__U1,s__GovernmentFn(V__A1))
            & s__subOrganization(V__U2,s__GovernmentFn(V__A2)) ) ) ) ).

fof(kb_SUMO_10849,axiom,
    s__subclass(s__Commission,s__Organization) ).

fof(kb_SUMO_10850,axiom,
    s__instance(s__Commission__t,s__SetOrClass) ).

fof(kb_SUMO_10851,axiom,
    s__documentation(s__Commission,s__EnglishLanguage,'A small, temporary &%Organization whose purpose is to investigate some issue.') ).

fof(kb_SUMO_10852,axiom,
    ! [V__COMMISSION] :
      ( s__instance(V__COMMISSION,s__Agent)
     => ( s__instance(V__COMMISSION,s__Commission)
       => s__hasPurpose(V__COMMISSION,'(? [V__INVESTIGATE,V__ISSUE] : (s__instance(V__INVESTIGATE,s__Process) & s__instance(V__INVESTIGATE,s__Investigating) & s__patient(V__INVESTIGATE,V__ISSUE) & s__agent(V__INVESTIGATE,V__COMMISSION)))') ) ) ).

fof(kb_SUMO_10853,axiom,
    s__subclass(s__ServiceOrganization,s__Organization) ).

fof(kb_SUMO_10854,axiom,
    s__instance(s__ServiceOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10855,axiom,
    s__documentation(s__ServiceOrganization,s__EnglishLanguage,'An &%Organization that performs a public service and is regulated by the &%Government.') ).

fof(kb_SUMO_10856,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__ServiceOrganization)
     => ? [V__PROC,V__GOV] :
          ( s__instance(V__GOV,s__Agent)
          & s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__RegulatoryProcess)
          & s__patient(V__PROC,V__ORG)
          & s__agent(V__PROC,V__GOV)
          & s__instance(V__GOV,s__Government) ) ) ).

fof(kb_SUMO_10857,axiom,
    s__subclass(s__Library,s__EducationalOrganization) ).

fof(kb_SUMO_10858,axiom,
    s__instance(s__Library__t,s__SetOrClass) ).

fof(kb_SUMO_10859,axiom,
    s__documentation(s__Library,s__EnglishLanguage,'An &%EducationalOrganization which is a repository of &%Texts which have been classified for efficient retrieval.') ).

fof(kb_SUMO_10860,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Agent)
     => ( s__instance(V__L,s__Library)
       => ? [V__B,V__T] :
            ( s__instance(V__T,s__Physical)
            & s__instance(V__B,s__Object)
            & s__possesses(V__L,V__B)
            & s__instance(V__B,s__Building)
            & s__instance(V__T,s__Text)
            & s__located(V__T,V__B) ) ) ) ).

fof(kb_SUMO_10861,axiom,
    s__subclass(s__PublicLibrary,s__Library) ).

fof(kb_SUMO_10862,axiom,
    s__subclass(s__PublicLibrary,s__GovernmentOrganization) ).

fof(kb_SUMO_10863,axiom,
    s__instance(s__PublicLibrary__t,s__SetOrClass) ).

fof(kb_SUMO_10864,axiom,
    s__documentation(s__PublicLibrary,s__EnglishLanguage,'A &%Library which is financed by taxes and which is open to everyone.') ).

fof(kb_SUMO_10865,axiom,
    s__subclass(s__Museum,s__EducationalOrganization) ).

fof(kb_SUMO_10866,axiom,
    s__instance(s__Museum__t,s__SetOrClass) ).

fof(kb_SUMO_10867,axiom,
    s__documentation(s__Museum,s__EnglishLanguage,'An &%EducationalOrganization where &%Artifacts of historic, scientific or aesthetic value are collected and exhibited.') ).

fof(kb_SUMO_10868,axiom,
    s__subclass(s__OrganizationalBoard,s__Organization) ).

fof(kb_SUMO_10869,axiom,
    s__instance(s__OrganizationalBoard__t,s__SetOrClass) ).

fof(kb_SUMO_10870,axiom,
    s__documentation(s__OrganizationalBoard,s__EnglishLanguage,'Part of an &%Organization that is responsible for managing the &%Organization.') ).

fof(kb_SUMO_10871,axiom,
    ! [V__BOARD] :
      ( s__instance(V__BOARD,s__Organization)
     => ( s__instance(V__BOARD,s__OrganizationalBoard)
       => ? [V__ORG,V__MANAGE] :
            ( s__instance(V__MANAGE,s__Process)
            & s__instance(V__ORG,s__Organization)
            & s__subOrganization(V__BOARD,V__ORG)
            & s__instance(V__MANAGE,s__Managing)
            & s__agent(V__MANAGE,V__BOARD)
            & s__patient(V__MANAGE,V__ORG) ) ) ) ).

fof(kb_SUMO_10872,axiom,
    s__subclass(s__SecurityUnit,s__Organization) ).

fof(kb_SUMO_10873,axiom,
    s__instance(s__SecurityUnit__t,s__SetOrClass) ).

fof(kb_SUMO_10874,axiom,
    s__documentation(s__SecurityUnit,s__EnglishLanguage,'The &%Organization that is charged with ensuring the security of members of the overall &%Organization and the property of the &%Organization.') ).

fof(kb_SUMO_10875,axiom,
    ! [V__ORG,V__UNIT] :
      ( ( s__instance(V__UNIT,s__Organization)
        & s__instance(V__UNIT,s__CognitiveAgent)
        & s__instance(V__ORG,s__Organization) )
     => ( ( s__instance(V__UNIT,s__SecurityUnit)
          & s__subOrganization(V__UNIT,V__ORG) )
       => s__holdsObligation('(? [V__MAINTAIN] : (s__instance(V__MAINTAIN,s__Process) & s__instance(V__MAINTAIN,s__Maintaining) & s__agent(V__MAINTAIN,V__UNIT) & s__patient(V__MAINTAIN,V__ORG)))',V__UNIT) ) ) ).

fof(kb_SUMO_10876,axiom,
    s__subclass(s__UnionOrganization,s__Organization) ).

fof(kb_SUMO_10877,axiom,
    s__instance(s__UnionOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_10878,axiom,
    s__documentation(s__UnionOrganization,s__EnglishLanguage,'An &%Organization comprised of workers from the same &%Corporation or &%Industry. The purpose of the &%UnionOrganization is to strengthen its representation in bargaining with the &%Corporation or &%Industry.') ).

fof(kb_SUMO_10879,axiom,
    ! [V__MEMBER,V__ORG] :
      ( ( s__instance(V__ORG,s__Collection)
        & s__instance(V__MEMBER,s__SelfConnectedObject)
        & s__instance(V__MEMBER,s__CognitiveAgent) )
     => ( s__instance(V__ORG,s__UnionOrganization)
       => ? [V__COLL] :
            ( s__member(V__MEMBER,V__ORG)
           => ( ( s__instance(V__COLL,s__Corporation)
                & s__employs(V__COLL,V__MEMBER) )
              | ? [V__CORP] :
                  ( s__instance(V__CORP,s__SelfConnectedObject)
                  & s__instance(V__CORP,s__Organization)
                  & s__instance(V__COLL,s__Organization)
                  & s__instance(V__COLL,s__Industry)
                  & s__member(V__CORP,V__COLL)
                  & s__employs(V__CORP,V__MEMBER) ) ) ) ) ) ).

fof(kb_SUMO_10880,axiom,
    s__subclass(s__OrganicCompound,s__CompoundSubstance) ).

fof(kb_SUMO_10881,axiom,
    s__documentation(s__OrganicCompound,s__EnglishLanguage,'Any &%CompoundSubstance that has a &%Carbon base.') ).

fof(kb_SUMO_10882,axiom,
    ! [V__COMPOUND] :
      ( s__instance(V__COMPOUND,s__Object)
     => ( ( s__instance(V__COMPOUND,s__OrganicCompound)
          & s__instance(V__COMPOUND,s__Molecule) )
       => ? [V__CARBON] :
            ( s__instance(V__CARBON,s__Object)
            & s__instance(V__CARBON,s__Carbon)
            & s__part(V__CARBON,V__COMPOUND) ) ) ) ).

fof(kb_SUMO_10883,axiom,
    s__subclass(s__Urea,s__OrganicCompound) ).

fof(kb_SUMO_10884,axiom,
    s__instance(s__Urea__t,s__SetOrClass) ).

fof(kb_SUMO_10885,axiom,
    s__documentation(s__Urea,s__EnglishLanguage,'Urea is a dry, soluble, nitrogenous substance that is the major solid component of the urine of mammals, and which may be synthesized from ammonia and carbon dioxide, it is useful in the production of &%Plastic and in &%Fertilizers.') ).

fof(kb_SUMO_10886,axiom,
    s__subclass(s__Steroid,s__OrganicCompound) ).

fof(kb_SUMO_10887,axiom,
    s__subclass(s__Steroid,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_10888,axiom,
    s__documentation(s__Steroid,s__EnglishLanguage,'A class of &%OrganicCompounds having the same basic chemical structure and having significant physiological effects.') ).

fof(kb_SUMO_10889,axiom,
    s__subclass(s__Hydrocarbon,s__OrganicCompound) ).

fof(kb_SUMO_10890,axiom,
    s__instance(s__Hydrocarbon__t,s__SetOrClass) ).

fof(kb_SUMO_10891,axiom,
    s__documentation(s__Hydrocarbon,s__EnglishLanguage,'Any &%OrganicCompound that contains only &%Carbon and &%Hydrogen.') ).

fof(kb_SUMO_10892,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Hydrocarbon)
     => ? [V__P1,V__P2] :
          ( s__instance(V__P2,s__Object)
          & s__instance(V__P1,s__Object)
          & V__S = s__MereologicalSumFn(V__P1,V__P2)
          & s__instance(V__P1,s__Carbon)
          & s__instance(V__P2,s__Hydrogen) ) ) ).

fof(kb_SUMO_10893,axiom,
    s__subclass(s__Alcohol,s__OrganicCompound) ).

fof(kb_SUMO_10894,axiom,
    s__instance(s__Alcohol__t,s__SetOrClass) ).

fof(kb_SUMO_10895,axiom,
    s__instance(s__OrganicCompound__t,s__SetOrClass) ).

fof(kb_SUMO_10896,axiom,
    s__documentation(s__Alcohol,s__EnglishLanguage,'&%OrganicCompounds that are produced from hydrocarbons by distillation.') ).

fof(kb_SUMO_10897,axiom,
    s__subclass(s__Alkaloid,s__ChemicalBase) ).

fof(kb_SUMO_10898,axiom,
    s__instance(s__Alkaloid__t,s__SetOrClass) ).

fof(kb_SUMO_10899,axiom,
    s__instance(s__ChemicalBase__t,s__SetOrClass) ).

fof(kb_SUMO_10900,axiom,
    s__subclass(s__Alkaloid,s__PlantSubstance) ).

fof(kb_SUMO_10901,axiom,
    s__subclass(s__Alkaloid,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_10902,axiom,
    s__documentation(s__Alkaloid,s__EnglishLanguage,'A &%ChemicalBase found in &%Plants that has physiological and psychological effects.') ).

fof(kb_SUMO_10903,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__Alkaloid)
       => ? [V__N] :
            ( s__instance(V__N,s__Object)
            & s__instance(V__N,s__Nitrogen)
            & s__part(V__N,V__A) ) ) ) ).

fof(kb_SUMO_10904,axiom,
    s__instance(s__Drugged,s__ConsciousnessAttribute) ).

fof(kb_SUMO_10905,axiom,
    s__contraryAttribute_2(s__Drugged,s__Sober) ).

fof(kb_SUMO_10906,axiom,
    s__documentation(s__Drugged,s__EnglishLanguage,'The &%ConsciousnessAttribute of someone whose motor and/or cognitive faculties are significantly impaired by a &%BiologicallyActiveSubstance.') ).

%FOL fof(kb_SUMO_10907,axiom,(( (! [V__P,V__T] : ((s__instance(V__T,s__TimePosition) & s__instance(V__P,s__Object)) => (s__holdsDuring(V__T,'s__attribute(V__P,s__Drugged)') => s__holdsDuring(V__T,'(? [V__B] : (s__instance(V__B,s__Object) & s__instance(V__B,s__BiologicallyActiveSubstance) & s__part(V__B,V__P)))')))) ))).

fof(kb_SUMO_10908,axiom,
    s__subAttribute(s__Drunk,s__Drugged) ).

fof(kb_SUMO_10909,axiom,
    s__documentation(s__Drunk,s__EnglishLanguage,'The &%ConsciousnessAttribute of someone whose motor and cognitive faculties are significantly impaired by &%Alcohol.') ).

%FOL fof(kb_SUMO_10910,axiom,(( (! [V__TIME,V__PERSON] : ((s__instance(V__PERSON,s__Agent) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__attribute(V__PERSON,s__Drunk)') => (? [V__PAST] : (s__temporalPart(V__PAST,s__PastFn(V__TIME)) & s__holdsDuring(V__PAST,'(? [V__DRINK,V__ALCOHOL] : (s__instance(V__DRINK,s__Process) & s__instance(V__PAST,s__TimePosition) & s__instance(V__DRINK,s__Drinking) & s__patient(V__DRINK,V__ALCOHOL) & s__instance(V__ALCOHOL,s__AlcoholicBeverage) & s__agent(V__DRINK,V__PERSON)))')))))) ))).

%FOL fof(kb_SUMO_10911,axiom,(( (! [V__P,V__T] : ((s__instance(V__T,s__TimePosition) & s__instance(V__P,s__Object)) => (s__holdsDuring(V__T,'s__attribute(V__P,s__Drunk)') => s__holdsDuring(V__T,'(? [V__B] : (s__instance(V__B,s__Object) & s__instance(V__B,s__Alcohol) & s__part(V__B,V__P)))')))) ))).

fof(kb_SUMO_10912,axiom,
    s__subclass(s__AminoAcid,s__ChemicalAcid) ).

fof(kb_SUMO_10913,axiom,
    s__instance(s__AminoAcid__t,s__SetOrClass) ).

fof(kb_SUMO_10914,axiom,
    s__instance(s__ChemicalAcid__t,s__SetOrClass) ).

fof(kb_SUMO_10915,axiom,
    s__subclass(s__AminoAcid,s__OrganicCompound) ).

fof(kb_SUMO_10916,axiom,
    s__documentation(s__AminoAcid,s__EnglishLanguage,'Organic acids that are the building blocks of &%Proteins.') ).

fof(kb_SUMO_10917,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Object)
     => ( s__instance(V__P,s__Protein)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__AminoAcid)
            & s__part(V__A,V__P) ) ) ) ).

fof(kb_SUMO_10918,axiom,
    s__subclass(s__Cholesterol,s__Steroid) ).

fof(kb_SUMO_10919,axiom,
    s__instance(s__Cholesterol__t,s__SetOrClass) ).

fof(kb_SUMO_10920,axiom,
    s__instance(s__Steroid__t,s__SetOrClass) ).

fof(kb_SUMO_10921,axiom,
    s__subclass(s__Cholesterol,s__AnimalSubstance) ).

fof(kb_SUMO_10922,axiom,
    s__documentation(s__Cholesterol,s__EnglishLanguage,'A &%Steroid that is produced by the &%Liver and that is believed to be closely associated with various cardiological disorders.') ).

fof(kb_SUMO_10923,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Cholesterol)
     => ? [V__P,V__L] :
          ( s__instance(V__L,s__Object)
          & s__instance(V__P,s__Process)
          & s__instance(V__P,s__BiologicalProcess)
          & s__eventLocated(V__P,V__L)
          & s__instance(V__L,s__Liver)
          & s__result(V__P,V__S) ) ) ).

fof(kb_SUMO_10924,axiom,
    s__subclass(s__ChemicalAcid,s__CompoundSubstance) ).

fof(kb_SUMO_10925,axiom,
    s__disjoint(s__ChemicalAcid,s__ChemicalBase) ).

fof(kb_SUMO_10926,axiom,
    s__documentation(s__ChemicalAcid,s__EnglishLanguage,'A bitter &%CompoundSubstance that is capable of reacting with a &%ChemicalBase and forming a &%ChemicalSalt.') ).

fof(kb_SUMO_10927,axiom,
    ! [V__C,V__CB,V__CA] :
      ( s__instance(V__C,s__Process)
     => ( ( s__instance(V__CA,s__ChemicalAcid)
          & s__instance(V__CB,s__ChemicalBase)
          & s__instance(V__C,s__ChemicalProcess)
          & s__patient(V__C,V__CA)
          & s__patient(V__C,V__CB) )
       => ? [V__CS] :
            ( s__instance(V__CS,s__ChemicalSalt)
            & s__result(V__C,V__CS) ) ) ) ).

fof(kb_SUMO_10928,axiom,
    s__subclass(s__ChemicalBase,s__CompoundSubstance) ).

fof(kb_SUMO_10929,axiom,
    s__documentation(s__ChemicalBase,s__EnglishLanguage,'A &%CompoundSubstance that is capable of reacting with a &%ChemicalAcid and forming a &%ChemicalSalt.') ).

fof(kb_SUMO_10930,axiom,
    s__subclass(s__ChemicalSalt,s__CompoundSubstance) ).

fof(kb_SUMO_10931,axiom,
    s__documentation(s__ChemicalSalt,s__EnglishLanguage,'A bitter &%CompoundSubstance that is formed in a chemical reaction of a &%ChemicalBase with a &%ChemicalAcid.') ).

fof(kb_SUMO_10932,axiom,
    s__subclass(s__SodiumChloride,s__ChemicalSalt) ).

fof(kb_SUMO_10933,axiom,
    s__instance(s__SodiumChloride__t,s__SetOrClass) ).

fof(kb_SUMO_10934,axiom,
    s__instance(s__ChemicalSalt__t,s__SetOrClass) ).

fof(kb_SUMO_10935,axiom,
    s__names(salt,s__SodiumChloride) ).

fof(kb_SUMO_10936,axiom,
    s__names('NaCl',s__SodiumChloride) ).

fof(kb_SUMO_10937,axiom,
    s__documentation(s__SodiumChloride,s__EnglishLanguage,'&%SodiumChloride is the compound of &%Sodium and &%Chloride, which may appear in crystalline form or in solution with water or other substances. It is a compound found in solution in significant quantities in sea water.') ).

fof(kb_SUMO_10938,axiom,
    ! [V__SALT] :
      ( s__instance(V__SALT,s__SodiumChloride)
     => ? [V__SYNTHESIS,V__SODIUM,V__CHLORINE] :
          ( s__instance(V__CHLORINE,s__Object)
          & s__instance(V__SODIUM,s__Object)
          & s__instance(V__SYNTHESIS,s__Process)
          & s__instance(V__SYNTHESIS,s__ChemicalSynthesis)
          & s__resource(V__SYNTHESIS,V__SODIUM)
          & s__instance(V__SODIUM,s__Sodium)
          & s__resource(V__SYNTHESIS,V__CHLORINE)
          & s__instance(V__CHLORINE,s__Chlorine)
          & s__result(V__SYNTHESIS,V__SALT) ) ) ).

fof(kb_SUMO_10939,axiom,
    s__subclass(s__Diamond,s__Mineral) ).

fof(kb_SUMO_10940,axiom,
    s__subclass(s__Diamond,s__Carbon) ).

fof(kb_SUMO_10941,axiom,
    s__instance(s__Diamond__t,s__SetOrClass) ).

fof(kb_SUMO_10942,axiom,
    s__documentation(s__Diamond,s__EnglishLanguage,'Crystalline &%Carbon that is valued as a gem and used in industrial applications.') ).

fof(kb_SUMO_10943,axiom,
    s__subclass(s__SalineSolution,s__Solution) ).

fof(kb_SUMO_10944,axiom,
    s__instance(s__SalineSolution__t,s__SetOrClass) ).

fof(kb_SUMO_10945,axiom,
    s__documentation(s__SalineSolution,s__EnglishLanguage,'A &%Solution consisting of &%SodiumChloride and &%Water.') ).

fof(kb_SUMO_10946,axiom,
    ! [V__SOLUTION,V__PART] :
      ( ( s__instance(V__PART,s__Object)
        & s__instance(V__SOLUTION,s__Object) )
     => ( ( s__instance(V__SOLUTION,s__SalineSolution)
          & s__part(V__PART,V__SOLUTION) )
       => ( s__instance(V__PART,s__SodiumChloride)
          | s__instance(V__PART,s__Water) ) ) ) ).

fof(kb_SUMO_10947,axiom,
    ! [V__WATER] :
      ( s__instance(V__WATER,s__Water)
     => ? [V__SYNTHESIS,V__HYDROGEN,V__OXYGEN] :
          ( s__instance(V__OXYGEN,s__Object)
          & s__instance(V__HYDROGEN,s__Object)
          & s__instance(V__SYNTHESIS,s__Process)
          & s__instance(V__SYNTHESIS,s__ChemicalSynthesis)
          & s__resource(V__SYNTHESIS,V__HYDROGEN)
          & s__instance(V__HYDROGEN,s__Hydrogen)
          & s__resource(V__SYNTHESIS,V__OXYGEN)
          & s__instance(V__OXYGEN,s__Oxygen)
          & s__result(V__SYNTHESIS,V__WATER) ) ) ).

fof(kb_SUMO_10948,axiom,
    s__documentation(s__reactant__m,s__EnglishLanguage,'(reactant ?PROCESS ?SUBSTANCE) means that ?SUBSTANCE is a chemical reactant in the chemical reaction ?PROCESS, i.e. ?SUBSTANCE is present at the beginning of the chemical reaction ?PROCESS.') ).

fof(kb_SUMO_10949,axiom,
    s__domain(s__reactant__m,"1",s__ChemicalProcess) ).

fof(kb_SUMO_10950,axiom,
    s__domain(s__reactant__m,"2",s__Substance) ).

fof(kb_SUMO_10951,axiom,
    s__subrelation(s__reactant__m,s__resource__m) ).

fof(kb_SUMO_10952,axiom,
    s__documentation(s__reagent__m,s__EnglishLanguage,'(reagent ?PROCESS ?SUBSTANCE) means that ?SUBSTANCE is a chemical agent in the chemical reaction ?PROCESS.') ).

fof(kb_SUMO_10953,axiom,
    s__domain(s__reagent__m,"1",s__ChemicalProcess) ).

fof(kb_SUMO_10954,axiom,
    s__domain(s__reagent__m,"2",s__Substance) ).

fof(kb_SUMO_10955,axiom,
    s__subrelation(s__reagent__m,s__instrument__m) ).

fof(kb_SUMO_10956,axiom,
    s__subclass(s__Oil,s__Solution) ).

fof(kb_SUMO_10957,axiom,
    s__instance(s__Oil__t,s__SetOrClass) ).

fof(kb_SUMO_10958,axiom,
    s__documentation(s__Oil,s__EnglishLanguage,'A greasy, viscous &%Solution that cannot be mixed with &%Water. Note that this general class covers petroleum oil, vegetable oil, animal fat, etc.') ).

fof(kb_SUMO_10959,axiom,
    ! [V__OIL] :
      ( s__instance(V__OIL,s__Object)
     => ( s__instance(V__OIL,s__Oil)
       => ~ ? [V__MIX,V__WATER] :
              ( s__instance(V__WATER,s__Object)
              & s__instance(V__MIX,s__Object)
              & s__instance(V__MIX,s__Mixture)
              & s__part(V__WATER,V__MIX)
              & s__instance(V__WATER,s__Water)
              & s__part(V__OIL,V__MIX) ) ) ) ).

fof(kb_SUMO_10960,axiom,
    s__subclass(s__Surfactant,s__Substance) ).

fof(kb_SUMO_10961,axiom,
    s__instance(s__Surfactant__t,s__SetOrClass) ).

fof(kb_SUMO_10962,axiom,
    s__documentation(s__Surfactant,s__EnglishLanguage,'Surfactants, also known as &%Wetting agents, lower the surface tension of a &%Liquid, allowing easier spreading. The term surfactant is a compression of Surface active agent. Surfactants are usually organic compounds that contain both hydrophobic and hydrophilic groups, and are thus semi-soluble in both organic and aqueous solvents.') ).

fof(kb_SUMO_10963,axiom,
    s__subclass(s__Detergent,s__Surfactant) ).

fof(kb_SUMO_10964,axiom,
    s__subclass(s__Detergent,s__Mixture) ).

fof(kb_SUMO_10965,axiom,
    s__instance(s__Detergent__t,s__SetOrClass) ).

fof(kb_SUMO_10966,axiom,
    s__documentation(s__Detergent,s__EnglishLanguage,'A detergent is a compound, or a mixture of compounds, whose molecules have two distinct regions: one that is hydrophilic, and dissolves easily in water, and another region that is hydrophobic, with little (if any) affinity for water. As a consequence, these compounds can aid in the solubilization of hydrophobic compounds in water, and usually are optimized for this property. Though &%Soap also has these properties, soaps in general are not considered detergents. &%Soap is a particular type of surfactant that is derived from oils and fats. They are created through the saponification process whereby the ester linkage in a vegetable oil or fat is hydrolytically cleaved, creating a sodium or potassium salt of a fatty acid (i.e. soap). Both detergents and soaps are considered to be surfactants. &%Surfactants that are not soaps are considered to be detergents. Detergents are also commonly known as any cleaning mixture containing surfactants. (from Wikipedia)') ).

fof(kb_SUMO_10967,axiom,
    ! [V__DETERGENT] :
      ( s__instance(V__DETERGENT,s__Physical)
     => ( s__instance(V__DETERGENT,s__Detergent)
       => s__hasPurpose(V__DETERGENT,'(? [V__REMOVE,V__SUBSTANCE,V__SURFACE,V__OBJECT] : (s__instance(V__OBJECT,s__SelfConnectedObject) & s__instance(V__SURFACE,s__SelfConnectedObject) & s__instance(V__REMOVE,s__Process) & s__instance(V__REMOVE,s__Removing) & s__instance(V__SUBSTANCE,s__Substance) & s__patient(V__REMOVE,V__SUBSTANCE) & s__origin(V__REMOVE,V__SURFACE) & s__surface(V__SURFACE,V__OBJECT)))') ) ) ).

fof(kb_SUMO_10968,axiom,
    s__subclass(s__Bathing,s__Washing) ).

fof(kb_SUMO_10969,axiom,
    s__instance(s__Bathing__t,s__SetOrClass) ).

fof(kb_SUMO_10970,axiom,
    s__documentation(s__Bathing,s__EnglishLanguage,'&%Washing the entire body of a &%Human or &%Animal.') ).

fof(kb_SUMO_10971,axiom,
    ! [V__B,V__A] :
      ( s__instance(V__B,s__Process)
     => ( ( s__instance(V__B,s__Bathing)
          & s__patient(V__B,V__A) )
       => s__instance(V__A,s__Animal) ) ) ).

fof(kb_SUMO_10972,axiom,
    s__subclass(s__BathingDevice,s__WashingDevice) ).

fof(kb_SUMO_10973,axiom,
    s__documentation(s__BathingDevice,s__EnglishLanguage,'A &%WashingDevice which is intended to be used by Humans for washing their bodies. Note that this class covers bathtubs, showers, etc.') ).

fof(kb_SUMO_10974,axiom,
    ! [V__PERSON,V__BD] :
      ( s__instance(V__BD,s__Object)
     => ( s__instance(V__BD,s__BathingDevice)
       => s__hasPurpose(V__BD,'(? [V__B,V__P] : (s__instance(V__B,s__Process) & s__instance(V__B,s__Bathing) & s__instrument(V__B,V__BD) & s__patient(V__B,V__PERSON) & s__instance(V__P,s__Human)))') ) ) ).

fof(kb_SUMO_10975,axiom,
    s__subclass(s__WashBasin,s__WashingDevice) ).

fof(kb_SUMO_10976,axiom,
    s__instance(s__WashBasin__t,s__SetOrClass) ).

fof(kb_SUMO_10977,axiom,
    s__documentation(s__WashBasin,s__EnglishLanguage,'A &%WashingDevice which is intended to be used by &%Humans for washing their &%Hands.') ).

fof(kb_SUMO_10978,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__WashBasin)
       => s__hasPurpose(V__B,'(? [V__W,V__H] : (s__instance(V__W,s__Process) & s__instance(V__W,s__Washing) & s__instrument(V__W,V__B) & s__patient(V__W,V__H) & s__instance(V__H,s__Hand)))') ) ) ).

fof(kb_SUMO_10979,axiom,
    s__subclass(s__Glue,s__Mixture) ).

fof(kb_SUMO_10980,axiom,
    s__instance(s__Glue__t,s__SetOrClass) ).

fof(kb_SUMO_10981,axiom,
    s__documentation(s__Glue,s__EnglishLanguage,'Any &%Mixture whose purpose is to be used as the &%instrument of &%Attaching one thing to another.') ).

fof(kb_SUMO_10982,axiom,
    ! [V__GLUE] :
      ( s__instance(V__GLUE,s__Object)
     => ( s__instance(V__GLUE,s__Glue)
       => s__hasPurpose(V__GLUE,'(? [V__ATTACH] : (s__instance(V__ATTACH,s__Process) & s__instance(V__ATTACH,s__Attaching) & s__instrument(V__ATTACH,V__GLUE)))') ) ) ).

fof(kb_SUMO_10983,axiom,
    s__subclass(s__Glass,s__Mixture) ).

fof(kb_SUMO_10984,axiom,
    s__instance(s__Glass__t,s__SetOrClass) ).

fof(kb_SUMO_10985,axiom,
    s__documentation(s__Glass,s__EnglishLanguage,'A transparent or translucent &%Mixture of silicates.') ).

fof(kb_SUMO_10986,axiom,
    s__subclass(s__MetallicAlloy,s__Mixture) ).

fof(kb_SUMO_10987,axiom,
    s__documentation(s__MetallicAlloy,s__EnglishLanguage,'A &%Mixture of two or more &%Metals, and possibly nonmetallic elements as well. For example, steel is an alloy containing iron and manganese.') ).

fof(kb_SUMO_10988,axiom,
    ! [V__ALLOY] :
      ( s__instance(V__ALLOY,s__Object)
     => ( s__instance(V__ALLOY,s__MetallicAlloy)
       => ? [V__METAL1,V__METAL2] :
            ( s__instance(V__METAL2,s__Object)
            & s__instance(V__METAL1,s__Object)
            & s__instance(V__METAL1,s__Metal)
            & s__instance(V__METAL2,s__Metal)
            & V__METAL1 != V__METAL2
            & s__part(V__METAL1,V__ALLOY)
            & s__part(V__METAL2,V__ALLOY) ) ) ) ).

fof(kb_SUMO_10989,axiom,
    s__subclass(s__Steel,s__MetallicAlloy) ).

fof(kb_SUMO_10990,axiom,
    s__instance(s__Steel__t,s__SetOrClass) ).

fof(kb_SUMO_10991,axiom,
    s__documentation(s__Steel,s__EnglishLanguage,'A &%MetallicAlloy made from &%Iron and other elements.') ).

fof(kb_SUMO_10992,axiom,
    ! [V__STEEL] :
      ( s__instance(V__STEEL,s__Object)
     => ( s__instance(V__STEEL,s__Steel)
       => ? [V__IRON] :
            ( s__instance(V__IRON,s__Object)
            & s__instance(V__IRON,s__Iron)
            & s__part(V__IRON,V__STEEL) ) ) ) ).

fof(kb_SUMO_10993,axiom,
    s__subclass(s__Brass,s__MetallicAlloy) ).

fof(kb_SUMO_10994,axiom,
    s__instance(s__Brass__t,s__SetOrClass) ).

fof(kb_SUMO_10995,axiom,
    s__instance(s__MetallicAlloy__t,s__SetOrClass) ).

fof(kb_SUMO_10996,axiom,
    s__documentation(s__Brass,s__EnglishLanguage,'A &%MetallicAlloy made from &%Copper and &%Zinc.') ).

fof(kb_SUMO_10997,axiom,
    ! [V__BRASS] :
      ( s__instance(V__BRASS,s__Object)
     => ( s__instance(V__BRASS,s__Brass)
       => ? [V__COPPER,V__ZINC] :
            ( s__instance(V__ZINC,s__Object)
            & s__instance(V__COPPER,s__Object)
            & s__instance(V__COPPER,s__Copper)
            & s__instance(V__ZINC,s__Zinc)
            & s__part(V__COPPER,V__BRASS)
            & s__part(V__ZINC,V__BRASS) ) ) ) ).

fof(kb_SUMO_10998,axiom,
    s__subclass(s__Powder,s__Substance) ).

fof(kb_SUMO_10999,axiom,
    s__documentation(s__Powder,s__EnglishLanguage,'Any &%Solid &%Substance which consists of loose, identical, and very small particles.') ).

fof(kb_SUMO_11000,axiom,
    ! [V__POWDER] :
      ( s__instance(V__POWDER,s__Object)
     => ( s__instance(V__POWDER,s__Powder)
       => s__attribute(V__POWDER,s__Solid) ) ) ).

fof(kb_SUMO_11001,axiom,
    s__subclass(s__Fallout,s__Powder) ).

fof(kb_SUMO_11002,axiom,
    s__instance(s__Fallout__t,s__SetOrClass) ).

fof(kb_SUMO_11003,axiom,
    s__documentation(s__Fallout,s__EnglishLanguage,'Radioactive powder that is typically dispersed by the explosion of a nuclear weapon.') ).

fof(kb_SUMO_11004,axiom,
    ! [V__POWDER] :
      ( s__instance(V__POWDER,s__Object)
     => ( s__instance(V__POWDER,s__Fallout)
       => s__capability(s__RadiatingNuclear,s__instrument__m,V__POWDER) ) ) ).

fof(kb_SUMO_11005,axiom,
    s__subclass(s__Fog,s__WaterCloud) ).

fof(kb_SUMO_11006,axiom,
    s__instance(s__Fog__t,s__SetOrClass) ).

fof(kb_SUMO_11007,axiom,
    s__documentation(s__Fog,s__EnglishLanguage,'Any &%WaterCloud that is in contact with the ground.') ).

fof(kb_SUMO_11008,axiom,
    ! [V__FOG] :
      ( s__instance(V__FOG,s__Object)
     => ( s__instance(V__FOG,s__Fog)
       => ? [V__LAND] :
            ( s__instance(V__LAND,s__Object)
            & s__instance(V__LAND,s__LandArea)
            & s__meetsSpatially(V__FOG,V__LAND) ) ) ) ).

fof(kb_SUMO_11009,axiom,
    s__subclass(s__Ice,s__Water) ).

fof(kb_SUMO_11010,axiom,
    s__instance(s__Ice__t,s__SetOrClass) ).

fof(kb_SUMO_11011,axiom,
    s__documentation(s__Ice,s__EnglishLanguage,'&%Water that has the &%PhysicalState of &%Solid.') ).

fof(kb_SUMO_11012,axiom,
    ! [V__ICE] :
      ( s__instance(V__ICE,s__Object)
     => ( s__instance(V__ICE,s__Ice)
      <=> ( s__instance(V__ICE,s__Water)
          & s__attribute(V__ICE,s__Solid) ) ) ) ).

fof(kb_SUMO_11013,axiom,
    ! [V__NUMBER,V__ICE] :
      ( ( s__instance(V__ICE,s__Object)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__instance(V__ICE,s__Ice)
          & s__measure(V__ICE,s__MeasureFn(V__NUMBER,s__CelsiusDegree)) )
       => lesseq(V__NUMBER,"0") ) ) ).

fof(kb_SUMO_11014,axiom,
    s__subclass(s__Field,s__LandArea) ).

fof(kb_SUMO_11015,axiom,
    s__documentation(s__Field,s__EnglishLanguage,'A &%LandArea that has been cleared of &%BotanicalTrees. Note that a &%Field is not necessarily used for the cultivation of crops and that a &%Field may be very small, e.g. &%Lawn is a subclass of &%Field.') ).

fof(kb_SUMO_11016,axiom,
    ! [V__FIELD] :
      ( s__instance(V__FIELD,s__Object)
     => ( s__instance(V__FIELD,s__Field)
       => ~ ? [V__TREE] :
              ( s__instance(V__TREE,s__Physical)
              & s__instance(V__TREE,s__BotanicalTree)
              & s__located(V__TREE,V__FIELD) ) ) ) ).

fof(kb_SUMO_11017,axiom,
    s__subclass(s__Lawn,s__Field) ).

fof(kb_SUMO_11018,axiom,
    s__instance(s__Lawn__t,s__SetOrClass) ).

fof(kb_SUMO_11019,axiom,
    s__instance(s__Field__t,s__SetOrClass) ).

fof(kb_SUMO_11020,axiom,
    s__documentation(s__Lawn,s__EnglishLanguage,'A &%Field of cultivated and mowed &%Grass.') ).

fof(kb_SUMO_11021,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__Lawn)
       => ? [V__G] :
            ( s__instance(V__G,s__Physical)
            & s__instance(V__G,s__Grass)
            & s__located(V__G,V__L) ) ) ) ).

fof(kb_SUMO_11022,axiom,
    s__subclass(s__MilitaryFront,s__GeographicArea) ).

fof(kb_SUMO_11023,axiom,
    s__instance(s__MilitaryFront__t,s__SetOrClass) ).

fof(kb_SUMO_11024,axiom,
    s__documentation(s__MilitaryFront,s__EnglishLanguage,'A &%GeographicArea along which opposing military forces confront one another in a &%Battle.') ).

%FOL fof(kb_SUMO_11025,axiom,(( (! [V__TIME,V__AREA] : ((s__instance(V__AREA,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__AREA,s__MilitaryFront)') => (? [V__BATTLE] : (s__instance(V__BATTLE,s__Process) & s__instance(V__BATTLE,s__TimePosition) & s__instance(V__BATTLE,s__Battle) & s__eventLocated(V__BATTLE,V__AREA) & s__temporalPart(V__TIME,V__BATTLE)))))) ))).

fof(kb_SUMO_11026,axiom,
    s__partition_3(s__Region,s__GeographicArea,s__SpaceRegion) ).

fof(kb_SUMO_11027,axiom,
    s__subclass(s__AtmosphericRegion,s__SpaceRegion) ).

fof(kb_SUMO_11028,axiom,
    s__documentation(s__AtmosphericRegion,s__EnglishLanguage,'&%AtmosphericRegion is the class of all subregions of &%EarthsAtmosphere.') ).

fof(kb_SUMO_11029,axiom,
    s__subclass(s__StreamWaterArea,s__WaterArea) ).

fof(kb_SUMO_11030,axiom,
    s__subclass(s__StreamWaterArea,s__FlowRegion) ).

fof(kb_SUMO_11031,axiom,
    s__instance(s__StreamWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_11032,axiom,
    s__instance(s__FlowRegion__t,s__SetOrClass) ).

fof(kb_SUMO_11033,axiom,
    s__disjoint(s__StreamWaterArea,s__StaticWaterArea) ).

fof(kb_SUMO_11034,axiom,
    s__documentation(s__StreamWaterArea,s__EnglishLanguage,'A relatively narrow &%WaterArea where the water flows constantly and in the same direction, e.g. a river, a stream, etc.') ).

fof(kb_SUMO_11035,axiom,
    s__subclass(s__StaticWaterArea,s__WaterArea) ).

fof(kb_SUMO_11036,axiom,
    s__instance(s__StaticWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_11037,axiom,
    s__documentation(s__StaticWaterArea,s__EnglishLanguage,'A &%WaterArea in which water does not flow constantly or in the same direction, e.g. most lakes and ponds.') ).

fof(kb_SUMO_11038,axiom,
    s__subclass(s__FlowRegion,s__Region) ).

fof(kb_SUMO_11039,axiom,
    s__documentation(s__FlowRegion,s__EnglishLanguage,'&%FlowRegion is a class of things whose boundaries are relatively stable but whose constitutive &%material is continuously moving through the region itself and being replaced by other, similar material. Each &%FlowRegion is constituted by a stream of matter moving as a whole. A &%FlowRegion may be liquid or gaseous. A wind may be considered as a &%Process or as a &%FlowRegion, similarly an OceanCurrent or a &%WaterWave. The motion process associated with a &%FlowRegion F is denoted by (&%FlowFn F). Note that certain properties belong to the &%FlowRegion itself (e.g., mass, length, volume, temperature, and speed or velocity of the region moving as a whole), while other properties of interest belong to the &%Motion of its constitutive stuff (e.g., velocity, direction). The motion of a &%FlowRegion as a whole (e.g., &%JetStream moves within the atmosphere) is distinguished from the motion of the &%pieces of stuff constituting the &%FlowRegion. See &%FlowFn and &%FlowRegionFn.') ).

fof(kb_SUMO_11040,axiom,
    ! [V__FLUID,V__FR] :
      ( ( s__instance(V__FR,s__Object)
        & s__instance(V__FLUID,s__Object) )
     => ( ( s__instance(V__FR,s__FlowRegion)
          & s__located(V__FLUID,V__FR) )
       => s__attribute(V__FLUID,s__Fluid) ) ) ).

fof(kb_SUMO_11041,axiom,
    s__subclass(s__SpaceRegion,s__Region) ).

fof(kb_SUMO_11042,axiom,
    s__instance(s__SpaceRegion__t,s__SetOrClass) ).

fof(kb_SUMO_11043,axiom,
    s__disjoint(s__SpaceRegion,s__GeographicArea) ).

fof(kb_SUMO_11044,axiom,
    s__partition_3(s__SpaceRegion,s__AtmosphericRegion,s__OuterSpaceRegion) ).

fof(kb_SUMO_11045,axiom,
    s__documentation(s__SpaceRegion,s__EnglishLanguage,'The class of all &%Regions which are not &%GeographicAreas.') ).

fof(kb_SUMO_11046,axiom,
    s__subclass(s__OuterSpaceRegion,s__SpaceRegion) ).

fof(kb_SUMO_11047,axiom,
    s__instance(s__OuterSpaceRegion__t,s__SetOrClass) ).

fof(kb_SUMO_11048,axiom,
    s__documentation(s__OuterSpaceRegion,s__EnglishLanguage,'The class of all &%Regions which are neither &%GeographicAreas nor &%AtmosphericRegions.') ).

fof(kb_SUMO_11049,axiom,
    s__subclass(s__StormFront,s__AtmosphericRegion) ).

fof(kb_SUMO_11050,axiom,
    s__instance(s__StormFront__t,s__SetOrClass) ).

fof(kb_SUMO_11051,axiom,
    s__instance(s__AtmosphericRegion__t,s__SetOrClass) ).

fof(kb_SUMO_11052,axiom,
    s__documentation(s__StormFront,s__EnglishLanguage,'The &%Region where two or more unstable air masses meet.') ).

fof(kb_SUMO_11053,axiom,
    ! [V__FRONT] :
      ( s__instance(V__FRONT,s__Object)
     => ( s__instance(V__FRONT,s__StormFront)
       => ? [V__AIR1,V__AIR2] :
            ( s__instance(V__AIR2,s__Object)
            & s__instance(V__AIR1,s__Object)
            & s__instance(V__AIR1,s__Air)
            & s__instance(V__AIR2,s__Air)
            & s__between(V__AIR1,V__FRONT,V__AIR2) ) ) ) ).

fof(kb_SUMO_11054,axiom,
    s__instance(s__Inside,s__PositionalAttribute) ).

fof(kb_SUMO_11055,axiom,
    s__documentation(s__Inside,s__EnglishLanguage,'&%Inside is a &%PositionalAttribute used to describe the relative location of one object or region to another region.') ).

fof(kb_SUMO_11056,axiom,
    ! [V__INSIDE] :
      ( s__instance(V__INSIDE,s__Inside)
     => ? [V__OBJECT] :
        ! [V__THING] :
          ( ( s__instance(V__THING,s__Physical)
            & s__instance(V__INSIDE,s__Object) )
         => ( s__located(V__THING,V__INSIDE)
           => ? [V__PART] :
                ( s__instance(V__PART,s__Object)
                & s__instance(V__OBJECT,s__Object)
                & s__interiorPart(V__PART,V__OBJECT)
                & s__located(V__THING,V__PART) ) ) ) ) ).

fof(kb_SUMO_11057,axiom,
    s__instance(s__Outside,s__PositionalAttribute) ).

fof(kb_SUMO_11058,axiom,
    s__contraryAttribute_2(s__Inside,s__Outside) ).

fof(kb_SUMO_11059,axiom,
    s__documentation(s__Outside,s__EnglishLanguage,'&%Outside is a &%PositionalAttribute used to describe the relative location of one object or region to another region. ') ).

fof(kb_SUMO_11060,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( s__orientation(V__OBJ,V__REGION,s__Outside)
       => s__instance(V__REGION,s__Region) ) ) ).

fof(kb_SUMO_11061,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( s__orientation(V__OBJ,V__REGION,s__Inside)
       => s__instance(V__REGION,s__Region) ) ) ).

fof(kb_SUMO_11062,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( s__orientation(V__OBJ,V__REGION,s__Outside)
      <=> ~ s__partlyLocated(V__OBJ,V__REGION) ) ) ).

fof(kb_SUMO_11063,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( s__part(V__OBJ,V__REGION)
       => ~ s__orientation(V__OBJ,V__REGION,s__Outside) ) ) ).

fof(kb_SUMO_11064,axiom,
    s__subclass(s__Outdoors,s__Region) ).

fof(kb_SUMO_11065,axiom,
    s__instance(s__Outdoors__t,s__SetOrClass) ).

fof(kb_SUMO_11066,axiom,
    s__documentation(s__Outdoors,s__EnglishLanguage,'Any &%Region which is not enclosed by a &%Building or part of a &%Building.') ).

fof(kb_SUMO_11067,axiom,
    ! [V__OUTDOORS] :
      ( s__instance(V__OUTDOORS,s__Object)
     => ( s__instance(V__OUTDOORS,s__Outdoors)
       => ~ ? [V__BUILDING] :
              ( s__instance(V__BUILDING,s__Object)
              & s__instance(V__BUILDING,s__Building)
              & s__orientation(V__OUTDOORS,V__BUILDING,s__Inside) ) ) ) ).

fof(kb_SUMO_11068,axiom,
    s__subclass(s__Indoors,s__Region) ).

fof(kb_SUMO_11069,axiom,
    s__instance(s__Indoors__t,s__SetOrClass) ).

fof(kb_SUMO_11070,axiom,
    s__disjoint(s__Indoors,s__Outdoors) ).

fof(kb_SUMO_11071,axiom,
    s__documentation(s__Indoors,s__EnglishLanguage,'Any &%Region which is enclosed by a &%Building.') ).

fof(kb_SUMO_11072,axiom,
    ! [V__INDOORS] :
      ( s__instance(V__INDOORS,s__Object)
     => ( s__instance(V__INDOORS,s__Indoors)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__orientation(V__INDOORS,V__BUILDING,s__Inside) ) ) ) ).

fof(kb_SUMO_11073,axiom,
    s__subclass(s__BiologicalSpecies,s__Class) ).

fof(kb_SUMO_11074,axiom,
    s__instance(s__BiologicalSpecies__t,s__SetOrClass) ).

fof(kb_SUMO_11075,axiom,
    s__documentation(s__BiologicalSpecies,s__EnglishLanguage,'The &%Class of all biological species, i.e. the class of all classes of &%Organism whose instances can interbreed.') ).

fof(kb_SUMO_11076,axiom,
    ! [V__SPECIES] :
      ( s__instance(V__SPECIES,s__SetOrClass)
     => ( s__instance(V__SPECIES,s__BiologicalSpecies)
       => s__subclass(V__SPECIES,s__Organism) ) ) ).

fof(kb_SUMO_11077,axiom,
    s__subclass(s__Wood,s__Tissue) ).

fof(kb_SUMO_11078,axiom,
    s__instance(s__Wood__t,s__SetOrClass) ).

fof(kb_SUMO_11079,axiom,
    s__subclass(s__Wood,s__PlantSubstance) ).

fof(kb_SUMO_11080,axiom,
    s__documentation(s__Wood,s__EnglishLanguage,'&%Tissue that comprises the inner trunk of &%Trees. It is often used in constructing &%Buildings and other &%Artifacts. Wood is the principal substance making up a tree, and is distinguished from the bark, roots, flowers, seeds, fruit and leaves.') ).

fof(kb_SUMO_11081,axiom,
    s__relatedInternalConcept(s__Wood,s__WoodArtifact) ).

fof(kb_SUMO_11082,axiom,
    s__subclass(s__WoodArtifact,s__Artifact) ).

fof(kb_SUMO_11083,axiom,
    s__documentation(s__WoodArtifact,s__EnglishLanguage,'&%Wood that has been cut (and perhaps treated) for some purpose, e.g. &%Constructing or &%Combustion. Note that this class covers both lumber and firewood.') ).

fof(kb_SUMO_11084,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__CorpuscularObject)
     => ( s__instance(V__W,s__WoodArtifact)
       => s__material(s__Wood,V__W) ) ) ).

fof(kb_SUMO_11085,axiom,
    s__subclass(s__OakWood,s__WoodArtifact) ).

fof(kb_SUMO_11086,axiom,
    s__instance(s__OakWood__t,s__SetOrClass) ).

fof(kb_SUMO_11087,axiom,
    s__instance(s__WoodArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_11088,axiom,
    s__documentation(s__OakWood,s__EnglishLanguage,'Any &%WoodArtifact that is made from the &%Wood of an oak tree.') ).

fof(kb_SUMO_11089,axiom,
    s__subclass(s__Rubber,s__PlantSubstance) ).

fof(kb_SUMO_11090,axiom,
    s__instance(s__Rubber__t,s__SetOrClass) ).

fof(kb_SUMO_11091,axiom,
    s__subclass(s__Rubber,s__BodySubstance) ).

fof(kb_SUMO_11092,axiom,
    s__subclass(s__Rubber,s__Hydrocarbon) ).

fof(kb_SUMO_11093,axiom,
    s__documentation(s__Rubber,s__EnglishLanguage,'Natural rubber, as opposed to synthetic rubber which is a &%Plastic, is a product of the rubber tree, genus Hevea or Ficus. It is the coagulated form of the milky juice secreted by these trees. Rubber is essentially a polymer of isoprene. ') ).

fof(kb_SUMO_11094,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Rubber)
       => ? [V__T] :
            ( s__instance(V__T,s__Object)
            & s__instance(V__T,s__BotanicalTree)
            & s__part(V__R,V__T) ) ) ) ).

fof(kb_SUMO_11095,axiom,
    s__subclass(s__Cellulose,s__PlantSubstance) ).

fof(kb_SUMO_11096,axiom,
    s__subclass(s__Cellulose,s__Carbohydrate) ).

fof(kb_SUMO_11097,axiom,
    s__instance(s__Cellulose__t,s__SetOrClass) ).

fof(kb_SUMO_11098,axiom,
    s__documentation(s__Cellulose,s__EnglishLanguage,'The main component of &%Plant &%Tissue.') ).

fof(kb_SUMO_11099,axiom,
    s__subclass(s__Starch,s__Carbohydrate) ).

fof(kb_SUMO_11100,axiom,
    s__instance(s__Starch__t,s__SetOrClass) ).

fof(kb_SUMO_11101,axiom,
    s__documentation(s__Starch,s__EnglishLanguage,'A complex &%Carbohydrate that is the main form in which &%Carbohydrates are stored.') ).

fof(kb_SUMO_11102,axiom,
    s__subclass(s__Sugar,s__Carbohydrate) ).

fof(kb_SUMO_11103,axiom,
    s__instance(s__Sugar__t,s__SetOrClass) ).

fof(kb_SUMO_11104,axiom,
    s__documentation(s__Sugar,s__EnglishLanguage,'A simple &%Carbohydrate that has a sweet taste and consists mostly or entirely of sucrose.') ).

fof(kb_SUMO_11105,axiom,
    s__subclass(s__Nectar,s__PlantSubstance) ).

fof(kb_SUMO_11106,axiom,
    s__instance(s__Nectar__t,s__SetOrClass) ).

fof(kb_SUMO_11107,axiom,
    s__documentation(s__Nectar,s__EnglishLanguage,'A sweet, sticky liquid that is produced by &%Plants and that attracts Insects.') ).

fof(kb_SUMO_11108,axiom,
    s__subclass(s__Medicine,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11109,axiom,
    s__instance(s__Medicine__t,s__SetOrClass) ).

fof(kb_SUMO_11110,axiom,
    s__documentation(s__Medicine,s__EnglishLanguage,'Any &%BiologicallyActiveSubstance which has a therapeutic effect under certain conditions.') ).

fof(kb_SUMO_11111,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Medicine)
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__TherapeuticProcess)
            & s__instrument(V__P,V__M) ) ) ) ).

fof(kb_SUMO_11112,axiom,
    s__subclass(s__Stimulant,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11113,axiom,
    s__instance(s__Stimulant__t,s__SetOrClass) ).

fof(kb_SUMO_11114,axiom,
    s__disjoint(s__Stimulant,s__Depressant) ).

fof(kb_SUMO_11115,axiom,
    s__documentation(s__Stimulant,s__EnglishLanguage,'Any &%BiologicallyActiveSubstance which has the effect of stimulating the central nervous system, i.e. increasing function or activity in the &%Brain or &%SpinalCord.') ).

fof(kb_SUMO_11116,axiom,
    s__subclass(s__Depressant,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11117,axiom,
    s__documentation(s__Depressant,s__EnglishLanguage,'Any &%BiologicallyActiveSubstance which has the effect of depressing the central nervous system, i.e. decreasing function or activity in the &%Brain or &%SpinalCord.') ).

fof(kb_SUMO_11118,axiom,
    s__subclass(s__Opium,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11119,axiom,
    s__instance(s__Opium__t,s__SetOrClass) ).

fof(kb_SUMO_11120,axiom,
    s__subclass(s__Opium,s__PlantSubstance) ).

fof(kb_SUMO_11121,axiom,
    s__documentation(s__Opium,s__EnglishLanguage,'A substance harvested from the seed capsules of the opium poppy that contains various powerful alkaloids.') ).

fof(kb_SUMO_11122,axiom,
    s__subclass(s__Opium,s__Depressant) ).

fof(kb_SUMO_11123,axiom,
    ! [V__O] :
      ( s__instance(V__O,s__Object)
     => ( s__instance(V__O,s__Opium)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Alkaloid)
            & s__part(V__A,V__O) ) ) ) ).

fof(kb_SUMO_11124,axiom,
    s__subclass(s__Grass,s__FloweringPlant) ).

fof(kb_SUMO_11125,axiom,
    s__instance(s__Grass__t,s__SetOrClass) ).

fof(kb_SUMO_11126,axiom,
    s__documentation(s__Grass,s__EnglishLanguage,'&%FloweringPlants with green, narrow leaves that are used for lawns and &%Fields. &%Grass includes any plant of the family Gramineae, a widely distributed group of mostly annual and perennial herbs.') ).

fof(kb_SUMO_11127,axiom,
    s__subclass(s__Lilac,s__FloweringPlant) ).

fof(kb_SUMO_11128,axiom,
    s__instance(s__Lilac__t,s__SetOrClass) ).

fof(kb_SUMO_11129,axiom,
    s__documentation(s__Lilac,s__EnglishLanguage,'A &%FloweringPlant that has large clusters of aromatic flowers.') ).

fof(kb_SUMO_11130,axiom,
    s__subclass(s__Tobacco,s__FloweringPlant) ).

fof(kb_SUMO_11131,axiom,
    s__instance(s__Tobacco__t,s__SetOrClass) ).

fof(kb_SUMO_11132,axiom,
    s__documentation(s__Tobacco,s__EnglishLanguage,'A &%FloweringPlant containing nicotine whose leaves are dried and then smoked or ingested.') ).

fof(kb_SUMO_11133,axiom,
    s__subclass(s__Lesion,s__AbnormalAnatomicalStructure) ).

fof(kb_SUMO_11134,axiom,
    s__instance(s__Lesion__t,s__SetOrClass) ).

fof(kb_SUMO_11135,axiom,
    s__documentation(s__Lesion,s__EnglishLanguage,'Any &%AbnormalAnatomicalStructure which is the result of an Injuring and which is found on the surface of an &%Organ.') ).

fof(kb_SUMO_11136,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Lesion)
     => ? [V__I] :
          ( s__instance(V__I,s__Process)
          & s__instance(V__I,s__Injuring)
          & s__result(V__I,V__L) ) ) ).

fof(kb_SUMO_11137,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Physical)
     => ( s__instance(V__L,s__Lesion)
       => ? [V__S,V__O] :
            ( s__instance(V__O,s__SelfConnectedObject)
            & s__instance(V__S,s__SelfConnectedObject)
            & s__surface(V__S,V__O)
            & s__instance(V__O,s__Organ)
            & s__located(V__L,V__S) ) ) ) ).

fof(kb_SUMO_11138,axiom,
    s__subclass(s__Scar,s__AbnormalAnatomicalStructure) ).

fof(kb_SUMO_11139,axiom,
    s__instance(s__Scar__t,s__SetOrClass) ).

fof(kb_SUMO_11140,axiom,
    s__documentation(s__Scar,s__EnglishLanguage,'Any &%AbnormalAnatomicalStructure which results from the healing of a &%Lesion.') ).

%FOL fof(kb_SUMO_11141,axiom,(( (! [V__S] : (s__instance(V__S,s__Physical) => (s__instance(V__S,s__Scar) => (? [V__T,V__OP,V__L] : (s__instance(V__OP,s__Process) & s__instance(V__T,s__TimePosition) & s__temporalPart(V__T,s__PastFn(s__WhenFn(V__S))) & s__holdsDuring(V__T,'s__instance(V__L,s__Lesion)') & s__instance(V__OP,s__OrganOrTissueProcess) & s__patient(V__OP,V__L) & s__result(V__OP,V__S)))))) ))).

fof(kb_SUMO_11142,axiom,
    s__subclass(s__Tumor,s__AbnormalAnatomicalStructure) ).

fof(kb_SUMO_11143,axiom,
    s__instance(s__Tumor__t,s__SetOrClass) ).

fof(kb_SUMO_11144,axiom,
    s__documentation(s__Tumor,s__EnglishLanguage,'Any &%AbnormalAnatomicalStructure which consists of a mass of &%Tissue. Note that this class covers both malignant (i.e. cancerous) and benign tumors.') ).

fof(kb_SUMO_11145,axiom,
    ! [V__TUMOR] :
      ( s__instance(V__TUMOR,s__Tumor)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__TUMOR,s__Object) )
         => ( s__part(V__PART,V__TUMOR)
           => s__instance(V__PART,s__Tissue) ) ) ) ).

fof(kb_SUMO_11146,axiom,
    s__subclass(s__Tendon,s__Tissue) ).

fof(kb_SUMO_11147,axiom,
    s__subclass(s__Tendon,s__AnimalSubstance) ).

fof(kb_SUMO_11148,axiom,
    s__instance(s__Tendon__t,s__SetOrClass) ).

fof(kb_SUMO_11149,axiom,
    s__documentation(s__Tendon,s__EnglishLanguage,'&%Tissue that connects &%Muscle to &%Bone.') ).

fof(kb_SUMO_11150,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__SelfConnectedObject)
     => ( s__instance(V__T,s__Tendon)
       => ? [V__M,V__B] :
            ( s__instance(V__B,s__SelfConnectedObject)
            & s__instance(V__M,s__SelfConnectedObject)
            & s__instance(V__M,s__Muscle)
            & s__instance(V__B,s__Bone)
            & s__connects(V__T,V__M,V__B) ) ) ) ).

fof(kb_SUMO_11151,axiom,
    s__subclass(s__Sweat,s__AnimalSubstance) ).

fof(kb_SUMO_11152,axiom,
    s__instance(s__Sweat__t,s__SetOrClass) ).

fof(kb_SUMO_11153,axiom,
    s__documentation(s__Sweat,s__EnglishLanguage,'An &%AnimalSubstance that contains &%SodiumChloride and is produced by the sweat glands.') ).

fof(kb_SUMO_11154,axiom,
    ! [V__SWEAT] :
      ( s__instance(V__SWEAT,s__Object)
     => ( s__instance(V__SWEAT,s__Sweat)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__PART,s__SodiumChloride)
            & s__part(V__PART,V__SWEAT) ) ) ) ).

fof(kb_SUMO_11155,axiom,
    s__subclass(s__PlantLeaf,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_11156,axiom,
    s__subclass(s__PlantLeaf,s__Organ) ).

fof(kb_SUMO_11157,axiom,
    s__instance(s__PlantLeaf__t,s__SetOrClass) ).

fof(kb_SUMO_11158,axiom,
    s__documentation(s__PlantLeaf,s__EnglishLanguage,'An &%Organ of &%Plants whose main purpose is photosynthesis.') ).

fof(kb_SUMO_11159,axiom,
    s__subclass(s__PlantBranch,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_11160,axiom,
    s__subclass(s__PlantBranch,s__BodyPart) ).

fof(kb_SUMO_11161,axiom,
    s__instance(s__PlantBranch__t,s__SetOrClass) ).

fof(kb_SUMO_11162,axiom,
    s__documentation(s__PlantBranch,s__EnglishLanguage,'The stem of a &%Plant or any shoot arising from the stem of a &%Plant.') ).

fof(kb_SUMO_11163,axiom,
    s__subclass(s__BotanicalTree,s__FloweringPlant) ).

fof(kb_SUMO_11164,axiom,
    s__documentation(s__BotanicalTree,s__EnglishLanguage,'&%BotanicalTree is an imprecise term for a perennial woody plant that is larger than a bush or shrub, generally understood to describe a large growth having one main trunk with few or no branches projecting from its base, a well-developed crown of foliage, and a height at maturity of at least 12 feet.') ).

fof(kb_SUMO_11165,axiom,
    s__subclass(s__TreeBranch,s__PlantBranch) ).

fof(kb_SUMO_11166,axiom,
    s__instance(s__TreeBranch__t,s__SetOrClass) ).

fof(kb_SUMO_11167,axiom,
    s__documentation(s__TreeBranch,s__EnglishLanguage,'Any &%PlantBranch which is part of a &%BotanicalTree.') ).

fof(kb_SUMO_11168,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__TreeBranch)
       => ? [V__T] :
            ( s__instance(V__T,s__Object)
            & s__instance(V__T,s__BotanicalTree)
            & s__part(V__B,V__T) ) ) ) ).

fof(kb_SUMO_11169,axiom,
    s__subclass(s__WillowTree,s__BotanicalTree) ).

fof(kb_SUMO_11170,axiom,
    s__instance(s__WillowTree__t,s__SetOrClass) ).

fof(kb_SUMO_11171,axiom,
    s__instance(s__BotanicalTree__t,s__SetOrClass) ).

fof(kb_SUMO_11172,axiom,
    s__documentation(s__WillowTree,s__EnglishLanguage,'A &%BotanicalTree of the genus &%Salix.') ).

fof(kb_SUMO_11173,axiom,
    s__subclass(s__PlantRoot,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_11174,axiom,
    s__subclass(s__PlantRoot,s__Organ) ).

fof(kb_SUMO_11175,axiom,
    s__instance(s__PlantRoot__t,s__SetOrClass) ).

fof(kb_SUMO_11176,axiom,
    s__documentation(s__PlantRoot,s__EnglishLanguage,'An &%Organ of &%Plants whose main purpose is twofold, viz. to absorb nutrients from the ground and to anchor the &%Plant in place.') ).

fof(kb_SUMO_11177,axiom,
    s__subclass(s__Flower,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_11178,axiom,
    s__subclass(s__Flower,s__Organ) ).

fof(kb_SUMO_11179,axiom,
    s__instance(s__Flower__t,s__SetOrClass) ).

fof(kb_SUMO_11180,axiom,
    s__documentation(s__Flower,s__EnglishLanguage,'The reproductive organ of &%FloweringPlants.') ).

%FOL fof(kb_SUMO_11181,axiom,(( (! [V__FLOWER] : (s__instance(V__FLOWER,s__Object) => (s__instance(V__FLOWER,s__Flower) => (? [V__PLANT,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PLANT,s__Object) & s__instance(V__PLANT,s__FloweringPlant) & s__holdsDuring(V__TIME,'s__part(V__FLOWER,V__PLANT)')))))) ))).

fof(kb_SUMO_11182,axiom,
    s__subclass(s__Antibody,s__Protein) ).

fof(kb_SUMO_11183,axiom,
    s__instance(s__Antibody__t,s__SetOrClass) ).

fof(kb_SUMO_11184,axiom,
    s__documentation(s__Antibody,s__EnglishLanguage,'An immunoglobulin which is produced by the body and which has the ability to neutralize &%Antigens.') ).

fof(kb_SUMO_11185,axiom,
    ! [V__BODY] :
      ( s__instance(V__BODY,s__Agent)
     => ( s__instance(V__BODY,s__Antibody)
       => s__hasPurpose(V__BODY,'(? [V__DEST,V__ANTI] : (s__instance(V__DEST,s__Process) & s__instance(V__DEST,s__Destruction) & s__agent(V__DEST,V__BODY) & s__patient(V__DEST,V__ANTI) & s__instance(V__ANTI,s__Antigen)))') ) ) ).

fof(kb_SUMO_11186,axiom,
    s__subclass(s__Antibiotic,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11187,axiom,
    s__instance(s__Antibiotic__t,s__SetOrClass) ).

fof(kb_SUMO_11188,axiom,
    s__documentation(s__Antibiotic,s__EnglishLanguage,'A &%BiologicallyActiveSubstance than can kill instances of &%Bacterium.') ).

fof(kb_SUMO_11189,axiom,
    s__subclass(s__Antigen,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_11190,axiom,
    s__instance(s__Antigen__t,s__SetOrClass) ).

fof(kb_SUMO_11191,axiom,
    s__documentation(s__Antigen,s__EnglishLanguage,'Any &%BiologicallyActiveSubstance that has the capacity to stimulate the production of &%Antibodies.') ).

fof(kb_SUMO_11192,axiom,
    s__subclass(s__AntigenA,s__Antigen) ).

fof(kb_SUMO_11193,axiom,
    s__instance(s__AntigenA__t,s__SetOrClass) ).

fof(kb_SUMO_11194,axiom,
    s__documentation(s__AntigenA,s__EnglishLanguage,'An &%Antigen that is carried in the red blood cells of those with &%BloodTypeA.') ).

fof(kb_SUMO_11195,axiom,
    s__subclass(s__AntigenB,s__Antigen) ).

fof(kb_SUMO_11196,axiom,
    s__instance(s__AntigenB__t,s__SetOrClass) ).

fof(kb_SUMO_11197,axiom,
    s__documentation(s__AntigenB,s__EnglishLanguage,'An &%Antigen that is carried in the red blood cells of those with &%BloodTypeB.') ).

fof(kb_SUMO_11198,axiom,
    s__subclass(s__BloodCell,s__Cell) ).

fof(kb_SUMO_11199,axiom,
    s__instance(s__BloodCell__t,s__SetOrClass) ).

fof(kb_SUMO_11200,axiom,
    s__subclass(s__BloodCell,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11201,axiom,
    s__documentation(s__BloodCell,s__EnglishLanguage,'A &%Cell that is normally present in &%Blood.') ).

fof(kb_SUMO_11202,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__BloodCell)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__Blood)
            & s__part(V__C,V__B) ) ) ) ).

fof(kb_SUMO_11203,axiom,
    s__subclass(s__RedBloodCell,s__BloodCell) ).

fof(kb_SUMO_11204,axiom,
    s__instance(s__RedBloodCell__t,s__SetOrClass) ).

fof(kb_SUMO_11205,axiom,
    s__documentation(s__RedBloodCell,s__EnglishLanguage,'&%BloodCells that contain hemoglobin, lack a &%CellNucleus, and carry &%Oxygen to the tissues of the body.') ).

fof(kb_SUMO_11206,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__RedBloodCell)
       => ~ ? [V__N] :
              ( s__instance(V__N,s__Object)
              & s__instance(V__N,s__CellNucleus)
              & s__part(V__N,V__C) ) ) ) ).

fof(kb_SUMO_11207,axiom,
    s__subclass(s__WhiteBloodCell,s__BloodCell) ).

fof(kb_SUMO_11208,axiom,
    s__instance(s__WhiteBloodCell__t,s__SetOrClass) ).

fof(kb_SUMO_11209,axiom,
    s__documentation(s__WhiteBloodCell,s__EnglishLanguage,'&%BloodCells that lack hemoglobin, contain a &%CellNucleus, and have no color.') ).

fof(kb_SUMO_11210,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__WhiteBloodCell)
       => ? [V__N] :
            ( s__instance(V__N,s__Object)
            & s__instance(V__N,s__CellNucleus)
            & s__part(V__N,V__C) ) ) ) ).

fof(kb_SUMO_11211,axiom,
    s__subclass(s__BloodTypeA,s__Blood) ).

fof(kb_SUMO_11212,axiom,
    s__instance(s__BloodTypeA__t,s__SetOrClass) ).

fof(kb_SUMO_11213,axiom,
    s__documentation(s__BloodTypeA,s__EnglishLanguage,'The subclass of &%Blood that contains &%AntigenA and does not contain &%AntigenB.') ).

fof(kb_SUMO_11214,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeA)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__AntigenA)
            & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11215,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeA)
       => ~ ? [V__A] :
              ( s__instance(V__A,s__Object)
              & s__instance(V__A,s__AntigenB)
              & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11216,axiom,
    s__subclass(s__BloodTypeAB,s__Blood) ).

fof(kb_SUMO_11217,axiom,
    s__instance(s__BloodTypeAB__t,s__SetOrClass) ).

fof(kb_SUMO_11218,axiom,
    s__documentation(s__BloodTypeAB,s__EnglishLanguage,'The subclass of &%Blood that contains both &%AntigenA and &%AntigenB.') ).

fof(kb_SUMO_11219,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeAB)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__AntigenA)
            & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11220,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeAB)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__AntigenB)
            & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11221,axiom,
    s__subclass(s__BloodTypeB,s__Blood) ).

fof(kb_SUMO_11222,axiom,
    s__instance(s__BloodTypeB__t,s__SetOrClass) ).

fof(kb_SUMO_11223,axiom,
    s__documentation(s__BloodTypeB,s__EnglishLanguage,'The subclass of &%Blood that contains &%AntigenB and does not contain &%AntigenA.') ).

fof(kb_SUMO_11224,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeB)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__AntigenB)
            & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11225,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeB)
       => ~ ? [V__A] :
              ( s__instance(V__A,s__Object)
              & s__instance(V__A,s__AntigenA)
              & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11226,axiom,
    s__subclass(s__BloodTypeO,s__Blood) ).

fof(kb_SUMO_11227,axiom,
    s__instance(s__BloodTypeO__t,s__SetOrClass) ).

fof(kb_SUMO_11228,axiom,
    s__documentation(s__BloodTypeO,s__EnglishLanguage,'The subclass of &%Blood that contains neither &%AntigenA nor &%AntigenB.') ).

fof(kb_SUMO_11229,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeO)
       => ~ ? [V__A] :
              ( s__instance(V__A,s__Object)
              & s__instance(V__A,s__AntigenA)
              & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11230,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__BloodTypeO)
       => ~ ? [V__A] :
              ( s__instance(V__A,s__Object)
              & s__instance(V__A,s__AntigenB)
              & s__part(V__A,V__B) ) ) ) ).

fof(kb_SUMO_11231,axiom,
    s__subclass(s__NerveCell,s__Cell) ).

fof(kb_SUMO_11232,axiom,
    s__instance(s__NerveCell__t,s__SetOrClass) ).

fof(kb_SUMO_11233,axiom,
    s__subclass(s__NerveCell,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11234,axiom,
    s__documentation(s__NerveCell,s__EnglishLanguage,'The &%Cells that make up a &%NervousSystem.') ).

fof(kb_SUMO_11235,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__Object)
     => ( s__instance(V__N,s__NerveCell)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__NervousSystem)
            & s__part(V__N,V__S) ) ) ) ).

fof(kb_SUMO_11236,axiom,
    s__subclass(s__LiquidBodySubstance,s__BodySubstance) ).

fof(kb_SUMO_11237,axiom,
    s__documentation(s__LiquidBodySubstance,s__EnglishLanguage,'Any &%BodySubstance which is &%Liquid under normal circumstances.') ).

fof(kb_SUMO_11238,axiom,
    ! [V__SUBSTANCE] :
      ( s__instance(V__SUBSTANCE,s__Object)
     => ( s__instance(V__SUBSTANCE,s__LiquidBodySubstance)
       => s__attribute(V__SUBSTANCE,s__Liquid) ) ) ).

fof(kb_SUMO_11239,axiom,
    s__subclass(s__Serum,s__LiquidBodySubstance) ).

fof(kb_SUMO_11240,axiom,
    s__instance(s__Serum__t,s__SetOrClass) ).

fof(kb_SUMO_11241,axiom,
    s__instance(s__LiquidBodySubstance__t,s__SetOrClass) ).

fof(kb_SUMO_11242,axiom,
    s__disjoint(s__Serum,s__Blood) ).

fof(kb_SUMO_11243,axiom,
    s__documentation(s__Serum,s__EnglishLanguage,'Any &%LiquidBodySubstance other than &%Blood.') ).

fof(kb_SUMO_11244,axiom,
    s__subclass(s__TearSubstance,s__LiquidBodySubstance) ).

fof(kb_SUMO_11245,axiom,
    s__instance(s__TearSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_11246,axiom,
    s__subclass(s__TearSubstance,s__SalineSolution) ).

fof(kb_SUMO_11247,axiom,
    s__documentation(s__TearSubstance,s__EnglishLanguage,'The class of &%SalineSolutions produced by the lacrimal glands of the &%Eyes.') ).

fof(kb_SUMO_11248,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__TearSubstance)
     => ? [V__P,V__E] :
          ( s__instance(V__E,s__Object)
          & s__instance(V__P,s__Process)
          & s__instance(V__E,s__Eye)
          & s__instrument(V__P,V__E)
          & s__result(V__P,V__T) ) ) ).

fof(kb_SUMO_11249,axiom,
    s__subclass(s__Milk,s__LiquidBodySubstance) ).

fof(kb_SUMO_11250,axiom,
    s__subclass(s__Milk,s__Beverage) ).

fof(kb_SUMO_11251,axiom,
    s__instance(s__Milk__t,s__SetOrClass) ).

fof(kb_SUMO_11252,axiom,
    s__documentation(s__Milk,s__EnglishLanguage,'A nutritious &%BodySubstance produced by &%Mammals that has evolved to provide nourishment for their offspring during their initial period of life.') ).

fof(kb_SUMO_11253,axiom,
    ! [V__MILK] :
      ( s__instance(V__MILK,s__Milk)
     => ? [V__PROCESS,V__MAMMAL] :
          ( s__instance(V__MAMMAL,s__Object)
          & s__instance(V__PROCESS,s__Process)
          & s__instance(V__MAMMAL,s__Mammal)
          & s__attribute(V__MAMMAL,s__Female)
          & s__instrument(V__PROCESS,V__MAMMAL)
          & s__result(V__PROCESS,V__MILK) ) ) ).

fof(kb_SUMO_11254,axiom,
    s__subclass(s__CellPart,s__BodyPart) ).

fof(kb_SUMO_11255,axiom,
    s__documentation(s__CellPart,s__EnglishLanguage,'&%part of a &%Cell') ).

fof(kb_SUMO_11256,axiom,
    ! [V__OBJ1] :
      ( s__instance(V__OBJ1,s__Object)
     => ( s__instance(V__OBJ1,s__CellPart)
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__instance(V__CELL,s__Cell)
            & s__properPart(V__OBJ1,V__CELL) ) ) ) ).

fof(kb_SUMO_11257,axiom,
    s__subclass(s__CellNucleus,s__CellPart) ).

fof(kb_SUMO_11258,axiom,
    s__instance(s__CellNucleus__t,s__SetOrClass) ).

fof(kb_SUMO_11259,axiom,
    s__instance(s__CellPart__t,s__SetOrClass) ).

fof(kb_SUMO_11260,axiom,
    s__documentation(s__CellNucleus,s__EnglishLanguage,'The part of the &%Cell that contains DNA and RNA.') ).

fof(kb_SUMO_11261,axiom,
    ! [V__NUCLEUS] :
      ( s__instance(V__NUCLEUS,s__Object)
     => ( s__instance(V__NUCLEUS,s__CellNucleus)
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__instance(V__CELL,s__Cell)
            & s__part(V__NUCLEUS,V__CELL) ) ) ) ).

fof(kb_SUMO_11262,axiom,
    s__subclass(s__Tea,s__Beverage) ).

fof(kb_SUMO_11263,axiom,
    s__subclass(s__Tea,s__PreparedFood) ).

fof(kb_SUMO_11264,axiom,
    s__instance(s__Tea__t,s__SetOrClass) ).

fof(kb_SUMO_11265,axiom,
    s__documentation(s__Tea,s__EnglishLanguage,'A &%Beverage which is prepared by infusing tea leaves into hot water.') ).

fof(kb_SUMO_11266,axiom,
    s__subclass(s__AlcoholicBeverage,s__Beverage) ).

fof(kb_SUMO_11267,axiom,
    s__subclass(s__AlcoholicBeverage,s__Depressant) ).

fof(kb_SUMO_11268,axiom,
    s__instance(s__Depressant__t,s__SetOrClass) ).

fof(kb_SUMO_11269,axiom,
    s__documentation(s__AlcoholicBeverage,s__EnglishLanguage,'Any &%Beverage that contains &%Alcohol.') ).

fof(kb_SUMO_11270,axiom,
    ! [V__BEVERAGE] :
      ( s__instance(V__BEVERAGE,s__Object)
     => ( s__instance(V__BEVERAGE,s__AlcoholicBeverage)
       => ? [V__ALCOHOL] :
            ( s__instance(V__ALCOHOL,s__Object)
            & s__instance(V__ALCOHOL,s__Alcohol)
            & s__part(V__ALCOHOL,V__BEVERAGE) ) ) ) ).

fof(kb_SUMO_11271,axiom,
    s__subclass(s__Wine,s__AlcoholicBeverage) ).

fof(kb_SUMO_11272,axiom,
    s__instance(s__Wine__t,s__SetOrClass) ).

fof(kb_SUMO_11273,axiom,
    s__subclass(s__DistilledAlcoholicBeverage,s__AlcoholicBeverage) ).

fof(kb_SUMO_11274,axiom,
    s__instance(s__DistilledAlcoholicBeverage__t,s__SetOrClass) ).

fof(kb_SUMO_11275,axiom,
    s__documentation(s__DistilledAlcoholicBeverage,s__EnglishLanguage,'An &%AlcoholicBeverage that has had some part of its &%Water content removed by distillation. This class covers drinks of unmixed, hard liquor.') ).

fof(kb_SUMO_11276,axiom,
    ! [V__BEVERAGE] :
      ( s__instance(V__BEVERAGE,s__Object)
     => ( s__instance(V__BEVERAGE,s__DistilledAlcoholicBeverage)
       => ? [V__REMOVE,V__WATER] :
            ( s__instance(V__REMOVE,s__Process)
            & s__instance(V__REMOVE,s__Removing)
            & s__patient(V__REMOVE,V__WATER)
            & s__instance(V__WATER,s__Water)
            & s__origin(V__REMOVE,V__BEVERAGE) ) ) ) ).

fof(kb_SUMO_11277,axiom,
    s__subclass(s__Beer,s__AlcoholicBeverage) ).

fof(kb_SUMO_11278,axiom,
    s__instance(s__Beer__t,s__SetOrClass) ).

fof(kb_SUMO_11279,axiom,
    s__instance(s__AlcoholicBeverage__t,s__SetOrClass) ).

fof(kb_SUMO_11280,axiom,
    s__subclass(s__SpinalColumn,s__Organ) ).

fof(kb_SUMO_11281,axiom,
    s__subclass(s__SpinalColumn,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11282,axiom,
    s__instance(s__SpinalColumn__t,s__SetOrClass) ).

fof(kb_SUMO_11283,axiom,
    s__documentation(s__SpinalColumn,s__EnglishLanguage,'A flexible column made out of bones called vertebrae. The main function of the &%SpinalColumn is to protect the spinal cord.') ).

fof(kb_SUMO_11284,axiom,
    ! [V__VERT] :
      ( s__instance(V__VERT,s__CorpuscularObject)
     => ( s__instance(V__VERT,s__Vertebrate)
      <=> ? [V__SPINE] :
            ( s__instance(V__SPINE,s__CorpuscularObject)
            & s__instance(V__VERT,s__Animal)
            & s__component(V__SPINE,V__VERT)
            & s__instance(V__SPINE,s__SpinalColumn) ) ) ) ).

fof(kb_SUMO_11285,axiom,
    s__subclass(s__SpinalCord,s__Organ) ).

fof(kb_SUMO_11286,axiom,
    s__instance(s__SpinalCord__t,s__SetOrClass) ).

fof(kb_SUMO_11287,axiom,
    s__documentation(s__SpinalCord,s__EnglishLanguage,'A cord of nerves that carries impulses to and from the &%Brain. It is contained within the &%SpinalColumn.') ).

fof(kb_SUMO_11288,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__SpinalCord)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__NervousSystem)
            & s__part(V__C,V__S) ) ) ) ).

fof(kb_SUMO_11289,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__SpinalCord)
       => ? [V__S] :
            ( s__instance(V__S,s__SelfConnectedObject)
            & s__instance(V__S,s__SpinalColumn)
            & s__contains(V__S,V__C) ) ) ) ).

fof(kb_SUMO_11290,axiom,
    s__subclass(s__Tail,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11291,axiom,
    s__instance(s__Tail__t,s__SetOrClass) ).

fof(kb_SUMO_11292,axiom,
    s__documentation(s__Tail,s__EnglishLanguage,'A &%BodyPart which extends from the rear of the main body of some &%Vertebrates.') ).

fof(kb_SUMO_11293,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Object)
     => ( s__instance(V__T,s__Tail)
       => ? [V__V] :
            ( s__instance(V__V,s__Object)
            & s__instance(V__V,s__Vertebrate)
            & s__part(V__T,V__V)
            & ~ s__instance(V__V,s__Human) ) ) ) ).

fof(kb_SUMO_11294,axiom,
    s__subclass(s__Wing,s__Limb) ).

fof(kb_SUMO_11295,axiom,
    s__instance(s__Wing__t,s__SetOrClass) ).

fof(kb_SUMO_11296,axiom,
    s__documentation(s__Wing,s__EnglishLanguage,'Any &%Limb which is capable of being an instrument in &%Flying.') ).

fof(kb_SUMO_11297,axiom,
    s__subclass(s__Skin,s__BodyCovering) ).

fof(kb_SUMO_11298,axiom,
    s__instance(s__Skin__t,s__SetOrClass) ).

fof(kb_SUMO_11299,axiom,
    s__subclass(s__Skin,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11300,axiom,
    s__documentation(s__Skin,s__EnglishLanguage,'A BodyCovering that comprises part of the surface of &%Animals.') ).

fof(kb_SUMO_11301,axiom,
    ! [V__SKIN] :
      ( s__instance(V__SKIN,s__Object)
     => ( s__instance(V__SKIN,s__Skin)
       => ? [V__SURFACE,V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__SelfConnectedObject)
            & s__instance(V__SURFACE,s__SelfConnectedObject)
            & s__surface(V__SURFACE,V__ANIMAL)
            & s__part(V__SKIN,V__ANIMAL)
            & s__instance(V__ANIMAL,s__Animal)
            & s__overlapsSpatially(V__SKIN,V__SURFACE) ) ) ) ).

fof(kb_SUMO_11302,axiom,
    s__subclass(s__Retina,s__Organ) ).

fof(kb_SUMO_11303,axiom,
    s__instance(s__Retina__t,s__SetOrClass) ).

fof(kb_SUMO_11304,axiom,
    s__subclass(s__Retina,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11305,axiom,
    s__documentation(s__Retina,s__EnglishLanguage,'A membrane that covers the &%Eye and converts the image formed by the lens of the &%Eye into neurochemical impulses which can be processed by the &%Brain.') ).

fof(kb_SUMO_11306,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Retina)
       => ? [V__E] :
            ( s__instance(V__E,s__Object)
            & s__instance(V__E,s__Eye)
            & s__part(V__R,V__E) ) ) ) ).

fof(kb_SUMO_11307,axiom,
    s__subclass(s__BronchialDuct,s__BodyVessel) ).

fof(kb_SUMO_11308,axiom,
    s__subclass(s__BronchialDuct,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11309,axiom,
    s__instance(s__BronchialDuct__t,s__SetOrClass) ).

fof(kb_SUMO_11310,axiom,
    s__documentation(s__BronchialDuct,s__EnglishLanguage,'Any &%BodyVessel which is located in a &%Lung and which carries oxygen from the trachea to the alveoli.') ).

fof(kb_SUMO_11311,axiom,
    ! [V__DUCT] :
      ( s__instance(V__DUCT,s__Physical)
     => ( s__instance(V__DUCT,s__BronchialDuct)
       => ? [V__LUNG] :
            ( s__instance(V__LUNG,s__Object)
            & s__instance(V__LUNG,s__Lung)
            & s__located(V__DUCT,V__LUNG) ) ) ) ).

fof(kb_SUMO_11312,axiom,
    s__subclass(s__BloodVessel,s__BodyVessel) ).

fof(kb_SUMO_11313,axiom,
    s__subclass(s__BloodVessel,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11314,axiom,
    s__documentation(s__BloodVessel,s__EnglishLanguage,'Any &%BodyVessel which is used to circulate &%Blood from one part of the body to another.') ).

fof(kb_SUMO_11315,axiom,
    ! [V__VESSEL] :
      ( s__instance(V__VESSEL,s__Object)
     => ( s__instance(V__VESSEL,s__BloodVessel)
       => ? [V__BLOOD,V__TRANSFER] :
            ( s__instance(V__TRANSFER,s__Process)
            & s__instance(V__BLOOD,s__Blood)
            & s__instance(V__TRANSFER,s__Transfer)
            & s__patient(V__TRANSFER,V__BLOOD)
            & s__instrument(V__TRANSFER,V__VESSEL) ) ) ) ).

fof(kb_SUMO_11316,axiom,
    s__subclass(s__Alveolus,s__BodyVessel) ).

fof(kb_SUMO_11317,axiom,
    s__subclass(s__Alveolus,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11318,axiom,
    s__instance(s__Alveolus__t,s__SetOrClass) ).

fof(kb_SUMO_11319,axiom,
    s__documentation(s__Alveolus,s__EnglishLanguage,'Tiny sacs in the &%Lung which absorb &%Oxygen which is delivered to them by the &%BronchialDucts.') ).

fof(kb_SUMO_11320,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Physical)
     => ( s__instance(V__A,s__Alveolus)
       => ? [V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__L,s__Lung)
            & s__located(V__A,V__L) ) ) ) ).

fof(kb_SUMO_11321,axiom,
    s__subclass(s__Artery,s__BloodVessel) ).

fof(kb_SUMO_11322,axiom,
    s__instance(s__Artery__t,s__SetOrClass) ).

fof(kb_SUMO_11323,axiom,
    s__instance(s__BloodVessel__t,s__SetOrClass) ).

fof(kb_SUMO_11324,axiom,
    s__documentation(s__Artery,s__EnglishLanguage,'Any &%BloodVessel which transfers &%Blood from the &%Heart to the extremities of the body.') ).

fof(kb_SUMO_11325,axiom,
    ! [V__ARTERY,V__BLOOD,V__TRANSFER] :
      ( ( s__instance(V__TRANSFER,s__Process)
        & s__instance(V__ARTERY,s__Object) )
     => ( ( s__instance(V__ARTERY,s__Artery)
          & s__instance(V__TRANSFER,s__Transfer)
          & s__patient(V__TRANSFER,V__BLOOD)
          & s__instrument(V__TRANSFER,V__ARTERY)
          & s__instance(V__BLOOD,s__Blood) )
       => ? [V__HEART] :
            ( s__instance(V__HEART,s__Object)
            & s__instance(V__HEART,s__Heart)
            & s__origin(V__TRANSFER,V__HEART) ) ) ) ).

fof(kb_SUMO_11326,axiom,
    s__subclass(s__Vein,s__BloodVessel) ).

fof(kb_SUMO_11327,axiom,
    s__relatedInternalConcept(s__Vein,s__Artery) ).

fof(kb_SUMO_11328,axiom,
    s__documentation(s__Vein,s__EnglishLanguage,'Any &%BloodVessel which transfers &%Blood from the extremities of the body to the &%Heart.') ).

fof(kb_SUMO_11329,axiom,
    ! [V__B,V__T,V__V] :
      ( ( s__instance(V__V,s__Object)
        & s__instance(V__T,s__Process) )
     => ( ( s__instance(V__V,s__Vein)
          & s__instance(V__T,s__Transfer)
          & s__patient(V__T,V__B)
          & s__instrument(V__T,V__V)
          & s__instance(V__B,s__Blood) )
       => ? [V__H] :
            ( s__instance(V__H,s__Heart)
            & s__destination(V__T,V__H) ) ) ) ).

fof(kb_SUMO_11330,axiom,
    s__subclass(s__PulmonaryArtery,s__Artery) ).

fof(kb_SUMO_11331,axiom,
    s__instance(s__PulmonaryArtery__t,s__SetOrClass) ).

fof(kb_SUMO_11332,axiom,
    s__documentation(s__PulmonaryArtery,s__EnglishLanguage,'An &%Artery that carries &%Blood from the &%Heart to a &%Lung.') ).

fof(kb_SUMO_11333,axiom,
    ! [V__ARTERY,V__BLOOD,V__TRANSFER] :
      ( ( s__instance(V__TRANSFER,s__Process)
        & s__instance(V__ARTERY,s__Object) )
     => ( ( s__instance(V__ARTERY,s__PulmonaryArtery)
          & s__instance(V__TRANSFER,s__Transfer)
          & s__patient(V__TRANSFER,V__BLOOD)
          & s__instrument(V__TRANSFER,V__ARTERY)
          & s__instance(V__BLOOD,s__Blood) )
       => ? [V__LUNG] :
            ( s__instance(V__LUNG,s__Lung)
            & s__destination(V__TRANSFER,V__LUNG) ) ) ) ).

fof(kb_SUMO_11334,axiom,
    s__subclass(s__PulmonaryVein,s__Vein) ).

fof(kb_SUMO_11335,axiom,
    s__instance(s__PulmonaryVein__t,s__SetOrClass) ).

fof(kb_SUMO_11336,axiom,
    s__instance(s__Vein__t,s__SetOrClass) ).

fof(kb_SUMO_11337,axiom,
    s__documentation(s__PulmonaryVein,s__EnglishLanguage,'A &%Vein that carries &%Blood from the &%Lungs to the &%Heart.') ).

fof(kb_SUMO_11338,axiom,
    ! [V__B,V__T,V__V] :
      ( ( s__instance(V__V,s__Object)
        & s__instance(V__T,s__Process) )
     => ( ( s__instance(V__V,s__PulmonaryVein)
          & s__instance(V__T,s__Transfer)
          & s__patient(V__T,V__B)
          & s__instrument(V__T,V__V)
          & s__instance(V__B,s__Blood) )
       => ? [V__L,V__H,V__P] :
            ( s__instance(V__P,s__Object)
            & s__instance(V__H,s__Object)
            & s__instance(V__L,s__Object)
            & s__instance(V__L,s__Lung)
            & s__origin(V__T,V__L)
            & s__part(V__V,V__P)
            & s__part(V__L,V__P)
            & s__part(V__H,V__P)
            & s__instance(V__H,s__Heart)
            & s__destination(V__T,V__H) ) ) ) ).

fof(kb_SUMO_11339,axiom,
    s__subclass(s__Capillary,s__BloodVessel) ).

fof(kb_SUMO_11340,axiom,
    s__instance(s__Capillary__t,s__SetOrClass) ).

fof(kb_SUMO_11341,axiom,
    s__documentation(s__Capillary,s__EnglishLanguage,'A very small &%BloodVessel that connects arterioles (very small &%Arteries) with venules (very small &%Veins).') ).

fof(kb_SUMO_11342,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__SelfConnectedObject)
     => ( s__instance(V__C,s__Capillary)
       => ? [V__A,V__V] :
            ( s__instance(V__V,s__SelfConnectedObject)
            & s__instance(V__A,s__SelfConnectedObject)
            & s__instance(V__A,s__Artery)
            & s__instance(V__V,s__Vein)
            & s__connects(V__C,V__A,V__V) ) ) ) ).

fof(kb_SUMO_11343,axiom,
    s__subclass(s__Lung,s__Organ) ).

fof(kb_SUMO_11344,axiom,
    s__instance(s__Lung__t,s__SetOrClass) ).

fof(kb_SUMO_11345,axiom,
    s__subclass(s__Lung,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11346,axiom,
    s__documentation(s__Lung,s__EnglishLanguage,'A respiratory organ of &%Vertebrates. Its function is to furnish the blood with oxygen and to remove carbon dioxide.') ).

fof(kb_SUMO_11347,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__CorpuscularObject)
     => ( s__capability(s__Breathing,s__experiencer__m,V__ANIMAL)
       => ? [V__LUNG] :
            ( s__instance(V__LUNG,s__CorpuscularObject)
            & s__component(V__LUNG,V__ANIMAL)
            & s__instance(V__LUNG,s__Lung) ) ) ) ).

fof(kb_SUMO_11348,axiom,
    s__subclass(s__Kidney,s__Organ) ).

fof(kb_SUMO_11349,axiom,
    s__instance(s__Kidney__t,s__SetOrClass) ).

fof(kb_SUMO_11350,axiom,
    s__subclass(s__Kidney,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11351,axiom,
    s__documentation(s__Kidney,s__EnglishLanguage,'An &%Organ that separates urine from other &%BodySubstances and passes it to the bladder.') ).

fof(kb_SUMO_11352,axiom,
    s__subclass(s__Spleen,s__Organ) ).

fof(kb_SUMO_11353,axiom,
    s__instance(s__Spleen__t,s__SetOrClass) ).

fof(kb_SUMO_11354,axiom,
    s__subclass(s__Spleen,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11355,axiom,
    s__documentation(s__Spleen,s__EnglishLanguage,'An &%Organ on the left side of the body that produces &%Cells that play a crucial role in immune response.') ).

fof(kb_SUMO_11356,axiom,
    s__subclass(s__Inhaling,s__Breathing) ).

fof(kb_SUMO_11357,axiom,
    s__instance(s__Inhaling__t,s__SetOrClass) ).

fof(kb_SUMO_11358,axiom,
    s__documentation(s__Inhaling,s__EnglishLanguage,'Any instance of &%Breathing where the breath is taken into the &%Lungs.') ).

fof(kb_SUMO_11359,axiom,
    ! [V__I] :
      ( s__instance(V__I,s__Process)
     => ( s__instance(V__I,s__Inhaling)
       => ? [V__L] :
            ( s__instance(V__L,s__Lung)
            & s__destination(V__I,V__L) ) ) ) ).

fof(kb_SUMO_11360,axiom,
    s__subclass(s__Exhaling,s__Breathing) ).

fof(kb_SUMO_11361,axiom,
    s__instance(s__Exhaling__t,s__SetOrClass) ).

fof(kb_SUMO_11362,axiom,
    s__documentation(s__Exhaling,s__EnglishLanguage,'Any instance of &%Breathing where the breath is expelled from the &%Lungs.') ).

fof(kb_SUMO_11363,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Process)
     => ( s__instance(V__E,s__Exhaling)
       => ? [V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__L,s__Lung)
            & s__origin(V__E,V__L) ) ) ) ).

fof(kb_SUMO_11364,axiom,
    s__subclass(s__Nostril,s__BodyVessel) ).

fof(kb_SUMO_11365,axiom,
    s__subclass(s__Nostril,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11366,axiom,
    s__instance(s__Nostril__t,s__SetOrClass) ).

fof(kb_SUMO_11367,axiom,
    s__documentation(s__Nostril,s__EnglishLanguage,'Either of two &%BodyVessels that run through the &%Nose and connect it to the &%Throat.') ).

fof(kb_SUMO_11368,axiom,
    ! [V__NOSE] :
      ( s__instance(V__NOSE,s__Object)
     => ( s__instance(V__NOSE,s__Nose)
       => ? [V__N1,V__N2] :
            ( s__instance(V__N2,s__Object)
            & s__instance(V__N1,s__Object)
            & s__instance(V__N1,s__Nostril)
            & s__instance(V__N2,s__Nostril)
            & V__N1 != V__N2
            & s__connected(V__N1,V__NOSE)
            & s__connected(V__N2,V__NOSE) ) ) ) ).

fof(kb_SUMO_11369,axiom,
    ! [V__NOS] :
      ( s__instance(V__NOS,s__SelfConnectedObject)
     => ( s__instance(V__NOS,s__Nostril)
       => ? [V__N,V__T] :
            ( s__instance(V__T,s__SelfConnectedObject)
            & s__instance(V__N,s__SelfConnectedObject)
            & s__instance(V__N,s__Nose)
            & s__instance(V__T,s__Throat)
            & s__connects(V__NOS,V__N,V__T) ) ) ) ).

fof(kb_SUMO_11370,axiom,
    s__subclass(s__Heart,s__Organ) ).

fof(kb_SUMO_11371,axiom,
    s__instance(s__Heart__t,s__SetOrClass) ).

fof(kb_SUMO_11372,axiom,
    s__subclass(s__Heart,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11373,axiom,
    s__documentation(s__Heart,s__EnglishLanguage,'The &%Organ that pumps &%Blood throughout the body.') ).

fof(kb_SUMO_11374,axiom,
    ! [V__HEART] :
      ( s__instance(V__HEART,s__Object)
     => ( s__instance(V__HEART,s__Heart)
       => ? [V__TRANSFER,V__BLOOD] :
            ( s__instance(V__TRANSFER,s__Process)
            & s__instance(V__TRANSFER,s__Transfer)
            & s__instance(V__BLOOD,s__Blood)
            & s__instrument(V__TRANSFER,V__HEART)
            & s__patient(V__TRANSFER,V__BLOOD) ) ) ) ).

fof(kb_SUMO_11375,axiom,
    s__subclass(s__Liver,s__Organ) ).

fof(kb_SUMO_11376,axiom,
    s__instance(s__Liver__t,s__SetOrClass) ).

fof(kb_SUMO_11377,axiom,
    s__subclass(s__Liver,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11378,axiom,
    s__documentation(s__Liver,s__EnglishLanguage,'An &%Organ that secretes bile and serves metabolic functions.') ).

fof(kb_SUMO_11379,axiom,
    s__subclass(s__Mouth,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11380,axiom,
    s__subclass(s__Mouth,s__BodyPart) ).

fof(kb_SUMO_11381,axiom,
    s__instance(s__Mouth__t,s__SetOrClass) ).

fof(kb_SUMO_11382,axiom,
    s__documentation(s__Mouth,s__EnglishLanguage,'Part of the &%Face, used for &%Ingesting Food and &%Vocalizing.') ).

fof(kb_SUMO_11383,axiom,
    ! [V__MOUTH] :
      ( s__instance(V__MOUTH,s__Object)
     => ( s__instance(V__MOUTH,s__Mouth)
       => ? [V__FACE] :
            ( s__instance(V__FACE,s__Object)
            & s__instance(V__FACE,s__Face)
            & s__part(V__MOUTH,V__FACE) ) ) ) ).

fof(kb_SUMO_11384,axiom,
    s__subclass(s__Tongue,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11385,axiom,
    s__instance(s__Tongue__t,s__SetOrClass) ).

fof(kb_SUMO_11386,axiom,
    s__subclass(s__Tongue,s__BodyPart) ).

fof(kb_SUMO_11387,axiom,
    s__documentation(s__Tongue,s__EnglishLanguage,'Part of the &%Mouth, used for &%Tasting Food, &%Vocalizing, and the initial stage of &%Digesting.') ).

fof(kb_SUMO_11388,axiom,
    ! [V__TONGUE] :
      ( s__instance(V__TONGUE,s__Object)
     => ( s__instance(V__TONGUE,s__Tongue)
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__part(V__TONGUE,V__MOUTH) ) ) ) ).

fof(kb_SUMO_11389,axiom,
    s__subclass(s__NervousSystem,s__Organ) ).

fof(kb_SUMO_11390,axiom,
    s__subclass(s__NervousSystem,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11391,axiom,
    s__instance(s__NervousSystem__t,s__SetOrClass) ).

fof(kb_SUMO_11392,axiom,
    s__documentation(s__NervousSystem,s__EnglishLanguage,'A system in &%Vertebrates that is made up of the &%Brain, the spinal cord, nerves, etc.') ).

fof(kb_SUMO_11393,axiom,
    ! [V__A,V__S] :
      ( ( s__instance(V__S,s__Object)
        & s__instance(V__A,s__Object) )
     => ( ( s__instance(V__S,s__NervousSystem)
          & s__part(V__S,V__A)
          & s__instance(V__A,s__Animal) )
       => s__instance(V__A,s__Vertebrate) ) ) ).

fof(kb_SUMO_11394,axiom,
    s__subclass(s__Hoof,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11395,axiom,
    s__subclass(s__Hoof,s__BodyPart) ).

fof(kb_SUMO_11396,axiom,
    s__instance(s__Hoof__t,s__SetOrClass) ).

fof(kb_SUMO_11397,axiom,
    s__documentation(s__Hoof,s__EnglishLanguage,'The hard end of the &%Foot of a &%HoofedMammal.') ).

fof(kb_SUMO_11398,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__Hoof)
       => ? [V__F,V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__F,s__Object)
            & s__instance(V__F,s__Foot)
            & s__instance(V__A,s__HoofedMammal)
            & s__part(V__H,V__F)
            & s__part(V__F,V__A) ) ) ) ).

fof(kb_SUMO_11399,axiom,
    s__subclass(s__Tooth,s__Bone) ).

fof(kb_SUMO_11400,axiom,
    s__instance(s__Tooth__t,s__SetOrClass) ).

fof(kb_SUMO_11401,axiom,
    s__documentation(s__Tooth,s__EnglishLanguage,'Part of the &%Mouth, used for biting and chewing.') ).

fof(kb_SUMO_11402,axiom,
    ! [V__TOOTH] :
      ( s__instance(V__TOOTH,s__Object)
     => ( s__instance(V__TOOTH,s__Tooth)
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__part(V__TOOTH,V__MOUTH) ) ) ) ).

fof(kb_SUMO_11403,axiom,
    s__subclass(s__Skull,s__Bone) ).

fof(kb_SUMO_11404,axiom,
    s__instance(s__Skull__t,s__SetOrClass) ).

fof(kb_SUMO_11405,axiom,
    s__documentation(s__Skull,s__EnglishLanguage,'The &%Bone that is found in the &%Heads of &%Vertebrates.') ).

fof(kb_SUMO_11406,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Skull)
       => ? [V__V,V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__V,s__Object)
            & s__instance(V__V,s__Vertebrate)
            & s__instance(V__H,s__Head)
            & s__part(V__H,V__V)
            & s__part(V__S,V__H) ) ) ) ).

fof(kb_SUMO_11407,axiom,
    s__subclass(s__Horn,s__Bone) ).

fof(kb_SUMO_11408,axiom,
    s__instance(s__Horn__t,s__SetOrClass) ).

fof(kb_SUMO_11409,axiom,
    s__documentation(s__Horn,s__EnglishLanguage,'An outgrowth of &%Bone that is found on some &%HoofedMammals.') ).

fof(kb_SUMO_11410,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__Horn)
       => ? [V__M] :
            ( s__instance(V__M,s__Object)
            & s__instance(V__M,s__HoofedMammal)
            & s__part(V__H,V__M) ) ) ) ).

fof(kb_SUMO_11411,axiom,
    s__subclass(s__Ivory,s__Bone) ).

fof(kb_SUMO_11412,axiom,
    s__instance(s__Ivory__t,s__SetOrClass) ).

fof(kb_SUMO_11413,axiom,
    s__documentation(s__Ivory,s__EnglishLanguage,'A very hard substance that makes up the tusks of elephants and walruses.') ).

fof(kb_SUMO_11414,axiom,
    s__subclass(s__AnimalShell,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11415,axiom,
    s__instance(s__AnimalShell__t,s__SetOrClass) ).

fof(kb_SUMO_11416,axiom,
    s__subclass(s__AnimalShell,s__BodyPart) ).

fof(kb_SUMO_11417,axiom,
    s__documentation(s__AnimalShell,s__EnglishLanguage,'A hard shell of calcium that serves as a supporting structure for some &%Invertebrates.') ).

fof(kb_SUMO_11418,axiom,
    ! [V__A,V__S] :
      ( ( s__instance(V__S,s__Object)
        & s__instance(V__A,s__Object) )
     => ( ( s__instance(V__A,s__Animal)
          & s__instance(V__S,s__AnimalShell)
          & s__part(V__S,V__A) )
       => ( s__instance(V__A,s__Invertebrate)
          | s__instance(V__A,s__Reptile) ) ) ) ).

fof(kb_SUMO_11419,axiom,
    s__subclass(s__Ossification,s__OrganOrTissueProcess) ).

fof(kb_SUMO_11420,axiom,
    s__instance(s__Ossification__t,s__SetOrClass) ).

fof(kb_SUMO_11421,axiom,
    s__documentation(s__Ossification,s__EnglishLanguage,'Any &%BiologicalProcess that results in the formation of &%Bones.') ).

fof(kb_SUMO_11422,axiom,
    ! [V__O] :
      ( s__instance(V__O,s__Process)
     => ( s__instance(V__O,s__Ossification)
       => ? [V__B] :
            ( s__instance(V__B,s__Bone)
            & s__result(V__O,V__B) ) ) ) ).

fof(kb_SUMO_11423,axiom,
    s__subclass(s__Chewing,s__BodyMotion) ).

fof(kb_SUMO_11424,axiom,
    s__instance(s__Chewing__t,s__SetOrClass) ).

fof(kb_SUMO_11425,axiom,
    s__documentation(s__Chewing,s__EnglishLanguage,'Breaking up or mashing Food with ones teeth.') ).

fof(kb_SUMO_11426,axiom,
    ! [V__FOOD,V__CHEW] :
      ( ( s__instance(V__CHEW,s__Process)
        & s__instance(V__FOOD,s__Object) )
     => ( ( s__instance(V__CHEW,s__Chewing)
          & s__resource(V__CHEW,V__FOOD) )
       => s__instance(V__FOOD,s__FoodForFn(s__Organism)) ) ) ).

fof(kb_SUMO_11427,axiom,
    ! [V__TOOTH,V__CHEW] :
      ( ( s__instance(V__CHEW,s__Process)
        & s__instance(V__TOOTH,s__Object) )
     => ( ( s__instance(V__CHEW,s__Chewing)
          & s__instrument(V__CHEW,V__TOOTH) )
       => s__instance(V__TOOTH,s__Tooth) ) ) ).

fof(kb_SUMO_11428,axiom,
    ! [V__CHEW] :
      ( s__instance(V__CHEW,s__Process)
     => ( s__instance(V__CHEW,s__Chewing)
       => ? [V__EAT] :
            ( s__instance(V__EAT,s__Process)
            & s__instance(V__EAT,s__Eating)
            & s__subProcess(V__CHEW,V__EAT) ) ) ) ).

fof(kb_SUMO_11429,axiom,
    s__subclass(s__Feeding,s__Giving) ).

fof(kb_SUMO_11430,axiom,
    s__instance(s__Feeding__t,s__SetOrClass) ).

fof(kb_SUMO_11431,axiom,
    s__documentation(s__Feeding,s__EnglishLanguage,'Giving Food to a &%Human or &%Animal.') ).

fof(kb_SUMO_11432,axiom,
    ! [V__O,V__F] :
      ( s__instance(V__F,s__Process)
     => ( ( s__instance(V__F,s__Feeding)
          & s__patient(V__F,V__O) )
       => s__instance(V__O,s__FoodForFn(s__Animal)) ) ) ).

fof(kb_SUMO_11433,axiom,
    ! [V__A,V__F] :
      ( s__instance(V__F,s__Process)
     => ( ( s__instance(V__F,s__Feeding)
          & s__destination(V__F,V__A) )
       => s__instance(V__A,s__Animal) ) ) ).

fof(kb_SUMO_11434,axiom,
    s__subclass(s__Lip,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11435,axiom,
    s__instance(s__Lip__t,s__SetOrClass) ).

fof(kb_SUMO_11436,axiom,
    s__subclass(s__Lip,s__BodyPart) ).

fof(kb_SUMO_11437,axiom,
    s__documentation(s__Lip,s__EnglishLanguage,'Folds of &%Tissue surrounding the mouths of some &%Vertebrates.') ).

fof(kb_SUMO_11438,axiom,
    ! [V__LIP] :
      ( s__instance(V__LIP,s__Object)
     => ( s__instance(V__LIP,s__Lip)
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__part(V__LIP,V__MOUTH) ) ) ) ).

fof(kb_SUMO_11439,axiom,
    s__subclass(s__Kissing,s__Touching) ).

fof(kb_SUMO_11440,axiom,
    s__instance(s__Kissing__t,s__SetOrClass) ).

fof(kb_SUMO_11441,axiom,
    s__documentation(s__Kissing,s__EnglishLanguage,'The class of &%Touching processes where the lips of two persons are brought into contact with each other.') ).

%FOL fof(kb_SUMO_11442,axiom,(( (! [V__KISS] : (s__instance(V__KISS,s__Process) => (s__instance(V__KISS,s__Kissing) => (? [V__PERSON1,V__PERSON2,V__LIP1,V__LIP2] : (s__instance(V__LIP2,s__Object) & s__instance(V__LIP1,s__Object) & s__instance(V__PERSON2,s__Agent) & s__instance(V__PERSON1,s__Agent) & s__agent(V__KISS,V__PERSON1) & s__agent(V__KISS,V__PERSON2) & s__instance(V__PERSON1,s__Human) & s__instance(V__PERSON2,s__Human) & (~ (V__PERSON1 = V__PERSON2)) & s__instance(V__LIP1,s__Lip) & s__instance(V__LIP2,s__Lip) & s__part(V__LIP1,V__PERSON1) & s__part(V__LIP2,V__PERSON2) & s__holdsDuring(s__BeginFn(s__WhenFn(V__KISS)),'(~ s__meetsSpatially(V__LIP1,V__LIP2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__KISS)),'s__meetsSpatially(V__LIP1,V__LIP2)')))))) ))).

fof(kb_SUMO_11443,axiom,
    s__subclass(s__Licking,s__Touching) ).

fof(kb_SUMO_11444,axiom,
    s__instance(s__Licking__t,s__SetOrClass) ).

fof(kb_SUMO_11445,axiom,
    s__documentation(s__Licking,s__EnglishLanguage,'The class of &%Touching processes where the &%Tongue is brought into contact with something else.') ).

fof(kb_SUMO_11446,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Process)
     => ( s__instance(V__L,s__Licking)
       => ? [V__T] :
            ( s__instance(V__T,s__Object)
            & s__instance(V__T,s__Tongue)
            & s__instrument(V__L,V__T) ) ) ) ).

fof(kb_SUMO_11447,axiom,
    s__subclass(s__Embracing,s__Touching) ).

fof(kb_SUMO_11448,axiom,
    s__instance(s__Embracing__t,s__SetOrClass) ).

fof(kb_SUMO_11449,axiom,
    s__documentation(s__Embracing,s__EnglishLanguage,'The class of &%Touching processes where one &%Human hugs another one.') ).

fof(kb_SUMO_11450,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Process)
     => ( s__instance(V__E,s__Embracing)
       => ? [V__P1,V__P2] :
            ( s__instance(V__P2,s__Agent)
            & s__instance(V__P1,s__Agent)
            & s__instance(V__P1,s__Human)
            & s__instance(V__P2,s__Human)
            & V__P1 != V__P2
            & s__agent(V__E,V__P1)
            & s__agent(V__E,V__P2) ) ) ) ).

fof(kb_SUMO_11451,axiom,
    s__subclass(s__Skeleton,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11452,axiom,
    s__instance(s__Skeleton__t,s__SetOrClass) ).

fof(kb_SUMO_11453,axiom,
    s__subclass(s__Skeleton,s__BodyPart) ).

fof(kb_SUMO_11454,axiom,
    s__documentation(s__Skeleton,s__EnglishLanguage,'The system of &%Bones that make up the supporting structure of &%Vertebrates.') ).

fof(kb_SUMO_11455,axiom,
    ! [V__SKELETON,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__SKELETON,s__Object) )
     => ( ( s__instance(V__ANIMAL,s__Animal)
          & s__instance(V__SKELETON,s__Skeleton)
          & s__part(V__SKELETON,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Vertebrate) ) ) ).

fof(kb_SUMO_11456,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Skeleton)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Animal)
            & s__interiorPart(V__S,V__A) ) ) ) ).

fof(kb_SUMO_11457,axiom,
    s__subclass(s__Exoskeleton,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11458,axiom,
    s__instance(s__Exoskeleton__t,s__SetOrClass) ).

fof(kb_SUMO_11459,axiom,
    s__subclass(s__Exoskeleton,s__BodyPart) ).

fof(kb_SUMO_11460,axiom,
    s__documentation(s__Exoskeleton,s__EnglishLanguage,'The system of &%Bones that are on the &%Outside of an organism and make up the supporting structure of many &%Invertebrates.') ).

fof(kb_SUMO_11461,axiom,
    ! [V__SKELETON,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__SKELETON,s__Object) )
     => ( ( s__instance(V__ANIMAL,s__Animal)
          & s__instance(V__SKELETON,s__Exoskeleton)
          & s__part(V__SKELETON,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Invertebrate) ) ) ).

fof(kb_SUMO_11462,axiom,
    ! [V__BONE] :
      ( s__instance(V__BONE,s__Object)
     => ( s__instance(V__BONE,s__Bone)
      <=> ? [V__SKELETON] :
            ( s__instance(V__SKELETON,s__Object)
            & ( s__instance(V__SKELETON,s__Skeleton)
              | s__instance(V__SKELETON,s__Exoskeleton) )
            & s__part(V__BONE,V__SKELETON) ) ) ) ).

fof(kb_SUMO_11463,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Exoskeleton)
       => ? [V__A] :
            ( s__instance(V__A,s__Animal)
            & s__part(V__X,V__A)
            & ~ ? [V__PART] :
                  ( s__instance(V__PART,s__Object)
                  & s__instance(V__A,s__Object)
                  & s__properPart(V__PART,V__A)
                  & s__orientation(V__PART,V__X,s__Outside) ) ) ) ) ).

fof(kb_SUMO_11464,axiom,
    s__subclass(s__BodyJoint,s__BodyJunction) ).

fof(kb_SUMO_11465,axiom,
    s__documentation(s__BodyJoint,s__EnglishLanguage,'&%BodyJunctions where different parts of the same &%Skeleton come together.') ).

fof(kb_SUMO_11466,axiom,
    ! [V__J] :
      ( s__instance(V__J,s__CorpuscularObject)
     => ( s__instance(V__J,s__BodyJoint)
       => ? [V__S,V__P1,V__P2] :
            ( s__instance(V__P2,s__CorpuscularObject)
            & s__instance(V__P1,s__CorpuscularObject)
            & s__instance(V__S,s__CorpuscularObject)
            & s__instance(V__S,s__Skeleton)
            & s__component(V__P1,V__S)
            & s__component(V__P2,V__S)
            & s__component(V__J,V__S)
            & s__connects(V__J,V__P1,V__P2) ) ) ) ).

fof(kb_SUMO_11467,axiom,
    s__subclass(s__Airway,s__Transitway) ).

fof(kb_SUMO_11468,axiom,
    s__instance(s__Airway__t,s__SetOrClass) ).

fof(kb_SUMO_11469,axiom,
    s__documentation(s__Airway,s__EnglishLanguage,'The class of Transitways used to transport Air to a location where it is absent or insufficient.') ).

fof(kb_SUMO_11470,axiom,
    s__subclass(s__Throat,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11471,axiom,
    s__subclass(s__Throat,s__BodyVessel) ).

fof(kb_SUMO_11472,axiom,
    s__instance(s__Throat__t,s__SetOrClass) ).

fof(kb_SUMO_11473,axiom,
    s__subclass(s__Throat,s__Airway) ).

fof(kb_SUMO_11474,axiom,
    s__documentation(s__Throat,s__EnglishLanguage,'A &%BodyVessel which connects the &%Mouth to the lungs and stomach.') ).

fof(kb_SUMO_11475,axiom,
    ! [V__THROAT] :
      ( s__instance(V__THROAT,s__Object)
     => ( s__instance(V__THROAT,s__Throat)
       => ? [V__MOUTH] :
            ( s__instance(V__MOUTH,s__Object)
            & s__instance(V__MOUTH,s__Mouth)
            & s__connected(V__THROAT,V__MOUTH) ) ) ) ).

fof(kb_SUMO_11476,axiom,
    s__subclass(s__Hair,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11477,axiom,
    s__instance(s__Hair__t,s__SetOrClass) ).

fof(kb_SUMO_11478,axiom,
    s__documentation(s__Hair,s__EnglishLanguage,'A filament that covers part of the body of many &%Mammals.') ).

%FOL fof(kb_SUMO_11479,axiom,(( (! [V__HAIR] : (s__instance(V__HAIR,s__Object) => (s__instance(V__HAIR,s__Hair) => (? [V__MAMMAL,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__MAMMAL,s__Object) & s__instance(V__MAMMAL,s__Mammal) & s__holdsDuring(V__TIME,'s__part(V__HAIR,V__MAMMAL)')))))) ))).

fof(kb_SUMO_11480,axiom,
    s__subclass(s__FacialHair,s__Hair) ).

fof(kb_SUMO_11481,axiom,
    s__instance(s__FacialHair__t,s__SetOrClass) ).

fof(kb_SUMO_11482,axiom,
    s__documentation(s__FacialHair,s__EnglishLanguage,'&%Hair that grows on the &%Face. This class covers beards, mustaches, sideburns, midnight shadow, etc.') ).

fof(kb_SUMO_11483,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__FacialHair)
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__Face)
            & s__part(V__H,V__F) ) ) ) ).

fof(kb_SUMO_11484,axiom,
    s__subclass(s__HairRemoval,s__Removing) ).

fof(kb_SUMO_11485,axiom,
    s__instance(s__HairRemoval__t,s__SetOrClass) ).

fof(kb_SUMO_11486,axiom,
    s__documentation(s__HairRemoval,s__EnglishLanguage,'&%Removing (some or all) the &%Hair from the body of an &%Animal. Note that this covers shaving hair, cutting hair, pulling hair out by the roots, etc.') ).

fof(kb_SUMO_11487,axiom,
    ! [V__HAIR,V__REMOVE] :
      ( ( s__instance(V__REMOVE,s__Process)
        & s__instance(V__HAIR,s__Object) )
     => ( ( s__instance(V__REMOVE,s__HairRemoval)
          & s__resource(V__REMOVE,V__HAIR) )
       => s__instance(V__HAIR,s__Hair) ) ) ).

fof(kb_SUMO_11488,axiom,
    s__subclass(s__Peeling,s__Removing) ).

fof(kb_SUMO_11489,axiom,
    s__instance(s__Peeling__t,s__SetOrClass) ).

fof(kb_SUMO_11490,axiom,
    s__documentation(s__Peeling,s__EnglishLanguage,'Removing the &%Skin (or part of the &%Skin) from an &%Organism. Note that this class covers a large range of cases, including peeling an orange, pelting an &%Animal, etc.') ).

fof(kb_SUMO_11491,axiom,
    ! [V__O,V__P] :
      ( ( s__instance(V__P,s__Process)
        & s__instance(V__O,s__Object) )
     => ( ( s__instance(V__P,s__Peeling)
          & s__patient(V__P,V__O) )
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__Skin)
            & s__part(V__O,V__S) ) ) ) ).

fof(kb_SUMO_11492,axiom,
    s__subclass(s__Brain,s__Organ) ).

fof(kb_SUMO_11493,axiom,
    s__instance(s__Brain__t,s__SetOrClass) ).

fof(kb_SUMO_11494,axiom,
    s__subclass(s__Brain,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11495,axiom,
    s__documentation(s__Brain,s__EnglishLanguage,'The seat of the central nervous system.') ).

fof(kb_SUMO_11496,axiom,
    s__documentation(s__intelligenceQuotient__m,s__EnglishLanguage,'(intelligenceQuotient ?PERSON ?NUMBER) means that ?NUMBER is the I.Q. of ?PERSON. The I.Q. of a person is the ratio of their mental age (determined by a standardized test) divided by their chronological age, multiplied by 100.') ).

fof(kb_SUMO_11497,axiom,
    s__instance(s__intelligenceQuotient__m,s__BinaryPredicate) ).

fof(kb_SUMO_11498,axiom,
    s__instance(s__intelligenceQuotient__m,s__SingleValuedRelation) ).

fof(kb_SUMO_11499,axiom,
    s__domain(s__intelligenceQuotient__m,"1",s__Human) ).

fof(kb_SUMO_11500,axiom,
    s__domain(s__intelligenceQuotient__m,"2",s__RationalNumber) ).

fof(kb_SUMO_11501,axiom,
    s__subclass(s__Stomach,s__Organ) ).

fof(kb_SUMO_11502,axiom,
    s__subclass(s__Stomach,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11503,axiom,
    s__instance(s__Stomach__t,s__SetOrClass) ).

fof(kb_SUMO_11504,axiom,
    s__documentation(s__Stomach,s__EnglishLanguage,'A muscular sac that is the principal organ of digestion.') ).

fof(kb_SUMO_11505,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Stomach)
       => s__capability(s__Digesting,s__instrument__m,V__S) ) ) ).

fof(kb_SUMO_11506,axiom,
    s__subclass(s__Intestine,s__BodyVessel) ).

fof(kb_SUMO_11507,axiom,
    s__instance(s__Intestine__t,s__SetOrClass) ).

fof(kb_SUMO_11508,axiom,
    s__subclass(s__Intestine,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11509,axiom,
    s__documentation(s__Intestine,s__EnglishLanguage,'A &%BodyVessel which connects the &%Stomach to the anus and which is used in digesting Food.') ).

fof(kb_SUMO_11510,axiom,
    ! [V__I] :
      ( s__instance(V__I,s__Object)
     => ( s__instance(V__I,s__Intestine)
       => s__capability(s__Digesting,s__instrument__m,V__I) ) ) ).

fof(kb_SUMO_11511,axiom,
    ! [V__I] :
      ( s__instance(V__I,s__Object)
     => ( s__instance(V__I,s__Intestine)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__Stomach)
            & s__connected(V__I,V__S) ) ) ) ).

fof(kb_SUMO_11512,axiom,
    s__subclass(s__Hypothalamus,s__BodyPart) ).

fof(kb_SUMO_11513,axiom,
    s__instance(s__Hypothalamus__t,s__SetOrClass) ).

fof(kb_SUMO_11514,axiom,
    s__subclass(s__Hypothalamus,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11515,axiom,
    s__documentation(s__Hypothalamus,s__EnglishLanguage,'The part of the &%Brain lying below the thalamus that serves to regulate &%AutonomicProcesses.') ).

fof(kb_SUMO_11516,axiom,
    ! [V__HYPO] :
      ( s__instance(V__HYPO,s__Object)
     => ( s__instance(V__HYPO,s__Hypothalamus)
       => ? [V__BRAIN] :
            ( s__instance(V__BRAIN,s__Object)
            & s__instance(V__BRAIN,s__Brain)
            & s__part(V__HYPO,V__BRAIN) ) ) ) ).

fof(kb_SUMO_11517,axiom,
    s__subclass(s__Eye,s__Organ) ).

fof(kb_SUMO_11518,axiom,
    s__subclass(s__Eye,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11519,axiom,
    s__instance(s__Eye__t,s__SetOrClass) ).

fof(kb_SUMO_11520,axiom,
    s__documentation(s__Eye,s__EnglishLanguage,'The &%Organ of sight.') ).

fof(kb_SUMO_11521,axiom,
    ! [V__EYE] :
      ( s__instance(V__EYE,s__Object)
     => ( s__instance(V__EYE,s__Eye)
       => s__capability(s__Seeing,s__instrument__m,V__EYE) ) ) ).

fof(kb_SUMO_11522,axiom,
    ! [V__EYE] :
      ( s__instance(V__EYE,s__Object)
     => ( s__instance(V__EYE,s__Eye)
       => ? [V__HEAD] :
            ( s__instance(V__HEAD,s__Object)
            & s__instance(V__HEAD,s__Head)
            & s__part(V__EYE,V__HEAD) ) ) ) ).

fof(kb_SUMO_11523,axiom,
    s__subclass(s__Ear,s__Organ) ).

fof(kb_SUMO_11524,axiom,
    s__instance(s__Ear__t,s__SetOrClass) ).

fof(kb_SUMO_11525,axiom,
    s__subclass(s__Ear,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11526,axiom,
    s__documentation(s__Ear,s__EnglishLanguage,'The &%Organ of hearing.') ).

fof(kb_SUMO_11527,axiom,
    ! [V__EAR] :
      ( s__instance(V__EAR,s__Object)
     => ( s__instance(V__EAR,s__Ear)
       => s__capability(s__Hearing,s__instrument__m,V__EAR) ) ) ).

fof(kb_SUMO_11528,axiom,
    ! [V__EAR] :
      ( s__instance(V__EAR,s__Object)
     => ( s__instance(V__EAR,s__Ear)
       => ? [V__HEAD] :
            ( s__instance(V__HEAD,s__Object)
            & s__instance(V__HEAD,s__Head)
            & s__part(V__EAR,V__HEAD) ) ) ) ).

fof(kb_SUMO_11529,axiom,
    s__subclass(s__Eyelid,s__Skin) ).

fof(kb_SUMO_11530,axiom,
    s__instance(s__Eyelid__t,s__SetOrClass) ).

fof(kb_SUMO_11531,axiom,
    s__documentation(s__Eyelid,s__EnglishLanguage,'Folds of &%Skin that can be manipulated to cover or uncover &%Eyes.') ).

fof(kb_SUMO_11532,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Object)
     => ( s__instance(V__E,s__Eyelid)
       => s__capability(s__Covering,s__instrument__m,V__E) ) ) ).

fof(kb_SUMO_11533,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Object)
     => ( s__instance(V__E,s__Eyelid)
       => s__hasPurpose(V__E,'(? [V__EYE,V__P,V__C] : (s__instance(V__C,s__Process) & s__instance(V__P,s__Agent) & s__instance(V__EYE,s__Object) & s__instance(V__C,s__Covering) & s__instance(V__C,s__BodyMotion) & s__instance(V__P,s__Human) & s__experiencer(V__C,V__P) & s__instrument(V__C,V__E) & s__patient(V__C,V__EYE) & s__instance(V__EYE,s__Eye) & s__part(V__EYE,V__P) & s__part(V__E,V__P)))') ) ) ).

fof(kb_SUMO_11534,axiom,
    s__subclass(s__Nose,s__Organ) ).

fof(kb_SUMO_11535,axiom,
    s__instance(s__Nose__t,s__SetOrClass) ).

fof(kb_SUMO_11536,axiom,
    s__subclass(s__Nose,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11537,axiom,
    s__documentation(s__Nose,s__EnglishLanguage,'The &%Organ of &%Smelling.') ).

fof(kb_SUMO_11538,axiom,
    ! [V__NOSE] :
      ( s__instance(V__NOSE,s__Object)
     => ( s__instance(V__NOSE,s__Nose)
       => s__capability(s__Smelling,s__instrument__m,V__NOSE) ) ) ).

fof(kb_SUMO_11539,axiom,
    ! [V__NOSE] :
      ( s__instance(V__NOSE,s__Object)
     => ( s__instance(V__NOSE,s__Nose)
       => ? [V__FACE] :
            ( s__instance(V__FACE,s__Object)
            & s__instance(V__FACE,s__Face)
            & s__part(V__NOSE,V__FACE) ) ) ) ).

fof(kb_SUMO_11540,axiom,
    s__documentation(s__secretesSubstance__m,s__EnglishLanguage,'(secretesSubstance ?OBJ ?STUFF) means that the subclass of &%OrganicObject (either &%Organism or &%BodyPart) ?OBJ produces the subclass of &%Substance ?STUFF.') ).

fof(kb_SUMO_11541,axiom,
    s__instance(s__secretesSubstance__m,s__BinaryPredicate) ).

fof(kb_SUMO_11542,axiom,
    s__domainSubclass(s__secretesSubstance__m,"1",s__OrganicObject) ).

fof(kb_SUMO_11543,axiom,
    s__domainSubclass(s__secretesSubstance__m,"2",s__NaturalSubstance) ).

fof(kb_SUMO_11544,axiom,
    ! [V__O,V__S] :
      ( s__secretesSubstance(V__O,V__S)
     => ! [V__I1] :
          ( ( s__instance(V__I1,s__Object)
            & s__subclass(V__S,s__NaturalSubstance)
            & s__instance(V__S,s__SetOrClass)
            & s__subclass(V__O,s__OrganicObject)
            & s__instance(V__O,s__SetOrClass) )
         => ( s__instance(V__I1,V__O)
           => ? [V__P,V__I2] :
                ( s__instance(V__P,s__Process)
                & s__instance(V__P,s__BiologicalProcess)
                & s__eventLocated(V__P,V__I1)
                & s__result(V__P,V__I2)
                & s__instance(V__I2,V__S) ) ) ) ) ).

fof(kb_SUMO_11545,axiom,
    s__subclass(s__ThyroidGland,s__Gland) ).

fof(kb_SUMO_11546,axiom,
    s__instance(s__ThyroidGland__t,s__SetOrClass) ).

fof(kb_SUMO_11547,axiom,
    s__documentation(s__ThyroidGland,s__EnglishLanguage,'A &%Gland in the neck that produces &%HormoneTSH, which regulates body weight, metabolic rate, etc.') ).

fof(kb_SUMO_11548,axiom,
    s__subclass(s__ThyroidHormone,s__Hormone) ).

fof(kb_SUMO_11549,axiom,
    s__instance(s__ThyroidHormone__t,s__SetOrClass) ).

fof(kb_SUMO_11550,axiom,
    s__documentation(s__ThyroidHormone,s__EnglishLanguage,'A &%Hormone secreted by the &%ThyroidGland.') ).

fof(kb_SUMO_11551,axiom,
    s__subclass(s__PituitaryGland,s__Gland) ).

fof(kb_SUMO_11552,axiom,
    s__instance(s__PituitaryGland__t,s__SetOrClass) ).

fof(kb_SUMO_11553,axiom,
    s__documentation(s__PituitaryGland,s__EnglishLanguage,'The main &%Gland of the endocrine system.') ).

fof(kb_SUMO_11554,axiom,
    s__subclass(s__HormoneTSH,s__Hormone) ).

fof(kb_SUMO_11555,axiom,
    s__instance(s__HormoneTSH__t,s__SetOrClass) ).

fof(kb_SUMO_11556,axiom,
    s__documentation(s__HormoneTSH,s__EnglishLanguage,'A &%Hormone secreted by the &%ThyroidGland.') ).

fof(kb_SUMO_11557,axiom,
    ! [V__HORMONE] :
      ( s__instance(V__HORMONE,s__HormoneTSH)
     => ? [V__PROC,V__GLAND] :
          ( s__instance(V__GLAND,s__Object)
          & s__instance(V__PROC,s__Process)
          & s__instance(V__GLAND,s__ThyroidGland)
          & s__instrument(V__PROC,V__GLAND)
          & s__result(V__PROC,V__HORMONE) ) ) ).

fof(kb_SUMO_11558,axiom,
    s__subclass(s__Pancreas,s__Gland) ).

fof(kb_SUMO_11559,axiom,
    s__instance(s__Pancreas__t,s__SetOrClass) ).

fof(kb_SUMO_11560,axiom,
    s__documentation(s__Pancreas,s__EnglishLanguage,'A large &%Gland that secretes &%Insulin and other substances.') ).

fof(kb_SUMO_11561,axiom,
    ! [V__P] :
      ( ( s__subclass(V__P,s__OrganicObject)
        & s__instance(V__P,s__SetOrClass) )
     => ( s__instance(V__P,s__Pancreas)
       => s__secretesSubstance(V__P,s__Insulin) ) ) ).

fof(kb_SUMO_11562,axiom,
    s__subclass(s__Insulin,s__Hormone) ).

fof(kb_SUMO_11563,axiom,
    s__instance(s__Insulin__t,s__SetOrClass) ).

fof(kb_SUMO_11564,axiom,
    s__documentation(s__Insulin,s__EnglishLanguage,'A &%Hormone secreted by the &%Pancreas that is used to regulate the metabolism of &%Carbohydrates.') ).

fof(kb_SUMO_11565,axiom,
    s__subclass(s__Arm,s__Limb) ).

fof(kb_SUMO_11566,axiom,
    s__instance(s__Arm__t,s__SetOrClass) ).

fof(kb_SUMO_11567,axiom,
    s__documentation(s__Arm,s__EnglishLanguage,'The upper &%Limbs of a &%Primate.') ).

fof(kb_SUMO_11568,axiom,
    ! [V__ARM] :
      ( s__instance(V__ARM,s__Object)
     => ( s__instance(V__ARM,s__Arm)
       => ? [V__PRIMATE] :
            ( s__instance(V__PRIMATE,s__Object)
            & s__instance(V__PRIMATE,s__Primate)
            & s__part(V__ARM,V__PRIMATE) ) ) ) ).

fof(kb_SUMO_11569,axiom,
    s__subclass(s__Hand,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11570,axiom,
    s__instance(s__Hand__t,s__SetOrClass) ).

fof(kb_SUMO_11571,axiom,
    s__subclass(s__Hand,s__BodyPart) ).

fof(kb_SUMO_11572,axiom,
    s__documentation(s__Hand,s__EnglishLanguage,'The grasping, fingered part of an upper limb of a &%Primate.') ).

fof(kb_SUMO_11573,axiom,
    ! [V__HAND] :
      ( s__instance(V__HAND,s__Object)
     => ( s__instance(V__HAND,s__Hand)
       => ? [V__ARM] :
            ( s__instance(V__ARM,s__Object)
            & s__instance(V__ARM,s__Arm)
            & s__part(V__HAND,V__ARM) ) ) ) ).

fof(kb_SUMO_11574,axiom,
    s__subclass(s__DigitAppendage,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11575,axiom,
    s__subclass(s__DigitAppendage,s__BodyPart) ).

fof(kb_SUMO_11576,axiom,
    s__documentation(s__DigitAppendage,s__EnglishLanguage,'Any of the extremities of &%Limbs that are found in the higer &%Vertebrates and the &%Amphibians.') ).

fof(kb_SUMO_11577,axiom,
    ! [V__DIGIT] :
      ( s__instance(V__DIGIT,s__Object)
     => ( s__instance(V__DIGIT,s__DigitAppendage)
       => ? [V__LIMB] :
            ( s__instance(V__LIMB,s__Object)
            & s__instance(V__LIMB,s__Limb)
            & s__part(V__DIGIT,V__LIMB) ) ) ) ).

fof(kb_SUMO_11578,axiom,
    s__subclass(s__Toad,s__Amphibian) ).

fof(kb_SUMO_11579,axiom,
    s__instance(s__Toad__t,s__SetOrClass) ).

fof(kb_SUMO_11580,axiom,
    s__documentation(s__Toad,s__EnglishLanguage,'An &%Amphibian that lacks a &%Tail and lives at least partially outside of water.') ).

fof(kb_SUMO_11581,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__Toad)
       => ~ ? [V__T] :
              ( s__instance(V__T,s__Object)
              & s__instance(V__T,s__Tail)
              & s__part(V__T,V__A) ) ) ) ).

fof(kb_SUMO_11582,axiom,
    s__initialPart(s__DigitAppendage,s__Limb) ).

fof(kb_SUMO_11583,axiom,
    s__subclass(s__Finger,s__DigitAppendage) ).

fof(kb_SUMO_11584,axiom,
    s__instance(s__DigitAppendage__t,s__SetOrClass) ).

fof(kb_SUMO_11585,axiom,
    s__documentation(s__Finger,s__EnglishLanguage,'The five extremities of &%Hands.') ).

fof(kb_SUMO_11586,axiom,
    ! [V__FINGER] :
      ( s__instance(V__FINGER,s__Object)
     => ( s__instance(V__FINGER,s__Finger)
       => ? [V__HAND] :
            ( s__instance(V__HAND,s__Object)
            & s__instance(V__HAND,s__Hand)
            & s__part(V__FINGER,V__HAND) ) ) ) ).

fof(kb_SUMO_11587,axiom,
    s__subclass(s__Thumb,s__Finger) ).

fof(kb_SUMO_11588,axiom,
    s__instance(s__Thumb__t,s__SetOrClass) ).

fof(kb_SUMO_11589,axiom,
    s__instance(s__Finger__t,s__SetOrClass) ).

fof(kb_SUMO_11590,axiom,
    s__documentation(s__Thumb,s__EnglishLanguage,'The thick, short &%Finger of each &%Hand.') ).

fof(kb_SUMO_11591,axiom,
    s__subclass(s__NailDigit,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11592,axiom,
    s__instance(s__NailDigit__t,s__SetOrClass) ).

fof(kb_SUMO_11593,axiom,
    s__documentation(s__NailDigit,s__EnglishLanguage,'Any of the horny structures which are found on the &%DigitAppendages of &%Primates and other &%Animals. This includes fingernails and toenails.') ).

fof(kb_SUMO_11594,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__Object)
     => ( s__instance(V__N,s__NailDigit)
       => ? [V__D] :
            ( s__instance(V__D,s__Object)
            & s__instance(V__D,s__DigitAppendage)
            & s__part(V__N,V__D) ) ) ) ).

fof(kb_SUMO_11595,axiom,
    s__subclass(s__Fingerprint,s__ShapeAttribute) ).

fof(kb_SUMO_11596,axiom,
    s__subclass(s__Fingerprint,s__BiologicalAttribute) ).

fof(kb_SUMO_11597,axiom,
    s__instance(s__Fingerprint__t,s__SetOrClass) ).

fof(kb_SUMO_11598,axiom,
    s__documentation(s__Fingerprint,s__EnglishLanguage,'That pattern of arches, loops, and whorls that mark the imprint of a &%Finger.') ).

fof(kb_SUMO_11599,axiom,
    ! [V__O,V__P] :
      ( ( s__instance(V__P,s__Attribute)
        & s__instance(V__O,s__Object) )
     => ( ( s__attribute(V__O,V__P)
          & s__instance(V__P,s__Fingerprint)
          & ~ s__instance(V__O,s__Finger) )
       => ? [V__PR,V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__PR,s__Process)
            & s__instrument(V__PR,V__F)
            & s__instance(V__F,s__Finger)
            & s__attribute(V__F,V__P)
            & s__patient(V__PR,V__O) ) ) ) ).

fof(kb_SUMO_11600,axiom,
    s__subclass(s__Limb,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11601,axiom,
    s__subclass(s__Limb,s__BodyPart) ).

fof(kb_SUMO_11602,axiom,
    s__instance(s__Limb__t,s__SetOrClass) ).

fof(kb_SUMO_11603,axiom,
    s__documentation(s__Limb,s__EnglishLanguage,'Any of the limbs of a &%Vertebrate. Animal Appendages with joints that are used for movement and grasping.') ).

fof(kb_SUMO_11604,axiom,
    ! [V__LIMB] :
      ( s__instance(V__LIMB,s__Object)
     => ( s__instance(V__LIMB,s__Limb)
       => ? [V__VERTEBRATE] :
            ( s__instance(V__VERTEBRATE,s__Object)
            & s__instance(V__VERTEBRATE,s__Vertebrate)
            & s__part(V__LIMB,V__VERTEBRATE) ) ) ) ).

fof(kb_SUMO_11605,axiom,
    s__subclass(s__Snake,s__Reptile) ).

fof(kb_SUMO_11606,axiom,
    s__instance(s__Snake__t,s__SetOrClass) ).

fof(kb_SUMO_11607,axiom,
    s__documentation(s__Snake,s__EnglishLanguage,'A long and narrow &%Reptile which lacks &%Limbs.') ).

fof(kb_SUMO_11608,axiom,
    ! [V__SNAKE] :
      ( s__instance(V__SNAKE,s__Object)
     => ( s__instance(V__SNAKE,s__Snake)
       => ~ ? [V__LIMB] :
              ( s__instance(V__LIMB,s__Object)
              & s__instance(V__LIMB,s__Limb)
              & s__part(V__LIMB,V__SNAKE) ) ) ) ).

fof(kb_SUMO_11609,axiom,
    s__subclass(s__Rattlesnake,s__Snake) ).

fof(kb_SUMO_11610,axiom,
    s__instance(s__Rattlesnake__t,s__SetOrClass) ).

fof(kb_SUMO_11611,axiom,
    s__documentation(s__Rattlesnake,s__EnglishLanguage,'A subclass of &%Snake which derives its name from the fact that it can manipulate its tail in such a way as to produce a sound like that of a rattle.') ).

fof(kb_SUMO_11612,axiom,
    s__subclass(s__ConstrictorSnake,s__Snake) ).

fof(kb_SUMO_11613,axiom,
    s__instance(s__ConstrictorSnake__t,s__SetOrClass) ).

fof(kb_SUMO_11614,axiom,
    s__documentation(s__ConstrictorSnake,s__EnglishLanguage,'A &%Snake that lacks venom and kills its prey by crushing it to death.') ).

fof(kb_SUMO_11615,axiom,
    s__subclass(s__AntInsect,s__Insect) ).

fof(kb_SUMO_11616,axiom,
    s__instance(s__AntInsect__t,s__SetOrClass) ).

fof(kb_SUMO_11617,axiom,
    s__documentation(s__AntInsect,s__EnglishLanguage,'A colony &%Insect of three types: males, &%QueenInsect, and worker ants.') ).

fof(kb_SUMO_11618,axiom,
    s__subclass(s__Anaconda,s__ConstrictorSnake) ).

fof(kb_SUMO_11619,axiom,
    s__instance(s__Anaconda__t,s__SetOrClass) ).

fof(kb_SUMO_11620,axiom,
    s__documentation(s__Anaconda,s__EnglishLanguage,'A very large Boa that is found in South America.') ).

fof(kb_SUMO_11621,axiom,
    s__subclass(s__Bee,s__Insect) ).

fof(kb_SUMO_11622,axiom,
    s__documentation(s__Bee,s__EnglishLanguage,'A hairy &%Insect, some species of which produce honey and/or sting.') ).

fof(kb_SUMO_11623,axiom,
    s__subclass(s__BumbleBee,s__Bee) ).

fof(kb_SUMO_11624,axiom,
    s__instance(s__BumbleBee__t,s__SetOrClass) ).

fof(kb_SUMO_11625,axiom,
    s__instance(s__Bee__t,s__SetOrClass) ).

fof(kb_SUMO_11626,axiom,
    s__documentation(s__BumbleBee,s__EnglishLanguage,'A large &%Bee which lacks a stinger.') ).

fof(kb_SUMO_11627,axiom,
    s__subclass(s__FlyInsect,s__Insect) ).

fof(kb_SUMO_11628,axiom,
    s__instance(s__FlyInsect__t,s__SetOrClass) ).

fof(kb_SUMO_11629,axiom,
    s__documentation(s__FlyInsect,s__EnglishLanguage,'&%Insects with &%Wings and two &%Limbs.') ).

fof(kb_SUMO_11630,axiom,
    s__subclass(s__Grasshopper,s__Insect) ).

fof(kb_SUMO_11631,axiom,
    s__instance(s__Grasshopper__t,s__SetOrClass) ).

fof(kb_SUMO_11632,axiom,
    s__documentation(s__Grasshopper,s__EnglishLanguage,'&%Insects with enormous legs that are used for jumping.') ).

fof(kb_SUMO_11633,axiom,
    s__subclass(s__Moth,s__Insect) ).

fof(kb_SUMO_11634,axiom,
    s__instance(s__Moth__t,s__SetOrClass) ).

fof(kb_SUMO_11635,axiom,
    s__documentation(s__Moth,s__EnglishLanguage,'Nocturnal &%Insect with a large body and antennae.') ).

fof(kb_SUMO_11636,axiom,
    s__subclass(s__QueenInsect,s__Insect) ).

fof(kb_SUMO_11637,axiom,
    s__instance(s__QueenInsect__t,s__SetOrClass) ).

fof(kb_SUMO_11638,axiom,
    s__disjoint(s__QueenInsect,s__WorkerInsect) ).

fof(kb_SUMO_11639,axiom,
    s__documentation(s__QueenInsect,s__EnglishLanguage,'A &%Female &%Insect which is the sole member of her colony with the capability to reproduce.') ).

fof(kb_SUMO_11640,axiom,
    ! [V__INSECT] :
      ( s__instance(V__INSECT,s__Object)
     => ( s__instance(V__INSECT,s__QueenInsect)
       => ( s__attribute(V__INSECT,s__Female)
          & s__capability(s__Replication,s__agent__m,V__INSECT) ) ) ) ).

fof(kb_SUMO_11641,axiom,
    ! [V__INSECT] :
      ( s__instance(V__INSECT,s__SelfConnectedObject)
     => ( s__instance(V__INSECT,s__QueenInsect)
       => ? [V__GROUP] :
            ( s__instance(V__GROUP,s__Group)
            & s__member(V__INSECT,V__GROUP)
            & ~ ? [V__MEMBER] :
                  ( s__instance(V__MEMBER,s__SelfConnectedObject)
                  & s__instance(V__GROUP,s__Collection)
                  & s__member(V__MEMBER,V__GROUP)
                  & s__capability(s__Replication,s__agent__m,V__MEMBER)
                  & V__MEMBER != V__INSECT ) ) ) ) ).

fof(kb_SUMO_11642,axiom,
    s__subclass(s__WorkerInsect,s__Insect) ).

fof(kb_SUMO_11643,axiom,
    s__instance(s__WorkerInsect__t,s__SetOrClass) ).

fof(kb_SUMO_11644,axiom,
    s__documentation(s__WorkerInsect,s__EnglishLanguage,'Sterile members of an &%Insect colony which are responsible for locating food and caring for eggs, larvae, etc.') ).

fof(kb_SUMO_11645,axiom,
    s__subclass(s__Leg,s__Limb) ).

fof(kb_SUMO_11646,axiom,
    s__instance(s__Leg__t,s__SetOrClass) ).

fof(kb_SUMO_11647,axiom,
    s__documentation(s__Leg,s__EnglishLanguage,'The lower &%Limbs of &%Animals, used for locomotion.') ).

fof(kb_SUMO_11648,axiom,
    ! [V__LEG] :
      ( s__instance(V__LEG,s__Object)
     => ( s__instance(V__LEG,s__Leg)
       => ? [V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__Object)
            & s__instance(V__ANIMAL,s__Animal)
            & s__part(V__LEG,V__ANIMAL) ) ) ) ).

fof(kb_SUMO_11649,axiom,
    s__subclass(s__Foot,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11650,axiom,
    s__instance(s__Foot__t,s__SetOrClass) ).

fof(kb_SUMO_11651,axiom,
    s__subclass(s__Foot,s__BodyPart) ).

fof(kb_SUMO_11652,axiom,
    s__documentation(s__Foot,s__EnglishLanguage,'The lower part of a &%Limb, the part which makes contact with the ground in locomotion of the &%Animal.') ).

fof(kb_SUMO_11653,axiom,
    ! [V__FOOT] :
      ( s__instance(V__FOOT,s__Object)
     => ( s__instance(V__FOOT,s__Foot)
       => ? [V__LIMB] :
            ( s__instance(V__LIMB,s__Object)
            & s__instance(V__LIMB,s__Leg)
            & s__part(V__FOOT,V__LIMB) ) ) ) ).

fof(kb_SUMO_11654,axiom,
    s__subclass(s__Ankle,s__BodyJoint) ).

fof(kb_SUMO_11655,axiom,
    s__instance(s__Ankle__t,s__SetOrClass) ).

fof(kb_SUMO_11656,axiom,
    s__instance(s__BodyJoint__t,s__SetOrClass) ).

fof(kb_SUMO_11657,axiom,
    s__documentation(s__Ankle,s__EnglishLanguage,'The joint in the &%Leg that connects the tibia and the fibula to the talus.') ).

fof(kb_SUMO_11658,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__Ankle)
       => ? [V__L] :
            ( s__instance(V__L,s__Object)
            & s__instance(V__L,s__Leg)
            & s__part(V__A,V__L) ) ) ) ).

fof(kb_SUMO_11659,axiom,
    s__subclass(s__Elbow,s__BodyJoint) ).

fof(kb_SUMO_11660,axiom,
    s__instance(s__Elbow__t,s__SetOrClass) ).

fof(kb_SUMO_11661,axiom,
    s__documentation(s__Elbow,s__EnglishLanguage,'The joint in the &%Arm connecting the forearm and the upper arm.') ).

fof(kb_SUMO_11662,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Object)
     => ( s__instance(V__E,s__Elbow)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Arm)
            & s__part(V__E,V__A) ) ) ) ).

fof(kb_SUMO_11663,axiom,
    s__subclass(s__Wrist,s__BodyJoint) ).

fof(kb_SUMO_11664,axiom,
    s__instance(s__Wrist__t,s__SetOrClass) ).

fof(kb_SUMO_11665,axiom,
    s__documentation(s__Wrist,s__EnglishLanguage,'The joint in the &%Arm connecting the radius and carpal bones.') ).

fof(kb_SUMO_11666,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__Wrist)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__instance(V__A,s__Arm)
            & s__part(V__W,V__A) ) ) ) ).

fof(kb_SUMO_11667,axiom,
    s__subclass(s__Toe,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11668,axiom,
    s__subclass(s__Toe,s__BodyPart) ).

fof(kb_SUMO_11669,axiom,
    s__instance(s__Toe__t,s__SetOrClass) ).

fof(kb_SUMO_11670,axiom,
    s__subclass(s__Toe,s__DigitAppendage) ).

fof(kb_SUMO_11671,axiom,
    s__documentation(s__Toe,s__EnglishLanguage,'The five extremities of a &%Foot.') ).

fof(kb_SUMO_11672,axiom,
    ! [V__TOE] :
      ( s__instance(V__TOE,s__Object)
     => ( s__instance(V__TOE,s__Toe)
       => ? [V__FOOT] :
            ( s__instance(V__FOOT,s__Object)
            & s__instance(V__FOOT,s__Foot)
            & s__part(V__TOE,V__FOOT) ) ) ) ).

fof(kb_SUMO_11673,axiom,
    s__subclass(s__Knee,s__BodyJoint) ).

fof(kb_SUMO_11674,axiom,
    s__instance(s__Knee__t,s__SetOrClass) ).

fof(kb_SUMO_11675,axiom,
    s__documentation(s__Knee,s__EnglishLanguage,'The joint in the &%Leg connecting the tibia and fibula with the femur.') ).

fof(kb_SUMO_11676,axiom,
    ! [V__KNEE] :
      ( s__instance(V__KNEE,s__Object)
     => ( s__instance(V__KNEE,s__Knee)
       => ? [V__LEG] :
            ( s__instance(V__LEG,s__Object)
            & s__instance(V__LEG,s__Leg)
            & s__part(V__KNEE,V__LEG) ) ) ) ).

fof(kb_SUMO_11677,axiom,
    s__subclass(s__Shoulder,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11678,axiom,
    s__subclass(s__Shoulder,s__BodyPart) ).

fof(kb_SUMO_11679,axiom,
    s__instance(s__Shoulder__t,s__SetOrClass) ).

fof(kb_SUMO_11680,axiom,
    s__documentation(s__Shoulder,s__EnglishLanguage,'The part of a &%Primate between the &%Arm and the neck.') ).

fof(kb_SUMO_11681,axiom,
    ! [V__SHOULDER] :
      ( s__instance(V__SHOULDER,s__Object)
     => ( s__instance(V__SHOULDER,s__Shoulder)
       => ? [V__PRIMATE] :
            ( s__instance(V__PRIMATE,s__Object)
            & s__instance(V__PRIMATE,s__Primate)
            & s__part(V__SHOULDER,V__PRIMATE) ) ) ) ).

fof(kb_SUMO_11682,axiom,
    s__subclass(s__Knuckle,s__BodyJoint) ).

fof(kb_SUMO_11683,axiom,
    s__instance(s__Knuckle__t,s__SetOrClass) ).

fof(kb_SUMO_11684,axiom,
    s__documentation(s__Knuckle,s__EnglishLanguage,'Any joint in a &%Finger.') ).

fof(kb_SUMO_11685,axiom,
    ! [V__KNUCKLE] :
      ( s__instance(V__KNUCKLE,s__Object)
     => ( s__instance(V__KNUCKLE,s__Knuckle)
       => ? [V__FINGER] :
            ( s__instance(V__FINGER,s__Object)
            & s__instance(V__FINGER,s__Finger)
            & s__part(V__KNUCKLE,V__FINGER) ) ) ) ).

fof(kb_SUMO_11686,axiom,
    s__subclass(s__Torso,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11687,axiom,
    s__subclass(s__Torso,s__BodyPart) ).

fof(kb_SUMO_11688,axiom,
    s__instance(s__Torso__t,s__SetOrClass) ).

fof(kb_SUMO_11689,axiom,
    s__documentation(s__Torso,s__EnglishLanguage,'The body of a &%Primate excluding its &%Limbs.') ).

fof(kb_SUMO_11690,axiom,
    ! [V__TORSO,V__LIMB] :
      ( ( s__instance(V__LIMB,s__Object)
        & s__instance(V__TORSO,s__Object) )
     => ( ( s__instance(V__TORSO,s__Torso)
          & s__instance(V__LIMB,s__Limb) )
       => ~ s__overlapsSpatially(V__TORSO,V__LIMB) ) ) ).

fof(kb_SUMO_11691,axiom,
    s__subclass(s__Breast,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11692,axiom,
    s__instance(s__Breast__t,s__SetOrClass) ).

fof(kb_SUMO_11693,axiom,
    s__subclass(s__Breast,s__Organ) ).

fof(kb_SUMO_11694,axiom,
    s__documentation(s__Breast,s__EnglishLanguage,'The paired &%Organs which are part of the chests of &%Primates.') ).

fof(kb_SUMO_11695,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Breast)
       => ? [V__T] :
            ( s__instance(V__T,s__SelfConnectedObject)
            & s__instance(V__T,s__Torso)
            & s__part(V__B,s__FrontFn(V__T)) ) ) ) ).

fof(kb_SUMO_11696,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Breast)
       => ? [V__P] :
            ( s__instance(V__P,s__Object)
            & s__instance(V__P,s__Primate)
            & s__part(V__B,V__P) ) ) ) ).

fof(kb_SUMO_11697,axiom,
    s__subclass(s__Head,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11698,axiom,
    s__instance(s__Head__t,s__SetOrClass) ).

fof(kb_SUMO_11699,axiom,
    s__subclass(s__Head,s__BodyPart) ).

fof(kb_SUMO_11700,axiom,
    s__documentation(s__Head,s__EnglishLanguage,'The part of the body containing the sense organs and the brain.') ).

fof(kb_SUMO_11701,axiom,
    s__subclass(s__Neck,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11702,axiom,
    s__subclass(s__Neck,s__BodyPart) ).

fof(kb_SUMO_11703,axiom,
    s__instance(s__Neck__t,s__SetOrClass) ).

fof(kb_SUMO_11704,axiom,
    s__documentation(s__Neck,s__EnglishLanguage,'The part of the body that connects the &%Head to the rest of the body.') ).

fof(kb_SUMO_11705,axiom,
    ! [V__NECK] :
      ( s__instance(V__NECK,s__Object)
     => ( s__instance(V__NECK,s__Neck)
       => ? [V__HEAD] :
            ( s__instance(V__HEAD,s__Object)
            & s__instance(V__HEAD,s__Head)
            & s__connected(V__NECK,V__HEAD) ) ) ) ).

fof(kb_SUMO_11706,axiom,
    s__subclass(s__Face,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11707,axiom,
    s__subclass(s__Face,s__BodyPart) ).

fof(kb_SUMO_11708,axiom,
    s__instance(s__Face__t,s__SetOrClass) ).

fof(kb_SUMO_11709,axiom,
    s__documentation(s__Face,s__EnglishLanguage,'The part of the &%Head from forehead to chin and from ear to ear.') ).

fof(kb_SUMO_11710,axiom,
    ! [V__FACE] :
      ( s__instance(V__FACE,s__Object)
     => ( s__instance(V__FACE,s__Face)
       => ? [V__HEAD] :
            ( s__instance(V__HEAD,s__Object)
            & s__instance(V__HEAD,s__Head)
            & s__part(V__FACE,V__HEAD) ) ) ) ).

fof(kb_SUMO_11711,axiom,
    ! [V__FACE] :
      ( s__instance(V__FACE,s__Object)
     => ( s__instance(V__FACE,s__Face)
       => ? [V__VERTEBRATE] :
            ( s__instance(V__VERTEBRATE,s__Object)
            & s__instance(V__VERTEBRATE,s__Vertebrate)
            & s__part(V__FACE,V__VERTEBRATE) ) ) ) ).

fof(kb_SUMO_11712,axiom,
    s__subclass(s__Chin,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_11713,axiom,
    s__subclass(s__Chin,s__BodyPart) ).

fof(kb_SUMO_11714,axiom,
    s__instance(s__Chin__t,s__SetOrClass) ).

fof(kb_SUMO_11715,axiom,
    s__documentation(s__Chin,s__EnglishLanguage,'A part of the &%Face which protrudes slightly and which is lower than all other parts of the &%Face.') ).

fof(kb_SUMO_11716,axiom,
    ! [V__CHIN] :
      ( s__instance(V__CHIN,s__Object)
     => ( s__instance(V__CHIN,s__Chin)
       => ? [V__FACE] :
            ( s__instance(V__FACE,s__Object)
            & s__instance(V__FACE,s__Face)
            & s__part(V__CHIN,V__FACE) ) ) ) ).

fof(kb_SUMO_11717,axiom,
    ! [V__CHIN,V__FACE] :
      ( s__instance(V__CHIN,s__Chin)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__FACE,s__Object)
            & s__instance(V__CHIN,s__Object) )
         => ( ( s__part(V__PART,V__FACE)
              & ~ s__part(V__PART,V__CHIN) )
           => s__orientation(V__PART,V__CHIN,s__Below) ) ) ) ).

fof(kb_SUMO_11718,axiom,
    s__partition_3(s__Expressing,s__Gesture,s__ExpressingInLanguage) ).

fof(kb_SUMO_11719,axiom,
    s__disjointDecomposition_3(s__Expressing,s__ExpressingApproval,s__ExpressingDisapproval) ).

fof(kb_SUMO_11720,axiom,
    s__subclass(s__ExpressingApproval,s__Expressing) ).

fof(kb_SUMO_11721,axiom,
    s__documentation(s__ExpressingApproval,s__EnglishLanguage,'&%Expressing favor about a physical thing or a state of affairs.') ).

fof(kb_SUMO_11722,axiom,
    ! [V__EXPRESS,V__AGENT,V__THING] :
      ( ( s__instance(V__THING,s__Formula)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__EXPRESS,s__Process) )
     => ( ( s__instance(V__EXPRESS,s__ExpressingApproval)
          & s__agent(V__EXPRESS,V__AGENT)
          & s__patient(V__EXPRESS,V__THING) )
       => ( s__wants(V__AGENT,V__THING)
          | s__desires(V__AGENT,V__THING) ) ) ) ).

fof(kb_SUMO_11723,axiom,
    s__subclass(s__ExpressingDisapproval,s__Expressing) ).

fof(kb_SUMO_11724,axiom,
    s__documentation(s__ExpressingDisapproval,s__EnglishLanguage,'&%Expressing disfavor about a physical thing or a state of affairs.') ).

fof(kb_SUMO_11725,axiom,
    ! [V__EXPRESS,V__AGENT,V__THING] :
      ( ( s__instance(V__THING,s__Object)
        & s__instance(V__THING,s__Formula)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__EXPRESS,s__Process) )
     => ( ( s__instance(V__EXPRESS,s__ExpressingDisapproval)
          & s__agent(V__EXPRESS,V__AGENT)
          & s__patient(V__EXPRESS,V__THING) )
       => ( s__dislikes(V__AGENT,V__THING)
          | s__disapproves(V__AGENT,V__THING) ) ) ) ).

fof(kb_SUMO_11726,axiom,
    s__subclass(s__Regretting,s__ExpressingDisapproval) ).

fof(kb_SUMO_11727,axiom,
    s__instance(s__Regretting__t,s__SetOrClass) ).

fof(kb_SUMO_11728,axiom,
    s__instance(s__ExpressingDisapproval__t,s__SetOrClass) ).

fof(kb_SUMO_11729,axiom,
    s__documentation(s__Regretting,s__EnglishLanguage,'&%ExpressingDisapproval about a state of affairs that has already occurred.') ).

fof(kb_SUMO_11730,axiom,
    ! [V__R,V__T] :
      ( s__instance(V__R,s__Process)
     => ( ( s__instance(V__R,s__Regretting)
          & s__patient(V__R,V__T)
          & s__instance(V__T,s__Sentence) )
       => s__truth(V__T,'$true__m') ) ) ).

fof(kb_SUMO_11731,axiom,
    s__subclass(s__ExpressingFarewell,s__Expressing) ).

fof(kb_SUMO_11732,axiom,
    s__instance(s__ExpressingFarewell__t,s__SetOrClass) ).

fof(kb_SUMO_11733,axiom,
    s__documentation(s__ExpressingFarewell,s__EnglishLanguage,'Any instance of &%Expressing an acknowledgment of a persons departure. Note that this class is not a subclass of &%LinguisticCommunication, because it covers gestures of departure, e.g. &%Waving and &%Nodding in certain circumstances.') ).

fof(kb_SUMO_11734,axiom,
    s__subclass(s__Congratulating,s__ExpressingApproval) ).

fof(kb_SUMO_11735,axiom,
    s__instance(s__Congratulating__t,s__SetOrClass) ).

fof(kb_SUMO_11736,axiom,
    s__documentation(s__Congratulating,s__EnglishLanguage,'Any &%ExpressingApproval to a person for something that the person did in the past and that is regarded as being to the benefit of the person congratulated.') ).

fof(kb_SUMO_11737,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Process)
     => ( s__instance(V__C,s__Congratulating)
       => ? [V__P,V__A,V__D] :
            ( s__instance(V__D,s__Agent)
            & s__instance(V__A,s__CognitiveAgent)
            & s__instance(V__P,s__Process)
            & s__destination(V__C,V__D)
            & s__agent(V__P,V__D)
            & s__agent(V__C,V__A)
            & s__wants(V__A,V__P)
            & s__refers(V__C,V__P) ) ) ) ).

fof(kb_SUMO_11738,axiom,
    s__subclass(s__FacialExpression,s__Gesture) ).

fof(kb_SUMO_11739,axiom,
    s__documentation(s__FacialExpression,s__EnglishLanguage,'Any &%Gesture whose &%instrument is the &%Face.') ).

fof(kb_SUMO_11740,axiom,
    ! [V__EXPRESS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EXPRESS,s__Process) )
     => ( ( s__instance(V__EXPRESS,s__FacialExpression)
          & s__agent(V__EXPRESS,V__AGENT) )
       => ? [V__FACE] :
            ( s__instance(V__FACE,s__Object)
            & s__part(V__FACE,V__AGENT)
            & s__instance(V__FACE,s__Face)
            & s__instrument(V__EXPRESS,V__FACE) ) ) ) ).

fof(kb_SUMO_11741,axiom,
    s__subclass(s__Smiling,s__FacialExpression) ).

fof(kb_SUMO_11742,axiom,
    s__instance(s__Smiling__t,s__SetOrClass) ).

fof(kb_SUMO_11743,axiom,
    s__documentation(s__Smiling,s__EnglishLanguage,'Spreading the lips in such a way as to convey happiness.') ).

%FOL fof(kb_SUMO_11744,axiom,(( (! [V__SMILE,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__SMILE,s__Process)) => ((s__instance(V__SMILE,s__Smiling) & s__agent(V__SMILE,V__AGENT)) => s__holdsDuring(s__WhenFn(V__SMILE),'s__attribute(V__AGENT,s__Happiness)')))) ))).

fof(kb_SUMO_11745,axiom,
    s__subclass(s__Frowning,s__FacialExpression) ).

fof(kb_SUMO_11746,axiom,
    s__instance(s__Frowning__t,s__SetOrClass) ).

fof(kb_SUMO_11747,axiom,
    s__documentation(s__Frowning,s__EnglishLanguage,'Furrowing the forehead in such a way as to convey unhappiness.') ).

%FOL fof(kb_SUMO_11748,axiom,(( (! [V__AGENT,V__FROWN] : ((s__instance(V__FROWN,s__Process) & s__instance(V__AGENT,s__Agent)) => ((s__instance(V__FROWN,s__Frowning) & s__agent(V__FROWN,V__AGENT)) => s__holdsDuring(s__WhenFn(V__FROWN),'s__attribute(V__AGENT,s__Unhappiness)')))) ))).

fof(kb_SUMO_11749,axiom,
    s__subclass(s__Laughing,s__Vocalizing) ).

fof(kb_SUMO_11750,axiom,
    s__instance(s__Laughing__t,s__SetOrClass) ).

fof(kb_SUMO_11751,axiom,
    s__subclass(s__Laughing,s__FacialExpression) ).

fof(kb_SUMO_11752,axiom,
    s__instance(s__FacialExpression__t,s__SetOrClass) ).

fof(kb_SUMO_11753,axiom,
    s__documentation(s__Laughing,s__EnglishLanguage,'Expressing happiness by &%Vocalizing in a certain way.') ).

fof(kb_SUMO_11754,axiom,
    ! [V__LAUGH] :
      ( s__instance(V__LAUGH,s__Process)
     => ( s__instance(V__LAUGH,s__Laughing)
       => ? [V__SMILE] :
            ( s__instance(V__SMILE,s__Process)
            & s__instance(V__SMILE,s__Smiling)
            & s__subProcess(V__SMILE,V__LAUGH) ) ) ) ).

fof(kb_SUMO_11755,axiom,
    s__subclass(s__Weeping,s__FacialExpression) ).

fof(kb_SUMO_11756,axiom,
    s__instance(s__Weeping__t,s__SetOrClass) ).

fof(kb_SUMO_11757,axiom,
    s__documentation(s__Weeping,s__EnglishLanguage,'&%Expressing unhappiness by shedding tears.') ).

%FOL fof(kb_SUMO_11758,axiom,(( (! [V__WEEP,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__WEEP,s__Process)) => ((s__instance(V__WEEP,s__Weeping) & s__agent(V__WEEP,V__AGENT)) => s__holdsDuring(s__WhenFn(V__WEEP),'s__attribute(V__AGENT,s__Unhappiness)')))) ))).

fof(kb_SUMO_11759,axiom,
    s__subclass(s__Nodding,s__Gesture) ).

fof(kb_SUMO_11760,axiom,
    s__instance(s__Nodding__t,s__SetOrClass) ).

fof(kb_SUMO_11761,axiom,
    s__documentation(s__Nodding,s__EnglishLanguage,'Moving the &%Head up and down or side to side to indicate approval or disapproval.') ).

fof(kb_SUMO_11762,axiom,
    ! [V__NOD,V__HEAD] :
      ( s__instance(V__NOD,s__Process)
     => ( ( s__instance(V__NOD,s__Nodding)
          & s__patient(V__NOD,V__HEAD) )
       => s__instance(V__HEAD,s__Head) ) ) ).

fof(kb_SUMO_11763,axiom,
    s__subclass(s__HandGesture,s__Gesture) ).

fof(kb_SUMO_11764,axiom,
    s__documentation(s__HandGesture,s__EnglishLanguage,'Any &%Gesture which involves the &%Hands.') ).

fof(kb_SUMO_11765,axiom,
    ! [V__HG] :
      ( s__instance(V__HG,s__Process)
     => ( s__instance(V__HG,s__HandGesture)
       => ? [V__H] :
            ( s__instance(V__H,s__Hand)
            & s__patient(V__HG,V__H) ) ) ) ).

fof(kb_SUMO_11766,axiom,
    s__subclass(s__Waving,s__HandGesture) ).

fof(kb_SUMO_11767,axiom,
    s__instance(s__Waving__t,s__SetOrClass) ).

fof(kb_SUMO_11768,axiom,
    s__instance(s__HandGesture__t,s__SetOrClass) ).

fof(kb_SUMO_11769,axiom,
    s__documentation(s__Waving,s__EnglishLanguage,'Moving a &%Hand to indicate a greeting, farewell, recognition, goodwill, etc.') ).

fof(kb_SUMO_11770,axiom,
    ! [V__HAND,V__WAVE] :
      ( s__instance(V__WAVE,s__Process)
     => ( ( s__instance(V__WAVE,s__Waving)
          & s__patient(V__WAVE,V__HAND) )
       => s__instance(V__HAND,s__Hand) ) ) ).

fof(kb_SUMO_11771,axiom,
    s__subclass(s__Clapping,s__HandGesture) ).

fof(kb_SUMO_11772,axiom,
    s__subclass(s__Clapping,s__RadiatingSound) ).

fof(kb_SUMO_11773,axiom,
    s__subclass(s__Clapping,s__Impacting) ).

fof(kb_SUMO_11774,axiom,
    s__instance(s__Clapping__t,s__SetOrClass) ).

fof(kb_SUMO_11775,axiom,
    s__documentation(s__Clapping,s__EnglishLanguage,'Bringing the &%Hands together repeatedly to make a loud noise.') ).

fof(kb_SUMO_11776,axiom,
    s__subclass(s__Inclining,s__BodyMotion) ).

fof(kb_SUMO_11777,axiom,
    s__instance(s__Inclining__t,s__SetOrClass) ).

fof(kb_SUMO_11778,axiom,
    s__subclass(s__Inclining,s__MotionDownward) ).

fof(kb_SUMO_11779,axiom,
    s__documentation(s__Inclining,s__EnglishLanguage,'Moving ones body downward from a vertical position. Note that this class covers cases of leaning forward, as well as those of reclining backwards.') ).

fof(kb_SUMO_11780,axiom,
    s__subclass(s__Bowing,s__Gesture) ).

fof(kb_SUMO_11781,axiom,
    s__instance(s__Bowing__t,s__SetOrClass) ).

fof(kb_SUMO_11782,axiom,
    s__subclass(s__Bowing,s__Inclining) ).

fof(kb_SUMO_11783,axiom,
    s__subclass(s__Bowing,s__MotionDownward) ).

fof(kb_SUMO_11784,axiom,
    s__documentation(s__Bowing,s__EnglishLanguage,'Any downward motion of the body that indicates respect for or submission to another &%Agent.') ).

fof(kb_SUMO_11785,axiom,
    s__subclass(s__Sinking,s__Falling) ).

fof(kb_SUMO_11786,axiom,
    s__instance(s__Sinking__t,s__SetOrClass) ).

fof(kb_SUMO_11787,axiom,
    s__documentation(s__Sinking,s__EnglishLanguage,'The class of &%Falling processes that occur in a &%WaterArea.') ).

fof(kb_SUMO_11788,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Sinking)
       => ? [V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__W,s__WaterArea)
            & s__eventLocated(V__S,V__W) ) ) ) ).

fof(kb_SUMO_11789,axiom,
    s__subclass(s__Ducking,s__IntentionalProcess) ).

fof(kb_SUMO_11790,axiom,
    s__subclass(s__Ducking,s__BodyMotion) ).

fof(kb_SUMO_11791,axiom,
    s__instance(s__Ducking__t,s__SetOrClass) ).

fof(kb_SUMO_11792,axiom,
    s__subclass(s__Ducking,s__MotionDownward) ).

fof(kb_SUMO_11793,axiom,
    s__documentation(s__Ducking,s__EnglishLanguage,'Purposely moving ones body downward in such a way as to avoid being hit by something.') ).

fof(kb_SUMO_11794,axiom,
    ! [V__MOTION,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__MOTION,s__Process) )
     => ( ( s__instance(V__MOTION,s__Ducking)
          & s__agent(V__MOTION,V__AGENT) )
       => s__hasPurpose(V__MOTION,'(~ (? [V__IMPACT] : (s__instance(V__IMPACT,s__Process) & s__instance(V__IMPACT,s__Impacting) & s__patient(V__IMPACT,V__AGENT))))') ) ) ).

fof(kb_SUMO_11795,axiom,
    s__subclass(s__ExpressingInLanguage,s__Expressing) ).

fof(kb_SUMO_11796,axiom,
    s__subclass(s__ExpressingInLanguage,s__LinguisticCommunication) ).

fof(kb_SUMO_11797,axiom,
    s__instance(s__ExpressingInLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_11798,axiom,
    s__documentation(s__ExpressingInLanguage,s__EnglishLanguage,'Any instance of &%Expressing that is also an instance of &%LinguisticCommunication, e.g. thanking someone, expressing condolence, expressing disapproval with an utterance rather than a &%Gesture, etc.') ).

fof(kb_SUMO_11799,axiom,
    s__subclass(s__TonalLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_11800,axiom,
    s__instance(s__TonalLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_11801,axiom,
    s__documentation(s__TonalLanguage,s__EnglishLanguage,'Any &%SpokenHumanLanguage that uses pitch to differentiate otherwise identical words, e.g. Chinese.') ).

fof(kb_SUMO_11802,axiom,
    s__subclass(s__Thanking,s__ExpressingInLanguage) ).

fof(kb_SUMO_11803,axiom,
    s__subclass(s__Thanking,s__ExpressingApproval) ).

fof(kb_SUMO_11804,axiom,
    s__instance(s__Thanking__t,s__SetOrClass) ).

fof(kb_SUMO_11805,axiom,
    s__instance(s__ExpressingApproval__t,s__SetOrClass) ).

fof(kb_SUMO_11806,axiom,
    s__documentation(s__Thanking,s__EnglishLanguage,'Any &%ExpressingInLanguage of appreciation to a person for something that the person did in the past.') ).

%FOL fof(kb_SUMO_11807,axiom,(( (! [V__PERSON,V__THANK,V__AGENT,V__THING] : ((s__instance(V__THING,s__Formula) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__THANK,s__Process)) => ((s__instance(V__THANK,s__Thanking) & s__agent(V__THANK,V__AGENT) & s__patient(V__THANK,V__THING) & s__destination(V__THANK,V__PERSON)) => (s__instance(V__PERSON,s__Human) & (s__holdsDuring(s__WhenFn(V__THANK),'s__wants(V__AGENT,V__THING)') | s__holdsDuring(s__WhenFn(V__THANK),'s__desires(V__AGENT,V__THING)')))))) ))).

fof(kb_SUMO_11808,axiom,
    ! [V__P,V__T] :
      ( s__instance(V__T,s__Process)
     => ( ( s__instance(V__T,s__Thanking)
          & s__destination(V__T,V__P) )
       => s__instance(V__P,s__Human) ) ) ).

fof(kb_SUMO_11809,axiom,
    s__subclass(s__Greeting,s__Expressing) ).

fof(kb_SUMO_11810,axiom,
    s__instance(s__Greeting__t,s__SetOrClass) ).

fof(kb_SUMO_11811,axiom,
    s__documentation(s__Greeting,s__EnglishLanguage,'Any instance of &%Expressing an acknowledgment of a persons arrival. Note that this class is not a subclass of &%ExpressingInLanguage, because it covers gestures of greeting, e.g. &%Waving and &%Nodding in certain circumstances.') ).

fof(kb_SUMO_11812,axiom,
    s__subrelation(s__half__m,s__part__m) ).

fof(kb_SUMO_11813,axiom,
    s__documentation(s__half__m,s__EnglishLanguage,'(&%half ?HALF ?WHOLE) means that ?HALF is one half of ?WHOLE.') ).

fof(kb_SUMO_11814,axiom,
    ! [V__HALF,V__WHOLE] :
      ( ( s__instance(V__WHOLE,s__Object)
        & s__instance(V__HALF,s__Object) )
     => ( s__half(V__HALF,V__WHOLE)
       => ? [V__OTHER] :
            ( s__instance(V__OTHER,s__Object)
            & s__half(V__OTHER,V__WHOLE)
            & V__OTHER != V__HALF
            & V__WHOLE = s__MereologicalSumFn(V__HALF,V__OTHER) ) ) ) ).

fof(kb_SUMO_11815,axiom,
    s__documentation(s__third__m,s__EnglishLanguage,'(third ?THIRD ?WHOLE) means that ?THIRD is one third of ?WHOLE.') ).

fof(kb_SUMO_11816,axiom,
    s__subrelation(s__third__m,s__part__m) ).

fof(kb_SUMO_11817,axiom,
    ! [V__T,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__T,s__Object) )
     => ( s__third(V__T,V__W)
       => ? [V__O1,V__O2] :
            ( s__instance(V__O2,s__Object)
            & s__instance(V__O1,s__Object)
            & s__third(V__O1,V__W)
            & s__third(V__O2,V__W)
            & V__O1 != V__T
            & V__O2 != V__T
            & V__O1 != V__O2
            & V__W = s__MereologicalSumFn(V__T,s__MereologicalSumFn(V__O1,V__O2)) ) ) ) ).

fof(kb_SUMO_11818,axiom,
    s__documentation(s__quarter__m,s__EnglishLanguage,'(quarter ?QUART ?WHOLE) means that ?QUART is a quarter of ?WHOLE.') ).

fof(kb_SUMO_11819,axiom,
    s__subrelation(s__quarter__m,s__part__m) ).

fof(kb_SUMO_11820,axiom,
    ! [V__Q,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__Q,s__Object) )
     => ( s__quarter(V__Q,V__W)
      <=> ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__half(V__H,V__W)
            & s__half(V__Q,V__H) ) ) ) ).

fof(kb_SUMO_11821,axiom,
    s__subrelation(s__most__m,s__part__m) ).

fof(kb_SUMO_11822,axiom,
    s__documentation(s__most__m,s__EnglishLanguage,'(&%most ?MOST ?WHOLE) means that ?MOST is a &%part of ?WHOLE that is greater than &%half of ?WHOLE.') ).

fof(kb_SUMO_11823,axiom,
    ! [V__MOST,V__WHOLE] :
      ( ( s__instance(V__WHOLE,s__Object)
        & s__instance(V__MOST,s__Object) )
     => ( s__most(V__MOST,V__WHOLE)
       => ? [V__HALF,V__NUMBER1,V__NUMBER2,V__UNIT] :
            ( s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__NUMBER2,s__RealNumber)
            & s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__HALF,s__Object)
            & s__half(V__HALF,V__WHOLE)
            & s__measure(V__HALF,s__MeasureFn(V__NUMBER1,V__UNIT))
            & s__measure(V__MOST,s__MeasureFn(V__NUMBER2,V__UNIT))
            & greater(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_11824,axiom,
    s__subclass(s__Blueprint,s__Icon) ).

fof(kb_SUMO_11825,axiom,
    s__instance(s__Blueprint__t,s__SetOrClass) ).

fof(kb_SUMO_11826,axiom,
    s__documentation(s__Blueprint,s__EnglishLanguage,'An &%Icon which is a scale model of an &%Artifact, whether the &%Artifact actually exists or not.') ).

fof(kb_SUMO_11827,axiom,
    ! [V__PLAN] :
      ( s__instance(V__PLAN,s__Physical)
     => ( s__instance(V__PLAN,s__Blueprint)
       => s__hasPurpose(V__PLAN,'(? [V__ARTIFACT] : (s__instance(V__ARTIFACT,s__Artifact) & s__represents(V__PLAN,V__ARTIFACT)))') ) ) ).

fof(kb_SUMO_11828,axiom,
    s__subclass(s__Chart,s__Icon) ).

fof(kb_SUMO_11829,axiom,
    s__instance(s__Chart__t,s__SetOrClass) ).

fof(kb_SUMO_11830,axiom,
    s__documentation(s__Chart,s__EnglishLanguage,'An &%Icon which depicts one or more quantities.') ).

fof(kb_SUMO_11831,axiom,
    ! [V__CHART] :
      ( s__instance(V__CHART,s__Chart)
     => ? [V__QUANTITY] :
          ( s__instance(V__QUANTITY,s__PhysicalQuantity)
          & s__refers(V__CHART,V__QUANTITY) ) ) ).

fof(kb_SUMO_11832,axiom,
    s__subclass(s__Flag,s__Icon) ).

fof(kb_SUMO_11833,axiom,
    s__documentation(s__Flag,s__EnglishLanguage,'An &%Icon made of &%Fabric that refers to a particular &%GeopoliticalArea.') ).

fof(kb_SUMO_11834,axiom,
    ! [V__FLAG] :
      ( s__instance(V__FLAG,s__Object)
     => ( s__instance(V__FLAG,s__Flag)
       => ? [V__FABRIC] :
            ( s__instance(V__FABRIC,s__Object)
            & s__instance(V__FABRIC,s__Fabric)
            & s__part(V__FABRIC,V__FLAG) ) ) ) ).

fof(kb_SUMO_11835,axiom,
    ! [V__FLAG] :
      ( s__instance(V__FLAG,s__Flag)
     => ? [V__AREA] :
          ( s__instance(V__AREA,s__GeopoliticalArea)
          & s__refers(V__FLAG,V__AREA) ) ) ).

fof(kb_SUMO_11836,axiom,
    s__subclass(s__NationalFlag,s__Flag) ).

fof(kb_SUMO_11837,axiom,
    s__instance(s__NationalFlag__t,s__SetOrClass) ).

fof(kb_SUMO_11838,axiom,
    s__instance(s__Flag__t,s__SetOrClass) ).

fof(kb_SUMO_11839,axiom,
    s__documentation(s__NationalFlag,s__EnglishLanguage,'A &%Flag that is the official flag of a &%Nation, e.g. the stars and stripes is the &%NationalFlag of the United States.') ).

fof(kb_SUMO_11840,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Flag)
     => ? [V__N] :
          ( s__instance(V__N,s__Nation)
          & s__refers(V__F,V__N) ) ) ).

fof(kb_SUMO_11841,axiom,
    s__subclass(s__GraphDiagram,s__Icon) ).

fof(kb_SUMO_11842,axiom,
    s__instance(s__GraphDiagram__t,s__SetOrClass) ).

fof(kb_SUMO_11843,axiom,
    s__documentation(s__GraphDiagram,s__EnglishLanguage,'An &%Icon which depicts one or more quantities.') ).

fof(kb_SUMO_11844,axiom,
    ! [V__G] :
      ( s__instance(V__G,s__GraphDiagram)
     => ? [V__Q] :
          ( s__instance(V__Q,s__PhysicalQuantity)
          & s__refers(V__G,V__Q) ) ) ).

fof(kb_SUMO_11845,axiom,
    s__subclass(s__ArrowIcon,s__Icon) ).

fof(kb_SUMO_11846,axiom,
    s__instance(s__ArrowIcon__t,s__SetOrClass) ).

fof(kb_SUMO_11847,axiom,
    s__documentation(s__ArrowIcon,s__EnglishLanguage,'An &%Icon which has the shape of an arrow and which is used to indicate direction or a relationship between two things.') ).

fof(kb_SUMO_11848,axiom,
    s__subclass(s__Map,s__Icon) ).

fof(kb_SUMO_11849,axiom,
    s__instance(s__Map__t,s__SetOrClass) ).

fof(kb_SUMO_11850,axiom,
    s__documentation(s__Map,s__EnglishLanguage,'An &%Icon which represents one or more &%GeographicAreas (or even the entire &%Earth).') ).

fof(kb_SUMO_11851,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Map)
     => ? [V__A] :
          ( s__instance(V__A,s__GeographicArea)
          & s__represents(V__M,V__A) ) ) ).

fof(kb_SUMO_11852,axiom,
    s__subclass(s__Photograph,s__Image) ).

fof(kb_SUMO_11853,axiom,
    s__instance(s__Photograph__t,s__SetOrClass) ).

fof(kb_SUMO_11854,axiom,
    s__subclass(s__Photograph,s__Recording) ).

fof(kb_SUMO_11855,axiom,
    s__documentation(s__Photograph,s__EnglishLanguage,'An &%Image that is the result of a process of &%Photographing.') ).

fof(kb_SUMO_11856,axiom,
    s__subclass(s__Photographing,s__ContentDevelopment) ).

fof(kb_SUMO_11857,axiom,
    s__instance(s__Photographing__t,s__SetOrClass) ).

fof(kb_SUMO_11858,axiom,
    s__documentation(s__Photographing,s__EnglishLanguage,'&%ContentDevelopment where the &%instrument is a camera and the &%result is a &%Photograph.') ).

fof(kb_SUMO_11859,axiom,
    ! [V__SHOOT] :
      ( s__instance(V__SHOOT,s__Process)
     => ( s__instance(V__SHOOT,s__Photographing)
       => ? [V__PHOTO,V__CAMERA] :
            ( s__instance(V__CAMERA,s__Object)
            & s__instance(V__PHOTO,s__Photograph)
            & s__result(V__SHOOT,V__PHOTO)
            & s__instrument(V__SHOOT,V__CAMERA)
            & s__instance(V__CAMERA,s__Camera) ) ) ) ).

fof(kb_SUMO_11860,axiom,
    s__subclass(s__Camera,s__Device) ).

fof(kb_SUMO_11861,axiom,
    s__instance(s__Camera__t,s__SetOrClass) ).

fof(kb_SUMO_11862,axiom,
    s__documentation(s__Camera,s__EnglishLanguage,'A &%Device which is capable of &%Photographing.') ).

fof(kb_SUMO_11863,axiom,
    ! [V__CAMERA] :
      ( s__instance(V__CAMERA,s__Object)
     => ( s__instance(V__CAMERA,s__Camera)
       => s__capability(s__Photographing,s__instrument__m,V__CAMERA) ) ) ).

fof(kb_SUMO_11864,axiom,
    s__instance(s__TonMass,s__UnitOfMass) ).

fof(kb_SUMO_11865,axiom,
    s__documentation(s__TonMass,s__EnglishLanguage,'English mass unit that is equal to 2000 pounds.') ).

fof(kb_SUMO_11866,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__TonMass) = s__MeasureFn(times(V__NUMBER,"2000"),s__PoundMass) ) ) ).

fof(kb_SUMO_11867,axiom,
    s__instance(s__MetricTon,s__UnitOfMass) ).

fof(kb_SUMO_11868,axiom,
    s__documentation(s__MetricTon,s__EnglishLanguage,'&%MetricTon is a &%UnitOfMeasure that represents a weight of 2,205 &%PoundMass.') ).

fof(kb_SUMO_11869,axiom,
    s__MeasureFn("1",s__MetricTon) = s__MeasureFn("2205",s__PoundMass) ).

fof(kb_SUMO_11870,axiom,
    ! [V__O,V__A] :
      ( ( s__instance(V__A,s__RealNumber)
        & s__instance(V__O,s__Object) )
     => ( s__measure(V__O,s__MeasureFn(V__A,s__MetricTon))
      <=> s__measure(V__O,s__MeasureFn(times(V__A,"2205"),s__PoundMass)) ) ) ).

fof(kb_SUMO_11871,axiom,
    s__instance(s__LongTon,s__UnitOfMass) ).

fof(kb_SUMO_11872,axiom,
    s__documentation(s__LongTon,s__EnglishLanguage,'&%LongTon is the &%UnitOfMeasure, equal to 2,240 &%PoundMass, which is used to measure Dead Weight Tonnage capacity of &%Ships.') ).

fof(kb_SUMO_11873,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__LongTon) = s__MeasureFn(times(V__NUMBER,"2240"),s__PoundMass) ) ) ).

fof(kb_SUMO_11874,axiom,
    s__instance(s__CubicFoot,s__UnitOfVolume) ).

fof(kb_SUMO_11875,axiom,
    s__documentation(s__CubicFoot,s__EnglishLanguage,'&%CubicFoot is a unit for measuring volume, equal to a volume of one foot length in each dimension of length, width, and height.') ).

fof(kb_SUMO_11876,axiom,
    s__MeasureFn("1",s__CubicFoot) = times(s__MeasureFn("1",s__FootLength),times(s__MeasureFn("1",s__FootLength),s__MeasureFn("1",s__FootLength))) ).

fof(kb_SUMO_11877,axiom,
    ! [V__N2,V__N1,V__QUANT,V__N4,V__N3] :
      ( ( s__instance(V__N3,s__RealNumber)
        & s__instance(V__N4,s__RealNumber)
        & s__instance(V__N1,s__RealNumber)
        & s__instance(V__N2,s__RealNumber) )
     => ( ( V__N4 = times(V__N1,times(V__N2,V__N3))
          & V__QUANT = times(s__MeasureFn(V__N1,s__FootLength),times(s__MeasureFn(V__N2,s__FootLength),s__MeasureFn(V__N3,s__FootLength))) )
       => V__QUANT = s__MeasureFn(V__N4,s__CubicFoot) ) ) ).

fof(kb_SUMO_11878,axiom,
    s__names('Registry Ton',s__RegistryTon) ).

fof(kb_SUMO_11879,axiom,
    s__names('Gross Ton',s__RegistryTon) ).

fof(kb_SUMO_11880,axiom,
    s__instance(s__RegistryTon,s__UnitOfVolume) ).

fof(kb_SUMO_11881,axiom,
    s__documentation(s__RegistryTon,s__EnglishLanguage,'&%RegistryTon is a unit of measure used to represent the Gross Registered Tonnage (GRT) capacity of &%Ships. GRT is based on a volume measure, with one &%RegistryTon equal to a volume of 100 cubic feet.') ).

fof(kb_SUMO_11882,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__RegistryTon) = s__MeasureFn(times(V__NUMBER,"100"),s__CubicFoot) ) ) ).

fof(kb_SUMO_11883,axiom,
    s__instance(s__Page,s__UnitOfInformation) ).

fof(kb_SUMO_11884,axiom,
    s__documentation(s__Page,s__EnglishLanguage,'A single page of &%Text.') ).

fof(kb_SUMO_11885,axiom,
    s__instance(s__LiquorShot,s__UnitOfVolume) ).

fof(kb_SUMO_11886,axiom,
    s__documentation(s__LiquorShot,s__EnglishLanguage,'A &%UnitOfMeasure used in preparing &%AlcoholicBeverages.') ).

fof(kb_SUMO_11887,axiom,
    s__instance(s__MillenniumDuration,s__UnitOfDuration) ).

fof(kb_SUMO_11888,axiom,
    s__documentation(s__MillenniumDuration,s__EnglishLanguage,'The &%UnitOfDuration of 1000 years.') ).

fof(kb_SUMO_11889,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__RealNumber)
     => ( V__N = times("1",V__N)
       => s__MeasureFn(V__N,s__MillenniumDuration) = s__MeasureFn(times(V__N,"1000"),s__YearDuration) ) ) ).

fof(kb_SUMO_11890,axiom,
    s__instance(s__Acre,s__UnitOfArea) ).

fof(kb_SUMO_11891,axiom,
    s__documentation(s__Acre,s__EnglishLanguage,'A &%UnitOfMeasure equal to 4840 square yards.') ).

fof(kb_SUMO_11892,axiom,
    s__instance(s__SquareMile,s__UnitOfArea) ).

fof(kb_SUMO_11893,axiom,
    s__documentation(s__SquareMile,s__EnglishLanguage,'&%SquareMile represents a &%UnitOfMeasure equal to one square &%Mile.') ).

fof(kb_SUMO_11894,axiom,
    s__MeasureFn("1",s__SquareMile) = s__PerFn(s__MeasureFn("1",s__Mile),s__MeasureFn("1",s__Mile)) ).

fof(kb_SUMO_11895,axiom,
    s__instance(s__SquareYard,s__UnitOfArea) ).

fof(kb_SUMO_11896,axiom,
    s__documentation(s__SquareYard,s__EnglishLanguage,'&%SquareYard represents a &%UnitOfMeasure equal to one square &%YardLength.') ).

fof(kb_SUMO_11897,axiom,
    s__MeasureFn("1",s__SquareYard) = s__PerFn(s__MeasureFn("1",s__YardLength),s__MeasureFn("1",s__YardLength)) ).

fof(kb_SUMO_11898,axiom,
    s__instance(s__creator__m,s__BinaryRelation) ).

fof(kb_SUMO_11899,axiom,
    s__domain(s__creator__m,"1",s__Agent) ).

fof(kb_SUMO_11900,axiom,
    s__domain(s__creator__m,"2",s__Entity) ).

fof(kb_SUMO_11901,axiom,
    s__documentation(s__creator__m,s__EnglishLanguage,'(creator ?AGENT ?ENTITY) means that some &%Agent ?AGENT is the creator of some &%Entity ?ENTITY') ).

fof(kb_SUMO_11902,axiom,
    s__termFormat(s__EnglishLanguage,s__creator__m,creator) ).

fof(kb_SUMO_11903,axiom,
    ! [V__AGENT,V__ENTITY] :
      ( s__instance(V__AGENT,s__Agent)
     => ( s__creator(V__AGENT,V__ENTITY)
       => ? [V__CREATION] :
            ( s__instance(V__CREATION,s__Process)
            & s__instance(V__CREATION,s__Creation)
            & s__agent(V__CREATION,V__AGENT)
            & s__result(V__CREATION,V__ENTITY) ) ) ) ).

fof(kb_SUMO_11904,axiom,
    s__subclass(s__Music,s__Proposition) ).

fof(kb_SUMO_11905,axiom,
    s__documentation(s__Music,s__EnglishLanguage,'&%Music refers to the conception of music - its notes, tempo, arrangement, lyrics, etc. as thought by its composers and lyricist. Some types of &%Music are conceptualized with only the background instrumentation thought of, while some types of &%Music are conceptualized with the thought of having both lyrics and musical composition combined.') ).

fof(kb_SUMO_11906,axiom,
    s__termFormat(s__EnglishLanguage,s__Music,music) ).

fof(kb_SUMO_11907,axiom,
    ! [V__MC,V__MUSIC] :
      ( ( s__instance(V__MUSIC,s__Process)
        & s__instance(V__MC,s__Proposition) )
     => ( ( s__instance(V__MC,s__Music)
          & s__realization(V__MUSIC,V__MC) )
       => s__instance(V__MUSIC,s__MakingMusic) ) ) ).

fof(kb_SUMO_11908,axiom,
    s__subclass(s__MusicalComposition,s__Music) ).

fof(kb_SUMO_11909,axiom,
    s__instance(s__MusicalComposition__t,s__SetOrClass) ).

fof(kb_SUMO_11910,axiom,
    s__instance(s__Music__t,s__SetOrClass) ).

fof(kb_SUMO_11911,axiom,
    s__documentation(s__MusicalComposition,s__EnglishLanguage,'&%MusicalComposition refers to the the conception of a musical arrangement not including any &%LyricalContent.') ).

fof(kb_SUMO_11912,axiom,
    s__termFormat(s__EnglishLanguage,s__MusicalComposition,'musical composition') ).

fof(kb_SUMO_11913,axiom,
    s__comment(s__MusicalComposition,'Currently, MusicalComposition is treated as text, and there is no propositional content related to it. This is dangerous, as there could be millions of instances of (for instance) sheet music containing Beethovens Fifth Symphony, and only having MusicalComposition equal to an object would imply that all of this different instances are different from each other. You could also have many different arrangements of the same musical composition. As such, I propose making MusicalComposition a Proposition, which refers more to the conception of the music, and SheetMusic the content bearing object that contains information about a particular MusicalComposition. (09-13-2011)','KJN') ).

fof(kb_SUMO_11914,axiom,
    ! [V__MC,V__MUSIC] :
      ( ( s__instance(V__MUSIC,s__Proposition)
        & s__instance(V__MUSIC,s__Process)
        & s__instance(V__MC,s__Process) )
     => ( ( s__instance(V__MC,s__MusicalComposition)
          & s__realization(V__MC,V__MUSIC) )
       => ~ ? [V__LC,V__V] :
              ( s__instance(V__V,s__Process)
              & s__instance(V__V,s__Singing)
              & s__patient(V__V,V__LC)
              & s__instance(V__LC,s__LyricalContent)
              & s__subProcess(V__V,V__MUSIC) ) ) ) ).

fof(kb_SUMO_11915,axiom,
    s__subclass(s__Song,s__Music) ).

fof(kb_SUMO_11916,axiom,
    s__instance(s__Song__t,s__SetOrClass) ).

fof(kb_SUMO_11917,axiom,
    s__documentation(s__Song,s__EnglishLanguage,'&%Song refers to the conception of music that includes both &%MusicalComposition and &%LyricalComposition. While a &%Song can be interpreted without its &%LyricalContent, or its &%LyricalContent is used elsewhere, the idea of &%Song as it was originally conceptualized is that it contains both.') ).

fof(kb_SUMO_11918,axiom,
    s__termFormat(s__EnglishLanguage,s__Song,song) ).

fof(kb_SUMO_11919,axiom,
    ! [V__S,V__MUSIC] :
      ( ( s__instance(V__MUSIC,s__Proposition)
        & s__instance(V__MUSIC,s__Process)
        & s__instance(V__S,s__Process) )
     => ( ( s__instance(V__S,s__Song)
          & s__realization(V__S,V__MUSIC) )
       => ? [V__MM,V__MV,V__LC,V__MC] :
            ( s__instance(V__MV,s__Process)
            & s__instance(V__MM,s__Process)
            & s__instance(V__MM,s__MakingMusic)
            & s__instance(V__MV,s__Singing)
            & s__instance(V__LC,s__LyricalContent)
            & s__instance(V__MC,s__MusicalComposition)
            & s__patient(V__MM,V__MC)
            & s__patient(V__MV,V__LC)
            & s__subProcess(V__MM,V__MUSIC)
            & s__subProcess(V__MV,V__MUSIC) ) ) ) ).

fof(kb_SUMO_11920,axiom,
    s__subclass(s__LyricalContent,s__Proposition) ).

fof(kb_SUMO_11921,axiom,
    s__instance(s__LyricalContent__t,s__SetOrClass) ).

fof(kb_SUMO_11922,axiom,
    s__documentation(s__LyricalContent,s__EnglishLanguage,'&%LyricalContent is the conceptual idea of &%Lyrics.') ).

fof(kb_SUMO_11923,axiom,
    s__comment(s__LyricalContent,'It is important to distinguish the propositional content of &%Lyrics from the text that displays it. Some songs are translated from one language to another, but use essentially the same Lyrical content. (09-15-2011)','KJN') ).

fof(kb_SUMO_11924,axiom,
    s__termFormat(s__EnglishLanguage,s__LyricalContent,'lyrical content') ).

fof(kb_SUMO_11925,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Physical)
     => ( s__instance(V__X,s__LyricalContent)
       => s__hasPurpose(V__X,'(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Singing) & s__patient(V__S,V__X)))') ) ) ).

fof(kb_SUMO_11926,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Proposition)
     => ( s__instance(V__L,s__LyricalContent)
       => ? [V__W,V__I] :
            ( s__instance(V__I,s__Proposition)
            & s__instance(V__W,s__ContentBearingPhysical)
            & s__instance(V__W,s__Word)
            & s__containsInformation(V__W,V__I)
            & s__subProposition(V__I,V__L) ) ) ) ).

fof(kb_SUMO_11927,axiom,
    s__instance(s__LegislativeBill,s__DeonticAttribute) ).

fof(kb_SUMO_11928,axiom,
    s__documentation(s__LegislativeBill,s__EnglishLanguage,'The &%Attribute of being a proposed law, i.e. being under consideration by a legislative body of &%Government.') ).

%FOL fof(kb_SUMO_11929,axiom,(( (! [V__TEXT,V__TIME1] : ((s__instance(V__TIME1,s__TimeInterval) & s__instance(V__TEXT,s__Formula) & s__instance(V__TEXT,s__Object)) => (s__holdsDuring(V__TIME1,'s__modalAttribute(V__TEXT,s__Law)') => (? [V__TIME2] : (s__instance(V__TIME2,s__TimeInterval) & s__holdsDuring(V__TIME2,'s__attribute(V__TEXT,s__LegislativeBill)') & s__earlier(V__TIME2,V__TIME1)))))) ))).

fof(kb_SUMO_11930,axiom,
    s__subclass(s__PassingABill,s__PoliticalProcess) ).

fof(kb_SUMO_11931,axiom,
    s__instance(s__PassingABill__t,s__SetOrClass) ).

fof(kb_SUMO_11932,axiom,
    s__subclass(s__PassingABill,s__Declaring) ).

fof(kb_SUMO_11933,axiom,
    s__documentation(s__PassingABill,s__EnglishLanguage,'The &%Process of converting a &%LegislativeBill into &%Law by a duly authorized legislative body of &%Government.') ).

%FOL fof(kb_SUMO_11934,axiom,(( (! [V__PASS,V__TEXT] : ((s__instance(V__TEXT,s__Object) & s__instance(V__PASS,s__Process)) => ((s__instance(V__PASS,s__PassingABill) & s__patient(V__PASS,V__TEXT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__PASS)),'s__attribute(V__TEXT,s__LegislativeBill)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PASS)),'s__attribute(V__TEXT,s__Law)'))))) ))).

fof(kb_SUMO_11935,axiom,
    s__subAttribute(s__InternationalLaw,s__Law) ).

fof(kb_SUMO_11936,axiom,
    s__documentation(s__InternationalLaw,s__EnglishLanguage,'An &%Attribute that applies to &%Propositions that express &%Laws concerning the relations between &%Nations.') ).

fof(kb_SUMO_11937,axiom,
    s__subAttribute(s__Illegal,s__Prohibition) ).

fof(kb_SUMO_11938,axiom,
    s__contraryAttribute_2(s__Illegal,s__Legal) ).

fof(kb_SUMO_11939,axiom,
    s__documentation(s__Illegal,s__EnglishLanguage,'A proposition is &%Illegal just in case it is inconsistent with any proposition that is a &%Law.') ).

fof(kb_SUMO_11940,axiom,
    s__subAttribute(s__Legal,s__Permission) ).

fof(kb_SUMO_11941,axiom,
    s__documentation(s__Legal,s__EnglishLanguage,'A proposition is &%Legal just in case it is not inconsistent with any proposition that is a &%Law.') ).

fof(kb_SUMO_11942,axiom,
    ! [V__F1] :
      ( ( s__instance(V__F1,s__Formula)
        & s__instance(V__F1,s__Proposition) )
     => ( s__modalAttribute(V__F1,s__Legal)
      <=> ~ ? [V__F2] :
              ( s__instance(V__F2,s__Formula)
              & s__instance(V__F2,s__Proposition)
              & s__modalAttribute(V__F2,s__Law)
              & ~ s__consistent(V__F1,V__F2) ) ) ) ).

fof(kb_SUMO_11943,axiom,
    s__subclass(s__CriminalAction,s__IntentionalProcess) ).

fof(kb_SUMO_11944,axiom,
    s__instance(s__CriminalAction__t,s__SetOrClass) ).

fof(kb_SUMO_11945,axiom,
    s__documentation(s__CriminalAction,s__EnglishLanguage,'Any &%IntentionalProcess that violates a &%Law.') ).

fof(kb_SUMO_11946,axiom,
    ! [V__ACTION] :
      ( s__instance(V__ACTION,s__Process)
     => ( s__instance(V__ACTION,s__CriminalAction)
       => ? [V__LAW,V__CONTENT,V__CRIME] :
            ( s__instance(V__CRIME,s__Proposition)
            & s__instance(V__CONTENT,s__Proposition)
            & s__instance(V__LAW,s__Formula)
            & s__modalAttribute(V__LAW,s__Law)
            & s__containsInformation(V__LAW,V__CONTENT)
            & s__realization(V__ACTION,V__CRIME)
            & ~ s__consistent(V__CONTENT,V__CRIME) ) ) ) ).

fof(kb_SUMO_11947,axiom,
    s__subclass(s__PoliticalCrime,s__CriminalAction) ).

fof(kb_SUMO_11948,axiom,
    s__subclass(s__PoliticalCrime,s__PoliticalProcess) ).

fof(kb_SUMO_11949,axiom,
    s__instance(s__PoliticalCrime__t,s__SetOrClass) ).

fof(kb_SUMO_11950,axiom,
    s__documentation(s__PoliticalCrime,s__EnglishLanguage,'A &%CriminalAction that is committed by or against &%Governments.') ).

fof(kb_SUMO_11951,axiom,
    s__subclass(s__PoliticalRevolution,s__PoliticalProcess) ).

fof(kb_SUMO_11952,axiom,
    s__instance(s__PoliticalRevolution__t,s__SetOrClass) ).

fof(kb_SUMO_11953,axiom,
    s__subclass(s__PoliticalRevolution,s__ViolentContest) ).

fof(kb_SUMO_11954,axiom,
    s__documentation(s__PoliticalRevolution,s__EnglishLanguage,'The violent overthrow of one &%Government and its replacement by another. This covers grass-roots revolutions, as well as coups detat.') ).

fof(kb_SUMO_11955,axiom,
    ! [V__A,V__R] :
      ( s__instance(V__R,s__Process)
     => ( ( s__instance(V__R,s__PoliticalRevolution)
          & s__patient(V__R,V__A) )
       => s__instance(V__A,s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_11956,axiom,
    ! [V__A,V__R] :
      ( ( s__instance(V__R,s__Process)
        & s__instance(V__A,s__GeopoliticalArea) )
     => ( ( s__instance(V__R,s__PoliticalRevolution)
          & s__patient(V__R,V__A) )
       => ? [V__GOV1,V__GOV2] :
            ( s__holdsDuring(s__BeginFn(s__WhenFn(V__R)),'(V__GOV1 = s__GovernmentFn(V__A))')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__R)),'(V__GOV2 = s__GovernmentFn(V__A))')
            & V__GOV1 != V__GOV2 ) ) ) ).

fof(kb_SUMO_11957,axiom,
    s__subclass(s__LawEnforcement,s__PoliticalProcess) ).

fof(kb_SUMO_11958,axiom,
    s__subclass(s__LawEnforcement,s__RegulatoryProcess) ).

fof(kb_SUMO_11959,axiom,
    s__documentation(s__LawEnforcement,s__EnglishLanguage,'Any &%RegulatoryProcess where the agent is either a &%PoliceOrganization or a member of a &%PoliceOrganization. This covers everything from issuing a traffic ticket to arresting someone on suspicion of having committed a &%Murder.') ).

fof(kb_SUMO_11960,axiom,
    ! [V__P,V__AGENT,V__L] :
      ( ( s__instance(V__L,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__P,s__SelfConnectedObject) )
     => ( ( s__instance(V__L,s__LawEnforcement)
          & s__agent(V__L,V__AGENT) )
       => ( s__instance(V__P,s__PoliceOrganization)
          | ? [V__O] :
              ( s__instance(V__O,s__Collection)
              & s__instance(V__O,s__PoliceOrganization)
              & s__member(V__P,V__O) ) ) ) ) ).

fof(kb_SUMO_11961,axiom,
    s__subclass(s__Imprisoning,s__Confining) ).

fof(kb_SUMO_11962,axiom,
    s__instance(s__Imprisoning__t,s__SetOrClass) ).

fof(kb_SUMO_11963,axiom,
    s__documentation(s__Imprisoning,s__EnglishLanguage,'The class of &%Confining processes where the detainee is put in &%Prison.') ).

fof(kb_SUMO_11964,axiom,
    ! [V__I] :
      ( s__instance(V__I,s__Process)
     => ( s__instance(V__I,s__Imprisoning)
       => ? [V__P] :
            ( s__instance(V__P,s__Object)
            & s__instance(V__P,s__Prison)
            & s__eventLocated(V__I,V__P) ) ) ) ).

fof(kb_SUMO_11965,axiom,
    s__subclass(s__Espionage,s__PoliticalProcess) ).

fof(kb_SUMO_11966,axiom,
    s__instance(s__Espionage__t,s__SetOrClass) ).

fof(kb_SUMO_11967,axiom,
    s__subclass(s__Espionage,s__Investigating) ).

fof(kb_SUMO_11968,axiom,
    s__documentation(s__Espionage,s__EnglishLanguage,'Any Investigating by one &%Government of another &%Government where the second Government does not know that it is being spied upon.') ).

fof(kb_SUMO_11969,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Espionage)
       => ? [V__GOV1,V__GOV2] :
            ( s__instance(V__GOV1,s__Agent)
            & s__instance(V__GOV1,s__Government)
            & s__instance(V__GOV2,s__Government)
            & s__agent(V__S,V__GOV1)
            & s__patient(V__S,V__GOV2)
            & V__GOV1 != V__GOV2 ) ) ) ).

fof(kb_SUMO_11970,axiom,
    s__subclass(s__Polling,s__Investigating) ).

fof(kb_SUMO_11971,axiom,
    s__instance(s__Polling__t,s__SetOrClass) ).

fof(kb_SUMO_11972,axiom,
    s__documentation(s__Polling,s__EnglishLanguage,'Investigating what people believe (and in what proportions) by asking a set of structured questions to a random sample of people.') ).

fof(kb_SUMO_11973,axiom,
    s__subclass(s__MilitaryInfiltration,s__MilitaryProcess) ).

fof(kb_SUMO_11974,axiom,
    s__subclass(s__MilitaryInfiltration,s__Translocation) ).

fof(kb_SUMO_11975,axiom,
    s__instance(s__MilitaryInfiltration__t,s__SetOrClass) ).

fof(kb_SUMO_11976,axiom,
    s__documentation(s__MilitaryInfiltration,s__EnglishLanguage,'Any &%Process by a &%MilitaryOrganization which involves moving through enemy positions without detection by the enemy.') ).

fof(kb_SUMO_11977,axiom,
    s__subclass(s__Agreement,s__Proposition) ).

fof(kb_SUMO_11978,axiom,
    s__instance(s__Agreement__t,s__SetOrClass) ).

fof(kb_SUMO_11979,axiom,
    s__documentation(s__Agreement,s__EnglishLanguage,'&%Agreement is the class of &%Propositions that express the contents of agreements entered into by &%CognitiveAgents. &%Agreement includes treaties, contracts, purchase orders, pledges, marriage vows, etc. An &%Agreement may be written down in a document or other &%ContentBearingObject, it can be verbal &%Communication, it can even be an implied agreement.') ).

fof(kb_SUMO_11980,axiom,
    s__termFormat(s__EnglishLanguage,s__Agreement,agreement) ).

fof(kb_SUMO_11981,axiom,
    ! [V__COMPACT] :
      ( s__instance(V__COMPACT,s__Agreement)
     => ? [V__COMM] :
          ( s__instance(V__COMM,s__Committing)
          & s__represents(V__COMM,V__COMPACT) ) ) ).

fof(kb_SUMO_11982,axiom,
    ! [V__AGREEMENT] :
      ( s__instance(V__AGREEMENT,s__Agreement)
     => ? [V__AGENT1,V__AGENT2] :
          ( s__instance(V__AGENT2,s__CognitiveAgent)
          & s__instance(V__AGENT1,s__CognitiveAgent)
          & s__partyToAgreement(V__AGENT1,V__AGREEMENT)
          & s__partyToAgreement(V__AGENT2,V__AGREEMENT)
          & V__AGENT1 != V__AGENT2 ) ) ).

fof(kb_SUMO_11983,axiom,
    s__instance(s__partyToAgreement__m,s__BinaryPredicate) ).

fof(kb_SUMO_11984,axiom,
    s__documentation(s__partyToAgreement__m,s__EnglishLanguage,'(&%partyToAgreement ?AGENT ?PROP) means that the &%Agent ?AGENT has committed to the agreement ?PROP.') ).

fof(kb_SUMO_11985,axiom,
    s__termFormat(s__EnglishLanguage,s__partyToAgreement__m,'party to agreement') ).

fof(kb_SUMO_11986,axiom,
    s__domain(s__partyToAgreement__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_11987,axiom,
    s__domain(s__partyToAgreement__m,"2",s__Agreement) ).

fof(kb_SUMO_11988,axiom,
    ! [V__CONTENT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__CONTENT,s__Agreement) )
     => ( s__partyToAgreement(V__AGENT,V__CONTENT)
       => ? [V__C] :
            ( s__instance(V__C,s__Process)
            & s__instance(V__C,s__Committing)
            & s__agent(V__C,V__AGENT)
            & s__patient(V__C,V__CONTENT) ) ) ) ).

fof(kb_SUMO_11989,axiom,
    s__instance(s__agreementPeriod__m,s__BinaryPredicate) ).

fof(kb_SUMO_11990,axiom,
    s__domain(s__agreementPeriod__m,"1",s__Agreement) ).

fof(kb_SUMO_11991,axiom,
    s__domain(s__agreementPeriod__m,"2",s__TimeInterval) ).

fof(kb_SUMO_11992,axiom,
    s__documentation(s__agreementPeriod__m,s__EnglishLanguage,'(&%agreementPeriod ?AGREEMENT ?DURATION) holds if ?DURATION specifies a &%TimeDuration, which is the length of time that the ?AGREEMENT is &%ActiveAgreement.') ).

%FOL fof(kb_SUMO_11993,axiom,(( (! [V__STARTDATE,V__AGREEMENT,V__DURATION] : ((s__instance(V__DURATION,s__TimeInterval) & s__instance(V__DURATION,s__TimeDuration) & s__instance(V__AGREEMENT,s__Agreement) & s__instance(V__STARTDATE,s__TimePoint)) => ((s__agreementPeriod(V__AGREEMENT,V__DURATION) & s__agreementEffectiveDate(V__AGREEMENT,V__STARTDATE)) => s__holdsDuring(s__TimePeriodFn(V__STARTDATE,V__DURATION),'s__property(V__AGREEMENT,s__ActiveAgreement)')))) ))).

fof(kb_SUMO_11994,axiom,
    s__instance(s__agreementEffectiveDate__m,s__BinaryPredicate) ).

fof(kb_SUMO_11995,axiom,
    s__domain(s__agreementEffectiveDate__m,"1",s__Agreement) ).

fof(kb_SUMO_11996,axiom,
    s__domain(s__agreementEffectiveDate__m,"2",s__TimePoint) ).

fof(kb_SUMO_11997,axiom,
    s__documentation(s__agreementEffectiveDate__m,s__EnglishLanguage,'(&%agreementEffectiveDate ?AGREEMENT ?TIME) means that ?AGREEMENT goes into effect at &%TimePoint ?TIME, and remains an &%ActiveAgreement for &%TimeDuration ?DURATION.') ).

fof(kb_SUMO_11998,axiom,
    s__instance(s__TimePeriodFn__m,s__BinaryFunction) ).

fof(kb_SUMO_11999,axiom,
    s__documentation(s__TimePeriodFn__m,s__EnglishLanguage,'(&%TimePeriodFn ?TIMEPOINT ?DURATION) accepts &%TimePoint ?TIMEPOINT and &%TimeDuration ?DURATION and returns a &%TimeInterval that starts from ?TIMEPOINT and ends at the end of ?DURATION') ).

fof(kb_SUMO_12000,axiom,
    s__termFormat(s__EnglishLanguage,s__TimePeriodFn__m,'time period function') ).

fof(kb_SUMO_12001,axiom,
    s__domain(s__TimePeriodFn__m,"1",s__TimePoint) ).

fof(kb_SUMO_12002,axiom,
    s__domain(s__TimePeriodFn__m,"2",s__TimeDuration) ).

fof(kb_SUMO_12003,axiom,
    s__range(s__TimePeriodFn__m,s__TimeInterval) ).

fof(kb_SUMO_12004,axiom,
    ! [V__PERIOD,V__T2,V__T1,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__instance(V__PERIOD,s__TimeDuration) )
     => ( ( s__instance(V__T1,s__TimePoint)
          & s__instance(V__T2,s__TimePoint)
          & V__INTERVAL = s__TimeIntervalFn(V__T1,V__T2)
          & s__duration(V__INTERVAL,V__PERIOD) )
       => V__INTERVAL = s__TimePeriodFn(V__T1,V__PERIOD) ) ) ).

fof(kb_SUMO_12005,axiom,
    s__instance(s__agreementExpirationDate__m,s__BinaryPredicate) ).

fof(kb_SUMO_12006,axiom,
    s__domain(s__agreementExpirationDate__m,"1",s__Agreement) ).

fof(kb_SUMO_12007,axiom,
    s__domain(s__agreementExpirationDate__m,"2",s__TimePoint) ).

fof(kb_SUMO_12008,axiom,
    s__documentation(s__agreementExpirationDate__m,s__EnglishLanguage,'(&%agreementExpirationDate ?AGREEMENT ?ENDDATE) means that ?ENDDATE is the date on which ?AGREEMENT is no longer &%ActiveAgreement.') ).

fof(kb_SUMO_12009,axiom,
    ! [V__AGREEMENT,V__ENDDATE] :
      ( ( s__instance(V__ENDDATE,s__TimePoint)
        & s__instance(V__AGREEMENT,s__Agreement) )
     => ( s__agreementExpirationDate(V__AGREEMENT,V__ENDDATE)
       => s__holdsDuring(s__FutureFn(V__ENDDATE),'(~ s__property(V__AGREEMENT,s__ActiveAgreement))') ) ) ).

fof(kb_SUMO_12010,axiom,
    s__instance(s__agreementClause__m,s__QuaternaryPredicate) ).

fof(kb_SUMO_12011,axiom,
    s__documentation(s__agreementClause__m,s__EnglishLanguage,'(&%agreementClause ?PROP ?ATTR ?AGREEMENT ?AGENT) means that &%Proposition ?PROP, which has &%modalAttribute ?ATTR, is part of &%Agreement ?AGREEMENT and, with &%CognitiveAgent ?AGENT being the one responsible to make the statement true') ).

fof(kb_SUMO_12012,axiom,
    s__termFormat(s__EnglishLanguage,s__agreementClause__m,'agreement clause') ).

fof(kb_SUMO_12013,axiom,
    s__domain(s__agreementClause__m,"1",s__Proposition) ).

fof(kb_SUMO_12014,axiom,
    s__domain(s__agreementClause__m,"2",s__DeonticAttribute) ).

fof(kb_SUMO_12015,axiom,
    s__domain(s__agreementClause__m,"3",s__Agreement) ).

fof(kb_SUMO_12016,axiom,
    s__domain(s__agreementClause__m,"4",s__CognitiveAgent) ).

fof(kb_SUMO_12017,axiom,
    ! [V__ATTR,V__AGENT,V__PROP,V__AGREEMENT] :
      ( ( s__instance(V__AGREEMENT,s__Agreement)
        & s__instance(V__PROP,s__Proposition)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ATTR,s__DeonticAttribute) )
     => ( s__agreementClause(V__PROP,V__ATTR,V__AGREEMENT,V__AGENT)
       => ( ? [V__CLAUSE] :
              ( s__instance(V__CLAUSE,s__ContentBearingPhysical)
              & s__containsInformation(V__CLAUSE,V__PROP) )
          & s__partyToAgreement(V__AGENT,V__AGREEMENT) ) ) ) ).

fof(kb_SUMO_12018,axiom,
    ! [V__ATTR,V__AGENT,V__PROP,V__AGREEMENT] :
      ( ( s__instance(V__AGREEMENT,s__Agreement)
        & s__instance(V__PROP,s__Proposition)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ATTR,s__DeonticAttribute) )
     => ( ( s__agreementClause(V__PROP,V__ATTR,V__AGREEMENT,V__AGENT)
          & ( V__ATTR = s__Obligation
            | V__ATTR = s__Promise ) )
       => s__modalAttribute('(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__realization(V__PROC,V__PROP) & s__agent(V__PROC,V__AGENT)))',s__Likely) ) ) ).

fof(kb_SUMO_12019,axiom,
    ! [V__AGENT,V__PROP,V__AGREEMENT] :
      ( ( s__instance(V__AGREEMENT,s__Agreement)
        & s__instance(V__PROP,s__Proposition)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( s__agreementClause(V__PROP,s__Prohibition,V__AGREEMENT,V__AGENT)
       => ~ s__holdsRight('(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__realization(V__PROC,V__PROP) & s__agent(V__PROC,V__AGENT)))',V__AGENT) ) ) ).

fof(kb_SUMO_12020,axiom,
    ! [V__AGENT,V__PROP,V__AGREEMENT] :
      ( ( s__instance(V__AGREEMENT,s__Agreement)
        & s__instance(V__PROP,s__Proposition)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( s__agreementClause(V__PROP,s__Permission,V__AGREEMENT,V__AGENT)
       => s__holdsRight('(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__realization(V__PROC,V__PROP) & s__agent(V__PROC,V__AGENT)))',V__AGENT) ) ) ).

fof(kb_SUMO_12021,axiom,
    s__instance(s__ActiveAgreement,s__RelationalAttribute) ).

fof(kb_SUMO_12022,axiom,
    s__documentation(s__ActiveAgreement,s__EnglishLanguage,'&%ActiveAgreement describes an &%Agreement that is still binding or is still in effect') ).

fof(kb_SUMO_12023,axiom,
    s__termFormat(s__EnglishLanguage,s__ActiveAgreement,'active agreement') ).

fof(kb_SUMO_12024,axiom,
    ! [V__AGREEMENT] :
      ( s__property(V__AGREEMENT,s__ActiveAgreement)
     => s__instance(V__AGREEMENT,s__Agreement) ) ).

fof(kb_SUMO_12025,axiom,
    ! [V__AGREEMENT] :
      ( s__instance(V__AGREEMENT,s__Proposition)
     => ( s__property(V__AGREEMENT,s__ActiveAgreement)
       => s__modalAttribute('(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__realization(V__PROC,V__AGREEMENT)))',s__Obligation) ) ) ).

fof(kb_SUMO_12026,axiom,
    ! [V__ENTITY] :
      ( s__property(V__ENTITY,s__Promise)
     => ( s__property(V__ENTITY,s__Contract)
        | s__property(V__ENTITY,s__NakedPromise) ) ) ).

fof(kb_SUMO_12027,axiom,
    s__subAttribute(s__NakedPromise,s__Promise) ).

fof(kb_SUMO_12028,axiom,
    s__documentation(s__NakedPromise,s__EnglishLanguage,'A &%Promise where nothing is promised in return, i.e. a nudum pactum.') ).

fof(kb_SUMO_12029,axiom,
    s__subAttribute(s__Contract,s__ActiveAgreement) ).

fof(kb_SUMO_12030,axiom,
    s__subAttribute(s__Contract,s__Promise) ).

fof(kb_SUMO_12031,axiom,
    s__documentation(s__Contract,s__EnglishLanguage,'&%Contract is a type of &%Agreement that is legally enforceable, meaning a &%CognitiveAgent can pursue other parties of the agreement in a court of law if provisions of the contract are not followed or kept. It follows that all subpropositions of the &%Contract is &%Legal.') ).

fof(kb_SUMO_12032,axiom,
    s__termFormat(s__EnglishLanguage,s__Contract,contract) ).

fof(kb_SUMO_12033,axiom,
    s__contraryAttribute_2(s__NakedPromise,s__Contract) ).

fof(kb_SUMO_12034,axiom,
    ! [V__AGREEMENT] :
      ( s__property(V__AGREEMENT,s__Contract)
     => ! [V__X] :
          ( ( s__instance(V__X,s__Proposition)
            & s__instance(V__X,s__Formula)
            & s__instance(V__AGREEMENT,s__Proposition) )
         => ( s__subProposition(V__X,V__AGREEMENT)
           => s__modalAttribute(V__X,s__Legal) ) ) ) ).

fof(kb_SUMO_12035,axiom,
    ! [V__PROP,V__AGENT2,V__AGREEMENT,V__AGENT1,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT1,s__CognitiveAgent)
        & s__instance(V__AGENT1,s__LegalAction)
        & s__instance(V__AGREEMENT,s__Agreement)
        & s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__PROP,s__Proposition) )
     => ( ( s__property(V__AGREEMENT,s__Contract)
          & s__partyToAgreement(V__AGENT1,V__AGREEMENT)
          & s__partyToAgreement(V__AGENT2,V__AGREEMENT)
          & s__instance(V__PROC,s__IntentionalProcess)
          & s__agent(V__PROC,V__AGENT1)
          & s__realization(V__PROC,V__PROP)
          & ~ s__consistent(V__PROP,V__AGREEMENT) )
       => s__modalAttribute('(? [V__LEGAL] : (s__instance(V__LEGAL,s__CognitiveAgent) & s__instance(V__LEGAL,s__LegalAction) & s__plaintiff(V__LEGAL,V__AGENT2) & s__defendant(V__LEGAL,V__AGENT1)))',s__Possibility) ) ) ).

fof(kb_SUMO_12036,axiom,
    s__subAttribute(s__MarriageContract,s__Contract) ).

fof(kb_SUMO_12037,axiom,
    s__documentation(s__MarriageContract,s__EnglishLanguage,'An &%Contract between a married couple about how assets owned by the couple will be distributed in the event that the couple is divorced.') ).

fof(kb_SUMO_12038,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__CognitiveAgent)
     => ( s__property(V__C,s__MarriageContract)
       => ? [V__P1,V__P2] :
            ( s__instance(V__P2,s__Agreement)
            & s__instance(V__P2,s__Human)
            & s__instance(V__P1,s__Agreement)
            & s__instance(V__P1,s__Human)
            & s__partyToAgreement(V__C,V__P1)
            & s__partyToAgreement(V__C,V__P2)
            & s__spouse(V__P1,V__P2) ) ) ) ).

fof(kb_SUMO_12039,axiom,
    s__subAttribute(s__PurchaseContract,s__Contract) ).

fof(kb_SUMO_12040,axiom,
    s__documentation(s__PurchaseContract,s__EnglishLanguage,'A &%Contract between two &%Agents in which one &%Agent agrees to render the other some good or service in exchange for currency.') ).

fof(kb_SUMO_12041,axiom,
    ! [V__C,V__SELLER,V__BUYER] :
      ( ( s__instance(V__BUYER,s__Agreement)
        & s__instance(V__SELLER,s__Agent)
        & s__instance(V__SELLER,s__Agreement)
        & s__instance(V__C,s__Proposition)
        & s__instance(V__C,s__CognitiveAgent) )
     => ( s__property(V__C,s__PurchaseContract)
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__Selling)
            & s__agent(V__S,V__SELLER)
            & s__destination(V__S,V__BUYER)
            & s__realization(V__S,V__C)
            & s__partyToAgreement(V__C,V__SELLER)
            & s__partyToAgreement(V__C,V__BUYER) ) ) ) ).

fof(kb_SUMO_12042,axiom,
    s__subAttribute(s__ServiceContract,s__Contract) ).

fof(kb_SUMO_12043,axiom,
    s__documentation(s__ServiceContract,s__EnglishLanguage,'A &%Contract where an &%Agent agrees to perform a service for another &%Agent (usually for a price).') ).

fof(kb_SUMO_12044,axiom,
    ! [V__C,V__SERVICE,V__CUST] :
      ( ( s__instance(V__CUST,s__CognitiveAgent)
        & s__instance(V__CUST,s__Agreement)
        & s__instance(V__SERVICE,s__CognitiveAgent)
        & s__instance(V__SERVICE,s__Agreement)
        & s__instance(V__C,s__Proposition)
        & s__instance(V__C,s__CognitiveAgent) )
     => ( s__property(V__C,s__ServiceContract)
       => ? [V__SP] :
            ( s__instance(V__SP,s__ServiceProcess)
            & s__realization(V__SP,V__C)
            & s__serviceProvider(V__SP,V__SERVICE)
            & s__serviceRecipient(V__SP,V__CUST)
            & s__partyToAgreement(V__C,V__SERVICE)
            & s__partyToAgreement(V__C,V__CUST) ) ) ) ).

fof(kb_SUMO_12045,axiom,
    s__subAttribute(s__Warranty,s__ServiceContract) ).

fof(kb_SUMO_12046,axiom,
    s__documentation(s__Warranty,s__EnglishLanguage,'A &%Contract that states the cirumstances under which defects in the product will be corrected for no charge. A &%Warranty is usually limited to a length of time that is specified in the &%Warranty itself. A &%Warranty also includes information about what is not covered and actions that invalidate the &%Warranty.') ).

fof(kb_SUMO_12047,axiom,
    s__subAttribute(s__Treaty,s__Contract) ).

fof(kb_SUMO_12048,axiom,
    s__documentation(s__Treaty,s__EnglishLanguage,'Any &%Contract which holds between two or more &%Nations.') ).

fof(kb_SUMO_12049,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__CognitiveAgent)
     => ( s__property(V__T,s__Treaty)
       => ? [V__N1,V__N2] :
            ( s__instance(V__N2,s__Agreement)
            & s__instance(V__N1,s__Agreement)
            & s__partyToAgreement(V__T,V__N1)
            & s__partyToAgreement(V__T,V__N2)
            & s__instance(V__N1,s__Nation)
            & s__instance(V__N2,s__Nation)
            & V__N1 != V__N2 ) ) ) ).

fof(kb_SUMO_12050,axiom,
    s__disjointDecomposition_6(s__Sentence,s__Statement,s__Supposition,s__Question,s__Request,s__Order) ).

fof(kb_SUMO_12051,axiom,
    s__subclass(s__Statement,s__Sentence) ).

fof(kb_SUMO_12052,axiom,
    s__instance(s__Statement__t,s__SetOrClass) ).

fof(kb_SUMO_12053,axiom,
    s__documentation(s__Statement,s__EnglishLanguage,'A &%Sentence that is stated to be true.') ).

fof(kb_SUMO_12054,axiom,
    ! [V__SENTENCE,V__STATE] :
      ( s__instance(V__STATE,s__Process)
     => ( ( s__instance(V__STATE,s__Stating)
          & s__result(V__STATE,V__SENTENCE)
          & s__instance(V__SENTENCE,s__Sentence) )
       => s__instance(V__SENTENCE,s__Statement) ) ) ).

fof(kb_SUMO_12055,axiom,
    s__subclass(s__Fact,s__Statement) ).

fof(kb_SUMO_12056,axiom,
    s__instance(s__Fact__t,s__SetOrClass) ).

fof(kb_SUMO_12057,axiom,
    s__documentation(s__Fact,s__EnglishLanguage,'The class of &%Statements that are &%True.') ).

fof(kb_SUMO_12058,axiom,
    ! [V__FACT] :
      ( s__instance(V__FACT,s__Sentence)
     => ( s__instance(V__FACT,s__Fact)
       => s__truth(V__FACT,'$true__m') ) ) ).

fof(kb_SUMO_12059,axiom,
    s__subclass(s__Question,s__Sentence) ).

fof(kb_SUMO_12060,axiom,
    s__instance(s__Question__t,s__SetOrClass) ).

fof(kb_SUMO_12061,axiom,
    s__documentation(s__Question,s__EnglishLanguage,'An interrogative &%Sentence, a &%Sentence that poses a question.') ).

fof(kb_SUMO_12062,axiom,
    ! [V__SENTENCE,V__QUESTION] :
      ( s__instance(V__QUESTION,s__Process)
     => ( ( s__instance(V__QUESTION,s__Questioning)
          & s__result(V__QUESTION,V__SENTENCE)
          & s__instance(V__SENTENCE,s__Sentence) )
       => s__instance(V__SENTENCE,s__Question) ) ) ).

fof(kb_SUMO_12063,axiom,
    s__subclass(s__Supposition,s__Sentence) ).

fof(kb_SUMO_12064,axiom,
    s__instance(s__Supposition__t,s__SetOrClass) ).

fof(kb_SUMO_12065,axiom,
    s__documentation(s__Supposition,s__EnglishLanguage,'A &%Sentence that is assumed to be true, possibly just for the sake of argument.') ).

fof(kb_SUMO_12066,axiom,
    ! [V__SUPPOSE,V__SENTENCE] :
      ( s__instance(V__SUPPOSE,s__Process)
     => ( ( s__instance(V__SUPPOSE,s__Supposing)
          & s__result(V__SUPPOSE,V__SENTENCE)
          & s__instance(V__SENTENCE,s__Sentence) )
       => s__instance(V__SENTENCE,s__Supposition) ) ) ).

fof(kb_SUMO_12067,axiom,
    s__subclass(s__Request,s__Sentence) ).

fof(kb_SUMO_12068,axiom,
    s__instance(s__Request__t,s__SetOrClass) ).

fof(kb_SUMO_12069,axiom,
    s__documentation(s__Request,s__EnglishLanguage,'A &%Sentence that expresses a request for something or that something be done.') ).

fof(kb_SUMO_12070,axiom,
    ! [V__REQUEST,V__SENTENCE] :
      ( s__instance(V__REQUEST,s__Process)
     => ( ( s__instance(V__REQUEST,s__Requesting)
          & s__result(V__REQUEST,V__SENTENCE)
          & s__instance(V__SENTENCE,s__Sentence) )
       => s__instance(V__SENTENCE,s__Request) ) ) ).

fof(kb_SUMO_12071,axiom,
    s__subclass(s__Order,s__Sentence) ).

fof(kb_SUMO_12072,axiom,
    s__instance(s__Order__t,s__SetOrClass) ).

fof(kb_SUMO_12073,axiom,
    s__documentation(s__Order,s__EnglishLanguage,'A &%Sentence that expresses an order for something or that something be done.') ).

fof(kb_SUMO_12074,axiom,
    ! [V__ORDER,V__SENTENCE] :
      ( s__instance(V__ORDER,s__Process)
     => ( ( s__instance(V__ORDER,s__Ordering)
          & s__result(V__ORDER,V__SENTENCE)
          & s__instance(V__SENTENCE,s__Sentence) )
       => s__instance(V__SENTENCE,s__Order) ) ) ).

fof(kb_SUMO_12075,axiom,
    s__subclass(s__AudioRecording,s__Recording) ).

fof(kb_SUMO_12076,axiom,
    s__comment(s__AudioRecording,'In ver 1.111 of Mid-level-ontology.kif , it says that (&%subclass &%AudioRecording &%Text). This does not seem right. Deleting that statement. Creating a parent class called &%Recording which means something that captures a &%Process that happened in real life. &%AudioRecording and &%VideoRecording will inherit from there. A &%Photograph is also a still recording of what happened in real life - as opposed to Graphic Art which is more of an &%ArtWork than a &%Recording, so it will also inherit from &%Recording. (09-14-2011)','KJN') ).

fof(kb_SUMO_12077,axiom,
    s__documentation(s__AudioRecording,s__EnglishLanguage,'A representation of sound on some medium such as wax cylinder, vinyl record, magnetic tape, CD or flash memory, that is intended to be used in some machine to reproduce that sound.') ).

fof(kb_SUMO_12078,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__AudioRecording)
       => ? [V__EV] :
            ( s__instance(V__EV,s__RadiatingSound)
            & s__represents(V__X,V__EV)
            & s__capability(s__RadiatingSound,s__patient__m,V__X) ) ) ) ).

fof(kb_SUMO_12079,axiom,
    ! [V__RECORD] :
      ( s__instance(V__RECORD,s__ContentBearingPhysical)
     => ( s__instance(V__RECORD,s__AudioRecording)
       => ? [V__INFO,V__SOUND] :
            ( s__instance(V__SOUND,s__Process)
            & s__instance(V__INFO,s__Proposition)
            & s__containsInformation(V__RECORD,V__INFO)
            & s__realization(V__SOUND,V__INFO)
            & s__instance(V__SOUND,s__RadiatingSound) ) ) ) ).

fof(kb_SUMO_12080,axiom,
    s__subrelation(s__record__m,s__represents__m) ).

fof(kb_SUMO_12081,axiom,
    s__documentation(s__record__m,s__EnglishLanguage,'(&%record ?OBJ ?PHYS), a more specific relationship than &%represents, means that some &%Physical ?PHYS is captured and interpreted into a &%ContentBearingObject that is stored in some &%DataStorageDevice') ).

fof(kb_SUMO_12082,axiom,
    s__termFormat(s__EnglishLanguage,s__record__m,record) ).

fof(kb_SUMO_12083,axiom,
    s__comment(s__record__m,'Adding a more specific relation than &%represents. While &%represents can be something like a &%Logo that represents a &%Brand, &%record is more strict in the sense that it is an accurate rendering of some &%Process that occurred in real life. (09-14-2011).','KJN') ).

fof(kb_SUMO_12084,axiom,
    s__domain(s__record__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_12085,axiom,
    s__domain(s__record__m,"2",s__Physical) ).

fof(kb_SUMO_12086,axiom,
    ! [V__REC,V__PHYS] :
      ( ( s__instance(V__PHYS,s__ContentBearingPhysical)
        & s__instance(V__REC,s__ContentBearingObject) )
     => ( s__record(V__REC,V__PHYS)
       => s__equivalentContentInstance(V__REC,V__PHYS) ) ) ).

fof(kb_SUMO_12087,axiom,
    ! [V__REC,V__PHYS] :
      ( ( s__instance(V__PHYS,s__Physical)
        & s__instance(V__REC,s__ContentBearingObject) )
     => ( s__record(V__REC,V__PHYS)
       => ? [V__DS] :
            ( s__instance(V__DS,s__DataStorageDevice)
            & s__stored(V__REC,V__DS) ) ) ) ).

fof(kb_SUMO_12088,axiom,
    s__instance(s__stored__m,s__BinaryPredicate) ).

fof(kb_SUMO_12089,axiom,
    s__instance(s__stored__m,s__AntisymmetricRelation) ).

fof(kb_SUMO_12090,axiom,
    s__instance(s__stored__m,s__TransitiveRelation) ).

fof(kb_SUMO_12091,axiom,
    s__documentation(s__stored__m,s__EnglishLanguage,'(&%stored ?REC ?OBJ) means that some &%ContentBearingObject, encoded in some format, is saved in some &%DataStorageDevice and can be accessed in some future date.') ).

fof(kb_SUMO_12092,axiom,
    s__termFormat(s__EnglishLanguage,s__stored__m,stored) ).

fof(kb_SUMO_12093,axiom,
    s__comment(s__stored__m,'Adding a stored method that is specific to storing &%ContentBearingObject such as &%SymbolicString, &%Recording, etc. in a &%DataStorageDevice. Will be changing some axioms to use this instead of other, vaguer ways of describing it.','KJN') ).

fof(kb_SUMO_12094,axiom,
    s__domain(s__stored__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_12095,axiom,
    s__domain(s__stored__m,"2",s__DataStorageDevice) ).

fof(kb_SUMO_12096,axiom,
    ! [V__O,V__D] :
      ( ( s__instance(V__D,s__DataStorageDevice)
        & s__instance(V__O,s__ContentBearingObject) )
     => ( s__stored(V__O,V__D)
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__Writing)
            & s__destination(V__P,V__D)
            & s__patient(V__P,V__O) ) ) ) ).

%FOL fof(kb_SUMO_12097,axiom,(( (! [V__O,V__D,V__TIME] : ((s__instance(V__TIME,s__TimePosition) & s__instance(V__D,s__DataStorageDevice) & s__instance(V__O,s__ContentBearingObject)) => ((V__TIME = s__WhenFn('s__stored(V__O,V__D)')) => s__holdsDuring(V__TIME,'s__modalAttribute((? [V__P] : (s__instance(V__P,s__Process) & s__patient(V__P,V__O))),s__Possibility)')))) ))).

fof(kb_SUMO_12098,axiom,
    s__subclass(s__Recording,s__ContentBearingObject) ).

fof(kb_SUMO_12099,axiom,
    s__instance(s__Recording__t,s__SetOrClass) ).

fof(kb_SUMO_12100,axiom,
    s__documentation(s__Recording,s__EnglishLanguage,'&%Recording refers to a &%ContentBearingObject that represents some &%Process that happened in real life') ).

fof(kb_SUMO_12101,axiom,
    s__termFormat(s__EnglishLanguage,s__Recording,recording) ).

fof(kb_SUMO_12102,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__ContentBearingObject)
     => ( s__instance(V__R,s__Recording)
       => ? [V__P] :
            ( s__instance(V__P,s__Physical)
            & s__instance(V__P,s__Process)
            & s__record(V__R,V__P) ) ) ) ).

fof(kb_SUMO_12103,axiom,
    s__subclass(s__MusicRecording,s__AudioRecording) ).

fof(kb_SUMO_12104,axiom,
    s__instance(s__MusicRecording__t,s__SetOrClass) ).

fof(kb_SUMO_12105,axiom,
    s__instance(s__AudioRecording__t,s__SetOrClass) ).

fof(kb_SUMO_12106,axiom,
    s__documentation(s__MusicRecording,s__EnglishLanguage,'&%MusicRecording refers to an &%AudioRecording of the &%Process of &%MakingMusic.') ).

fof(kb_SUMO_12107,axiom,
    s__termFormat(s__EnglishLanguage,s__MusicRecording,'music recording') ).

fof(kb_SUMO_12108,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__ContentBearingObject)
     => ( s__instance(V__M,s__MusicRecording)
       => ? [V__P] :
            ( s__instance(V__P,s__Physical)
            & s__instance(V__P,s__MakingMusic)
            & s__record(V__M,V__P) ) ) ) ).

fof(kb_SUMO_12109,axiom,
    s__subclass(s__SheetMusic,s__ContentBearingObject) ).

fof(kb_SUMO_12110,axiom,
    s__instance(s__SheetMusic__t,s__SetOrClass) ).

fof(kb_SUMO_12111,axiom,
    s__documentation(s__SheetMusic,s__EnglishLanguage,'&%SheetMusic refers to the &%ContentBearingObject that contains a representation of a &%MusicalComposition, using different musical symbols') ).

fof(kb_SUMO_12112,axiom,
    s__termFormat(s__EnglishLanguage,s__SheetMusic,'sheet music') ).

fof(kb_SUMO_12113,axiom,
    ! [V__SM] :
      ( s__instance(V__SM,s__ContentBearingPhysical)
     => ( s__instance(V__SM,s__SheetMusic)
       => ? [V__MC] :
            ( s__instance(V__MC,s__Proposition)
            & s__instance(V__MC,s__MusicalComposition)
            & s__containsInformation(V__SM,V__MC) ) ) ) ).

fof(kb_SUMO_12114,axiom,
    s__subclass(s__MusicText,s__Text) ).

fof(kb_SUMO_12115,axiom,
    s__instance(s__MusicText__t,s__SetOrClass) ).

fof(kb_SUMO_12116,axiom,
    s__documentation(s__MusicText,s__EnglishLanguage,'A &%Text in a &%Language that represents a form of music.') ).

fof(kb_SUMO_12117,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__MusicText)
       => s__capability(s__MakingMusic,s__patient__m,V__X) ) ) ).

fof(kb_SUMO_12118,axiom,
    s__subclass(s__VideoRecording,s__Recording) ).

fof(kb_SUMO_12119,axiom,
    s__instance(s__VideoRecording__t,s__SetOrClass) ).

fof(kb_SUMO_12120,axiom,
    s__documentation(s__VideoRecording,s__EnglishLanguage,'A representation of video on some medium such as film, videotape or DVD. Instances of this class are also commonly instances of &%AudioRecording.') ).

fof(kb_SUMO_12121,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__VideoRecording)
       => ? [V__EV] :
            ( s__instance(V__EV,s__Process)
            & s__represents(V__X,V__EV)
            & s__capability(s__RadiatingLight,s__patient__m,V__X) ) ) ) ).

fof(kb_SUMO_12122,axiom,
    ! [V__VIDEO] :
      ( s__instance(V__VIDEO,s__Object)
     => ( s__instance(V__VIDEO,s__VideoRecording)
       => s__modalAttribute('(? [V__AUDIO] : (s__instance(V__AUDIO,s__Object) & s__instance(V__AUDIO,s__AudioRecording) & s__part(V__AUDIO,V__VIDEO)))',s__Possibility) ) ) ).

fof(kb_SUMO_12123,axiom,
    s__subclass(s__MediaSystem,s__Collection) ).

fof(kb_SUMO_12124,axiom,
    s__documentation(s__MediaSystem,s__EnglishLanguage,'&%MediaSystem is a &%Collection of components that enable the &%RadiatingSound of &%AudioRecording and &%RadiatingLight of &%VideoRecording') ).

fof(kb_SUMO_12125,axiom,
    s__termFormat(s__EnglishLanguage,s__MediaSystem,'media system') ).

fof(kb_SUMO_12126,axiom,
    ! [V__PLAYER] :
      ( s__instance(V__PLAYER,s__Object)
     => ( s__instance(V__PLAYER,s__MediaSystem)
       => s__hasPurpose(V__PLAYER,'((? [V__VIDEO,V__RL] : (s__instance(V__RL,s__Process) & s__instance(V__VIDEO,s__VideoRecording) & s__instance(V__RL,s__RadiatingLight) & s__patient(V__RL,V__VIDEO) & s__instrument(V__RL,V__PLAYER))) | (? [V__AUDIO,V__RS] : (s__instance(V__RS,s__Process) & s__instance(V__AUDIO,s__AudioRecording) & s__instance(V__RS,s__RadiatingSound) & s__patient(V__RS,V__AUDIO) & s__instrument(V__RS,V__PLAYER))))') ) ) ).

fof(kb_SUMO_12127,axiom,
    s__subclass(s__Label,s__Text) ).

fof(kb_SUMO_12128,axiom,
    s__instance(s__Label__t,s__SetOrClass) ).

fof(kb_SUMO_12129,axiom,
    s__documentation(s__Label,s__EnglishLanguage,'A very brief &%Text that is attached to an &%Object and that indicates very specific information about the &%Object, e.g. its name, its &%monetaryValue, etc.') ).

fof(kb_SUMO_12130,axiom,
    ! [V__LABEL] :
      ( s__instance(V__LABEL,s__Object)
     => ( s__instance(V__LABEL,s__Label)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__instance(V__OBJ,s__SelfConnectedObject)
            & s__connected(V__LABEL,V__OBJ)
            & s__refers(V__LABEL,V__OBJ) ) ) ) ).

fof(kb_SUMO_12131,axiom,
    s__subclass(s__FormText,s__Text) ).

fof(kb_SUMO_12132,axiom,
    s__instance(s__FormText__t,s__SetOrClass) ).

fof(kb_SUMO_12133,axiom,
    s__documentation(s__FormText,s__EnglishLanguage,'A page or set of pages containing spaces where information is to be entered by an &%Agent.') ).

fof(kb_SUMO_12134,axiom,
    s__subclass(s__TestForm,s__FormText) ).

fof(kb_SUMO_12135,axiom,
    s__instance(s__TestForm__t,s__SetOrClass) ).

fof(kb_SUMO_12136,axiom,
    s__subclass(s__TestForm,s__MeasuringDevice) ).

fof(kb_SUMO_12137,axiom,
    s__documentation(s__TestForm,s__EnglishLanguage,'A &%FormText which is intended to measure some aspect of the cognitive capabilities, e.g. intelligence or knowledge of a domain, of the person taking the test.') ).

fof(kb_SUMO_12138,axiom,
    s__subclass(s__Ballot,s__FormText) ).

fof(kb_SUMO_12139,axiom,
    s__instance(s__Ballot__t,s__SetOrClass) ).

fof(kb_SUMO_12140,axiom,
    s__documentation(s__Ballot,s__EnglishLanguage,'A &%FormText which is used in &%Voting. A list of candidates is printed on the form, and the voter selects the candidate he/she wants to vote for.') ).

fof(kb_SUMO_12141,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Ballot)
       => s__hasPurpose(V__B,'(? [V__V] : (s__instance(V__V,s__Process) & s__instance(V__V,s__Voting) & s__instrument(V__V,V__B)))') ) ) ).

fof(kb_SUMO_12142,axiom,
    s__subclass(s__Application,s__FormText) ).

fof(kb_SUMO_12143,axiom,
    s__instance(s__Application__t,s__SetOrClass) ).

fof(kb_SUMO_12144,axiom,
    s__documentation(s__Application,s__EnglishLanguage,'A &%FormText whose purpose is to obtain admission to an &%Organization or to receive assistance from an &%Organization.') ).

fof(kb_SUMO_12145,axiom,
    ! [V__APP] :
      ( s__instance(V__APP,s__Physical)
     => ( s__instance(V__APP,s__Application)
       => s__hasPurpose(V__APP,'(? [V__JOIN,V__GIVE] : (s__instance(V__JOIN,s__JoiningAnOrganization) | s__instance(V__GIVE,s__UnilateralGiving)))') ) ) ).

fof(kb_SUMO_12146,axiom,
    s__subclass(s__Announcement,s__FactualText) ).

fof(kb_SUMO_12147,axiom,
    s__instance(s__Announcement__t,s__SetOrClass) ).

fof(kb_SUMO_12148,axiom,
    s__documentation(s__Announcement,s__EnglishLanguage,'Any &%Text which contains information about an event in the future.') ).

fof(kb_SUMO_12149,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Announcement)
     => ? [V__CD,V__I] :
          ( s__instance(V__I,s__Physical)
          & s__instance(V__CD,s__Process)
          & s__instance(V__CD,s__ContentDevelopment)
          & s__result(V__CD,V__A)
          & s__refers(V__A,V__I)
          & s__instance(V__I,s__SocialInteraction)
          & s__earlier(s__WhenFn(V__CD),s__WhenFn(V__I)) ) ) ).

fof(kb_SUMO_12150,axiom,
    s__subclass(s__PerformanceProgram,s__FactualText) ).

fof(kb_SUMO_12151,axiom,
    s__instance(s__PerformanceProgram__t,s__SetOrClass) ).

fof(kb_SUMO_12152,axiom,
    s__documentation(s__PerformanceProgram,s__EnglishLanguage,'A &%Text that describes the events and/or participants in a &%Performance.') ).

fof(kb_SUMO_12153,axiom,
    ! [V__PROG] :
      ( s__instance(V__PROG,s__ContentBearingPhysical)
     => ( s__instance(V__PROG,s__PerformanceProgram)
       => ? [V__PERF,V__PROP] :
            ( s__instance(V__PROP,s__Proposition)
            & s__instance(V__PERF,s__Process)
            & s__containsInformation(V__PROG,V__PROP)
            & s__realization(V__PERF,V__PROP)
            & s__instance(V__PERF,s__Performance) ) ) ) ).

fof(kb_SUMO_12154,axiom,
    s__subclass(s__MotionPictureShot,s__MotionPicture) ).

fof(kb_SUMO_12155,axiom,
    s__instance(s__MotionPictureShot__t,s__SetOrClass) ).

fof(kb_SUMO_12156,axiom,
    s__documentation(s__MotionPictureShot,s__EnglishLanguage,'A unit of action in a &%MotionPicture, a &%MotionPictureShot is a sequence of images which are captured by a single camera without interruption.') ).

fof(kb_SUMO_12157,axiom,
    ! [V__SHOT] :
      ( s__instance(V__SHOT,s__ContentBearingPhysical)
     => ( s__instance(V__SHOT,s__MotionPictureShot)
       => ? [V__MOVIE] :
            ( s__instance(V__MOVIE,s__ContentBearingPhysical)
            & s__instance(V__MOVIE,s__MotionPicture)
            & s__subsumesContentInstance(V__MOVIE,V__SHOT) ) ) ) ).

fof(kb_SUMO_12158,axiom,
    ! [V__SHOT] :
      ( s__instance(V__SHOT,s__Process)
     => ( s__instance(V__SHOT,s__MotionPictureShot)
       => ? [V__C] :
            ( s__instance(V__C,s__Camera)
            & s__instrument(V__SHOT,V__C)
            & ~ ? [V__C2] :
                  ( s__instance(V__C2,s__Object)
                  & s__instance(V__C,s__Object)
                  & s__instance(V__C2,s__Camera)
                  & V__C != V__C2
                  & s__instrument(V__SHOT,V__C2) ) ) ) ) ).

fof(kb_SUMO_12159,axiom,
    s__subclass(s__MotionPictureScene,s__MotionPicture) ).

fof(kb_SUMO_12160,axiom,
    s__instance(s__MotionPictureScene__t,s__SetOrClass) ).

fof(kb_SUMO_12161,axiom,
    s__documentation(s__MotionPictureScene,s__EnglishLanguage,'A discrete part of a &%MotionPicture which is set in the same time period and the same location.') ).

fof(kb_SUMO_12162,axiom,
    ! [V__MOVIE,V__S] :
      ( ( s__instance(V__S,s__ContentBearingPhysical)
        & s__instance(V__MOVIE,s__ContentBearingPhysical) )
     => ( s__instance(V__S,s__MotionPictureScene)
       => ? [V__M] :
            ( s__instance(V__M,s__MotionPicture)
            & s__subsumesContentInstance(V__MOVIE,V__S) ) ) ) ).

fof(kb_SUMO_12163,axiom,
    s__subclass(s__Documentary,s__MotionPicture) ).

fof(kb_SUMO_12164,axiom,
    s__instance(s__Documentary__t,s__SetOrClass) ).

fof(kb_SUMO_12165,axiom,
    s__subclass(s__Documentary,s__FactualText) ).

fof(kb_SUMO_12166,axiom,
    s__documentation(s__Documentary,s__EnglishLanguage,'A &%MotionPicture which purports to represent the facts about a person, event, etc.') ).

fof(kb_SUMO_12167,axiom,
    s__subclass(s__BroadcastProgram,s__Series) ).

fof(kb_SUMO_12168,axiom,
    s__instance(s__BroadcastProgram__t,s__SetOrClass) ).

fof(kb_SUMO_12169,axiom,
    s__instance(s__Series__t,s__SetOrClass) ).

fof(kb_SUMO_12170,axiom,
    s__documentation(s__BroadcastProgram,s__EnglishLanguage,'A &%Series of episodes that are broadcast on television or radio.') ).

fof(kb_SUMO_12171,axiom,
    ! [V__PROGRAM] :
      ( s__instance(V__PROGRAM,s__BroadcastProgram)
     => ? [V__BROADCAST] :
          ( s__instance(V__BROADCAST,s__Process)
          & s__instance(V__BROADCAST,s__Broadcasting)
          & s__patient(V__BROADCAST,V__PROGRAM) ) ) ).

fof(kb_SUMO_12172,axiom,
    s__subclass(s__NewsProgram,s__BroadcastProgram) ).

fof(kb_SUMO_12173,axiom,
    s__instance(s__NewsProgram__t,s__SetOrClass) ).

fof(kb_SUMO_12174,axiom,
    s__documentation(s__NewsProgram,s__EnglishLanguage,'A &%BroadcastProgram that is devoted to reporting the latest events in a city, region, nation or the world at large.') ).

fof(kb_SUMO_12175,axiom,
    ! [V__NUMBER,V__PROGRAM,V__EPISODE] :
      ( ( s__subclass(V__PROGRAM,s__Series)
        & s__instance(V__PROGRAM,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__subclass(V__PROGRAM,s__NewsProgram)
          & V__EPISODE = s__SeriesVolumeFn(V__PROGRAM,V__NUMBER) )
       => ? [V__DISSEMINATE] :
            ( s__instance(V__DISSEMINATE,s__Process)
            & s__instance(V__DISSEMINATE,s__Disseminating)
            & s__patient(V__DISSEMINATE,V__EPISODE) ) ) ) ).

fof(kb_SUMO_12176,axiom,
    s__instance(s__SeriesVolumeFn__m,s__BinaryFunction) ).

fof(kb_SUMO_12177,axiom,
    s__instance(s__SeriesVolumeFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_12178,axiom,
    s__domainSubclass(s__SeriesVolumeFn__m,"1",s__Series) ).

fof(kb_SUMO_12179,axiom,
    s__domain(s__SeriesVolumeFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_12180,axiom,
    s__rangeSubclass(s__SeriesVolumeFn__m,s__Text) ).

fof(kb_SUMO_12181,axiom,
    s__documentation(s__SeriesVolumeFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a type of &%Series (e.g. the Encyclopedia_Britannica or the Popular_Mechanics periodical) and a number to the volumes of the text type designated by the number.') ).

fof(kb_SUMO_12182,axiom,
    ! [V__CBO1,V__CBO2,V__PUB1,V__PUB2,V__VOLUME2,V__INT2,V__VOLUME1,V__DATE2,V__INT1,V__DATE1,V__TEXT] :
      ( ( s__subclass(V__TEXT,s__Series)
        & s__instance(V__TEXT,s__SetOrClass)
        & s__instance(V__DATE1,s__Day)
        & s__instance(V__INT1,s__PositiveInteger)
        & s__instance(V__DATE2,s__Day)
        & s__instance(V__VOLUME1,s__SetOrClass)
        & s__instance(V__INT2,s__PositiveInteger)
        & s__instance(V__VOLUME2,s__SetOrClass)
        & s__instance(V__PUB2,s__Process)
        & s__instance(V__PUB1,s__Process) )
     => ( ( s__subclass(V__TEXT,s__Periodical)
          & s__SeriesVolumeFn(V__TEXT,V__INT1) = V__VOLUME1
          & s__SeriesVolumeFn(V__TEXT,V__INT2) = V__VOLUME2
          & greater(V__INT2,V__INT1)
          & s__instance(V__PUB1,s__Publication)
          & s__instance(V__PUB2,s__Publication)
          & s__instance(V__CBO1,V__VOLUME1)
          & s__instance(V__CBO2,V__VOLUME2)
          & s__patient(V__PUB1,V__CBO1)
          & s__patient(V__PUB2,V__CBO2)
          & s__date(V__PUB1,V__DATE1)
          & s__date(V__PUB2,V__DATE2) )
       => s__before(s__EndFn(V__DATE1),s__EndFn(V__DATE2)) ) ) ).

fof(kb_SUMO_12183,axiom,
    ! [V__NUMBER,V__VOLUME,V__SERIES] :
      ( ( s__subclass(V__SERIES,s__Series)
        & s__instance(V__SERIES,s__SetOrClass)
        & s__subclass(V__VOLUME,s__ContentBearingPhysical)
        & s__instance(V__VOLUME,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__SeriesVolumeFn(V__SERIES,V__NUMBER) = V__VOLUME
       => s__subsumesContentClass(V__SERIES,V__VOLUME) ) ) ).

fof(kb_SUMO_12184,axiom,
    s__subclass(s__Series,s__Text) ).

fof(kb_SUMO_12185,axiom,
    s__documentation(s__Series,s__EnglishLanguage,'A &%Text consisting of multiple self-contained units. Some examples are an encyclopedia containing a couple dozen volumes, a television series made up of many episodes, a film serial, etc.') ).

fof(kb_SUMO_12186,axiom,
    ! [V__SERIES] :
      ( s__instance(V__SERIES,s__ContentBearingPhysical)
     => ( s__instance(V__SERIES,s__Series)
       => ? [V__BOOK1,V__BOOK2] :
            ( s__instance(V__BOOK2,s__ContentBearingPhysical)
            & s__instance(V__BOOK1,s__ContentBearingPhysical)
            & s__instance(V__BOOK1,s__Book)
            & s__instance(V__BOOK2,s__Book)
            & s__subsumesContentInstance(V__SERIES,V__BOOK1)
            & s__subsumesContentInstance(V__SERIES,V__BOOK2)
            & V__BOOK1 != V__BOOK2 ) ) ) ).

fof(kb_SUMO_12187,axiom,
    s__instance(s__PeriodicalIssueFn__m,s__BinaryFunction) ).

fof(kb_SUMO_12188,axiom,
    s__instance(s__PeriodicalIssueFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_12189,axiom,
    s__domainSubclass(s__PeriodicalIssueFn__m,"1",s__Periodical) ).

fof(kb_SUMO_12190,axiom,
    s__domain(s__PeriodicalIssueFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_12191,axiom,
    s__rangeSubclass(s__PeriodicalIssueFn__m,s__Periodical) ).

fof(kb_SUMO_12192,axiom,
    s__documentation(s__PeriodicalIssueFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a subclass of &%Periodical and a number to all of the issues of the &%Periodical corresponding to the number.') ).

fof(kb_SUMO_12193,axiom,
    ! [V__NUMBER,V__PERIODICAL,V__ISSUE] :
      ( ( s__subclass(V__ISSUE,s__ContentBearingPhysical)
        & s__instance(V__ISSUE,s__SetOrClass)
        & s__subclass(V__PERIODICAL,s__Periodical)
        & s__instance(V__PERIODICAL,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__PeriodicalIssueFn(V__PERIODICAL,V__NUMBER) = V__ISSUE
       => s__subsumesContentClass(V__PERIODICAL,V__ISSUE) ) ) ).

fof(kb_SUMO_12194,axiom,
    s__subclass(s__Periodical,s__Series) ).

fof(kb_SUMO_12195,axiom,
    s__instance(s__Periodical__t,s__SetOrClass) ).

fof(kb_SUMO_12196,axiom,
    s__documentation(s__Periodical,s__EnglishLanguage,'A &%Series whose elements are published separately and on a periodic basis.') ).

fof(kb_SUMO_12197,axiom,
    s__subclass(s__Article,s__Text) ).

fof(kb_SUMO_12198,axiom,
    s__disjoint(s__Article,s__Book) ).

fof(kb_SUMO_12199,axiom,
    s__documentation(s__Article,s__EnglishLanguage,'A relatively short &%Text that either is unbound or is bound with other &%Articles in a &%Book.') ).

fof(kb_SUMO_12200,axiom,
    ! [V__BOOK,V__ARTICLE1] :
      ( ( s__instance(V__ARTICLE1,s__ContentBearingPhysical)
        & s__instance(V__BOOK,s__ContentBearingPhysical) )
     => ( ( s__instance(V__ARTICLE1,s__Article)
          & s__instance(V__BOOK,s__Book)
          & s__subsumesContentInstance(V__BOOK,V__ARTICLE1) )
       => ? [V__ARTICLE2] :
            ( s__instance(V__ARTICLE2,s__ContentBearingPhysical)
            & s__instance(V__ARTICLE2,s__Article)
            & V__ARTICLE2 != V__ARTICLE1
            & s__subsumesContentInstance(V__BOOK,V__ARTICLE2) ) ) ) ).

fof(kb_SUMO_12201,axiom,
    s__subclass(s__Chapter,s__Article) ).

fof(kb_SUMO_12202,axiom,
    s__instance(s__Chapter__t,s__SetOrClass) ).

fof(kb_SUMO_12203,axiom,
    s__documentation(s__Chapter,s__EnglishLanguage,'A numbered and/or titled section of a &%Book, which is typically indicated in a table of contents for the &%Book.') ).

fof(kb_SUMO_12204,axiom,
    ! [V__CHAPTER] :
      ( s__instance(V__CHAPTER,s__ContentBearingPhysical)
     => ( s__instance(V__CHAPTER,s__Chapter)
       => ? [V__BOOK] :
            ( s__instance(V__BOOK,s__ContentBearingPhysical)
            & s__instance(V__BOOK,s__Book)
            & s__subsumesContentInstance(V__BOOK,V__CHAPTER) ) ) ) ).

fof(kb_SUMO_12205,axiom,
    s__subrelation(s__titles__m,s__names__m) ).

fof(kb_SUMO_12206,axiom,
    s__domain(s__titles__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12207,axiom,
    s__domainSubclass(s__titles__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_12208,axiom,
    s__documentation(s__titles__m,s__EnglishLanguage,'A &%BinaryPredicate used to indicate the title of a &%ContentBearingPhysical. Note that the second argument type restriction is a subclass, rather than an instance, of &%ContentBearingPhysical. Thus, the title Murder_on_the_Orient_Express corresponds to a large class of &%Books, and not just to a single copy of the book.') ).

fof(kb_SUMO_12209,axiom,
    s__documentation(s__formerName__m,s__EnglishLanguage,'(formerName ?NAME ?THING) means that the string ?NAME is a name formerly used for ?THING.') ).

fof(kb_SUMO_12210,axiom,
    s__subrelation(s__formerName__m,s__names__m) ).

fof(kb_SUMO_12211,axiom,
    s__instance(s__familyName__m,s__BinaryPredicate) ).

fof(kb_SUMO_12212,axiom,
    s__instance(s__familyName__m,s__AsymmetricRelation) ).

fof(kb_SUMO_12213,axiom,
    s__domain(s__familyName__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12214,axiom,
    s__domain(s__familyName__m,"2",s__Human) ).

fof(kb_SUMO_12215,axiom,
    s__subrelation(s__familyName__m,s__names__m) ).

fof(kb_SUMO_12216,axiom,
    s__documentation(s__familyName__m,s__EnglishLanguage,'(&%familyName ?STRING ?HUMAN) means that the &%SymbolicString ?STRING denotes a non-optional name that ?HUMAN has inherited by virtue of being born into a particular family (kin group). surname is another word for this type of name. Cf. &%givenName.') ).

fof(kb_SUMO_12217,axiom,
    s__documentation(s__middleName__m,s__EnglishLanguage,'(middleName ?CHAR ?INDIV) means that the &%SymbolicString ?CHAR contains the middle name of the &%Human ?INDIV.') ).

fof(kb_SUMO_12218,axiom,
    s__instance(s__middleName__m,s__BinaryPredicate) ).

fof(kb_SUMO_12219,axiom,
    s__instance(s__middleName__m,s__AsymmetricRelation) ).

fof(kb_SUMO_12220,axiom,
    s__domain(s__middleName__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12221,axiom,
    s__domain(s__middleName__m,"2",s__Human) ).

fof(kb_SUMO_12222,axiom,
    s__subrelation(s__middleName__m,s__names__m) ).

fof(kb_SUMO_12223,axiom,
    s__instance(s__givenName__m,s__BinaryPredicate) ).

fof(kb_SUMO_12224,axiom,
    s__instance(s__givenName__m,s__AsymmetricRelation) ).

fof(kb_SUMO_12225,axiom,
    s__subrelation(s__givenName__m,s__names__m) ).

fof(kb_SUMO_12226,axiom,
    s__domain(s__givenName__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12227,axiom,
    s__domain(s__givenName__m,"2",s__Human) ).

fof(kb_SUMO_12228,axiom,
    s__documentation(s__givenName__m,s__EnglishLanguage,'(&%givenName ?STRING ?HUMAN) means that ?STRING is a name selected for ?HUMAN, usually from among many options, as opposed to a mandatory name (cf. &%familyName) that ?HUMAN has inherited by virtue of being born into a certain kin group, caste, or occupation.') ).

fof(kb_SUMO_12229,axiom,
    s__instance(s__localLongName__m,s__BinaryPredicate) ).

fof(kb_SUMO_12230,axiom,
    s__domain(s__localLongName__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12231,axiom,
    s__domain(s__localLongName__m,"2",s__Entity) ).

fof(kb_SUMO_12232,axiom,
    s__documentation(s__localLongName__m,s__EnglishLanguage,'(localLongName ?NAME ?THING) means that the string ?NAME is the long form of the name used for ?THING in its local area or language.') ).

fof(kb_SUMO_12233,axiom,
    s__subrelation(s__localLongName__m,s__names__m) ).

fof(kb_SUMO_12234,axiom,
    s__documentation(s__localShortName__m,s__EnglishLanguage,'(localShortName ?NAME ?THING) means that the string ?NAME is the short form of the name used for ?THING in its local area or language.') ).

fof(kb_SUMO_12235,axiom,
    s__subrelation(s__localShortName__m,s__names__m) ).

fof(kb_SUMO_12236,axiom,
    s__instance(s__localShortName__m,s__BinaryPredicate) ).

fof(kb_SUMO_12237,axiom,
    s__domain(s__localShortName__m,"1",s__SymbolicString) ).

fof(kb_SUMO_12238,axiom,
    s__domain(s__localShortName__m,"2",s__Entity) ).

fof(kb_SUMO_12239,axiom,
    s__subclass(s__Message,s__FactualText) ).

fof(kb_SUMO_12240,axiom,
    s__instance(s__Message__t,s__SetOrClass) ).

fof(kb_SUMO_12241,axiom,
    s__documentation(s__Message,s__EnglishLanguage,'A &%FactualText which is intended to be delivered to and read by a &%Human, &%GroupOfPeople or &%Organization.') ).

fof(kb_SUMO_12242,axiom,
    s__subclass(s__Report,s__FactualText) ).

fof(kb_SUMO_12243,axiom,
    s__instance(s__Report__t,s__SetOrClass) ).

fof(kb_SUMO_12244,axiom,
    s__subclass(s__Report,s__Article) ).

fof(kb_SUMO_12245,axiom,
    s__documentation(s__Report,s__EnglishLanguage,'A relatively brief &%FactualText, often it describes the findings of a study or experiment, or a series of observations.') ).

fof(kb_SUMO_12246,axiom,
    s__subclass(s__Newspaper,s__Periodical) ).

fof(kb_SUMO_12247,axiom,
    s__instance(s__Newspaper__t,s__SetOrClass) ).

fof(kb_SUMO_12248,axiom,
    s__documentation(s__Newspaper,s__EnglishLanguage,'A &%Periodical that is published on a daily or weekly basis, that contains &%Reports, and whose issues are printed on newsprint paper.') ).

fof(kb_SUMO_12249,axiom,
    ! [V__PAPER] :
      ( s__instance(V__PAPER,s__ContentBearingPhysical)
     => ( s__instance(V__PAPER,s__Newspaper)
       => ? [V__REPORT] :
            ( s__instance(V__REPORT,s__ContentBearingPhysical)
            & s__instance(V__REPORT,s__Report)
            & s__subsumesContentInstance(V__PAPER,V__REPORT) ) ) ) ).

fof(kb_SUMO_12250,axiom,
    ! [V__WEEK,V__PAPER] :
      ( ( s__instance(V__PAPER,s__SetOrClass)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__subclass(V__PAPER,s__Newspaper)
          & s__instance(V__WEEK,s__Week) )
       => ? [V__PUBLICATION,V__ISSUE] :
            ( s__instance(V__PUBLICATION,s__Process)
            & s__instance(V__PUBLICATION,s__Publication)
            & s__temporalPart(s__WhenFn(V__PUBLICATION),V__WEEK)
            & s__result(V__PUBLICATION,V__ISSUE)
            & s__instance(V__ISSUE,V__PAPER) ) ) ) ).

fof(kb_SUMO_12251,axiom,
    s__subclass(s__Magazine,s__Periodical) ).

fof(kb_SUMO_12252,axiom,
    s__instance(s__Magazine__t,s__SetOrClass) ).

fof(kb_SUMO_12253,axiom,
    s__documentation(s__Magazine,s__EnglishLanguage,'A &%Periodical that is softbound and printed on glossy paper.') ).

fof(kb_SUMO_12254,axiom,
    s__subclass(s__Letter,s__FactualText) ).

fof(kb_SUMO_12255,axiom,
    s__instance(s__Letter__t,s__SetOrClass) ).

fof(kb_SUMO_12256,axiom,
    s__documentation(s__Letter,s__EnglishLanguage,'A brief message which is intended to be mailed to a person or &%Organization.') ).

fof(kb_SUMO_12257,axiom,
    s__subclass(s__Holiday,s__TimeInterval) ).

fof(kb_SUMO_12258,axiom,
    s__documentation(s__Holiday,s__EnglishLanguage,'&%Holiday is the class of time periods that are observed as holidays in a country, culture, or religion. Holidays may recur annually on the same date, or they may be moveable, for example, &%UnitedStatesThanksgivingDay falls on the last &%Thursday of each &%November.') ).

fof(kb_SUMO_12259,axiom,
    s__subclass(s__FixedHoliday,s__Holiday) ).

fof(kb_SUMO_12260,axiom,
    s__instance(s__FixedHoliday__t,s__SetOrClass) ).

fof(kb_SUMO_12261,axiom,
    s__instance(s__Holiday__t,s__SetOrClass) ).

fof(kb_SUMO_12262,axiom,
    s__documentation(s__FixedHoliday,s__EnglishLanguage,'&%FixedHoliday is the class of &%Holidays whose observance is fixed to recurrences of the calendar day that the holiday commemorates. See &%commemoratesDate.') ).

fof(kb_SUMO_12263,axiom,
    s__subclass(s__MoveableHoliday,s__Holiday) ).

fof(kb_SUMO_12264,axiom,
    s__instance(s__MoveableHoliday__t,s__SetOrClass) ).

fof(kb_SUMO_12265,axiom,
    s__documentation(s__MoveableHoliday,s__EnglishLanguage,'&%MoveableHoliday is the class of &%Holidays whose observance is not fixed to recurrences of any particular calendar day. For example, &%UnitedStatesMemorialDay is observed on the last &%Monday of &%May.') ).

fof(kb_SUMO_12266,axiom,
    s__subclass(s__HolidayCard,s__ContentBearingObject) ).

fof(kb_SUMO_12267,axiom,
    s__instance(s__HolidayCard__t,s__SetOrClass) ).

fof(kb_SUMO_12268,axiom,
    s__documentation(s__HolidayCard,s__EnglishLanguage,'A stiff piece of &%Paper, usually folded over, which is sent to others in celebration of a &%Holiday.') ).

fof(kb_SUMO_12269,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__CorpuscularObject)
     => ( s__instance(V__C,s__HolidayCard)
       => s__material(s__Paper,V__C) ) ) ).

fof(kb_SUMO_12270,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__HolidayCard)
     => ? [V__H] :
          ( s__instance(V__H,s__Holiday)
          & s__refers(V__C,V__H) ) ) ).

fof(kb_SUMO_12271,axiom,
    s__subclass(s__HistoricalAccount,s__NarrativeText) ).

fof(kb_SUMO_12272,axiom,
    s__subclass(s__HistoricalAccount,s__FactualText) ).

fof(kb_SUMO_12273,axiom,
    s__instance(s__HistoricalAccount__t,s__SetOrClass) ).

fof(kb_SUMO_12274,axiom,
    s__documentation(s__HistoricalAccount,s__EnglishLanguage,'A &%FactualAccount that describes significant events that occurred in the past.') ).

fof(kb_SUMO_12275,axiom,
    ! [V__ACCOUNT] :
      ( s__instance(V__ACCOUNT,s__Physical)
     => ( s__instance(V__ACCOUNT,s__HistoricalAccount)
       => ? [V__EVENT] :
            ( s__instance(V__EVENT,s__Physical)
            & s__represents(V__ACCOUNT,V__EVENT)
            & s__earlier(s__WhenFn(V__EVENT),s__WhenFn(V__ACCOUNT)) ) ) ) ).

fof(kb_SUMO_12276,axiom,
    s__subclass(s__Biography,s__HistoricalAccount) ).

fof(kb_SUMO_12277,axiom,
    s__instance(s__Biography__t,s__SetOrClass) ).

fof(kb_SUMO_12278,axiom,
    s__documentation(s__Biography,s__EnglishLanguage,'A &%HistoricalAccount which is concerned with the life of a single &%Human.') ).

fof(kb_SUMO_12279,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Biography)
     => ? [V__H] :
          ( s__instance(V__H,s__Human)
          & s__refers(V__B,V__H) ) ) ).

fof(kb_SUMO_12280,axiom,
    s__subclass(s__FinancialText,s__Report) ).

fof(kb_SUMO_12281,axiom,
    s__instance(s__FinancialText__t,s__SetOrClass) ).

fof(kb_SUMO_12282,axiom,
    s__documentation(s__FinancialText,s__EnglishLanguage,'A &%Report about monetary figures. This class covers &%FinancialBills, balance sheets, account statements, etc.') ).

fof(kb_SUMO_12283,axiom,
    s__subclass(s__FinancialBill,s__FinancialText) ).

fof(kb_SUMO_12284,axiom,
    s__instance(s__FinancialBill__t,s__SetOrClass) ).

fof(kb_SUMO_12285,axiom,
    s__documentation(s__FinancialBill,s__EnglishLanguage,'A brief statement that the stated amount of money is owed by the person to whom the bill is delivered.') ).

fof(kb_SUMO_12286,axiom,
    s__subclass(s__ReferenceBook,s__Book) ).

fof(kb_SUMO_12287,axiom,
    s__subclass(s__ReferenceBook,s__FactualText) ).

fof(kb_SUMO_12288,axiom,
    s__instance(s__ReferenceBook__t,s__SetOrClass) ).

fof(kb_SUMO_12289,axiom,
    s__documentation(s__ReferenceBook,s__EnglishLanguage,'A &%Book which is not intended to be read from cover to cover, but which is meant to be consulted to answer specific factual questions, e.g. about the meaning of a word, the location of a country, etc.') ).

fof(kb_SUMO_12290,axiom,
    s__subclass(s__Dictionary,s__ReferenceBook) ).

fof(kb_SUMO_12291,axiom,
    s__instance(s__Dictionary__t,s__SetOrClass) ).

fof(kb_SUMO_12292,axiom,
    s__documentation(s__Dictionary,s__EnglishLanguage,'A &%ReferenceBook which specifies the meanings of the &%Words of a &%Language.') ).

fof(kb_SUMO_12293,axiom,
    s__subclass(s__NarrativeText,s__Text) ).

fof(kb_SUMO_12294,axiom,
    s__instance(s__NarrativeText__t,s__SetOrClass) ).

fof(kb_SUMO_12295,axiom,
    s__partition_3(s__NarrativeText,s__FictionalText,s__HistoricalAccount) ).

fof(kb_SUMO_12296,axiom,
    s__documentation(s__NarrativeText,s__EnglishLanguage,'Any &%Text that tells a story, whether true or false.') ).

fof(kb_SUMO_12297,axiom,
    s__subclass(s__ShortStory,s__FictionalText) ).

fof(kb_SUMO_12298,axiom,
    s__instance(s__ShortStory__t,s__SetOrClass) ).

fof(kb_SUMO_12299,axiom,
    s__subclass(s__ShortStory,s__Article) ).

fof(kb_SUMO_12300,axiom,
    s__instance(s__Article__t,s__SetOrClass) ).

fof(kb_SUMO_12301,axiom,
    s__documentation(s__ShortStory,s__EnglishLanguage,'A brief work of fiction, often bound with other short stories in a &%Book or &%Periodical.') ).

fof(kb_SUMO_12302,axiom,
    s__subclass(s__MysteryStory,s__FictionalText) ).

fof(kb_SUMO_12303,axiom,
    s__instance(s__MysteryStory__t,s__SetOrClass) ).

fof(kb_SUMO_12304,axiom,
    s__documentation(s__MysteryStory,s__EnglishLanguage,'A &%FictionalText whose central plot element is a crime of some sort, usually a murder.') ).

fof(kb_SUMO_12305,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__MysteryStory)
     => ? [V__C] :
          ( s__instance(V__C,s__CriminalAction)
          & s__refers(V__S,V__C) ) ) ).

fof(kb_SUMO_12306,axiom,
    s__subclass(s__Novel,s__FictionalText) ).

fof(kb_SUMO_12307,axiom,
    s__instance(s__Novel__t,s__SetOrClass) ).

fof(kb_SUMO_12308,axiom,
    s__subclass(s__Novel,s__Book) ).

fof(kb_SUMO_12309,axiom,
    s__documentation(s__Novel,s__EnglishLanguage,'A &%FictionalText that is larger than a &%ShortStory and that is bound independently (i.e. it is a &%Book).') ).

fof(kb_SUMO_12310,axiom,
    s__subclass(s__DramaticPlay,s__FictionalText) ).

fof(kb_SUMO_12311,axiom,
    s__documentation(s__DramaticPlay,s__EnglishLanguage,'A &%FictionalText that is intended to be realized as &%DramaticActing.') ).

fof(kb_SUMO_12312,axiom,
    ! [V__PLAY] :
      ( s__instance(V__PLAY,s__ContentBearingPhysical)
     => ( s__instance(V__PLAY,s__DramaticPlay)
       => s__hasPurpose(V__PLAY,'(? [V__ACT,V__PROP] : (s__instance(V__PROP,s__Proposition) & s__instance(V__ACT,s__Process) & s__instance(V__ACT,s__DramaticActing) & s__containsInformation(V__PLAY,V__PROP) & s__realization(V__ACT,V__PROP)))') ) ) ).

fof(kb_SUMO_12313,axiom,
    s__subclass(s__Opera,s__DramaticPlay) ).

fof(kb_SUMO_12314,axiom,
    s__instance(s__Opera__t,s__SetOrClass) ).

fof(kb_SUMO_12315,axiom,
    s__instance(s__DramaticPlay__t,s__SetOrClass) ).

fof(kb_SUMO_12316,axiom,
    s__documentation(s__Opera,s__EnglishLanguage,'A &%DramaticPlay that is set to &%MakingMusic.') ).

fof(kb_SUMO_12317,axiom,
    ! [V__ACT,V__OPERA] :
      ( ( s__instance(V__OPERA,s__Proposition)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__OPERA,s__Opera)
          & s__realization(V__ACT,V__OPERA) )
       => s__instance(V__ACT,s__MakingMusic) ) ) ).

fof(kb_SUMO_12318,axiom,
    s__instance(s__FrenchLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12319,axiom,
    s__instance(s__FrenchLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12320,axiom,
    s__documentation(s__FrenchLanguage,s__EnglishLanguage,'A &%Romance language that is the official language of France and Belgium, and is widely spoken in Africa.') ).

fof(kb_SUMO_12321,axiom,
    s__instance(s__GermanLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12322,axiom,
    s__instance(s__GermanLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12323,axiom,
    s__documentation(s__GermanLanguage,s__EnglishLanguage,'A &%Germanic language that is spoken primarily in Germany and Austria.') ).

fof(kb_SUMO_12324,axiom,
    s__instance(s__GreekLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12325,axiom,
    s__instance(s__GreekLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12326,axiom,
    s__documentation(s__GreekLanguage,s__EnglishLanguage,'An Indo-European language that is spoken in &%Greece.') ).

fof(kb_SUMO_12327,axiom,
    s__instance(s__LatinLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12328,axiom,
    s__instance(s__LatinLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12329,axiom,
    s__documentation(s__LatinLanguage,s__EnglishLanguage,'A &%Language that was spoken in ancient &%Rome and is still the official language of the &%Vatican.') ).

fof(kb_SUMO_12330,axiom,
    s__instance(s__RussianLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12331,axiom,
    s__instance(s__RussianLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12332,axiom,
    s__documentation(s__RussianLanguage,s__EnglishLanguage,'A Slavic language that is spoken in &%Russia.') ).

fof(kb_SUMO_12333,axiom,
    s__instance(s__SpanishLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_12334,axiom,
    s__instance(s__SpanishLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_12335,axiom,
    s__documentation(s__SpanishLanguage,s__EnglishLanguage,'A &%Romance language that is the official language of Spain, Mexico, and many Central and South American countries.') ).

fof(kb_SUMO_12336,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Agent)
     => ( s__attribute(V__H,s__LiteracyAttribute)
      <=> ( s__hasSkill(s__Reading,V__H)
          & s__hasSkill(s__Writing,V__H) ) ) ) ).

fof(kb_SUMO_12337,axiom,
    s__subclass(s__LiteracyAttribute,s__TraitAttribute) ).

fof(kb_SUMO_12338,axiom,
    s__instance(s__LiteracyAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_12339,axiom,
    s__documentation(s__LiteracyAttribute,s__EnglishLanguage,'If an individual has the &%attribute &%LiteracyAttribute, that individual is able to read and write.') ).

fof(kb_SUMO_12340,axiom,
    s__subclass(s__Industry,s__Collection) ).

fof(kb_SUMO_12341,axiom,
    s__instance(s__Industry__t,s__SetOrClass) ).

fof(kb_SUMO_12342,axiom,
    s__documentation(s__Industry,s__EnglishLanguage,'The class of &%Collections of &%Corporations which are in the same line of business.') ).

fof(kb_SUMO_12343,axiom,
    ! [V__MEMB2,V__MEMB1,V__INDUSTRY] :
      ( ( s__instance(V__INDUSTRY,s__Collection)
        & s__instance(V__MEMB1,s__SelfConnectedObject)
        & s__instance(V__MEMB2,s__SelfConnectedObject) )
     => ( s__instance(V__INDUSTRY,s__Industry)
       => ( ( s__member(V__MEMB1,V__INDUSTRY)
            & s__member(V__MEMB2,V__INDUSTRY) )
         => ? [V__CLASS] :
              ( s__instance(V__CLASS,s__SetOrClass)
              & s__subclass(V__CLASS,s__Corporation)
              & s__immediateInstance(V__MEMB1,V__CLASS)
              & s__immediateInstance(V__MEMB2,V__CLASS) ) ) ) ) ).

fof(kb_SUMO_12344,axiom,
    s__subclass(s__Chimney,s__StationaryArtifact) ).

fof(kb_SUMO_12345,axiom,
    s__subclass(s__Chimney,s__Device) ).

fof(kb_SUMO_12346,axiom,
    s__instance(s__Chimney__t,s__SetOrClass) ).

fof(kb_SUMO_12347,axiom,
    s__documentation(s__Chimney,s__EnglishLanguage,'A thin passageway through which &%Smoke from a controlled fire is conducted &%Outside of a &%Building or &%Room.') ).

fof(kb_SUMO_12348,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Chimney)
       => s__hasPurpose(V__C,'(? [V__S,V__R] : (s__instance(V__R,s__Process) & s__instance(V__S,s__Smoke) & s__instance(V__R,s__Removing) & s__instrument(V__R,V__C)))') ) ) ).

fof(kb_SUMO_12349,axiom,
    s__subclass(s__Curb,s__StationaryArtifact) ).

fof(kb_SUMO_12350,axiom,
    s__instance(s__Curb__t,s__SetOrClass) ).

fof(kb_SUMO_12351,axiom,
    s__documentation(s__Curb,s__EnglishLanguage,'A raised concrete or asphalt structure that connects a &%Sidewalk with a &%Roadway.') ).

fof(kb_SUMO_12352,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__SelfConnectedObject)
     => ( s__instance(V__C,s__Curb)
       => ? [V__S,V__R] :
            ( s__instance(V__R,s__SelfConnectedObject)
            & s__instance(V__S,s__SelfConnectedObject)
            & s__instance(V__S,s__Sidewalk)
            & s__instance(V__R,s__Roadway)
            & s__connects(V__C,V__S,V__R) ) ) ) ).

fof(kb_SUMO_12353,axiom,
    s__instance(s__Paved,s__Attribute) ).

fof(kb_SUMO_12354,axiom,
    s__instance(s__Unpaved,s__Attribute) ).

fof(kb_SUMO_12355,axiom,
    s__subclass(s__Stairway,s__StationaryArtifact) ).

fof(kb_SUMO_12356,axiom,
    s__instance(s__Stairway__t,s__SetOrClass) ).

fof(kb_SUMO_12357,axiom,
    s__documentation(s__Stairway,s__EnglishLanguage,'A &%StationaryArtifact which allows one to climb, step by step, from one level to another.') ).

fof(kb_SUMO_12358,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Stairway)
       => ( s__capability(s__MotionUpward,s__instrument__m,V__S)
          & s__capability(s__MotionDownward,s__instrument__m,V__S) ) ) ) ).

fof(kb_SUMO_12359,axiom,
    ! [V__B,V__S] :
      ( ( s__instance(V__S,s__SelfConnectedObject)
        & s__instance(V__B,s__Object) )
     => ( ( s__instance(V__S,s__Stairway)
          & s__part(V__S,V__B)
          & s__instance(V__B,s__Building) )
       => s__hasPurpose(V__S,'(? [V__L1,V__L2] : (s__instance(V__L2,s__SelfConnectedObject) & s__instance(V__L1,s__SelfConnectedObject) & s__instance(V__L1,s__BuildingLevel) & s__instance(V__L2,s__BuildingLevel) & s__part(V__L1,V__B) & s__part(V__L2,V__B) & s__connects(V__S,V__L1,V__L2)))') ) ) ).

fof(kb_SUMO_12360,axiom,
    s__subclass(s__Steps,s__StationaryArtifact) ).

fof(kb_SUMO_12361,axiom,
    s__instance(s__Steps__t,s__SetOrClass) ).

fof(kb_SUMO_12362,axiom,
    s__documentation(s__Steps,s__EnglishLanguage,'A &%StationaryArtifact which allows one to climb, step by step, from one level to another.') ).

fof(kb_SUMO_12363,axiom,
    ! [V__STEPS] :
      ( s__instance(V__STEPS,s__Object)
     => ( s__instance(V__STEPS,s__Steps)
       => ( s__capability(s__MotionUpward,s__instrument__m,V__STEPS)
          & s__capability(s__MotionDownward,s__instrument__m,V__STEPS) ) ) ) ).

fof(kb_SUMO_12364,axiom,
    ! [V__BUILDING,V__LEVEL1,V__LEVEL2] :
      ( ( s__instance(V__LEVEL2,s__SelfConnectedObject)
        & s__instance(V__LEVEL1,s__SelfConnectedObject)
        & s__instance(V__BUILDING,s__Object) )
     => ( ( s__instance(V__LEVEL1,s__BuildingLevel)
          & s__instance(V__LEVEL2,s__BuildingLevel)
          & s__instance(V__BUILDING,s__Building)
          & s__part(V__LEVEL1,V__BUILDING)
          & s__part(V__LEVEL2,V__BUILDING) )
       => ? [V__STEPS] :
            ( s__instance(V__STEPS,s__SelfConnectedObject)
            & s__instance(V__STEPS,s__Steps)
            & s__connects(V__STEPS,V__LEVEL1,V__LEVEL2) ) ) ) ).

fof(kb_SUMO_12365,axiom,
    s__subclass(s__Ladder,s__Artifact) ).

fof(kb_SUMO_12366,axiom,
    s__instance(s__Ladder__t,s__SetOrClass) ).

fof(kb_SUMO_12367,axiom,
    s__documentation(s__Ladder,s__EnglishLanguage,'An &%Artifact which consists of two parallel supports connected by a series of rungs which can be used to ascend or descend.') ).

fof(kb_SUMO_12368,axiom,
    ! [V__LADDER] :
      ( s__instance(V__LADDER,s__Object)
     => ( s__instance(V__LADDER,s__Ladder)
       => ( s__capability(s__MotionUpward,s__instrument__m,V__LADDER)
          & s__capability(s__MotionDownward,s__instrument__m,V__LADDER) ) ) ) ).

fof(kb_SUMO_12369,axiom,
    s__instance(s__Transparent,s__InternalAttribute) ).

fof(kb_SUMO_12370,axiom,
    s__documentation(s__Transparent,s__EnglishLanguage,'A Transparent material is one through which it is possible to have &%Seeing.') ).

fof(kb_SUMO_12371,axiom,
    ! [V__O,V__A,V__D] :
      ( ( s__instance(V__D,s__Object)
        & s__instance(V__A,s__Agent)
        & s__instance(V__O,s__Object) )
     => ( s__attribute(V__O,s__Transparent)
       => s__modalAttribute('(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__S,s__Seeing) & s__agent(V__S,V__A) & s__destination(V__S,V__D) & s__between(V__O,V__A,V__D)))',s__Possibility) ) ) ).

fof(kb_SUMO_12372,axiom,
    s__subclass(s__Curtain,s__WindowCovering) ).

fof(kb_SUMO_12373,axiom,
    s__subclass(s__Curtain,s__Fabric) ).

fof(kb_SUMO_12374,axiom,
    s__instance(s__Curtain__t,s__SetOrClass) ).

fof(kb_SUMO_12375,axiom,
    s__documentation(s__Curtain,s__EnglishLanguage,'A piece of &%Fabric whose purpose is &%Covering a &%Window so as to keep out the light or prevent people from seeing inside.') ).

fof(kb_SUMO_12376,axiom,
    s__subclass(s__Window,s__Artifact) ).

fof(kb_SUMO_12377,axiom,
    s__documentation(s__Window,s__EnglishLanguage,'An &%Artifact composed of transparent material that admits light (and possibly air) into a &%Room, &%Building or &%Vehicle.') ).

fof(kb_SUMO_12378,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__Window)
       => ? [V__A] :
            ( s__instance(V__A,s__Object)
            & s__part(V__W,V__A)
            & ( s__instance(V__A,s__Building)
              | s__instance(V__A,s__Room)
              | s__instance(V__A,s__Vehicle) ) ) ) ) ).

fof(kb_SUMO_12379,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__Window)
       => s__attribute(V__W,s__Transparent) ) ) ).

fof(kb_SUMO_12380,axiom,
    s__subclass(s__Skylight,s__Window) ).

fof(kb_SUMO_12381,axiom,
    s__instance(s__Skylight__t,s__SetOrClass) ).

fof(kb_SUMO_12382,axiom,
    s__documentation(s__Skylight,s__EnglishLanguage,'A &%Window that is part of the &%Ceiling of a &%Room.') ).

fof(kb_SUMO_12383,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__Skylight)
       => ? [V__C] :
            ( s__instance(V__C,s__Object)
            & s__instance(V__C,s__Ceiling)
            & s__part(V__W,V__C) ) ) ) ).

fof(kb_SUMO_12384,axiom,
    s__subclass(s__RearWindow,s__VehicleWindow) ).

fof(kb_SUMO_12385,axiom,
    s__instance(s__RearWindow__t,s__SetOrClass) ).

fof(kb_SUMO_12386,axiom,
    s__documentation(s__RearWindow,s__EnglishLanguage,'Any &%VehicleWindow which is located at the back of an &%RoadVehicle.') ).

fof(kb_SUMO_12387,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__RearWindow)
       => ? [V__A] :
            ( s__instance(V__A,s__SelfConnectedObject)
            & s__instance(V__A,s__RoadVehicle)
            & s__part(V__W,s__BackFn(V__A)) ) ) ) ).

fof(kb_SUMO_12388,axiom,
    s__subclass(s__WindowCovering,s__Artifact) ).

fof(kb_SUMO_12389,axiom,
    s__instance(s__WindowCovering__t,s__SetOrClass) ).

fof(kb_SUMO_12390,axiom,
    s__documentation(s__WindowCovering,s__EnglishLanguage,'An &%Artifact that is used to cover Windows. Note that this class includes blinds, drapes, shutters, etc.') ).

fof(kb_SUMO_12391,axiom,
    ! [V__WC] :
      ( s__instance(V__WC,s__Object)
     => ( s__instance(V__WC,s__WindowCovering)
       => s__hasPurpose(V__WC,'(? [V__C,V__W] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Covering) & s__patient(V__C,V__W) & s__instance(V__W,s__Window) & s__instrument(V__C,V__WC)))') ) ) ).

fof(kb_SUMO_12392,axiom,
    s__instance(s__AdjoiningRoom,s__RelationalAttribute) ).

fof(kb_SUMO_12393,axiom,
    s__documentation(s__AdjoiningRoom,s__EnglishLanguage,'&%AdjoiningRoom describes a &%Room that has another Room &%Adjacent to it, and a doorway existing on their common wall to allow access from one room to another') ).

fof(kb_SUMO_12394,axiom,
    s__termFormat(s__EnglishLanguage,s__AdjoiningRoom,'adjoining room') ).

fof(kb_SUMO_12395,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__AdjoiningRoom)
       => s__instance(V__X,s__Room) ) ) ).

fof(kb_SUMO_12396,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__AdjoiningRoom)
       => ? [V__ROOM,V__WALL,V__DOOR] :
            ( s__instance(V__DOOR,s__Object)
            & s__instance(V__WALL,s__Object)
            & s__instance(V__ROOM,s__Object)
            & s__attribute(V__ROOM,s__AdjoiningRoom)
            & V__ROOM != V__X
            & s__orientation(V__X,V__ROOM,s__Adjacent)
            & s__instance(V__WALL,s__Wall)
            & s__part(V__WALL,V__ROOM)
            & s__part(V__WALL,V__X)
            & s__instance(V__DOOR,s__Door)
            & s__part(V__DOOR,V__WALL) ) ) ) ).

fof(kb_SUMO_12397,axiom,
    s__subclass(s__TransitwayObstacle,s__Object) ).

fof(kb_SUMO_12398,axiom,
    s__documentation(s__TransitwayObstacle,s__EnglishLanguage,'&%TransitwayObstacle is the general class of &%Objects that can act as obstacles to &%Motion along a &%Transitway.') ).

fof(kb_SUMO_12399,axiom,
    s__subclass(s__Door,s__TransitwayObstacle) ).

fof(kb_SUMO_12400,axiom,
    s__instance(s__Door__t,s__SetOrClass) ).

fof(kb_SUMO_12401,axiom,
    s__instance(s__TransitwayObstacle__t,s__SetOrClass) ).

fof(kb_SUMO_12402,axiom,
    s__subclass(s__Door,s__Device) ).

fof(kb_SUMO_12403,axiom,
    s__documentation(s__Door,s__EnglishLanguage,'An &%Artifact that restricts and permits access to a &%StationaryArtifact (e.g. &%Building or &%Room) depending on whether the &%Door is open or locked. Note that the class &%Door also covers gates, because it is not possible to define objective criteria that reliably distinguish doors from gates.') ).

fof(kb_SUMO_12404,axiom,
    ! [V__DOOR] :
      ( s__instance(V__DOOR,s__Object)
     => ( s__instance(V__DOOR,s__Door)
       => ? [V__WAY] :
            ( s__instance(V__WAY,s__Object)
            & s__part(V__DOOR,V__WAY)
            & s__instance(V__WAY,s__Doorway) ) ) ) ).

fof(kb_SUMO_12405,axiom,
    s__subclass(s__Hinge,s__EngineeringComponent) ).

fof(kb_SUMO_12406,axiom,
    s__instance(s__Hinge__t,s__SetOrClass) ).

fof(kb_SUMO_12407,axiom,
    s__documentation(s__Hinge,s__EnglishLanguage,'An &%EngineeringComponent that connects one thing to another in such a way that they can move relative to one another.') ).

fof(kb_SUMO_12408,axiom,
    ! [V__HINGE] :
      ( s__instance(V__HINGE,s__SelfConnectedObject)
     => ( s__instance(V__HINGE,s__Hinge)
       => s__hasPurpose(V__HINGE,'(? [V__OBJ1,V__OBJ2] : (s__instance(V__OBJ2,s__SelfConnectedObject) & s__instance(V__OBJ1,s__SelfConnectedObject) & s__connects(V__HINGE,V__OBJ1,V__OBJ2) & (s__capability(s__Rotating,s__patient__m,V__OBJ1) | s__capability(s__Rotating,s__patient__m,V__OBJ2))))') ) ) ).

fof(kb_SUMO_12409,axiom,
    s__subclass(s__Doorway,s__StationaryArtifact) ).

fof(kb_SUMO_12410,axiom,
    s__instance(s__Doorway__t,s__SetOrClass) ).

fof(kb_SUMO_12411,axiom,
    s__documentation(s__Doorway,s__EnglishLanguage,'A &%StationaryArtifact consisting of a frame that holds a &%Door.') ).

fof(kb_SUMO_12412,axiom,
    ! [V__WAY] :
      ( s__instance(V__WAY,s__Object)
     => ( s__instance(V__WAY,s__Doorway)
       => ? [V__ARTIFACT] :
            ( s__instance(V__ARTIFACT,s__Object)
            & s__part(V__WAY,V__ARTIFACT)
            & ( s__instance(V__ARTIFACT,s__Building)
              | s__instance(V__ARTIFACT,s__Room) ) ) ) ) ).

fof(kb_SUMO_12413,axiom,
    ! [V__DOOR] :
      ( s__instance(V__DOOR,s__Object)
     => ( s__instance(V__DOOR,s__Door)
       => ? [V__ARTIFACT] :
            ( s__instance(V__ARTIFACT,s__Object)
            & s__part(V__DOOR,V__ARTIFACT)
            & ( s__instance(V__ARTIFACT,s__Building)
              | s__instance(V__ARTIFACT,s__Room) ) ) ) ) ).

fof(kb_SUMO_12414,axiom,
    s__subclass(s__Wall,s__StationaryArtifact) ).

fof(kb_SUMO_12415,axiom,
    s__instance(s__Wall__t,s__SetOrClass) ).

fof(kb_SUMO_12416,axiom,
    s__documentation(s__Wall,s__EnglishLanguage,'A &%StationaryArtifact that supports a &%Building or partitions it into &%Rooms.') ).

fof(kb_SUMO_12417,axiom,
    ! [V__WALL] :
      ( s__instance(V__WALL,s__Object)
     => ( s__instance(V__WALL,s__Wall)
       => ? [V__ARTIFACT] :
            ( s__instance(V__ARTIFACT,s__Object)
            & s__part(V__WALL,V__ARTIFACT)
            & ( s__instance(V__ARTIFACT,s__Building)
              | s__instance(V__ARTIFACT,s__Room) ) ) ) ) ).

fof(kb_SUMO_12418,axiom,
    s__subclass(s__Floor,s__StationaryArtifact) ).

fof(kb_SUMO_12419,axiom,
    s__instance(s__Floor__t,s__SetOrClass) ).

fof(kb_SUMO_12420,axiom,
    s__documentation(s__Floor,s__EnglishLanguage,'A &%StationaryArtifact that is the bottom surface of a &%Room.') ).

fof(kb_SUMO_12421,axiom,
    ! [V__FLOOR] :
      ( s__instance(V__FLOOR,s__Object)
     => ( s__instance(V__FLOOR,s__Floor)
       => ? [V__ARTIFACT] :
            ( s__instance(V__ARTIFACT,s__Object)
            & s__part(V__FLOOR,V__ARTIFACT)
            & s__instance(V__ARTIFACT,s__Room) ) ) ) ).

fof(kb_SUMO_12422,axiom,
    s__subclass(s__Ceiling,s__StationaryArtifact) ).

fof(kb_SUMO_12423,axiom,
    s__documentation(s__Ceiling,s__EnglishLanguage,'A &%StationaryArtifact that is the top surface of a &%Room.') ).

fof(kb_SUMO_12424,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__SelfConnectedObject)
     => ( s__instance(V__C,s__Ceiling)
       => ? [V__R] :
            ( s__instance(V__R,s__SelfConnectedObject)
            & s__top(V__C,V__R)
            & s__instance(V__R,s__Room) ) ) ) ).

fof(kb_SUMO_12425,axiom,
    s__subclass(s__Roof,s__StationaryArtifact) ).

fof(kb_SUMO_12426,axiom,
    s__instance(s__Roof__t,s__SetOrClass) ).

fof(kb_SUMO_12427,axiom,
    s__documentation(s__Roof,s__EnglishLanguage,'The &%top of a &%Building.') ).

fof(kb_SUMO_12428,axiom,
    ! [V__ROOF] :
      ( s__instance(V__ROOF,s__SelfConnectedObject)
     => ( s__instance(V__ROOF,s__Roof)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__SelfConnectedObject)
            & s__instance(V__BUILDING,s__Building)
            & s__top(V__ROOF,V__BUILDING) ) ) ) ).

fof(kb_SUMO_12429,axiom,
    s__subclass(s__Fireplace,s__StationaryArtifact) ).

fof(kb_SUMO_12430,axiom,
    s__subclass(s__Fireplace,s__Device) ).

fof(kb_SUMO_12431,axiom,
    s__instance(s__Fireplace__t,s__SetOrClass) ).

fof(kb_SUMO_12432,axiom,
    s__documentation(s__Fireplace,s__EnglishLanguage,'A &%Device in a &%Building which is used for burning wood, coal, etc for heat.') ).

fof(kb_SUMO_12433,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Fireplace)
       => s__hasPurpose(V__F,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Combustion) & s__eventLocated(V__C,V__F)))') ) ) ).

fof(kb_SUMO_12434,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Fireplace)
       => ? [V__C] :
            ( s__instance(V__C,s__Object)
            & s__instance(V__C,s__Chimney)
            & s__connected(V__F,V__C) ) ) ) ).

fof(kb_SUMO_12435,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Fireplace)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__Building)
            & s__part(V__F,V__B) ) ) ) ).

fof(kb_SUMO_12436,axiom,
    s__subclass(s__Balcony,s__StationaryArtifact) ).

fof(kb_SUMO_12437,axiom,
    s__instance(s__Balcony__t,s__SetOrClass) ).

fof(kb_SUMO_12438,axiom,
    s__documentation(s__Balcony,s__EnglishLanguage,'A &%Balcony is a platform projecting from the wall of a building, surrounded by some type of railing') ).

fof(kb_SUMO_12439,axiom,
    s__termFormat(s__EnglishLanguage,s__Balcony,balcony) ).

fof(kb_SUMO_12440,axiom,
    ! [V__BALCONY] :
      ( s__instance(V__BALCONY,s__Object)
     => ( s__instance(V__BALCONY,s__Balcony)
       => ? [V__WALL,V__LANDAREA] :
            ( s__instance(V__LANDAREA,s__Object)
            & s__instance(V__WALL,s__Object)
            & s__meetsSpatially(V__WALL,V__BALCONY)
            & s__instance(V__LANDAREA,s__LandArea)
            & s__located(V__WALL,V__LANDAREA)
            & s__orientation(V__BALCONY,V__LANDAREA,s__Above) ) ) ) ).

fof(kb_SUMO_12441,axiom,
    s__subclass(s__BuildingLevel,s__StationaryArtifact) ).

fof(kb_SUMO_12442,axiom,
    s__instance(s__BuildingLevel__t,s__SetOrClass) ).

fof(kb_SUMO_12443,axiom,
    s__documentation(s__BuildingLevel,s__EnglishLanguage,'The story or level of a building, e.g. the &%Basement, the &%Attic, the ground level, the fourteenth floor, etc.') ).

fof(kb_SUMO_12444,axiom,
    ! [V__LEVEL] :
      ( s__instance(V__LEVEL,s__Object)
     => ( s__instance(V__LEVEL,s__BuildingLevel)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__LEVEL,V__BUILDING) ) ) ) ).

fof(kb_SUMO_12445,axiom,
    s__subclass(s__Basement,s__BuildingLevel) ).

fof(kb_SUMO_12446,axiom,
    s__instance(s__Basement__t,s__SetOrClass) ).

fof(kb_SUMO_12447,axiom,
    s__documentation(s__Basement,s__EnglishLanguage,'A &%BuildingLevel which satisfies two conditions, viz. it is lower than all of the other &%BuildingLevels in the same &%Building and it is below ground level.') ).

fof(kb_SUMO_12448,axiom,
    ! [V__BASEMENT] :
      ( s__instance(V__BASEMENT,s__Object)
     => ( s__instance(V__BASEMENT,s__Basement)
       => ~ ? [V__LEVEL,V__BUILDING] :
              ( s__instance(V__BUILDING,s__Object)
              & s__instance(V__LEVEL,s__Object)
              & s__instance(V__LEVEL,s__BuildingLevel)
              & s__instance(V__BUILDING,s__Building)
              & s__part(V__LEVEL,V__BUILDING)
              & s__part(V__BASEMENT,V__BUILDING)
              & V__LEVEL != V__BASEMENT
              & s__orientation(V__LEVEL,V__BASEMENT,s__Below) ) ) ) ).

fof(kb_SUMO_12449,axiom,
    s__subclass(s__Elevator,s__TransportationDevice) ).

fof(kb_SUMO_12450,axiom,
    s__instance(s__Elevator__t,s__SetOrClass) ).

fof(kb_SUMO_12451,axiom,
    s__documentation(s__Elevator,s__EnglishLanguage,'A &%TransportationDevice consisting of a car that moves up and down in a vertical shaft so that people or objects can move from one floor to another in a building.') ).

fof(kb_SUMO_12452,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Physical)
     => ( s__instance(V__E,s__Elevator)
       => s__hasPurpose(V__E,'(? [V__T,V__L1,V__L2,V__B] : (s__instance(V__B,s__Object) & s__instance(V__L2,s__Object) & s__instance(V__L1,s__Object) & s__instance(V__T,s__Process) & s__instance(V__T,s__Transportation) & s__origin(V__T,V__L1) & s__instance(V__L1,s__BuildingLevel) & s__destination(V__T,V__L2) & s__instance(V__L2,s__BuildingLevel) & (~ (V__L1 = V__L2)) & s__part(V__L1,V__B) & s__part(V__L2,V__B) & s__instance(V__B,s__Building)))') ) ) ).

fof(kb_SUMO_12453,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Object)
     => ( s__instance(V__E,s__Elevator)
       => ( s__capability(s__MotionUpward,s__instrument__m,V__E)
          & s__capability(s__MotionDownward,s__instrument__m,V__E) ) ) ) ).

fof(kb_SUMO_12454,axiom,
    s__subclass(s__Pump,s__TransportationDevice) ).

fof(kb_SUMO_12455,axiom,
    s__instance(s__Pump__t,s__SetOrClass) ).

fof(kb_SUMO_12456,axiom,
    s__documentation(s__Pump,s__EnglishLanguage,'A &%Device that moves &%Fluids by means of pressure or suction.') ).

fof(kb_SUMO_12457,axiom,
    ! [V__D,V__T] :
      ( ( s__instance(V__T,s__Process)
        & s__instance(V__D,s__Object) )
     => ( ( s__instance(V__T,s__Transportation)
          & s__instrument(V__T,V__D)
          & s__instance(V__D,s__Pump) )
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instrument(V__T,V__F)
            & s__attribute(V__F,s__Fluid) ) ) ) ).

fof(kb_SUMO_12458,axiom,
    s__subclass(s__Oar,s__TransportationDevice) ).

fof(kb_SUMO_12459,axiom,
    s__instance(s__Oar__t,s__SetOrClass) ).

fof(kb_SUMO_12460,axiom,
    s__documentation(s__Oar,s__EnglishLanguage,'A &%Device consisting of a flat, broad surface attached to a handle that is used as an instrument in &%Rowing.') ).

fof(kb_SUMO_12461,axiom,
    ! [V__O] :
      ( s__instance(V__O,s__Object)
     => ( s__instance(V__O,s__Oar)
       => s__hasPurpose(V__O,'(? [V__R] : (s__instance(V__R,s__Process) & s__instance(V__R,s__Rowing) & s__instrument(V__R,V__O)))') ) ) ).

fof(kb_SUMO_12462,axiom,
    s__subclass(s__Garage,s__StationaryArtifact) ).

fof(kb_SUMO_12463,axiom,
    s__instance(s__Garage__t,s__SetOrClass) ).

fof(kb_SUMO_12464,axiom,
    s__documentation(s__Garage,s__EnglishLanguage,'A &%Building or part of a &%Building which is intended to house one or more &%RoadVehicle when they are not in use or are under repair.') ).

fof(kb_SUMO_12465,axiom,
    ! [V__GARAGE,V__Automobile] :
      ( ( s__instance(V__Automobile,s__Object)
        & s__instance(V__GARAGE,s__SelfConnectedObject) )
     => ( s__instance(V__GARAGE,s__Garage)
       => s__hasPurpose(V__GARAGE,'(? [V__AUTO] : (s__instance(V__AUTO,s__RoadVehicle) & s__contains(V__GARAGE,V__Automobile)))') ) ) ).

fof(kb_SUMO_12466,axiom,
    ! [V__GARAGE] :
      ( s__instance(V__GARAGE,s__Object)
     => ( s__instance(V__GARAGE,s__Garage)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__GARAGE,V__BUILDING) ) ) ) ).

fof(kb_SUMO_12467,axiom,
    s__subclass(s__Bathroom,s__Room) ).

fof(kb_SUMO_12468,axiom,
    s__instance(s__Bathroom__t,s__SetOrClass) ).

fof(kb_SUMO_12469,axiom,
    s__documentation(s__Bathroom,s__EnglishLanguage,'A &%Room that contains a &%WashBasin and possibly a &%Toilet.') ).

fof(kb_SUMO_12470,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Bathroom)
       => ? [V__W] :
            ( s__instance(V__W,s__Physical)
            & s__instance(V__W,s__WashBasin)
            & s__located(V__W,V__B) ) ) ) ).

fof(kb_SUMO_12471,axiom,
    s__subclass(s__Closet,s__Room) ).

fof(kb_SUMO_12472,axiom,
    s__instance(s__Closet__t,s__SetOrClass) ).

fof(kb_SUMO_12473,axiom,
    s__documentation(s__Closet,s__EnglishLanguage,'A relatively small &%Room used for storage.') ).

fof(kb_SUMO_12474,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Closet)
       => s__hasPurpose(V__R,'(? [V__K,V__O] : (s__instance(V__O,s__Physical) & s__instance(V__K,s__Process) & s__instance(V__K,s__Keeping) & s__patient(V__K,V__O) & s__located(V__O,V__R)))') ) ) ).

fof(kb_SUMO_12475,axiom,
    s__subclass(s__DressingRoom,s__Room) ).

fof(kb_SUMO_12476,axiom,
    s__instance(s__DressingRoom__t,s__SetOrClass) ).

fof(kb_SUMO_12477,axiom,
    s__documentation(s__DressingRoom,s__EnglishLanguage,'Any &%Room which is intended for &%ChangingClothing.') ).

fof(kb_SUMO_12478,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__DressingRoom)
       => s__hasPurpose(V__R,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__ChangingClothing) & s__eventLocated(V__C,V__R)))') ) ) ).

fof(kb_SUMO_12479,axiom,
    s__subclass(s__SittingArea,s__Region) ).

fof(kb_SUMO_12480,axiom,
    s__instance(s__SittingArea__t,s__SetOrClass) ).

fof(kb_SUMO_12481,axiom,
    s__documentation(s__SittingArea,s__EnglishLanguage,'&%SittingArea refers to a &%Region, either &%Indoor (like a Living Room) or &%Outdoor (like a Garden sitting area) where people normally sit and entertain guests') ).

fof(kb_SUMO_12482,axiom,
    s__termFormat(s__EnglishLanguage,s__SittingArea,'sitting area') ).

fof(kb_SUMO_12483,axiom,
    ! [V__AREA] :
      ( s__instance(V__AREA,s__Object)
     => ( s__instance(V__AREA,s__SittingArea)
       => ? [V__SEAT] :
            ( s__instance(V__SEAT,s__Physical)
            & s__instance(V__SEAT,s__Seat)
            & s__located(V__SEAT,V__AREA) ) ) ) ).

fof(kb_SUMO_12484,axiom,
    s__subclass(s__KitchenArea,s__Region) ).

fof(kb_SUMO_12485,axiom,
    s__documentation(s__KitchenArea,s__EnglishLanguage,'a &%KitchenArea refers to a &%Region, either &%Outdoors or &%Indoors, that is intended for &%Cooking') ).

fof(kb_SUMO_12486,axiom,
    s__termFormat(s__EnglishLanguage,s__KitchenArea,'kitchen area') ).

fof(kb_SUMO_12487,axiom,
    ! [V__K] :
      ( s__instance(V__K,s__Object)
     => ( s__instance(V__K,s__KitchenArea)
       => s__hasPurpose(V__K,'(? [V__C] : (s__instance(V__C,s__Process) & s__instance(V__C,s__Cooking) & s__eventLocated(V__C,V__K)))') ) ) ).

fof(kb_SUMO_12488,axiom,
    s__subclass(s__Kitchen,s__Room) ).

fof(kb_SUMO_12489,axiom,
    s__subclass(s__Kitchen,s__KitchenArea) ).

fof(kb_SUMO_12490,axiom,
    s__instance(s__Kitchen__t,s__SetOrClass) ).

fof(kb_SUMO_12491,axiom,
    s__instance(s__KitchenArea__t,s__SetOrClass) ).

fof(kb_SUMO_12492,axiom,
    s__documentation(s__Kitchen,s__EnglishLanguage,'A &%Room intended for &%Cooking.') ).

fof(kb_SUMO_12493,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__Kitchen)
       => s__hasPurpose(V__ROOM,'(? [V__COOK] : (s__instance(V__COOK,s__Physical) & s__instance(V__COOK,s__Cooking) & s__located(V__COOK,V__ROOM)))') ) ) ).

fof(kb_SUMO_12494,axiom,
    s__subclass(s__DiningArea,s__Region) ).

fof(kb_SUMO_12495,axiom,
    s__instance(s__DiningArea__t,s__SetOrClass) ).

fof(kb_SUMO_12496,axiom,
    s__documentation(s__DiningArea,s__EnglishLanguage,'a &%DiningArea refers to a &%Region, either &%Outdoors or &%Indoors, that is intended for &%Eating') ).

fof(kb_SUMO_12497,axiom,
    s__termFormat(s__EnglishLanguage,s__DiningArea,'dining area') ).

fof(kb_SUMO_12498,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__DiningArea)
       => s__hasPurpose(V__D,'(? [V__E] : (s__instance(V__E,s__Process) & s__instance(V__E,s__Eating) & s__eventLocated(V__E,V__D)))') ) ) ).

fof(kb_SUMO_12499,axiom,
    s__subclass(s__DiningRoom,s__Room) ).

fof(kb_SUMO_12500,axiom,
    s__instance(s__DiningRoom__t,s__SetOrClass) ).

fof(kb_SUMO_12501,axiom,
    s__subclass(s__DiningRoom,s__DiningArea) ).

fof(kb_SUMO_12502,axiom,
    s__documentation(s__DiningRoom,s__EnglishLanguage,'A &%Room intended primarily for &%Eating.') ).

fof(kb_SUMO_12503,axiom,
    s__subclass(s__Bedroom,s__Room) ).

fof(kb_SUMO_12504,axiom,
    s__instance(s__Bedroom__t,s__SetOrClass) ).

fof(kb_SUMO_12505,axiom,
    s__documentation(s__Bedroom,s__EnglishLanguage,'A &%Room intended primarily for sleeping.') ).

fof(kb_SUMO_12506,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__Bedroom)
       => ? [V__BED] :
            ( s__instance(V__BED,s__Physical)
            & s__instance(V__BED,s__Bed)
            & s__located(V__BED,V__ROOM) ) ) ) ).

fof(kb_SUMO_12507,axiom,
    s__subclass(s__Classroom,s__Room) ).

fof(kb_SUMO_12508,axiom,
    s__instance(s__Classroom__t,s__SetOrClass) ).

fof(kb_SUMO_12509,axiom,
    s__documentation(s__Classroom,s__EnglishLanguage,'Any Room in a &%School where education takes place.') ).

fof(kb_SUMO_12510,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Classroom)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__School)
            & s__part(V__R,V__S) ) ) ) ).

fof(kb_SUMO_12511,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Classroom)
       => s__hasPurpose(V__R,'(? [V__E] : (s__instance(V__E,s__Process) & s__instance(V__E,s__EducationalProcess) & s__eventLocated(V__E,V__R)))') ) ) ).

fof(kb_SUMO_12512,axiom,
    s__subclass(s__Porch,s__StationaryArtifact) ).

fof(kb_SUMO_12513,axiom,
    s__instance(s__Porch__t,s__SetOrClass) ).

fof(kb_SUMO_12514,axiom,
    s__documentation(s__Porch,s__EnglishLanguage,'A &%StationaryArtifact which is &%connected to a &%Building and which provides some shelter in entering or leaving the &%Building or in sitting outside.') ).

fof(kb_SUMO_12515,axiom,
    ! [V__PORCH] :
      ( s__instance(V__PORCH,s__Object)
     => ( s__instance(V__PORCH,s__Porch)
       => ? [V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__BUILDING,s__Building)
            & s__connected(V__PORCH,V__BUILDING) ) ) ) ).

fof(kb_SUMO_12516,axiom,
    s__subclass(s__Sidewalk,s__StationaryArtifact) ).

fof(kb_SUMO_12517,axiom,
    s__instance(s__Sidewalk__t,s__SetOrClass) ).

fof(kb_SUMO_12518,axiom,
    s__documentation(s__Sidewalk,s__EnglishLanguage,'A prepared path for pedestrians alongside a &%Roadway.') ).

fof(kb_SUMO_12519,axiom,
    ! [V__SIDE] :
      ( s__instance(V__SIDE,s__Object)
     => ( s__instance(V__SIDE,s__Sidewalk)
       => s__hasPurpose(V__SIDE,'(? [V__WALK] : (s__instance(V__WALK,s__Motion) & s__instance(V__WALK,s__Walking) & s__path(V__WALK,V__SIDE)))') ) ) ).

fof(kb_SUMO_12520,axiom,
    ! [V__SIDE] :
      ( s__instance(V__SIDE,s__Object)
     => ( s__instance(V__SIDE,s__Sidewalk)
       => ? [V__ROAD] :
            ( s__instance(V__ROAD,s__Object)
            & s__instance(V__ROAD,s__Roadway)
            & s__orientation(V__SIDE,V__ROAD,s__Near) ) ) ) ).

fof(kb_SUMO_12521,axiom,
    s__subclass(s__Fence,s__StationaryArtifact) ).

fof(kb_SUMO_12522,axiom,
    s__instance(s__Fence__t,s__SetOrClass) ).

fof(kb_SUMO_12523,axiom,
    s__documentation(s__Fence,s__EnglishLanguage,'A &%StationaryArtifact that serves to demarcate or to prevent access to or from the area that the &%Fence surrounds.') ).

fof(kb_SUMO_12524,axiom,
    s__subclass(s__SportsGround,s__StationaryArtifact) ).

fof(kb_SUMO_12525,axiom,
    s__instance(s__SportsGround__t,s__SetOrClass) ).

fof(kb_SUMO_12526,axiom,
    s__documentation(s__SportsGround,s__EnglishLanguage,'A specially designated and maintained area where &%Sports are played.') ).

fof(kb_SUMO_12527,axiom,
    ! [V__GROUND] :
      ( s__instance(V__GROUND,s__Object)
     => ( s__instance(V__GROUND,s__SportsGround)
       => s__hasPurpose(V__GROUND,'(? [V__SPORT] : (s__instance(V__SPORT,s__Process) & s__instance(V__SPORT,s__Sport) & s__eventLocated(V__SPORT,V__GROUND)))') ) ) ).

fof(kb_SUMO_12528,axiom,
    s__subclass(s__IndustrialPlant,s__StationaryArtifact) ).

fof(kb_SUMO_12529,axiom,
    s__instance(s__IndustrialPlant__t,s__SetOrClass) ).

fof(kb_SUMO_12530,axiom,
    s__documentation(s__IndustrialPlant,s__EnglishLanguage,'A &%Building or part of a &%Building or group of &%Buildings whose purpose is to &%Manufacture something.') ).

fof(kb_SUMO_12531,axiom,
    ! [V__PLANT] :
      ( s__instance(V__PLANT,s__Object)
     => ( s__instance(V__PLANT,s__IndustrialPlant)
       => ( s__instance(V__PLANT,s__Building)
          | ? [V__BUILDING] :
              ( s__instance(V__BUILDING,s__Physical)
              & s__instance(V__BUILDING,s__Building)
              & s__located(V__BUILDING,V__PLANT) ) ) ) ) ).

fof(kb_SUMO_12532,axiom,
    ! [V__PLANT] :
      ( s__instance(V__PLANT,s__Object)
     => ( s__instance(V__PLANT,s__IndustrialPlant)
       => s__hasPurpose(V__PLANT,'(? [V__MANUFACTURE] : (s__instance(V__MANUFACTURE,s__Process) & s__instance(V__MANUFACTURE,s__Manufacture) & s__eventLocated(V__MANUFACTURE,V__PLANT)))') ) ) ).

fof(kb_SUMO_12533,axiom,
    s__subclass(s__Laboratory,s__StationaryArtifact) ).

fof(kb_SUMO_12534,axiom,
    s__instance(s__Laboratory__t,s__SetOrClass) ).

fof(kb_SUMO_12535,axiom,
    s__documentation(s__Laboratory,s__EnglishLanguage,'A &%Building, &%Room or suite of &%Rooms where scientific research, i.e. &%Experimenting, is conducted.') ).

fof(kb_SUMO_12536,axiom,
    ! [V__LAB] :
      ( s__instance(V__LAB,s__Object)
     => ( s__instance(V__LAB,s__Laboratory)
       => ? [V__EXPERIMENT] :
            ( s__instance(V__EXPERIMENT,s__Process)
            & s__instance(V__EXPERIMENT,s__Experimenting)
            & s__eventLocated(V__EXPERIMENT,V__LAB) ) ) ) ).

fof(kb_SUMO_12537,axiom,
    s__documentation(s__experimentalControl__m,s__EnglishLanguage,'(experimentalControl ?EXPERIMENT ?OBJ) means that the Object ?OBJ serves as a control in the instance of &%Experimenting ?EXPERIMENT, i.e. ?OBJ is the standard against which something else in the experiment can be compared.') ).

fof(kb_SUMO_12538,axiom,
    s__instance(s__experimentalControl__m,s__CaseRole) ).

fof(kb_SUMO_12539,axiom,
    s__domain(s__experimentalControl__m,"1",s__Experimenting) ).

fof(kb_SUMO_12540,axiom,
    s__domain(s__experimentalControl__m,"2",s__Object) ).

fof(kb_SUMO_12541,axiom,
    s__subrelation(s__experimentalControl__m,s__patient__m) ).

fof(kb_SUMO_12542,axiom,
    s__subclass(s__MilitaryInstallation,s__StationaryArtifact) ).

fof(kb_SUMO_12543,axiom,
    s__subclass(s__MilitaryInstallation,s__MilitaryArtifact) ).

fof(kb_SUMO_12544,axiom,
    s__documentation(s__MilitaryInstallation,s__EnglishLanguage,'A &%StationaryArtifact consisting of grounds and &%Buildings that is intended to be used by a &%MilitaryOrganization.') ).

fof(kb_SUMO_12545,axiom,
    s__subclass(s__Farm,s__StationaryArtifact) ).

fof(kb_SUMO_12546,axiom,
    s__instance(s__Farm__t,s__SetOrClass) ).

fof(kb_SUMO_12547,axiom,
    s__documentation(s__Farm,s__EnglishLanguage,'A &%StationaryArtifact consisting of a cultivated &%LandArea and &%Buildings for maintaining the land and/or the &%Animals on the land.') ).

fof(kb_SUMO_12548,axiom,
    s__subclass(s__Barn,s__Building) ).

fof(kb_SUMO_12549,axiom,
    s__instance(s__Barn__t,s__SetOrClass) ).

fof(kb_SUMO_12550,axiom,
    s__disjoint(s__Barn,s__ResidentialBuilding) ).

fof(kb_SUMO_12551,axiom,
    s__documentation(s__Barn,s__EnglishLanguage,'A &%Building on a &%Farm that is used for keeping &%DomesticAnimals, &%Fodder or harvested crops.') ).

fof(kb_SUMO_12552,axiom,
    ! [V__BARN] :
      ( s__instance(V__BARN,s__Physical)
     => ( s__instance(V__BARN,s__Barn)
       => ? [V__FARM] :
            ( s__instance(V__FARM,s__Object)
            & s__instance(V__FARM,s__Farm)
            & s__located(V__BARN,V__FARM) ) ) ) ).

fof(kb_SUMO_12553,axiom,
    s__subclass(s__PerformanceStage,s__StationaryArtifact) ).

fof(kb_SUMO_12554,axiom,
    s__instance(s__PerformanceStage__t,s__SetOrClass) ).

fof(kb_SUMO_12555,axiom,
    s__documentation(s__PerformanceStage,s__EnglishLanguage,'A large platform for theatrical plays, lectures, dances, music recitals, etc, which can be observed by an audience.') ).

fof(kb_SUMO_12556,axiom,
    ! [V__STAGE] :
      ( s__instance(V__STAGE,s__Object)
     => ( s__instance(V__STAGE,s__PerformanceStage)
       => s__hasPurpose(V__STAGE,'(? [V__PERF] : (s__instance(V__PERF,s__Process) & s__instance(V__PERF,s__Demonstrating) & s__eventLocated(V__PERF,V__STAGE)))') ) ) ).

fof(kb_SUMO_12557,axiom,
    ! [V__STAGE] :
      ( s__instance(V__STAGE,s__Object)
     => ( s__instance(V__STAGE,s__PerformanceStage)
       => ? [V__AUDITORIUM] :
            ( s__instance(V__AUDITORIUM,s__Object)
            & s__instance(V__AUDITORIUM,s__Auditorium)
            & s__part(V__STAGE,V__AUDITORIUM) ) ) ) ).

fof(kb_SUMO_12558,axiom,
    s__subclass(s__PerformanceStageWing,s__StationaryArtifact) ).

fof(kb_SUMO_12559,axiom,
    s__instance(s__PerformanceStageWing__t,s__SetOrClass) ).

fof(kb_SUMO_12560,axiom,
    s__documentation(s__PerformanceStageWing,s__EnglishLanguage,'A part of the &%PerformanceStage that is not visible to members of the audience.') ).

fof(kb_SUMO_12561,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__PerformanceStageWing)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__PerformanceStage)
            & s__part(V__W,V__S) ) ) ) ).

fof(kb_SUMO_12562,axiom,
    s__subclass(s__Magnetism,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_12563,axiom,
    s__instance(s__Magnetism__t,s__SetOrClass) ).

fof(kb_SUMO_12564,axiom,
    s__documentation(s__Magnetism,s__EnglishLanguage,'Any instance of &%RadiatingElectromagnetic which involves the attraction of &%Iron.') ).

fof(kb_SUMO_12565,axiom,
    s__subclass(s__RadioEmission,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_12566,axiom,
    s__documentation(s__RadioEmission,s__EnglishLanguage,'Any instance of &%RadiatingElectromagnetic where the waves have a wavelength between 5 milimeters and 30,000 meters.') ).

fof(kb_SUMO_12567,axiom,
    s__subclass(s__Broadcasting,s__Disseminating) ).

fof(kb_SUMO_12568,axiom,
    s__subclass(s__Broadcasting,s__RadioEmission) ).

fof(kb_SUMO_12569,axiom,
    s__instance(s__Broadcasting__t,s__SetOrClass) ).

fof(kb_SUMO_12570,axiom,
    s__instance(s__RadioEmission__t,s__SetOrClass) ).

fof(kb_SUMO_12571,axiom,
    s__documentation(s__Broadcasting,s__EnglishLanguage,'&%Disseminating information by using a &%CommunicationDevice that radiates &%RadioEmissions.') ).

fof(kb_SUMO_12572,axiom,
    ! [V__BROADCAST] :
      ( s__instance(V__BROADCAST,s__Process)
     => ( s__instance(V__BROADCAST,s__Broadcasting)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__Object)
            & s__instance(V__DEVICE,s__CommunicationDevice)
            & s__instrument(V__BROADCAST,V__DEVICE) ) ) ) ).

fof(kb_SUMO_12573,axiom,
    s__subclass(s__RadioBroadcasting,s__Broadcasting) ).

fof(kb_SUMO_12574,axiom,
    s__instance(s__RadioBroadcasting__t,s__SetOrClass) ).

fof(kb_SUMO_12575,axiom,
    s__documentation(s__RadioBroadcasting,s__EnglishLanguage,'Any instance of &%Broadcasting which is intended to be received by a &%RadioReceiver.') ).

fof(kb_SUMO_12576,axiom,
    ! [V__RADIO] :
      ( s__instance(V__RADIO,s__Object)
     => ( s__instance(V__RADIO,s__RadioReceiver)
       => s__capability(s__RadioBroadcasting,s__patient__m,V__RADIO) ) ) ).

fof(kb_SUMO_12577,axiom,
    s__subclass(s__TelevisionBroadcasting,s__Broadcasting) ).

fof(kb_SUMO_12578,axiom,
    s__instance(s__TelevisionBroadcasting__t,s__SetOrClass) ).

fof(kb_SUMO_12579,axiom,
    s__documentation(s__TelevisionBroadcasting,s__EnglishLanguage,'Any instance of &%Broadcasting which is intended to be received by a &%Television.') ).

fof(kb_SUMO_12580,axiom,
    s__subclass(s__PeriodicalPublisher,s__Publisher) ).

fof(kb_SUMO_12581,axiom,
    s__instance(s__PeriodicalPublisher__t,s__SetOrClass) ).

fof(kb_SUMO_12582,axiom,
    s__documentation(s__PeriodicalPublisher,s__EnglishLanguage,'Any &%Publisher that publishes &%Periodicals, e.g. newspaper and magazine publishing houses.') ).

fof(kb_SUMO_12583,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Agent)
     => ( s__instance(V__C,s__PeriodicalPublisher)
       => ? [V__PUBLISH,V__PERIODICAL] :
            ( s__instance(V__PUBLISH,s__Process)
            & s__instance(V__PUBLISH,s__Publication)
            & s__agent(V__PUBLISH,V__C)
            & s__patient(V__PUBLISH,V__PERIODICAL)
            & s__instance(V__PERIODICAL,s__Periodical) ) ) ) ).

fof(kb_SUMO_12584,axiom,
    s__subclass(s__Antenna,s__CommunicationDevice) ).

fof(kb_SUMO_12585,axiom,
    s__instance(s__Antenna__t,s__SetOrClass) ).

fof(kb_SUMO_12586,axiom,
    s__instance(s__CommunicationDevice__t,s__SetOrClass) ).

fof(kb_SUMO_12587,axiom,
    s__documentation(s__Antenna,s__EnglishLanguage,'A &%CommunicationDevice which enables or improves the reception of &%RadioEmissions by another &%CommunicationDevice (the radio or television receiver).') ).

fof(kb_SUMO_12588,axiom,
    ! [V__ANTENNA] :
      ( s__instance(V__ANTENNA,s__Object)
     => ( s__instance(V__ANTENNA,s__Antenna)
       => s__capability(s__RadioEmission,s__instrument__m,V__ANTENNA) ) ) ).

fof(kb_SUMO_12589,axiom,
    s__subclass(s__Explosion,s__Radiating) ).

fof(kb_SUMO_12590,axiom,
    s__instance(s__Explosion__t,s__SetOrClass) ).

fof(kb_SUMO_12591,axiom,
    s__documentation(s__Explosion,s__EnglishLanguage,'Any sudden and massive release of energy that is the product of a chemical reaction.') ).

fof(kb_SUMO_12592,axiom,
    ! [V__EXPLOSION] :
      ( s__instance(V__EXPLOSION,s__Process)
     => ( s__instance(V__EXPLOSION,s__Explosion)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__ChemicalProcess)
            & s__causes(V__PROC,V__EXPLOSION) ) ) ) ).

fof(kb_SUMO_12593,axiom,
    ! [V__EXPLOSION] :
      ( s__instance(V__EXPLOSION,s__Object)
     => ( s__instance(V__EXPLOSION,s__Explosion)
       => s__capability(s__Damaging,s__instrument__m,V__EXPLOSION) ) ) ).

fof(kb_SUMO_12594,axiom,
    s__subclass(s__Performance,s__Demonstrating) ).

fof(kb_SUMO_12595,axiom,
    s__documentation(s__Performance,s__EnglishLanguage,'A &%Demonstrating which includes &%DramaticActing and/or &%MakingMusic and which is intended to entertain the audience.') ).

fof(kb_SUMO_12596,axiom,
    ! [V__PERFORMANCE] :
      ( s__instance(V__PERFORMANCE,s__Process)
     => ( s__instance(V__PERFORMANCE,s__Performance)
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Process)
            & s__subProcess(V__SUB,V__PERFORMANCE)
            & ( s__instance(V__SUB,s__DramaticActing)
              | s__instance(V__SUB,s__MakingMusic) ) ) ) ) ).

fof(kb_SUMO_12597,axiom,
    ! [V__PERFORMANCE] :
      ( s__instance(V__PERFORMANCE,s__Process)
     => ( s__instance(V__PERFORMANCE,s__Performance)
       => ? [V__STAGE] :
            ( s__instance(V__STAGE,s__Object)
            & s__instance(V__STAGE,s__PerformanceStage)
            & s__eventLocated(V__PERFORMANCE,V__STAGE) ) ) ) ).

fof(kb_SUMO_12598,axiom,
    s__subclass(s__PerformanceAct,s__Performance) ).

fof(kb_SUMO_12599,axiom,
    s__instance(s__PerformanceAct__t,s__SetOrClass) ).

fof(kb_SUMO_12600,axiom,
    s__instance(s__Performance__t,s__SetOrClass) ).

fof(kb_SUMO_12601,axiom,
    s__documentation(s__PerformanceAct,s__EnglishLanguage,'A discrete &%subProcess of a &%Performance, e.g. an act of a play, a movement of a performance of a symphony, etc.') ).

fof(kb_SUMO_12602,axiom,
    s__subclass(s__Lecture,s__Demonstrating) ).

fof(kb_SUMO_12603,axiom,
    s__instance(s__Lecture__t,s__SetOrClass) ).

fof(kb_SUMO_12604,axiom,
    s__subclass(s__Lecture,s__Speaking) ).

fof(kb_SUMO_12605,axiom,
    s__documentation(s__Lecture,s__EnglishLanguage,'Any instance of &%Speaking which is done before an assembled audience.') ).

fof(kb_SUMO_12606,axiom,
    s__subclass(s__Proclaiming,s__Lecture) ).

fof(kb_SUMO_12607,axiom,
    s__instance(s__Proclaiming__t,s__SetOrClass) ).

fof(kb_SUMO_12608,axiom,
    s__subclass(s__Proclaiming,s__Declaring) ).

fof(kb_SUMO_12609,axiom,
    s__documentation(s__Proclaiming,s__EnglishLanguage,'Any instance of &%Speaking before an assembled audience that effects an institutional change, e.g. a change in the laws of the government.') ).

fof(kb_SUMO_12610,axiom,
    s__subclass(s__Commenting,s__IntentionalProcess) ).

fof(kb_SUMO_12611,axiom,
    s__instance(s__Commenting__t,s__SetOrClass) ).

fof(kb_SUMO_12612,axiom,
    s__documentation(s__Commenting,s__EnglishLanguage,'Commenting is an &%IntentionalProcess where an &%Agent speaks about a &%Process it is &%Looking at.') ).

fof(kb_SUMO_12613,axiom,
    s__termFormat(s__EnglishLanguage,s__Commenting,'Commenting') ).

fof(kb_SUMO_12614,axiom,
    ! [V__PROCESS,V__COMMENTING] :
      ( s__instance(V__COMMENTING,s__Process)
     => ( ( s__instance(V__COMMENTING,s__Commenting)
          & s__instance(V__PROCESS,s__Process)
          & s__patient(V__COMMENTING,V__PROCESS) )
       => ? [V__AGENT,V__SPEAKING,V__LOOKING] :
            ( s__instance(V__LOOKING,s__Process)
            & s__instance(V__SPEAKING,s__Process)
            & s__instance(V__AGENT,s__Agent)
            & s__instance(V__SPEAKING,s__Speaking)
            & s__instance(V__LOOKING,s__Looking)
            & s__agent(V__SPEAKING,V__AGENT)
            & s__agent(V__LOOKING,V__AGENT)
            & s__patient(V__LOOKING,V__PROCESS)
            & s__refers(V__SPEAKING,V__PROCESS) ) ) ) ).

fof(kb_SUMO_12615,axiom,
    s__instance(s__commentator__m,s__BinaryPredicate) ).

fof(kb_SUMO_12616,axiom,
    s__domain(s__commentator__m,"1",s__Agent) ).

fof(kb_SUMO_12617,axiom,
    s__domain(s__commentator__m,"2",s__Process) ).

fof(kb_SUMO_12618,axiom,
    s__documentation(s__commentator__m,s__EnglishLanguage,'(commentator ?AGENT ?PROCESS) means that some &%Agent ?AGENT is &%Looking at some &%Process ?PROCESS and &%Speaking about it simultaneously.') ).

fof(kb_SUMO_12619,axiom,
    s__termFormat(s__EnglishLanguage,s__commentator__m,commentator) ).

fof(kb_SUMO_12620,axiom,
    ! [V__PROCESS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__commentator(V__AGENT,V__PROCESS)
       => ? [V__COMMENTING] :
            ( s__instance(V__COMMENTING,s__Process)
            & s__instance(V__COMMENTING,s__Commenting)
            & s__agent(V__COMMENTING,V__AGENT)
            & s__patient(V__COMMENTING,V__PROCESS) ) ) ) ).

fof(kb_SUMO_12621,axiom,
    s__subclass(s__Reciting,s__Speaking) ).

fof(kb_SUMO_12622,axiom,
    s__instance(s__Reciting__t,s__SetOrClass) ).

fof(kb_SUMO_12623,axiom,
    s__documentation(s__Reciting,s__EnglishLanguage,'Any instance of &%Speaking where what is uttered is contained within a &%Text.') ).

fof(kb_SUMO_12624,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__Reciting)
       => ? [V__P,V__T] :
            ( s__instance(V__T,s__ContentBearingPhysical)
            & s__instance(V__P,s__Proposition)
            & s__realization(V__R,V__P)
            & s__containsInformation(V__T,V__P)
            & s__instance(V__T,s__Text) ) ) ) ).

fof(kb_SUMO_12625,axiom,
    s__subclass(s__MusicalPerformance,s__Performance) ).

fof(kb_SUMO_12626,axiom,
    s__instance(s__MusicalPerformance__t,s__SetOrClass) ).

fof(kb_SUMO_12627,axiom,
    s__documentation(s__MusicalPerformance,s__EnglishLanguage,'A &%Performance that consists exclusively of &%MakingMusic, e.g. an orchestra playing a symphony to an assembled audience.') ).

fof(kb_SUMO_12628,axiom,
    ! [V__P,V__M] :
      ( ( s__instance(V__M,s__Process)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__P,s__MusicalPerformance)
          & s__subProcess(V__M,V__P) )
       => s__instance(V__M,s__MakingMusic) ) ) ).

fof(kb_SUMO_12629,axiom,
    s__subclass(s__Sermon,s__Lecture) ).

fof(kb_SUMO_12630,axiom,
    s__instance(s__Sermon__t,s__SetOrClass) ).

fof(kb_SUMO_12631,axiom,
    s__documentation(s__Sermon,s__EnglishLanguage,'A &%Lecture that is part of a &%ReligiousService.') ).

fof(kb_SUMO_12632,axiom,
    ! [V__SERMON] :
      ( s__instance(V__SERMON,s__Process)
     => ( s__instance(V__SERMON,s__Sermon)
       => ? [V__SERVICE] :
            ( s__instance(V__SERVICE,s__Process)
            & s__instance(V__SERVICE,s__ReligiousService)
            & s__subProcess(V__SERMON,V__SERVICE) ) ) ) ).

fof(kb_SUMO_12633,axiom,
    s__subclass(s__DramaticActing,s__Pretending) ).

fof(kb_SUMO_12634,axiom,
    s__instance(s__DramaticActing__t,s__SetOrClass) ).

fof(kb_SUMO_12635,axiom,
    s__documentation(s__DramaticActing,s__EnglishLanguage,'Playing a character in a &%Performance, &%MotionPicture, etc.') ).

fof(kb_SUMO_12636,axiom,
    s__subclass(s__DramaticPerformance,s__Performance) ).

fof(kb_SUMO_12637,axiom,
    s__instance(s__DramaticPerformance__t,s__SetOrClass) ).

fof(kb_SUMO_12638,axiom,
    s__documentation(s__DramaticPerformance,s__EnglishLanguage,'A &%Performance that consists exclusively of &%DramaticActing, e.g. a live performance of Death_of_a_Salesman in front of an audience.') ).

fof(kb_SUMO_12639,axiom,
    ! [V__P,V__A] :
      ( ( s__instance(V__A,s__Process)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__P,s__DramaticPerformance)
          & s__subProcess(V__A,V__P) )
       => s__instance(V__A,s__DramaticActing) ) ) ).

fof(kb_SUMO_12640,axiom,
    s__subclass(s__DramaticCast,s__GroupOfPeople) ).

fof(kb_SUMO_12641,axiom,
    s__instance(s__DramaticCast__t,s__SetOrClass) ).

fof(kb_SUMO_12642,axiom,
    s__documentation(s__DramaticCast,s__EnglishLanguage,'The &%GroupOfPeople who engage in &%DramaticActing as part of the realization of a single &%FictionalText.') ).

fof(kb_SUMO_12643,axiom,
    ! [V__CAST] :
      ( s__instance(V__CAST,s__DramaticCast)
     => ? [V__TEXT,V__PROP,V__PROC] :
          ( s__instance(V__TEXT,s__FictionalText)
          & s__containsInformation(V__TEXT,V__PROP)
          & s__realization(V__PROC,V__PROP)
          & ! [V__MEMBER] :
              ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
                & s__instance(V__MEMBER,s__Agent)
                & s__instance(V__CAST,s__Collection) )
             => ( s__member(V__MEMBER,V__CAST)
               => ? [V__SUB] :
                    ( s__instance(V__SUB,s__Process)
                    & s__instance(V__PROC,s__Process)
                    & s__instance(V__PROP,s__Proposition)
                    & s__instance(V__TEXT,s__ContentBearingPhysical)
                    & s__instance(V__SUB,s__DramaticActing)
                    & s__agent(V__SUB,V__MEMBER)
                    & s__subProcess(V__SUB,V__PROC) ) ) ) ) ) ).

fof(kb_SUMO_12644,axiom,
    s__subclass(s__SocialParty,s__Meeting) ).

fof(kb_SUMO_12645,axiom,
    s__instance(s__SocialParty__t,s__SetOrClass) ).

fof(kb_SUMO_12646,axiom,
    s__subclass(s__SocialParty,s__RecreationOrExercise) ).

fof(kb_SUMO_12647,axiom,
    s__documentation(s__SocialParty,s__EnglishLanguage,'Any &%Meeting where the intent is primarily to socialize and be entertained.') ).

fof(kb_SUMO_12648,axiom,
    s__subclass(s__FormalMeeting,s__Meeting) ).

fof(kb_SUMO_12649,axiom,
    s__disjoint(s__FormalMeeting,s__SocialParty) ).

fof(kb_SUMO_12650,axiom,
    s__documentation(s__FormalMeeting,s__EnglishLanguage,'Any &%Meeting which is the result of &%Planning and whose purpose is not socializing.') ).

fof(kb_SUMO_12651,axiom,
    ! [V__MEETING] :
      ( s__instance(V__MEETING,s__Physical)
     => ( s__instance(V__MEETING,s__FormalMeeting)
       => ? [V__PLANNING] :
            ( s__instance(V__PLANNING,s__Process)
            & s__instance(V__PLANNING,s__Planning)
            & s__result(V__PLANNING,V__MEETING)
            & s__earlier(s__WhenFn(V__PLANNING),s__WhenFn(V__MEETING)) ) ) ) ).

fof(kb_SUMO_12652,axiom,
    s__subclass(s__Funeral,s__Ceremony) ).

fof(kb_SUMO_12653,axiom,
    s__instance(s__Funeral__t,s__SetOrClass) ).

fof(kb_SUMO_12654,axiom,
    s__instance(s__Ceremony__t,s__SetOrClass) ).

fof(kb_SUMO_12655,axiom,
    s__subclass(s__Funeral,s__FormalMeeting) ).

fof(kb_SUMO_12656,axiom,
    s__documentation(s__Funeral,s__EnglishLanguage,'A &%FormalMeeting whose purpose is to commemorate the &%Death of someone.') ).

fof(kb_SUMO_12657,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Funeral)
     => ? [V__D] :
          ( s__instance(V__D,s__Death)
          & s__refers(V__F,V__D) ) ) ).

fof(kb_SUMO_12658,axiom,
    s__subclass(s__Interviewing,s__FormalMeeting) ).

fof(kb_SUMO_12659,axiom,
    s__instance(s__Interviewing__t,s__SetOrClass) ).

fof(kb_SUMO_12660,axiom,
    s__instance(s__FormalMeeting__t,s__SetOrClass) ).

fof(kb_SUMO_12661,axiom,
    s__documentation(s__Interviewing,s__EnglishLanguage,'A &%FormalMeeting whose purpose is to acquire information from the interviewee that can be used in a media report.') ).

fof(kb_SUMO_12662,axiom,
    s__subclass(s__Choreographing,s__Planning) ).

fof(kb_SUMO_12663,axiom,
    s__instance(s__Choreographing__t,s__SetOrClass) ).

fof(kb_SUMO_12664,axiom,
    s__documentation(s__Choreographing,s__EnglishLanguage,'&%Planning that results in a sequence of dance steps that are executed as part of a &%Performance.') ).

fof(kb_SUMO_12665,axiom,
    ! [V__P,V__D,V__G] :
      ( ( s__instance(V__G,s__Process)
        & s__instance(V__D,s__Process)
        & s__instance(V__P,s__Proposition) )
     => ( ( s__instance(V__G,s__Choreographing)
          & s__result(V__G,V__P)
          & s__realization(V__D,V__P) )
       => s__instance(V__D,s__Dancing) ) ) ).

fof(kb_SUMO_12666,axiom,
    s__subclass(s__Resolution,s__Deciding) ).

fof(kb_SUMO_12667,axiom,
    s__instance(s__Resolution__t,s__SetOrClass) ).

fof(kb_SUMO_12668,axiom,
    s__documentation(s__Resolution,s__EnglishLanguage,'Any instance of &%Deciding which is conducted at a &%FormalMeeting and where the &%agent is an &%Organization.') ).

fof(kb_SUMO_12669,axiom,
    ! [V__RESOLUTION] :
      ( s__instance(V__RESOLUTION,s__Process)
     => ( s__instance(V__RESOLUTION,s__Resolution)
       => ? [V__AGENT,V__MEETING] :
            ( s__instance(V__MEETING,s__Process)
            & s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__Organization)
            & s__agent(V__RESOLUTION,V__AGENT)
            & s__subProcess(V__RESOLUTION,V__MEETING)
            & s__instance(V__MEETING,s__FormalMeeting) ) ) ) ).

fof(kb_SUMO_12670,axiom,
    s__subclass(s__Smoking,s__RecreationOrExercise) ).

fof(kb_SUMO_12671,axiom,
    s__instance(s__Smoking__t,s__SetOrClass) ).

fof(kb_SUMO_12672,axiom,
    s__documentation(s__Smoking,s__EnglishLanguage,'Inhaling and exhaling &%Smoke produced by a &%CigarOrCigarette.') ).

fof(kb_SUMO_12673,axiom,
    ! [V__SMOKING] :
      ( s__instance(V__SMOKING,s__Process)
     => ( s__instance(V__SMOKING,s__Smoking)
       => ? [V__BURN,V__CIGAR,V__BREATHE,V__SMOKE] :
            ( s__instance(V__BREATHE,s__Process)
            & s__instance(V__CIGAR,s__Object)
            & s__instance(V__BURN,s__Process)
            & s__subProcess(V__BURN,V__SMOKING)
            & s__instance(V__BURN,s__Combustion)
            & s__resource(V__BURN,V__CIGAR)
            & s__instance(V__CIGAR,s__CigarOrCigarette)
            & s__result(V__BURN,V__SMOKE)
            & s__patient(V__BREATHE,V__SMOKE)
            & s__instance(V__BREATHE,s__Breathing)
            & s__subProcess(V__BREATHE,V__SMOKING) ) ) ) ).

fof(kb_SUMO_12674,axiom,
    s__subclass(s__Jury,s__GroupOfPeople) ).

fof(kb_SUMO_12675,axiom,
    s__instance(s__Jury__t,s__SetOrClass) ).

fof(kb_SUMO_12676,axiom,
    s__documentation(s__Jury,s__EnglishLanguage,'A &%GroupOfPeople who are given the duty of rendering a verdict with respect to a &%LegalAction.') ).

fof(kb_SUMO_12677,axiom,
    ! [V__JURY] :
      ( s__instance(V__JURY,s__CognitiveAgent)
     => ( s__instance(V__JURY,s__Jury)
       => s__holdsRight('(? [V__DECISION] : (s__instance(V__DECISION,s__Process) & s__instance(V__DECISION,s__LegalDecision) & s__agent(V__DECISION,V__JURY)))',V__JURY) ) ) ).

fof(kb_SUMO_12678,axiom,
    s__subclass(s__CriminalGang,s__GroupOfPeople) ).

fof(kb_SUMO_12679,axiom,
    s__instance(s__CriminalGang__t,s__SetOrClass) ).

fof(kb_SUMO_12680,axiom,
    s__documentation(s__CriminalGang,s__EnglishLanguage,'A &%GroupOfPeople which exists (partially or wholly) for the purpose of CriminalAction.') ).

fof(kb_SUMO_12681,axiom,
    ! [V__G] :
      ( s__instance(V__G,s__Agent)
     => ( s__instance(V__G,s__CriminalGang)
       => s__hasPurpose(V__G,'(? [V__A] : (s__instance(V__A,s__Process) & s__instance(V__A,s__CriminalAction) & s__agent(V__A,V__G)))') ) ) ).

fof(kb_SUMO_12682,axiom,
    s__subclass(s__LegalCharge,s__LegalAction) ).

fof(kb_SUMO_12683,axiom,
    s__instance(s__LegalCharge__t,s__SetOrClass) ).

fof(kb_SUMO_12684,axiom,
    s__documentation(s__LegalCharge,s__EnglishLanguage,'Any &%LegalAction of which a &%Government is the &%agent.') ).

fof(kb_SUMO_12685,axiom,
    ! [V__CHARGE] :
      ( s__instance(V__CHARGE,s__Process)
     => ( s__instance(V__CHARGE,s__LegalCharge)
       => ? [V__GOV] :
            ( s__instance(V__GOV,s__Agent)
            & s__instance(V__GOV,s__Government)
            & s__agent(V__CHARGE,V__GOV) ) ) ) ).

fof(kb_SUMO_12686,axiom,
    s__subclass(s__LegalAppeal,s__Requesting) ).

fof(kb_SUMO_12687,axiom,
    s__subclass(s__LegalAppeal,s__JudicialProcess) ).

fof(kb_SUMO_12688,axiom,
    s__instance(s__LegalAppeal__t,s__SetOrClass) ).

fof(kb_SUMO_12689,axiom,
    s__documentation(s__LegalAppeal,s__EnglishLanguage,'Asking that a higher court reconsider a &%LegalDecision of a lower court.') ).

fof(kb_SUMO_12690,axiom,
    s__subclass(s__Pleading,s__Stating) ).

fof(kb_SUMO_12691,axiom,
    s__instance(s__Pleading__t,s__SetOrClass) ).

fof(kb_SUMO_12692,axiom,
    s__documentation(s__Pleading,s__EnglishLanguage,'&%Stating in a court of law a claim about whether or not one is guilty of the crime of which one has been accused.') ).

fof(kb_SUMO_12693,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__Pleading)
       => ? [V__J] :
            ( s__instance(V__J,s__Process)
            & s__instance(V__J,s__JudicialProcess)
            & s__subProcess(V__P,V__J) ) ) ) ).

fof(kb_SUMO_12694,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Pleading)
     => ? [V__C] :
          ( s__instance(V__C,s__CriminalAction)
          & s__refers(V__P,V__C) ) ) ).

fof(kb_SUMO_12695,axiom,
    s__instance(s__describes__m,s__BinaryPredicate) ).

fof(kb_SUMO_12696,axiom,
    s__domain(s__describes__m,"1",s__Formula) ).

fof(kb_SUMO_12697,axiom,
    s__domain(s__describes__m,"2",s__Object) ).

fof(kb_SUMO_12698,axiom,
    s__documentation(s__describes__m,s__EnglishLanguage,'(describes ?FORMULA ?OBJECT) means that some &%Formula ?FORMULA, as said by some &%Agent, is a statement regarding some &%Object ?OBJECT') ).

fof(kb_SUMO_12699,axiom,
    s__termFormat(s__EnglishLanguage,s__describes__m,describes) ).

fof(kb_SUMO_12700,axiom,
    ! [V__OBJECT,V__FORMULA] :
      ( ( s__instance(V__FORMULA,s__Formula)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__describes(V__FORMULA,V__OBJECT)
       => ? [V__STATING,V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__STATING,s__Process)
            & s__instance(V__STATING,s__Stating)
            & s__agent(V__STATING,V__AGENT)
            & s__patient(V__STATING,V__FORMULA)
            & s__refers(V__STATING,V__OBJECT) ) ) ) ).

fof(kb_SUMO_12701,axiom,
    s__subclass(s__Testifying,s__Stating) ).

fof(kb_SUMO_12702,axiom,
    s__instance(s__Testifying__t,s__SetOrClass) ).

fof(kb_SUMO_12703,axiom,
    s__documentation(s__Testifying,s__EnglishLanguage,'Giving testimony as part of a &%JudicialProcess.') ).

fof(kb_SUMO_12704,axiom,
    ! [V__TESTIFY] :
      ( s__instance(V__TESTIFY,s__Process)
     => ( s__instance(V__TESTIFY,s__Testifying)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__JudicialProcess)
            & s__subProcess(V__TESTIFY,V__PROC) ) ) ) ).

fof(kb_SUMO_12705,axiom,
    s__subclass(s__CourtRoom,s__Room) ).

fof(kb_SUMO_12706,axiom,
    s__instance(s__CourtRoom__t,s__SetOrClass) ).

fof(kb_SUMO_12707,axiom,
    s__documentation(s__CourtRoom,s__EnglishLanguage,'Any &%Room whose purpose is to realize &%JudicialProcesses.') ).

fof(kb_SUMO_12708,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__JudicialProcess)
       => ? [V__ROOM] :
            ( s__instance(V__ROOM,s__Object)
            & s__instance(V__ROOM,s__CourtRoom)
            & s__eventLocated(V__PROCESS,V__ROOM) ) ) ) ).

fof(kb_SUMO_12709,axiom,
    s__subclass(s__LegalOpinion,s__Argument) ).

fof(kb_SUMO_12710,axiom,
    s__instance(s__LegalOpinion__t,s__SetOrClass) ).

fof(kb_SUMO_12711,axiom,
    s__documentation(s__LegalOpinion,s__EnglishLanguage,'An &%Argument that explains the reasoning behind a &%LegalDecision.') ).

fof(kb_SUMO_12712,axiom,
    ! [V__OPINION] :
      ( s__instance(V__OPINION,s__Proposition)
     => ( s__instance(V__OPINION,s__LegalOpinion)
       => ? [V__DECISION,V__TEXT,V__PROPOSITION] :
            ( s__instance(V__PROPOSITION,s__Argument)
            & s__instance(V__TEXT,s__ContentBearingPhysical)
            & s__instance(V__DECISION,s__Process)
            & s__instance(V__DECISION,s__LegalDecision)
            & s__result(V__DECISION,V__TEXT)
            & s__containsInformation(V__TEXT,V__PROPOSITION)
            & s__conclusion(V__PROPOSITION,V__OPINION) ) ) ) ).

fof(kb_SUMO_12713,axiom,
    s__subclass(s__LegalAward,s__LegalDecision) ).

fof(kb_SUMO_12714,axiom,
    s__instance(s__LegalAward__t,s__SetOrClass) ).

fof(kb_SUMO_12715,axiom,
    s__documentation(s__LegalAward,s__EnglishLanguage,'Any &%LegalDecision which gives to the plaintiff of the corresponding &%LegalAction some amount of monetary compensation.') ).

fof(kb_SUMO_12716,axiom,
    ! [V__ACTION,V__PLAINTIFF,V__AWARD] :
      ( ( s__instance(V__PLAINTIFF,s__CognitiveAgent)
        & s__instance(V__ACTION,s__Process) )
     => ( ( s__instance(V__AWARD,s__LegalAward)
          & s__refers(V__AWARD,V__ACTION)
          & s__instance(V__ACTION,s__LegalAction)
          & s__agent(V__ACTION,V__PLAINTIFF) )
       => s__confersRight('(? [V__GET,V__OBJ,V__VALUE] : (s__instance(V__VALUE,s__CurrencyMeasure) & s__instance(V__OBJ,s__Physical) & s__instance(V__GET,s__Process) & s__instance(V__GET,s__Getting) & s__experiencer(V__GET,V__PLAINTIFF) & s__patient(V__GET,V__OBJ) & s__monetaryValue(V__OBJ,V__VALUE)))',V__AWARD,V__PLAINTIFF) ) ) ).

fof(kb_SUMO_12717,axiom,
    s__subclass(s__LegalConviction,s__LegalDecision) ).

fof(kb_SUMO_12718,axiom,
    s__instance(s__LegalConviction__t,s__SetOrClass) ).

fof(kb_SUMO_12719,axiom,
    s__documentation(s__LegalConviction,s__EnglishLanguage,'Any &%LegalDecision where the defendant is found guilty of the crime for which the corresponding trial was held.') ).

fof(kb_SUMO_12720,axiom,
    s__subclass(s__LegalDismissal,s__LegalDecision) ).

fof(kb_SUMO_12721,axiom,
    s__instance(s__LegalDismissal__t,s__SetOrClass) ).

fof(kb_SUMO_12722,axiom,
    s__documentation(s__LegalDismissal,s__EnglishLanguage,'Any &%LegalDecision where the &%LegalAction of the plaintiff is dismissed by the court, e.g. for lack of merit.') ).

fof(kb_SUMO_12723,axiom,
    s__subclass(s__LegalSummons,s__Ordering) ).

fof(kb_SUMO_12724,axiom,
    s__subclass(s__LegalSummons,s__JudicialProcess) ).

fof(kb_SUMO_12725,axiom,
    s__instance(s__LegalSummons__t,s__SetOrClass) ).

fof(kb_SUMO_12726,axiom,
    s__documentation(s__LegalSummons,s__EnglishLanguage,'An official order that a person appear at a &%CourtRoom at a specified time.') ).

%FOL fof(kb_SUMO_12727,axiom,(( (! [V__O,V__P,V__S] : ((s__instance(V__S,s__Process) & s__instance(V__P,s__Physical) & s__instance(V__O,s__ContentBearingPhysical)) => ((s__instance(V__S,s__LegalSummons) & s__patient(V__S,V__O) & s__destination(V__S,V__P)) => (? [V__C,V__T] : (s__instance(V__T,s__TimePosition) & s__instance(V__C,s__Object) & s__instance(V__C,s__CourtRoom) & s__containsInformation(V__O,'s__modalAttribute(s__holdsDuring(V__T,s__located(V__P,V__C)),s__Law)')))))) ))).

fof(kb_SUMO_12728,axiom,
    s__subclass(s__LegalAquittal,s__LegalDecision) ).

fof(kb_SUMO_12729,axiom,
    s__instance(s__LegalAquittal__t,s__SetOrClass) ).

fof(kb_SUMO_12730,axiom,
    s__documentation(s__LegalAquittal,s__EnglishLanguage,'Any &%LegalDecision where the defendant is found not to be guilty of the crime for which the corresponding trial was held.') ).

fof(kb_SUMO_12731,axiom,
    s__subclass(s__Sentencing,s__LegalDecision) ).

fof(kb_SUMO_12732,axiom,
    s__instance(s__Sentencing__t,s__SetOrClass) ).

fof(kb_SUMO_12733,axiom,
    s__documentation(s__Sentencing,s__EnglishLanguage,'Any &%LegalDecision where the defendant is assigned a punishment for a &%CriminalAction which was the subject of an earlier &%LegalConviction.') ).

fof(kb_SUMO_12734,axiom,
    ! [V__P,V__S] :
      ( s__instance(V__S,s__Process)
     => ( ( s__instance(V__S,s__Sentencing)
          & s__patient(V__S,V__P) )
       => ? [V__C] :
            ( s__instance(V__C,s__Process)
            & s__causes(V__C,V__S)
            & s__instance(V__C,s__LegalConviction)
            & s__patient(V__C,V__P)
            & s__earlier(s__WhenFn(V__C),s__WhenFn(V__S)) ) ) ) ).

fof(kb_SUMO_12735,axiom,
    s__documentation(s__defendant__m,s__EnglishLanguage,'(defendant ?AGENT ?ACTION) means the &%LegalAction ?ACTION makes a legal claim against ?AGENT.') ).

fof(kb_SUMO_12736,axiom,
    s__domain(s__defendant__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_12737,axiom,
    s__domain(s__defendant__m,"2",s__LegalAction) ).

fof(kb_SUMO_12738,axiom,
    s__subrelation(s__defendant__m,s__patient__m) ).

fof(kb_SUMO_12739,axiom,
    s__documentation(s__plaintiff__m,s__EnglishLanguage,'(plaintiff ?ACTION ?AGENT) means that ?AGENT is responsible for initiating the &%LegalAction ?ACTION.') ).

fof(kb_SUMO_12740,axiom,
    s__domain(s__plaintiff__m,"1",s__LegalAction) ).

fof(kb_SUMO_12741,axiom,
    s__domain(s__plaintiff__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_12742,axiom,
    s__subrelation(s__plaintiff__m,s__agent__m) ).

fof(kb_SUMO_12743,axiom,
    s__subclass(s__GameCall,s__Deciding) ).

fof(kb_SUMO_12744,axiom,
    s__instance(s__GameCall__t,s__SetOrClass) ).

fof(kb_SUMO_12745,axiom,
    s__subclass(s__GameCall,s__Declaring) ).

fof(kb_SUMO_12746,axiom,
    s__documentation(s__GameCall,s__EnglishLanguage,'A decision issued by an official referee in a &%Game. Note that &%GameCall is a subclass of &%Declaring, because these decisions have binding, normative force.') ).

fof(kb_SUMO_12747,axiom,
    ! [V__CALL] :
      ( s__instance(V__CALL,s__GameCall)
     => ? [V__GAME] :
          ( s__instance(V__GAME,s__Game)
          & s__refers(V__CALL,V__GAME) ) ) ).

fof(kb_SUMO_12748,axiom,
    s__subclass(s__BeginningOperations,s__OrganizationalProcess) ).

fof(kb_SUMO_12749,axiom,
    s__instance(s__BeginningOperations__t,s__SetOrClass) ).

fof(kb_SUMO_12750,axiom,
    s__disjoint(s__BeginningOperations,s__CeasingOperations) ).

fof(kb_SUMO_12751,axiom,
    s__documentation(s__BeginningOperations,s__EnglishLanguage,'The process of an &%Organization commencing operations. In the case of a &%Corporation, this would be the process of going into business.') ).

fof(kb_SUMO_12752,axiom,
    ! [V__OP,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__OP,s__Process)
        & s__instance(V__OP,s__TimeInterval) )
     => ( ( s__instance(V__OP,s__BeginningOperations)
          & s__instance(V__ORG,s__Organization)
          & s__agent(V__OP,V__ORG) )
       => s__starts(V__OP,s__WhenFn(V__ORG)) ) ) ).

fof(kb_SUMO_12753,axiom,
    s__subclass(s__OrganizationalMerging,s__OrganizationalProcess) ).

fof(kb_SUMO_12754,axiom,
    s__instance(s__OrganizationalMerging__t,s__SetOrClass) ).

fof(kb_SUMO_12755,axiom,
    s__documentation(s__OrganizationalMerging,s__EnglishLanguage,'The process of two or more &%Organizations merging into a single &%Organization.') ).

fof(kb_SUMO_12756,axiom,
    ! [V__ORG1,V__ORG2,V__M] :
      ( ( s__instance(V__M,s__Process)
        & s__instance(V__ORG2,s__Organization)
        & s__instance(V__ORG1,s__Organization) )
     => ( ( s__instance(V__M,s__OrganizationalMerging)
          & s__patient(V__M,V__ORG1)
          & s__patient(V__M,V__ORG2)
          & V__ORG1 != V__ORG2 )
       => ( s__holdsDuring(s__BeginFn(s__WhenFn(V__M)),'(~ (? [V__S1] : (s__instance(V__S1,s__Organization) & s__subOrganization(V__ORG1,V__S1) & s__subOrganization(V__ORG2,V__S1))))')
          & s__holdsDuring(s__EndFn(s__WhenFn(V__M)),'(? [V__S2] : (s__instance(V__S2,s__Organization) & s__subOrganization(V__ORG1,V__S2) & s__subOrganization(V__ORG2,V__S2)))') ) ) ) ).

fof(kb_SUMO_12757,axiom,
    s__subclass(s__CeasingOperations,s__OrganizationalProcess) ).

fof(kb_SUMO_12758,axiom,
    s__instance(s__CeasingOperations__t,s__SetOrClass) ).

fof(kb_SUMO_12759,axiom,
    s__documentation(s__CeasingOperations,s__EnglishLanguage,'The process of an &%Organization ceasing operations, i.e. its folding or going out of business in some other fashion.') ).

fof(kb_SUMO_12760,axiom,
    ! [V__OP,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__OP,s__Process)
        & s__instance(V__OP,s__TimeInterval) )
     => ( ( s__instance(V__OP,s__CeasingOperations)
          & s__instance(V__ORG,s__Organization)
          & s__agent(V__OP,V__ORG) )
       => s__finishes(V__OP,s__WhenFn(V__ORG)) ) ) ).

fof(kb_SUMO_12761,axiom,
    s__subclass(s__BecomingDrunk,s__PsychologicalProcess) ).

fof(kb_SUMO_12762,axiom,
    s__instance(s__BecomingDrunk__t,s__SetOrClass) ).

fof(kb_SUMO_12763,axiom,
    s__disjoint(s__BecomingDrunk,s__SoberingUp) ).

fof(kb_SUMO_12764,axiom,
    s__documentation(s__BecomingDrunk,s__EnglishLanguage,'The process of transitioning from a state of being &%Sober to a state of being &%Drunk.') ).

%FOL fof(kb_SUMO_12765,axiom,(( (! [V__B,V__A] : ((s__instance(V__A,s__Agent) & s__instance(V__B,s__Process)) => ((s__instance(V__B,s__BecomingDrunk) & s__experiencer(V__B,V__A)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__B)),'s__attribute(V__A,s__Sober)') & s__holdsDuring(s__EndFn(s__WhenFn(V__B)),'s__attribute(V__A,s__Drunk)'))))) ))).

fof(kb_SUMO_12766,axiom,
    s__instance(s__Sober,s__ConsciousnessAttribute) ).

fof(kb_SUMO_12767,axiom,
    s__documentation(s__Sober,s__EnglishLanguage,'The &%ConsciousnessAttribute of someone whose motor and cognitive faculties are not significantly impaired by a &%BiologicallyActiveSubstance.') ).

fof(kb_SUMO_12768,axiom,
    s__subclass(s__SoberingUp,s__PsychologicalProcess) ).

fof(kb_SUMO_12769,axiom,
    s__instance(s__SoberingUp__t,s__SetOrClass) ).

fof(kb_SUMO_12770,axiom,
    s__documentation(s__SoberingUp,s__EnglishLanguage,'The process of transitioning from a state of being &%Drunk to a state of being &%Sober.') ).

%FOL fof(kb_SUMO_12771,axiom,(( (! [V__B,V__A] : ((s__instance(V__A,s__Agent) & s__instance(V__B,s__Process)) => ((s__instance(V__B,s__SoberingUp) & s__experiencer(V__B,V__A)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__B)),'s__attribute(V__A,s__Drunk)') & s__holdsDuring(s__EndFn(s__WhenFn(V__B)),'s__attribute(V__A,s__Sober)'))))) ))).

fof(kb_SUMO_12772,axiom,
    s__subclass(s__FallingAsleep,s__PsychologicalProcess) ).

fof(kb_SUMO_12773,axiom,
    s__instance(s__FallingAsleep__t,s__SetOrClass) ).

fof(kb_SUMO_12774,axiom,
    s__disjoint(s__FallingAsleep,s__WakingUp) ).

fof(kb_SUMO_12775,axiom,
    s__documentation(s__FallingAsleep,s__EnglishLanguage,'The process of transitioning from a state of being &%Awake to a state of being &%Asleep.') ).

%FOL fof(kb_SUMO_12776,axiom,(( (! [V__FALL,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__FALL,s__Process)) => ((s__instance(V__FALL,s__FallingAsleep) & s__experiencer(V__FALL,V__AGENT)) => (? [V__START,V__FINISH] : (s__instance(V__FINISH,s__TimeInterval) & s__instance(V__START,s__TimeInterval) & s__starts(V__START,s__WhenFn(V__FALL)) & s__finishes(V__FINISH,s__WhenFn(V__FALL)) & s__holdsDuring(V__START,'s__attribute(V__AGENT,s__Awake)') & s__holdsDuring(V__FINISH,'s__attribute(V__AGENT,s__Asleep)')))))) ))).

fof(kb_SUMO_12777,axiom,
    s__subclass(s__WakingUp,s__PsychologicalProcess) ).

fof(kb_SUMO_12778,axiom,
    s__instance(s__WakingUp__t,s__SetOrClass) ).

fof(kb_SUMO_12779,axiom,
    s__documentation(s__WakingUp,s__EnglishLanguage,'The process of transitioning from a state of being &%Asleep to a state of being &%Awake.') ).

%FOL fof(kb_SUMO_12780,axiom,(( (! [V__WAKE,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__WAKE,s__Process)) => ((s__instance(V__WAKE,s__WakingUp) & s__experiencer(V__WAKE,V__AGENT)) => (? [V__START,V__FINISH] : (s__instance(V__FINISH,s__TimeInterval) & s__instance(V__START,s__TimeInterval) & s__starts(V__START,s__WhenFn(V__WAKE)) & s__finishes(V__FINISH,s__WhenFn(V__WAKE)) & s__holdsDuring(V__START,'s__attribute(V__AGENT,s__Asleep)') & s__holdsDuring(V__FINISH,'s__attribute(V__AGENT,s__Awake)')))))) ))).

fof(kb_SUMO_12781,axiom,
    s__subclass(s__GainingConsciousness,s__PsychologicalProcess) ).

fof(kb_SUMO_12782,axiom,
    s__instance(s__GainingConsciousness__t,s__SetOrClass) ).

fof(kb_SUMO_12783,axiom,
    s__documentation(s__GainingConsciousness,s__EnglishLanguage,'The process of transitioning from a state of being &%Unconscious to a state of being &%Awake.') ).

%FOL fof(kb_SUMO_12784,axiom,(( (! [V__A,V__G] : ((s__instance(V__G,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__G,s__GainingConsciousness) & s__experiencer(V__G,V__A)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__G)),'s__attribute(V__A,s__Unconscious)') & s__holdsDuring(s__EndFn(s__WhenFn(V__G)),'s__attribute(V__A,s__Awake)'))))) ))).

fof(kb_SUMO_12785,axiom,
    s__subclass(s__LosingConsciousness,s__PsychologicalProcess) ).

fof(kb_SUMO_12786,axiom,
    s__instance(s__LosingConsciousness__t,s__SetOrClass) ).

fof(kb_SUMO_12787,axiom,
    s__disjoint(s__LosingConsciousness,s__GainingConsciousness) ).

fof(kb_SUMO_12788,axiom,
    s__documentation(s__LosingConsciousness,s__EnglishLanguage,'The process of transitioning from a state of being &%Awake to a state of being &%Unconscious.') ).

%FOL fof(kb_SUMO_12789,axiom,(( (! [V__A,V__L] : ((s__instance(V__L,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__L,s__LosingConsciousness) & s__experiencer(V__L,V__A)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__L)),'s__attribute(V__A,s__Awake)') & s__holdsDuring(s__EndFn(s__WhenFn(V__L)),'s__attribute(V__A,s__Unconscious)'))))) ))).

fof(kb_SUMO_12790,axiom,
    s__instance(s__issuedBy__m,s__BinaryPredicate) ).

fof(kb_SUMO_12791,axiom,
    s__domain(s__issuedBy__m,"1",s__Certificate) ).

fof(kb_SUMO_12792,axiom,
    s__domain(s__issuedBy__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_12793,axiom,
    s__documentation(s__issuedBy__m,s__EnglishLanguage,'(&%issuedBy ?Certificate ?Agent) means that a &%Certificate ?Certificate is produced and offered by ?Agent.') ).

fof(kb_SUMO_12794,axiom,
    ! [V__CERT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__CERT,s__Certificate) )
     => ( s__issuedBy(V__CERT,V__AGENT)
       => ? [V__P] :
            ( s__instance(V__P,s__Process)
            & s__instance(V__P,s__IntentionalProcess)
            & s__agent(V__P,V__AGENT)
            & s__result(V__P,V__CERT) ) ) ) ).

fof(kb_SUMO_12795,axiom,
    s__subclass(s__AcademicDegree,s__Certificate) ).

fof(kb_SUMO_12796,axiom,
    s__instance(s__AcademicDegree__t,s__SetOrClass) ).

fof(kb_SUMO_12797,axiom,
    s__documentation(s__AcademicDegree,s__EnglishLanguage,'A &%Certificate that demonstrates that the holder of the &%Certificate has successfully completed an &%EducationalProgram.') ).

fof(kb_SUMO_12798,axiom,
    ! [V__DEGREE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__DEGREE,s__Object) )
     => ( ( s__instance(V__DEGREE,s__AcademicDegree)
          & s__possesses(V__AGENT,V__DEGREE) )
       => ? [V__PROGRAM,V__STUDY] :
            ( s__instance(V__STUDY,s__Process)
            & s__instance(V__PROGRAM,s__Proposition)
            & s__instance(V__PROGRAM,s__EducationalProgram)
            & s__realization(V__STUDY,V__PROGRAM)
            & s__experiencer(V__STUDY,V__AGENT) ) ) ) ).

fof(kb_SUMO_12799,axiom,
    s__subclass(s__License,s__Certificate) ).

fof(kb_SUMO_12800,axiom,
    s__documentation(s__License,s__EnglishLanguage,'License is the subclass of &%Certificates that are granted by a &%GovernmentOrganization and that authorize the performance of a kind of action, e.g., driving, exporting, travelling to another country, etc.') ).

fof(kb_SUMO_12801,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Certificate)
     => ( s__instance(V__L,s__License)
       => ? [V__ORG] :
            ( s__instance(V__ORG,s__CognitiveAgent)
            & s__instance(V__ORG,s__GovernmentOrganization)
            & s__issuedBy(V__L,V__ORG) ) ) ) ).

fof(kb_SUMO_12802,axiom,
    s__subclass(s__Ticket,s__Certificate) ).

fof(kb_SUMO_12803,axiom,
    s__instance(s__Ticket__t,s__SetOrClass) ).

fof(kb_SUMO_12804,axiom,
    s__documentation(s__Ticket,s__EnglishLanguage,'A &%Certificate that allows the holder to perform a specified act once, e.g. ride a bus, attend a concert, obtain a prize, etc.') ).

fof(kb_SUMO_12805,axiom,
    ! [V__TICKET,V__CUST,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__CUST,s__Agent)
        & s__instance(V__TICKET,s__Certificate) )
     => ( ( s__issuedBy(V__TICKET,V__AGENT)
          & s__instance(V__TICKET,s__Ticket)
          & s__possesses(V__CUST,V__TICKET) )
       => s__confersNorm(V__AGENT,'(? [V__T] : s__holdsDuring(V__T,(? [V__P] : (s__instance(V__T,s__TimePosition) & s__instance(V__P,s__Process) & s__agent(V__P,V__AGENT) & s__experiencer(V__P,V__CUST)))))',s__Permission) ) ) ).

fof(kb_SUMO_12806,axiom,
    s__subclass(s__Passport,s__License) ).

fof(kb_SUMO_12807,axiom,
    s__instance(s__Passport__t,s__SetOrClass) ).

fof(kb_SUMO_12808,axiom,
    s__instance(s__License__t,s__SetOrClass) ).

fof(kb_SUMO_12809,axiom,
    s__documentation(s__Passport,s__EnglishLanguage,'A &%License which identifies the holder and permits travel between different countries.') ).

fof(kb_SUMO_12810,axiom,
    ! [V__P,V__A] :
      ( ( s__instance(V__A,s__Agent)
        & s__instance(V__P,s__Object) )
     => ( ( s__instance(V__P,s__Passport)
          & s__possesses(V__A,V__P) )
       => s__confersNorm(V__P,'(? [V__T,V__N1,V__N2] : (s__instance(V__N1,s__Object) & s__instance(V__T,s__Process) & s__instance(V__T,s__Translocation) & s__agent(V__T,V__A) & s__origin(V__T,V__N1) & s__destination(V__T,V__N2) & s__instance(V__N1,s__Nation) & s__instance(V__N2,s__Nation) & (~ (V__N1 = V__N2))))',s__Permission) ) ) ).

fof(kb_SUMO_12811,axiom,
    s__subclass(s__PassCertificate,s__Certificate) ).

fof(kb_SUMO_12812,axiom,
    s__instance(s__PassCertificate__t,s__SetOrClass) ).

fof(kb_SUMO_12813,axiom,
    s__documentation(s__PassCertificate,s__EnglishLanguage,'A &%Certificate that allows the holder to be at or away from a specified location, e.g. a pass for a leave of absence, a hall pass, a pass to enter a cleared facility, etc.') ).

%FOL fof(kb_SUMO_12814,axiom,(( (! [V__P,V__A] : ((s__instance(V__A,s__Agent) & s__instance(V__P,s__Object)) => ((s__instance(V__P,s__PassCertificate) & s__possesses(V__A,V__P)) => (? [V__L] : (s__instance(V__L,s__Object) & s__confersNorm(V__P,'s__located(V__A,V__L)',s__Permission)))))) ))).

fof(kb_SUMO_12815,axiom,
    s__subclass(s__Testament,s__Certificate) ).

fof(kb_SUMO_12816,axiom,
    s__instance(s__Testament__t,s__SetOrClass) ).

fof(kb_SUMO_12817,axiom,
    s__documentation(s__Testament,s__EnglishLanguage,'A &%Certificate that describes how a persons property is to be distributed after the death of the person.') ).

fof(kb_SUMO_12818,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Testament)
     => ? [V__B] :
          ( s__instance(V__B,s__Bequeathing)
          & s__refers(V__T,V__B) ) ) ).

fof(kb_SUMO_12819,axiom,
    s__documentation(s__registeredItem__m,s__EnglishLanguage,'(registeredItem ?DOCUMENT ?ITEM) means that the &%Text ?DOCUMENT contains an official record of the &%Physical thing ?ITEM. The registered item could be an object or an event, e.g., an automobile, a ship, a marriage, an adoption.') ).

fof(kb_SUMO_12820,axiom,
    s__instance(s__registeredItem__m,s__BinaryPredicate) ).

fof(kb_SUMO_12821,axiom,
    s__domain(s__registeredItem__m,"1",s__Text) ).

fof(kb_SUMO_12822,axiom,
    s__domain(s__registeredItem__m,"2",s__Physical) ).

fof(kb_SUMO_12823,axiom,
    s__subrelation(s__registeredItem__m,s__refers__m) ).

fof(kb_SUMO_12824,axiom,
    s__subclass(s__EducationalProgram,s__Plan) ).

fof(kb_SUMO_12825,axiom,
    s__instance(s__EducationalProgram__t,s__SetOrClass) ).

fof(kb_SUMO_12826,axiom,
    s__documentation(s__EducationalProgram,s__EnglishLanguage,'A series of &%EducationalCourses that must be completed to receive an &%AcademicDegree or other &%Certificate. Note that an &%EducationalProgram, unlike an &%EducationalCourse, may be realized at more than one &%EducationalOrganization.') ).

fof(kb_SUMO_12827,axiom,
    ! [V__PROGRAM] :
      ( s__instance(V__PROGRAM,s__Plan)
     => ( s__instance(V__PROGRAM,s__EducationalProgram)
       => ? [V__COURSE1,V__COURSE2] :
            ( s__instance(V__COURSE2,s__Plan)
            & s__instance(V__COURSE1,s__Plan)
            & s__instance(V__COURSE1,s__EducationalCourse)
            & s__instance(V__COURSE2,s__EducationalCourse)
            & V__COURSE1 != V__COURSE2
            & s__subPlan(V__COURSE1,V__PROGRAM)
            & s__subPlan(V__COURSE2,V__PROGRAM) ) ) ) ).

fof(kb_SUMO_12828,axiom,
    s__subclass(s__EducationalCourse,s__EducationalProgram) ).

fof(kb_SUMO_12829,axiom,
    s__instance(s__EducationalCourse__t,s__SetOrClass) ).

fof(kb_SUMO_12830,axiom,
    s__documentation(s__EducationalCourse,s__EnglishLanguage,'A schedule of class meetings offered by an &%EducationalOrganization.') ).

fof(kb_SUMO_12831,axiom,
    ! [V__COURSE] :
      ( s__instance(V__COURSE,s__Proposition)
     => ( s__instance(V__COURSE,s__EducationalCourse)
       => ? [V__CLASS,V__ORG] :
            ( s__instance(V__ORG,s__Object)
            & s__instance(V__CLASS,s__Process)
            & s__realization(V__CLASS,V__COURSE)
            & s__instance(V__CLASS,s__EducationalProcess)
            & s__eventLocated(V__CLASS,V__ORG)
            & s__instance(V__ORG,s__EducationalOrganization) ) ) ) ).

fof(kb_SUMO_12832,axiom,
    s__subclass(s__SportsPlay,s__Plan) ).

fof(kb_SUMO_12833,axiom,
    s__instance(s__SportsPlay__t,s__SetOrClass) ).

fof(kb_SUMO_12834,axiom,
    s__documentation(s__SportsPlay,s__EnglishLanguage,'A &%Plan for a &%Maneuver within a &%TeamSport.') ).

fof(kb_SUMO_12835,axiom,
    ! [V__P,V__SP] :
      ( ( s__instance(V__SP,s__Proposition)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__SP,s__SportsPlay)
          & s__realization(V__P,V__SP) )
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__TeamSport)
            & s__instance(V__P,s__Maneuver)
            & s__subProcess(V__P,V__S) ) ) ) ).

fof(kb_SUMO_12836,axiom,
    s__subclass(s__School,s__EducationalOrganization) ).

fof(kb_SUMO_12837,axiom,
    s__instance(s__School__t,s__SetOrClass) ).

fof(kb_SUMO_12838,axiom,
    s__documentation(s__School,s__EnglishLanguage,'An &%EducationalOrganization with a curriculum, teachers, and students. Most &%Schools are housed in a &%Building dedicated to the &%EducationalOrganization.') ).

fof(kb_SUMO_12839,axiom,
    s__subclass(s__PublicSchool,s__School) ).

fof(kb_SUMO_12840,axiom,
    s__instance(s__PublicSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12841,axiom,
    s__subclass(s__PublicSchool,s__GovernmentOrganization) ).

fof(kb_SUMO_12842,axiom,
    s__documentation(s__PublicSchool,s__EnglishLanguage,'A &%School which is financed primarily by taxes.') ).

fof(kb_SUMO_12843,axiom,
    s__subclass(s__PrivateSchool,s__School) ).

fof(kb_SUMO_12844,axiom,
    s__instance(s__PrivateSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12845,axiom,
    s__disjoint(s__PrivateSchool,s__GovernmentOrganization) ).

fof(kb_SUMO_12846,axiom,
    s__documentation(s__PrivateSchool,s__EnglishLanguage,'A &%School which is not publicly owned.') ).

fof(kb_SUMO_12847,axiom,
    s__subclass(s__HighSchool,s__School) ).

fof(kb_SUMO_12848,axiom,
    s__instance(s__HighSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12849,axiom,
    s__documentation(s__HighSchool,s__EnglishLanguage,'A &%School which admits &%students who have graduated from a middle school and which normally covers the ninth through twelfth grades. A &%HighSchool confers a high school diploma.') ).

fof(kb_SUMO_12850,axiom,
    ! [V__STUDENT,V__ENTER,V__COLLEGE] :
      ( ( s__instance(V__COLLEGE,s__Agent)
        & s__instance(V__ENTER,s__Process) )
     => ( ( s__instance(V__ENTER,s__Matriculation)
          & s__agent(V__ENTER,V__COLLEGE)
          & s__patient(V__ENTER,V__STUDENT)
          & s__instance(V__COLLEGE,s__College) )
       => ? [V__GRAD,V__SCHOOL] :
            ( s__instance(V__SCHOOL,s__Agent)
            & s__instance(V__GRAD,s__Process)
            & s__instance(V__GRAD,s__Graduation)
            & s__agent(V__GRAD,V__SCHOOL)
            & s__patient(V__GRAD,V__STUDENT)
            & s__instance(V__SCHOOL,s__HighSchool)
            & s__earlier(s__WhenFn(V__GRAD),s__WhenFn(V__ENTER)) ) ) ) ).

fof(kb_SUMO_12851,axiom,
    s__subclass(s__SecondarySchool,s__School) ).

fof(kb_SUMO_12852,axiom,
    s__instance(s__SecondarySchool__t,s__SetOrClass) ).

fof(kb_SUMO_12853,axiom,
    s__documentation(s__SecondarySchool,s__EnglishLanguage,'A &%School which admits students who have graduated from a middle school and which normally covers the ninth through twelfth grades. A &%SecondarySchool confers a high school diploma.') ).

fof(kb_SUMO_12854,axiom,
    ! [V__P,V__C,V__E] :
      ( ( s__instance(V__E,s__Process)
        & s__instance(V__C,s__Agent) )
     => ( ( s__instance(V__E,s__Matriculation)
          & s__agent(V__E,V__C)
          & s__patient(V__E,V__P)
          & s__instance(V__C,s__College) )
       => ? [V__G,V__S] :
            ( s__instance(V__S,s__Agent)
            & s__instance(V__G,s__Process)
            & s__instance(V__G,s__Graduation)
            & s__agent(V__G,V__S)
            & s__patient(V__G,V__P)
            & s__instance(V__S,s__SecondarySchool)
            & s__earlier(s__WhenFn(V__G),s__WhenFn(V__E)) ) ) ) ).

fof(kb_SUMO_12855,axiom,
    s__subclass(s__VocationalSchool,s__School) ).

fof(kb_SUMO_12856,axiom,
    s__instance(s__VocationalSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12857,axiom,
    s__documentation(s__VocationalSchool,s__EnglishLanguage,'Any &%School whose aim is to teach students an &%OccupationalTrade.') ).

fof(kb_SUMO_12858,axiom,
    ! [V__VS] :
      ( s__instance(V__VS,s__EducationalOrganization)
     => ( s__instance(V__VS,s__VocationalSchool)
       => s__hasPurpose(V__VS,'(? [V__P,V__S,V__T] : (s__instance(V__T,s__Attribute) & s__instance(V__S,s__CognitiveAgent) & s__instance(V__P,s__Process) & s__instance(V__P,s__EducationalProcess) & s__eventLocated(V__P,V__VS) & s__student(V__S,V__VS) & s__experiencer(V__P,V__S) & s__instance(V__T,s__OccupationalTrade) & s__holdsDuring(s__EndFn(s__WhenFn(V__P)),s__attribute(V__S,V__T))))') ) ) ).

fof(kb_SUMO_12859,axiom,
    s__subclass(s__PostSecondarySchool,s__School) ).

fof(kb_SUMO_12860,axiom,
    s__instance(s__PostSecondarySchool__t,s__SetOrClass) ).

fof(kb_SUMO_12861,axiom,
    s__partition_4(s__PostSecondarySchool,s__JuniorCollege,s__College,s__University) ).

fof(kb_SUMO_12862,axiom,
    s__documentation(s__PostSecondarySchool,s__EnglishLanguage,'The class of &%Schools that offer an associates degree or a bachelors degree.') ).

fof(kb_SUMO_12863,axiom,
    s__subclass(s__JuniorCollege,s__PostSecondarySchool) ).

fof(kb_SUMO_12864,axiom,
    s__instance(s__JuniorCollege__t,s__SetOrClass) ).

fof(kb_SUMO_12865,axiom,
    s__documentation(s__JuniorCollege,s__EnglishLanguage,'The class of &%PostSecondarySchools that offer an associates degree and do not offer a bachelors degree.') ).

fof(kb_SUMO_12866,axiom,
    s__subclass(s__College,s__PostSecondarySchool) ).

fof(kb_SUMO_12867,axiom,
    s__instance(s__College__t,s__SetOrClass) ).

fof(kb_SUMO_12868,axiom,
    s__documentation(s__College,s__EnglishLanguage,'A &%School which admits &%students who have graduated from high school and which confers a bachelors degree, normally requiring four years of study. Note that a &%College does not confer any graduate degrees. For institutions that confer both bachelors and graduate degrees, the concept &%University should be used.') ).

fof(kb_SUMO_12869,axiom,
    s__subclass(s__University,s__PostSecondarySchool) ).

fof(kb_SUMO_12870,axiom,
    s__instance(s__University__t,s__SetOrClass) ).

fof(kb_SUMO_12871,axiom,
    s__documentation(s__University,s__EnglishLanguage,'A &%School which admits &%students that have graduated from high school (known as undergraduate students) and &%students who have received a bachelors degree (known as graduate students). A &%University confers both bachelors and graduate degrees.') ).

fof(kb_SUMO_12872,axiom,
    s__subclass(s__GraduateSchool,s__PostSecondarySchool) ).

fof(kb_SUMO_12873,axiom,
    s__instance(s__GraduateSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12874,axiom,
    s__documentation(s__GraduateSchool,s__EnglishLanguage,'A &%School which is devoted to a specific subject area, which admits students that have a bachelors degree, which grants masters and/or doctorate degrees, and which is part of a &%University.') ).

fof(kb_SUMO_12875,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__GraduateSchool)
       => ? [V__U] :
            ( s__instance(V__U,s__Object)
            & s__instance(V__U,s__University)
            & s__part(V__S,V__U) ) ) ) ).

fof(kb_SUMO_12876,axiom,
    s__subclass(s__MedicalSchool,s__GraduateSchool) ).

fof(kb_SUMO_12877,axiom,
    s__instance(s__MedicalSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12878,axiom,
    s__documentation(s__MedicalSchool,s__EnglishLanguage,'A &%GraduateSchool that is devoted to &%MedicalScience and that grants the degree of doctor of medicine.') ).

fof(kb_SUMO_12879,axiom,
    s__subclass(s__ArtSchool,s__School) ).

fof(kb_SUMO_12880,axiom,
    s__instance(s__ArtSchool__t,s__SetOrClass) ).

fof(kb_SUMO_12881,axiom,
    s__documentation(s__ArtSchool,s__EnglishLanguage,'Any &%School whose aim is to teach students how to create &%ArtWorks.') ).

fof(kb_SUMO_12882,axiom,
    ! [V__P,V__AS] :
      ( ( s__instance(V__AS,s__Object)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__AS,s__ArtSchool)
          & s__instance(V__P,s__EducationalProcess)
          & s__eventLocated(V__P,V__AS) )
       => ? [V__M,V__ART] :
            ( s__instance(V__M,s__Process)
            & s__instance(V__M,s__Making)
            & s__patient(V__M,V__ART)
            & s__instance(V__ART,s__ArtWork)
            & s__refers(V__P,V__M) ) ) ) ).

fof(kb_SUMO_12883,axiom,
    s__subclass(s__DaySchool,s__School) ).

fof(kb_SUMO_12884,axiom,
    s__instance(s__DaySchool__t,s__SetOrClass) ).

fof(kb_SUMO_12885,axiom,
    s__documentation(s__DaySchool,s__EnglishLanguage,'A &%School that does not board its students, i.e. students attend classes during the day and then return to a private residence for the night.') ).

fof(kb_SUMO_12886,axiom,
    ! [V__DS] :
      ( ( s__instance(V__DS,s__EducationalOrganization)
        & s__instance(V__DS,s__PermanentResidence) )
     => ( s__instance(V__DS,s__DaySchool)
       => ~ ? [V__S] :
              ( s__instance(V__S,s__Human)
              & s__student(V__S,V__DS)
              & s__home(V__S,V__DS) ) ) ) ).

fof(kb_SUMO_12887,axiom,
    s__subrelation(s__student__m,s__member__m) ).

fof(kb_SUMO_12888,axiom,
    s__domain(s__student__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_12889,axiom,
    s__domain(s__student__m,"2",s__EducationalOrganization) ).

fof(kb_SUMO_12890,axiom,
    s__documentation(s__student__m,s__EnglishLanguage,'(&%student ?AGENT ?ORG) means that ?AGENT is enrolled in the &%EducationalOrganization ?ORG.') ).

fof(kb_SUMO_12891,axiom,
    ! [V__ORG,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ORG,s__EducationalOrganization) )
     => ( s__student(V__AGENT,V__ORG)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__instance(V__PROCESS,s__EducationalProcess)
            & s__eventLocated(V__PROCESS,V__ORG)
            & s__destination(V__PROCESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_12892,axiom,
    s__subrelation(s__teacher__m,s__member__m) ).

fof(kb_SUMO_12893,axiom,
    s__domain(s__teacher__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_12894,axiom,
    s__domain(s__teacher__m,"2",s__EducationalOrganization) ).

fof(kb_SUMO_12895,axiom,
    s__documentation(s__teacher__m,s__EnglishLanguage,'(&%teacher ?AGENT ?ORG) means that ?AGENT is a teacher at the &%EducationalOrganization ?ORG.') ).

fof(kb_SUMO_12896,axiom,
    ! [V__ORG,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ORG,s__EducationalOrganization) )
     => ( s__teacher(V__AGENT,V__ORG)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__instance(V__PROCESS,s__EducationalProcess)
            & s__eventLocated(V__PROCESS,V__ORG)
            & s__agent(V__PROCESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_12897,axiom,
    s__subclass(s__DriversLicense,s__License) ).

fof(kb_SUMO_12898,axiom,
    s__instance(s__DriversLicense__t,s__SetOrClass) ).

fof(kb_SUMO_12899,axiom,
    s__documentation(s__DriversLicense,s__EnglishLanguage,'A &%License which identifies the holder and indicates that he has the right to drive a certain class of &%RoadVehicle.') ).

fof(kb_SUMO_12900,axiom,
    ! [V__A,V__L] :
      ( ( s__instance(V__L,s__Object)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__L,s__DriversLicense)
          & s__possesses(V__A,V__L) )
       => s__confersNorm(V__L,'(? [V__D,V__V] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Driving) & s__agent(V__D,V__A) & s__patient(V__D,V__V) & s__instance(V__V,s__RoadVehicle)))',s__Permission) ) ) ).

fof(kb_SUMO_12901,axiom,
    s__subclass(s__InsurancePolicy,s__Certificate) ).

fof(kb_SUMO_12902,axiom,
    s__instance(s__InsurancePolicy__t,s__SetOrClass) ).

fof(kb_SUMO_12903,axiom,
    s__documentation(s__InsurancePolicy,s__EnglishLanguage,'A &%Certificate that states the terms of an insurance contract.') ).

fof(kb_SUMO_12904,axiom,
    s__subclass(s__EconomicRelation,s__BinaryRelation) ).

fof(kb_SUMO_12905,axiom,
    s__instance(s__EconomicRelation__t,s__SetOrClass) ).

fof(kb_SUMO_12906,axiom,
    s__documentation(s__EconomicRelation,s__EnglishLanguage,'A class of &%Relations which are used to specify various economic measures, e.g. the GDP, the consumer price index, and the trade deficit.') ).

fof(kb_SUMO_12907,axiom,
    ! [V__CLASS,V__REL] :
      ( ( s__instance(V__REL,s__Relation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__REL,s__EconomicRelation)
          & s__domain(V__REL,"1",V__CLASS) )
       => s__subclass(V__CLASS,s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_12908,axiom,
    s__subclass(s__LaborStriking,s__OrganizationalProcess) ).

fof(kb_SUMO_12909,axiom,
    s__instance(s__LaborStriking__t,s__SetOrClass) ).

fof(kb_SUMO_12910,axiom,
    s__documentation(s__LaborStriking,s__EnglishLanguage,'A &%Process in which some or all of the employees of an &%Organization refuse to work until their pay is increased or their working conditions are improved in some respect.') ).

fof(kb_SUMO_12911,axiom,
    ! [V__STRIKE,V__PERSON,V__ORG] :
      ( ( s__instance(V__PERSON,s__CognitiveAgent)
        & s__instance(V__STRIKE,s__Process) )
     => ( ( s__instance(V__STRIKE,s__LaborStriking)
          & s__agent(V__STRIKE,V__PERSON)
          & s__instance(V__PERSON,s__Human)
          & s__patient(V__STRIKE,V__ORG)
          & s__instance(V__ORG,s__Organization) )
       => s__employs(V__ORG,V__PERSON) ) ) ).

fof(kb_SUMO_12912,axiom,
    s__subclass(s__EmploymentFiring,s__TerminatingEmployment) ).

fof(kb_SUMO_12913,axiom,
    s__instance(s__EmploymentFiring__t,s__SetOrClass) ).

fof(kb_SUMO_12914,axiom,
    s__documentation(s__EmploymentFiring,s__EnglishLanguage,'Involuntarily ending ones employment. Note that this covers termination due to inadequate performance, as well as layoffs.') ).

fof(kb_SUMO_12915,axiom,
    s__subclass(s__Resigning,s__TerminatingEmployment) ).

fof(kb_SUMO_12916,axiom,
    s__instance(s__Resigning__t,s__SetOrClass) ).

fof(kb_SUMO_12917,axiom,
    s__documentation(s__Resigning,s__EnglishLanguage,'Voluntarily ending ones employment.') ).

fof(kb_SUMO_12918,axiom,
    ! [V__A,V__R] :
      ( ( s__instance(V__R,s__Process)
        & s__instance(V__A,s__CognitiveAgent) )
     => ( ( s__instance(V__R,s__Resigning)
          & s__agent(V__R,V__A) )
       => s__wants(V__A,V__R) ) ) ).

fof(kb_SUMO_12919,axiom,
    s__subclass(s__Retiring,s__Resigning) ).

fof(kb_SUMO_12920,axiom,
    s__instance(s__Retiring__t,s__SetOrClass) ).

fof(kb_SUMO_12921,axiom,
    s__documentation(s__Retiring,s__EnglishLanguage,'Voluntarily leaving employment at the end of ones career in order to take time off in the later years of ones life.') ).

fof(kb_SUMO_12922,axiom,
    s__subclass(s__TransferringPosition,s__OrganizationalProcess) ).

fof(kb_SUMO_12923,axiom,
    s__instance(s__TransferringPosition__t,s__SetOrClass) ).

fof(kb_SUMO_12924,axiom,
    s__documentation(s__TransferringPosition,s__EnglishLanguage,'Any process within an &%Organization where a person is moved from one &%Position to another, e.g. the promotion or demotion of an employee.') ).

%FOL fof(kb_SUMO_12925,axiom,(( (! [V__T,V__H] : ((s__instance(V__H,s__Human) & s__instance(V__T,s__Process)) => ((s__instance(V__T,s__TransferringPosition) & s__experiencer(V__T,V__H)) => (? [V__P1,V__P2,V__ORG] : (s__instance(V__ORG,s__Organization) & s__instance(V__P2,s__Position) & s__instance(V__P1,s__Position) & s__holdsDuring(s__BeginFn(s__WhenFn(V__T)),'s__occupiesPosition(V__H,V__P1,V__ORG)') & s__holdsDuring(s__EndFn(s__WhenFn(V__T)),'s__occupiesPosition(V__H,V__P2,V__ORG)') & (~ (V__P1 = V__P2))))))) ))).

fof(kb_SUMO_12926,axiom,
    s__instance(s__monetaryWage__m,s__QuaternaryPredicate) ).

fof(kb_SUMO_12927,axiom,
    s__domain(s__monetaryWage__m,"1",s__Organization) ).

fof(kb_SUMO_12928,axiom,
    s__domain(s__monetaryWage__m,"2",s__Human) ).

fof(kb_SUMO_12929,axiom,
    s__domain(s__monetaryWage__m,"3",s__TimeDuration) ).

fof(kb_SUMO_12930,axiom,
    s__domain(s__monetaryWage__m,"4",s__CurrencyMeasure) ).

fof(kb_SUMO_12931,axiom,
    s__documentation(s__monetaryWage__m,s__EnglishLanguage,'(&%monetaryWage ?ORG ?PERSON ?TIME ?MONEY) means that the &%Organization employs ?PERSON and pays him/her the amount of money ?MONEY per &%TimeDuration ?TIME.') ).

fof(kb_SUMO_12932,axiom,
    ! [V__TIME,V__PERSON,V__MONEY,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__MONEY,s__CurrencyMeasure)
        & s__instance(V__PERSON,s__Human)
        & s__instance(V__TIME,s__TimeDuration) )
     => ( s__monetaryWage(V__ORG,V__PERSON,V__TIME,V__MONEY)
       => s__employs(V__ORG,V__PERSON) ) ) ).

fof(kb_SUMO_12933,axiom,
    s__subclass(s__GameArtifact,s__Artifact) ).

fof(kb_SUMO_12934,axiom,
    s__instance(s__GameArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_12935,axiom,
    s__disjointDecomposition_3(s__GameArtifact,s__GameBoard,s__GamePiece) ).

fof(kb_SUMO_12936,axiom,
    s__documentation(s__GameArtifact,s__EnglishLanguage,'An &%Artifact that is designed to be used as an &%instrument in a &%Game.') ).

fof(kb_SUMO_12937,axiom,
    ! [V__ARTIFACT] :
      ( s__instance(V__ARTIFACT,s__Object)
     => ( s__instance(V__ARTIFACT,s__GameArtifact)
       => ? [V__GAME] :
            ( s__instance(V__GAME,s__SetOrClass)
            & s__subclass(V__GAME,s__Process)
            & s__subclass(V__GAME,s__Game)
            & s__capability(V__GAME,s__instrument__m,V__ARTIFACT) ) ) ) ).

fof(kb_SUMO_12938,axiom,
    s__subclass(s__GameBoard,s__GameArtifact) ).

fof(kb_SUMO_12939,axiom,
    s__instance(s__GameBoard__t,s__SetOrClass) ).

fof(kb_SUMO_12940,axiom,
    s__documentation(s__GameBoard,s__EnglishLanguage,'A &%GameArtifact which is intended to be used as the game area for playing a particular game.') ).

fof(kb_SUMO_12941,axiom,
    ! [V__BOARD] :
      ( s__instance(V__BOARD,s__Object)
     => ( s__instance(V__BOARD,s__GameBoard)
       => s__hasPurpose(V__BOARD,'(? [V__GAME] : (s__instance(V__GAME,s__Process) & s__instance(V__GAME,s__Game) & s__eventLocated(V__GAME,V__BOARD)))') ) ) ).

fof(kb_SUMO_12942,axiom,
    s__subclass(s__GamePiece,s__GameArtifact) ).

fof(kb_SUMO_12943,axiom,
    s__instance(s__GamePiece__t,s__SetOrClass) ).

fof(kb_SUMO_12944,axiom,
    s__documentation(s__GamePiece,s__EnglishLanguage,'A &%GameArtifact that is moved around in a game area.') ).

fof(kb_SUMO_12945,axiom,
    s__subclass(s__GameDie,s__GamePiece) ).

fof(kb_SUMO_12946,axiom,
    s__instance(s__GameDie__t,s__SetOrClass) ).

fof(kb_SUMO_12947,axiom,
    s__documentation(s__GameDie,s__EnglishLanguage,'A small cube with 1 to 6 dots on each face that is used to generate numbers at random in a &%Game.') ).

fof(kb_SUMO_12948,axiom,
    s__subclass(s__Ball,s__GamePiece) ).

fof(kb_SUMO_12949,axiom,
    s__documentation(s__Ball,s__EnglishLanguage,'Any &%GamePiece which has the shape of a sphere.') ).

fof(kb_SUMO_12950,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Ball)
       => s__attribute(V__B,s__Sphere) ) ) ).

fof(kb_SUMO_12951,axiom,
    s__subclass(s__ShotBall,s__Ball) ).

fof(kb_SUMO_12952,axiom,
    s__instance(s__ShotBall__t,s__SetOrClass) ).

fof(kb_SUMO_12953,axiom,
    s__instance(s__Ball__t,s__SetOrClass) ).

fof(kb_SUMO_12954,axiom,
    s__documentation(s__ShotBall,s__EnglishLanguage,'A solid metal &%Ball that is used in the sport of shotput.') ).

fof(kb_SUMO_12955,axiom,
    s__subclass(s__GameShot,s__Impelling) ).

fof(kb_SUMO_12956,axiom,
    s__subclass(s__GameShot,s__Maneuver) ).

fof(kb_SUMO_12957,axiom,
    s__documentation(s__GameShot,s__EnglishLanguage,'Impelling a &%GamePiece for the purpose of scoring a point or preventing the opposing player or team from scoring a point. Note that this class does not cover shots which are disallowed by the rules of the game.') ).

fof(kb_SUMO_12958,axiom,
    ! [V__SHOT] :
      ( s__instance(V__SHOT,s__Process)
     => ( s__instance(V__SHOT,s__GameShot)
       => ? [V__PIECE] :
            ( s__instance(V__PIECE,s__GamePiece)
            & s__patient(V__SHOT,V__PIECE) ) ) ) ).

fof(kb_SUMO_12959,axiom,
    ! [V__SHOT] :
      ( s__instance(V__SHOT,s__Process)
     => ( s__instance(V__SHOT,s__GameShot)
       => ? [V__GAME] :
            ( s__instance(V__GAME,s__Process)
            & s__instance(V__GAME,s__Game)
            & s__subProcess(V__SHOT,V__GAME) ) ) ) ).

%FOL fof(kb_SUMO_12960,axiom,(( (! [V__SHOT] : (s__instance(V__SHOT,s__Physical) => (s__instance(V__SHOT,s__GameShot) => s__hasPurpose(V__SHOT,'s__instance(V__SHOT,s__Score)')))) ))).

fof(kb_SUMO_12961,axiom,
    s__subclass(s__Score,s__GameShot) ).

fof(kb_SUMO_12962,axiom,
    s__instance(s__Score__t,s__SetOrClass) ).

fof(kb_SUMO_12963,axiom,
    s__documentation(s__Score,s__EnglishLanguage,'A successful attempt to score a point in a &%Game.') ).

fof(kb_SUMO_12964,axiom,
    s__subclass(s__GameGoal,s__GameArtifact) ).

fof(kb_SUMO_12965,axiom,
    s__instance(s__GameGoal__t,s__SetOrClass) ).

fof(kb_SUMO_12966,axiom,
    s__documentation(s__GameGoal,s__EnglishLanguage,'The location where a &%GameShot must end up if it is to constitute a &%Score.') ).

%FOL fof(kb_SUMO_12967,axiom,(( (! [V__SCORE,V__GAME,V__GOAL] : ((s__instance(V__GOAL,s__Object) & s__instance(V__GAME,s__Process) & s__instance(V__SCORE,s__Process)) => ((s__instance(V__GOAL,s__GameGoal) & s__instrument(V__GAME,V__GOAL) & s__instance(V__GAME,s__Game) & s__subProcess(V__SCORE,V__GAME) & s__instance(V__SCORE,s__Score)) => (? [V__PIECE,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PIECE,s__Physical) & s__instance(V__PIECE,s__GamePiece) & s__patient(V__SCORE,V__PIECE) & s__temporalPart(V__TIME,s__WhenFn(V__SCORE)) & s__holdsDuring(V__TIME,'s__located(V__PIECE,V__GOAL)')))))) ))).

fof(kb_SUMO_12968,axiom,
    s__subclass(s__SportServe,s__GameShot) ).

fof(kb_SUMO_12969,axiom,
    s__instance(s__SportServe__t,s__SetOrClass) ).

fof(kb_SUMO_12970,axiom,
    s__documentation(s__SportServe,s__EnglishLanguage,'A &%GameShot which is part of a &%Sport and which serves to start the &%Sport, e.g. the beginning shot in &%Tennis, &%Badminton or &%Squash.') ).

fof(kb_SUMO_12971,axiom,
    ! [V__SS] :
      ( s__instance(V__SS,s__Process)
     => ( s__instance(V__SS,s__SportServe)
       => ? [V__S] :
            ( s__instance(V__S,s__Process)
            & s__instance(V__S,s__Sport)
            & s__subProcess(V__SS,V__S)
            & s__starts(s__WhenFn(V__SS),s__WhenFn(V__S)) ) ) ) ).

fof(kb_SUMO_12972,axiom,
    s__subclass(s__Throwing,s__Impelling) ).

fof(kb_SUMO_12973,axiom,
    s__subclass(s__Throwing,s__BodyMotion) ).

fof(kb_SUMO_12974,axiom,
    s__documentation(s__Throwing,s__EnglishLanguage,'Any instance of &%Impelling where the &%instrument is an &%Arm.') ).

fof(kb_SUMO_12975,axiom,
    ! [V__THROW] :
      ( s__instance(V__THROW,s__Process)
     => ( s__instance(V__THROW,s__Throwing)
       => ? [V__ARM] :
            ( s__instance(V__ARM,s__Object)
            & s__instance(V__ARM,s__Arm)
            & s__instrument(V__THROW,V__ARM) ) ) ) ).

fof(kb_SUMO_12976,axiom,
    s__subclass(s__Pitching,s__Throwing) ).

fof(kb_SUMO_12977,axiom,
    s__instance(s__Pitching__t,s__SetOrClass) ).

fof(kb_SUMO_12978,axiom,
    s__instance(s__Throwing__t,s__SetOrClass) ).

fof(kb_SUMO_12979,axiom,
    s__subclass(s__Pitching,s__GameShot) ).

fof(kb_SUMO_12980,axiom,
    s__instance(s__GameShot__t,s__SetOrClass) ).

fof(kb_SUMO_12981,axiom,
    s__documentation(s__Pitching,s__EnglishLanguage,'&%Throwing a &%Ball to the batter in a game of &%Baseball or softball.') ).

fof(kb_SUMO_12982,axiom,
    ! [V__PITCH,V__BALL] :
      ( s__instance(V__PITCH,s__Process)
     => ( ( s__instance(V__PITCH,s__Pitching)
          & s__patient(V__PITCH,V__BALL) )
       => s__instance(V__BALL,s__Ball) ) ) ).

fof(kb_SUMO_12983,axiom,
    s__subclass(s__Catching,s__Touching) ).

fof(kb_SUMO_12984,axiom,
    s__subclass(s__Catching,s__Maneuver) ).

fof(kb_SUMO_12985,axiom,
    s__instance(s__Catching__t,s__SetOrClass) ).

fof(kb_SUMO_12986,axiom,
    s__documentation(s__Catching,s__EnglishLanguage,'Any &%Maneuver in a &%Game which results in a situation where the &%agent &%grasps the &%Ball.') ).

fof(kb_SUMO_12987,axiom,
    ! [V__CATCH,V__BALL] :
      ( s__instance(V__CATCH,s__Process)
     => ( ( s__instance(V__CATCH,s__Catching)
          & s__patient(V__CATCH,V__BALL) )
       => s__instance(V__CATCH,s__Ball) ) ) ).

%FOL fof(kb_SUMO_12988,axiom,(( (! [V__CATCH,V__BALL,V__AGENT] : ((s__instance(V__AGENT,s__Animal) & s__instance(V__BALL,s__Object) & s__instance(V__CATCH,s__Process)) => ((s__instance(V__CATCH,s__Catching) & s__agent(V__CATCH,V__AGENT) & s__patient(V__CATCH,V__BALL)) => s__holdsDuring(s__EndFn(s__WhenFn(V__CATCH)),'s__grasps(V__AGENT,V__BALL)')))) ))).

fof(kb_SUMO_12989,axiom,
    s__subclass(s__Sign,s__ContentBearingObject) ).

fof(kb_SUMO_12990,axiom,
    s__instance(s__Sign__t,s__SetOrClass) ).

fof(kb_SUMO_12991,axiom,
    s__subclass(s__Sign,s__DisplayArtifact) ).

fof(kb_SUMO_12992,axiom,
    s__instance(s__DisplayArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_12993,axiom,
    s__subclass(s__Sign,s__DataDisplayDevice) ).

fof(kb_SUMO_12994,axiom,
    s__instance(s__DataDisplayDevice__t,s__SetOrClass) ).

fof(kb_SUMO_12995,axiom,
    s__documentation(s__Sign,s__EnglishLanguage,'A Sign is a &%DisplayArtifact that displays any range of information') ).

fof(kb_SUMO_12996,axiom,
    s__termFormat(s__EnglishLanguage,s__Sign,'Sign') ).

fof(kb_SUMO_12997,axiom,
    s__subclass(s__PlayingCard,s__GameArtifact) ).

fof(kb_SUMO_12998,axiom,
    s__subclass(s__PlayingCard,s__ContentBearingObject) ).

fof(kb_SUMO_12999,axiom,
    s__instance(s__PlayingCard__t,s__SetOrClass) ).

fof(kb_SUMO_13000,axiom,
    s__documentation(s__PlayingCard,s__EnglishLanguage,'A small piece of stiff paper with markings which is intended to be used for playing card games.') ).

fof(kb_SUMO_13001,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__CorpuscularObject)
     => ( s__instance(V__C,s__PlayingCard)
       => s__material(s__Paper,V__C) ) ) ).

fof(kb_SUMO_13002,axiom,
    s__subclass(s__Stretching,s__Motion) ).

fof(kb_SUMO_13003,axiom,
    s__instance(s__Stretching__t,s__SetOrClass) ).

fof(kb_SUMO_13004,axiom,
    s__documentation(s__Stretching,s__EnglishLanguage,'Moving two sides of an object in opposite directions so that the object becomes both longer and thinner.') ).

fof(kb_SUMO_13005,axiom,
    s__subclass(s__Stretching,s__Lengthening) ).

fof(kb_SUMO_13006,axiom,
    s__subclass(s__Accelerating,s__Translocation) ).

fof(kb_SUMO_13007,axiom,
    s__subclass(s__Accelerating,s__Increasing) ).

fof(kb_SUMO_13008,axiom,
    s__instance(s__Accelerating__t,s__SetOrClass) ).

fof(kb_SUMO_13009,axiom,
    s__documentation(s__Accelerating,s__EnglishLanguage,'Increasing the speed with which someone or something is moving.') ).

%FOL fof(kb_SUMO_13010,axiom,(( (! [V__ACCELERATE,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__ACCELERATE,s__Process)) => ((s__instance(V__ACCELERATE,s__Accelerating) & s__agent(V__ACCELERATE,V__AGENT)) => (? [V__LENGTH1,V__LENGTH2,V__TIME1,V__TIME2] : (s__instance(V__TIME2,s__TimeDuration) & s__instance(V__TIME1,s__TimeDuration) & s__instance(V__LENGTH2,s__LengthMeasure) & s__instance(V__LENGTH1,s__LengthMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__ACCELERATE)),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH1,V__TIME1))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ACCELERATE)),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH2,V__TIME2))') & (greater(V__LENGTH2,V__LENGTH1) | greater(V__TIME2,V__TIME1))))))) ))).

fof(kb_SUMO_13011,axiom,
    s__subclass(s__Decelerating,s__Translocation) ).

fof(kb_SUMO_13012,axiom,
    s__subclass(s__Decelerating,s__Decreasing) ).

fof(kb_SUMO_13013,axiom,
    s__instance(s__Decelerating__t,s__SetOrClass) ).

fof(kb_SUMO_13014,axiom,
    s__documentation(s__Decelerating,s__EnglishLanguage,'Decreasing the speed with which someone or something is moving.') ).

%FOL fof(kb_SUMO_13015,axiom,(( (! [V__A,V__D] : ((s__instance(V__D,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__D,s__Decelerating) & s__agent(V__D,V__A)) => (? [V__L1,V__L2,V__T1,V__T2] : (s__instance(V__T2,s__TimeDuration) & s__instance(V__T1,s__TimeDuration) & s__instance(V__L2,s__LengthMeasure) & s__instance(V__L1,s__LengthMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__D)),'s__measure(V__A,s__SpeedFn(V__L1,V__T1))') & s__holdsDuring(s__EndFn(s__WhenFn(V__D)),'s__measure(V__A,s__SpeedFn(V__L2,V__T2))') & (greater(V__L1,V__L2) | greater(V__T1,V__T2))))))) ))).

fof(kb_SUMO_13016,axiom,
    ! [V__A,V__T,V__E] :
      ( ( s__instance(V__E,s__Agent)
        & s__instance(V__A,s__Process) )
     => ( ( s__instance(V__A,s__Accelerating)
          & V__T = s__WhenFn(V__A)
          & s__experiencer(V__A,V__E) )
       => ~ ? [V__D] :
              ( s__instance(V__D,s__Process)
              & s__instance(V__D,s__Decelerating)
              & s__experiencer(V__D,V__E)
              & V__T = s__WhenFn(V__D) ) ) ) ).

fof(kb_SUMO_13017,axiom,
    s__subclass(s__Shortening,s__Decreasing) ).

fof(kb_SUMO_13018,axiom,
    s__instance(s__Shortening__t,s__SetOrClass) ).

fof(kb_SUMO_13019,axiom,
    s__documentation(s__Shortening,s__EnglishLanguage,'Decreasing the length of something.') ).

%FOL fof(kb_SUMO_13020,axiom,(( (! [V__O,V__S] : ((s__instance(V__S,s__Process) & s__instance(V__O,s__Object)) => ((s__instance(V__S,s__Shortening) & s__patient(V__S,V__O)) => (? [V__L1,V__L2] : (s__instance(V__L2,s__LengthMeasure) & s__instance(V__L1,s__LengthMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__S)),'s__length(V__O,V__L1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__S)),'s__length(V__O,V__L2)') & greater(V__L1,V__L2)))))) ))).

fof(kb_SUMO_13021,axiom,
    s__subclass(s__Flying,s__Translocation) ).

fof(kb_SUMO_13022,axiom,
    s__instance(s__Flying__t,s__SetOrClass) ).

fof(kb_SUMO_13023,axiom,
    s__documentation(s__Flying,s__EnglishLanguage,'Any instance of &%Translocation which is through an &%AtmosphericRegion and which is powered by the wings of an &%Animal.') ).

fof(kb_SUMO_13024,axiom,
    ! [V__FLY] :
      ( s__instance(V__FLY,s__Process)
     => ( s__instance(V__FLY,s__Flying)
       => ? [V__REGION] :
            ( s__instance(V__REGION,s__Object)
            & s__instance(V__REGION,s__AtmosphericRegion)
            & s__eventLocated(V__FLY,V__REGION) ) ) ) ).

fof(kb_SUMO_13025,axiom,
    s__subclass(s__TakingOff,s__Translocation) ).

fof(kb_SUMO_13026,axiom,
    s__instance(s__TakingOff__t,s__SetOrClass) ).

fof(kb_SUMO_13027,axiom,
    s__documentation(s__TakingOff,s__EnglishLanguage,'Any instance of &%Translocation which starts on something other than an &%AtmosphericRegion and which has an instance of &%Flying as a &%subProcess.') ).

%FOL fof(kb_SUMO_13028,axiom,(( (! [V__OFF] : (s__instance(V__OFF,s__Process) => (s__instance(V__OFF,s__TakingOff) => (? [V__REGION,V__FLYING] : (s__instance(V__FLYING,s__Process) & s__instance(V__REGION,s__Object) & (~ s__instance(V__REGION,s__AtmosphericRegion)) & s__holdsDuring(s__BeginFn(s__WhenFn(V__OFF)),'s__eventLocated(V__OFF,V__REGION)') & s__subProcess(V__FLYING,V__OFF) & s__instance(V__FLYING,s__Flying)))))) ))).

fof(kb_SUMO_13029,axiom,
    s__subclass(s__Landing,s__Translocation) ).

fof(kb_SUMO_13030,axiom,
    s__instance(s__Landing__t,s__SetOrClass) ).

fof(kb_SUMO_13031,axiom,
    s__documentation(s__Landing,s__EnglishLanguage,'Any instance of &%Translocation which ends up on something other than an &%AtmosphericRegion and which has an instance of &%Flying as a &%subProcess.') ).

%FOL fof(kb_SUMO_13032,axiom,(( (! [V__LAND] : (s__instance(V__LAND,s__Process) => (s__instance(V__LAND,s__Landing) => (? [V__REGION,V__FLYING] : (s__instance(V__FLYING,s__Process) & s__instance(V__REGION,s__Object) & (~ s__instance(V__REGION,s__AtmosphericRegion)) & s__holdsDuring(s__EndFn(s__WhenFn(V__LAND)),'s__eventLocated(V__LAND,V__REGION)') & s__subProcess(V__FLYING,V__LAND) & s__instance(V__FLYING,s__Flying)))))) ))).

fof(kb_SUMO_13033,axiom,
    s__subclass(s__Returning,s__Translocation) ).

fof(kb_SUMO_13034,axiom,
    s__instance(s__Returning__t,s__SetOrClass) ).

fof(kb_SUMO_13035,axiom,
    s__documentation(s__Returning,s__EnglishLanguage,'Any instance of &%Translocation where the &%agent goes to a location where he/she had been before the &%Translocation took place.') ).

%FOL fof(kb_SUMO_13036,axiom,(( (! [V__AGENT,V__RETURN,V__DEST] : ((s__instance(V__DEST,s__Object) & s__instance(V__RETURN,s__Process) & s__instance(V__AGENT,s__Agent)) => ((s__instance(V__RETURN,s__Returning) & s__experiencer(V__RETURN,V__AGENT) & s__destination(V__RETURN,V__DEST)) => (? [V__TIME] : (s__instance(V__TIME,s__TimeInterval) & s__earlier(V__TIME,s__WhenFn(V__RETURN)) & s__holdsDuring(V__TIME,'s__located(V__AGENT,V__DEST)')))))) ))).

fof(kb_SUMO_13037,axiom,
    s__subclass(s__Escaping,s__Translocation) ).

fof(kb_SUMO_13038,axiom,
    s__instance(s__Escaping__t,s__SetOrClass) ).

fof(kb_SUMO_13039,axiom,
    s__documentation(s__Escaping,s__EnglishLanguage,'Any instance of &%Translocation where the &%agent brings it about that he/she is no longer confined without having the right to do so.') ).

fof(kb_SUMO_13040,axiom,
    ! [V__ESCAPE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__ESCAPE,s__Process) )
     => ( ( s__instance(V__ESCAPE,s__Escaping)
          & s__agent(V__ESCAPE,V__AGENT) )
       => ? [V__CONFINE] :
            ( s__instance(V__CONFINE,s__Process)
            & s__instance(V__CONFINE,s__Confining)
            & s__patient(V__CONFINE,V__AGENT)
            & s__meetsTemporally(s__WhenFn(V__CONFINE),s__WhenFn(V__ESCAPE)) ) ) ) ).

%FOL fof(kb_SUMO_13041,axiom,(( (! [V__ESCAPE,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__ESCAPE,s__Process)) => (s__instance(V__ESCAPE,s__Escaping) => (~ s__holdsRight('s__agent(V__ESCAPE,V__AGENT)',V__AGENT))))) ))).

fof(kb_SUMO_13042,axiom,
    s__subclass(s__Leaving,s__Translocation) ).

fof(kb_SUMO_13043,axiom,
    s__instance(s__Leaving__t,s__SetOrClass) ).

fof(kb_SUMO_13044,axiom,
    s__documentation(s__Leaving,s__EnglishLanguage,'The initial part of any instance of &%Translocation.') ).

fof(kb_SUMO_13045,axiom,
    ! [V__LEAVE] :
      ( s__instance(V__LEAVE,s__Process)
     => ( s__instance(V__LEAVE,s__Leaving)
       => ? [V__GO] :
            ( s__instance(V__GO,s__Process)
            & s__instance(V__GO,s__Translocation)
            & s__subProcess(V__LEAVE,V__GO)
            & s__starts(s__WhenFn(V__LEAVE),s__WhenFn(V__GO)) ) ) ) ).

fof(kb_SUMO_13046,axiom,
    s__subclass(s__Arriving,s__Translocation) ).

fof(kb_SUMO_13047,axiom,
    s__instance(s__Arriving__t,s__SetOrClass) ).

fof(kb_SUMO_13048,axiom,
    s__documentation(s__Arriving,s__EnglishLanguage,'The final part of any instance of &%Translocation.') ).

fof(kb_SUMO_13049,axiom,
    ! [V__ARRIVE] :
      ( s__instance(V__ARRIVE,s__Process)
     => ( s__instance(V__ARRIVE,s__Arriving)
       => ? [V__GO] :
            ( s__instance(V__GO,s__Process)
            & s__instance(V__GO,s__Translocation)
            & s__subProcess(V__ARRIVE,V__GO)
            & s__finishes(s__WhenFn(V__ARRIVE),s__WhenFn(V__GO)) ) ) ) ).

fof(kb_SUMO_13050,axiom,
    s__subclass(s__Immigrating,s__Translocation) ).

fof(kb_SUMO_13051,axiom,
    s__instance(s__Immigrating__t,s__SetOrClass) ).

fof(kb_SUMO_13052,axiom,
    s__documentation(s__Immigrating,s__EnglishLanguage,'Any &%Translocation by a Human from one &%Nation to another &%Nation where the person is not a citizen for the purpose of taking up residence.') ).

%FOL fof(kb_SUMO_13053,axiom,(( (! [V__A,V__I] : ((s__instance(V__I,s__Process) & s__instance(V__A,s__Organism)) => ((s__instance(V__I,s__Immigrating) & s__agent(V__I,V__A)) => (? [V__N1,V__N2] : (s__instance(V__N2,s__GeopoliticalArea) & s__instance(V__N1,s__GeopoliticalArea) & s__instance(V__N1,s__Nation) & s__instance(V__N2,s__Nation) & s__origin(V__I,V__N1) & s__destination(V__I,V__N2) & (~ (V__N1 = V__N2)) & s__member(V__A,s__CitizenryFn(V__N1)) & (~ s__member(V__A,s__CitizenryFn(V__N2))) & s__hasPurpose(V__I,'s__inhabits(V__A,V__N2)')))))) ))).

fof(kb_SUMO_13054,axiom,
    ! [V__A,V__I] :
      ( ( s__instance(V__I,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__I,s__Immigrating)
          & s__agent(V__I,V__A) )
       => s__instance(V__A,s__Human) ) ) ).

fof(kb_SUMO_13055,axiom,
    s__subclass(s__Boarding,s__Translocation) ).

fof(kb_SUMO_13056,axiom,
    s__instance(s__Boarding__t,s__SetOrClass) ).

fof(kb_SUMO_13057,axiom,
    s__documentation(s__Boarding,s__EnglishLanguage,'Getting on a &%Vehicle, e.g. getting into an &%Automobile, boarding an &%Aircraft, etc.') ).

fof(kb_SUMO_13058,axiom,
    ! [V__B,V__V] :
      ( s__instance(V__B,s__Process)
     => ( ( s__instance(V__B,s__Boarding)
          & s__patient(V__B,V__V) )
       => s__instance(V__V,s__Vehicle) ) ) ).

%FOL fof(kb_SUMO_13059,axiom,(( (! [V__B,V__A,V__V,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__V,s__Vehicle) & s__instance(V__A,s__SelfConnectedObject) & s__instance(V__B,s__Process)) => ((s__instance(V__B,s__Boarding) & s__agent(V__B,V__AGENT) & s__patient(V__B,V__V)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__B)),'(~ s__onboard(V__A,V__V))') & s__holdsDuring(s__EndFn(s__WhenFn(V__B)),'s__onboard(V__A,V__V)'))))) ))).

fof(kb_SUMO_13060,axiom,
    s__documentation(s__onboard__m,s__EnglishLanguage,'(onboard ?OBJ ?VEHICLE) means that the &%SelfConnectedObject ?OBJ is inside the &%Vehicle ?VEHICLE.') ).

fof(kb_SUMO_13061,axiom,
    s__domain(s__onboard__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_13062,axiom,
    s__domain(s__onboard__m,"2",s__Vehicle) ).

fof(kb_SUMO_13063,axiom,
    s__subrelation(s__onboard__m,s__located__m) ).

fof(kb_SUMO_13064,axiom,
    ! [V__O,V__V] :
      ( ( s__instance(V__V,s__Vehicle)
        & s__instance(V__V,s__SelfConnectedObject)
        & s__instance(V__O,s__SelfConnectedObject) )
     => ( s__onboard(V__O,V__V)
       => s__contains(V__V,V__O) ) ) ).

fof(kb_SUMO_13065,axiom,
    ! [V__O,V__T,V__V] :
      ( ( s__instance(V__V,s__Vehicle)
        & s__instance(V__T,s__Process)
        & s__instance(V__O,s__SelfConnectedObject) )
     => ( ( s__onboard(V__O,V__V)
          & s__instrument(V__T,V__V)
          & s__instance(V__T,s__Transportation) )
       => s__patient(V__T,V__O) ) ) ).

fof(kb_SUMO_13066,axiom,
    s__subclass(s__Deboarding,s__Translocation) ).

fof(kb_SUMO_13067,axiom,
    s__instance(s__Deboarding__t,s__SetOrClass) ).

fof(kb_SUMO_13068,axiom,
    s__relatedInternalConcept(s__Boarding,s__Deboarding) ).

fof(kb_SUMO_13069,axiom,
    s__documentation(s__Deboarding,s__EnglishLanguage,'Getting off a &%Vehicle, e.g. getting out of an Automobile, deplaning, getting off a &%WaterVehicle, etc.') ).

fof(kb_SUMO_13070,axiom,
    ! [V__B,V__VEHICLE] :
      ( s__instance(V__B,s__Process)
     => ( ( s__instance(V__B,s__Deboarding)
          & s__patient(V__B,V__VEHICLE) )
       => s__instance(V__VEHICLE,s__Vehicle) ) ) ).

%FOL fof(kb_SUMO_13071,axiom,(( (! [V__B,V__A,V__V] : ((s__instance(V__V,s__Vehicle) & s__instance(V__A,s__Agent) & s__instance(V__A,s__SelfConnectedObject) & s__instance(V__B,s__Process)) => ((s__instance(V__B,s__Deboarding) & s__agent(V__B,V__A) & s__patient(V__B,V__V)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__B)),'s__onboard(V__A,V__V)') & s__holdsDuring(s__EndFn(s__WhenFn(V__B)),'(~ s__onboard(V__A,V__V))'))))) ))).

fof(kb_SUMO_13072,axiom,
    s__subclass(s__Rotating,s__Motion) ).

fof(kb_SUMO_13073,axiom,
    s__documentation(s__Rotating,s__EnglishLanguage,'&%Motion that begins and ends at the same point, because the trajectory of the &%Motion is circular.') ).

%FOL fof(kb_SUMO_13074,axiom,(( (! [V__A,V__R] : ((s__instance(V__R,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__R,s__Rotating) & s__experiencer(V__R,V__A)) => (? [V__L] : (s__instance(V__L,s__Object) & s__holdsDuring(s__BeginFn(s__WhenFn(V__R)),'s__located(V__A,V__L)') & s__holdsDuring(s__EndFn(s__WhenFn(V__R)),'s__located(V__A,V__L)')))))) ))).

fof(kb_SUMO_13075,axiom,
    s__subclass(s__Tremor,s__Rotating) ).

fof(kb_SUMO_13076,axiom,
    s__instance(s__Tremor__t,s__SetOrClass) ).

fof(kb_SUMO_13077,axiom,
    s__documentation(s__Tremor,s__EnglishLanguage,'&%Motion that involves rapidly &%Rotating between two positions.') ).

fof(kb_SUMO_13078,axiom,
    s__instance(s__axis__m,s__BinaryPredicate) ).

fof(kb_SUMO_13079,axiom,
    s__documentation(s__axis__m,s__EnglishLanguage,'(axis ?A ?OBJ) means that a &%part ?A of an &%Object ?OBJ is the axis of rotation in a &%Rotating.') ).

fof(kb_SUMO_13080,axiom,
    s__domain(s__axis__m,"1",s__Object) ).

fof(kb_SUMO_13081,axiom,
    s__domain(s__axis__m,"2",s__Object) ).

fof(kb_SUMO_13082,axiom,
    ! [V__OBJ,V__AXIS] :
      ( ( s__instance(V__AXIS,s__Agent)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__axis(V__AXIS,V__OBJ)
       => ? [V__R] :
            ( s__instance(V__R,s__Rotating)
            & s__part(V__AXIS,V__OBJ)
            & s__experiencer(V__R,V__OBJ)
            & ~ ? [V__R2] :
                  ( s__instance(V__R2,s__Process)
                  & s__instance(V__R,s__Process)
                  & s__instance(V__R2,s__Rotating)
                  & s__subProcess(V__R2,V__R)
                  & s__experiencer(V__R2,V__AXIS) ) ) ) ) ).

fof(kb_SUMO_13083,axiom,
    s__subclass(s__CentrifugalMotion,s__Rotating) ).

fof(kb_SUMO_13084,axiom,
    s__instance(s__CentrifugalMotion__t,s__SetOrClass) ).

fof(kb_SUMO_13085,axiom,
    s__disjoint(s__CentrifugalMotion,s__CentripetalMotion) ).

fof(kb_SUMO_13086,axiom,
    s__documentation(s__CentrifugalMotion,s__EnglishLanguage,'Any instance of &%Rotating where there is &%Motion away from the center of the &%Rotating.') ).

fof(kb_SUMO_13087,axiom,
    ! [V__CM] :
      ( s__instance(V__CM,s__Process)
     => ( s__instance(V__CM,s__CentrifugalMotion)
       => ? [V__R,V__A,V__O1,V__O2] :
            ( s__instance(V__O2,s__Agent)
            & s__instance(V__O1,s__Agent)
            & s__instance(V__A,s__Object)
            & s__instance(V__R,s__Process)
            & s__instance(V__R,s__Rotating)
            & s__axis(V__A,V__O1)
            & s__origin(V__CM,V__A)
            & s__experiencer(V__R,V__O1)
            & s__experiencer(V__CM,V__O2)
            & s__causes(V__R,V__CM) ) ) ) ).

fof(kb_SUMO_13088,axiom,
    s__subclass(s__CentripetalMotion,s__Rotating) ).

fof(kb_SUMO_13089,axiom,
    s__instance(s__CentripetalMotion__t,s__SetOrClass) ).

fof(kb_SUMO_13090,axiom,
    s__instance(s__Rotating__t,s__SetOrClass) ).

fof(kb_SUMO_13091,axiom,
    s__documentation(s__CentripetalMotion,s__EnglishLanguage,'Any instance of &%Rotating where there is &%Motion towards the center of the &%Rotating.') ).

fof(kb_SUMO_13092,axiom,
    ! [V__CM] :
      ( s__instance(V__CM,s__Process)
     => ( s__instance(V__CM,s__CentripetalMotion)
       => ? [V__R,V__A,V__O1,V__O2] :
            ( s__instance(V__O2,s__Agent)
            & s__instance(V__O1,s__Agent)
            & s__instance(V__A,s__Object)
            & s__instance(V__R,s__Process)
            & s__instance(V__R,s__Rotating)
            & s__axis(V__A,V__O1)
            & s__destination(V__CM,V__A)
            & s__experiencer(V__R,V__O1)
            & s__experiencer(V__CM,V__O2)
            & s__causes(V__R,V__CM) ) ) ) ).

fof(kb_SUMO_13093,axiom,
    s__subclass(s__Reversing,s__Motion) ).

fof(kb_SUMO_13094,axiom,
    s__instance(s__Reversing__t,s__SetOrClass) ).

fof(kb_SUMO_13095,axiom,
    s__documentation(s__Reversing,s__EnglishLanguage,'Moving something in such a way that its &%top becomes its &%bottom and vice versa.') ).

fof(kb_SUMO_13096,axiom,
    ! [V__REVERSE,V__OBJ,V__BOTTOM,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__OBJ,s__SelfConnectedObject)
        & s__instance(V__REVERSE,s__Process) )
     => ( ( s__instance(V__REVERSE,s__Reversing)
          & s__patient(V__REVERSE,V__OBJ)
          & s__holdsDuring(s__BeginFn(s__WhenFn(V__REVERSE)),'(s__top(V__TOP,V__OBJ) & s__bottom(V__BOTTOM,V__OBJ))') )
       => s__holdsDuring(s__EndFn(s__WhenFn(V__REVERSE)),'(s__top(V__BOTTOM,V__OBJ) & s__bottom(V__TOP,V__OBJ))') ) ) ).

fof(kb_SUMO_13097,axiom,
    s__subclass(s__Dripping,s__LiquidMotion) ).

fof(kb_SUMO_13098,axiom,
    s__instance(s__Dripping__t,s__SetOrClass) ).

fof(kb_SUMO_13099,axiom,
    s__documentation(s__Dripping,s__EnglishLanguage,'Any &%LiquidMotion where the &%Liquid is moved drop by drop.') ).

fof(kb_SUMO_13100,axiom,
    s__subclass(s__Stirring,s__LiquidMotion) ).

fof(kb_SUMO_13101,axiom,
    s__instance(s__Stirring__t,s__SetOrClass) ).

fof(kb_SUMO_13102,axiom,
    s__subclass(s__Stirring,s__Combining) ).

fof(kb_SUMO_13103,axiom,
    s__documentation(s__Stirring,s__EnglishLanguage,'Any instance of &%LiquidMotion which is also an instance of &%Combining two or more &%Liquids.') ).

fof(kb_SUMO_13104,axiom,
    s__subclass(s__Pouring,s__LiquidMotion) ).

fof(kb_SUMO_13105,axiom,
    s__instance(s__Pouring__t,s__SetOrClass) ).

fof(kb_SUMO_13106,axiom,
    s__subclass(s__Pouring,s__Transfer) ).

fof(kb_SUMO_13107,axiom,
    s__documentation(s__Pouring,s__EnglishLanguage,'Any instance of &%Transfer from one &%Container to another, where the thing transferred is a &%Liquid.') ).

fof(kb_SUMO_13108,axiom,
    ! [V__POUR] :
      ( s__instance(V__POUR,s__Process)
     => ( s__instance(V__POUR,s__Pouring)
       => ? [V__LIQUID,V__CONTAINER1,V__CONTAINER2] :
            ( s__instance(V__CONTAINER1,s__Object)
            & s__instance(V__LIQUID,s__Object)
            & s__origin(V__POUR,V__CONTAINER1)
            & s__destination(V__POUR,V__CONTAINER2)
            & s__instance(V__CONTAINER1,s__Container)
            & s__instance(V__CONTAINER2,s__Container)
            & V__CONTAINER1 != V__CONTAINER2
            & s__patient(V__POUR,V__LIQUID)
            & s__attribute(V__LIQUID,s__Liquid)
            & s__instance(V__LIQUID,s__Substance) ) ) ) ).

fof(kb_SUMO_13109,axiom,
    s__subclass(s__WaterWave,s__LiquidMotion) ).

fof(kb_SUMO_13110,axiom,
    s__instance(s__WaterWave__t,s__SetOrClass) ).

fof(kb_SUMO_13111,axiom,
    s__documentation(s__WaterWave,s__EnglishLanguage,'A &%WaterWave is a raised ridge of water moving along the surface of a body of water. The &%WaterWave moves in a direction approximately transverse to the crest line of the wave. The &%patient of the &%WaterWave is successive regions of water, which do not travel in the direction of the wave or with it.') ).

fof(kb_SUMO_13112,axiom,
    ! [V__WAVE] :
      ( s__instance(V__WAVE,s__Process)
     => ( s__instance(V__WAVE,s__WaterWave)
       => ? [V__AREA] :
            ( s__instance(V__AREA,s__Object)
            & s__instance(V__AREA,s__WaterArea)
            & s__eventLocated(V__WAVE,V__AREA) ) ) ) ).

fof(kb_SUMO_13113,axiom,
    s__instance(s__waterDepth__m,s__BinaryPredicate) ).

fof(kb_SUMO_13114,axiom,
    s__domain(s__waterDepth__m,"1",s__WaterArea) ).

fof(kb_SUMO_13115,axiom,
    s__domain(s__waterDepth__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_13116,axiom,
    s__subrelation(s__waterDepth__m,s__length__m) ).

fof(kb_SUMO_13117,axiom,
    s__documentation(s__waterDepth__m,s__EnglishLanguage,'(&%waterDepth ?AREA ?LENGTH) means that the depth of water at the &%Region ?AREA is ?LENGTH.') ).

fof(kb_SUMO_13118,axiom,
    ! [V__DEPTH,V__AREA] :
      ( ( s__instance(V__AREA,s__WaterArea)
        & s__instance(V__AREA,s__SelfConnectedObject)
        & s__instance(V__DEPTH,s__LengthMeasure) )
     => ( s__waterDepth(V__AREA,V__DEPTH)
       => ? [V__BOTTOM,V__TOP] :
            ( s__instance(V__TOP,s__SelfConnectedObject)
            & s__instance(V__BOTTOM,s__SelfConnectedObject)
            & s__depth(V__TOP,V__BOTTOM,V__DEPTH)
            & s__top(V__TOP,V__AREA)
            & s__bottom(V__BOTTOM,V__AREA) ) ) ) ).

fof(kb_SUMO_13119,axiom,
    s__subclass(s__Flooding,s__LiquidMotion) ).

fof(kb_SUMO_13120,axiom,
    s__instance(s__Flooding__t,s__SetOrClass) ).

fof(kb_SUMO_13121,axiom,
    s__documentation(s__Flooding,s__EnglishLanguage,'Flooding is the subclass of &%LiquidMotion processes in which the water level of a &%Waterway rises or water spreads over a flood plain along a &%Waterway.') ).

%FOL fof(kb_SUMO_13122,axiom,(( (! [V__P,V__F] : ((s__instance(V__F,s__Process) & s__instance(V__P,s__WaterArea)) => ((s__instance(V__F,s__Flooding) & s__eventLocated(V__F,V__P)) => (? [V__L1,V__L2] : (s__instance(V__L2,s__LengthMeasure) & s__instance(V__L1,s__LengthMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__F)),'s__waterDepth(V__P,V__L1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__F)),'s__waterDepth(V__P,V__L2)') & greater(V__L2,V__L1)))))) ))).

fof(kb_SUMO_13123,axiom,
    s__subclass(s__Spraying,s__LiquidMotion) ).

fof(kb_SUMO_13124,axiom,
    s__instance(s__Spraying__t,s__SetOrClass) ).

fof(kb_SUMO_13125,axiom,
    s__subclass(s__Spraying,s__Transfer) ).

fof(kb_SUMO_13126,axiom,
    s__documentation(s__Spraying,s__EnglishLanguage,'Any instance of &%Transfer of a &%Liquid which is accomplished by converting the &%Liquid into a mist.') ).

fof(kb_SUMO_13127,axiom,
    s__subclass(s__Pulling,s__Motion) ).

fof(kb_SUMO_13128,axiom,
    s__instance(s__Pulling__t,s__SetOrClass) ).

fof(kb_SUMO_13129,axiom,
    s__documentation(s__Pulling,s__EnglishLanguage,'&%Pulling describe the exertion of force so as to cause or tend to cause motion towards the agent.') ).

fof(kb_SUMO_13130,axiom,
    s__subclass(s__Submarine,s__WaterVehicle) ).

fof(kb_SUMO_13131,axiom,
    s__instance(s__Submarine__t,s__SetOrClass) ).

fof(kb_SUMO_13132,axiom,
    s__documentation(s__Submarine,s__EnglishLanguage,'A &%WaterVehicle which is capable of travelling under the water level by filling tanks with water.') ).

fof(kb_SUMO_13133,axiom,
    s__subclass(s__AirTransportation,s__Transportation) ).

fof(kb_SUMO_13134,axiom,
    s__instance(s__AirTransportation__t,s__SetOrClass) ).

fof(kb_SUMO_13135,axiom,
    s__documentation(s__AirTransportation,s__EnglishLanguage,'Any instance of &%Transportation where the &%instrument is an &%Aircraft and which is through an &%AtmosphericRegion.') ).

fof(kb_SUMO_13136,axiom,
    ! [V__TRANSPORT] :
      ( s__instance(V__TRANSPORT,s__Process)
     => ( s__instance(V__TRANSPORT,s__AirTransportation)
       => ? [V__CRAFT,V__REGION] :
            ( s__instance(V__REGION,s__Object)
            & s__instance(V__CRAFT,s__Object)
            & s__instance(V__CRAFT,s__Aircraft)
            & s__instance(V__REGION,s__AtmosphericRegion)
            & s__instrument(V__TRANSPORT,V__CRAFT)
            & s__eventLocated(V__TRANSPORT,V__REGION) ) ) ) ).

fof(kb_SUMO_13137,axiom,
    s__subclass(s__SpaceTransportation,s__Transportation) ).

fof(kb_SUMO_13138,axiom,
    s__instance(s__SpaceTransportation__t,s__SetOrClass) ).

fof(kb_SUMO_13139,axiom,
    s__documentation(s__SpaceTransportation,s__EnglishLanguage,'Any instance of &%Transportation where the &%instrument is a &%Spacecraft and which is through a &%SpaceRegion.') ).

fof(kb_SUMO_13140,axiom,
    ! [V__TRANSPORT] :
      ( s__instance(V__TRANSPORT,s__Process)
     => ( s__instance(V__TRANSPORT,s__SpaceTransportation)
       => ? [V__CRAFT,V__REGION] :
            ( s__instance(V__REGION,s__Object)
            & s__instance(V__CRAFT,s__Object)
            & s__instance(V__CRAFT,s__Spacecraft)
            & s__instance(V__REGION,s__SpaceRegion)
            & s__instrument(V__TRANSPORT,V__CRAFT)
            & s__eventLocated(V__TRANSPORT,V__REGION) ) ) ) ).

fof(kb_SUMO_13141,axiom,
    s__subclass(s__Spacecraft,s__Vehicle) ).

fof(kb_SUMO_13142,axiom,
    s__instance(s__Spacecraft__t,s__SetOrClass) ).

fof(kb_SUMO_13143,axiom,
    s__documentation(s__Spacecraft,s__EnglishLanguage,'Any &%Vehicle which is capable of &%SpaceTransportation.') ).

fof(kb_SUMO_13144,axiom,
    ! [V__CRAFT] :
      ( s__instance(V__CRAFT,s__Object)
     => ( s__instance(V__CRAFT,s__Spacecraft)
       => s__capability(s__SpaceTransportation,s__instrument__m,V__CRAFT) ) ) ).

fof(kb_SUMO_13145,axiom,
    s__subclass(s__Rocket,s__Spacecraft) ).

fof(kb_SUMO_13146,axiom,
    s__documentation(s__Rocket,s__EnglishLanguage,'A &%Spacecraft which has the shape of a cylinder with a cone on top and which is powered by a jet engine.') ).

fof(kb_SUMO_13147,axiom,
    s__subclass(s__Missile,s__Projectile) ).

fof(kb_SUMO_13148,axiom,
    s__instance(s__Missile__t,s__SetOrClass) ).

fof(kb_SUMO_13149,axiom,
    s__subclass(s__Missile,s__SelfPoweredDevice) ).

fof(kb_SUMO_13150,axiom,
    s__instance(s__SelfPoweredDevice__t,s__SetOrClass) ).

fof(kb_SUMO_13151,axiom,
    s__documentation(s__Missile,s__EnglishLanguage,'A &%Projectile which is propelled by a rocket and contains a &%Bomb.') ).

fof(kb_SUMO_13152,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Missile)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__Bomb)
            & s__part(V__B,V__M) ) ) ) ).

fof(kb_SUMO_13153,axiom,
    s__subclass(s__BallisticMissile,s__Missile) ).

fof(kb_SUMO_13154,axiom,
    s__instance(s__BallisticMissile__t,s__SetOrClass) ).

fof(kb_SUMO_13155,axiom,
    s__documentation(s__BallisticMissile,s__EnglishLanguage,'A &%Missile which is guided for the first stage of its flight but then falls to its target for the second stage.') ).

fof(kb_SUMO_13156,axiom,
    s__subclass(s__WaterTransportation,s__Transportation) ).

fof(kb_SUMO_13157,axiom,
    s__instance(s__WaterTransportation__t,s__SetOrClass) ).

fof(kb_SUMO_13158,axiom,
    s__documentation(s__WaterTransportation,s__EnglishLanguage,'Any instance of &%Transportation where the &%instrument is a &%WaterVehicle.') ).

fof(kb_SUMO_13159,axiom,
    ! [V__TRANSPORT] :
      ( s__instance(V__TRANSPORT,s__Process)
     => ( s__instance(V__TRANSPORT,s__WaterTransportation)
       => ? [V__CRAFT,V__AREA] :
            ( s__instance(V__AREA,s__Object)
            & s__instance(V__CRAFT,s__Object)
            & s__instance(V__CRAFT,s__WaterVehicle)
            & s__instance(V__AREA,s__WaterArea)
            & s__instrument(V__TRANSPORT,V__CRAFT)
            & s__eventLocated(V__TRANSPORT,V__AREA) ) ) ) ).

fof(kb_SUMO_13160,axiom,
    ! [V__CRAFT] :
      ( s__instance(V__CRAFT,s__Object)
     => ( s__instance(V__CRAFT,s__WaterVehicle)
       => s__capability(s__WaterTransportation,s__instrument__m,V__CRAFT) ) ) ).

fof(kb_SUMO_13161,axiom,
    s__subclass(s__Rowing,s__WaterTransportation) ).

fof(kb_SUMO_13162,axiom,
    s__instance(s__Rowing__t,s__SetOrClass) ).

fof(kb_SUMO_13163,axiom,
    s__documentation(s__Rowing,s__EnglishLanguage,'Any instance of &%WaterTransportation where the instrument is an &%Oar that is manually powered.') ).

fof(kb_SUMO_13164,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__Rowing)
       => ? [V__O] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__O,s__Oar)
            & s__instrument(V__R,V__O) ) ) ) ).

fof(kb_SUMO_13165,axiom,
    s__subclass(s__LandTransportation,s__Transportation) ).

fof(kb_SUMO_13166,axiom,
    s__instance(s__LandTransportation__t,s__SetOrClass) ).

fof(kb_SUMO_13167,axiom,
    s__documentation(s__LandTransportation,s__EnglishLanguage,'Any instance of &%Transportation where the &%instrument is a &%LandVehicle.') ).

fof(kb_SUMO_13168,axiom,
    ! [V__LAND] :
      ( s__instance(V__LAND,s__Process)
     => ( s__instance(V__LAND,s__LandTransportation)
       => ? [V__CRAFT,V__AREA] :
            ( s__instance(V__AREA,s__Object)
            & s__instance(V__CRAFT,s__Object)
            & s__instance(V__CRAFT,s__LandVehicle)
            & s__instance(V__AREA,s__LandArea)
            & s__instrument(V__LAND,V__CRAFT)
            & s__located(V__CRAFT,V__AREA) ) ) ) ).

fof(kb_SUMO_13169,axiom,
    ! [V__VEHICLE] :
      ( s__instance(V__VEHICLE,s__Object)
     => ( s__instance(V__VEHICLE,s__LandVehicle)
       => s__capability(s__LandTransportation,s__instrument__m,V__VEHICLE) ) ) ).

fof(kb_SUMO_13170,axiom,
    ! [V__P,V__T] :
      ( ( s__instance(V__T,s__Motion)
        & s__instance(V__P,s__Object) )
     => ( ( s__instance(V__T,s__LandTransportation)
          & s__path(V__T,V__P) )
       => s__instance(V__P,s__LandTransitway) ) ) ).

fof(kb_SUMO_13171,axiom,
    s__subclass(s__TransportViaRoadVehicle,s__Transportation) ).

fof(kb_SUMO_13172,axiom,
    s__instance(s__TransportViaRoadVehicle__t,s__SetOrClass) ).

fof(kb_SUMO_13173,axiom,
    s__subclass(s__TransportViaRoadVehicle,s__LandTransportation) ).

fof(kb_SUMO_13174,axiom,
    s__documentation(s__TransportViaRoadVehicle,s__EnglishLanguage,'&%TransportViaRoadVehicle is the class of &%Transportation events in which the &%instrument is an instance of &%RoadVehicle.') ).

fof(kb_SUMO_13175,axiom,
    s__subclass(s__FlyingAircraft,s__Driving) ).

fof(kb_SUMO_13176,axiom,
    s__instance(s__FlyingAircraft__t,s__SetOrClass) ).

fof(kb_SUMO_13177,axiom,
    s__documentation(s__FlyingAircraft,s__EnglishLanguage,'Controlling the direction, speed, and altitude of an &%Aircraft') ).

fof(kb_SUMO_13178,axiom,
    s__termFormat(s__EnglishLanguage,s__FlyingAircraft,'Flying') ).

fof(kb_SUMO_13179,axiom,
    ! [V__FLY] :
      ( s__instance(V__FLY,s__Process)
     => ( s__instance(V__FLY,s__FlyingAircraft)
       => ? [V__CRAFT] :
            ( s__instance(V__CRAFT,s__Aircraft)
            & s__patient(V__FLY,V__CRAFT) ) ) ) ).

fof(kb_SUMO_13180,axiom,
    ! [V__FLY] :
      ( s__instance(V__FLY,s__Process)
     => ( s__instance(V__FLY,s__FlyingAircraft)
       => ? [V__FLIGHT] :
            ( s__instance(V__FLIGHT,s__Process)
            & s__instance(V__FLIGHT,s__AirTransportation)
            & s__subProcess(V__FLY,V__FLIGHT) ) ) ) ).

fof(kb_SUMO_13181,axiom,
    s__subclass(s__Aircraft,s__Vehicle) ).

fof(kb_SUMO_13182,axiom,
    s__documentation(s__Aircraft,s__EnglishLanguage,'Any Vehicle which is capable of AirTransportation. Note that this class covers both fixed-wing aircraft and helicopters.') ).

fof(kb_SUMO_13183,axiom,
    ! [V__CRAFT] :
      ( s__instance(V__CRAFT,s__Object)
     => ( s__instance(V__CRAFT,s__Aircraft)
       => s__capability(s__AirTransportation,s__instrument__m,V__CRAFT) ) ) ).

fof(kb_SUMO_13184,axiom,
    s__subclass(s__Helicopter,s__Aircraft) ).

fof(kb_SUMO_13185,axiom,
    s__instance(s__Helicopter__t,s__SetOrClass) ).

fof(kb_SUMO_13186,axiom,
    s__instance(s__Aircraft__t,s__SetOrClass) ).

fof(kb_SUMO_13187,axiom,
    s__documentation(s__Helicopter,s__EnglishLanguage,'Any &%Aircraft with rapidly rotating wings.') ).

fof(kb_SUMO_13188,axiom,
    s__subclass(s__MilitaryArtifact,s__Artifact) ).

fof(kb_SUMO_13189,axiom,
    s__instance(s__MilitaryArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_13190,axiom,
    s__documentation(s__MilitaryArtifact,s__EnglishLanguage,'Any &%Artifact which is made for a &%MilitaryOrganization.') ).

fof(kb_SUMO_13191,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__MilitaryArtifact)
       => s__hasPurpose(V__A,'(? [V__O] : (s__instance(V__O,s__Agent) & s__instance(V__O,s__MilitaryOrganization) & s__uses(V__A,V__O)))') ) ) ).

fof(kb_SUMO_13192,axiom,
    s__subclass(s__ExplosiveDevice,s__Device) ).

fof(kb_SUMO_13193,axiom,
    s__documentation(s__ExplosiveDevice,s__EnglishLanguage,'A &%Device whose purpose is to explode. Note that &%ExplosiveDevice is not a subclass of &%Weapon, since explosives can be used in demolition work and in fireworks displays, for example.') ).

fof(kb_SUMO_13194,axiom,
    ! [V__ED] :
      ( s__instance(V__ED,s__Object)
     => ( s__instance(V__ED,s__ExplosiveDevice)
       => s__hasPurpose(V__ED,'(? [V__E,V__D] : (s__instance(V__D,s__Process) & s__instance(V__E,s__Process) & s__instance(V__E,s__Explosion) & s__instrument(V__E,V__ED) & s__causes(V__E,V__D) & s__instance(V__D,s__Damaging)))') ) ) ).

fof(kb_SUMO_13195,axiom,
    s__subclass(s__ExplosiveMine,s__ExplosiveDevice) ).

fof(kb_SUMO_13196,axiom,
    s__subclass(s__ExplosiveMine,s__Weapon) ).

fof(kb_SUMO_13197,axiom,
    s__instance(s__ExplosiveMine__t,s__SetOrClass) ).

fof(kb_SUMO_13198,axiom,
    s__documentation(s__ExplosiveMine,s__EnglishLanguage,'An &%ExplosiveDevice which is designed to explode when there is movement over it, e.g. by a person on foot, by a &%RoadVehicle, etc.') ).

fof(kb_SUMO_13199,axiom,
    s__subclass(s__ExplosiveSubstance,s__Substance) ).

fof(kb_SUMO_13200,axiom,
    s__instance(s__ExplosiveSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_13201,axiom,
    s__documentation(s__ExplosiveSubstance,s__EnglishLanguage,'Any &%Substance which is capable of exploding.') ).

fof(kb_SUMO_13202,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__ExplosiveSubstance)
       => s__capability(s__Explosion,s__instrument__m,V__S) ) ) ).

fof(kb_SUMO_13203,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__ExplosiveDevice)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__S,s__ExplosiveSubstance)
            & s__part(V__S,V__D) ) ) ) ).

fof(kb_SUMO_13204,axiom,
    s__subclass(s__Driveway,s__Roadway) ).

fof(kb_SUMO_13205,axiom,
    s__instance(s__Driveway__t,s__SetOrClass) ).

fof(kb_SUMO_13206,axiom,
    s__documentation(s__Driveway,s__EnglishLanguage,'A small, private &%Roadway that is used for parking &%Automobiles or for connecting a &%Garage to a public &%Roadway.') ).

fof(kb_SUMO_13207,axiom,
    s__instance(s__OperatingFn__m,s__UnaryFunction) ).

fof(kb_SUMO_13208,axiom,
    s__documentation(s__OperatingFn__m,s__EnglishLanguage,'(&%OperatingFn ?DEVICE) denotes the class of events in which a &%Device of type ?device is operated.') ).

fof(kb_SUMO_13209,axiom,
    s__domain(s__OperatingFn__m,"1",s__Device) ).

fof(kb_SUMO_13210,axiom,
    s__rangeSubclass(s__OperatingFn__m,s__Process) ).

fof(kb_SUMO_13211,axiom,
    s__subclass(s__Installing,s__Putting) ).

fof(kb_SUMO_13212,axiom,
    s__instance(s__Installing__t,s__SetOrClass) ).

fof(kb_SUMO_13213,axiom,
    s__documentation(s__Installing,s__EnglishLanguage,'&%Putting a &%Device in a location and configuring the &%Device so that it can be used as intended after the installation.') ).

fof(kb_SUMO_13214,axiom,
    ! [V__INSTALL,V__DEVICE] :
      ( s__instance(V__INSTALL,s__Process)
     => ( ( s__instance(V__INSTALL,s__Installing)
          & s__patient(V__INSTALL,V__DEVICE) )
       => s__instance(V__DEVICE,s__Device) ) ) ).

%FOL fof(kb_SUMO_13215,axiom,(( (! [V__INSTALL,V__PURPOSE,V__DEVICE] : ((s__instance(V__DEVICE,s__Physical) & s__instance(V__PURPOSE,s__Formula) & s__instance(V__INSTALL,s__Process)) => ((s__instance(V__INSTALL,s__Installing) & s__patient(V__INSTALL,V__DEVICE) & s__hasPurpose(V__DEVICE,V__PURPOSE)) => s__holdsDuring(s__EndFn(s__WhenFn(V__INSTALL)),'s__truth(V__PURPOSE,'$true__m')')))) ))).

fof(kb_SUMO_13216,axiom,
    s__subclass(s__Rock,s__Substance) ).

fof(kb_SUMO_13217,axiom,
    s__instance(s__Rock__t,s__SetOrClass) ).

fof(kb_SUMO_13218,axiom,
    s__documentation(s__Rock,s__EnglishLanguage,'&%Rock is any naturally formed aggregate of one or more minerals, consolidated or not, with some degree of mineralogic and chemical constancy, in popular use the term is usually restricted to those aggregates that are hard, compact, and coherent.') ).

fof(kb_SUMO_13219,axiom,
    ! [V__Rock] :
      ( s__instance(V__Rock,s__Object)
     => ( s__instance(V__Rock,s__Rock)
       => s__attribute(V__Rock,s__Solid) ) ) ).

fof(kb_SUMO_13220,axiom,
    ! [V__Rock] :
      ( s__instance(V__Rock,s__Object)
     => ( s__instance(V__Rock,s__Rock)
       => ? [V__Mineral] :
            ( s__instance(V__Mineral,s__Object)
            & s__instance(V__Mineral,s__Mineral)
            & s__part(V__Mineral,V__Rock) ) ) ) ).

fof(kb_SUMO_13221,axiom,
    s__subclass(s__Soil,s__Mixture) ).

fof(kb_SUMO_13222,axiom,
    s__instance(s__Soil__t,s__SetOrClass) ).

fof(kb_SUMO_13223,axiom,
    s__documentation(s__Soil,s__EnglishLanguage,'&%Soil is a substance composed of fine rock material disintegrated by geological processes, mixed with humus, the organic remains of decomposed vegetation.') ).

fof(kb_SUMO_13224,axiom,
    ! [V__Soil] :
      ( s__instance(V__Soil,s__Object)
     => ( s__instance(V__Soil,s__Soil)
       => ? [V__Humus,V__Mineral] :
            ( s__instance(V__Mineral,s__Object)
            & s__instance(V__Humus,s__Object)
            & s__instance(V__Humus,s__Humus)
            & s__instance(V__Mineral,s__Mineral)
            & s__part(V__Humus,V__Soil)
            & s__part(V__Mineral,V__Soil) ) ) ) ).

fof(kb_SUMO_13225,axiom,
    s__subclass(s__Clay,s__Soil) ).

fof(kb_SUMO_13226,axiom,
    s__instance(s__Clay__t,s__SetOrClass) ).

fof(kb_SUMO_13227,axiom,
    s__documentation(s__Clay,s__EnglishLanguage,'Fine-grained soil consisting of mineral particles, not necessarily clay minerals, that are less than 0.002 mm in their maximum dimension.') ).

fof(kb_SUMO_13228,axiom,
    ! [V__Size,V__Particle,V__Soil] :
      ( ( s__instance(V__Soil,s__Object)
        & s__instance(V__Particle,s__Object)
        & s__instance(V__Particle,s__Circle)
        & s__instance(V__Size,s__RealNumber) )
     => ( ( s__part(V__Particle,V__Soil)
          & s__instance(V__Soil,s__Clay)
          & s__diameter(V__Particle,s__MeasureFn(V__Size,s__Centimeter)) )
       => greater("0.0002",V__Size) ) ) ).

fof(kb_SUMO_13229,axiom,
    s__subclass(s__Humus,s__Mixture) ).

fof(kb_SUMO_13230,axiom,
    s__instance(s__Humus__t,s__SetOrClass) ).

fof(kb_SUMO_13231,axiom,
    s__documentation(s__Humus,s__EnglishLanguage,'&%Humus is decaying organic matter found in &%Soil and derived from dead animal and plant material.') ).

fof(kb_SUMO_13232,axiom,
    ! [V__Humus] :
      ( s__instance(V__Humus,s__Object)
     => ( s__instance(V__Humus,s__Humus)
       => ? [V__Soil] :
            ( s__instance(V__Soil,s__Object)
            & s__instance(V__Soil,s__Soil)
            & s__part(V__Humus,V__Soil) ) ) ) ).

fof(kb_SUMO_13233,axiom,
    s__subclass(s__Burying,s__Putting) ).

fof(kb_SUMO_13234,axiom,
    s__instance(s__Burying__t,s__SetOrClass) ).

fof(kb_SUMO_13235,axiom,
    s__subclass(s__Burying,s__Digging) ).

fof(kb_SUMO_13236,axiom,
    s__instance(s__Digging__t,s__SetOrClass) ).

fof(kb_SUMO_13237,axiom,
    s__documentation(s__Burying,s__EnglishLanguage,'Putting something in the ground and then covering it with &%Soil.') ).

fof(kb_SUMO_13238,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Process)
     => ( s__instance(V__B,s__Burying)
       => ? [V__C,V__S] :
            ( s__instance(V__S,s__Object)
            & s__instance(V__C,s__Process)
            & s__instance(V__C,s__Covering)
            & s__instrument(V__C,V__S)
            & s__instance(V__S,s__Soil)
            & s__subProcess(V__C,V__B) ) ) ) ).

fof(kb_SUMO_13239,axiom,
    s__subclass(s__Digging,s__IntentionalProcess) ).

fof(kb_SUMO_13240,axiom,
    s__subclass(s__Digging,s__SurfaceChange) ).

fof(kb_SUMO_13241,axiom,
    s__documentation(s__Digging,s__EnglishLanguage,'Any &%Process of removing or turning over the &%Soil.') ).

fof(kb_SUMO_13242,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Process)
     => ( s__instance(V__D,s__Digging)
       => ? [V__S] :
            ( s__patient(V__D,V__S)
            & s__instance(V__S,s__Soil) ) ) ) ).

fof(kb_SUMO_13243,axiom,
    s__subclass(s__Tilling,s__Digging) ).

fof(kb_SUMO_13244,axiom,
    s__documentation(s__Tilling,s__EnglishLanguage,'Any &%Process of &%Digging, e.g. breaking and turning over &%Soil that facilitates &%Agriculture.') ).

fof(kb_SUMO_13245,axiom,
    s__subclass(s__Tilling,s__IntentionalProcess) ).

fof(kb_SUMO_13246,axiom,
    s__subclass(s__Tilling,s__SurfaceChange) ).

fof(kb_SUMO_13247,axiom,
    s__instance(s__Tilling__t,s__SetOrClass) ).

fof(kb_SUMO_13248,axiom,
    ! [V__TILL,V__SOIL] :
      ( s__instance(V__TILL,s__Process)
     => ( ( s__instance(V__TILL,s__Tilling)
          & s__patient(V__TILL,V__SOIL) )
       => s__instance(V__SOIL,s__Soil) ) ) ).

fof(kb_SUMO_13249,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Process)
     => ( s__instance(V__T,s__Tilling)
       => ? [V__A] :
            ( s__instance(V__A,s__Process)
            & s__instance(V__A,s__Agriculture)
            & s__subProcess(V__T,V__A) ) ) ) ).

fof(kb_SUMO_13250,axiom,
    s__subclass(s__Entombing,s__Putting) ).

fof(kb_SUMO_13251,axiom,
    s__instance(s__Entombing__t,s__SetOrClass) ).

fof(kb_SUMO_13252,axiom,
    s__documentation(s__Entombing,s__EnglishLanguage,'More commonly known as burying, this is the class of processes of putting a &%HumanCorpse into a Tomb. Note that this class is not a subclass of &%Burying, since some &%Tombs are not covered with &%Soil, e.g. those in a mausoleum.') ).

fof(kb_SUMO_13253,axiom,
    ! [V__C,V__E] :
      ( s__instance(V__E,s__Process)
     => ( ( s__instance(V__E,s__Entombing)
          & s__patient(V__E,V__C) )
       => s__instance(V__C,s__HumanCorpse) ) ) ).

fof(kb_SUMO_13254,axiom,
    ! [V__T,V__E] :
      ( s__instance(V__E,s__Process)
     => ( ( s__instance(V__E,s__Entombing)
          & s__destination(V__E,V__T) )
       => s__instance(V__T,s__Tomb) ) ) ).

fof(kb_SUMO_13255,axiom,
    s__subclass(s__MovingResidence,s__Transfer) ).

fof(kb_SUMO_13256,axiom,
    s__instance(s__MovingResidence__t,s__SetOrClass) ).

fof(kb_SUMO_13257,axiom,
    s__documentation(s__MovingResidence,s__EnglishLanguage,'The process of changing ones residence, i.e. moving ones belongs to a new &%home.') ).

%FOL fof(kb_SUMO_13258,axiom,(( (! [V__AGENT,V__MOVE] : ((s__instance(V__MOVE,s__Process) & s__instance(V__AGENT,s__Human)) => ((s__instance(V__MOVE,s__MovingResidence) & s__agent(V__MOVE,V__AGENT)) => (? [V__HOME1,V__HOME2] : (s__instance(V__HOME2,s__PermanentResidence) & s__instance(V__HOME1,s__PermanentResidence) & s__holdsDuring(s__BeginFn(s__WhenFn(V__MOVE)),'s__home(V__AGENT,V__HOME1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__MOVE)),'s__home(V__AGENT,V__HOME2)') & (~ (V__HOME1 = V__HOME2))))))) ))).

fof(kb_SUMO_13259,axiom,
    s__subclass(s__Harvesting,s__Removing) ).

fof(kb_SUMO_13260,axiom,
    s__instance(s__Harvesting__t,s__SetOrClass) ).

fof(kb_SUMO_13261,axiom,
    s__documentation(s__Harvesting,s__EnglishLanguage,'Gathering the plant results of &%Agriculture.') ).

fof(kb_SUMO_13262,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Process)
     => ( s__instance(V__H,s__Harvesting)
       => ? [V__A] :
            ( s__instance(V__A,s__Process)
            & s__instance(V__A,s__Agriculture)
            & s__subProcess(V__H,V__A) ) ) ) ).

fof(kb_SUMO_13263,axiom,
    ! [V__C,V__H] :
      ( s__instance(V__H,s__Process)
     => ( ( s__instance(V__H,s__Harvesting)
          & s__result(V__H,V__C) )
       => ( s__instance(V__C,s__PlantAnatomicalStructure)
          | s__instance(V__C,s__PlantSubstance) ) ) ) ).

fof(kb_SUMO_13264,axiom,
    s__subclass(s__Drilling,s__IntentionalProcess) ).

fof(kb_SUMO_13265,axiom,
    s__subclass(s__Drilling,s__SurfaceChange) ).

fof(kb_SUMO_13266,axiom,
    s__instance(s__Drilling__t,s__SetOrClass) ).

fof(kb_SUMO_13267,axiom,
    s__documentation(s__Drilling,s__EnglishLanguage,'Any &%Process of producing a &%hole in a &%SelfConnectedObject which involves rotating a long, thin bit.') ).

%FOL fof(kb_SUMO_13268,axiom,(( (! [V__OBJ,V__DRILL] : ((s__instance(V__DRILL,s__Process) & s__instance(V__OBJ,s__SelfConnectedObject)) => ((s__instance(V__DRILL,s__Drilling) & s__patient(V__DRILL,V__OBJ)) => (? [V__HOLE] : (s__instance(V__HOLE,s__Hole) & s__holdsDuring(s__BeginFn(s__WhenFn(V__DRILL)),'(~ s__hole(V__HOLE,V__OBJ))') & s__holdsDuring(s__EndFn(s__WhenFn(V__DRILL)),'s__hole(V__HOLE,V__OBJ)')))))) ))).

fof(kb_SUMO_13269,axiom,
    s__subclass(s__Drill,s__CuttingDevice) ).

fof(kb_SUMO_13270,axiom,
    s__instance(s__Drill__t,s__SetOrClass) ).

fof(kb_SUMO_13271,axiom,
    s__instance(s__CuttingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_13272,axiom,
    s__documentation(s__Drill,s__EnglishLanguage,'A &%Device that has the purpose of creating a &%Hole. This covers manual drills as well as electric or pneumatic drills.') ).

fof(kb_SUMO_13273,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__Drill)
       => s__hasPurpose(V__D,'(? [V__E,V__H] : (s__instance(V__E,s__Process) & s__instance(V__E,s__Cutting) & s__instance(V__H,s__Hole) & s__result(V__E,V__H) & s__instrument(V__E,V__D)))') ) ) ).

fof(kb_SUMO_13274,axiom,
    s__subclass(s__Memorizing,s__Learning) ).

fof(kb_SUMO_13275,axiom,
    s__instance(s__Memorizing__t,s__SetOrClass) ).

fof(kb_SUMO_13276,axiom,
    s__documentation(s__Memorizing,s__EnglishLanguage,'The process of committing a &%Text to memory.') ).

fof(kb_SUMO_13277,axiom,
    ! [V__T,V__M] :
      ( s__instance(V__M,s__Process)
     => ( ( s__instance(V__M,s__Memorizing)
          & s__patient(V__M,V__T) )
       => s__instance(V__T,s__Text) ) ) ).

fof(kb_SUMO_13278,axiom,
    s__subclass(s__Imagining,s__PsychologicalProcess) ).

fof(kb_SUMO_13279,axiom,
    s__documentation(s__Imagining,s__EnglishLanguage,'Forming a mental picture of something which is not present.') ).

fof(kb_SUMO_13280,axiom,
    s__subclass(s__Dreaming,s__Imagining) ).

fof(kb_SUMO_13281,axiom,
    s__instance(s__Dreaming__t,s__SetOrClass) ).

fof(kb_SUMO_13282,axiom,
    s__instance(s__Imagining__t,s__SetOrClass) ).

fof(kb_SUMO_13283,axiom,
    s__disjoint(s__Dreaming,s__IntentionalProcess) ).

fof(kb_SUMO_13284,axiom,
    s__documentation(s__Dreaming,s__EnglishLanguage,'A &%Process of producing metal images which occurs while one is &%Asleep.') ).

%FOL fof(kb_SUMO_13285,axiom,(( (! [V__AGENT,V__DREAM] : ((s__instance(V__DREAM,s__Process) & s__instance(V__AGENT,s__Agent)) => ((s__instance(V__DREAM,s__Dreaming) & s__experiencer(V__DREAM,V__AGENT)) => s__holdsDuring(s__WhenFn(V__DREAM),'s__attribute(V__AGENT,s__Asleep)')))) ))).

fof(kb_SUMO_13286,axiom,
    s__subclass(s__Frightening,s__PsychologicalProcess) ).

fof(kb_SUMO_13287,axiom,
    s__instance(s__Frightening__t,s__SetOrClass) ).

fof(kb_SUMO_13288,axiom,
    s__documentation(s__Frightening,s__EnglishLanguage,'Any &%PsychologicalProcess where the &%patient comes to feel &%Anxiety.') ).

%FOL fof(kb_SUMO_13289,axiom,(( (! [V__FRIGHTEN,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__FRIGHTEN,s__Process)) => ((s__instance(V__FRIGHTEN,s__Frightening) & s__experiencer(V__FRIGHTEN,V__AGENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__FRIGHTEN)),'(~ s__attribute(V__AGENT,s__Anxiety))') & s__holdsDuring(s__EndFn(s__WhenFn(V__FRIGHTEN)),'s__attribute(V__AGENT,s__Anxiety)'))))) ))).

fof(kb_SUMO_13290,axiom,
    s__subclass(s__Execution,s__Killing) ).

fof(kb_SUMO_13291,axiom,
    s__instance(s__Execution__t,s__SetOrClass) ).

fof(kb_SUMO_13292,axiom,
    s__documentation(s__Execution,s__EnglishLanguage,'&%Killing of a &%Human by a &%Government for the commission of a &%CriminalAction.') ).

fof(kb_SUMO_13293,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Process)
     => ( s__instance(V__E,s__Execution)
       => ? [V__G] :
            ( s__instance(V__G,s__Agent)
            & s__instance(V__G,s__Government)
            & s__agent(V__E,V__G) ) ) ) ).

fof(kb_SUMO_13294,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Process)
     => ( s__instance(V__E,s__Execution)
       => ? [V__P] :
            ( s__patient(V__E,V__P)
            & s__instance(V__P,s__Human) ) ) ) ).

fof(kb_SUMO_13295,axiom,
    s__subclass(s__Suicide,s__Killing) ).

fof(kb_SUMO_13296,axiom,
    s__instance(s__Suicide__t,s__SetOrClass) ).

fof(kb_SUMO_13297,axiom,
    s__documentation(s__Suicide,s__EnglishLanguage,'Any instance of &%Killing where the &%agent and the &%experiencer are identical.') ).

fof(kb_SUMO_13298,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Suicide)
       => ? [V__A] :
            ( s__instance(V__A,s__Agent)
            & s__agent(V__S,V__A)
            & s__experiencer(V__S,V__A) ) ) ) ).

fof(kb_SUMO_13299,axiom,
    s__subclass(s__Trespassing,s__CriminalAction) ).

fof(kb_SUMO_13300,axiom,
    s__subclass(s__Trespassing,s__Translocation) ).

fof(kb_SUMO_13301,axiom,
    s__instance(s__Trespassing__t,s__SetOrClass) ).

fof(kb_SUMO_13302,axiom,
    s__documentation(s__Trespassing,s__EnglishLanguage,'Entering property that does not belong to one and without the permission of the owner of the property.') ).

%FOL fof(kb_SUMO_13303,axiom,(( (! [V__P,V__T,V__H] : ((s__instance(V__H,s__Agent) & s__instance(V__T,s__Process) & s__instance(V__P,s__Object)) => ((s__instance(V__T,s__Trespassing) & s__agent(V__T,V__H) & s__patient(V__T,V__P)) => ((~ s__possesses(V__H,V__P)) & s__modalAttribute('s__located(V__H,V__P)',s__Illegal))))) ))).

fof(kb_SUMO_13304,axiom,
    s__subclass(s__Murder,s__Killing) ).

fof(kb_SUMO_13305,axiom,
    s__instance(s__Murder__t,s__SetOrClass) ).

fof(kb_SUMO_13306,axiom,
    s__subclass(s__Murder,s__CriminalAction) ).

fof(kb_SUMO_13307,axiom,
    s__documentation(s__Murder,s__EnglishLanguage,'Impermissible &%Killing of a &%Human.') ).

fof(kb_SUMO_13308,axiom,
    ! [V__MURDER] :
      ( s__instance(V__MURDER,s__Process)
     => ( s__instance(V__MURDER,s__Murder)
       => ? [V__PERSON] :
            ( s__patient(V__MURDER,V__PERSON)
            & s__instance(V__PERSON,s__Human) ) ) ) ).

fof(kb_SUMO_13309,axiom,
    s__subclass(s__Suffocating,s__Killing) ).

fof(kb_SUMO_13310,axiom,
    s__documentation(s__Suffocating,s__EnglishLanguage,'&%Killing someone by asphyxiation, i.e. by depriving them of &%Oxygen.') ).

fof(kb_SUMO_13311,axiom,
    ! [V__P,V__S,V__H] :
      ( ( s__instance(V__H,s__Physical)
        & s__instance(V__S,s__Process)
        & s__instance(V__P,s__Agent) )
     => ( s__instance(V__S,s__Suffocating)
       => s__holdsDuring(s__EndFn(s__WhenFn(V__H)),'(s__experiencer(V__S,V__P) & (~ (? [V__B] : (s__instance(V__B,s__Process) & s__instance(V__B,s__Breathing) & s__experiencer(V__B,V__P)))))') ) ) ).

fof(kb_SUMO_13312,axiom,
    s__subclass(s__Hanging,s__Suffocating) ).

fof(kb_SUMO_13313,axiom,
    s__instance(s__Hanging__t,s__SetOrClass) ).

fof(kb_SUMO_13314,axiom,
    s__instance(s__Suffocating__t,s__SetOrClass) ).

fof(kb_SUMO_13315,axiom,
    s__documentation(s__Hanging,s__EnglishLanguage,'Suffocating someone by suspending him/her from a rope wound around the neck until asphyxiation occurs.') ).

%FOL fof(kb_SUMO_13316,axiom,(( (! [V__H] : (s__instance(V__H,s__Process) => (s__instance(V__H,s__Hanging) => (? [V__S,V__N,V__P] : (s__instance(V__P,s__Agent) & s__instance(V__N,s__Object) & s__instance(V__S,s__Object) & s__instance(V__P,s__Human) & s__instance(V__S,s__String) & s__instance(V__N,s__Neck) & s__experiencer(V__H,V__P) & s__properPart(V__N,V__P) & s__instrument(V__H,V__S) & s__holdsDuring(s__WhenFn(V__H),'s__meetsSpatially(V__S,V__N)')))))) ))).

fof(kb_SUMO_13317,axiom,
    s__subclass(s__Starving,s__Killing) ).

fof(kb_SUMO_13318,axiom,
    s__instance(s__Starving__t,s__SetOrClass) ).

fof(kb_SUMO_13319,axiom,
    s__documentation(s__Starving,s__EnglishLanguage,'&%Killing someone by depriving them of food.') ).

fof(kb_SUMO_13320,axiom,
    s__subclass(s__MusicalConducting,s__Guiding) ).

fof(kb_SUMO_13321,axiom,
    s__documentation(s__MusicalConducting,s__EnglishLanguage,'An &%instance of &%MusicalConducting is a &%Guiding in which the patient (entity guided) is a &%Musician or a &%MusicalGroup.') ).

fof(kb_SUMO_13322,axiom,
    ! [V__CONDUCT] :
      ( s__instance(V__CONDUCT,s__Process)
     => ( s__instance(V__CONDUCT,s__MusicalConducting)
       => ? [V__MUSIC] :
            ( s__instance(V__MUSIC,s__Process)
            & s__instance(V__MUSIC,s__MusicalPerformance)
            & s__subProcess(V__CONDUCT,V__MUSIC) ) ) ) ).

%FOL fof(kb_SUMO_13323,axiom,(( (! [V__CONDUCT,V__PATIENT] : ((s__instance(V__PATIENT,s__Object) & s__instance(V__CONDUCT,s__Process)) => ((s__instance(V__CONDUCT,s__MusicalConducting) & s__patient(V__CONDUCT,V__PATIENT)) => (s__instance(V__PATIENT,s__MusicalGroup) | s__holdsDuring(s__WhenFn(V__CONDUCT),'s__attribute(V__PATIENT,s__Musician)'))))) ))).

fof(kb_SUMO_13324,axiom,
    s__subclass(s__OrchestralConducting,s__MusicalConducting) ).

fof(kb_SUMO_13325,axiom,
    s__instance(s__OrchestralConducting__t,s__SetOrClass) ).

fof(kb_SUMO_13326,axiom,
    s__instance(s__MusicalConducting__t,s__SetOrClass) ).

fof(kb_SUMO_13327,axiom,
    s__documentation(s__OrchestralConducting,s__EnglishLanguage,'&%OrchestralConducting is a type of &%MusicalConducting where the patient is an &%Orchestra.') ).

fof(kb_SUMO_13328,axiom,
    ! [V__GRP,V__CONDUCT] :
      ( s__instance(V__CONDUCT,s__Process)
     => ( ( s__instance(V__CONDUCT,s__OrchestralConducting)
          & s__patient(V__CONDUCT,V__GRP) )
       => s__instance(V__CONDUCT,s__Orchestra) ) ) ).

fof(kb_SUMO_13329,axiom,
    s__subclass(s__MusicalGroup,s__GroupOfPeople) ).

fof(kb_SUMO_13330,axiom,
    s__documentation(s__MusicalGroup,s__EnglishLanguage,'A &%GroupOfPeople that create &%MakingMusic together.') ).

fof(kb_SUMO_13331,axiom,
    s__subclass(s__Orchestra,s__MusicalGroup) ).

fof(kb_SUMO_13332,axiom,
    s__instance(s__Orchestra__t,s__SetOrClass) ).

fof(kb_SUMO_13333,axiom,
    s__instance(s__MusicalGroup__t,s__SetOrClass) ).

fof(kb_SUMO_13334,axiom,
    s__documentation(s__Orchestra,s__EnglishLanguage,'A &%GroupOfPeople that create &%MakingInstrumentalMusic together.') ).

fof(kb_SUMO_13335,axiom,
    ! [V__ORCHESTRA] :
      ( s__instance(V__ORCHESTRA,s__Agent)
     => ( s__instance(V__ORCHESTRA,s__Orchestra)
       => s__hasPurpose(V__ORCHESTRA,'(? [V__MUSIC] : (s__instance(V__MUSIC,s__Process) & s__instance(V__MUSIC,s__MakingInstrumentalMusic) & s__agent(V__MUSIC,V__ORCHESTRA)))') ) ) ).

fof(kb_SUMO_13336,axiom,
    s__subclass(s__DramaticDirecting,s__Guiding) ).

fof(kb_SUMO_13337,axiom,
    s__instance(s__DramaticDirecting__t,s__SetOrClass) ).

fof(kb_SUMO_13338,axiom,
    s__documentation(s__DramaticDirecting,s__EnglishLanguage,'The process of directing a &%DramaticActing in a &%MotionPicture or the &%Performance of a &%DramaticPlay.') ).

fof(kb_SUMO_13339,axiom,
    ! [V__DIRECT,V__ACT] :
      ( s__instance(V__DIRECT,s__Process)
     => ( ( s__instance(V__DIRECT,s__DramaticDirecting)
          & s__patient(V__DIRECT,V__ACT) )
       => s__instance(V__ACT,s__DramaticActing) ) ) ).

fof(kb_SUMO_13340,axiom,
    s__subclass(s__Sharing,s__ChangeOfPossession) ).

fof(kb_SUMO_13341,axiom,
    s__instance(s__Sharing__t,s__SetOrClass) ).

fof(kb_SUMO_13342,axiom,
    s__documentation(s__Sharing,s__EnglishLanguage,'The subclass of &%ChangeOfPossession where a &%properPart of the &%patient is given by the &%agent or the &%destination.') ).

fof(kb_SUMO_13343,axiom,
    ! [V__OBJ,V__SHARE,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__SHARE,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__SHARE,s__Sharing)
          & s__agent(V__SHARE,V__AGENT1)
          & s__destination(V__SHARE,V__AGENT2)
          & s__patient(V__SHARE,V__OBJ) )
       => ? [V__GIVE,V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__GIVE,s__Process)
            & s__instance(V__GIVE,s__Giving)
            & s__subProcess(V__GIVE,V__SHARE)
            & s__patient(V__GIVE,V__PART)
            & s__properPart(V__PART,V__OBJ)
            & s__agent(V__GIVE,V__AGENT1)
            & s__destination(V__GIVE,V__AGENT2) ) ) ) ).

fof(kb_SUMO_13344,axiom,
    s__subclass(s__Stealing,s__UnilateralGetting) ).

fof(kb_SUMO_13345,axiom,
    s__subclass(s__Stealing,s__CriminalAction) ).

fof(kb_SUMO_13346,axiom,
    s__instance(s__Stealing__t,s__SetOrClass) ).

fof(kb_SUMO_13347,axiom,
    s__documentation(s__Stealing,s__EnglishLanguage,'Any &%UnilateralGetting which is not permitted by the &%origin of the &%UnilateralGetting. These cases of &%UnilateralGetting are distinguished from ones where the &%destination is the subject of charity or other forms of benefaction.') ).

%FOL fof(kb_SUMO_13348,axiom,(( (! [V__VICTIM,V__STEAL,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__STEAL,s__Process) & s__instance(V__VICTIM,s__Object)) => ((s__instance(V__STEAL,s__Stealing) & s__destination(V__STEAL,V__AGENT) & s__origin(V__STEAL,V__VICTIM) & s__instance(V__VICTIM,s__CognitiveAgent)) => (~ s__confersRight('s__destination(V__STEAL,V__AGENT)',V__VICTIM,V__AGENT))))) ))).

fof(kb_SUMO_13349,axiom,
    s__subclass(s__Robbing,s__Stealing) ).

fof(kb_SUMO_13350,axiom,
    s__documentation(s__Robbing,s__EnglishLanguage,'Any instance of &%Stealing which involves the threat of the use of force.') ).

fof(kb_SUMO_13351,axiom,
    ! [V__P,V__R,V__P2] :
      ( ( s__instance(V__R,s__Process)
        & s__instance(V__P,s__Agent) )
     => ( ( s__instance(V__R,s__Robbing)
          & s__agent(V__R,V__P)
          & s__patient(V__R,V__P2) )
       => ? [V__T] :
            ( s__instance(V__T,s__Threatening)
            & s__subProcess(V__T,V__R)
            & s__patient(V__T,'(? [V__A] : (s__instance(V__A,s__Process) & s__instance(V__T,s__Process) & s__instance(V__A,s__Attack) & s__agent(V__A,V__P) & s__patient(V__A,V__P2)))') ) ) ) ).

fof(kb_SUMO_13352,axiom,
    s__subclass(s__Inheriting,s__UnilateralGetting) ).

fof(kb_SUMO_13353,axiom,
    s__instance(s__Inheriting__t,s__SetOrClass) ).

fof(kb_SUMO_13354,axiom,
    s__documentation(s__Inheriting,s__EnglishLanguage,'Any &%UnilateralGetting where the &%agent receives some part of the property of a person upon the death of the person.') ).

%FOL fof(kb_SUMO_13355,axiom,(( (! [V__PROPERTY,V__PERSON,V__HEIR,V__INHERIT] : ((s__instance(V__INHERIT,s__Process) & s__instance(V__HEIR,s__CognitiveAgent) & s__instance(V__PERSON,s__Agent) & s__instance(V__PROPERTY,s__Object)) => ((s__instance(V__INHERIT,s__Inheriting) & s__agent(V__INHERIT,V__HEIR) & s__origin(V__INHERIT,V__PERSON) & s__patient(V__INHERIT,V__PROPERTY)) => (? [V__DEATH] : (s__instance(V__DEATH,s__Process) & s__instance(V__DEATH,s__Death) & s__experiencer(V__DEATH,V__PERSON) & s__earlier(s__WhenFn(V__DEATH),s__WhenFn(V__INHERIT)) & s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__DEATH)),'s__possesses(V__PERSON,V__PROPERTY)') & s__confersRight('s__possesses(V__HEIR,V__PROPERTY)',V__PERSON,V__HEIR)))))) ))).

fof(kb_SUMO_13356,axiom,
    s__subclass(s__Awarding,s__UnilateralGiving) ).

fof(kb_SUMO_13357,axiom,
    s__instance(s__Awarding__t,s__SetOrClass) ).

fof(kb_SUMO_13358,axiom,
    s__documentation(s__Awarding,s__EnglishLanguage,'&%Giving to any &%Agent for doing some &%Process.') ).

fof(kb_SUMO_13359,axiom,
    s__termFormat(s__EnglishLanguage,s__Awarding,awarding) ).

fof(kb_SUMO_13360,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Process)
     => ( s__instance(V__A,s__Awarding)
       => ? [V__RECIPIENT,V__GIVER,V__PROCESS,V__AWARD] :
            ( s__instance(V__RECIPIENT,s__Agent)
            & s__instance(V__GIVER,s__Agent)
            & s__instance(V__PROCESS,s__Process)
            & s__instance(V__AWARD,s__Object)
            & s__agent(V__PROCESS,V__RECIPIENT)
            & s__agent(V__A,V__GIVER)
            & s__patient(V__A,V__AWARD)
            & s__destination(V__A,V__RECIPIENT)
            & s__causes(V__PROCESS,V__A) ) ) ) ).

fof(kb_SUMO_13361,axiom,
    s__instance(s__hasAward__m,s__BinaryPredicate) ).

fof(kb_SUMO_13362,axiom,
    s__domain(s__hasAward__m,"1",s__Agent) ).

fof(kb_SUMO_13363,axiom,
    s__domain(s__hasAward__m,"2",s__Object) ).

fof(kb_SUMO_13364,axiom,
    s__documentation(s__hasAward__m,s__EnglishLanguage,'(hasAward ?RECIPIENT ?AWARD) means the &%Agent ?RECIPIENT recieved the &%Object ?AWARD as an award for some action they did.') ).

fof(kb_SUMO_13365,axiom,
    s__termFormat(s__EnglishLanguage,s__hasAward__m,'has award') ).

fof(kb_SUMO_13366,axiom,
    ! [V__RECIPIENT,V__AWARD] :
      ( ( s__instance(V__AWARD,s__Object)
        & s__instance(V__RECIPIENT,s__Agent) )
     => ( s__hasAward(V__RECIPIENT,V__AWARD)
       => ? [V__A] :
            ( s__instance(V__A,s__Process)
            & s__instance(V__A,s__Awarding)
            & s__destination(V__A,V__RECIPIENT)
            & s__patient(V__A,V__AWARD) ) ) ) ).

fof(kb_SUMO_13367,axiom,
    s__subclass(s__Bequeathing,s__UnilateralGiving) ).

fof(kb_SUMO_13368,axiom,
    s__instance(s__Bequeathing__t,s__SetOrClass) ).

fof(kb_SUMO_13369,axiom,
    s__documentation(s__Bequeathing,s__EnglishLanguage,'Any &%UnilateralGiving where the agent wills some part of his/her property to someone else upon his/her death.') ).

%FOL fof(kb_SUMO_13370,axiom,(( (! [V__P,V__B,V__H,V__PROP,V__I] : ((s__instance(V__I,s__Process) & s__instance(V__PROP,s__Object) & s__instance(V__H,s__Agent) & s__instance(V__B,s__Process) & s__instance(V__P,s__Agent)) => ((s__instance(V__B,s__Bequeathing) & s__agent(V__B,V__P) & s__destination(V__B,V__H) & s__patient(V__I,V__PROP)) => (? [V__D] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Death) & s__experiencer(V__D,V__P) & s__earlier(s__WhenFn(V__D),s__WhenFn(V__B)) & s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__D)),'s__possesses(V__P,V__PROP)') & s__confersNorm(V__P,'s__possesses(V__H,V__PROP)',s__Permission)))))) ))).

fof(kb_SUMO_13371,axiom,
    s__subclass(s__SeizingProperty,s__UnilateralGetting) ).

fof(kb_SUMO_13372,axiom,
    s__instance(s__SeizingProperty__t,s__SetOrClass) ).

fof(kb_SUMO_13373,axiom,
    s__documentation(s__SeizingProperty,s__EnglishLanguage,'Any instance of &%UnilateralGetting which is done by a &%Government and which is not permitted by the origin of the &%UnilateralGetting.') ).

%FOL fof(kb_SUMO_13374,axiom,(( (! [V__A,V__S,V__V] : ((s__instance(V__V,s__Object) & s__instance(V__S,s__Process)) => ((s__instance(V__S,s__SeizingProperty) & s__destination(V__S,V__A) & s__origin(V__S,V__V) & s__instance(V__V,s__CognitiveAgent)) => (s__instance(V__A,s__Government) & (~ s__confersNorm(V__V,'s__destination(V__S,V__A)',s__Permission)))))) ))).

fof(kb_SUMO_13375,axiom,
    s__partition_3(s__Position,s__FullTimePosition,s__PartTimePosition) ).

fof(kb_SUMO_13376,axiom,
    s__subclass(s__FullTimePosition,s__Position) ).

fof(kb_SUMO_13377,axiom,
    s__instance(s__FullTimePosition__t,s__SetOrClass) ).

fof(kb_SUMO_13378,axiom,
    s__documentation(s__FullTimePosition,s__EnglishLanguage,'Any &%Position where the employee is either salaried or paid for at least 40 hour of work per week.') ).

fof(kb_SUMO_13379,axiom,
    s__subclass(s__PartTimePosition,s__Position) ).

fof(kb_SUMO_13380,axiom,
    s__documentation(s__PartTimePosition,s__EnglishLanguage,'Any &%Position where the employee is not salaried and is paid for less than 40 hours of work per week.') ).

fof(kb_SUMO_13381,axiom,
    s__instance(s__CollegeFreshman,s__CollegeStudentPosition) ).

fof(kb_SUMO_13382,axiom,
    s__instance(s__CollegeStudentPosition__t,s__SetOrClass) ).

fof(kb_SUMO_13383,axiom,
    s__documentation(s__CollegeFreshman,s__EnglishLanguage,'The &%Positions of a student at a &%PostSecondarySchool who has completed less than one year at the school.') ).

%FOL fof(kb_SUMO_13384,axiom,(( (! [V__P,V__H,V__ORG] : ((s__instance(V__ORG,s__EducationalOrganization) & s__instance(V__H,s__Human) & s__instance(V__P,s__Object) & s__instance(V__P,s__Position)) => ((s__attribute(V__P,s__CollegeFreshman) & s__occupiesPosition(V__H,V__P,V__ORG)) => (? [V__T] : (s__instance(V__T,s__TimePosition) & s__holdsDuring(V__T,'s__student(V__H,V__ORG)') & less(V__T,s__MeasureFn(1,s__YearDuration))))))) ))).

fof(kb_SUMO_13385,axiom,
    s__instance(s__CollegeJunior,s__CollegeStudentPosition) ).

fof(kb_SUMO_13386,axiom,
    s__documentation(s__CollegeJunior,s__EnglishLanguage,'The &%Positions of a student at a &%PostSecondarySchool who has completed at least two years and less than three years at the school.') ).

%FOL fof(kb_SUMO_13387,axiom,(( (! [V__P,V__H,V__ORG] : ((s__instance(V__ORG,s__EducationalOrganization) & s__instance(V__H,s__Human) & s__instance(V__P,s__Object) & s__instance(V__P,s__Position)) => ((s__attribute(V__P,s__CollegeJunior) & s__occupiesPosition(V__H,V__P,V__ORG)) => (? [V__T] : (s__instance(V__T,s__TimePosition) & s__holdsDuring(V__T,'s__student(V__H,V__ORG)') & greatereq(V__T,s__MeasureFn(2,s__YearDuration)) & less(V__T,s__MeasureFn(3,s__YearDuration))))))) ))).

fof(kb_SUMO_13388,axiom,
    s__instance(s__CollegeSenior,s__CollegeStudentPosition) ).

fof(kb_SUMO_13389,axiom,
    s__documentation(s__CollegeSenior,s__EnglishLanguage,'The &%Positions of a student at a &%PostSecondarySchool who has completed at least three years and less than four years at the school.') ).

%FOL fof(kb_SUMO_13390,axiom,(( (! [V__P,V__H,V__ORG] : ((s__instance(V__ORG,s__EducationalOrganization) & s__instance(V__H,s__Human) & s__instance(V__P,s__Object) & s__instance(V__P,s__Position)) => ((s__attribute(V__P,s__CollegeJunior) & s__occupiesPosition(V__H,V__P,V__ORG)) => (? [V__T] : (s__instance(V__T,s__TimePosition) & s__holdsDuring(V__T,'s__student(V__H,V__ORG)') & greatereq(V__T,s__MeasureFn(3,s__YearDuration)) & less(V__T,s__MeasureFn(4,s__YearDuration))))))) ))).

fof(kb_SUMO_13391,axiom,
    s__instance(s__CollegeSophomore,s__CollegeStudentPosition) ).

fof(kb_SUMO_13392,axiom,
    s__documentation(s__CollegeSophomore,s__EnglishLanguage,'The &%Positions of a student at a &%PostSecondarySchool who has completed at least one year and less than two years at the school.') ).

%FOL fof(kb_SUMO_13393,axiom,(( (! [V__P,V__H,V__ORG] : ((s__instance(V__ORG,s__EducationalOrganization) & s__instance(V__H,s__Human) & s__instance(V__P,s__Object) & s__instance(V__P,s__Position)) => ((s__attribute(V__P,s__CollegeSophomore) & s__occupiesPosition(V__H,V__P,V__ORG)) => (? [V__T] : (s__instance(V__T,s__TimePosition) & s__holdsDuring(V__T,'s__student(V__H,V__ORG)') & greatereq(V__T,s__MeasureFn(2,s__YearDuration)) & less(V__T,s__MeasureFn(2,s__YearDuration))))))) ))).

fof(kb_SUMO_13394,axiom,
    s__subclass(s__CollegeStudentPosition,s__Position) ).

fof(kb_SUMO_13395,axiom,
    s__documentation(s__CollegeStudentPosition,s__EnglishLanguage,'Any &%Position at a &%PostSecondarySchool which is occupied exclusively by students.') ).

fof(kb_SUMO_13396,axiom,
    s__instance(s__Comedian,s__EntertainmentProfession) ).

fof(kb_SUMO_13397,axiom,
    s__instance(s__EntertainmentProfession__t,s__SetOrClass) ).

fof(kb_SUMO_13398,axiom,
    s__documentation(s__Comedian,s__EnglishLanguage,'&%Positions which involve performing stand-up comedy, which is recorded and/or performed in front of live audiences.') ).

fof(kb_SUMO_13399,axiom,
    ! [V__P,V__PREF] :
      ( ( s__instance(V__PREF,s__Process)
        & s__instance(V__P,s__Agent) )
     => ( s__attribute(V__P,s__Comedian)
       => ? [V__PERF,V__L] :
            ( s__instance(V__L,s__Process)
            & s__instance(V__PERF,s__Process)
            & s__instance(V__PERF,s__Performance)
            & s__agent(V__PREF,V__P)
            & s__instance(V__L,s__Laughing)
            & s__causes(V__PERF,V__L) ) ) ) ).

fof(kb_SUMO_13400,axiom,
    s__instance(s__Treasurer,s__SkilledOccupation) ).

fof(kb_SUMO_13401,axiom,
    s__documentation(s__Treasurer,s__EnglishLanguage,'Any &%SkilledOccupation which involves receiving and disbursing money.') ).

fof(kb_SUMO_13402,axiom,
    s__subclass(s__SalesPosition,s__SkilledOccupation) ).

fof(kb_SUMO_13403,axiom,
    s__instance(s__SalesPosition__t,s__SetOrClass) ).

fof(kb_SUMO_13404,axiom,
    s__documentation(s__SalesPosition,s__EnglishLanguage,'Any &%Position which involves &%Selling or trying to sell items.') ).

fof(kb_SUMO_13405,axiom,
    s__instance(s__ClericalSecretary,s__SkilledOccupation) ).

fof(kb_SUMO_13406,axiom,
    s__documentation(s__ClericalSecretary,s__EnglishLanguage,'The class of &%Positions where the position holder is responsible for clerical duties, e.g. typing documents, answering phones, keeping schedules, etc.') ).

fof(kb_SUMO_13407,axiom,
    s__subclass(s__ServicePosition,s__SkilledOccupation) ).

fof(kb_SUMO_13408,axiom,
    s__documentation(s__ServicePosition,s__EnglishLanguage,'Any &%Position which involves working as a waiter or servant, either for an &%Organization (e.g. a restaurant) or for a person or family.') ).

fof(kb_SUMO_13409,axiom,
    s__instance(s__Dentist,s__Profession) ).

fof(kb_SUMO_13410,axiom,
    s__documentation(s__Dentist,s__EnglishLanguage,'The &%Profession of being a dentist, i.e. diagnosing and treating problems related to the teeth.') ).

fof(kb_SUMO_13411,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Agent)
     => ( s__attribute(V__P,s__Dentist)
       => ? [V__D,V__T] :
            ( s__instance(V__D,s__Process)
            & s__instance(V__D,s__DiagnosticProcess)
            & s__agent(V__D,V__P)
            & s__instance(V__T,s__Tooth)
            & s__patient(V__D,V__T) ) ) ) ).

fof(kb_SUMO_13412,axiom,
    s__instance(s__Pharmacist,s__Profession) ).

fof(kb_SUMO_13413,axiom,
    s__documentation(s__Pharmacist,s__EnglishLanguage,'The &%Profession of being a pharmacist, i.e. preparing and dispensing &%BiologicallyActiveSubstances.') ).

fof(kb_SUMO_13414,axiom,
    s__instance(s__Researcher,s__Profession) ).

fof(kb_SUMO_13415,axiom,
    s__documentation(s__Researcher,s__EnglishLanguage,'The &%Profession of being a scientific researcher.') ).

fof(kb_SUMO_13416,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Human)
     => ( s__attribute(V__P,s__Researcher)
       => ? [V__S] :
            ( s__instance(V__S,s__FieldOfStudy)
            & s__instance(V__S,s__Science)
            & s__hasExpertise(V__P,V__S) ) ) ) ).

fof(kb_SUMO_13417,axiom,
    s__instance(s__Teacher,s__Profession) ).

fof(kb_SUMO_13418,axiom,
    s__instance(s__Profession__t,s__SetOrClass) ).

fof(kb_SUMO_13419,axiom,
    s__documentation(s__Teacher,s__EnglishLanguage,'The &%Profession of being a teacher.') ).

fof(kb_SUMO_13420,axiom,
    ! [V__O,V__P,V__T] :
      ( ( s__instance(V__T,s__Position)
        & s__instance(V__T,s__CognitiveAgent)
        & s__instance(V__P,s__Human)
        & s__instance(V__O,s__EducationalOrganization) )
     => ( ( s__instance(V__T,s__Teacher)
          & s__occupiesPosition(V__P,V__T,V__O) )
       => s__teacher(V__T,V__O) ) ) ).

fof(kb_SUMO_13421,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Agent)
     => ( s__instance(V__T,s__Teacher)
       => s__hasSkill(s__EducationalProcess,V__T) ) ) ).

fof(kb_SUMO_13422,axiom,
    s__subclass(s__EntertainmentProfession,s__SkilledOccupation) ).

fof(kb_SUMO_13423,axiom,
    s__documentation(s__EntertainmentProfession,s__EnglishLanguage,'Positions which involve creating content or performances that are intended to entertain. This class covers the &%TheaterProfession, &%FilmMakingProfession, being a comedian, etc.') ).

fof(kb_SUMO_13424,axiom,
    ! [V__P,V__EP] :
      ( ( s__instance(V__EP,s__Attribute)
        & s__instance(V__P,s__Human) )
     => ( ( s__instance(V__EP,s__EntertainmentProfession)
          & s__attribute(V__P,V__EP) )
       => ( s__occupation(V__P,s__OccupationFn(s__Performance))
          | s__occupation(V__P,s__OccupationFn(s__ContentDevelopment)) ) ) ) ).

fof(kb_SUMO_13425,axiom,
    s__subclass(s__SportsPosition,s__SkilledOccupation) ).

fof(kb_SUMO_13426,axiom,
    s__instance(s__SportsPosition__t,s__SetOrClass) ).

fof(kb_SUMO_13427,axiom,
    s__documentation(s__SportsPosition,s__EnglishLanguage,'A &%Position which is filled by someone on a &%SportsTeam and which represents the role played by the person on the team.') ).

fof(kb_SUMO_13428,axiom,
    ! [V__O,V__P,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__P,s__Position)
        & s__instance(V__O,s__Organization) )
     => ( ( s__occupiesPosition(V__H,V__P,V__O)
          & s__instance(V__P,s__SportsPosition) )
       => s__instance(V__O,s__SportsTeam) ) ) ).

fof(kb_SUMO_13429,axiom,
    s__subclass(s__GovernmentPosition,s__Profession) ).

fof(kb_SUMO_13430,axiom,
    s__documentation(s__GovernmentPosition,s__EnglishLanguage,'Any &%Profession where the position occupied is within a &%GovernmentOrganization.') ).

fof(kb_SUMO_13431,axiom,
    ! [V__O,V__P,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__P,s__Human)
        & s__instance(V__O,s__Position) )
     => ( ( s__instance(V__O,s__GovernmentPosition)
          & s__occupiesPosition(V__P,V__O,V__ORG) )
       => s__instance(V__ORG,s__GovernmentOrganization) ) ) ).

fof(kb_SUMO_13432,axiom,
    s__instance(s__Journalist,s__Profession) ).

fof(kb_SUMO_13433,axiom,
    s__documentation(s__Journalist,s__EnglishLanguage,'The &%Profession of being a news reporter, i.e. investigating and reporting, in a publication or broadcast program, current events.') ).

fof(kb_SUMO_13434,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Human)
     => ( s__attribute(V__P,s__Journalist)
       => ( s__occupation(V__P,s__OccupationFn(s__ContentDevelopment))
          & s__occupation(V__P,s__OccupationFn(s__Disseminating)) ) ) ) ).

fof(kb_SUMO_13435,axiom,
    s__subclass(s__ModellingPosition,s__Position) ).

fof(kb_SUMO_13436,axiom,
    s__instance(s__ModellingPosition__t,s__SetOrClass) ).

fof(kb_SUMO_13437,axiom,
    s__documentation(s__ModellingPosition,s__EnglishLanguage,'Any &%Position which involves posing for an artist or photographer.') ).

fof(kb_SUMO_13438,axiom,
    s__instance(s__Soldier,s__GovernmentPosition) ).

fof(kb_SUMO_13439,axiom,
    s__documentation(s__Soldier,s__EnglishLanguage,'This &%Attribute describes someone serving in the armed forces of a &%Nation.') ).

fof(kb_SUMO_13440,axiom,
    s__instance(s__ConfederateSoldier,s__GovernmentPosition) ).

fof(kb_SUMO_13441,axiom,
    s__subAttribute(s__ConfederateSoldier,s__Soldier) ).

fof(kb_SUMO_13442,axiom,
    s__documentation(s__ConfederateSoldier,s__EnglishLanguage,'This &%Attribute describes a &%Soldier who served on the Confederate side during the American Civil War.') ).

fof(kb_SUMO_13443,axiom,
    s__instance(s__Sailor,s__SkilledOccupation) ).

fof(kb_SUMO_13444,axiom,
    s__documentation(s__Sailor,s__EnglishLanguage,'The class of &%Positions which involve working on a ship, whether a merchant ship or a navy ship.') ).

fof(kb_SUMO_13445,axiom,
    s__subAttribute(s__ShipCaptain,s__Sailor) ).

fof(kb_SUMO_13446,axiom,
    s__documentation(s__ShipCaptain,s__EnglishLanguage,'The class of &%Positions which involve the command of a ship.') ).

fof(kb_SUMO_13447,axiom,
    s__subAttribute(s__ShipOfficer,s__Sailor) ).

fof(kb_SUMO_13448,axiom,
    s__documentation(s__ShipOfficer,s__EnglishLanguage,'The class of &%Sailors which have a position of responsibility on a &%Ship.') ).

fof(kb_SUMO_13449,axiom,
    s__subAttribute(s__ShipMate,s__Sailor) ).

fof(kb_SUMO_13450,axiom,
    s__documentation(s__ShipMate,s__EnglishLanguage,'The class of &%Positions that involve some responsibility on a ship and are lower in rank than &%ShipCaptain.') ).

fof(kb_SUMO_13451,axiom,
    s__instance(s__MilitaryPrivate,s__GovernmentPosition) ).

fof(kb_SUMO_13452,axiom,
    s__instance(s__GovernmentPosition__t,s__SetOrClass) ).

fof(kb_SUMO_13453,axiom,
    s__subAttribute(s__MilitaryPrivate,s__Soldier) ).

fof(kb_SUMO_13454,axiom,
    s__documentation(s__MilitaryPrivate,s__EnglishLanguage,'This &%Attribute describes an enlisted &%Soldier of the lowest rank.') ).

fof(kb_SUMO_13455,axiom,
    s__subAttribute(s__MilitaryOfficer,s__Soldier) ).

fof(kb_SUMO_13456,axiom,
    s__instance(s__MilitaryOfficer,s__GovernmentPosition) ).

fof(kb_SUMO_13457,axiom,
    s__documentation(s__MilitaryOfficer,s__EnglishLanguage,'This &%Attribute describes a &%Soldier who has command authority.') ).

fof(kb_SUMO_13458,axiom,
    ! [V__OFFICER] :
      ( s__instance(V__OFFICER,s__Agent)
     => ( s__instance(V__OFFICER,s__MilitaryOfficer)
       => ? [V__MANAGE,V__PATIENT] :
            ( s__instance(V__MANAGE,s__Process)
            & s__instance(V__MANAGE,s__Managing)
            & s__agent(V__MANAGE,V__OFFICER)
            & s__patient(V__MANAGE,V__PATIENT)
            & ( s__instance(V__PATIENT,s__MilitaryOrganization)
              | s__instance(V__PATIENT,s__Soldier) ) ) ) ) ).

fof(kb_SUMO_13459,axiom,
    s__subAttribute(s__MilitaryGeneral,s__MilitaryOfficer) ).

fof(kb_SUMO_13460,axiom,
    s__documentation(s__MilitaryGeneral,s__EnglishLanguage,'&%MilitaryGeneral is a generic &%Position that indicates holding (or having held) the rank of General in some military force. An indicator that someone uses the title, without committing to his or her exact rank or military affiliation.') ).

fof(kb_SUMO_13461,axiom,
    s__subAttribute(s__MajorGeneral,s__MilitaryGeneral) ).

fof(kb_SUMO_13462,axiom,
    s__instance(s__MajorGeneral,s__GovernmentPosition) ).

fof(kb_SUMO_13463,axiom,
    s__documentation(s__MajorGeneral,s__EnglishLanguage,'A &%MilitaryGeneral that ranks above a &%BrigadierGeneral.') ).

fof(kb_SUMO_13464,axiom,
    s__subAttribute(s__BrigadierGeneral,s__MilitaryGeneral) ).

fof(kb_SUMO_13465,axiom,
    s__instance(s__BrigadierGeneral,s__GovernmentPosition) ).

fof(kb_SUMO_13466,axiom,
    s__documentation(s__BrigadierGeneral,s__EnglishLanguage,'A &%MilitaryGeneral that ranks below a &%MajorGeneral.') ).

fof(kb_SUMO_13467,axiom,
    s__subAttribute(s__Lieutenant,s__MilitaryOfficer) ).

fof(kb_SUMO_13468,axiom,
    s__instance(s__Lieutenant,s__GovernmentPosition) ).

fof(kb_SUMO_13469,axiom,
    s__documentation(s__Lieutenant,s__EnglishLanguage,'A commissioned &%MilitaryOfficer.') ).

fof(kb_SUMO_13470,axiom,
    s__subAttribute(s__CaptainOfficer,s__MilitaryOfficer) ).

fof(kb_SUMO_13471,axiom,
    s__instance(s__CaptainOfficer,s__GovernmentPosition) ).

fof(kb_SUMO_13472,axiom,
    s__documentation(s__CaptainOfficer,s__EnglishLanguage,'A commissioned &%MilitaryOfficer who ranks above a &%Lieutenant but below a &%MajorOfficer.') ).

fof(kb_SUMO_13473,axiom,
    s__subAttribute(s__Colonel,s__MilitaryOfficer) ).

fof(kb_SUMO_13474,axiom,
    s__instance(s__Colonel,s__GovernmentPosition) ).

fof(kb_SUMO_13475,axiom,
    s__documentation(s__Colonel,s__EnglishLanguage,'A commissioned &%MilitaryOfficer who ranks above a lieutenant colonel and below a brigadier general.') ).

fof(kb_SUMO_13476,axiom,
    s__subAttribute(s__Sergeant,s__MilitaryOfficer) ).

fof(kb_SUMO_13477,axiom,
    s__instance(s__Sergeant,s__GovernmentPosition) ).

fof(kb_SUMO_13478,axiom,
    s__documentation(s__Sergeant,s__EnglishLanguage,'A noncomissioned &%MilitaryOfficer.') ).

fof(kb_SUMO_13479,axiom,
    s__subAttribute(s__Corporal,s__MilitaryOfficer) ).

fof(kb_SUMO_13480,axiom,
    s__instance(s__Corporal,s__GovernmentPosition) ).

fof(kb_SUMO_13481,axiom,
    s__documentation(s__Corporal,s__EnglishLanguage,'A noncomissioned &%MilitaryOfficer.') ).

fof(kb_SUMO_13482,axiom,
    s__instance(s__CenturyDuration,s__UnitOfDuration) ).

fof(kb_SUMO_13483,axiom,
    s__documentation(s__CenturyDuration,s__EnglishLanguage,'The &%TimeDuration of 100 years.') ).

fof(kb_SUMO_13484,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__CenturyDuration) = s__MeasureFn(times(V__NUMBER,"100"),s__YearDuration) ) ) ).

fof(kb_SUMO_13485,axiom,
    s__instance(s__DecadeDuration,s__UnitOfDuration) ).

fof(kb_SUMO_13486,axiom,
    s__documentation(s__DecadeDuration,s__EnglishLanguage,'The &%TimeDuration of 10 years.') ).

fof(kb_SUMO_13487,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__DecadeDuration) = s__MeasureFn(times(V__NUMBER,"10"),s__YearDuration) ) ) ).

fof(kb_SUMO_13488,axiom,
    s__instance(s__YardLength,s__UnitOfLength) ).

fof(kb_SUMO_13489,axiom,
    s__documentation(s__YardLength,s__EnglishLanguage,'English unit of length, equal to 3 &%FeetLength.') ).

fof(kb_SUMO_13490,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__YardLength) = s__MeasureFn(times("3",V__NUMBER),s__FootLength) ) ) ).

fof(kb_SUMO_13491,axiom,
    s__subclass(s__NightTime,s__TimeInterval) ).

fof(kb_SUMO_13492,axiom,
    s__instance(s__NightTime__t,s__SetOrClass) ).

fof(kb_SUMO_13493,axiom,
    s__documentation(s__NightTime,s__EnglishLanguage,'The class of &%TimeIntervals that begin at &%Sunset and end at &%Sunrise.') ).

fof(kb_SUMO_13494,axiom,
    ! [V__NIGHT] :
      ( s__instance(V__NIGHT,s__TimeInterval)
     => ( s__instance(V__NIGHT,s__NightTime)
       => ? [V__DAY1,V__DAY2] :
            ( s__instance(V__DAY2,s__TimeInterval)
            & s__instance(V__DAY1,s__TimeInterval)
            & s__instance(V__DAY1,s__DayTime)
            & s__instance(V__DAY2,s__DayTime)
            & s__meetsTemporally(V__NIGHT,V__DAY1)
            & s__meetsTemporally(V__DAY2,V__NIGHT) ) ) ) ).

fof(kb_SUMO_13495,axiom,
    ! [V__NIGHT] :
      ( s__instance(V__NIGHT,s__TimeInterval)
     => ( s__instance(V__NIGHT,s__NightTime)
       => ? [V__RISE,V__SET] :
            ( s__instance(V__SET,s__TimeInterval)
            & s__instance(V__RISE,s__TimeInterval)
            & s__instance(V__RISE,s__Sunrise)
            & s__instance(V__SET,s__Sunset)
            & s__starts(V__SET,V__NIGHT)
            & s__finishes(V__RISE,V__NIGHT) ) ) ) ).

fof(kb_SUMO_13496,axiom,
    s__subclass(s__DayTime,s__TimeInterval) ).

fof(kb_SUMO_13497,axiom,
    s__documentation(s__DayTime,s__EnglishLanguage,'The class of &%TimeIntervals that begin at &%Sunrise and end at &%Sunset.') ).

fof(kb_SUMO_13498,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__DayTime)
       => ? [V__NIGHT1,V__NIGHT2] :
            ( s__instance(V__NIGHT2,s__TimeInterval)
            & s__instance(V__NIGHT1,s__TimeInterval)
            & s__instance(V__NIGHT1,s__NightTime)
            & s__instance(V__NIGHT2,s__NightTime)
            & s__meetsTemporally(V__DAY,V__NIGHT1)
            & s__meetsTemporally(V__NIGHT2,V__DAY) ) ) ) ).

fof(kb_SUMO_13499,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__DayTime)
       => ? [V__RISE,V__SET] :
            ( s__instance(V__SET,s__TimeInterval)
            & s__instance(V__RISE,s__TimeInterval)
            & s__instance(V__RISE,s__Sunrise)
            & s__instance(V__SET,s__Sunset)
            & s__starts(V__RISE,V__DAY)
            & s__finishes(V__SET,V__DAY) ) ) ) ).

fof(kb_SUMO_13500,axiom,
    s__subclass(s__Morning,s__DayTime) ).

fof(kb_SUMO_13501,axiom,
    s__instance(s__Morning__t,s__SetOrClass) ).

fof(kb_SUMO_13502,axiom,
    s__instance(s__DayTime__t,s__SetOrClass) ).

fof(kb_SUMO_13503,axiom,
    s__documentation(s__Morning,s__EnglishLanguage,'The class of &%TimeIntervals that begin at &%Sunrise and end at noon.') ).

fof(kb_SUMO_13504,axiom,
    ! [V__DAY,V__MORNING] :
      ( ( s__instance(V__MORNING,s__TimeInterval)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( s__instance(V__MORNING,s__Morning)
       => ? [V__HOUR] :
            ( s__instance(V__HOUR,s__TimeInterval)
            & s__instance(V__HOUR,s__HourFn("12",V__DAY))
            & s__finishes(V__HOUR,V__MORNING) ) ) ) ).

fof(kb_SUMO_13505,axiom,
    s__subclass(s__AnteMeridiem,s__TimeInterval) ).

fof(kb_SUMO_13506,axiom,
    s__instance(s__AnteMeridiem__t,s__SetOrClass) ).

fof(kb_SUMO_13507,axiom,
    s__documentation(s__AnteMeridiem,s__EnglishLanguage,'The class of &%TimeIntervals that begin at midnight and end at noon.') ).

fof(kb_SUMO_13508,axiom,
    ! [V__AM] :
      ( s__instance(V__AM,s__TimeInterval)
     => ( s__instance(V__AM,s__AnteMeridiem)
       => ? [V__D,V__HOUR1,V__HOUR2] :
            ( s__instance(V__HOUR2,s__TimeInterval)
            & s__instance(V__HOUR1,s__TimeInterval)
            & s__subclass(V__D,s__Day)
            & s__instance(V__HOUR1,s__HourFn("24",V__D))
            & s__starts(V__HOUR1,V__AM)
            & s__instance(V__HOUR2,s__HourFn("12",V__D))
            & s__finishes(V__HOUR2,V__AM) ) ) ) ).

fof(kb_SUMO_13509,axiom,
    s__subclass(s__PostMeridiem,s__TimeInterval) ).

fof(kb_SUMO_13510,axiom,
    s__instance(s__PostMeridiem__t,s__SetOrClass) ).

fof(kb_SUMO_13511,axiom,
    s__documentation(s__PostMeridiem,s__EnglishLanguage,'The class of &%TimeIntervals that begin at noon and end at midnight.') ).

fof(kb_SUMO_13512,axiom,
    ! [V__PM] :
      ( s__instance(V__PM,s__TimeInterval)
     => ( s__instance(V__PM,s__PostMeridiem)
       => ? [V__D,V__HOUR1,V__HOUR2] :
            ( s__instance(V__HOUR2,s__TimeInterval)
            & s__instance(V__HOUR1,s__TimeInterval)
            & s__subclass(V__D,s__Day)
            & s__instance(V__HOUR1,s__HourFn("12",V__D))
            & s__starts(V__HOUR1,V__PM)
            & s__instance(V__HOUR2,s__HourFn("24",V__D))
            & s__finishes(V__HOUR2,V__PM) ) ) ) ).

fof(kb_SUMO_13513,axiom,
    s__subclass(s__Afternoon,s__DayTime) ).

fof(kb_SUMO_13514,axiom,
    s__instance(s__Afternoon__t,s__SetOrClass) ).

fof(kb_SUMO_13515,axiom,
    s__documentation(s__Afternoon,s__EnglishLanguage,'The class of &%TimeIntervals that begin at noon and end at &%Sunset.') ).

fof(kb_SUMO_13516,axiom,
    ! [V__DAY,V__AFTERNOON] :
      ( ( s__instance(V__AFTERNOON,s__TimeInterval)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( s__instance(V__AFTERNOON,s__Afternoon)
       => ? [V__HOUR] :
            ( s__instance(V__HOUR,s__TimeInterval)
            & s__instance(V__HOUR,s__HourFn("12",V__DAY))
            & s__starts(V__HOUR,V__AFTERNOON) ) ) ) ).

fof(kb_SUMO_13517,axiom,
    s__subclass(s__Sunrise,s__TimeInterval) ).

fof(kb_SUMO_13518,axiom,
    s__instance(s__Sunrise__t,s__SetOrClass) ).

fof(kb_SUMO_13519,axiom,
    s__documentation(s__Sunrise,s__EnglishLanguage,'The &%TimeInterval of each &%Day when the sun is rising and is partially overlapped by the horizon line.') ).

fof(kb_SUMO_13520,axiom,
    s__subclass(s__Sunset,s__TimeInterval) ).

fof(kb_SUMO_13521,axiom,
    s__instance(s__Sunset__t,s__SetOrClass) ).

fof(kb_SUMO_13522,axiom,
    s__documentation(s__Sunset,s__EnglishLanguage,'The &%TimeInterval of each &%Day when the sun is setting and is partially overlapped by the horizon line.') ).

fof(kb_SUMO_13523,axiom,
    s__subclass(s__Weekend,s__TimeInterval) ).

fof(kb_SUMO_13524,axiom,
    s__instance(s__Weekend__t,s__SetOrClass) ).

fof(kb_SUMO_13525,axiom,
    s__documentation(s__Weekend,s__EnglishLanguage,'Any &%Saturday and &%Sunday which are contiguous.') ).

fof(kb_SUMO_13526,axiom,
    ! [V__WEEKEND] :
      ( s__instance(V__WEEKEND,s__TimeInterval)
     => ( s__instance(V__WEEKEND,s__Weekend)
       => ? [V__SATURDAY,V__SUNDAY] :
            ( s__instance(V__SUNDAY,s__TimeInterval)
            & s__instance(V__SATURDAY,s__TimeInterval)
            & s__instance(V__SATURDAY,s__Saturday)
            & s__instance(V__SUNDAY,s__Sunday)
            & s__starts(V__SATURDAY,V__WEEKEND)
            & s__finishes(V__SUNDAY,V__WEEKEND)
            & s__meetsTemporally(V__SATURDAY,V__SUNDAY) ) ) ) ).

fof(kb_SUMO_13527,axiom,
    s__subclass(s__SeasonOfYear,s__TimeInterval) ).

fof(kb_SUMO_13528,axiom,
    s__partition_5(s__SeasonOfYear,s__WinterSeason,s__SpringSeason,s__SummerSeason,s__FallSeason) ).

fof(kb_SUMO_13529,axiom,
    s__documentation(s__SeasonOfYear,s__EnglishLanguage,'&%SeasonOfYear is the class of four seasons correlated with the calendar &%Year and associated with changes in the length of daylight and with overall temperature changes. Depending upon the &%GeographicArea, a &%SeasonOfYear may also be associated with weather patterns (e.g., rainy, dry, windy). The characteristics of seasons (cold vs. hot temperatures, long vs. short days) are reversed from the &%NorthernHemisphere to the &%SouthernHemisphere.') ).

fof(kb_SUMO_13530,axiom,
    s__subclass(s__WinterSeason,s__SeasonOfYear) ).

fof(kb_SUMO_13531,axiom,
    s__instance(s__WinterSeason__t,s__SetOrClass) ).

fof(kb_SUMO_13532,axiom,
    s__documentation(s__WinterSeason,s__EnglishLanguage,'The &%SeasonOfYear that begins at the winter solstice and ends at the spring equinox.') ).

fof(kb_SUMO_13533,axiom,
    ! [V__WINTER] :
      ( s__instance(V__WINTER,s__TimeInterval)
     => ( s__instance(V__WINTER,s__WinterSeason)
       => ? [V__SPRING] :
            ( s__instance(V__SPRING,s__TimeInterval)
            & s__instance(V__SPRING,s__SpringSeason)
            & s__meetsTemporally(V__WINTER,V__SPRING) ) ) ) ).

fof(kb_SUMO_13534,axiom,
    ! [V__WINTER] :
      ( s__instance(V__WINTER,s__TimeInterval)
     => ( s__instance(V__WINTER,s__WinterSeason)
       => ? [V__AUTUMN] :
            ( s__instance(V__AUTUMN,s__TimeInterval)
            & s__instance(V__AUTUMN,s__FallSeason)
            & s__meetsTemporally(V__AUTUMN,V__WINTER) ) ) ) ).

fof(kb_SUMO_13535,axiom,
    s__subclass(s__SpringSeason,s__SeasonOfYear) ).

fof(kb_SUMO_13536,axiom,
    s__instance(s__SpringSeason__t,s__SetOrClass) ).

fof(kb_SUMO_13537,axiom,
    s__documentation(s__SpringSeason,s__EnglishLanguage,'The &%SeasonOfYear that begins at the spring equinox and ends at the summer solstice. &%SpringSeason is the class of &%TimeIntervals associated with the calendar months of &%March through &%May.') ).

fof(kb_SUMO_13538,axiom,
    ! [V__SPRING] :
      ( s__instance(V__SPRING,s__TimeInterval)
     => ( s__instance(V__SPRING,s__SpringSeason)
       => ? [V__SUMMER] :
            ( s__instance(V__SUMMER,s__TimeInterval)
            & s__instance(V__SUMMER,s__SummerSeason)
            & s__meetsTemporally(V__SPRING,V__SUMMER) ) ) ) ).

fof(kb_SUMO_13539,axiom,
    ! [V__SPRING] :
      ( s__instance(V__SPRING,s__TimeInterval)
     => ( s__instance(V__SPRING,s__SpringSeason)
       => ? [V__WINTER] :
            ( s__instance(V__WINTER,s__TimeInterval)
            & s__instance(V__WINTER,s__WinterSeason)
            & s__meetsTemporally(V__WINTER,V__SPRING) ) ) ) ).

fof(kb_SUMO_13540,axiom,
    s__subclass(s__SummerSeason,s__SeasonOfYear) ).

fof(kb_SUMO_13541,axiom,
    s__instance(s__SummerSeason__t,s__SetOrClass) ).

fof(kb_SUMO_13542,axiom,
    s__documentation(s__SummerSeason,s__EnglishLanguage,'The &%SeasonOfYear that begins at the summer solstice and ends at the autumnal equinox.') ).

fof(kb_SUMO_13543,axiom,
    ! [V__SUMMER] :
      ( s__instance(V__SUMMER,s__TimeInterval)
     => ( s__instance(V__SUMMER,s__SummerSeason)
       => ? [V__SPRING] :
            ( s__instance(V__SPRING,s__TimeInterval)
            & s__instance(V__SPRING,s__SpringSeason)
            & s__meetsTemporally(V__SPRING,V__SUMMER) ) ) ) ).

fof(kb_SUMO_13544,axiom,
    ! [V__SUMMER] :
      ( s__instance(V__SUMMER,s__TimeInterval)
     => ( s__instance(V__SUMMER,s__SummerSeason)
       => ? [V__AUTUMN] :
            ( s__instance(V__AUTUMN,s__TimeInterval)
            & s__instance(V__AUTUMN,s__FallSeason)
            & s__meetsTemporally(V__SUMMER,V__AUTUMN) ) ) ) ).

fof(kb_SUMO_13545,axiom,
    s__subclass(s__FallSeason,s__SeasonOfYear) ).

fof(kb_SUMO_13546,axiom,
    s__instance(s__FallSeason__t,s__SetOrClass) ).

fof(kb_SUMO_13547,axiom,
    s__instance(s__SeasonOfYear__t,s__SetOrClass) ).

fof(kb_SUMO_13548,axiom,
    s__documentation(s__FallSeason,s__EnglishLanguage,'The &%SeasonOfYear that begins at the autumnal equinox and ends at the winter solstice.') ).

fof(kb_SUMO_13549,axiom,
    ! [V__AUTUMN] :
      ( s__instance(V__AUTUMN,s__TimeInterval)
     => ( s__instance(V__AUTUMN,s__FallSeason)
       => ? [V__SUMMER] :
            ( s__instance(V__SUMMER,s__TimeInterval)
            & s__instance(V__SUMMER,s__SummerSeason)
            & s__meetsTemporally(V__SUMMER,V__AUTUMN) ) ) ) ).

fof(kb_SUMO_13550,axiom,
    ! [V__AUTUMN] :
      ( s__instance(V__AUTUMN,s__TimeInterval)
     => ( s__instance(V__AUTUMN,s__FallSeason)
       => ? [V__WINTER] :
            ( s__instance(V__WINTER,s__TimeInterval)
            & s__instance(V__WINTER,s__WinterSeason)
            & s__meetsTemporally(V__AUTUMN,V__WINTER) ) ) ) ).

fof(kb_SUMO_13551,axiom,
    s__instance(s__Upstairs,s__PositionalAttribute) ).

fof(kb_SUMO_13552,axiom,
    s__documentation(s__Upstairs,s__EnglishLanguage,'A &%PositionalAttribute to indicate that one thing is one or more floors above a second thing in the same building.') ).

fof(kb_SUMO_13553,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Upstairs)
       => ? [V__LEVEL1,V__LEVEL2,V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__LEVEL2,s__Object)
            & s__instance(V__LEVEL1,s__Object)
            & s__instance(V__LEVEL1,s__BuildingLevel)
            & s__instance(V__LEVEL2,s__BuildingLevel)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__LEVEL1,V__BUILDING)
            & s__part(V__LEVEL2,V__BUILDING)
            & s__located(V__OBJ1,V__LEVEL1)
            & s__located(V__OBJ2,V__LEVEL2)
            & s__orientation(V__LEVEL1,V__LEVEL2,s__Above) ) ) ) ).

fof(kb_SUMO_13554,axiom,
    s__instance(s__Downstairs,s__PositionalAttribute) ).

fof(kb_SUMO_13555,axiom,
    s__documentation(s__Downstairs,s__EnglishLanguage,'A &%PositionalAttribute to indicate that one thing is one or more floors below a second thing in the same building.') ).

fof(kb_SUMO_13556,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Downstairs)
       => ? [V__LEVEL1,V__LEVEL2,V__BUILDING] :
            ( s__instance(V__BUILDING,s__Object)
            & s__instance(V__LEVEL2,s__Object)
            & s__instance(V__LEVEL1,s__Object)
            & s__instance(V__LEVEL1,s__BuildingLevel)
            & s__instance(V__LEVEL2,s__BuildingLevel)
            & s__instance(V__BUILDING,s__Building)
            & s__part(V__LEVEL1,V__BUILDING)
            & s__part(V__LEVEL2,V__BUILDING)
            & s__located(V__OBJ1,V__LEVEL1)
            & s__located(V__OBJ2,V__LEVEL2)
            & s__orientation(V__LEVEL1,V__LEVEL2,s__Below) ) ) ) ).

fof(kb_SUMO_13557,axiom,
    s__subclass(s__LinguisticAttribute,s__InternalAttribute) ).

fof(kb_SUMO_13558,axiom,
    s__instance(s__LinguisticAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13559,axiom,
    s__documentation(s__LinguisticAttribute,s__EnglishLanguage,'Any &%Attribute that is expressed by a &%Language or class of &%Languages.') ).

fof(kb_SUMO_13560,axiom,
    s__instance(s__Happiness,s__EmotionalState) ).

fof(kb_SUMO_13561,axiom,
    s__documentation(s__Happiness,s__EnglishLanguage,'The state of being happy, experiencing pleasure, joy or contentment. Note that this &%Attribute covers both active enjoyment, as well as the emotional state of simply being free from anxiety or fear.') ).

fof(kb_SUMO_13562,axiom,
    ! [V__PERSON] :
      ( s__instance(V__PERSON,s__CognitiveAgent)
     => ( s__attribute(V__PERSON,s__Happiness)
       => ~ ? [V__PROP] :
              ( s__instance(V__PROP,s__Formula)
              & s__fears(V__PERSON,V__PROP) ) ) ) ).

fof(kb_SUMO_13563,axiom,
    s__subAttribute(s__Satisfaction,s__Happiness) ).

fof(kb_SUMO_13564,axiom,
    s__documentation(s__Satisfaction,s__EnglishLanguage,'The state of being happy about a state of affairs that occurred in the past. In cases where that state of affairs is the product of ones own doing, this is known as pride.') ).

fof(kb_SUMO_13565,axiom,
    s__subAttribute(s__Tranquility,s__Happiness) ).

fof(kb_SUMO_13566,axiom,
    s__contraryAttribute_2(s__Tranquility,s__Anxiety) ).

fof(kb_SUMO_13567,axiom,
    s__documentation(s__Tranquility,s__EnglishLanguage,'The state of being free from &%Anxiety.') ).

fof(kb_SUMO_13568,axiom,
    s__instance(s__Unhappiness,s__EmotionalState) ).

fof(kb_SUMO_13569,axiom,
    s__contraryAttribute_2(s__Unhappiness,s__Happiness) ).

fof(kb_SUMO_13570,axiom,
    s__documentation(s__Unhappiness,s__EnglishLanguage,'The state of being unhappy, experiencing pain, sorrow or unease.') ).

fof(kb_SUMO_13571,axiom,
    s__subAttribute(s__Excitement,s__Happiness) ).

fof(kb_SUMO_13572,axiom,
    s__documentation(s__Excitement,s__EnglishLanguage,'The state of being happy about a state of affairs that might occur in the future.') ).

fof(kb_SUMO_13573,axiom,
    s__subAttribute(s__Anxiety,s__Unhappiness) ).

fof(kb_SUMO_13574,axiom,
    s__documentation(s__Anxiety,s__EnglishLanguage,'The state of being worried, troubled or uneasy.') ).

fof(kb_SUMO_13575,axiom,
    ! [V__PERSON] :
      ( s__instance(V__PERSON,s__CognitiveAgent)
     => ( s__attribute(V__PERSON,s__Anxiety)
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Formula)
            & s__fears(V__PERSON,V__PROP) ) ) ) ).

fof(kb_SUMO_13576,axiom,
    s__subAttribute(s__Anger,s__Unhappiness) ).

fof(kb_SUMO_13577,axiom,
    s__documentation(s__Anger,s__EnglishLanguage,'The state of being wrathful, irate or indignant.') ).

fof(kb_SUMO_13578,axiom,
    ! [V__PERSON] :
      ( s__instance(V__PERSON,s__CognitiveAgent)
     => ( s__attribute(V__PERSON,s__Anger)
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Formula)
            & s__disapproves(V__PERSON,V__PROP) ) ) ) ).

fof(kb_SUMO_13579,axiom,
    s__subAttribute(s__Pain,s__Unhappiness) ).

fof(kb_SUMO_13580,axiom,
    s__documentation(s__Pain,s__EnglishLanguage,'A physical sensation of discomfort which can vary widely in intensity.') ).

fof(kb_SUMO_13581,axiom,
    s__subAttribute(s__Headache,s__Pain) ).

fof(kb_SUMO_13582,axiom,
    s__documentation(s__Headache,s__EnglishLanguage,'&%Pain that that is restricted to the &%Head.') ).

fof(kb_SUMO_13583,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__Object)
     => ( s__attribute(V__E,s__Headache)
       => ? [V__H] :
            ( s__instance(V__H,s__Object)
            & s__instance(V__H,s__Head)
            & s__part(V__H,V__E)
            & s__attribute(V__H,s__Pain) ) ) ) ).

fof(kb_SUMO_13584,axiom,
    s__instance(s__Surprise,s__EmotionalState) ).

fof(kb_SUMO_13585,axiom,
    s__documentation(s__Surprise,s__EnglishLanguage,'The &%EmotionalState that one experiences when something unexpected and of significance occurs.') ).

%FOL fof(kb_SUMO_13586,axiom,(( (! [V__TIME,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__attribute(V__AGENT,s__Surprise)') => (? [V__PART,V__PROP] : (s__instance(V__PROP,s__Formula) & s__instance(V__PART,s__TimePosition) & s__temporalPart(V__PART,s__PastFn(V__TIME)) & s__holdsDuring(V__PART,'s__expects(V__AGENT,V__PROP)') & s__holdsDuring(V__TIME,'s__truth(V__PROP,'$false__m')')))))) ))).

fof(kb_SUMO_13587,axiom,
    s__instance(s__structure__m,s__BinaryPredicate) ).

fof(kb_SUMO_13588,axiom,
    s__instance(s__structure__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_13589,axiom,
    s__instance(s__structure__m,s__AsymmetricRelation) ).

fof(kb_SUMO_13590,axiom,
    s__subrelation(s__structure__m,s__attribute__m) ).

fof(kb_SUMO_13591,axiom,
    s__domain(s__structure__m,"1",s__Object) ).

fof(kb_SUMO_13592,axiom,
    s__domain(s__structure__m,"2",s__StructureAttribute) ).

fof(kb_SUMO_13593,axiom,
    s__subrelation(s__color__m,s__attribute__m) ).

fof(kb_SUMO_13594,axiom,
    s__domain(s__color__m,"1",s__Object) ).

fof(kb_SUMO_13595,axiom,
    s__domain(s__color__m,"2",s__ColorAttribute) ).

%FOL fof(kb_SUMO_13596,axiom,(( (! [V__OBJ,V__T1,V__ATTR] : ((s__instance(V__T1,s__TimePosition) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__ATTR,s__ColorAttribute) & s__holdsDuring(V__T1,'s__attribute(V__OBJ,V__ATTR)')) => s__holdsDuring(V__T1,'s__color(V__OBJ,V__ATTR)')))) ))).

fof(kb_SUMO_13597,axiom,
    s__subclass(s__SecondaryColor,s__ColorAttribute) ).

fof(kb_SUMO_13598,axiom,
    s__instance(s__SecondaryColor__t,s__SetOrClass) ).

fof(kb_SUMO_13599,axiom,
    s__documentation(s__SecondaryColor,s__EnglishLanguage,'A color that is the product of mixing together two or more &%PrimaryColors.') ).

fof(kb_SUMO_13600,axiom,
    ! [V__OBJ,V__COLOR] :
      ( ( s__instance(V__COLOR,s__Attribute)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__COLOR,s__SecondaryColor)
          & s__attribute(V__OBJ,V__COLOR) )
       => ? [V__PROCESS,V__RESOURCE1,V__RESOURCE2,V__PRIMARY1,V__PRIMARY2] :
            ( s__instance(V__PRIMARY2,s__Attribute)
            & s__instance(V__PRIMARY1,s__Attribute)
            & s__instance(V__RESOURCE2,s__Object)
            & s__instance(V__RESOURCE1,s__Object)
            & s__instance(V__PROCESS,s__Process)
            & s__result(V__PROCESS,V__OBJ)
            & s__resource(V__PROCESS,V__RESOURCE1)
            & s__resource(V__PROCESS,V__RESOURCE2)
            & s__attribute(V__RESOURCE1,V__PRIMARY1)
            & s__attribute(V__RESOURCE2,V__PRIMARY2)
            & s__instance(V__PRIMARY1,s__PrimaryColor)
            & s__instance(V__PRIMARY2,s__PrimaryColor)
            & V__PRIMARY1 != V__PRIMARY2 ) ) ) ).

fof(kb_SUMO_13601,axiom,
    s__instance(s__GrayColor,s__SecondaryColor) ).

fof(kb_SUMO_13602,axiom,
    s__documentation(s__GrayColor,s__EnglishLanguage,'A &%SecondaryColor that results from mixing &%Black and &%White.') ).

fof(kb_SUMO_13603,axiom,
    s__instance(s__Pink,s__SecondaryColor) ).

fof(kb_SUMO_13604,axiom,
    s__documentation(s__Pink,s__EnglishLanguage,'A &%SecondaryColor that results from mixing &%Red and &%White.') ).

fof(kb_SUMO_13605,axiom,
    s__instance(s__Brown,s__SecondaryColor) ).

fof(kb_SUMO_13606,axiom,
    s__documentation(s__Brown,s__EnglishLanguage,'A &%SecondaryColor that resembles the color of wood or of soil.') ).

fof(kb_SUMO_13607,axiom,
    s__instance(s__OrangeColor,s__SecondaryColor) ).

fof(kb_SUMO_13608,axiom,
    s__documentation(s__OrangeColor,s__EnglishLanguage,'A &%SecondaryColor that results from mixing &%Red and &%Yellow and resembles the color of a ripe orange fruit.') ).

fof(kb_SUMO_13609,axiom,
    s__instance(s__Green,s__SecondaryColor) ).

fof(kb_SUMO_13610,axiom,
    s__documentation(s__Green,s__EnglishLanguage,'A &%SecondaryColor that resembles the color of fresh grass.') ).

fof(kb_SUMO_13611,axiom,
    s__instance(s__Purple,s__SecondaryColor) ).

fof(kb_SUMO_13612,axiom,
    s__documentation(s__Purple,s__EnglishLanguage,'A &%SecondaryColor that results from mixing &%Red and &%Blue.') ).

fof(kb_SUMO_13613,axiom,
    s__instance(s__LineFormation,s__ShapeAttribute) ).

fof(kb_SUMO_13614,axiom,
    s__documentation(s__LineFormation,s__EnglishLanguage,'A &%ShapeAttribute that applies to &%Collections and indicates that all of the &%members of the &%Collection are arrayed in a line, i.e. each &%member (except possibly the first) is behind or to the side of exactly one other &%member.') ).

fof(kb_SUMO_13615,axiom,
    ! [V__COLLECTION] :
      ( s__instance(V__COLLECTION,s__Object)
     => ( s__attribute(V__COLLECTION,s__LineFormation)
       => s__instance(V__COLLECTION,s__Collection) ) ) ).

fof(kb_SUMO_13616,axiom,
    s__instance(s__Stressed,s__SoundAttribute) ).

fof(kb_SUMO_13617,axiom,
    s__documentation(s__Stressed,s__EnglishLanguage,'A &%SoundAttribute of &%Syllables. It denotes the quality of being emphasized over the other &%Syllables in the same &%Word.') ).

fof(kb_SUMO_13618,axiom,
    ! [V__SYLLABLE] :
      ( s__instance(V__SYLLABLE,s__Object)
     => ( s__attribute(V__SYLLABLE,s__Stressed)
       => s__instance(V__SYLLABLE,s__Syllable) ) ) ).

fof(kb_SUMO_13619,axiom,
    ! [V__SYLLABLE,V__WORD] :
      ( ( s__instance(V__WORD,s__Object)
        & s__instance(V__SYLLABLE,s__Object) )
     => ( ( s__attribute(V__SYLLABLE,s__Stressed)
          & s__instance(V__WORD,s__Word)
          & s__part(V__SYLLABLE,V__WORD) )
       => ~ ? [V__SYLLABLE2] :
              ( s__instance(V__SYLLABLE2,s__Object)
              & s__instance(V__SYLLABLE2,s__Syllable)
              & s__part(V__SYLLABLE2,V__WORD)
              & s__attribute(V__SYLLABLE2,s__Stressed)
              & V__SYLLABLE2 != V__SYLLABLE ) ) ) ).

fof(kb_SUMO_13620,axiom,
    s__subclass(s__Syllable,s__SymbolicString) ).

fof(kb_SUMO_13621,axiom,
    s__instance(s__Syllable__t,s__SetOrClass) ).

fof(kb_SUMO_13622,axiom,
    s__documentation(s__Syllable,s__EnglishLanguage,'A sequence of &%Characters from the same &%Word that denote a single sound.') ).

fof(kb_SUMO_13623,axiom,
    ! [V__WORD] :
      ( s__instance(V__WORD,s__Object)
     => ( s__instance(V__WORD,s__Word)
       => ? [V__SYLLABLE] :
            ( s__instance(V__SYLLABLE,s__Object)
            & s__instance(V__SYLLABLE,s__Syllable)
            & s__part(V__SYLLABLE,V__WORD) ) ) ) ).

fof(kb_SUMO_13624,axiom,
    s__subclass(s__AlphabeticCharacter,s__Character) ).

fof(kb_SUMO_13625,axiom,
    s__documentation(s__AlphabeticCharacter,s__EnglishLanguage,'Any &%Character that is comprised of a single alphabetical character, e.g. A, B, C, D, ...') ).

fof(kb_SUMO_13626,axiom,
    s__subclass(s__DigitCharacter,s__Character) ).

fof(kb_SUMO_13627,axiom,
    s__instance(s__DigitCharacter__t,s__SetOrClass) ).

fof(kb_SUMO_13628,axiom,
    s__documentation(s__DigitCharacter,s__EnglishLanguage,'Any &%Character that is comprised of a single digit, i.e. one of the numerals 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.') ).

fof(kb_SUMO_13629,axiom,
    s__subclass(s__Consonant,s__AlphabeticCharacter) ).

fof(kb_SUMO_13630,axiom,
    s__instance(s__Consonant__t,s__SetOrClass) ).

fof(kb_SUMO_13631,axiom,
    s__documentation(s__Consonant,s__EnglishLanguage,'An &%AlphabeticCharacter that denotes a speech sound that results in audible friction when it is pronounced.') ).

fof(kb_SUMO_13632,axiom,
    s__subclass(s__Vowel,s__AlphabeticCharacter) ).

fof(kb_SUMO_13633,axiom,
    s__instance(s__Vowel__t,s__SetOrClass) ).

fof(kb_SUMO_13634,axiom,
    s__instance(s__AlphabeticCharacter__t,s__SetOrClass) ).

fof(kb_SUMO_13635,axiom,
    s__documentation(s__Vowel,s__EnglishLanguage,'An &%AlphabeticCharacter that denotes a speech sound that does not result in audible friction when it is pronounced.') ).

fof(kb_SUMO_13636,axiom,
    s__instance(s__Lost,s__ContestAttribute) ).

fof(kb_SUMO_13637,axiom,
    s__contraryAttribute_2(s__Lost,s__Won) ).

fof(kb_SUMO_13638,axiom,
    s__documentation(s__Lost,s__EnglishLanguage,'The &%ContestAttribute that applies to a &%Contest participant who has lost the &%Contest.') ).

fof(kb_SUMO_13639,axiom,
    s__instance(s__Won,s__ContestAttribute) ).

fof(kb_SUMO_13640,axiom,
    s__documentation(s__Won,s__EnglishLanguage,'The &%ContestAttribute that applies to a &%Contest participant who has won the &%Contest.') ).

fof(kb_SUMO_13641,axiom,
    s__instance(s__TieScore,s__ContestAttribute) ).

fof(kb_SUMO_13642,axiom,
    s__documentation(s__TieScore,s__EnglishLanguage,'The &%ContestAttribute that applies to all &%contestParticipants in a &%Contest when none of them have &%Won or &%Lost the &%Contest.') ).

fof(kb_SUMO_13643,axiom,
    s__subclass(s__GameAttribute,s__ContestAttribute) ).

fof(kb_SUMO_13644,axiom,
    s__documentation(s__GameAttribute,s__EnglishLanguage,'Any &%ContestAttribute that is specific to a &%Game.') ).

fof(kb_SUMO_13645,axiom,
    ! [V__ATTR,V__THING] :
      ( ( s__instance(V__THING,s__Agent)
        & s__instance(V__THING,s__Process)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__property(V__THING,V__ATTR)
          & s__instance(V__ATTR,s__GameAttribute) )
       => ? [V__GAME] :
            ( s__instance(V__GAME,s__Process)
            & s__instance(V__GAME,s__Game)
            & ( s__agent(V__GAME,V__THING)
              | s__patient(V__GAME,V__THING)
              | s__subProcess(V__THING,V__GAME) ) ) ) ) ).

fof(kb_SUMO_13646,axiom,
    s__subclass(s__SportsAttribute,s__GameAttribute) ).

fof(kb_SUMO_13647,axiom,
    s__instance(s__SportsAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13648,axiom,
    s__instance(s__GameAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13649,axiom,
    s__documentation(s__SportsAttribute,s__EnglishLanguage,'Any &%GameAttribute that is specific to a &%Sport.') ).

fof(kb_SUMO_13650,axiom,
    ! [V__ATTR,V__THING] :
      ( ( s__instance(V__THING,s__Agent)
        & s__instance(V__THING,s__Process)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__property(V__THING,V__ATTR)
          & s__instance(V__ATTR,s__SportsAttribute) )
       => ? [V__SPORT] :
            ( s__instance(V__SPORT,s__Process)
            & s__instance(V__SPORT,s__Game)
            & ( s__agent(V__SPORT,V__THING)
              | s__patient(V__SPORT,V__THING)
              | s__subProcess(V__THING,V__SPORT) ) ) ) ) ).

fof(kb_SUMO_13651,axiom,
    s__instance(s__Foul,s__SportsAttribute) ).

fof(kb_SUMO_13652,axiom,
    s__documentation(s__Foul,s__EnglishLanguage,'A &%SportsAttribute that indicates that the &%GamePiece of a &%Sport is no longer in play because it has gone beyond the limits of the sports field.') ).

fof(kb_SUMO_13653,axiom,
    s__instance(s__SportsOut,s__SportsAttribute) ).

fof(kb_SUMO_13654,axiom,
    s__documentation(s__SportsOut,s__EnglishLanguage,'A &%SportsAttribute that indicates that a player in a &%Sport can no longer compete because he has been tagged with the &%GamePiece.') ).

fof(kb_SUMO_13655,axiom,
    s__subclass(s__PoliticoEconomicAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_13656,axiom,
    s__instance(s__PoliticoEconomicAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13657,axiom,
    s__partition_3(s__PoliticoEconomicAttribute,s__FormOfGovernment,s__EconomicAttribute) ).

fof(kb_SUMO_13658,axiom,
    s__documentation(s__PoliticoEconomicAttribute,s__EnglishLanguage,'Any &%Attribute of a &%Government which specifies some aspect of the political or economic system of the &%Government.') ).

fof(kb_SUMO_13659,axiom,
    ! [V__GOVERNMENT,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__GOVERNMENT,s__Object) )
     => ( ( s__instance(V__ATTRIBUTE,s__PoliticoEconomicAttribute)
          & s__attribute(V__GOVERNMENT,V__ATTRIBUTE) )
       => s__instance(V__GOVERNMENT,s__Government) ) ) ).

fof(kb_SUMO_13660,axiom,
    s__subclass(s__EconomicAttribute,s__PoliticoEconomicAttribute) ).

fof(kb_SUMO_13661,axiom,
    s__instance(s__EconomicAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13662,axiom,
    s__documentation(s__EconomicAttribute,s__EnglishLanguage,'&%EconomicAttribute is the class of terms including all &%Attributes used to characterize the economic systems or development levels of &%Nations or dependent &%GeopoliticalAreas.') ).

fof(kb_SUMO_13663,axiom,
    s__subclass(s__FormOfGovernment,s__PoliticoEconomicAttribute) ).

fof(kb_SUMO_13664,axiom,
    s__instance(s__FormOfGovernment__t,s__SetOrClass) ).

fof(kb_SUMO_13665,axiom,
    s__documentation(s__FormOfGovernment,s__EnglishLanguage,'&%FormOfGovernment is a class of &%Attributes used to describe the characteristics of a government, especially a &%NationalGovernment. The concept &%FormOfGovernment is interpreted broadly enough to include &%Anarchy and &%Factionalism.') ).

fof(kb_SUMO_13666,axiom,
    s__subclass(s__ChemicalReduction,s__ChemicalSynthesis) ).

fof(kb_SUMO_13667,axiom,
    s__instance(s__ChemicalReduction__t,s__SetOrClass) ).

fof(kb_SUMO_13668,axiom,
    s__disjoint(s__ChemicalReduction,s__Oxidation) ).

fof(kb_SUMO_13669,axiom,
    s__documentation(s__ChemicalReduction,s__EnglishLanguage,'Any &%ChemicalProcess where &%Electrons are added to the substance undergoing the &%ChemicalProcess.') ).

%FOL fof(kb_SUMO_13670,axiom,(( (! [V__R,V__S,V__G,V__L] : ((s__instance(V__L,s__PositiveInteger) & s__instance(V__G,s__PositiveInteger) & s__instance(V__S,s__PureSubstance) & s__instance(V__R,s__Process)) => ((s__instance(V__R,s__ChemicalReduction) & s__patient(V__R,V__S) & s__holdsDuring(s__BeginFn(s__WhenFn(V__R)),'s__electronNumber(V__S,V__L)')) => (greater(V__G,V__L) & s__holdsDuring(s__EndFn(s__WhenFn(V__R)),'s__electronNumber(V__S,V__G)'))))) ))).

fof(kb_SUMO_13671,axiom,
    s__subclass(s__Oxidation,s__ChemicalDecomposition) ).

fof(kb_SUMO_13672,axiom,
    s__instance(s__Oxidation__t,s__SetOrClass) ).

fof(kb_SUMO_13673,axiom,
    s__documentation(s__Oxidation,s__EnglishLanguage,'Any &%ChemicalProcess where &%Electrons are removed from the substance undergoing the &%ChemicalProcess.') ).

%FOL fof(kb_SUMO_13674,axiom,(( (! [V__O,V__S,V__G] : ((s__instance(V__G,s__PositiveInteger) & s__instance(V__S,s__PureSubstance) & s__instance(V__O,s__Process)) => ((s__instance(V__O,s__Oxidation) & s__patient(V__O,V__S) & s__holdsDuring(s__BeginFn(s__WhenFn(V__O)),'s__electronNumber(V__S,V__G)')) => (? [V__L] : (s__instance(V__L,s__PositiveInteger) & less(V__L,V__G) & s__holdsDuring(s__EndFn(s__WhenFn(V__O)),'s__electronNumber(V__S,V__L)')))))) ))).

fof(kb_SUMO_13675,axiom,
    s__subclass(s__Dialysis,s__Separating) ).

fof(kb_SUMO_13676,axiom,
    s__instance(s__Dialysis__t,s__SetOrClass) ).

fof(kb_SUMO_13677,axiom,
    s__documentation(s__Dialysis,s__EnglishLanguage,'Any process of &%Separating a &%Solution into two or more constituent &%PureSubstances by means of their unequal diffusion through membranes that are partially permeable.') ).

fof(kb_SUMO_13678,axiom,
    ! [V__DIALYSIS] :
      ( s__instance(V__DIALYSIS,s__Process)
     => ( s__instance(V__DIALYSIS,s__Dialysis)
       => ? [V__SOLUTION,V__SUBSTANCE1,V__SUBSTANCE2] :
            ( s__instance(V__SOLUTION,s__Object)
            & s__resource(V__DIALYSIS,V__SOLUTION)
            & s__instance(V__SOLUTION,s__Solution)
            & s__result(V__DIALYSIS,V__SUBSTANCE1)
            & s__instance(V__SUBSTANCE1,s__PureSubstance)
            & s__result(V__DIALYSIS,V__SUBSTANCE2)
            & s__instance(V__SUBSTANCE2,s__PureSubstance)
            & V__SUBSTANCE1 != V__SUBSTANCE2 ) ) ) ).

fof(kb_SUMO_13679,axiom,
    s__subclass(s__Diluting,s__Putting) ).

fof(kb_SUMO_13680,axiom,
    s__instance(s__Diluting__t,s__SetOrClass) ).

fof(kb_SUMO_13681,axiom,
    s__documentation(s__Diluting,s__EnglishLanguage,'Adding a &%Liquid to a &%Solution to decrease the concentration of the &%Solution.') ).

fof(kb_SUMO_13682,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Process)
     => ( s__instance(V__D,s__Diluting)
       => ? [V__S] :
            ( s__instance(V__S,s__Object)
            & s__patient(V__D,V__S)
            & s__instance(V__S,s__Solution)
            & s__attribute(V__S,s__Liquid) ) ) ) ).

fof(kb_SUMO_13683,axiom,
    s__instance(s__ChemicalEquilibrium,s__InternalAttribute) ).

fof(kb_SUMO_13684,axiom,
    s__documentation(s__ChemicalEquilibrium,s__EnglishLanguage,'The &%Attribute of being in a chemically stable state, i.e. the relative proportions of &%resources and &%results will not longer change.') ).

fof(kb_SUMO_13685,axiom,
    ! [V__PROCESS] :
      ( s__property(V__PROCESS,s__ChemicalEquilibrium)
     => s__instance(V__PROCESS,s__ChemicalProcess) ) ).

%FOL fof(kb_SUMO_13686,axiom,(( (! [V__TIME,V__RESOURCE,V__PROCESS,V__RESULT] : ((s__instance(V__RESULT,s__Quantity) & s__instance(V__PROCESS,s__Process) & s__instance(V__RESOURCE,s__Object) & s__instance(V__RESOURCE,s__Quantity) & s__instance(V__TIME,s__TimePosition)) => (s__property(V__PROCESS,s__ChemicalEquilibrium) => (? [V__RATIO] : ((s__holdsDuring(V__TIME,'s__resource(V__PROCESS,V__RESOURCE)') & s__holdsDuring(V__TIME,'s__result(V__PROCESS,V__RESULT)')) => (V__RATIO = divide(V__RESOURCE,V__RESULT))))))) ))).

fof(kb_SUMO_13687,axiom,
    s__subclass(s__Chromatography,s__Separating) ).

fof(kb_SUMO_13688,axiom,
    s__instance(s__Chromatography__t,s__SetOrClass) ).

fof(kb_SUMO_13689,axiom,
    s__documentation(s__Chromatography,s__EnglishLanguage,'&%Processes of &%Separating a &%LiquidMixture or a &%GasMixture into some or all of the &%PureSubstances that comprise it.') ).

fof(kb_SUMO_13690,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Process)
     => ( s__instance(V__C,s__Chromatography)
       => ? [V__M] :
            ( s__instance(V__M,s__Object)
            & s__resource(V__C,V__M)
            & ( s__instance(V__M,s__LiquidMixture)
              | s__instance(V__M,s__GasMixture) ) ) ) ) ).

fof(kb_SUMO_13691,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Process)
     => ( s__instance(V__C,s__Chromatography)
       => ? [V__S] :
            ( s__instance(V__S,s__PureSubstance)
            & s__result(V__C,V__S) ) ) ) ).

fof(kb_SUMO_13692,axiom,
    s__subclass(s__BreakabilityAttribute,s__InternalAttribute) ).

fof(kb_SUMO_13693,axiom,
    s__documentation(s__BreakabilityAttribute,s__EnglishLanguage,'A subclass of &%Attributes for characterizing the breakability of &%CorpuscularObjects.') ).

fof(kb_SUMO_13694,axiom,
    s__instance(s__Fragile,s__BreakabilityAttribute) ).

fof(kb_SUMO_13695,axiom,
    s__documentation(s__Fragile,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object is very breakable.') ).

fof(kb_SUMO_13696,axiom,
    s__instance(s__Unbreakable,s__BreakabilityAttribute) ).

fof(kb_SUMO_13697,axiom,
    s__instance(s__BreakabilityAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13698,axiom,
    s__contraryAttribute_2(s__Unbreakable,s__Fragile) ).

fof(kb_SUMO_13699,axiom,
    s__documentation(s__Unbreakable,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object cannot be broken under normal usage conditions.') ).

fof(kb_SUMO_13700,axiom,
    s__subrelation(s__contestParticipant__m,s__agent__m) ).

fof(kb_SUMO_13701,axiom,
    s__instance(s__contestParticipant__m,s__TotalValuedRelation) ).

fof(kb_SUMO_13702,axiom,
    s__domain(s__contestParticipant__m,"1",s__Contest) ).

fof(kb_SUMO_13703,axiom,
    s__domain(s__contestParticipant__m,"2",s__Agent) ).

fof(kb_SUMO_13704,axiom,
    s__documentation(s__contestParticipant__m,s__EnglishLanguage,'(&%contestParticipant ?CONTEST ?AGENT) means that ?AGENT is one of the sides in the &%Contest ?CONTEST. For example, if the ?CONTEST is a football game, then ?AGENT would be one of the opposing teams. For another example, if ?CONTEST is a &%Battle, then ?AGENT would be one of the sides fighting each other.') ).

fof(kb_SUMO_13705,axiom,
    s__subclass(s__CivilWar,s__War) ).

fof(kb_SUMO_13706,axiom,
    s__instance(s__CivilWar__t,s__SetOrClass) ).

fof(kb_SUMO_13707,axiom,
    s__documentation(s__CivilWar,s__EnglishLanguage,'A &%War in which the fighting &%GeopoliticalAreas are both part of the same &%Nation.') ).

fof(kb_SUMO_13708,axiom,
    ! [V__WAR] :
      ( s__instance(V__WAR,s__CivilWar)
     => ? [V__NATION] :
          ( s__instance(V__NATION,s__GeopoliticalArea)
          & s__instance(V__NATION,s__Nation)
          & ! [V__AGENT] :
              ( ( s__instance(V__AGENT,s__GeopoliticalArea)
                & s__instance(V__WAR,s__Contest) )
             => ( s__contestParticipant(V__WAR,V__AGENT)
               => s__geopoliticalSubdivision(V__AGENT,V__NATION) ) ) ) ) ).

fof(kb_SUMO_13709,axiom,
    s__subclass(s__Debating,s__Contest) ).

fof(kb_SUMO_13710,axiom,
    s__instance(s__Debating__t,s__SetOrClass) ).

fof(kb_SUMO_13711,axiom,
    s__subclass(s__Debating,s__LinguisticCommunication) ).

fof(kb_SUMO_13712,axiom,
    s__documentation(s__Debating,s__EnglishLanguage,'A &%Contest where each participant holds a different view regarding some issue, and each participant attempts to prove, by rhetoric or evidence, that his/her own views about a particular matter are correct and/or that the views of the other participants are incorrect.') ).

fof(kb_SUMO_13713,axiom,
    s__subclass(s__Negotiating,s__Contest) ).

fof(kb_SUMO_13714,axiom,
    s__subclass(s__Negotiating,s__LinguisticCommunication) ).

fof(kb_SUMO_13715,axiom,
    s__instance(s__Negotiating__t,s__SetOrClass) ).

fof(kb_SUMO_13716,axiom,
    s__documentation(s__Negotiating,s__EnglishLanguage,'A &%Contest where each participant attempts to maximize his self-interest in a &%Promise that marks the end of the &%Contest.') ).

fof(kb_SUMO_13717,axiom,
    ! [V__NEGOTIATE] :
      ( s__instance(V__NEGOTIATE,s__Process)
     => ( s__instance(V__NEGOTIATE,s__Negotiating)
       => s__hasPurpose(V__NEGOTIATE,'(? [V__COMMIT] : (s__instance(V__COMMIT,s__Process) & s__instance(V__COMMIT,s__Committing) & s__subProcess(V__COMMIT,V__NEGOTIATE) & s__finishes(s__WhenFn(V__COMMIT),s__WhenFn(V__NEGOTIATE))))') ) ) ).

fof(kb_SUMO_13718,axiom,
    s__subclass(s__BusinessCompetition,s__Contest) ).

fof(kb_SUMO_13719,axiom,
    s__instance(s__BusinessCompetition__t,s__SetOrClass) ).

fof(kb_SUMO_13720,axiom,
    s__documentation(s__BusinessCompetition,s__EnglishLanguage,'Any &%Contest where the &%contestParticipants are &%Corporations and the aim is to win as many customers as possible.') ).

fof(kb_SUMO_13721,axiom,
    ! [V__CONTEST,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__CONTEST,s__Contest) )
     => ( ( s__instance(V__CONTEST,s__BusinessCompetition)
          & s__contestParticipant(V__CONTEST,V__AGENT) )
       => s__instance(V__AGENT,s__Corporation) ) ) ).

fof(kb_SUMO_13722,axiom,
    s__subclass(s__VisualAcuityAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_13723,axiom,
    s__instance(s__VisualAcuityAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_13724,axiom,
    s__documentation(s__VisualAcuityAttribute,s__EnglishLanguage,'The &%BiologicalAttributes in this &%Class describe the visual capabilities of an &%Organism.') ).

fof(kb_SUMO_13725,axiom,
    s__instance(s__ColorBlind,s__VisualAcuityAttribute) ).

fof(kb_SUMO_13726,axiom,
    s__documentation(s__ColorBlind,s__EnglishLanguage,'This &%VisualAcuityAttribute describes an &%Organism that is unable to perceive a distinction in color between certain wavelength ranges within the larger range of typically visible electro-magnetic radiation (light). Among &%Humans, there are several forms and degrees of color blindness. Color blindness is generally considered to be a mild to moderate disability among &%Humans, but individuals with certain types of color blindness excel at some visual pattern recognition tasks, and its not clear that the condition should be considered a &%DiseaseOrSyndrome.') ).

fof(kb_SUMO_13727,axiom,
    s__subclass(s__Disability,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_13728,axiom,
    s__documentation(s__Disability,s__EnglishLanguage,'&%Disability is a class of &%DiseaseOrSyndrome that describes impairments, activity limitations or participation restriction that may be physical, cognitive, mental, sensory, emotional, developmental or some combination') ).

fof(kb_SUMO_13729,axiom,
    s__termFormat(s__EnglishLanguage,s__Disability,disability) ).

fof(kb_SUMO_13730,axiom,
    s__subclass(s__PhysicalDisability,s__Disability) ).

fof(kb_SUMO_13731,axiom,
    s__instance(s__PhysicalDisability__t,s__SetOrClass) ).

fof(kb_SUMO_13732,axiom,
    s__documentation(s__PhysicalDisability,s__EnglishLanguage,'&%PhysicalDisability is any impairment that limits the physical function of limbs or fine or gross motor ability, or limit the facets of daily living') ).

fof(kb_SUMO_13733,axiom,
    s__termFormat(s__EnglishLanguage,s__PhysicalDisability,'physical disability') ).

fof(kb_SUMO_13734,axiom,
    s__subclass(s__SensoryDisability,s__Disability) ).

fof(kb_SUMO_13735,axiom,
    s__instance(s__SensoryDisability__t,s__SetOrClass) ).

fof(kb_SUMO_13736,axiom,
    s__instance(s__Disability__t,s__SetOrClass) ).

fof(kb_SUMO_13737,axiom,
    s__documentation(s__SensoryDisability,s__EnglishLanguage,'&%SensoryDisability is any impairement of one of the five senses') ).

fof(kb_SUMO_13738,axiom,
    s__termFormat(s__EnglishLanguage,s__SensoryDisability,'sensory disability') ).

fof(kb_SUMO_13739,axiom,
    s__instance(s__Blind,s__VisualAcuityAttribute) ).

fof(kb_SUMO_13740,axiom,
    s__instance(s__Blind,s__SensoryDisability) ).

fof(kb_SUMO_13741,axiom,
    s__documentation(s__Blind,s__EnglishLanguage,'The &%Attribute that applies to &%Animals and &%Humans that are unable to see.') ).

fof(kb_SUMO_13742,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( s__attribute(V__AGENT,s__Blind)
       => ~ s__capability(s__Seeing,s__agent__m,V__AGENT) ) ) ).

fof(kb_SUMO_13743,axiom,
    s__instance(s__Deaf,s__SensoryDisability) ).

fof(kb_SUMO_13744,axiom,
    s__documentation(s__Deaf,s__EnglishLanguage,'The &%Attribute that applies to &%Animals and &%Humans that are unable to hear.') ).

fof(kb_SUMO_13745,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__attribute(V__A,s__Deaf)
       => ~ s__capability(s__Hearing,s__agent__m,V__A) ) ) ).

fof(kb_SUMO_13746,axiom,
    s__instance(s__Hungry,s__BiologicalAttribute) ).

fof(kb_SUMO_13747,axiom,
    s__documentation(s__Hungry,s__EnglishLanguage,'The &%Attribute that applies to &%Animals and &%Humans when they want food.') ).

fof(kb_SUMO_13748,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__CognitiveAgent)
     => ( s__attribute(V__A,s__Hungry)
       => s__desires(V__A,'(? [V__E] : (s__instance(V__E,s__Process) & s__instance(V__E,s__Eating) & s__agent(V__E,V__A)))') ) ) ).

fof(kb_SUMO_13749,axiom,
    s__instance(s__Pregnant,s__BiologicalAttribute) ).

fof(kb_SUMO_13750,axiom,
    s__documentation(s__Pregnant,s__EnglishLanguage,'The &%Attribute that applies to &%Female &%Animals and &%Humans that have an embryo or fetus growing inside of them as the result of having one of the &%Females &%Eggs fertilized.') ).

fof(kb_SUMO_13751,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__attribute(V__H,s__Pregnant)
       => s__attribute(V__H,s__Female) ) ) ).

fof(kb_SUMO_13752,axiom,
    s__subAttribute(s__Puberty,s__NonFullyFormed) ).

fof(kb_SUMO_13753,axiom,
    s__documentation(s__Puberty,s__EnglishLanguage,'The &%DevelopmentalAttribute of having functional sex glands which are not fully mature.') ).

fof(kb_SUMO_13754,axiom,
    s__instance(s__Fist,s__BodyPosition) ).

fof(kb_SUMO_13755,axiom,
    s__documentation(s__Fist,s__EnglishLanguage,'The &%BodyPosition of having the fingers drawn into the palm so that the hand can be used for striking something.') ).

fof(kb_SUMO_13756,axiom,
    ! [V__HAND] :
      ( s__instance(V__HAND,s__Object)
     => ( s__attribute(V__HAND,s__Fist)
       => s__instance(V__HAND,s__Hand) ) ) ).

fof(kb_SUMO_13757,axiom,
    s__subclass(s__LyingDown,s__BodyMotion) ).

fof(kb_SUMO_13758,axiom,
    s__subclass(s__LyingDown,s__MotionDownward) ).

fof(kb_SUMO_13759,axiom,
    s__instance(s__LyingDown__t,s__SetOrClass) ).

fof(kb_SUMO_13760,axiom,
    s__documentation(s__LyingDown,s__EnglishLanguage,'The &%BodyMotion of moving from a &%Sitting to a &%Prostrate position.') ).

%FOL fof(kb_SUMO_13761,axiom,(( (! [V__LIE,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__LIE,s__Process)) => ((s__instance(V__LIE,s__LyingDown) & s__agent(V__LIE,V__AGENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__LIE)),'s__attribute(V__AGENT,s__Sitting)') & s__holdsDuring(s__EndFn(s__WhenFn(V__LIE)),'s__attribute(V__AGENT,s__Prostrate)'))))) ))).

fof(kb_SUMO_13762,axiom,
    s__instance(s__Handstand,s__BodyPosition) ).

fof(kb_SUMO_13763,axiom,
    s__documentation(s__Handstand,s__EnglishLanguage,'The &%BodyPosition where one rests on ones hands and extends ones feet in the air.') ).

fof(kb_SUMO_13764,axiom,
    s__instance(s__Kneeling,s__BodyPosition) ).

fof(kb_SUMO_13765,axiom,
    s__documentation(s__Kneeling,s__EnglishLanguage,'The &%BodyPosition of resting ones weight on ones &%Knees.') ).

fof(kb_SUMO_13766,axiom,
    s__instance(s__Splitting,s__BodyPosition) ).

fof(kb_SUMO_13767,axiom,
    s__documentation(s__Splitting,s__EnglishLanguage,'The &%BodyPosition of extending ones &%Legs at right angles to ones &%Torso.') ).

fof(kb_SUMO_13768,axiom,
    s__subAttribute(s__Squatting,s__Sitting) ).

fof(kb_SUMO_13769,axiom,
    s__documentation(s__Squatting,s__EnglishLanguage,'&%Sitting on ones heels.') ).

fof(kb_SUMO_13770,axiom,
    s__subclass(s__SittingDown,s__BodyMotion) ).

fof(kb_SUMO_13771,axiom,
    s__subclass(s__SittingDown,s__MotionDownward) ).

fof(kb_SUMO_13772,axiom,
    s__instance(s__SittingDown__t,s__SetOrClass) ).

fof(kb_SUMO_13773,axiom,
    s__documentation(s__SittingDown,s__EnglishLanguage,'The &%BodyMotion of moving from a &%Standing to a &%Sitting position.') ).

%FOL fof(kb_SUMO_13774,axiom,(( (! [V__SIT,V__AGENT] : ((s__instance(V__AGENT,s__Agent) & s__instance(V__SIT,s__Process)) => ((s__instance(V__SIT,s__SittingDown) & s__agent(V__SIT,V__AGENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__SIT)),'s__attribute(V__AGENT,s__Standing)') & s__holdsDuring(s__EndFn(s__WhenFn(V__SIT)),'s__attribute(V__AGENT,s__Sitting)'))))) ))).

fof(kb_SUMO_13775,axiom,
    s__subclass(s__StandingUp,s__BodyMotion) ).

fof(kb_SUMO_13776,axiom,
    s__instance(s__StandingUp__t,s__SetOrClass) ).

fof(kb_SUMO_13777,axiom,
    s__subclass(s__StandingUp,s__MotionUpward) ).

fof(kb_SUMO_13778,axiom,
    s__documentation(s__StandingUp,s__EnglishLanguage,'The &%BodyMotion of moving from a &%Sitting to a &%Standing position.') ).

%FOL fof(kb_SUMO_13779,axiom,(( (! [V__AGENT,V__STAND] : ((s__instance(V__STAND,s__Process) & s__instance(V__AGENT,s__Agent)) => ((s__instance(V__STAND,s__StandingUp) & s__agent(V__STAND,V__AGENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__STAND)),'s__attribute(V__AGENT,s__Sitting)') & s__holdsDuring(s__EndFn(s__WhenFn(V__STAND)),'s__attribute(V__AGENT,s__Standing)'))))) ))).

fof(kb_SUMO_13780,axiom,
    s__subclass(s__EyeMotion,s__BodyMotion) ).

fof(kb_SUMO_13781,axiom,
    s__documentation(s__EyeMotion,s__EnglishLanguage,'Any &%Motion where a patient is the agents own &%Eyelid or &%Eyelids.') ).

fof(kb_SUMO_13782,axiom,
    ! [V__EM,V__A] :
      ( ( s__instance(V__A,s__Agent)
        & s__instance(V__EM,s__Process) )
     => ( ( s__instance(V__EM,s__EyeMotion)
          & s__agent(V__EM,V__A) )
       => ? [V__E] :
            ( s__instance(V__E,s__Object)
            & s__instance(V__E,s__Eyelid)
            & s__part(V__E,V__A)
            & s__patient(V__EM,V__E) ) ) ) ).

fof(kb_SUMO_13783,axiom,
    s__subclass(s__OpeningEyes,s__EyeMotion) ).

fof(kb_SUMO_13784,axiom,
    s__instance(s__OpeningEyes__t,s__SetOrClass) ).

fof(kb_SUMO_13785,axiom,
    s__subclass(s__OpeningEyes,s__Opening) ).

fof(kb_SUMO_13786,axiom,
    s__disjoint(s__OpeningEyes,s__ClosingEyes) ).

fof(kb_SUMO_13787,axiom,
    s__documentation(s__OpeningEyes,s__EnglishLanguage,'The &%BodyMotion of relaxing the eye lids so that the corneas are exposed to light.') ).

fof(kb_SUMO_13788,axiom,
    s__subclass(s__ClosingEyes,s__EyeMotion) ).

fof(kb_SUMO_13789,axiom,
    s__instance(s__EyeMotion__t,s__SetOrClass) ).

fof(kb_SUMO_13790,axiom,
    s__subclass(s__ClosingEyes,s__Closing) ).

fof(kb_SUMO_13791,axiom,
    s__instance(s__Closing__t,s__SetOrClass) ).

fof(kb_SUMO_13792,axiom,
    s__documentation(s__ClosingEyes,s__EnglishLanguage,'The &%EyeMotion of tensing the eye lids so that the corneas are not exposed to light.') ).

fof(kb_SUMO_13793,axiom,
    s__subclass(s__Winking,s__ClosingEyes) ).

fof(kb_SUMO_13794,axiom,
    s__instance(s__Winking__t,s__SetOrClass) ).

fof(kb_SUMO_13795,axiom,
    s__instance(s__ClosingEyes__t,s__SetOrClass) ).

fof(kb_SUMO_13796,axiom,
    s__subclass(s__Winking,s__Gesture) ).

fof(kb_SUMO_13797,axiom,
    s__documentation(s__Winking,s__EnglishLanguage,'Any instance of &%ClosingEyes which is intended to express something to someone else.') ).

fof(kb_SUMO_13798,axiom,
    s__subclass(s__Shrugging,s__BodyMotion) ).

fof(kb_SUMO_13799,axiom,
    s__instance(s__Shrugging__t,s__SetOrClass) ).

fof(kb_SUMO_13800,axiom,
    s__subclass(s__Shrugging,s__Gesture) ).

fof(kb_SUMO_13801,axiom,
    s__documentation(s__Shrugging,s__EnglishLanguage,'Moving the &%Shoulders in such a way that the motion is intended to express something to someone else.') ).

fof(kb_SUMO_13802,axiom,
    ! [V__SHOULDER,V__SHRUG] :
      ( s__instance(V__SHRUG,s__Process)
     => ( ( s__instance(V__SHRUG,s__Shrugging)
          & s__patient(V__SHRUG,V__SHOULDER) )
       => s__instance(V__SHOULDER,s__Shoulder) ) ) ).

fof(kb_SUMO_13803,axiom,
    s__subclass(s__Trembling,s__BodyMotion) ).

fof(kb_SUMO_13804,axiom,
    s__instance(s__Trembling__t,s__SetOrClass) ).

fof(kb_SUMO_13805,axiom,
    s__subclass(s__Trembling,s__AutonomicProcess) ).

fof(kb_SUMO_13806,axiom,
    s__subclass(s__Trembling,s__Tremor) ).

fof(kb_SUMO_13807,axiom,
    s__disjoint(s__Trembling,s__IntentionalProcess) ).

fof(kb_SUMO_13808,axiom,
    s__documentation(s__Trembling,s__EnglishLanguage,'Any &%BodyMotion which is involuntary and which is repeated many times over a short time frame, e.g. a tremor in the hands, shivering etc.') ).

fof(kb_SUMO_13809,axiom,
    s__subclass(s__ReflexiveProcess,s__AutonomicProcess) ).

fof(kb_SUMO_13810,axiom,
    s__instance(s__ReflexiveProcess__t,s__SetOrClass) ).

fof(kb_SUMO_13811,axiom,
    s__documentation(s__ReflexiveProcess,s__EnglishLanguage,'Any &%Muscle reaction which is a response to a specific stimulus and which does not reach the level of consciousness.') ).

fof(kb_SUMO_13812,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__ReflexiveProcess)
       => ? [V__M] :
            ( s__instance(V__M,s__Muscle)
            & s__patient(V__P,V__M) ) ) ) ).

fof(kb_SUMO_13813,axiom,
    s__subclass(s__Dismounting,s__BodyMotion) ).

fof(kb_SUMO_13814,axiom,
    s__instance(s__Dismounting__t,s__SetOrClass) ).

fof(kb_SUMO_13815,axiom,
    s__documentation(s__Dismounting,s__EnglishLanguage,'Any &%BodyMotion which results in not being &%On something else.') ).

%FOL fof(kb_SUMO_13816,axiom,(( (! [V__O,V__A,V__D] : ((s__instance(V__D,s__Process) & s__instance(V__A,s__Agent) & s__instance(V__O,s__Object)) => ((s__instance(V__D,s__Dismounting) & s__agent(V__D,V__A) & s__patient(V__D,V__O)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__D)),'s__orientation(V__A,V__O,s__On)') & s__holdsDuring(s__EndFn(s__WhenFn(V__D)),'(~ s__orientation(V__A,V__O,s__On))'))))) ))).

fof(kb_SUMO_13817,axiom,
    s__subclass(s__DomesticAnimal,s__Animal) ).

fof(kb_SUMO_13818,axiom,
    s__disjoint(s__DomesticAnimal,s__Human) ).

fof(kb_SUMO_13819,axiom,
    s__documentation(s__DomesticAnimal,s__EnglishLanguage,'Any &%Animal that is kept by a &%Human, as a pet, as livestock, for exhibition, etc.') ).

fof(kb_SUMO_13820,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__DomesticAnimal)
     => ? [V__KEEP,V__PERSON] :
          ( s__instance(V__PERSON,s__Agent)
          & s__instance(V__KEEP,s__Process)
          & s__instance(V__KEEP,s__Keeping)
          & s__agent(V__KEEP,V__PERSON)
          & s__instance(V__PERSON,s__Human)
          & s__patient(V__KEEP,V__ANIMAL) ) ) ).

fof(kb_SUMO_13821,axiom,
    s__subclass(s__Fodder,s__FoodForFn(s__DomesticAnimal)) ).

fof(kb_SUMO_13822,axiom,
    s__instance(s__Fodder__t,s__SetOrClass) ).

fof(kb_SUMO_13823,axiom,
    s__subclass(s__Fodder,s__OrganicObject) ).

fof(kb_SUMO_13824,axiom,
    s__documentation(s__Fodder,s__EnglishLanguage,'&%Fodder is the class of &%OrganicObjects that is used as food for &%DomesticAnimals.') ).

fof(kb_SUMO_13825,axiom,
    ! [V__FEED] :
      ( s__instance(V__FEED,s__Physical)
     => ( s__instance(V__FEED,s__Fodder)
       => s__hasPurpose(V__FEED,'(? [V__ANIMAL,V__EAT] : (s__instance(V__EAT,s__Process) & s__instance(V__ANIMAL,s__Agent) & s__instance(V__ANIMAL,s__DomesticAnimal) & s__instance(V__EAT,s__Eating) & s__agent(V__EAT,V__ANIMAL) & s__patient(V__EAT,V__FEED)))') ) ) ).

fof(kb_SUMO_13826,axiom,
    s__subclass(s__Herbivore,s__Mammal) ).

fof(kb_SUMO_13827,axiom,
    s__disjoint(s__Herbivore,s__Carnivore) ).

fof(kb_SUMO_13828,axiom,
    s__documentation(s__Herbivore,s__EnglishLanguage,'A plant-eating &%Mammal.') ).

fof(kb_SUMO_13829,axiom,
    ! [V__A,V__F,V__E] :
      ( ( s__instance(V__E,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__A,s__Herbivore)
          & s__agent(V__E,V__A)
          & s__instance(V__E,s__Eating)
          & s__patient(V__E,V__F) )
       => s__instance(V__F,s__Plant) ) ) ).

fof(kb_SUMO_13830,axiom,
    s__subclass(s__Antelope,s__HoofedMammal) ).

fof(kb_SUMO_13831,axiom,
    s__instance(s__Antelope__t,s__SetOrClass) ).

fof(kb_SUMO_13832,axiom,
    s__documentation(s__Antelope,s__EnglishLanguage,'A &%HoofedMammal with long legs and backward-facing horns. This class includes gazelles, addax, blackbucks, etc.') ).

fof(kb_SUMO_13833,axiom,
    s__subclass(s__Buffalo,s__HoofedMammal) ).

fof(kb_SUMO_13834,axiom,
    s__instance(s__Buffalo__t,s__SetOrClass) ).

fof(kb_SUMO_13835,axiom,
    s__documentation(s__Buffalo,s__EnglishLanguage,'A &%HoofedMammal with long hair whose habitat is the plains of &%NorthAmerica.') ).

fof(kb_SUMO_13836,axiom,
    s__subclass(s__DomesticCat,s__DomesticAnimal) ).

fof(kb_SUMO_13837,axiom,
    s__instance(s__DomesticCat__t,s__SetOrClass) ).

fof(kb_SUMO_13838,axiom,
    s__instance(s__DomesticAnimal__t,s__SetOrClass) ).

fof(kb_SUMO_13839,axiom,
    s__subclass(s__DomesticCat,s__Feline) ).

fof(kb_SUMO_13840,axiom,
    s__documentation(s__DomesticCat,s__EnglishLanguage,'A variety of &%Feline which has been domesticated by selective breeding.') ).

fof(kb_SUMO_13841,axiom,
    s__subclass(s__DomesticDog,s__DomesticAnimal) ).

fof(kb_SUMO_13842,axiom,
    s__instance(s__DomesticDog__t,s__SetOrClass) ).

fof(kb_SUMO_13843,axiom,
    s__subclass(s__DomesticDog,s__Canine) ).

fof(kb_SUMO_13844,axiom,
    s__documentation(s__DomesticDog,s__EnglishLanguage,'Canines which have evolved from the common wolf by selective breeding.') ).

fof(kb_SUMO_13845,axiom,
    s__subclass(s__Fox,s__Canine) ).

fof(kb_SUMO_13846,axiom,
    s__instance(s__Fox__t,s__SetOrClass) ).

fof(kb_SUMO_13847,axiom,
    s__documentation(s__Fox,s__EnglishLanguage,'&%Canines with a bushy tail and pointed ears and nose. &%Foxes tend to be much smaller than most &%DomesticDogs.') ).

fof(kb_SUMO_13848,axiom,
    s__subclass(s__Elephant,s__Herbivore) ).

fof(kb_SUMO_13849,axiom,
    s__instance(s__Elephant__t,s__SetOrClass) ).

fof(kb_SUMO_13850,axiom,
    s__instance(s__Herbivore__t,s__SetOrClass) ).

fof(kb_SUMO_13851,axiom,
    s__documentation(s__Elephant,s__EnglishLanguage,'A very large, almost hairless &%Herbivore with a long trunk.') ).

fof(kb_SUMO_13852,axiom,
    s__documentation(s__Goat,s__EnglishLanguage,'A domesticated &%HoofedMammal that is raised primarily for &%Milk.') ).

fof(kb_SUMO_13853,axiom,
    s__subclass(s__Horse,s__HoofedMammal) ).

fof(kb_SUMO_13854,axiom,
    s__instance(s__Horse__t,s__SetOrClass) ).

fof(kb_SUMO_13855,axiom,
    s__documentation(s__Horse,s__EnglishLanguage,'A domesticated &%HoofedMammal that is used for transportation and work.') ).

fof(kb_SUMO_13856,axiom,
    s__subclass(s__Pig,s__HoofedMammal) ).

fof(kb_SUMO_13857,axiom,
    s__instance(s__Pig__t,s__SetOrClass) ).

fof(kb_SUMO_13858,axiom,
    s__documentation(s__Pig,s__EnglishLanguage,'A domesticated &%HoofedMammal that is raised for pork.') ).

fof(kb_SUMO_13859,axiom,
    s__subclass(s__Donkey,s__HoofedMammal) ).

fof(kb_SUMO_13860,axiom,
    s__instance(s__Donkey__t,s__SetOrClass) ).

fof(kb_SUMO_13861,axiom,
    s__documentation(s__Donkey,s__EnglishLanguage,'A domesticated &%HoofedMammal that is used for work.') ).

fof(kb_SUMO_13862,axiom,
    s__subclass(s__Gastropod,s__Mollusk) ).

fof(kb_SUMO_13863,axiom,
    s__instance(s__Gastropod__t,s__SetOrClass) ).

fof(kb_SUMO_13864,axiom,
    s__documentation(s__Gastropod,s__EnglishLanguage,'A &%Mollusk with a distinct head that has no shell (e.g. slugs) or a univalve shell (e.g. snails).') ).

fof(kb_SUMO_13865,axiom,
    s__subclass(s__Mule,s__HoofedMammal) ).

fof(kb_SUMO_13866,axiom,
    s__subclass(s__Mule,s__DomesticAnimal) ).

fof(kb_SUMO_13867,axiom,
    s__instance(s__Mule__t,s__SetOrClass) ).

fof(kb_SUMO_13868,axiom,
    s__documentation(s__Mule,s__EnglishLanguage,'The product of a &%Male &%Donkey and a &%Female &%Horse. &%Mules are always sterile.') ).

fof(kb_SUMO_13869,axiom,
    ! [V__MULE] :
      ( s__instance(V__MULE,s__Organism)
     => ( s__instance(V__MULE,s__Mule)
       => ? [V__DONKEY,V__HORSE] :
            ( s__instance(V__HORSE,s__Organism)
            & s__instance(V__DONKEY,s__Organism)
            & s__father(V__MULE,V__DONKEY)
            & s__instance(V__DONKEY,s__Donkey)
            & s__mother(V__MULE,V__HORSE)
            & s__instance(V__HORSE,s__Horse) ) ) ) ).

fof(kb_SUMO_13870,axiom,
    ! [V__MULE] :
      ( s__instance(V__MULE,s__Object)
     => ( s__instance(V__MULE,s__Mule)
       => ~ s__capability(s__SexualReproduction,s__agent__m,V__MULE) ) ) ).

fof(kb_SUMO_13871,axiom,
    s__subclass(s__Sheep,s__HoofedMammal) ).

fof(kb_SUMO_13872,axiom,
    s__subclass(s__Sheep,s__DomesticAnimal) ).

fof(kb_SUMO_13873,axiom,
    s__instance(s__Sheep__t,s__SetOrClass) ).

fof(kb_SUMO_13874,axiom,
    s__documentation(s__Sheep,s__EnglishLanguage,'A domesticated &%HoofedMammal that is bred for its wool and for its meat (known as mutton).') ).

fof(kb_SUMO_13875,axiom,
    s__subclass(s__Lamb,s__Sheep) ).

fof(kb_SUMO_13876,axiom,
    s__instance(s__Lamb__t,s__SetOrClass) ).

fof(kb_SUMO_13877,axiom,
    s__documentation(s__Lamb,s__EnglishLanguage,'A young &%Sheep, i.e. a &%Sheep that is &%NonFullyFormed.') ).

fof(kb_SUMO_13878,axiom,
    ! [V__L] :
      ( s__instance(V__L,s__Object)
     => ( s__instance(V__L,s__Lamb)
      <=> ( s__instance(V__L,s__Sheep)
          & s__attribute(V__L,s__NonFullyFormed) ) ) ) ).

fof(kb_SUMO_13879,axiom,
    s__subclass(s__Cow,s__HoofedMammal) ).

fof(kb_SUMO_13880,axiom,
    s__subclass(s__Cow,s__DomesticAnimal) ).

fof(kb_SUMO_13881,axiom,
    s__instance(s__Cow__t,s__SetOrClass) ).

fof(kb_SUMO_13882,axiom,
    s__documentation(s__Cow,s__EnglishLanguage,'A domesticated &%HoofedMammal that is raised for milk and beef, and is also used for work.') ).

fof(kb_SUMO_13883,axiom,
    s__subclass(s__Calf,s__Cow) ).

fof(kb_SUMO_13884,axiom,
    s__instance(s__Calf__t,s__SetOrClass) ).

fof(kb_SUMO_13885,axiom,
    s__documentation(s__Calf,s__EnglishLanguage,'A young &%Cow, i.e. a &%Cow that is &%NonFullyFormed.') ).

fof(kb_SUMO_13886,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Calf)
      <=> ( s__instance(V__C,s__Cow)
          & s__attribute(V__C,s__NonFullyFormed) ) ) ) ).

fof(kb_SUMO_13887,axiom,
    s__subclass(s__Bull,s__Cow) ).

fof(kb_SUMO_13888,axiom,
    s__instance(s__Bull__t,s__SetOrClass) ).

fof(kb_SUMO_13889,axiom,
    s__documentation(s__Bull,s__EnglishLanguage,'A &%Cow that is &%Male.') ).

fof(kb_SUMO_13890,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Object)
     => ( s__instance(V__B,s__Bull)
      <=> ( s__instance(V__B,s__Cow)
          & s__attribute(V__B,s__Male) ) ) ) ).

fof(kb_SUMO_13891,axiom,
    s__subclass(s__FemaleCow,s__Cow) ).

fof(kb_SUMO_13892,axiom,
    s__instance(s__FemaleCow__t,s__SetOrClass) ).

fof(kb_SUMO_13893,axiom,
    s__documentation(s__FemaleCow,s__EnglishLanguage,'A &%Cow that is &%Female.') ).

fof(kb_SUMO_13894,axiom,
    ! [V__COW] :
      ( s__instance(V__COW,s__Object)
     => ( s__instance(V__COW,s__FemaleCow)
      <=> ( s__instance(V__COW,s__Cow)
          & s__attribute(V__COW,s__Female) ) ) ) ).

fof(kb_SUMO_13895,axiom,
    s__subclass(s__Poultry,s__Bird) ).

fof(kb_SUMO_13896,axiom,
    s__instance(s__Poultry__t,s__SetOrClass) ).

fof(kb_SUMO_13897,axiom,
    s__subclass(s__Chicken,s__Poultry) ).

fof(kb_SUMO_13898,axiom,
    s__documentation(s__Chicken,s__EnglishLanguage,'A subclass of &%Bird that is raised for its meat and for its eggs.') ).

fof(kb_SUMO_13899,axiom,
    s__subclass(s__Hen,s__Chicken) ).

fof(kb_SUMO_13900,axiom,
    s__instance(s__Hen__t,s__SetOrClass) ).

fof(kb_SUMO_13901,axiom,
    s__instance(s__Chicken__t,s__SetOrClass) ).

fof(kb_SUMO_13902,axiom,
    s__documentation(s__Hen,s__EnglishLanguage,'A &%Female &%Chicken.') ).

fof(kb_SUMO_13903,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Object)
     => ( s__instance(V__H,s__Hen)
      <=> ( s__instance(V__H,s__Chicken)
          & s__attribute(V__H,s__Female) ) ) ) ).

fof(kb_SUMO_13904,axiom,
    s__subclass(s__Rooster,s__Chicken) ).

fof(kb_SUMO_13905,axiom,
    s__instance(s__Rooster__t,s__SetOrClass) ).

fof(kb_SUMO_13906,axiom,
    s__documentation(s__Rooster,s__EnglishLanguage,'A &%Male &%Chicken.') ).

fof(kb_SUMO_13907,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Object)
     => ( s__instance(V__R,s__Rooster)
      <=> ( s__instance(V__R,s__Chicken)
          & s__attribute(V__R,s__Male) ) ) ) ).

fof(kb_SUMO_13908,axiom,
    s__documentation(s__Duck,s__EnglishLanguage,'A subclass of &%Bird with webbed feet and a large bill. Some ducks live in the wild, and some are raised for meat and/or eggs.') ).

fof(kb_SUMO_13909,axiom,
    s__subclass(s__Duck,s__Poultry) ).

fof(kb_SUMO_13910,axiom,
    s__instance(s__Duck__t,s__SetOrClass) ).

fof(kb_SUMO_13911,axiom,
    s__subclass(s__Goose,s__Poultry) ).

fof(kb_SUMO_13912,axiom,
    s__instance(s__Goose__t,s__SetOrClass) ).

fof(kb_SUMO_13913,axiom,
    s__documentation(s__Goose,s__EnglishLanguage,'A subclass of &%Bird with webbed feet and a long neck and a large body. These &%Birds are often raised for their &%Meat.') ).

fof(kb_SUMO_13914,axiom,
    s__subclass(s__Owl,s__Bird) ).

fof(kb_SUMO_13915,axiom,
    s__instance(s__Owl__t,s__SetOrClass) ).

fof(kb_SUMO_13916,axiom,
    s__documentation(s__Owl,s__EnglishLanguage,'A nocturnal bird of prey with a large head and forward-facing eyes.') ).

fof(kb_SUMO_13917,axiom,
    s__subclass(s__Pigeon,s__Bird) ).

fof(kb_SUMO_13918,axiom,
    s__instance(s__Pigeon__t,s__SetOrClass) ).

fof(kb_SUMO_13919,axiom,
    s__documentation(s__Pigeon,s__EnglishLanguage,'A subclass of &%Bird with a stout body and short legs.') ).

fof(kb_SUMO_13920,axiom,
    s__subclass(s__Vulture,s__Bird) ).

fof(kb_SUMO_13921,axiom,
    s__instance(s__Vulture__t,s__SetOrClass) ).

fof(kb_SUMO_13922,axiom,
    s__documentation(s__Vulture,s__EnglishLanguage,'A diurnal bird of prey with a bald head that feeds on carrion.') ).

fof(kb_SUMO_13923,axiom,
    s__subclass(s__Feather,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_13924,axiom,
    s__instance(s__Feather__t,s__SetOrClass) ).

fof(kb_SUMO_13925,axiom,
    s__subclass(s__Feather,s__BodyPart) ).

fof(kb_SUMO_13926,axiom,
    s__documentation(s__Feather,s__EnglishLanguage,'Each instance of this class is one of the structures that make up the external covering of &%Birds.') ).

fof(kb_SUMO_13927,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Object)
     => ( s__instance(V__F,s__Feather)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__Bird)
            & s__part(V__F,V__B) ) ) ) ).

fof(kb_SUMO_13928,axiom,
    s__instance(s__meatOfAnimal__m,s__BinaryRelation) ).

fof(kb_SUMO_13929,axiom,
    s__documentation(s__meatOfAnimal__m,s__EnglishLanguage,'(&%meatOfAnimal ?MEATCLASS ?ANIMALCLASS) means that every instance of ?MEATCLASS was once part of some instance of ?ANIMALCLASS.') ).

fof(kb_SUMO_13930,axiom,
    s__domainSubclass(s__meatOfAnimal__m,"1",s__Meat) ).

fof(kb_SUMO_13931,axiom,
    s__domainSubclass(s__meatOfAnimal__m,"2",s__Animal) ).

%FOL fof(kb_SUMO_13932,axiom,(( (! [V__MEAT,V__ANIMAL,V__M] : ((s__instance(V__M,s__Object) & s__subclass(V__ANIMAL,s__Animal) & s__instance(V__ANIMAL,s__SetOrClass) & s__subclass(V__MEAT,s__Meat) & s__instance(V__MEAT,s__SetOrClass)) => ((s__meatOfAnimal(V__MEAT,V__ANIMAL) & s__instance(V__M,V__MEAT)) => (? [V__TIME,V__A] : (s__instance(V__A,s__Object) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__A,V__ANIMAL) & s__finishes(V__TIME,s__WhenFn(V__A)) & s__holdsDuring(V__TIME,'s__part(V__M,V__A)')))))) ))).

fof(kb_SUMO_13933,axiom,
    s__subclass(s__Beef,s__Meat) ).

fof(kb_SUMO_13934,axiom,
    s__instance(s__Beef__t,s__SetOrClass) ).

fof(kb_SUMO_13935,axiom,
    s__documentation(s__Beef,s__EnglishLanguage,'&%Meat that was originally part of a &%Cow.') ).

fof(kb_SUMO_13936,axiom,
    s__meatOfAnimal(s__Beef,s__Cow) ).

fof(kb_SUMO_13937,axiom,
    s__documentation(s__ChickenMeat,s__EnglishLanguage,'&%Meat that was originally part of a &%Chicken.') ).

fof(kb_SUMO_13938,axiom,
    s__subclass(s__ChickenMeat,s__Meat) ).

fof(kb_SUMO_13939,axiom,
    s__instance(s__ChickenMeat__t,s__SetOrClass) ).

fof(kb_SUMO_13940,axiom,
    s__meatOfAnimal(s__ChickenMeat,s__Chicken) ).

fof(kb_SUMO_13941,axiom,
    s__subclass(s__Pork,s__Meat) ).

fof(kb_SUMO_13942,axiom,
    s__instance(s__Pork__t,s__SetOrClass) ).

fof(kb_SUMO_13943,axiom,
    s__documentation(s__Pork,s__EnglishLanguage,'&%Meat that was originally part of a &%Pig.') ).

fof(kb_SUMO_13944,axiom,
    s__meatOfAnimal(s__Pork,s__Pig) ).

fof(kb_SUMO_13945,axiom,
    s__subclass(s__Mouse,s__Rodent) ).

fof(kb_SUMO_13946,axiom,
    s__instance(s__Mouse__t,s__SetOrClass) ).

fof(kb_SUMO_13947,axiom,
    s__documentation(s__Mouse,s__EnglishLanguage,'A &%Rodent that has a hairless tail like a rat but that is smaller than a &%Rat.') ).

fof(kb_SUMO_13948,axiom,
    s__subclass(s__Rat,s__Rodent) ).

fof(kb_SUMO_13949,axiom,
    s__instance(s__Rat__t,s__SetOrClass) ).

fof(kb_SUMO_13950,axiom,
    s__documentation(s__Rat,s__EnglishLanguage,'A &%Rodent that has a hairless tail like a &%Mouse but that is larger than a &%Mouse.') ).

fof(kb_SUMO_13951,axiom,
    s__subclass(s__Rabbit,s__Rodent) ).

fof(kb_SUMO_13952,axiom,
    s__instance(s__Rabbit__t,s__SetOrClass) ).

fof(kb_SUMO_13953,axiom,
    s__documentation(s__Rabbit,s__EnglishLanguage,'A burrowing &%Rodent with a short tail and long ears.') ).

fof(kb_SUMO_13954,axiom,
    s__subclass(s__Squirrel,s__Rodent) ).

fof(kb_SUMO_13955,axiom,
    s__instance(s__Squirrel__t,s__SetOrClass) ).

fof(kb_SUMO_13956,axiom,
    s__documentation(s__Squirrel,s__EnglishLanguage,'A tree-dwelling &%Rodent with a bushy tail.') ).

fof(kb_SUMO_13957,axiom,
    s__subclass(s__Hay,s__Fodder) ).

fof(kb_SUMO_13958,axiom,
    s__instance(s__Hay__t,s__SetOrClass) ).

fof(kb_SUMO_13959,axiom,
    s__documentation(s__Hay,s__EnglishLanguage,'&%Grass that has been cut and cured for use as &%Fodder.') ).

fof(kb_SUMO_13960,axiom,
    ! [V__HAY] :
      ( s__instance(V__HAY,s__Hay)
     => ? [V__MAKE,V__GRASS] :
          ( s__instance(V__GRASS,s__Object)
          & s__instance(V__MAKE,s__Process)
          & s__instance(V__MAKE,s__Making)
          & s__resource(V__MAKE,V__GRASS)
          & s__instance(V__GRASS,s__Grass)
          & s__result(V__MAKE,V__HAY) ) ) ).

fof(kb_SUMO_13961,axiom,
    s__subclass(s__Copying,s__Making) ).

fof(kb_SUMO_13962,axiom,
    s__instance(s__Copying__t,s__SetOrClass) ).

fof(kb_SUMO_13963,axiom,
    s__documentation(s__Copying,s__EnglishLanguage,'&%Making a &%copy of something.') ).

fof(kb_SUMO_13964,axiom,
    ! [V__THING2,V__THING1,V__COPY] :
      ( ( s__instance(V__COPY,s__Process)
        & s__instance(V__THING1,s__Object)
        & s__instance(V__THING2,s__Object) )
     => ( ( s__instance(V__COPY,s__Copying)
          & s__resource(V__COPY,V__THING1)
          & s__result(V__COPY,V__THING2) )
       => s__copy(V__THING1,V__THING2) ) ) ).

fof(kb_SUMO_13965,axiom,
    s__subclass(s__Vacationing,s__RecreationOrExercise) ).

fof(kb_SUMO_13966,axiom,
    s__instance(s__Vacationing__t,s__SetOrClass) ).

fof(kb_SUMO_13967,axiom,
    s__documentation(s__Vacationing,s__EnglishLanguage,'Taking time off from &%Working.') ).

fof(kb_SUMO_13968,axiom,
    ! [V__PERSON,V__WORK,V__VACATION] :
      ( ( s__instance(V__VACATION,s__Process)
        & s__instance(V__WORK,s__Process)
        & s__instance(V__PERSON,s__Agent) )
     => ( ( s__instance(V__VACATION,s__Vacationing)
          & s__instance(V__WORK,s__Working)
          & s__agent(V__VACATION,V__PERSON)
          & s__agent(V__WORK,V__PERSON)
          & s__instance(V__PERSON,s__Human) )
       => ~ s__overlapsTemporally(s__WhenFn(V__VACATION),s__WhenFn(V__WORK)) ) ) ).

fof(kb_SUMO_13969,axiom,
    s__documentation(s__OccupationFn__m,s__EnglishLanguage,'(OccupationFn ?PROCESS) denotes the subclass of ?PROCESS where instances of ?PROCESS are performed as ones occupation, i.e. as part of a &%FinancialTransaction where one earns money for the performance of ?PROCESS.') ).

fof(kb_SUMO_13970,axiom,
    s__instance(s__OccupationFn__m,s__UnaryFunction) ).

fof(kb_SUMO_13971,axiom,
    s__domain(s__OccupationFn__m,"1",s__IntentionalProcess) ).

fof(kb_SUMO_13972,axiom,
    s__rangeSubclass(s__OccupationFn__m,s__FinancialTransaction) ).

fof(kb_SUMO_13973,axiom,
    s__documentation(s__occupation__m,s__EnglishLanguage,'(occupation ?PERSON ?TYPE) means that the occupation of ?PERSON is ?TYPE. This predicate is most often used in combination with the function &%OccupationFn, e.g. (&%occupation PoliceOfficerWilkins (&%OccupationFn &%LawEnforcement)).') ).

fof(kb_SUMO_13974,axiom,
    s__instance(s__occupation__m,s__BinaryPredicate) ).

fof(kb_SUMO_13975,axiom,
    s__domain(s__occupation__m,"1",s__Human) ).

fof(kb_SUMO_13976,axiom,
    s__domain(s__occupation__m,"2",s__FinancialTransaction) ).

fof(kb_SUMO_13977,axiom,
    s__subclass(s__Working,s__FinancialTransaction) ).

fof(kb_SUMO_13978,axiom,
    s__instance(s__Working__t,s__SetOrClass) ).

fof(kb_SUMO_13979,axiom,
    s__documentation(s__Working,s__EnglishLanguage,'Any &%FinancialTransaction where someone exchanges his/her labor for an instance of &%CurrencyMeasure.') ).

fof(kb_SUMO_13980,axiom,
    s__subclass(s__Farming,s__Working) ).

fof(kb_SUMO_13981,axiom,
    s__instance(s__Farming__t,s__SetOrClass) ).

fof(kb_SUMO_13982,axiom,
    s__documentation(s__Farming,s__EnglishLanguage,'Operating a farm, e.g. planting and harvesting crops, tending livestock, etc.') ).

%FOL fof(kb_SUMO_13983,axiom,(( (! [V__FARMER,V__FARMING] : ((s__instance(V__FARMING,s__Process) & s__instance(V__FARMER,s__Agent)) => ((s__instance(V__FARMING,s__Farming) & s__agent(V__FARMING,V__FARMER)) => (? [V__FARM] : (s__instance(V__FARM,s__Object) & s__instance(V__FARM,s__Farm) & s__holdsDuring(s__WhenFn(V__FARMING),'s__located(V__FARMER,V__FARM)')))))) ))).

fof(kb_SUMO_13984,axiom,
    s__subclass(s__Serving,s__Working) ).

fof(kb_SUMO_13985,axiom,
    s__instance(s__Serving__t,s__SetOrClass) ).

fof(kb_SUMO_13986,axiom,
    s__documentation(s__Serving,s__EnglishLanguage,'Working as a waiter or servant, either for an &%Organization (e.g. a &%Restaurant) or for a person or family.') ).

fof(kb_SUMO_13987,axiom,
    s__subclass(s__Sales,s__Working) ).

fof(kb_SUMO_13988,axiom,
    s__instance(s__Sales__t,s__SetOrClass) ).

fof(kb_SUMO_13989,axiom,
    s__documentation(s__Sales,s__EnglishLanguage,'Any instance of &%Working that involves &%Selling or trying to sell items.') ).

fof(kb_SUMO_13990,axiom,
    s__subAttribute(s__Retired,s__Unemployed) ).

fof(kb_SUMO_13991,axiom,
    s__documentation(s__Retired,s__EnglishLanguage,'Voluntary unemployment toward the end of ones life.') ).

fof(kb_SUMO_13992,axiom,
    s__subAttribute(s__Housewife,s__Unemployed) ).

fof(kb_SUMO_13993,axiom,
    s__documentation(s__Housewife,s__EnglishLanguage,'A role occupied by a wife who manages the home while her husband earns income for the family.') ).

fof(kb_SUMO_13994,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Woman)
     => ( s__attribute(V__W,s__Housewife)
       => ? [V__H] :
            ( s__instance(V__H,s__Man)
            & s__wife(V__W,V__H) ) ) ) ).

fof(kb_SUMO_13995,axiom,
    s__instance(s__Waiter,s__ServicePosition) ).

fof(kb_SUMO_13996,axiom,
    s__documentation(s__Waiter,s__EnglishLanguage,'&%Waiter refers to the &%ServicePosition present in &%Restaurant that brings food from the kitchen to the customers table') ).

fof(kb_SUMO_13997,axiom,
    s__termFormat(s__EnglishLanguage,s__Waiter,waiter) ).

fof(kb_SUMO_13998,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Waiter)
       => s__instance(V__X,s__Human) ) ) ).

fof(kb_SUMO_13999,axiom,
    ! [V__KITCHEN,V__C,V__REST,V__X,V__TABLE,V__CUST,V__FOOD,V__DINING] :
      ( ( s__instance(V__DINING,s__Object)
        & s__instance(V__CUST,s__CognitiveAgent)
        & s__instance(V__TABLE,s__Object)
        & s__instance(V__X,s__CognitiveAgent)
        & s__instance(V__REST,s__Organization)
        & s__instance(V__REST,s__CognitiveAgent)
        & s__instance(V__C,s__Process)
        & s__instance(V__KITCHEN,s__Object) )
     => ( ( s__attribute(V__X,s__Waiter)
          & s__instance(V__X,s__Human)
          & s__employs(V__REST,V__X)
          & s__instance(V__REST,s__Restaurant)
          & s__customer(V__CUST,V__REST)
          & s__located(V__CUST,V__TABLE)
          & s__instance(V__TABLE,s__Table) )
       => ( s__possesses(V__REST,V__KITCHEN)
          & s__instance(V__KITCHEN,s__KitchenArea)
          & s__instance(V__DINING,s__DiningArea)
          & s__located(V__TABLE,V__DINING)
          & s__hasPurpose(V__X,'(s__instance(V__C,s__Carrying) & s__agent(V__C,V__X) & s__origin(V__C,V__KITCHEN) & s__destination(V__C,V__TABLE) & s__patient(V__C,V__FOOD) & s__instance(V__FOOD,s__FoodForFn(s__Human)))') ) ) ) ).

fof(kb_SUMO_14000,axiom,
    s__instance(s__Maid,s__ServicePosition) ).

fof(kb_SUMO_14001,axiom,
    s__instance(s__ServicePosition__t,s__SetOrClass) ).

fof(kb_SUMO_14002,axiom,
    s__documentation(s__Maid,s__EnglishLanguage,'This &%Attribute describes a &%Woman who works in a &%ServicePosition that entails performing various domestic tasks (cleaning, cooking, child care) for an individual or family over an extended period of time, typically months or years.') ).

%FOL fof(kb_SUMO_14003,axiom,(( (! [V__T1,V__MAID] : ((s__instance(V__MAID,s__Agent) & s__instance(V__T1,s__TimeInterval)) => (s__holdsDuring(V__T1,'s__attribute(V__MAID,s__Maid)') => (? [V__SERVE] : (s__instance(V__SERVE,s__TimeInterval) & s__instance(V__SERVE,s__Process) & s__during(V__SERVE,V__T1) & s__instance(V__SERVE,s__Serving) & s__agent(V__SERVE,V__MAID)))))) ))).

fof(kb_SUMO_14004,axiom,
    s__subclass(s__Janitor,s__UnskilledOccupation) ).

fof(kb_SUMO_14005,axiom,
    s__instance(s__Janitor__t,s__SetOrClass) ).

fof(kb_SUMO_14006,axiom,
    s__documentation(s__Janitor,s__EnglishLanguage,'Any &%Position which involves cleaning a &%Building or some of the &%Rooms within a &%Building.') ).

fof(kb_SUMO_14007,axiom,
    ! [V__P,V__J] :
      ( ( s__instance(V__J,s__Attribute)
        & s__instance(V__P,s__Human) )
     => ( ( s__instance(V__J,s__Janitor)
          & s__attribute(V__P,V__J) )
       => s__occupation(V__P,s__OccupationFn(s__Washing)) ) ) ).

fof(kb_SUMO_14008,axiom,
    s__subclass(s__TheaterProfession,s__EntertainmentProfession) ).

fof(kb_SUMO_14009,axiom,
    s__instance(s__TheaterProfession__t,s__SetOrClass) ).

fof(kb_SUMO_14010,axiom,
    s__documentation(s__TheaterProfession,s__EnglishLanguage,'Instances of this &%Class describe the &%Positions of people whose work involves putting on plays (theatrical performanes).') ).

fof(kb_SUMO_14011,axiom,
    s__instance(s__FilmDirector,s__FilmMakingProfession) ).

fof(kb_SUMO_14012,axiom,
    s__documentation(s__FilmDirector,s__EnglishLanguage,'A &%Position that describes a person who directs &%MotionPictures as a profession.') ).

fof(kb_SUMO_14013,axiom,
    s__subclass(s__FilmMaking,s__ContentDevelopment) ).

fof(kb_SUMO_14014,axiom,
    s__instance(s__FilmMaking__t,s__SetOrClass) ).

fof(kb_SUMO_14015,axiom,
    s__documentation(s__FilmMaking,s__EnglishLanguage,'&%ContentDevelopment where the result is a &%MotionPicture.') ).

fof(kb_SUMO_14016,axiom,
    ! [V__FM] :
      ( s__instance(V__FM,s__Process)
     => ( s__instance(V__FM,s__FilmMaking)
       => ? [V__M,V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__M,s__MotionPicture)
            & s__result(V__FM,V__M)
            & s__instance(V__F,s__PhotographicFilm)
            & s__resource(V__FM,V__F) ) ) ) ).

fof(kb_SUMO_14017,axiom,
    s__subclass(s__FilmMakingProfession,s__EntertainmentProfession) ).

fof(kb_SUMO_14018,axiom,
    s__instance(s__FilmMakingProfession__t,s__SetOrClass) ).

fof(kb_SUMO_14019,axiom,
    s__documentation(s__FilmMakingProfession,s__EnglishLanguage,'&%Positions which involve &%FilmMaking, i.e. acting in films, directing films, producing films, etc.') ).

fof(kb_SUMO_14020,axiom,
    ! [V__P,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__P,s__Attribute) )
     => ( ( s__instance(V__P,s__FilmMakingProfession)
          & s__attribute(V__H,V__P) )
       => s__occupation(V__H,s__OccupationFn(s__FilmMaking)) ) ) ).

fof(kb_SUMO_14021,axiom,
    s__instance(s__FilmProducer,s__FilmMakingProfession) ).

fof(kb_SUMO_14022,axiom,
    s__documentation(s__FilmProducer,s__EnglishLanguage,'A &%Position that describes a person who produces &%MotionPictures as a profession, i.e., who arranges the financing for a &%MotionPicture and supervises its production.') ).

fof(kb_SUMO_14023,axiom,
    s__instance(s__Coach,s__SkilledOccupation) ).

fof(kb_SUMO_14024,axiom,
    s__documentation(s__Coach,s__EnglishLanguage,'Any occupation that involves training an athlete or a sports team.') ).

fof(kb_SUMO_14025,axiom,
    s__instance(s__GameReferee,s__SkilledOccupation) ).

fof(kb_SUMO_14026,axiom,
    s__documentation(s__GameReferee,s__EnglishLanguage,'This &%Attribute describes a person who adjudicates &%Maneuvers in a &%Game, i.e., who decides whether or not the &%Maneuvers are permitted by the rules of the &%Game.') ).

fof(kb_SUMO_14027,axiom,
    s__instance(s__Carpenter,s__OccupationalTrade) ).

fof(kb_SUMO_14028,axiom,
    s__instance(s__OccupationalTrade__t,s__SetOrClass) ).

fof(kb_SUMO_14029,axiom,
    s__documentation(s__Carpenter,s__EnglishLanguage,'Any occupation that involves creating and repairing structural and decorative portions of &%Buildings that are made chiefly of &%Wood. This does not include plumbing, roofing, electrical, foundation and site work.') ).

fof(kb_SUMO_14030,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Agent)
     => ( s__attribute(V__P,s__Carpenter)
       => s__hasSkill(s__Carpentry,V__P) ) ) ).

fof(kb_SUMO_14031,axiom,
    s__subclass(s__Carpentry,s__Making) ).

fof(kb_SUMO_14032,axiom,
    s__instance(s__Carpentry__t,s__SetOrClass) ).

fof(kb_SUMO_14033,axiom,
    s__documentation(s__Carpentry,s__EnglishLanguage,'&%Making &%Buildings out of &%Wood.') ).

fof(kb_SUMO_14034,axiom,
    ! [V__C,V__W] :
      ( ( s__instance(V__W,s__Object)
        & s__instance(V__C,s__Process) )
     => ( s__instance(V__C,s__Carpentry)
       => ? [V__B] :
            ( s__instance(V__B,s__Object)
            & s__instance(V__B,s__Building)
            & s__instance(V__W,s__Wood)
            & s__part(V__W,V__B)
            & s__result(V__C,V__B) ) ) ) ).

fof(kb_SUMO_14035,axiom,
    s__instance(s__constructionPeriod__m,s__BinaryPredicate) ).

fof(kb_SUMO_14036,axiom,
    s__domain(s__constructionPeriod__m,"1",s__StationaryArtifact) ).

fof(kb_SUMO_14037,axiom,
    s__domain(s__constructionPeriod__m,"2",s__TimeInterval) ).

fof(kb_SUMO_14038,axiom,
    s__documentation(s__constructionPeriod__m,s__EnglishLanguage,'(constructionPeriod ?OBJECT ?INTERVAL) means that some &%StationaryArtifact ?OBJECT was built over &%TimeInterval ?INTERVAL') ).

fof(kb_SUMO_14039,axiom,
    s__termFormat(s__EnglishLanguage,s__constructionPeriod__m,'construction period') ).

fof(kb_SUMO_14040,axiom,
    ! [V__OBJECT,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__instance(V__OBJECT,s__StationaryArtifact) )
     => ( s__constructionPeriod(V__OBJECT,V__INTERVAL)
       => s__holdsDuring(V__INTERVAL,'(? [V__CONSTRUCTING] : (s__instance(V__CONSTRUCTING,s__Process) & s__instance(V__CONSTRUCTING,s__Constructing) & s__result(V__CONSTRUCTING,V__OBJECT)))') ) ) ).

fof(kb_SUMO_14041,axiom,
    s__instance(s__contractor__m,s__BinaryPredicate) ).

fof(kb_SUMO_14042,axiom,
    s__domain(s__contractor__m,"1",s__StationaryArtifact) ).

fof(kb_SUMO_14043,axiom,
    s__domain(s__contractor__m,"2",s__Agent) ).

fof(kb_SUMO_14044,axiom,
    s__documentation(s__contractor__m,s__EnglishLanguage,'(contractor ?BUILDING ?AGENT) means that some &%Agent ?AGENT has a contract with another ?AGENT to build a &%StationaryArtifact for the agent.') ).

fof(kb_SUMO_14045,axiom,
    ! [V__BUILDING,V__CONTRACTOR] :
      ( s__instance(V__CONTRACTOR,s__CognitiveAgent)
     => ( s__contractor(V__BUILDING,V__CONTRACTOR)
       => ? [V__CONTRACT,V__AGENT] :
            ( s__property(V__CONTRACT,s__Contract)
            & s__partyToAgreement(V__AGENT,V__CONTRACT)
            & s__partyToAgreement(V__CONTRACTOR,V__CONTRACT)
            & s__confersObligation('(? [V__CONSTRUCT,V__BUILDING] : (s__instance(V__CONSTRUCT,s__Process) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__CONTRACT,s__Agreement) & s__instance(V__CONSTRUCT,s__Constructing) & s__agent(V__CONSTRUCT,V__CONTRACTOR) & s__result(V__CONSTRUCT,V__BUILDING) & s__instance(V__BUILDING,s__StationaryArtifact)))',V__AGENT,V__CONTRACTOR) ) ) ) ).

fof(kb_SUMO_14046,axiom,
    s__subclass(s__Agriculture,s__Maintaining) ).

fof(kb_SUMO_14047,axiom,
    s__instance(s__Agriculture__t,s__SetOrClass) ).

fof(kb_SUMO_14048,axiom,
    s__documentation(s__Agriculture,s__EnglishLanguage,'&%Agriculture is a class of &%Processes in which land, plants, or animals are cultivated in order to produce food or other organic products.') ).

fof(kb_SUMO_14049,axiom,
    ! [V__AGRO] :
      ( s__instance(V__AGRO,s__Process)
     => ( s__instance(V__AGRO,s__Agriculture)
       => ? [V__GROWTH] :
            ( s__instance(V__GROWTH,s__Process)
            & s__instance(V__GROWTH,s__Growth)
            & s__subProcess(V__GROWTH,V__AGRO) ) ) ) ).

fof(kb_SUMO_14050,axiom,
    s__instance(s__FarmHand,s__OccupationalTrade) ).

fof(kb_SUMO_14051,axiom,
    s__documentation(s__FarmHand,s__EnglishLanguage,'&%OccupationalTrades which involve &%Agriculture.') ).

fof(kb_SUMO_14052,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Agent)
     => ( s__attribute(V__P,s__FarmHand)
       => ? [V__F] :
            ( s__instance(V__F,s__Process)
            & s__instance(V__F,s__Agriculture)
            & s__agent(V__F,V__P) ) ) ) ).

fof(kb_SUMO_14053,axiom,
    s__instance(s__Plumber,s__OccupationalTrade) ).

fof(kb_SUMO_14054,axiom,
    s__documentation(s__Plumber,s__EnglishLanguage,'Any occupation that involves installing, repairing, and replacing pipes and pipe fixtures.') ).

fof(kb_SUMO_14055,axiom,
    s__instance(s__Potter,s__OccupationalTrade) ).

fof(kb_SUMO_14056,axiom,
    s__documentation(s__Potter,s__EnglishLanguage,'Any occupation that involves the creation of &%Pottery.') ).

fof(kb_SUMO_14057,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Agent)
     => ( s__attribute(V__H,s__Potter)
       => ? [V__M,V__P] :
            ( s__instance(V__M,s__Process)
            & s__instance(V__P,s__Pottery)
            & s__instance(V__M,s__Making)
            & s__agent(V__M,V__H)
            & s__result(V__M,V__P) ) ) ) ).

fof(kb_SUMO_14058,axiom,
    s__subclass(s__ReligiousPosition,s__Position) ).

fof(kb_SUMO_14059,axiom,
    s__documentation(s__ReligiousPosition,s__EnglishLanguage,'Any &%Position within a &%ReligousOrganization.') ).

fof(kb_SUMO_14060,axiom,
    ! [V__O,V__P,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__P,s__Position)
        & s__instance(V__O,s__Organization) )
     => ( ( s__occupiesPosition(V__H,V__P,V__O)
          & s__instance(V__P,s__ReligiousPosition) )
       => s__instance(V__O,s__ReligiousOrganization) ) ) ).

fof(kb_SUMO_14061,axiom,
    s__instance(s__Cleric,s__Profession) ).

fof(kb_SUMO_14062,axiom,
    s__instance(s__Cleric,s__ReligiousPosition) ).

fof(kb_SUMO_14063,axiom,
    s__instance(s__ReligiousPosition__t,s__SetOrClass) ).

fof(kb_SUMO_14064,axiom,
    s__documentation(s__Cleric,s__EnglishLanguage,'The profession of being in charge of or ministering to a &%ReligousOrganization.') ).

fof(kb_SUMO_14065,axiom,
    s__instance(s__Deacon,s__ReligiousPosition) ).

fof(kb_SUMO_14066,axiom,
    s__instance(s__Deacon,s__PartTimePosition) ).

fof(kb_SUMO_14067,axiom,
    s__instance(s__PartTimePosition__t,s__SetOrClass) ).

fof(kb_SUMO_14068,axiom,
    s__documentation(s__Deacon,s__EnglishLanguage,'Any &%Position within a &%ReligiousOrganization that is held by a layman, which is part-time, and which involves assisting a &%Cleric.') ).

fof(kb_SUMO_14069,axiom,
    ! [V__TIME,V__PERSON,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON,s__Human)
        & s__instance(V__TIME,s__TimePosition) )
     => ( s__holdsDuring(V__TIME,'(s__occupiesPosition(V__PERSON,s__Deacon,V__ORG) & s__instance(V__ORG,s__ReligiousOrganization))')
       => ? [V__C] :
            ( s__instance(V__C,s__Human)
            & s__holdsDuring(V__TIME,'(s__occupiesPosition(V__C,s__Cleric,V__ORG) & s__subordinateInOrganization(V__ORG,V__PERSON,V__C))') ) ) ) ).

fof(kb_SUMO_14070,axiom,
    s__instance(s__PoliceOfficer,s__SkilledOccupation) ).

fof(kb_SUMO_14071,axiom,
    s__instance(s__PoliceOfficer,s__GovernmentPosition) ).

fof(kb_SUMO_14072,axiom,
    s__documentation(s__PoliceOfficer,s__EnglishLanguage,'The profession of being a police officer, i.e. working for a law enforcement agency that is part of a &%Government.') ).

fof(kb_SUMO_14073,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Agent)
     => ( s__attribute(V__P,s__PoliceOfficer)
       => s__hasSkill(s__PlacingUnderArrest,V__P) ) ) ).

fof(kb_SUMO_14074,axiom,
    s__subAttribute(s__PoliceCaptain,s__PoliceOfficer) ).

fof(kb_SUMO_14075,axiom,
    s__documentation(s__PoliceCaptain,s__EnglishLanguage,'A &%PoliceOfficer who is in charge of a precinct.') ).

fof(kb_SUMO_14076,axiom,
    s__subAttribute(s__PoliceSergeant,s__PoliceOfficer) ).

fof(kb_SUMO_14077,axiom,
    s__documentation(s__PoliceSergeant,s__EnglishLanguage,'A &%PoliceOfficer with the rank of sergeant.') ).

fof(kb_SUMO_14078,axiom,
    s__subAttribute(s__Sheriff,s__PoliceOfficer) ).

fof(kb_SUMO_14079,axiom,
    s__documentation(s__Sheriff,s__EnglishLanguage,'A &%PoliceOfficer whose jurisdiction is a &%County.') ).

fof(kb_SUMO_14080,axiom,
    s__subAttribute(s__Marshal,s__PoliceOfficer) ).

fof(kb_SUMO_14081,axiom,
    s__documentation(s__Marshal,s__EnglishLanguage,'A &%PoliceOfficer whose responsibility is to enforce the decisions of a law court.') ).

fof(kb_SUMO_14082,axiom,
    s__subAttribute(s__Deputy,s__PoliceOfficer) ).

fof(kb_SUMO_14083,axiom,
    s__documentation(s__Deputy,s__EnglishLanguage,'A &%Position which authorizes the holder of the position to act as the sheriff when the sheriff is not available.') ).

fof(kb_SUMO_14084,axiom,
    s__instance(s__Coroner,s__GovernmentPosition) ).

fof(kb_SUMO_14085,axiom,
    s__documentation(s__Coroner,s__EnglishLanguage,'A &%GovernmentPosition who investigates deaths that are suspected of being due to something other than natural causes.') ).

fof(kb_SUMO_14086,axiom,
    s__subAttribute(s__PoliceDetective,s__PoliceOfficer) ).

fof(kb_SUMO_14087,axiom,
    s__documentation(s__PoliceDetective,s__EnglishLanguage,'The &%Profession of being a police detective, i.e. being a &%PoliceOfficer whose duties include the investigation of crimes.') ).

fof(kb_SUMO_14088,axiom,
    s__instance(s__PrivateDetective,s__Profession) ).

fof(kb_SUMO_14089,axiom,
    s__contraryAttribute_2(s__PrivateDetective,s__PoliceDetective) ).

fof(kb_SUMO_14090,axiom,
    s__documentation(s__PrivateDetective,s__EnglishLanguage,'The &%Profession of being a private detective, i.e. a detective who can be hired for a fee to investigate something.') ).

fof(kb_SUMO_14091,axiom,
    s__instance(s__Lawyer,s__Profession) ).

fof(kb_SUMO_14092,axiom,
    s__subAttribute(s__Attorney,s__Lawyer) ).

fof(kb_SUMO_14093,axiom,
    s__documentation(s__Lawyer,s__EnglishLanguage,'This &%Attribute describes a person whose &%Profession is the practice of law, whether as a &%Judge or as a legal advocate.') ).

fof(kb_SUMO_14094,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Human)
     => ( s__attribute(V__P,s__Lawyer)
       => s__hasExpertise(V__P,s__FieldOfLaw) ) ) ).

fof(kb_SUMO_14095,axiom,
    s__subAttribute(s__AttorneyGeneral,s__Attorney) ).

fof(kb_SUMO_14096,axiom,
    s__instance(s__AttorneyGeneral,s__GovernmentPosition) ).

fof(kb_SUMO_14097,axiom,
    s__documentation(s__AttorneyGeneral,s__EnglishLanguage,'This &%Attribute designates the chief law officer of a &%GeopoliticalArea, usually a &%Nation or &%StateOrProvince.') ).

fof(kb_SUMO_14098,axiom,
    s__subAttribute(s__PublicDefender,s__Attorney) ).

fof(kb_SUMO_14099,axiom,
    s__instance(s__PublicDefender,s__GovernmentPosition) ).

fof(kb_SUMO_14100,axiom,
    s__documentation(s__PublicDefender,s__EnglishLanguage,'An &%Attorney who defends criminal cases for a &%GovernmentOrganization.') ).

fof(kb_SUMO_14101,axiom,
    s__subAttribute(s__PublicProsecutor,s__Attorney) ).

fof(kb_SUMO_14102,axiom,
    s__instance(s__PublicProsecutor,s__GovernmentPosition) ).

fof(kb_SUMO_14103,axiom,
    s__documentation(s__PublicProsecutor,s__EnglishLanguage,'An &%Attorney who prosecutes criminal cases for a &%GovernmentOrganization.') ).

fof(kb_SUMO_14104,axiom,
    s__subAttribute(s__Judge,s__Attorney) ).

fof(kb_SUMO_14105,axiom,
    s__instance(s__Judge,s__GovernmentPosition) ).

fof(kb_SUMO_14106,axiom,
    s__documentation(s__Judge,s__EnglishLanguage,'An &%Attorney who has the power of deciding legal cases.') ).

fof(kb_SUMO_14107,axiom,
    ! [V__O,V__P,V__J] :
      ( ( s__instance(V__J,s__Position)
        & s__instance(V__P,s__Human)
        & s__instance(V__O,s__Organization) )
     => ( ( s__instance(V__J,s__Judge)
          & s__occupiesPosition(V__P,V__J,V__O) )
       => s__modalAttribute('(? [V__D] : (s__instance(V__D,s__Process) & s__instance(V__D,s__LegalDecision) & s__agent(V__D,V__P)))',s__Permission) ) ) ).

fof(kb_SUMO_14108,axiom,
    ! [V__O,V__P,V__J] :
      ( ( s__instance(V__J,s__Position)
        & s__instance(V__P,s__Human)
        & s__instance(V__O,s__Organization) )
     => ( ( s__instance(V__J,s__Judge)
          & s__occupiesPosition(V__P,V__J,V__O) )
       => s__instance(V__O,s__JudicialOrganization) ) ) ).

fof(kb_SUMO_14109,axiom,
    s__subAttribute(s__Professor,s__Teacher) ).

fof(kb_SUMO_14110,axiom,
    s__documentation(s__Professor,s__EnglishLanguage,'The &%Profession of being a &%teacher at a &%PostSecondarySchool.') ).

fof(kb_SUMO_14111,axiom,
    ! [V__PROF,V__PERSON,V__ORG] :
      ( ( s__instance(V__ORG,s__EducationalOrganization)
        & s__instance(V__PERSON,s__Human)
        & s__instance(V__PROF,s__Position)
        & s__instance(V__PROF,s__CognitiveAgent) )
     => ( ( s__instance(V__PROF,s__Professor)
          & s__occupiesPosition(V__PERSON,V__PROF,V__ORG) )
       => ( s__teacher(V__PROF,V__ORG)
          & s__instance(V__ORG,s__PostSecondarySchool) ) ) ) ).

fof(kb_SUMO_14112,axiom,
    s__instance(s__MedicalDoctor,s__Profession) ).

fof(kb_SUMO_14113,axiom,
    s__documentation(s__MedicalDoctor,s__EnglishLanguage,'The &%Profession of being a medical doctor, i.e. having attended medical school and being licensed to practice medicine.') ).

fof(kb_SUMO_14114,axiom,
    ! [V__DOCTOR] :
      ( s__instance(V__DOCTOR,s__Object)
     => ( s__attribute(V__DOCTOR,s__MedicalDoctor)
       => ? [V__PROCESS1,V__PROCESS2] :
            ( s__instance(V__PROCESS2,s__SetOrClass)
            & s__subclass(V__PROCESS2,s__Process)
            & s__instance(V__PROCESS1,s__SetOrClass)
            & s__subclass(V__PROCESS1,s__Process)
            & s__subclass(V__PROCESS1,s__DiagnosticProcess)
            & s__subclass(V__PROCESS2,s__TherapeuticProcess)
            & s__capability(V__PROCESS1,s__agent__m,V__DOCTOR)
            & s__capability(V__PROCESS2,s__agent__m,V__DOCTOR) ) ) ) ).

fof(kb_SUMO_14115,axiom,
    s__subAttribute(s__Surgeon,s__MedicalDoctor) ).

fof(kb_SUMO_14116,axiom,
    s__documentation(s__Surgeon,s__EnglishLanguage,'The &%Profession of being a surgeon, i.e. being a medical doctor who specializes in performing surgical operations.') ).

fof(kb_SUMO_14117,axiom,
    s__documentation(s__Circumision,s__EnglishLanguage,'&%Removing the foreskin of the penis. This is usually performed on infants, but is occasionally performed on adolescents and adults, either for medical reasons, or after religious conversion. It is often conducted as a religious rite, since it is prescribed by both the &%Jewish and &%Muslim religions, although it is prevalent also as a social norm in different nations.') ).

fof(kb_SUMO_14118,axiom,
    s__subclass(s__Circumision,s__Removing) ).

fof(kb_SUMO_14119,axiom,
    s__instance(s__Circumision__t,s__SetOrClass) ).

fof(kb_SUMO_14120,axiom,
    s__subclass(s__Circumision,s__Surgery) ).

fof(kb_SUMO_14121,axiom,
    s__instance(s__NewsReporter,s__Profession) ).

fof(kb_SUMO_14122,axiom,
    s__documentation(s__NewsReporter,s__EnglishLanguage,'The &%Profession of being a news reporter, i.e. investigating and reporting, in a publication or broadcast program, current events.') ).

fof(kb_SUMO_14123,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Agent)
     => ( s__attribute(V__H,s__NewsReporter)
       => ? [V__T,V__EV] :
            ( s__instance(V__EV,s__Physical)
            & s__subclass(V__T,s__Text)
            & s__instance(V__EV,s__Process)
            & s__overlapsTemporally(s__WhenFn(V__EV),s__WhenFn(V__H))
            & s__authors(V__H,V__T)
            & s__refers(V__T,V__EV) ) ) ) ).

fof(kb_SUMO_14124,axiom,
    s__subAttribute(s__ArtCritic,s__Journalist) ).

fof(kb_SUMO_14125,axiom,
    s__documentation(s__ArtCritic,s__EnglishLanguage,'The &%Profession of reporting and critiquing current &%ArtWorks.') ).

fof(kb_SUMO_14126,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Agent)
     => ( s__attribute(V__H,s__ArtCritic)
       => ? [V__T,V__AW] :
            ( s__subclass(V__T,s__Text)
            & s__instance(V__AW,s__ArtWork)
            & s__authors(V__H,V__T)
            & s__refers(V__T,V__AW) ) ) ) ).

fof(kb_SUMO_14127,axiom,
    s__instance(s__Accountant,s__Profession) ).

fof(kb_SUMO_14128,axiom,
    s__documentation(s__Accountant,s__EnglishLanguage,'The &%Profession of being an &%Accountant.') ).

fof(kb_SUMO_14129,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Accountant)
       => s__capability(s__Calculating,s__agent__m,V__X) ) ) ).

fof(kb_SUMO_14130,axiom,
    s__instance(s__Literature,s__FieldOfStudy) ).

fof(kb_SUMO_14131,axiom,
    s__documentation(s__Literature,s__EnglishLanguage,'The study of literature, i.e. instances of &%FictionalText that are regarded as having special merit.') ).

fof(kb_SUMO_14132,axiom,
    s__instance(s__Mathematics,s__FieldOfStudy) ).

fof(kb_SUMO_14133,axiom,
    s__documentation(s__Mathematics,s__EnglishLanguage,'The &%FieldOfStudy dealing with quantities and their relations to one another.') ).

fof(kb_SUMO_14134,axiom,
    s__instance(s__InteriorDesign,s__FieldOfStudy) ).

fof(kb_SUMO_14135,axiom,
    s__documentation(s__InteriorDesign,s__EnglishLanguage,'The &%FieldOfStudy of designing the interiors of &%Buildings.') ).

fof(kb_SUMO_14136,axiom,
    s__subclass(s__Science,s__FieldOfStudy) ).

fof(kb_SUMO_14137,axiom,
    s__instance(s__Science__t,s__SetOrClass) ).

fof(kb_SUMO_14138,axiom,
    s__documentation(s__Science,s__EnglishLanguage,'Any &%FieldOfStudy which tests theories on the basis of careful observations and/or experiments and which has a cumulative body of results.') ).

fof(kb_SUMO_14139,axiom,
    s__subclass(s__SocialScience,s__Science) ).

fof(kb_SUMO_14140,axiom,
    s__documentation(s__SocialScience,s__EnglishLanguage,'Any &%Science which studies human behavior, either in the aggregate, as do, for example, &%Economics and &%Linguistics, or with respect to the individual, as does &%Psychology.') ).

fof(kb_SUMO_14141,axiom,
    s__instance(s__PoliticalScience,s__SocialScience) ).

fof(kb_SUMO_14142,axiom,
    s__documentation(s__PoliticalScience,s__EnglishLanguage,'The field of political science.') ).

fof(kb_SUMO_14143,axiom,
    s__instance(s__Anthropology,s__SocialScience) ).

fof(kb_SUMO_14144,axiom,
    s__documentation(s__Anthropology,s__EnglishLanguage,'The study of humanity.') ).

fof(kb_SUMO_14145,axiom,
    s__instance(s__Architecture,s__FieldOfStudy) ).

fof(kb_SUMO_14146,axiom,
    s__documentation(s__Architecture,s__EnglishLanguage,'The &%FieldOfStudy of designing &%Buildings, i.e. creating &%Blueprints for &%Buildings.') ).

fof(kb_SUMO_14147,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Human)
     => ( s__hasExpertise(V__H,s__Architecture)
       => ? [V__D,V__P,V__B] :
            ( s__instance(V__D,s__Process)
            & s__instance(V__D,s__ContentDevelopment)
            & s__agent(V__D,V__H)
            & s__result(V__D,V__P)
            & s__instance(V__P,s__Blueprint)
            & s__represents(V__P,V__B)
            & s__instance(V__B,s__Building) ) ) ) ).

fof(kb_SUMO_14148,axiom,
    s__instance(s__Economics,s__SocialScience) ).

fof(kb_SUMO_14149,axiom,
    s__documentation(s__Economics,s__EnglishLanguage,'The field of economics.') ).

fof(kb_SUMO_14150,axiom,
    s__instance(s__Linguistics,s__SocialScience) ).

fof(kb_SUMO_14151,axiom,
    s__instance(s__SocialScience__t,s__SetOrClass) ).

fof(kb_SUMO_14152,axiom,
    s__documentation(s__Linguistics,s__EnglishLanguage,'The field of linguistics.') ).

fof(kb_SUMO_14153,axiom,
    s__instance(s__Psychology,s__SocialScience) ).

fof(kb_SUMO_14154,axiom,
    s__documentation(s__Psychology,s__EnglishLanguage,'The field of psychology.') ).

fof(kb_SUMO_14155,axiom,
    s__instance(s__Biology,s__Science) ).

fof(kb_SUMO_14156,axiom,
    s__documentation(s__Biology,s__EnglishLanguage,'The study of the classification, development, and functioning of &%Organisms.') ).

fof(kb_SUMO_14157,axiom,
    s__subField(s__Physiology,s__Biology) ).

fof(kb_SUMO_14158,axiom,
    s__instance(s__Physiology,s__Science) ).

fof(kb_SUMO_14159,axiom,
    s__documentation(s__Physiology,s__EnglishLanguage,'The part of &%Biology dealing with the functioning of &%Organisms.') ).

fof(kb_SUMO_14160,axiom,
    s__subField(s__MedicalScience,s__Biology) ).

fof(kb_SUMO_14161,axiom,
    s__instance(s__MedicalScience,s__Science) ).

fof(kb_SUMO_14162,axiom,
    s__documentation(s__MedicalScience,s__EnglishLanguage,'The field of medicine.') ).

fof(kb_SUMO_14163,axiom,
    s__instance(s__Chemistry,s__Science) ).

fof(kb_SUMO_14164,axiom,
    s__documentation(s__Chemistry,s__EnglishLanguage,'The study of the compositions, properties, and reactions of &%Substances.') ).

fof(kb_SUMO_14165,axiom,
    s__instance(s__Physics,s__Science) ).

fof(kb_SUMO_14166,axiom,
    s__documentation(s__Physics,s__EnglishLanguage,'The study of matter and energy and their relations.') ).

fof(kb_SUMO_14167,axiom,
    s__instance(s__Engineering,s__Science) ).

fof(kb_SUMO_14168,axiom,
    s__documentation(s__Engineering,s__EnglishLanguage,'The application of instances of &%Science to the solution of practical problems, i.e. the creation of various forms of technology.') ).

fof(kb_SUMO_14169,axiom,
    s__subField(s__Electronics,s__Physics) ).

fof(kb_SUMO_14170,axiom,
    s__subField(s__Electronics,s__Engineering) ).

fof(kb_SUMO_14171,axiom,
    s__instance(s__Electronics,s__FieldOfStudy) ).

fof(kb_SUMO_14172,axiom,
    s__documentation(s__Electronics,s__EnglishLanguage,'The branch of &%Physics that deals with the theory and applications of electron emissions.') ).

fof(kb_SUMO_14173,axiom,
    s__instance(s__Theology,s__FieldOfStudy) ).

fof(kb_SUMO_14174,axiom,
    s__documentation(s__Theology,s__EnglishLanguage,'The systematic study of religion.') ).

fof(kb_SUMO_14175,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Theology)
     => ? [V__Y] :
          ( s__instance(V__Y,s__ReligiousProcess)
          & s__refers(V__X,V__Y) ) ) ).

fof(kb_SUMO_14176,axiom,
    s__instance(s__MilitaryScience,s__FieldOfStudy) ).

fof(kb_SUMO_14177,axiom,
    s__documentation(s__MilitaryScience,s__EnglishLanguage,'The study of the principles of war.') ).

fof(kb_SUMO_14178,axiom,
    s__instance(s__History,s__FieldOfStudy) ).

fof(kb_SUMO_14179,axiom,
    s__documentation(s__History,s__EnglishLanguage,'The recording and interpretation of past events involving &%Humans, including political events and cultural practices.') ).

fof(kb_SUMO_14180,axiom,
    s__instance(s__Philosophy,s__FieldOfStudy) ).

fof(kb_SUMO_14181,axiom,
    s__documentation(s__Philosophy,s__EnglishLanguage,'The study of first principles, including epistemology, metaphysics, and ethics.') ).

fof(kb_SUMO_14182,axiom,
    s__instance(s__FieldOfLaw,s__FieldOfStudy) ).

fof(kb_SUMO_14183,axiom,
    s__documentation(s__FieldOfLaw,s__EnglishLanguage,'The study of legal principles and the framework of national and/or international laws.') ).

fof(kb_SUMO_14184,axiom,
    s__subrelation(s__subField__m,s__subProposition__m) ).

fof(kb_SUMO_14185,axiom,
    s__instance(s__subField__m,s__TransitiveRelation) ).

fof(kb_SUMO_14186,axiom,
    s__instance(s__subField__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_14187,axiom,
    s__domain(s__subField__m,"1",s__FieldOfStudy) ).

fof(kb_SUMO_14188,axiom,
    s__domain(s__subField__m,"2",s__FieldOfStudy) ).

fof(kb_SUMO_14189,axiom,
    s__documentation(s__subField__m,s__EnglishLanguage,'(&%subField ?FIELD1 ?FIELD2) means that ?FIELD1 is a proper part of the &%FieldOfStudy ?FIELD2. For example, &%Physiology is a &%subField of &%Biology.') ).

fof(kb_SUMO_14190,axiom,
    s__instance(s__hasExpertise__m,s__BinaryPredicate) ).

fof(kb_SUMO_14191,axiom,
    s__domain(s__hasExpertise__m,"1",s__Human) ).

fof(kb_SUMO_14192,axiom,
    s__domain(s__hasExpertise__m,"2",s__FieldOfStudy) ).

fof(kb_SUMO_14193,axiom,
    s__documentation(s__hasExpertise__m,s__EnglishLanguage,'(&%hasExpertise ?PERSON ?FIELD) means that ?PERSON has studied the &%FieldOfStudy ?FIELD and is regarded as an expert.') ).

fof(kb_SUMO_14194,axiom,
    ! [V__FIELD,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Human)
        & s__instance(V__FIELD,s__FieldOfStudy) )
     => ( s__hasExpertise(V__PERSON,V__FIELD)
       => ? [V__LEARN] :
            ( s__instance(V__LEARN,s__Process)
            & s__instance(V__LEARN,s__Learning)
            & s__agent(V__LEARN,V__PERSON)
            & s__realization(V__LEARN,V__FIELD) ) ) ) ).

fof(kb_SUMO_14195,axiom,
    s__instance(s__hasOccupation__m,s__BinaryPredicate) ).

fof(kb_SUMO_14196,axiom,
    s__domain(s__hasOccupation__m,"1",s__Human) ).

fof(kb_SUMO_14197,axiom,
    s__domainSubclass(s__hasOccupation__m,"2",s__IntentionalProcess) ).

fof(kb_SUMO_14198,axiom,
    s__documentation(s__hasOccupation__m,s__EnglishLanguage,'(&%hasOccupation ?PERSON ?WORK) means that ?PERSON engages in activities of the class ?WORK as a means of earning a living.') ).

fof(kb_SUMO_14199,axiom,
    ! [V__PERSON,V__WORK] :
      ( ( s__subclass(V__WORK,s__IntentionalProcess)
        & s__instance(V__WORK,s__SetOrClass)
        & s__instance(V__PERSON,s__Human) )
     => ( s__hasOccupation(V__PERSON,V__WORK)
       => ? [V__INST] :
            ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,V__WORK)
            & s__instance(V__INST,s__Working)
            & s__agent(V__INST,V__PERSON) ) ) ) ).

fof(kb_SUMO_14200,axiom,
    s__subclass(s__Bleeding,s__AutonomicProcess) ).

fof(kb_SUMO_14201,axiom,
    s__instance(s__Bleeding__t,s__SetOrClass) ).

fof(kb_SUMO_14202,axiom,
    s__documentation(s__Bleeding,s__EnglishLanguage,'The release of &%Blood from an &%Animal in response to an &%Injuring of some sort.') ).

fof(kb_SUMO_14203,axiom,
    ! [V__BLEED] :
      ( s__instance(V__BLEED,s__Process)
     => ( s__instance(V__BLEED,s__Bleeding)
       => ? [V__INJURY] :
            ( s__instance(V__INJURY,s__Process)
            & s__instance(V__INJURY,s__Injuring)
            & s__causes(V__INJURY,V__BLEED) ) ) ) ).

fof(kb_SUMO_14204,axiom,
    ! [V__BLEED,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Agent)
        & s__instance(V__BLEED,s__Process) )
     => ( ( s__instance(V__BLEED,s__Bleeding)
          & s__experiencer(V__BLEED,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Animal) ) ) ).

%FOL fof(kb_SUMO_14205,axiom,(( (! [V__BLEED,V__ANIMAL] : ((s__instance(V__ANIMAL,s__Agent) & s__instance(V__BLEED,s__Process)) => ((s__instance(V__BLEED,s__Bleeding) & s__experiencer(V__BLEED,V__ANIMAL)) => (? [V__BLOOD] : (s__instance(V__BLOOD,s__Object) & s__instance(V__BLOOD,s__Blood) & s__holdsDuring(s__BeginFn(s__WhenFn(V__BLEED)),'s__part(V__BLOOD,V__ANIMAL)') & s__holdsDuring(s__EndFn(s__WhenFn(V__BLEED)),'(~ s__part(V__BLOOD,V__ANIMAL))')))))) ))).

fof(kb_SUMO_14206,axiom,
    s__subclass(s__Blushing,s__AutonomicProcess) ).

fof(kb_SUMO_14207,axiom,
    s__instance(s__Blushing__t,s__SetOrClass) ).

fof(kb_SUMO_14208,axiom,
    s__documentation(s__Blushing,s__EnglishLanguage,'The process of turning red in response to a stimulus which has a deep emotional effect.') ).

%FOL fof(kb_SUMO_14209,axiom,(( (! [V__B,V__A] : ((s__instance(V__A,s__Agent) & s__instance(V__B,s__Process)) => ((s__instance(V__B,s__Blushing) & s__experiencer(V__B,V__A)) => (? [V__T1,V__T2,V__S1,V__S2] : (s__instance(V__S2,s__Attribute) & s__instance(V__S1,s__Attribute) & s__instance(V__T2,s__TimeInterval) & s__instance(V__T1,s__TimeInterval) & s__instance(V__S1,s__EmotionalState) & s__instance(V__S2,s__EmotionalState) & (~ (V__S1 = V__S2)) & s__holdsDuring(V__T1,'s__attribute(V__A,V__S1)') & s__holdsDuring(V__T2,'s__attribute(V__A,V__S2)') & s__starts(s__WhenFn(V__B),V__T2) & s__finishes(s__WhenFn(V__B),V__T1)))))) ))).

fof(kb_SUMO_14210,axiom,
    s__subclass(s__Aborting,s__Removing) ).

fof(kb_SUMO_14211,axiom,
    s__instance(s__Aborting__t,s__SetOrClass) ).

fof(kb_SUMO_14212,axiom,
    s__documentation(s__Aborting,s__EnglishLanguage,'&%Removing a human fetus from a &%Pregnant woman in such a way that the fetus cannot survive.') ).

%FOL fof(kb_SUMO_14213,axiom,(( (! [V__A,V__W] : ((s__instance(V__W,s__Object) & s__instance(V__A,s__Process)) => ((s__instance(V__A,s__Aborting) & s__patient(V__A,V__W) & s__instance(V__W,s__Woman)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__A)),'s__attribute(V__W,s__Pregnant)') & s__holdsDuring(s__EndFn(s__WhenFn(V__A)),'(~ s__attribute(V__W,s__Pregnant))'))))) ))).

fof(kb_SUMO_14214,axiom,
    s__subclass(s__ClosingContract,s__Committing) ).

fof(kb_SUMO_14215,axiom,
    s__instance(s__ClosingContract__t,s__SetOrClass) ).

fof(kb_SUMO_14216,axiom,
    s__documentation(s__ClosingContract,s__EnglishLanguage,'Completing a &%Contract of some sort, e.g. the purchase of a house, closing a business deal, etc.') ).

fof(kb_SUMO_14217,axiom,
    ! [V__CONTRACT,V__CLOSE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__Agreement)
        & s__instance(V__CLOSE,s__Process)
        & s__instance(V__CONTRACT,s__CognitiveAgent) )
     => ( ( s__instance(V__CLOSE,s__ClosingContract)
          & s__agent(V__CLOSE,V__AGENT)
          & s__destination(V__CLOSE,V__CONTRACT) )
       => s__partyToAgreement(V__CONTRACT,V__AGENT) ) ) ).

fof(kb_SUMO_14218,axiom,
    s__subclass(s__Opening,s__Motion) ).

fof(kb_SUMO_14219,axiom,
    s__instance(s__Opening__t,s__SetOrClass) ).

fof(kb_SUMO_14220,axiom,
    s__relatedInternalConcept(s__Opening,s__Closing) ).

fof(kb_SUMO_14221,axiom,
    s__documentation(s__Opening,s__EnglishLanguage,'The &%Class of &%Processes where an aperture is created in an &%Object. Note that the aperture may be created intentionally, as when one opens a door, or unintentionally, as when the ground ruptures in a seismic event.') ).

fof(kb_SUMO_14222,axiom,
    s__subclass(s__Closing,s__Motion) ).

fof(kb_SUMO_14223,axiom,
    s__documentation(s__Closing,s__EnglishLanguage,'The &%Class of &%Processes where an aperture is closed in an &%Object.') ).

fof(kb_SUMO_14224,axiom,
    s__subclass(s__Diet,s__Plan) ).

fof(kb_SUMO_14225,axiom,
    s__instance(s__Diet__t,s__SetOrClass) ).

fof(kb_SUMO_14226,axiom,
    s__documentation(s__Diet,s__EnglishLanguage,'A &%Plan regarding what one is allowed to eat.') ).

fof(kb_SUMO_14227,axiom,
    ! [V__P,V__D] :
      ( ( s__instance(V__D,s__Proposition)
        & s__instance(V__P,s__Process) )
     => ( ( s__instance(V__D,s__Diet)
          & s__realization(V__P,V__D) )
       => ? [V__E] :
            ( s__instance(V__E,s__Process)
            & s__subProcess(V__E,V__P)
            & s__instance(V__E,s__Eating) ) ) ) ).

fof(kb_SUMO_14228,axiom,
    s__subclass(s__PreparedFood,s__Object) ).

fof(kb_SUMO_14229,axiom,
    s__documentation(s__PreparedFood,s__EnglishLanguage,'&%PreparedFood refers to anything that undergoes some process intended to result in an object that has &%Nutrient which can be ingested by &%Animal, normally metabolized into energy and body tissue.') ).

fof(kb_SUMO_14230,axiom,
    s__termFormat(s__EnglishLanguage,s__PreparedFood,food) ).

fof(kb_SUMO_14231,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__PreparedFood)
     => s__instance(V__X,s__FoodForFn(s__Organism)) ) ).

fof(kb_SUMO_14232,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__PreparedFood)
     => ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__IntentionalProcess)
          & s__result(V__PROC,V__X) ) ) ).

fof(kb_SUMO_14233,axiom,
    s__subclass(s__SolidFood,s__PreparedFood) ).

fof(kb_SUMO_14234,axiom,
    s__instance(s__SolidFood__t,s__SetOrClass) ).

fof(kb_SUMO_14235,axiom,
    s__documentation(s__SolidFood,s__EnglishLanguage,'&%SolidFood refers to &%PreparedFood that has &%Solid parts.') ).

fof(kb_SUMO_14236,axiom,
    s__termFormat(s__EnglishLanguage,s__SolidFood,'solid food') ).

fof(kb_SUMO_14237,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__SolidFood)
       => ? [V__ING] :
            ( s__instance(V__ING,s__Object)
            & s__part(V__ING,V__X)
            & s__attribute(V__ING,s__Solid) ) ) ) ).

fof(kb_SUMO_14238,axiom,
    s__subclass(s__LiquidFood,s__PreparedFood) ).

fof(kb_SUMO_14239,axiom,
    s__instance(s__PreparedFood__t,s__SetOrClass) ).

fof(kb_SUMO_14240,axiom,
    s__documentation(s__LiquidFood,s__EnglishLanguage,'&%LiquidFood refers to &%PreparedFood that has no &%Solid parts, only &%Liquid parts, therefore this does not cover stews, root beer floats or other combinations of solid and liquid foods.') ).

fof(kb_SUMO_14241,axiom,
    s__termFormat(s__EnglishLanguage,s__LiquidFood,'liquid food') ).

fof(kb_SUMO_14242,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__LiquidFood)
       => ~ ? [V__ING] :
              ( s__instance(V__ING,s__Object)
              & s__part(V__ING,V__X)
              & s__attribute(V__ING,s__Solid) ) ) ) ).

fof(kb_SUMO_14243,axiom,
    s__subclass(s__Beverage,s__LiquidFood) ).

fof(kb_SUMO_14244,axiom,
    s__instance(s__Beverage__t,s__SetOrClass) ).

fof(kb_SUMO_14245,axiom,
    s__instance(s__LiquidFood__t,s__SetOrClass) ).

fof(kb_SUMO_14246,axiom,
    s__subclass(s__Beverage,s__Substance) ).

fof(kb_SUMO_14247,axiom,
    s__disjoint(s__Meat,s__Beverage) ).

fof(kb_SUMO_14248,axiom,
    s__documentation(s__Beverage,s__EnglishLanguage,'Any food that is ingested by &%Drinking. Note that this class is disjoint &%Meat and &%FruitOrVegetable.') ).

fof(kb_SUMO_14249,axiom,
    ! [V__BEV] :
      ( s__instance(V__BEV,s__Object)
     => ( s__instance(V__BEV,s__Beverage)
       => s__attribute(V__BEV,s__Liquid) ) ) ).

fof(kb_SUMO_14250,axiom,
    ! [V__BEV,V__DRINK] :
      ( s__instance(V__DRINK,s__Process)
     => ( ( s__instance(V__DRINK,s__Drinking)
          & s__patient(V__DRINK,V__BEV) )
       => s__instance(V__BEV,s__Beverage) ) ) ).

fof(kb_SUMO_14251,axiom,
    s__instance(s__CookedAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_14252,axiom,
    s__documentation(s__CookedAttribute,s__EnglishLanguage,'&%CookedAttribute describes how something is a product of &%Cooking.') ).

fof(kb_SUMO_14253,axiom,
    s__termFormat(s__EnglishLanguage,s__CookedAttribute,cooked) ).

fof(kb_SUMO_14254,axiom,
    ! [V__FOOD] :
      ( s__instance(V__FOOD,s__Object)
     => ( s__attribute(V__FOOD,s__CookedAttribute)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__Cooking)
            & s__result(V__PROC,V__FOOD) ) ) ) ).

fof(kb_SUMO_14255,axiom,
    s__instance(s__RawAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_14256,axiom,
    s__documentation(s__RawAttribute,s__EnglishLanguage,'&%RawAttribute describes how cooking was not involved in the making of something') ).

fof(kb_SUMO_14257,axiom,
    s__termFormat(s__EnglishLanguage,s__RawAttribute,raw) ).

fof(kb_SUMO_14258,axiom,
    ! [V__FOOD] :
      ( s__instance(V__FOOD,s__Object)
     => ( s__attribute(V__FOOD,s__RawAttribute)
       => s__instance(V__FOOD,s__FoodForFn(s__Organism)) ) ) ).

fof(kb_SUMO_14259,axiom,
    ! [V__FOOD] :
      ( s__instance(V__FOOD,s__Object)
     => ( s__attribute(V__FOOD,s__RawAttribute)
       => ~ ? [V__PROC] :
              ( s__instance(V__PROC,s__Process)
              & s__instance(V__PROC,s__Cooking)
              & s__result(V__PROC,V__FOOD) ) ) ) ).

fof(kb_SUMO_14260,axiom,
    s__subclass(s__Baking,s__Cooking) ).

fof(kb_SUMO_14261,axiom,
    s__instance(s__Baking__t,s__SetOrClass) ).

fof(kb_SUMO_14262,axiom,
    s__subclass(s__Baking,s__Heating) ).

fof(kb_SUMO_14263,axiom,
    s__documentation(s__Baking,s__EnglishLanguage,'Any instance of &%Cooking where the instrument is an &%Oven.') ).

fof(kb_SUMO_14264,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Process)
     => ( s__instance(V__B,s__Baking)
       => ? [V__O] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__O,s__Oven)
            & s__instrument(V__B,V__O) ) ) ) ).

fof(kb_SUMO_14265,axiom,
    s__subclass(s__BreadOrBiscuit,s__PreparedFood) ).

fof(kb_SUMO_14266,axiom,
    s__instance(s__BreadOrBiscuit__t,s__SetOrClass) ).

fof(kb_SUMO_14267,axiom,
    s__documentation(s__BreadOrBiscuit,s__EnglishLanguage,'Food that consists largely of grain flour and water. Note that this class covers crackers, cookies, as well as any self-connected instance of bread, whether it is a loaf, a slice, a chunk of bread, etc.') ).

fof(kb_SUMO_14268,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__BreadOrBiscuit)
     => ? [V__D,V__BAKE] :
          ( s__instance(V__BAKE,s__Process)
          & s__instance(V__D,s__Object)
          & s__instance(V__D,s__Dough)
          & s__instance(V__BAKE,s__Baking)
          & s__resource(V__BAKE,V__D)
          & s__result(V__BAKE,V__B) ) ) ).

fof(kb_SUMO_14269,axiom,
    s__subclass(s__Sandwich,s__PreparedFood) ).

fof(kb_SUMO_14270,axiom,
    s__instance(s__Sandwich__t,s__SetOrClass) ).

fof(kb_SUMO_14271,axiom,
    s__documentation(s__Sandwich,s__EnglishLanguage,'Any food which consists of two or more pieces of bread and some sort of filling between the two pieces of bread.') ).

fof(kb_SUMO_14272,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Object)
     => ( s__instance(V__S,s__Sandwich)
       => ? [V__B1,V__B2,V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__B2,s__Object)
            & s__instance(V__B1,s__Object)
            & s__instance(V__B1,s__BreadOrBiscuit)
            & s__instance(V__B2,s__BreadOrBiscuit)
            & s__instance(V__F,s__FoodForFn(s__Human))
            & s__between(V__B1,V__F,V__B2)
            & V__B1 != V__B2
            & V__B1 != V__F
            & V__B2 != V__F
            & s__part(V__B1,V__S)
            & s__part(V__B2,V__S)
            & s__part(V__F,V__S) ) ) ) ).

fof(kb_SUMO_14273,axiom,
    s__subclass(s__Dough,s__PreparedFood) ).

fof(kb_SUMO_14274,axiom,
    s__instance(s__Dough__t,s__SetOrClass) ).

fof(kb_SUMO_14275,axiom,
    s__subclass(s__Dough,s__Mixture) ).

fof(kb_SUMO_14276,axiom,
    s__documentation(s__Dough,s__EnglishLanguage,'A &%Mixture of &%Flour, &%Water, and possibly other ingredients (such as &%Butter and &%Salt), which is used in making &%BreadOrBiscuits.') ).

fof(kb_SUMO_14277,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__Dough)
       => ? [V__F,V__W] :
            ( s__instance(V__W,s__Object)
            & s__instance(V__F,s__Object)
            & s__instance(V__F,s__Flour)
            & s__instance(V__W,s__Water)
            & s__part(V__F,V__D)
            & s__part(V__W,V__D) ) ) ) ).

fof(kb_SUMO_14278,axiom,
    s__subclass(s__Butter,s__PreparedFood) ).

fof(kb_SUMO_14279,axiom,
    s__instance(s__Butter__t,s__SetOrClass) ).

fof(kb_SUMO_14280,axiom,
    s__documentation(s__Butter,s__EnglishLanguage,'An emulsion of fat which is produced by churning &%Milk.') ).

fof(kb_SUMO_14281,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Butter)
     => ? [V__C,V__M] :
          ( s__instance(V__M,s__Object)
          & s__instance(V__C,s__Process)
          & s__instance(V__C,s__Cooking)
          & s__resource(V__C,V__M)
          & s__instance(V__M,s__Milk)
          & s__result(V__C,V__B) ) ) ).

fof(kb_SUMO_14282,axiom,
    s__subclass(s__CerealGrain,s__Seed) ).

fof(kb_SUMO_14283,axiom,
    s__documentation(s__CerealGrain,s__EnglishLanguage,'Any &%Seed which is produced by the cereal grasses, e.g. rice, corn, wheat, etc.') ).

fof(kb_SUMO_14284,axiom,
    s__subclass(s__RiceGrain,s__CerealGrain) ).

fof(kb_SUMO_14285,axiom,
    s__instance(s__RiceGrain__t,s__SetOrClass) ).

fof(kb_SUMO_14286,axiom,
    s__documentation(s__RiceGrain,s__EnglishLanguage,'A &%CerealGrain which has short and long grain varieties and which is usually prepared for eating by steaming.') ).

fof(kb_SUMO_14287,axiom,
    s__subclass(s__WheatGrain,s__CerealGrain) ).

fof(kb_SUMO_14288,axiom,
    s__instance(s__WheatGrain__t,s__SetOrClass) ).

fof(kb_SUMO_14289,axiom,
    s__instance(s__CerealGrain__t,s__SetOrClass) ).

fof(kb_SUMO_14290,axiom,
    s__documentation(s__WheatGrain,s__EnglishLanguage,'A long &%CerealGrain which is produced by certain grasses and which is used to make &%BreadOrBiscuits.') ).

fof(kb_SUMO_14291,axiom,
    s__subclass(s__Pea,s__Seed) ).

fof(kb_SUMO_14292,axiom,
    s__subclass(s__Pea,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14293,axiom,
    s__instance(s__Pea__t,s__SetOrClass) ).

fof(kb_SUMO_14294,axiom,
    s__documentation(s__Pea,s__EnglishLanguage,'The edible &%Seed of a pea plant.') ).

fof(kb_SUMO_14295,axiom,
    s__subclass(s__Flour,s__PreparedFood) ).

fof(kb_SUMO_14296,axiom,
    s__subclass(s__Flour,s__Powder) ).

fof(kb_SUMO_14297,axiom,
    s__instance(s__Flour__t,s__SetOrClass) ).

fof(kb_SUMO_14298,axiom,
    s__instance(s__Powder__t,s__SetOrClass) ).

fof(kb_SUMO_14299,axiom,
    s__documentation(s__Flour,s__EnglishLanguage,'A &%Powder that is prepared from &%CerealGrain, e.g. wheat flour, rice flour, etc. Flour is most often used in the making of &%BreadOrBiscuits.') ).

fof(kb_SUMO_14300,axiom,
    ! [V__F] :
      ( s__instance(V__F,s__Flour)
     => ? [V__P,V__C] :
          ( s__instance(V__C,s__Object)
          & s__instance(V__P,s__Process)
          & s__instance(V__P,s__IntentionalProcess)
          & s__resource(V__P,V__C)
          & s__instance(V__C,s__CerealGrain)
          & s__result(V__P,V__F) ) ) ).

fof(kb_SUMO_14301,axiom,
    s__subclass(s__Honey,s__AnimalSubstance) ).

fof(kb_SUMO_14302,axiom,
    s__instance(s__Honey__t,s__SetOrClass) ).

fof(kb_SUMO_14303,axiom,
    s__subclass(s__Honey,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14304,axiom,
    s__documentation(s__Honey,s__EnglishLanguage,'An edible, sweet &%Substance produced by some species of &%Bees.') ).

fof(kb_SUMO_14305,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Honey)
     => ? [V__P,V__B] :
          ( s__instance(V__B,s__Agent)
          & s__instance(V__P,s__Process)
          & s__instance(V__P,s__PhysiologicProcess)
          & s__agent(V__P,V__B)
          & s__instance(V__B,s__Bee)
          & s__result(V__P,V__H) ) ) ).

fof(kb_SUMO_14306,axiom,
    s__subclass(s__Coconut,s__FruitOrVegetable) ).

fof(kb_SUMO_14307,axiom,
    s__subclass(s__Coconut,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14308,axiom,
    s__instance(s__Coconut__t,s__SetOrClass) ).

fof(kb_SUMO_14309,axiom,
    s__documentation(s__Coconut,s__EnglishLanguage,'A &%FruitOrVegetable that is produced by a type of palm and has an edible white meat.') ).

fof(kb_SUMO_14310,axiom,
    s__subclass(s__MaizeGrain,s__CerealGrain) ).

fof(kb_SUMO_14311,axiom,
    s__instance(s__MaizeGrain__t,s__SetOrClass) ).

fof(kb_SUMO_14312,axiom,
    s__documentation(s__MaizeGrain,s__EnglishLanguage,'A &%CerealGrain which is found on long ears of a &%Plant native to the Americas.') ).

fof(kb_SUMO_14313,axiom,
    s__subclass(s__SoupStock,s__PreparedFood) ).

fof(kb_SUMO_14314,axiom,
    s__instance(s__SoupStock__t,s__SetOrClass) ).

fof(kb_SUMO_14315,axiom,
    s__documentation(s__SoupStock,s__EnglishLanguage,'Food which is prepared by reducing &%Meat and/or &%FruitOrVegetables to a translucent broth which can be used as a base for soups or sauces.') ).

fof(kb_SUMO_14316,axiom,
    s__subclass(s__Coffee,s__Beverage) ).

fof(kb_SUMO_14317,axiom,
    s__instance(s__Coffee__t,s__SetOrClass) ).

fof(kb_SUMO_14318,axiom,
    s__subclass(s__Coffee,s__PreparedFood) ).

fof(kb_SUMO_14319,axiom,
    s__documentation(s__Coffee,s__EnglishLanguage,'A &%Beverage which is prepared by infusing ground, roasted coffee beans into hot water.') ).

fof(kb_SUMO_14320,axiom,
    s__subclass(s__Apple,s__FruitOrVegetable) ).

fof(kb_SUMO_14321,axiom,
    s__subclass(s__Apple,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14322,axiom,
    s__instance(s__Apple__t,s__SetOrClass) ).

fof(kb_SUMO_14323,axiom,
    s__documentation(s__Apple,s__EnglishLanguage,'A &%FruitOrVegetable that has a tart to sweet taste and a spherical shape.') ).

fof(kb_SUMO_14324,axiom,
    s__subclass(s__DateFruit,s__FruitOrVegetable) ).

fof(kb_SUMO_14325,axiom,
    s__subclass(s__DateFruit,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14326,axiom,
    s__instance(s__DateFruit__t,s__SetOrClass) ).

fof(kb_SUMO_14327,axiom,
    s__documentation(s__DateFruit,s__EnglishLanguage,'A &%FruitOrVegetable that is produced by the date palm.') ).

fof(kb_SUMO_14328,axiom,
    s__subclass(s__PearFruit,s__FruitOrVegetable) ).

fof(kb_SUMO_14329,axiom,
    s__subclass(s__PearFruit,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14330,axiom,
    s__instance(s__PearFruit__t,s__SetOrClass) ).

fof(kb_SUMO_14331,axiom,
    s__documentation(s__PearFruit,s__EnglishLanguage,'A &%FruitOrVegetable that has a thick skin and the shape of a tear drop.') ).

fof(kb_SUMO_14332,axiom,
    s__subclass(s__Avocado,s__FruitOrVegetable) ).

fof(kb_SUMO_14333,axiom,
    s__subclass(s__Avocado,s__FoodForFn(s__Animal)) ).

fof(kb_SUMO_14334,axiom,
    s__instance(s__Avocado__t,s__SetOrClass) ).

fof(kb_SUMO_14335,axiom,
    s__documentation(s__Avocado,s__EnglishLanguage,'A &%FruitOrVegetable that is shaped like a pear and has a dark green skin and a rich meat.') ).

fof(kb_SUMO_14336,axiom,
    s__subclass(s__Ion,s__PureSubstance) ).

fof(kb_SUMO_14337,axiom,
    s__instance(s__Ion__t,s__SetOrClass) ).

fof(kb_SUMO_14338,axiom,
    s__documentation(s__Ion,s__EnglishLanguage,'An electronically charged &%Atom or &%Molecule. In other words, a &%PureSubstance that has lost one of its &%Electrons.') ).

fof(kb_SUMO_14339,axiom,
    s__subclass(s__FreeAtom,s__Atom) ).

fof(kb_SUMO_14340,axiom,
    s__instance(s__FreeAtom__t,s__SetOrClass) ).

fof(kb_SUMO_14341,axiom,
    s__documentation(s__FreeAtom,s__EnglishLanguage,'Any &%Atom which is not part of a &%Molecule.') ).

fof(kb_SUMO_14342,axiom,
    ! [V__A] :
      ( s__instance(V__A,s__Object)
     => ( s__instance(V__A,s__FreeAtom)
       => ~ ? [V__M] :
              ( s__instance(V__M,s__Object)
              & s__instance(V__M,s__Molecule)
              & s__part(V__A,V__M) ) ) ) ).

fof(kb_SUMO_14343,axiom,
    s__instance(s__protonNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_14344,axiom,
    s__instance(s__protonNumber__m,s__SingleValuedRelation) ).

fof(kb_SUMO_14345,axiom,
    s__instance(s__protonNumber__m,s__TotalValuedRelation) ).

fof(kb_SUMO_14346,axiom,
    s__domain(s__protonNumber__m,"1",s__PureSubstance) ).

fof(kb_SUMO_14347,axiom,
    s__domain(s__protonNumber__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_14348,axiom,
    s__documentation(s__protonNumber__m,s__EnglishLanguage,'(&%protonNumber ?SUBSTANCE ?NUMBER) means that the &%PureSubstance ?SUBSTANCE has the number of &%Protons ?NUMBER.') ).

fof(kb_SUMO_14349,axiom,
    ! [V__PROTON,V__ATOM,V__NUMBER,V__SUBSTANCE] :
      ( ( s__instance(V__SUBSTANCE,s__PureSubstance)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__ATOM,s__Object) )
     => ( s__protonNumber(V__SUBSTANCE,V__NUMBER)
       => ( ( s__part(V__ATOM,V__SUBSTANCE)
            & ( s__instance(V__ATOM,s__Atom)
              | s__instance(V__ATOM,s__Molecule) ) )
         => V__NUMBER = s__CardinalityFn(s__KappaFn(V__PROTON,'(s__part(V__PROTON,V__ATOM) & s__instance(V__PROTON,s__Proton))')) ) ) ) ).

fof(kb_SUMO_14350,axiom,
    s__instance(s__electronNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_14351,axiom,
    s__instance(s__electronNumber__m,s__SingleValuedRelation) ).

fof(kb_SUMO_14352,axiom,
    s__instance(s__electronNumber__m,s__TotalValuedRelation) ).

fof(kb_SUMO_14353,axiom,
    s__domain(s__electronNumber__m,"1",s__PureSubstance) ).

fof(kb_SUMO_14354,axiom,
    s__domain(s__electronNumber__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_14355,axiom,
    s__documentation(s__electronNumber__m,s__EnglishLanguage,'(&%electronNumber ?SUBSTANCE ?NUMBER) means that the &%PureSubstance ?SUBSTANCE has the number of &%Electrons ?NUMBER.') ).

fof(kb_SUMO_14356,axiom,
    ! [V__ELECTRON,V__ATOM,V__NUMBER,V__SUBSTANCE,V__TYPE] :
      ( ( s__instance(V__TYPE,s__PureSubstance)
        & s__instance(V__SUBSTANCE,s__Object)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__ATOM,s__Object) )
     => ( s__electronNumber(V__TYPE,V__NUMBER)
       => ( ( s__part(V__ATOM,V__SUBSTANCE)
            & ( s__instance(V__ATOM,s__Atom)
              | s__instance(V__ATOM,s__Molecule) ) )
         => V__NUMBER = s__CardinalityFn(s__KappaFn(V__ELECTRON,'(s__part(V__ELECTRON,V__ATOM) & s__instance(V__ELECTRON,s__Electron))')) ) ) ) ).

fof(kb_SUMO_14357,axiom,
    s__subclass(s__AtomicGroup,s__CompoundSubstance) ).

fof(kb_SUMO_14358,axiom,
    s__instance(s__AtomicGroup__t,s__SetOrClass) ).

fof(kb_SUMO_14359,axiom,
    s__documentation(s__AtomicGroup,s__EnglishLanguage,'Two or more &%Atoms that are bound together and comprise part of a &%Molecule.') ).

fof(kb_SUMO_14360,axiom,
    ! [V__G] :
      ( s__instance(V__G,s__Object)
     => ( s__instance(V__G,s__AtomicGroup)
       => ? [V__ATOM1,V__ATOM2] :
            ( s__instance(V__ATOM2,s__Object)
            & s__instance(V__ATOM1,s__Object)
            & s__instance(V__ATOM1,s__Atom)
            & s__instance(V__ATOM2,s__Atom)
            & V__ATOM1 != V__ATOM2
            & s__part(V__ATOM1,V__G)
            & s__part(V__ATOM2,V__G) ) ) ) ).

fof(kb_SUMO_14361,axiom,
    ! [V__G] :
      ( s__instance(V__G,s__Object)
     => ( s__instance(V__G,s__AtomicGroup)
       => ? [V__M] :
            ( s__instance(V__M,s__Object)
            & s__instance(V__M,s__Molecule)
            & s__part(V__G,V__M) ) ) ) ).

fof(kb_SUMO_14362,axiom,
    s__subclass(s__Ambush,s__Maneuver) ).

fof(kb_SUMO_14363,axiom,
    s__instance(s__Ambush__t,s__SetOrClass) ).

fof(kb_SUMO_14364,axiom,
    s__documentation(s__Ambush,s__EnglishLanguage,'Any &%Maneuver in a &%ViolentContest where one &%contestParticipant attempts to conceal himself from another contestParticipant so that he can &%Attack the other &%contestParticipant.') ).

fof(kb_SUMO_14365,axiom,
    ! [V__AG,V__AMBUSH] :
      ( ( s__instance(V__AMBUSH,s__Process)
        & s__instance(V__AG,s__Agent) )
     => ( ( s__instance(V__AMBUSH,s__Ambush)
          & s__agent(V__AMBUSH,V__AG) )
       => ? [V__C] :
            ( s__instance(V__C,s__Concealing)
            & s__subProcess(V__C,V__AMBUSH)
            & s__hasPurpose(V__C,'(? [V__ATTACK] : (s__instance(V__ATTACK,s__Process) & s__instance(V__C,s__Process) & s__instance(V__ATTACK,s__Attack) & s__agent(V__ATTACK,V__AG)))') ) ) ) ).

fof(kb_SUMO_14366,axiom,
    s__subclass(s__Blockade,s__Maneuver) ).

fof(kb_SUMO_14367,axiom,
    s__instance(s__Blockade__t,s__SetOrClass) ).

fof(kb_SUMO_14368,axiom,
    s__documentation(s__Blockade,s__EnglishLanguage,'Any &%Maneuver in a &%Contest where one &%contestParticipant attempts to deny access to something that is wanted by another &%contestParticipant.') ).

fof(kb_SUMO_14369,axiom,
    ! [V__A1,V__B,V__C] :
      ( ( s__instance(V__B,s__Process)
        & s__instance(V__A1,s__Agent) )
     => ( ( s__instance(V__B,s__Blockade)
          & s__instance(V__C,s__Contest)
          & s__subProcess(V__B,V__C)
          & s__contestParticipant(V__C,V__A1)
          & s__agent(V__B,V__A1) )
       => ? [V__C1,V__A2] :
            ( s__prevents(V__C1,s__Translocation)
            & s__instance(V__B,V__C1)
            & s__contestParticipant(V__C,V__A2)
            & V__A1 != V__A2
            & s__desires(V__A2,'(? [V__I] : (s__instance(V__I,s__Process) & s__instance(V__A2,s__CognitiveAgent) & s__instance(V__C1,s__SetOrClass) & s__subclass(V__C1,s__Process) & s__instance(V__I,V__C1) & s__agent(V__I,V__A1) & s__subProcess(V__I,V__C)))') ) ) ) ).

fof(kb_SUMO_14370,axiom,
    s__subclass(s__MilitaryManeuver,s__Maneuver) ).

fof(kb_SUMO_14371,axiom,
    s__instance(s__MilitaryManeuver__t,s__SetOrClass) ).

fof(kb_SUMO_14372,axiom,
    s__documentation(s__MilitaryManeuver,s__EnglishLanguage,'Any &%Maneuver which takes place in a &%Battle and which is intended to secure a tactical advantage for one of the agents of the &%Battle.') ).

fof(kb_SUMO_14373,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Process)
     => ( s__instance(V__M,s__MilitaryManeuver)
       => ? [V__B] :
            ( s__instance(V__B,s__Process)
            & s__instance(V__B,s__Battle)
            & s__subProcess(V__M,V__B) ) ) ) ).

fof(kb_SUMO_14374,axiom,
    s__subclass(s__Fire,s__Combustion) ).

fof(kb_SUMO_14375,axiom,
    s__instance(s__Fire__t,s__SetOrClass) ).

fof(kb_SUMO_14376,axiom,
    s__documentation(s__Fire,s__EnglishLanguage,'&%Fire is the subclass of &%Combustion events in which flames are present. Fires are slower combustion processes than explosions, though some fires may include explosive episodes.') ).

fof(kb_SUMO_14377,axiom,
    s__subclass(s__Arson,s__Fire) ).

fof(kb_SUMO_14378,axiom,
    s__subclass(s__Arson,s__Destruction) ).

fof(kb_SUMO_14379,axiom,
    s__instance(s__Arson__t,s__SetOrClass) ).

fof(kb_SUMO_14380,axiom,
    s__documentation(s__Arson,s__EnglishLanguage,'An act where an agent sets something which it does not possess on fire in order to destroy it or its contents.') ).

fof(kb_SUMO_14381,axiom,
    s__subclass(s__Bombing,s__Destruction) ).

fof(kb_SUMO_14382,axiom,
    s__documentation(s__Bombing,s__EnglishLanguage,'An act of &%Destruction where the thing destroyed is destroyed by means of an explosive device.') ).

fof(kb_SUMO_14383,axiom,
    s__subclass(s__Bomb,s__Weapon) ).

fof(kb_SUMO_14384,axiom,
    s__instance(s__Bomb__t,s__SetOrClass) ).

fof(kb_SUMO_14385,axiom,
    s__subclass(s__Bomb,s__ExplosiveDevice) ).

fof(kb_SUMO_14386,axiom,
    s__instance(s__ExplosiveDevice__t,s__SetOrClass) ).

fof(kb_SUMO_14387,axiom,
    s__documentation(s__Bomb,s__EnglishLanguage,'A weapon that explodes in order to cause damage.') ).

fof(kb_SUMO_14388,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__Bombing)
       => ? [V__BOMB] :
            ( s__instance(V__BOMB,s__Object)
            & s__instance(V__BOMB,s__Bomb)
            & s__instrument(V__X,V__BOMB) ) ) ) ).

fof(kb_SUMO_14389,axiom,
    s__subclass(s__CarBombing,s__Bombing) ).

fof(kb_SUMO_14390,axiom,
    s__instance(s__CarBombing__t,s__SetOrClass) ).

fof(kb_SUMO_14391,axiom,
    s__documentation(s__CarBombing,s__EnglishLanguage,'A car bombing is an attack in which a car is used as the delivery mechanism for a bomb. The car is usually destroyed in the blast if the bomb detonates successfully.') ).

fof(kb_SUMO_14392,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__CarBombing)
       => ? [V__BOMB,V__CAR] :
            ( s__instance(V__CAR,s__Object)
            & s__instance(V__BOMB,s__Object)
            & s__instance(V__BOMB,s__Bomb)
            & s__instance(V__CAR,s__TransportationDevice)
            & s__instrument(V__X,V__CAR)
            & s__instrument(V__X,V__BOMB)
            & s__connected(V__CAR,V__BOMB) ) ) ) ).

fof(kb_SUMO_14393,axiom,
    s__subclass(s__ChemicalAttack,s__ViolentContest) ).

fof(kb_SUMO_14394,axiom,
    s__instance(s__ChemicalAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14395,axiom,
    s__documentation(s__ChemicalAttack,s__EnglishLanguage,'An attack against people or property in which a chemical agent is used as the active ingredient of the attack.') ).

fof(kb_SUMO_14396,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__ChemicalAttack)
       => ? [V__CHEM] :
            ( s__instance(V__CHEM,s__Object)
            & s__instance(V__CHEM,s__Substance)
            & s__instrument(V__X,V__CHEM) ) ) ) ).

fof(kb_SUMO_14397,axiom,
    s__subclass(s__HandgrenadeAttack,s__Bombing) ).

fof(kb_SUMO_14398,axiom,
    s__instance(s__HandgrenadeAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14399,axiom,
    s__documentation(s__HandgrenadeAttack,s__EnglishLanguage,'An attack in which a &%HandGrenade is employed as an explosive device for the purpose of &%Destruction. A case in which a hand grenade is used as a blunt striking object in an attack would not be in this class.') ).

fof(kb_SUMO_14400,axiom,
    s__subclass(s__HandGrenade,s__Bomb) ).

fof(kb_SUMO_14401,axiom,
    s__instance(s__HandGrenade__t,s__SetOrClass) ).

fof(kb_SUMO_14402,axiom,
    s__documentation(s__HandGrenade,s__EnglishLanguage,'A hand grenade is a small explosive device with a simple trigger mechanism, usually lasting a few seconds, designed to be propelled by a human to its target.') ).

fof(kb_SUMO_14403,axiom,
    ! [V__X,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__X,s__Object) )
     => ( s__instance(V__X,s__HandGrenade)
       => ( s__measure(V__X,s__MeasureFn(V__N,s__PoundMass))
          & less(V__N,"10") ) ) ) ).

fof(kb_SUMO_14404,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__HandgrenadeAttack)
       => ? [V__HG] :
            ( s__instance(V__HG,s__Object)
            & s__instance(V__HG,s__HandGrenade)
            & s__instrument(V__X,V__HG) ) ) ) ).

fof(kb_SUMO_14405,axiom,
    s__subclass(s__Hijacking,s__Robbing) ).

fof(kb_SUMO_14406,axiom,
    s__instance(s__Hijacking__t,s__SetOrClass) ).

fof(kb_SUMO_14407,axiom,
    s__instance(s__Robbing__t,s__SetOrClass) ).

fof(kb_SUMO_14408,axiom,
    s__documentation(s__Hijacking,s__EnglishLanguage,'&%Robbing a &%Vehicle and then driving or piloting it away.') ).

fof(kb_SUMO_14409,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Process)
     => ( s__instance(V__H,s__Hijacking)
       => ? [V__V] :
            ( s__instance(V__V,s__Vehicle)
            & s__patient(V__H,V__V) ) ) ) ).

fof(kb_SUMO_14410,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Process)
     => ( s__instance(V__H,s__Hijacking)
       => ? [V__D] :
            ( s__instance(V__D,s__Process)
            & s__subProcess(V__D,V__H)
            & s__instance(V__D,s__Driving) ) ) ) ).

%FOL fof(kb_SUMO_14411,axiom,(( (! [V__X] : (s__instance(V__X,s__Process) => (s__instance(V__X,s__Hijacking) => (? [V__V,V__A] : (s__instance(V__A,s__Agent) & s__instance(V__V,s__Object) & s__agent(V__X,V__A) & s__instance(V__V,s__TransportationDevice) & s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__X)),'(~ s__possesses(V__A,V__V))') & s__holdsDuring(s__WhenFn(V__X),'s__possesses(V__A,V__V)')))))) ))).

fof(kb_SUMO_14412,axiom,
    s__subclass(s__HostageTaking,s__UnilateralGetting) ).

fof(kb_SUMO_14413,axiom,
    s__instance(s__HostageTaking__t,s__SetOrClass) ).

fof(kb_SUMO_14414,axiom,
    s__documentation(s__HostageTaking,s__EnglishLanguage,'An event in which one agent keeps another against his or her will, in order to force it or a third agent to accede to some demand. The hostages are typically kept in the place where they are first taken hostage, in contrast to a &%Kidnapping. Hostage taking often involves a number of people (although it may be just one), again, in contrast to a &%Kidnapping.') ).

fof(kb_SUMO_14415,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__HostageTaking)
       => ? [V__A] :
            ( s__instance(V__A,s__SentientAgent)
            & s__patient(V__X,V__A) ) ) ) ).

fof(kb_SUMO_14416,axiom,
    s__subclass(s__IncendiaryDeviceAttack,s__Combustion) ).

fof(kb_SUMO_14417,axiom,
    s__instance(s__IncendiaryDeviceAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14418,axiom,
    s__subclass(s__IncendiaryDeviceAttack,s__ViolentContest) ).

fof(kb_SUMO_14419,axiom,
    s__documentation(s__IncendiaryDeviceAttack,s__EnglishLanguage,'An attack in which an agent uses a device which causes fire in order to destroy life or property.') ).

fof(kb_SUMO_14420,axiom,
    s__subclass(s__Infiltration,s__JoiningAnOrganization) ).

fof(kb_SUMO_14421,axiom,
    s__instance(s__Infiltration__t,s__SetOrClass) ).

fof(kb_SUMO_14422,axiom,
    s__documentation(s__Infiltration,s__EnglishLanguage,'An event in which an agent joins an organization under false pretenses. The objective of such an act is often to gather information helpful to a rival organization.') ).

fof(kb_SUMO_14423,axiom,
    s__subclass(s__Kidnapping,s__Robbing) ).

fof(kb_SUMO_14424,axiom,
    s__instance(s__Kidnapping__t,s__SetOrClass) ).

fof(kb_SUMO_14425,axiom,
    s__documentation(s__Kidnapping,s__EnglishLanguage,'An event in which one agent keeps another against his or her will, in order to force it or a third agent to accede to some demand. The kidnapped party is normally removed from the location where first attacked. In contrast to a &%HostageTaking, a kidnapping normally involves an attack on one, or a very small number of people, such as a couple.') ).

fof(kb_SUMO_14426,axiom,
    ! [V__G,V__X,V__N] :
      ( ( s__instance(V__N,s__Integer)
        & s__instance(V__X,s__Process)
        & s__instance(V__G,s__Collection) )
     => ( ( s__instance(V__X,s__Kidnapping)
          & s__instance(V__G,s__GroupOfPeople)
          & s__memberCount(V__G,V__N)
          & s__patient(V__X,V__G) )
       => less(V__N,"3") ) ) ).

%FOL fof(kb_SUMO_14427,axiom,(( (! [V__X] : (s__instance(V__X,s__Physical) => (s__instance(V__X,s__Kidnapping) => (? [V__A,V__LOC1,V__LOC2] : (s__instance(V__LOC2,s__Object) & s__instance(V__LOC1,s__Object) & s__instance(V__A,s__Physical) & s__instance(V__A,s__SentientAgent) & s__instance(V__LOC1,s__GeographicArea) & s__instance(V__LOC2,s__GeographicArea) & (~ (V__LOC1 = V__LOC2)) & s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__X)),'s__located(V__A,V__LOC1)') & s__holdsDuring(s__WhenFn(V__X),'s__located(V__A,V__LOC2)')))))) ))).

fof(kb_SUMO_14428,axiom,
    s__subclass(s__KnifeAttack,s__ViolentContest) ).

fof(kb_SUMO_14429,axiom,
    s__instance(s__KnifeAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14430,axiom,
    s__documentation(s__KnifeAttack,s__EnglishLanguage,'An attack in which a knife is used.') ).

fof(kb_SUMO_14431,axiom,
    s__subclass(s__Knife,s__CuttingDevice) ).

fof(kb_SUMO_14432,axiom,
    s__instance(s__Knife__t,s__SetOrClass) ).

fof(kb_SUMO_14433,axiom,
    s__documentation(s__Knife,s__EnglishLanguage,'A sharp object used for cutting. The object must have at least single blade or major protrusion which may be sharp at its end as well. It may be sharp on both sides, or just one. Unlike an awl it has a sharp edge rather than a point. Unlike scissors, it is a single blade without additional articulated parts. Unlike an axe, a knife is well-designed for slicing rather than chopping, although a heavy knife such as a broadsword can also be used for chopping, whereas a non-knife is not well designed for slicing meat for example. A knife can be small like a pocket knife, or large like a two-handed broadsword. A knife may also include other protrusions such as in the split swords and trident-like objects (that also possess a long sharp edge) in Chinese weaponry.') ).

fof(kb_SUMO_14434,axiom,
    s__subclass(s__CuttingDevice,s__Device) ).

fof(kb_SUMO_14435,axiom,
    s__documentation(s__CuttingDevice,s__EnglishLanguage,'Any &%Device whose purpose is &%Cutting something else. This class covers knives of all times, axes, saws, razors, chisels etc.') ).

fof(kb_SUMO_14436,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CaseRole)
     => ( s__instance(V__X,s__CuttingDevice)
       => s__capability(s__Cutting,V__X,s__instrument__m) ) ) ).

fof(kb_SUMO_14437,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__KnifeAttack)
       => ? [V__HG] :
            ( s__instance(V__HG,s__Object)
            & s__instance(V__HG,s__Knife)
            & s__instrument(V__X,V__HG) ) ) ) ).

fof(kb_SUMO_14438,axiom,
    s__subclass(s__LetterBombAttack,s__Bombing) ).

fof(kb_SUMO_14439,axiom,
    s__instance(s__LetterBombAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14440,axiom,
    s__documentation(s__LetterBombAttack,s__EnglishLanguage,'An attack with a bomb that is concealed in a letter or package, which is typically designed to explode upon opening.') ).

fof(kb_SUMO_14441,axiom,
    s__subclass(s__Lynching,s__Killing) ).

fof(kb_SUMO_14442,axiom,
    s__instance(s__Lynching__t,s__SetOrClass) ).

fof(kb_SUMO_14443,axiom,
    s__documentation(s__Lynching,s__EnglishLanguage,'A lynching is a form of &%Killing conducted under a thin guise of legitimacy by a vigilante group. It may be a purge of an individual from the group who is perceived to have gone astray, or it may be the summary execution of an individual outside the group that the group has determined has violated some law or code, either of the group, or the larger society. A lynching is distinguished from a legal execution in that the laws of a government are not followed in carrying out the killing. A lynching is distinguished from a murder in that there is the pretense of some process carried out by a group in the name of their own group or a higher power.') ).

fof(kb_SUMO_14444,axiom,
    s__subclass(s__MortarAttack,s__Bombing) ).

fof(kb_SUMO_14445,axiom,
    s__instance(s__MortarAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14446,axiom,
    s__documentation(s__MortarAttack,s__EnglishLanguage,'An attack in which a &%Mortar weapon is used.') ).

fof(kb_SUMO_14447,axiom,
    s__subclass(s__Mortar,s__Weapon) ).

fof(kb_SUMO_14448,axiom,
    s__instance(s__Mortar__t,s__SetOrClass) ).

fof(kb_SUMO_14449,axiom,
    s__documentation(s__Mortar,s__EnglishLanguage,'A mortar is a bomb that is shot at a location. A howitzer is a weapon that fires mortars. The mortar may not include the propelling charge that provides the motive force for delivering it to its target, which distinguishes it from a rocket. A mortar is distinguished from other bombs in that it is propelled rather than exploded in place, or dropped, or propelled by human power.') ).

fof(kb_SUMO_14450,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__MortarAttack)
       => ? [V__MA] :
            ( s__instance(V__MA,s__Object)
            & s__instance(V__MA,s__Mortar)
            & s__instrument(V__X,V__MA) ) ) ) ).

fof(kb_SUMO_14451,axiom,
    s__subclass(s__RocketMissileAttack,s__Bombing) ).

fof(kb_SUMO_14452,axiom,
    s__instance(s__RocketMissileAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14453,axiom,
    s__documentation(s__RocketMissileAttack,s__EnglishLanguage,'An attack in which a rocket or missile is used.') ).

fof(kb_SUMO_14454,axiom,
    s__subclass(s__Rocket,s__Projectile) ).

fof(kb_SUMO_14455,axiom,
    s__instance(s__Rocket__t,s__SetOrClass) ).

fof(kb_SUMO_14456,axiom,
    s__instance(s__Projectile__t,s__SetOrClass) ).

fof(kb_SUMO_14457,axiom,
    s__subclass(s__Stoning,s__ViolentContest) ).

fof(kb_SUMO_14458,axiom,
    s__instance(s__Stoning__t,s__SetOrClass) ).

fof(kb_SUMO_14459,axiom,
    s__documentation(s__Stoning,s__EnglishLanguage,'An act where a victim or victims is attacked with stones. The stones may either be placed on top of a victim in order to cause death by pressure and suffocation, in which case the act is typically part of a ritualized legal sentence, or where the victim is pelted with stones causing injury or death by trauma. The intent of such an act is usually the death of the victim.') ).

fof(kb_SUMO_14460,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__Stoning)
       => ? [V__ST] :
            ( s__instance(V__ST,s__Object)
            & s__instance(V__ST,s__Rock)
            & s__instrument(V__X,V__ST) ) ) ) ).

fof(kb_SUMO_14461,axiom,
    s__subclass(s__SuicideBombing,s__Bombing) ).

fof(kb_SUMO_14462,axiom,
    s__instance(s__SuicideBombing__t,s__SetOrClass) ).

fof(kb_SUMO_14463,axiom,
    s__instance(s__Bombing__t,s__SetOrClass) ).

fof(kb_SUMO_14464,axiom,
    s__subclass(s__SuicideBombing,s__Killing) ).

fof(kb_SUMO_14465,axiom,
    s__documentation(s__SuicideBombing,s__EnglishLanguage,'A bomb attack in which the bomber intends to blow himself up during the course of the attack. The bomber is the delivery mechanism for the explosive and the bomb is typically in close contact with the bomber, such as being strapped around his torso. This action is distinguished from actions in which the bomber merely happens to be blown up by his own bomb in that the bomber knows that he is committing suicide.') ).

%FOL fof(kb_SUMO_14466,axiom,(( (! [V__X] : (s__instance(V__X,s__Process) => (s__instance(V__X,s__SuicideBombing) => (? [V__A] : (s__instance(V__A,s__Agent) & s__agent(V__X,V__A) & s__holdsDuring(s__FutureFn(s__WhenFn(V__X)),'s__attribute(V__A,s__Dead)')))))) ))).

%FOL fof(kb_SUMO_14467,axiom,(( (! [V__P,V__X] : ((s__instance(V__X,s__Process) & s__instance(V__P,s__CognitiveAgent)) => ((s__instance(V__X,s__SuicideBombing) & s__agent(V__X,V__P)) => s__believes(V__P,'s__holdsDuring(s__FutureFn(s__WhenFn(V__X)),s__attribute(V__P,s__Dead))')))) ))).

fof(kb_SUMO_14468,axiom,
    s__subclass(s__Vandalism,s__Destruction) ).

fof(kb_SUMO_14469,axiom,
    s__instance(s__Vandalism__t,s__SetOrClass) ).

fof(kb_SUMO_14470,axiom,
    s__documentation(s__Vandalism,s__EnglishLanguage,'An event where the objective of the agent is to damage or destroy some property of another agent. This is distinguished from acts where the prime objective is damage or loss of life of another agent.') ).

fof(kb_SUMO_14471,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__Vandalism)
       => ~ ? [V__A] :
              ( s__instance(V__A,s__Agent)
              & s__patient(V__X,V__A) ) ) ) ).

fof(kb_SUMO_14472,axiom,
    s__subclass(s__VehicleAttack,s__ViolentContest) ).

fof(kb_SUMO_14473,axiom,
    s__instance(s__VehicleAttack__t,s__SetOrClass) ).

fof(kb_SUMO_14474,axiom,
    s__documentation(s__VehicleAttack,s__EnglishLanguage,'An event in which a vehicle is used by an agent in order to inflict injury, death or damage to people or property.') ).

fof(kb_SUMO_14475,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__VehicleAttack)
       => ? [V__V] :
            ( s__instance(V__V,s__Object)
            & s__instance(V__V,s__TransportationDevice)
            & s__instrument(V__X,V__V) ) ) ) ).

fof(kb_SUMO_14476,axiom,
    s__instance(s__BusinessPerson,s__OccupationalRole) ).

fof(kb_SUMO_14477,axiom,
    s__documentation(s__BusinessPerson,s__EnglishLanguage,'Any of a class of people in a professional occupation such as banking, finance, management, or engineering. This is distinguished from blue collar jobs that primarily involve manual labor rather than thought as the effort expended to derive remuneration. It is also distinguished from professions that may be outwardly similar but are done in a non-profit organization.') ).

fof(kb_SUMO_14478,axiom,
    s__subAttribute(s__BusinessExecutive,s__BusinessPerson) ).

fof(kb_SUMO_14479,axiom,
    s__documentation(s__BusinessExecutive,s__EnglishLanguage,'&%BusinessExecutive refers to a person responsible for the management of a business') ).

fof(kb_SUMO_14480,axiom,
    s__termFormat(s__EnglishLanguage,s__BusinessExecutive,'business executive') ).

fof(kb_SUMO_14481,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Agent)
     => ( s__attribute(V__X,s__BusinessExecutive)
       => ? [V__BUSINESS,V__MANAGE] :
            ( s__instance(V__MANAGE,s__Process)
            & s__instance(V__MANAGE,s__Managing)
            & s__instance(V__BUSINESS,s__Organization)
            & s__patient(V__MANAGE,V__BUSINESS)
            & s__agent(V__MANAGE,V__X) ) ) ) ).

fof(kb_SUMO_14482,axiom,
    s__instance(s__Celebrity,s__SocialRole) ).

fof(kb_SUMO_14483,axiom,
    s__documentation(s__Celebrity,s__EnglishLanguage,'Anyone who is known by a large number of people, either explicitly by name, or by action.') ).

%FOL fof(kb_SUMO_14484,axiom,(( ( ! [V__A] : (! [V__X] : (s__instance(V__X,s__Object) => (s__attribute(V__X,s__Celebrity) => greater(s__CardinalityFn(s__KappaFn(V__A,'s__knows(V__A,(? [V__P] : (V__P = V__X)))')),1000)))) ) ))).

fof(kb_SUMO_14485,axiom,
    s__instance(s__Knight,s__SocialRole) ).

fof(kb_SUMO_14486,axiom,
    s__documentation(s__Knight,s__EnglishLanguage,'A &%SocialRole that is assigned by the United Kingdom to persons for reasons of personal merit.') ).

fof(kb_SUMO_14487,axiom,
    s__instance(s__Musician,s__SocialRole) ).

fof(kb_SUMO_14488,axiom,
    s__documentation(s__Musician,s__EnglishLanguage,'A Musician is someone who is capable of giving a &%MusicalPerformance. This includes amateurs and others who dont formally make a living at the activity or choose it as a profession.') ).

fof(kb_SUMO_14489,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Agent)
     => ( s__attribute(V__X,s__Musician)
       => s__hasSkill(s__MusicalPerformance,V__X) ) ) ).

fof(kb_SUMO_14490,axiom,
    s__instance(s__Veteran,s__SocialRole) ).

fof(kb_SUMO_14491,axiom,
    s__documentation(s__Veteran,s__EnglishLanguage,'The &%Attribute that applies to someone who was a &%Soldier at one time, but is not currently a &%Soldier.') ).

%FOL fof(kb_SUMO_14492,axiom,(( (! [V__T1,V__H] : ((s__instance(V__H,s__Object) & s__instance(V__T1,s__TimePosition) & s__instance(V__T1,s__Physical)) => (s__holdsDuring(V__T1,'s__attribute(V__H,s__Veteran)') => (? [V__T2,V__P] : (s__instance(V__P,s__Attribute) & s__instance(V__T2,s__TimePosition) & s__temporalPart(V__T2,s__PastFn(s__WhenFn(V__T1))) & s__instance(V__P,s__Soldier) & s__holdsDuring(V__T2,'s__attribute(V__H,V__P)') & (~ s__holdsDuring(V__T1,'s__attribute(V__H,V__P)'))))))) ))).

fof(kb_SUMO_14493,axiom,
    s__subclass(s__Road,s__Region) ).

fof(kb_SUMO_14494,axiom,
    s__instance(s__Road__t,s__SetOrClass) ).

fof(kb_SUMO_14495,axiom,
    s__subclass(s__Road,s__Roadway) ).

fof(kb_SUMO_14496,axiom,
    s__documentation(s__Road,s__EnglishLanguage,'A path along which vehicles travel. It is typically, although not necessarily, paved and intended for cars.') ).

fof(kb_SUMO_14497,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Road)
       => s__hasPurpose(V__X,'(? [V__EV,V__VEH] : (s__instance(V__VEH,s__Object) & s__instance(V__EV,s__Process) & s__instance(V__EV,s__Transportation) & s__eventLocated(V__EV,V__X) & s__instance(V__VEH,s__LandVehicle) & s__instrument(V__EV,V__VEH)))') ) ) ).

fof(kb_SUMO_14498,axiom,
    s__contraryAttribute_2(s__Civilian,s__MilitaryPerson) ).

fof(kb_SUMO_14499,axiom,
    s__subclass(s__OccupationalRole,s__Position) ).

fof(kb_SUMO_14500,axiom,
    s__instance(s__OccupationalRole__t,s__SetOrClass) ).

fof(kb_SUMO_14501,axiom,
    s__documentation(s__OccupationalRole,s__EnglishLanguage,'A &%Role of a &%Human in a &%OrganizationalProcess.') ).

fof(kb_SUMO_14502,axiom,
    s__instance(s__Civilian,s__SocialRole) ).

fof(kb_SUMO_14503,axiom,
    s__documentation(s__Civilian,s__EnglishLanguage,'Someone who is not a member of an active &%MilitaryOrganization.') ).

%FOL fof(kb_SUMO_14504,axiom,(( (! [V__T1,V__X] : ((s__instance(V__X,s__Object) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'s__attribute(V__X,s__Civilian)') => s__holdsDuring(V__T1,'(~ s__attribute(V__X,s__MilitaryPerson))')))) ))).

fof(kb_SUMO_14505,axiom,
    s__instance(s__Widowed,s__SocialRole) ).

fof(kb_SUMO_14506,axiom,
    s__documentation(s__Widowed,s__EnglishLanguage,'The &%Attribute that applies to someone who was married to someone who has died, and who has not remarried.') ).

%FOL fof(kb_SUMO_14507,axiom,(( (! [V__NOW,V__P] : ((s__instance(V__P,s__Human) & s__instance(V__NOW,s__TimeInterval)) => (s__holdsDuring(V__NOW,'s__attribute(V__P,s__Widowed)') => ((? [V__BEFORE,V__SPOUSE] : (s__instance(V__SPOUSE,s__Human) & s__instance(V__BEFORE,s__TimeInterval) & s__earlier(V__BEFORE,V__NOW) & s__holdsDuring(V__BEFORE,'s__spouse(V__SPOUSE,V__P)') & s__holdsDuring(V__NOW,'s__attribute(V__SPOUSE,s__Dead)'))) & (~ (? [V__OTHER] : (s__instance(V__OTHER,s__Human) & s__holdsDuring(V__NOW,'s__spouse(V__OTHER,V__P)')))))))) ))).

fof(kb_SUMO_14508,axiom,
    s__subclass(s__Convoy,s__Collection) ).

fof(kb_SUMO_14509,axiom,
    s__instance(s__Convoy__t,s__SetOrClass) ).

fof(kb_SUMO_14510,axiom,
    s__documentation(s__Convoy,s__EnglishLanguage,'A group of vehicles that all are being driven in formation (e.g., lines, rows, columns) to the same destination. That destination may be an intermediate destination on the way to a final destination for some of the vehicles however. This is distinguished from vehicles that have no common purpose, such as traffic on a freeway. This includes cases where some of the agents driving the vehicles intend to reach a point but fail to do so.') ).

fof(kb_SUMO_14511,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Collection)
     => ( s__instance(V__C,s__Convoy)
       => ? [V__V1,V__V2,V__TIME] :
            ( s__instance(V__TIME,s__TimePosition)
            & s__instance(V__V2,s__SelfConnectedObject)
            & s__instance(V__V1,s__SelfConnectedObject)
            & V__V1 != V__V2
            & s__instance(V__V1,s__Vehicle)
            & s__instance(V__V2,s__Vehicle)
            & s__instance(V__TIME,s__TimeInterval)
            & s__temporalPart(V__TIME,s__WhenFn(V__C))
            & s__holdsDuring(V__TIME,'(s__member(V__V1,V__C) & s__member(V__V2,V__C))') ) ) ) ).

fof(kb_SUMO_14512,axiom,
    ! [V__C,V__VEH] :
      ( ( s__instance(V__VEH,s__SelfConnectedObject)
        & s__instance(V__C,s__Collection) )
     => ( ( s__instance(V__C,s__Convoy)
          & s__member(V__VEH,V__C) )
       => ? [V__DRIVE] :
            ( s__instance(V__DRIVE,s__Process)
            & s__instance(V__DRIVE,s__Driving)
            & s__overlapsTemporally(s__WhenFn(V__DRIVE),s__WhenFn(V__C))
            & s__patient(V__DRIVE,V__VEH) ) ) ) ).

fof(kb_SUMO_14513,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__Convoy)
       => s__attribute(V__C,s__LineFormation) ) ) ).

fof(kb_SUMO_14514,axiom,
    s__instance(s__Diplomat,s__OccupationalRole) ).

fof(kb_SUMO_14515,axiom,
    s__subAttribute(s__Diplomat,s__GovernmentPerson) ).

fof(kb_SUMO_14516,axiom,
    s__documentation(s__Diplomat,s__EnglishLanguage,'A person who works as a facilitator for communication between countries, in the official employ of one of the countries.') ).

fof(kb_SUMO_14517,axiom,
    s__instance(s__Dissident,s__SocialRole) ).

fof(kb_SUMO_14518,axiom,
    s__documentation(s__Dissident,s__EnglishLanguage,'Someone who is opposed to the leadership of a particular country. Typically, a dissident suffers punishment at the hands of the country whose leadership he is opposing.') ).

fof(kb_SUMO_14519,axiom,
    s__subclass(s__EmbassyBuilding,s__GovernmentBuilding) ).

fof(kb_SUMO_14520,axiom,
    s__instance(s__EmbassyBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_14521,axiom,
    s__documentation(s__EmbassyBuilding,s__EnglishLanguage,'An embassy is a &%Building that is owned by a &%Government to house its diplomatic and consular staff that is in another country.') ).

fof(kb_SUMO_14522,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__EmbassyBuilding)
       => ? [V__EGOV,V__OTHERGOV] :
            ( s__instance(V__OTHERGOV,s__Object)
            & s__instance(V__EGOV,s__Agent)
            & s__instance(V__EGOV,s__Nation)
            & s__instance(V__OTHERGOV,s__Nation)
            & V__EGOV != V__OTHERGOV
            & s__possesses(V__EGOV,V__X)
            & s__located(V__X,V__OTHERGOV) ) ) ) ).

fof(kb_SUMO_14523,axiom,
    s__subclass(s__EntertainmentBuilding,s__Building) ).

fof(kb_SUMO_14524,axiom,
    s__instance(s__EntertainmentBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_14525,axiom,
    s__documentation(s__EntertainmentBuilding,s__EnglishLanguage,'A building that has the primary purpose of entertaining people.') ).

fof(kb_SUMO_14526,axiom,
    ! [V__BUILDING] :
      ( s__instance(V__BUILDING,s__Object)
     => ( s__instance(V__BUILDING,s__EntertainmentBuilding)
       => s__hasPurpose(V__BUILDING,'(? [V__REC] : (s__instance(V__REC,s__Process) & s__instance(V__REC,s__RecreationOrExercise) & s__eventLocated(V__REC,V__BUILDING)))') ) ) ).

fof(kb_SUMO_14527,axiom,
    s__subclass(s__GovernmentBuilding,s__Building) ).

fof(kb_SUMO_14528,axiom,
    s__instance(s__GovernmentBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_14529,axiom,
    s__documentation(s__GovernmentBuilding,s__EnglishLanguage,'A building belonging to a &%Government') ).

fof(kb_SUMO_14530,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__GovernmentBuilding)
       => ? [V__G] :
            ( s__instance(V__G,s__Agent)
            & s__instance(V__G,s__Government)
            & s__possesses(V__G,V__X) ) ) ) ).

fof(kb_SUMO_14531,axiom,
    s__instance(s__GovernmentPerson,s__OccupationalRole) ).

fof(kb_SUMO_14532,axiom,
    s__documentation(s__GovernmentPerson,s__EnglishLanguage,'A person who works for a &%Government.') ).

%FOL fof(kb_SUMO_14533,axiom,(( (! [V__T1,V__X] : ((s__instance(V__X,s__CognitiveAgent) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'s__attribute(V__X,s__GovernmentPerson)') => (? [V__GOV] : (s__instance(V__GOV,s__Organization) & s__instance(V__GOV,s__Government) & s__holdsDuring(V__T1,'s__employs(V__GOV,V__X)')))))) ))).

fof(kb_SUMO_14534,axiom,
    s__subclass(s__Renting,s__FinancialTransaction) ).

fof(kb_SUMO_14535,axiom,
    s__instance(s__Renting__t,s__SetOrClass) ).

fof(kb_SUMO_14536,axiom,
    s__subclass(s__Renting,s__Borrowing) ).

fof(kb_SUMO_14537,axiom,
    s__documentation(s__Renting,s__EnglishLanguage,'Giving money to the owner of an &%Object in exchange for the right to use the &%Object for a fixed time period.') ).

%FOL fof(kb_SUMO_14538,axiom,(( (! [V__O,V__A,V__R] : ((s__instance(V__R,s__Process) & s__instance(V__A,s__Agent) & s__instance(V__O,s__Agent)) => ((s__instance(V__R,s__Renting) & s__agent(V__R,V__A) & s__patient(V__R,V__O)) => s__holdsDuring(s__WhenFn(V__R),'s__modalAttribute(s__uses(V__A,V__O),s__Permission)')))) ))).

fof(kb_SUMO_14539,axiom,
    s__subclass(s__Marketplace,s__GeographicArea) ).

fof(kb_SUMO_14540,axiom,
    s__instance(s__Marketplace__t,s__SetOrClass) ).

fof(kb_SUMO_14541,axiom,
    s__documentation(s__Marketplace,s__EnglishLanguage,'An area, building, or set of buildings where &%FinancialTransactions are intended to take place. There should be more than one owner or renter of space or buildings within the marketplace.') ).

fof(kb_SUMO_14542,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Marketplace)
       => s__hasPurpose(V__X,'(? [V__EV] : (s__instance(V__EV,s__Process) & s__instance(V__EV,s__FinancialTransaction) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_14543,axiom,
    s__instance(s__StoreOwner,s__OccupationalRole) ).

fof(kb_SUMO_14544,axiom,
    s__subAttribute(s__StoreOwner,s__BusinessPerson) ).

fof(kb_SUMO_14545,axiom,
    s__documentation(s__StoreOwner,s__EnglishLanguage,'Someone who operates a store which he either owns or rents.') ).

fof(kb_SUMO_14546,axiom,
    s__instance(s__Militant,s__SocialRole) ).

fof(kb_SUMO_14547,axiom,
    s__documentation(s__Militant,s__EnglishLanguage,'A militant is someone who is not officially authorized by a government to engage in combat, but who does so on behalf of a &%PoliticalOrganization.') ).

fof(kb_SUMO_14548,axiom,
    s__instance(s__MilitaryPerson,s__OccupationalRole) ).

fof(kb_SUMO_14549,axiom,
    s__documentation(s__MilitaryPerson,s__EnglishLanguage,'Someone who is a member of a &%ModernMilitaryOrganization.') ).

%FOL fof(kb_SUMO_14550,axiom,(( (! [V__T1,V__X] : ((s__instance(V__X,s__SelfConnectedObject) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'s__attribute(V__X,s__MilitaryPerson)') => (? [V__ORG] : (s__instance(V__ORG,s__Collection) & s__instance(V__ORG,s__MilitaryOrganization) & s__holdsDuring(V__T1,'s__member(V__X,V__ORG)')))))) ))).

%FOL fof(kb_SUMO_14551,axiom,(( (! [V__T1,V__X,V__ORG] : ((s__instance(V__ORG,s__Collection) & s__instance(V__X,s__SelfConnectedObject) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__ORG,s__MilitaryOrganization) & s__holdsDuring(V__T1,'s__member(V__X,V__ORG)') & s__instance(V__X,s__Human)) => s__holdsDuring(V__T1,'s__attribute(V__X,s__MilitaryPerson)')))) ))).

fof(kb_SUMO_14552,axiom,
    s__subclass(s__OfficeBuilding,s__Building) ).

fof(kb_SUMO_14553,axiom,
    s__instance(s__OfficeBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_14554,axiom,
    s__documentation(s__OfficeBuilding,s__EnglishLanguage,'A building in which work activities take place which is not primarily designed for manufacturing or retail sales.') ).

fof(kb_SUMO_14555,axiom,
    s__subclass(s__PeaceKeepingMission,s__MilitaryOrganization) ).

fof(kb_SUMO_14556,axiom,
    s__instance(s__PeaceKeepingMission__t,s__SetOrClass) ).

fof(kb_SUMO_14557,axiom,
    s__documentation(s__PeaceKeepingMission,s__EnglishLanguage,'A military deployment which is intended to prevent hostilities between two other entities located in the same rough geographic area.') ).

fof(kb_SUMO_14558,axiom,
    s__subclass(s__PlaceOfWorship,s__Building) ).

fof(kb_SUMO_14559,axiom,
    s__instance(s__PlaceOfWorship__t,s__SetOrClass) ).

fof(kb_SUMO_14560,axiom,
    s__documentation(s__PlaceOfWorship,s__EnglishLanguage,'Any place designed for &%ReligiousProcesses.') ).

fof(kb_SUMO_14561,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__PlaceOfWorship)
       => s__hasPurpose(V__X,'(? [V__EV] : (s__instance(V__EV,s__Process) & s__instance(V__EV,s__ReligiousProcess) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_14562,axiom,
    s__subclass(s__PoliceFacility,s__Building) ).

fof(kb_SUMO_14563,axiom,
    s__instance(s__PoliceFacility__t,s__SetOrClass) ).

fof(kb_SUMO_14564,axiom,
    s__documentation(s__PoliceFacility,s__EnglishLanguage,'A building designed to house &%PolicePersons.') ).

fof(kb_SUMO_14565,axiom,
    s__instance(s__PolicePerson,s__OccupationalRole) ).

fof(kb_SUMO_14566,axiom,
    s__subAttribute(s__PolicePerson,s__GovernmentPerson) ).

fof(kb_SUMO_14567,axiom,
    s__documentation(s__PolicePerson,s__EnglishLanguage,'A member of a government whose occupation has the primary purpose of preventing crime and arresting criminals.') ).

fof(kb_SUMO_14568,axiom,
    s__subAttribute(s__PoliticalFigure,s__Celebrity) ).

fof(kb_SUMO_14569,axiom,
    s__documentation(s__PoliticalFigure,s__EnglishLanguage,'A well known person who participates in a PoliticalProcess. This must either be the persons principal occupation, or what is intended to become his principal occupation (for example, after an election).') ).

fof(kb_SUMO_14570,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Agent)
     => ( s__attribute(V__X,s__PoliticalFigure)
       => ? [V__EV] :
            ( s__instance(V__EV,s__Process)
            & s__agent(V__EV,V__X)
            & s__instance(V__EV,s__PoliticalProcess) ) ) ) ).

%FOL fof(kb_SUMO_14571,axiom,(( (! [V__X] : ((s__instance(V__X,s__SelfConnectedObject) & s__instance(V__X,s__CognitiveAgent)) => (s__attribute(V__X,s__PoliticalFigure) => (? [V__GOV] : (s__instance(V__GOV,s__Collection) & s__instance(V__GOV,s__Government) & (s__member(V__X,V__GOV) | s__desires(V__X,'s__member(V__X,V__GOV)'))))))) ))).

fof(kb_SUMO_14572,axiom,
    s__subAttribute(s__ReligiousFigure,s__Celebrity) ).

fof(kb_SUMO_14573,axiom,
    s__documentation(s__ReligiousFigure,s__EnglishLanguage,'A well-known leader of a religious group.') ).

fof(kb_SUMO_14574,axiom,
    s__subclass(s__RestaurantBuilding,s__Building) ).

fof(kb_SUMO_14575,axiom,
    s__instance(s__RestaurantBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_14576,axiom,
    s__documentation(s__RestaurantBuilding,s__EnglishLanguage,'A &%Building where people pay to be served food and eat. Some restaurants may also offer entertainment.') ).

fof(kb_SUMO_14577,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__RestaurantBuilding)
       => s__hasPurpose(V__X,'(? [V__OWN,V__EMP,V__EV,V__P,V__PAY] : (s__instance(V__PAY,s__Process) & s__instance(V__P,s__CognitiveAgent) & s__instance(V__EV,s__Process) & s__instance(V__EMP,s__CognitiveAgent) & s__instance(V__EMP,s__Formula) & s__instance(V__OWN,s__Organization) & s__employs(V__OWN,V__EMP) & s__possesses(V__OWN,V__X) & s__instance(V__P,s__Human) & s__instance(V__PAY,s__FinancialTransaction) & s__agent(V__PAY,V__P) & s__patient(V__PAY,V__EMP) & s__confersRight(V__EMP,V__EV,V__P) & s__instance(V__EV,s__Eating) & s__agent(V__EV,V__P) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_14578,axiom,
    s__subclass(s__EducationalFacility,s__StationaryArtifact) ).

fof(kb_SUMO_14579,axiom,
    s__instance(s__EducationalFacility__t,s__SetOrClass) ).

fof(kb_SUMO_14580,axiom,
    s__documentation(s__EducationalFacility,s__EnglishLanguage,'A building or campus, owned by an &%EducationalOrganization, which is intended as the location for &%EducationalProcesses.') ).

fof(kb_SUMO_14581,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__EducationalFacility)
       => ? [V__ORG] :
            ( s__instance(V__ORG,s__Agent)
            & s__instance(V__ORG,s__EducationalOrganization)
            & s__possesses(V__ORG,V__X) ) ) ) ).

fof(kb_SUMO_14582,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__EducationalFacility)
       => s__hasPurpose(V__X,'(? [V__EV] : (s__instance(V__EV,s__Process) & s__instance(V__EV,s__EducationalProcess) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_14583,axiom,
    s__instance(s__Student,s__SocialRole) ).

fof(kb_SUMO_14584,axiom,
    s__documentation(s__Student,s__EnglishLanguage,'A person who participates in an &%EducationalProcess in order to learn something.') ).

fof(kb_SUMO_14585,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Student)
       => ? [V__EV] :
            ( s__instance(V__EV,s__Process)
            & s__instance(V__EV,s__EducationalProcess)
            & s__patient(V__EV,V__X) ) ) ) ).

fof(kb_SUMO_14586,axiom,
    s__subclass(s__Subway,s__Hole) ).

fof(kb_SUMO_14587,axiom,
    s__instance(s__Subway__t,s__SetOrClass) ).

fof(kb_SUMO_14588,axiom,
    s__documentation(s__Subway,s__EnglishLanguage,'A subway is a hollow area of the earth, typically under large cities, designed for running trains that move people. It is distinguished from other kinds of tunnels in that trains run through them, primarily for the purpose of carrying people rather than ore, for example.') ).

fof(kb_SUMO_14589,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Subway)
       => ? [V__SURF] :
            ( s__instance(V__SURF,s__SelfConnectedObject)
            & s__surface(V__SURF,s__GeographicArea)
            & s__orientation(V__X,V__SURF,s__Below) ) ) ) ).

fof(kb_SUMO_14590,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Subway)
       => s__hasPurpose(V__X,'(? [V__EV,V__P] : (s__instance(V__EV,s__Process) & s__instance(V__EV,s__Transportation) & s__instance(V__P,s__Human) & s__patient(V__EV,V__P) & s__eventLocated(V__EV,V__X)))') ) ) ).

fof(kb_SUMO_14591,axiom,
    s__instance(s__Tourist,s__SocialRole) ).

fof(kb_SUMO_14592,axiom,
    s__documentation(s__Tourist,s__EnglishLanguage,'A tourist is a person who is travelling to a place primarily for reasons of entertainment or education, rather than business, although business transaction may take place during the trip.') ).

fof(kb_SUMO_14593,axiom,
    s__subclass(s__TouristSite,s__GeographicArea) ).

fof(kb_SUMO_14594,axiom,
    s__instance(s__TouristSite__t,s__SetOrClass) ).

fof(kb_SUMO_14595,axiom,
    s__documentation(s__TouristSite,s__EnglishLanguage,'A tourist site is a location that has some feature of interest to &%Tourists, which entertains or informs them.') ).

fof(kb_SUMO_14596,axiom,
    s__subclass(s__TerroristOrganization,s__PoliticalOrganization) ).

fof(kb_SUMO_14597,axiom,
    s__instance(s__TerroristOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_14598,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Agent)
     => ( s__instance(V__X,s__TerroristOrganization)
       => ? [V__EV] :
            ( s__instance(V__EV,s__Process)
            & s__instance(V__EV,s__ViolentContest)
            & s__agent(V__EV,V__X) ) ) ) ).

fof(kb_SUMO_14599,axiom,
    s__documentation(s__TerroristOrganization,s__EnglishLanguage,'A group that uses violent means in an attempt to bring about their political aims. Those violent means are distinguished from a war between nations, or a civil war in that the group is at least partially clandestine and a significant proportion of its acts are against non-military targets.') ).

fof(kb_SUMO_14600,axiom,
    s__instance(s__memberCount__m,s__BinaryPredicate) ).

fof(kb_SUMO_14601,axiom,
    s__domain(s__memberCount__m,"1",s__Collection) ).

fof(kb_SUMO_14602,axiom,
    s__domain(s__memberCount__m,"2",s__Integer) ).

fof(kb_SUMO_14603,axiom,
    s__documentation(s__memberCount__m,s__EnglishLanguage,'(&%memberCount ?ORG ?NUMBER) means that there is a total ?NUMBER of &%members in the &%Collection ?ORG.') ).

%FOL fof(kb_SUMO_14604,axiom,(( ( ! [V__MEM] : (! [V__ORG,V__NUM] : ((s__instance(V__NUM,s__Integer) & s__instance(V__ORG,s__Collection)) => (s__memberCount(V__ORG,V__NUM) => (V__NUM = s__CardinalityFn(s__KappaFn(V__MEM,'s__member(V__MEM,V__ORG)')))))) ) ))).

fof(kb_SUMO_14605,axiom,
    s__instance(s__memberType__m,s__BinaryPredicate) ).

fof(kb_SUMO_14606,axiom,
    s__domain(s__memberType__m,"1",s__Collection) ).

fof(kb_SUMO_14607,axiom,
    s__domain(s__memberType__m,"2",s__SetOrClass) ).

fof(kb_SUMO_14608,axiom,
    s__documentation(s__memberType__m,s__EnglishLanguage,'(&%memberType ?GROUP ?TYPE) means that all the members of the &%Collection ?GROUP belong to the &%SetOrClass ?TYPE.') ).

fof(kb_SUMO_14609,axiom,
    ! [V__MEMBER,V__TYPE,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__MEMBER,s__SelfConnectedObject) )
     => ( ( s__memberType(V__GROUP,V__TYPE)
          & s__member(V__MEMBER,V__GROUP) )
       => s__instance(V__MEMBER,V__TYPE) ) ) ).

fof(kb_SUMO_14610,axiom,
    s__instance(s__memberTypeCount__m,s__TernaryPredicate) ).

fof(kb_SUMO_14611,axiom,
    s__domain(s__memberTypeCount__m,"1",s__Collection) ).

fof(kb_SUMO_14612,axiom,
    s__domain(s__memberTypeCount__m,"2",s__SetOrClass) ).

fof(kb_SUMO_14613,axiom,
    s__domain(s__memberTypeCount__m,"3",s__NonnegativeInteger) ).

fof(kb_SUMO_14614,axiom,
    s__documentation(s__memberTypeCount__m,s__EnglishLanguage,'(&%memberTypeCount ?GROUP ?TYPE ?NUMBER) means that the &%Collection ?GROUP has ?NUMBER members of the kind ?TYPE.') ).

fof(kb_SUMO_14615,axiom,
    ! [V__NUMBER,V__TYPE,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__NUMBER,s__NonnegativeInteger) )
     => ( s__memberTypeCount(V__GROUP,V__TYPE,V__NUMBER)
       => ? [V__SUBGROUP] :
            ( s__instance(V__SUBGROUP,s__Collection)
            & s__subCollection(V__SUBGROUP,V__GROUP)
            & s__memberCount(V__SUBGROUP,V__NUMBER)
            & s__memberType(V__SUBGROUP,V__TYPE) ) ) ) ).

fof(kb_SUMO_14616,axiom,
    ! [V__TYPE,V__NUMBER2,V__GROUP,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Integer)
        & s__instance(V__GROUP,s__Collection)
        & s__instance(V__NUMBER2,s__NonnegativeInteger)
        & s__instance(V__TYPE,s__SetOrClass) )
     => ( ( s__memberCount(V__GROUP,V__NUMBER1)
          & s__memberTypeCount(V__GROUP,V__TYPE,V__NUMBER2) )
       => greatereq(V__NUMBER1,V__NUMBER2) ) ) ).

fof(kb_SUMO_14617,axiom,
    ! [V__NUMBER,V__TYPE,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__NUMBER,s__NonnegativeInteger) )
     => ( ( s__memberTypeCount(V__GROUP,V__TYPE,V__NUMBER)
          & V__NUMBER = "0" )
       => ~ ? [V__ITEM] :
              ( s__instance(V__ITEM,s__SelfConnectedObject)
              & s__instance(V__ITEM,V__TYPE)
              & s__member(V__ITEM,V__GROUP) ) ) ) ).

fof(kb_SUMO_14618,axiom,
    s__instance(s__memberAtTime__m,s__TernaryPredicate) ).

fof(kb_SUMO_14619,axiom,
    s__documentation(s__memberAtTime__m,s__EnglishLanguage,'(&%memberAtTime ?MEMBER ?COLLECTION ?TIME) means that during the time period denoted by ?TIME, ?MEMBER is a &%member of ?COLLECTION.') ).

fof(kb_SUMO_14620,axiom,
    s__domain(s__memberAtTime__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_14621,axiom,
    s__domain(s__memberAtTime__m,"2",s__Collection) ).

fof(kb_SUMO_14622,axiom,
    s__domain(s__memberAtTime__m,"3",s__TimePosition) ).

%FOL fof(kb_SUMO_14623,axiom,(( (! [V__OBJ,V__TIME,V__COLLECTION] : ((s__instance(V__COLLECTION,s__Collection) & s__instance(V__TIME,s__TimePosition) & s__instance(V__OBJ,s__SelfConnectedObject)) => (s__memberAtTime(V__OBJ,V__COLLECTION,V__TIME) <=> s__holdsDuring(V__TIME,'s__member(V__OBJ,V__COLLECTION)')))) ))).

fof(kb_SUMO_14624,axiom,
    ! [V__OBJ,V__TIME,V__PLACE,V__COLLECTION] :
      ( ( s__instance(V__COLLECTION,s__Collection)
        & s__instance(V__PLACE,s__Object)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( ( s__locatedAtTime(V__COLLECTION,V__TIME,V__PLACE)
          & s__memberAtTime(V__OBJ,V__COLLECTION,V__TIME) )
       => s__locatedAtTime(V__OBJ,V__TIME,V__PLACE) ) ) ).

fof(kb_SUMO_14625,axiom,
    s__documentation(s__inventory__m,s__EnglishLanguage,'(inventory ?CBO ?COLLECTION) means that the &%ContentBearingObject ?CBO contains a list or enumeration of the members of the &%Collection ?COLLECTION.') ).

fof(kb_SUMO_14626,axiom,
    s__instance(s__inventory__m,s__BinaryPredicate) ).

fof(kb_SUMO_14627,axiom,
    s__domain(s__inventory__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_14628,axiom,
    s__domain(s__inventory__m,"2",s__Collection) ).

fof(kb_SUMO_14629,axiom,
    ! [V__O,V__C,V__I] :
      ( ( s__instance(V__I,s__SelfConnectedObject)
        & s__instance(V__C,s__Collection)
        & s__instance(V__O,s__ContentBearingObject) )
     => ( ( s__inventory(V__O,V__C)
          & s__member(V__I,V__C) )
       => s__refers(V__O,V__I) ) ) ).

fof(kb_SUMO_14630,axiom,
    s__instance(s__subordinateInOrganization__m,s__TernaryPredicate) ).

fof(kb_SUMO_14631,axiom,
    s__domain(s__subordinateInOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_14632,axiom,
    s__domain(s__subordinateInOrganization__m,"2",s__Human) ).

fof(kb_SUMO_14633,axiom,
    s__domain(s__subordinateInOrganization__m,"3",s__Human) ).

fof(kb_SUMO_14634,axiom,
    s__documentation(s__subordinateInOrganization__m,s__EnglishLanguage,'(&%subordinateInOrganization ?ORG ?PERSON1 ?PERSON2) means that in the &%Organization ?ORG, ?PERSON1 is subordinate to ?PERSON2.') ).

fof(kb_SUMO_14635,axiom,
    ! [V__PERSON2,V__PERSON1,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON1,s__Human)
        & s__instance(V__PERSON2,s__Human) )
     => ( s__subordinateInOrganization(V__ORG,V__PERSON1,V__PERSON2)
       => s__employs(V__ORG,V__PERSON1) ) ) ).

fof(kb_SUMO_14636,axiom,
    ! [V__PERSON2,V__PERSON1,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON1,s__Human)
        & s__instance(V__PERSON2,s__Human) )
     => ( s__subordinateInOrganization(V__ORG,V__PERSON1,V__PERSON2)
       => s__employs(V__ORG,V__PERSON2) ) ) ).

fof(kb_SUMO_14637,axiom,
    s__instance(s__subordinatePosition__m,s__TernaryPredicate) ).

fof(kb_SUMO_14638,axiom,
    s__domain(s__subordinatePosition__m,"1",s__Organization) ).

fof(kb_SUMO_14639,axiom,
    s__domain(s__subordinatePosition__m,"2",s__Position) ).

fof(kb_SUMO_14640,axiom,
    s__domain(s__subordinatePosition__m,"3",s__Position) ).

fof(kb_SUMO_14641,axiom,
    s__documentation(s__subordinatePosition__m,s__EnglishLanguage,'(&%subordinatePosition ?ORG ?SUB ?SUPER) means that in the &%Organization ?ORG, the holder of role ?SUB is subordinate to the holder of role ?SUPER.') ).

fof(kb_SUMO_14642,axiom,
    ! [V__ROLE1,V__ROLE2,V__PERSON1,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON1,s__Human)
        & s__instance(V__ROLE2,s__Position)
        & s__instance(V__ROLE1,s__Position) )
     => ( ( s__subordinatePosition(V__ORG,V__ROLE1,V__ROLE2)
          & s__occupiesPosition(V__PERSON1,V__ROLE1,V__ORG) )
       => ? [V__PERSON2] :
            ( s__instance(V__PERSON2,s__Human)
            & s__occupiesPosition(V__PERSON2,V__ROLE2,V__ORG)
            & s__subordinateInOrganization(V__ORG,V__PERSON1,V__PERSON2) ) ) ) ).

fof(kb_SUMO_14643,axiom,
    s__instance(s__operator__m,s__BinaryPredicate) ).

fof(kb_SUMO_14644,axiom,
    s__instance(s__operator__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14645,axiom,
    s__instance(s__operator__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_14646,axiom,
    s__domain(s__operator__m,"1",s__Object) ).

fof(kb_SUMO_14647,axiom,
    s__domain(s__operator__m,"2",s__Agent) ).

fof(kb_SUMO_14648,axiom,
    s__documentation(s__operator__m,s__EnglishLanguage,'(&%operator ?OBJECT ?AGENT) means that ?AGENT determines how ?OBJECT is used, either by directly or indirectly operating it.') ).

fof(kb_SUMO_14649,axiom,
    s__subclass(s__ClassificationScheme,s__Proposition) ).

fof(kb_SUMO_14650,axiom,
    s__instance(s__ClassificationScheme__t,s__SetOrClass) ).

fof(kb_SUMO_14651,axiom,
    s__documentation(s__ClassificationScheme,s__EnglishLanguage,'A &%ClassificationScheme is a conceptual structure, an abstract arrangement of concepts and the relations that link them.') ).

fof(kb_SUMO_14652,axiom,
    s__subclass(s__Taxonomy,s__ClassificationScheme) ).

fof(kb_SUMO_14653,axiom,
    s__instance(s__Taxonomy__t,s__SetOrClass) ).

fof(kb_SUMO_14654,axiom,
    s__documentation(s__Taxonomy,s__EnglishLanguage,'A &%Taxonomy is a &%ClassificationScheme that typically includes the salient concepts of a domain of interest, plus, minimally, a binary `broader than/`narrower than relation by which the concepts are linked. The `broader than/`narrower than relation is usually conceived as set- or class-based subsumption, but taxonomies are notorious for conflating the set membership and set subsumption (i.e., subset/superset) relations into a single `IS-A relation. Some taxonomies include additional binary relations, such as `subpart/`superpart.') ).

fof(kb_SUMO_14655,axiom,
    s__documentation(s__abstractPart__m,s__EnglishLanguage,'A meronymy relation similar to &%part, but for abstract rather than physical things.') ).

fof(kb_SUMO_14656,axiom,
    s__termFormat(s__EnglishLanguage,s__abstractPart__m,part) ).

fof(kb_SUMO_14657,axiom,
    s__instance(s__abstractPart__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_14658,axiom,
    s__domain(s__abstractPart__m,"1",s__Abstract) ).

fof(kb_SUMO_14659,axiom,
    s__domain(s__abstractPart__m,"2",s__Abstract) ).

fof(kb_SUMO_14660,axiom,
    s__format(s__EnglishLanguage,s__abstractPart__m,'%1 is %n a &%part of %2') ).

fof(kb_SUMO_14661,axiom,
    s__subclass(s__Ontology,s__ClassificationScheme) ).

fof(kb_SUMO_14662,axiom,
    s__instance(s__Ontology__t,s__SetOrClass) ).

fof(kb_SUMO_14663,axiom,
    s__documentation(s__Ontology,s__EnglishLanguage,'An &%Ontology is a &%ClassificationScheme that links concepts via many different relations. Ontologies typically are not restricted to binary relations and are structured by several kinds of conceptual hierarchies, including set- or class-based subsumption, spatial containment, mereology (theory of parts and wholes), and logical contexts. Thus, an ontology typically includes multiple taxonomies.') ).

fof(kb_SUMO_14664,axiom,
    ! [V__ONT] :
      ( s__instance(V__ONT,s__Abstract)
     => ( s__instance(V__ONT,s__Ontology)
       => ? [V__TAX] :
            ( s__instance(V__TAX,s__Abstract)
            & s__instance(V__TAX,s__Taxonomy)
            & s__abstractPart(V__TAX,V__ONT) ) ) ) ).

fof(kb_SUMO_14665,axiom,
    s__instance(s__transported__m,s__BinaryPredicate) ).

fof(kb_SUMO_14666,axiom,
    s__instance(s__transported__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14667,axiom,
    s__documentation(s__transported__m,s__EnglishLanguage,'(&%transported ?EVENT ?OBJ) means that ?OBJ is transported (carried/moved to a different physical location) in the &%Transportation ?EVENT.') ).

fof(kb_SUMO_14668,axiom,
    s__domain(s__transported__m,"1",s__Transportation) ).

fof(kb_SUMO_14669,axiom,
    s__domain(s__transported__m,"2",s__Object) ).

fof(kb_SUMO_14670,axiom,
    s__subrelation(s__transported__m,s__patient__m) ).

fof(kb_SUMO_14671,axiom,
    s__instance(s__cargo__m,s__BinaryPredicate) ).

fof(kb_SUMO_14672,axiom,
    s__instance(s__cargo__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14673,axiom,
    s__documentation(s__cargo__m,s__EnglishLanguage,'(&%cargo ?EVENT ?OBJ) means that ?OBJ is transported as cargo in the &%Shipping event ?EVENT.') ).

fof(kb_SUMO_14674,axiom,
    s__domain(s__cargo__m,"1",s__Shipping) ).

fof(kb_SUMO_14675,axiom,
    s__domain(s__cargo__m,"2",s__Object) ).

fof(kb_SUMO_14676,axiom,
    s__subrelation(s__cargo__m,s__transported__m) ).

fof(kb_SUMO_14677,axiom,
    s__instance(s__serviceProvider__m,s__BinaryPredicate) ).

fof(kb_SUMO_14678,axiom,
    s__instance(s__serviceProvider__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14679,axiom,
    s__instance(s__serviceProvider__m,s__IntentionalRelation) ).

fof(kb_SUMO_14680,axiom,
    s__domain(s__serviceProvider__m,"1",s__ServiceProcess) ).

fof(kb_SUMO_14681,axiom,
    s__domain(s__serviceProvider__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_14682,axiom,
    s__subrelation(s__serviceProvider__m,s__agent__m) ).

fof(kb_SUMO_14683,axiom,
    s__documentation(s__serviceProvider__m,s__EnglishLanguage,'(&%serviceProvider ?EVENT ?AGENT) means that ?AGENT is the supplier of the service provided in ?EVENT.') ).

fof(kb_SUMO_14684,axiom,
    s__instance(s__serviceRecipient__m,s__BinaryPredicate) ).

fof(kb_SUMO_14685,axiom,
    s__instance(s__serviceRecipient__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14686,axiom,
    s__instance(s__serviceRecipient__m,s__IntentionalRelation) ).

fof(kb_SUMO_14687,axiom,
    s__domain(s__serviceRecipient__m,"1",s__ServiceProcess) ).

fof(kb_SUMO_14688,axiom,
    s__domain(s__serviceRecipient__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_14689,axiom,
    s__subrelation(s__serviceRecipient__m,s__experiencer__m) ).

fof(kb_SUMO_14690,axiom,
    s__documentation(s__serviceRecipient__m,s__EnglishLanguage,'(&%serviceRecipient ?EVENT ?AGENT) means that ?AGENT is the receiver of the service provided in ?EVENT.') ).

fof(kb_SUMO_14691,axiom,
    ! [V__EVENT] :
      ( s__instance(V__EVENT,s__ServiceProcess)
     => ? [V__PROVIDER] :
          ( s__instance(V__PROVIDER,s__CognitiveAgent)
          & s__serviceProvider(V__EVENT,V__PROVIDER) ) ) ).

fof(kb_SUMO_14692,axiom,
    ! [V__EVENT] :
      ( s__instance(V__EVENT,s__ServiceProcess)
     => ? [V__RECEIVER] :
          ( s__instance(V__RECEIVER,s__CognitiveAgent)
          & s__serviceRecipient(V__EVENT,V__RECEIVER) ) ) ).

fof(kb_SUMO_14693,axiom,
    s__instance(s__benefits__m,s__BinaryPredicate) ).

fof(kb_SUMO_14694,axiom,
    s__instance(s__benefits__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14695,axiom,
    s__domain(s__benefits__m,"1",s__Process) ).

fof(kb_SUMO_14696,axiom,
    s__domain(s__benefits__m,"2",s__Agent) ).

fof(kb_SUMO_14697,axiom,
    s__documentation(s__benefits__m,s__EnglishLanguage,'(&%benefits ?PROCESS ?AGENT) means that ?AGENT somehow derives benefit as a result of ?PROCESS. This is a very general relation, and does not entail that ?AGENT is a participant in ?PROCESS.') ).

fof(kb_SUMO_14698,axiom,
    ! [V__PROCESS,V__AGENT,V__AGENT_END,V__PROCESS_START] :
      ( ( s__instance(V__PROCESS_START,s__TimePoint)
        & s__instance(V__AGENT_END,s__TimePoint)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__PROCESS,s__Process) )
     => ( ( V__PROCESS_START = s__BeginFn(s__WhenFn(V__PROCESS))
          & V__AGENT_END = s__EndFn(s__WhenFn(V__AGENT))
          & s__benefits(V__PROCESS,V__AGENT) )
       => s__before(V__PROCESS_START,V__AGENT_END) ) ) ).

fof(kb_SUMO_14699,axiom,
    s__instance(s__areaOfResponsibility__m,s__TernaryPredicate) ).

fof(kb_SUMO_14700,axiom,
    s__domain(s__areaOfResponsibility__m,"1",s__Agent) ).

fof(kb_SUMO_14701,axiom,
    s__domainSubclass(s__areaOfResponsibility__m,"2",s__Process) ).

fof(kb_SUMO_14702,axiom,
    s__domain(s__areaOfResponsibility__m,"3",s__GeographicArea) ).

fof(kb_SUMO_14703,axiom,
    s__documentation(s__areaOfResponsibility__m,s__EnglishLanguage,'(&%areaOfResponsibility ?AGENT ?PROCESS-TYPE ?AREA) means that ?AGENT (typically an instance of &%Organization) is responsible or accountable for actions or undertakings of type ?PROCESS-TYPE in the &%GeographicArea denoted by ?AREA.') ).

fof(kb_SUMO_14704,axiom,
    s__instance(s__friend__m,s__BinaryPredicate) ).

fof(kb_SUMO_14705,axiom,
    s__instance(s__friend__m,s__SymmetricRelation) ).

fof(kb_SUMO_14706,axiom,
    s__instance(s__friend__m,s__IntentionalRelation) ).

fof(kb_SUMO_14707,axiom,
    s__documentation(s__friend__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%friend ?H1 ?H2)) means that during time ?T1, ?H1 and ?H2 know each other, share a relationship of mutual care and concern, and probably also share some common interests.') ).

fof(kb_SUMO_14708,axiom,
    s__domain(s__friend__m,"1",s__Human) ).

fof(kb_SUMO_14709,axiom,
    s__domain(s__friend__m,"2",s__Human) ).

fof(kb_SUMO_14710,axiom,
    s__subrelation(s__friend__m,s__mutualAcquaintance__m) ).

fof(kb_SUMO_14711,axiom,
    s__instance(s__coworker__m,s__BinaryPredicate) ).

fof(kb_SUMO_14712,axiom,
    s__instance(s__coworker__m,s__SymmetricRelation) ).

fof(kb_SUMO_14713,axiom,
    s__documentation(s__coworker__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%coworker ?H1 ?H2)) means that during time ?T1, ?H1 and ?H2 are both employed by the same agent, are of roughly the same job status, and come into contact at least part of the time at the same work location.') ).

fof(kb_SUMO_14714,axiom,
    s__domain(s__coworker__m,"1",s__Human) ).

fof(kb_SUMO_14715,axiom,
    s__domain(s__coworker__m,"2",s__Human) ).

fof(kb_SUMO_14716,axiom,
    s__subrelation(s__coworker__m,s__mutualAcquaintance__m) ).

%FOL fof(kb_SUMO_14717,axiom,(( (! [V__T1,V__H2,V__H1] : ((s__instance(V__H1,s__Human) & s__instance(V__H2,s__Human) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'s__coworker(V__H1,V__H2)') => (? [V__ORG] : (s__instance(V__ORG,s__Organization) & s__holdsDuring(V__T1,'(s__employs(V__ORG,V__H1) & s__employs(V__ORG,V__H2))')))))) ))).

fof(kb_SUMO_14718,axiom,
    s__instance(s__cohabitant__m,s__BinaryPredicate) ).

fof(kb_SUMO_14719,axiom,
    s__instance(s__cohabitant__m,s__SymmetricRelation) ).

fof(kb_SUMO_14720,axiom,
    s__instance(s__cohabitant__m,s__IntentionalRelation) ).

fof(kb_SUMO_14721,axiom,
    s__documentation(s__cohabitant__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%cohabitant ?H1 ?H2)) means that during the time ?T1, ?H1 and ?H2 have the same home.') ).

fof(kb_SUMO_14722,axiom,
    s__domain(s__cohabitant__m,"1",s__Human) ).

fof(kb_SUMO_14723,axiom,
    s__domain(s__cohabitant__m,"2",s__Human) ).

fof(kb_SUMO_14724,axiom,
    s__subrelation(s__cohabitant__m,s__mutualAcquaintance__m) ).

%FOL fof(kb_SUMO_14725,axiom,(( (! [V__T1,V__H2,V__H1] : ((s__instance(V__H1,s__Human) & s__instance(V__H1,s__Collection) & s__instance(V__H2,s__Human) & s__instance(V__H2,s__Collection) & s__instance(V__T1,s__TimePosition)) => (s__holdsDuring(V__T1,'s__cohabitant(V__H1,V__H2)') => (? [V__UNIT] : (s__instance(V__UNIT,s__SelfConnectedObject) & s__instance(V__UNIT,s__SocialUnit) & s__holdsDuring(V__T1,'(s__member(V__UNIT,V__H1) & s__member(V__UNIT,V__H2))')))))) ))).

%FOL fof(kb_SUMO_14726,axiom,(( (! [V__T1,V__H2,V__H1,V__UNIT] : ((s__instance(V__UNIT,s__SelfConnectedObject) & s__instance(V__H1,s__Collection) & s__instance(V__H1,s__Human) & s__instance(V__H2,s__Collection) & s__instance(V__H2,s__Human) & s__instance(V__T1,s__TimePosition)) => ((s__instance(V__UNIT,s__SocialUnit) & s__holdsDuring(V__T1,'(s__member(V__UNIT,V__H1) & s__member(V__UNIT,V__H2))')) => s__holdsDuring(V__T1,'s__cohabitant(V__H1,V__H2)')))) ))).

fof(kb_SUMO_14727,axiom,
    s__instance(s__grandparent__m,s__BinaryPredicate) ).

fof(kb_SUMO_14728,axiom,
    s__instance(s__grandparent__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14729,axiom,
    s__domain(s__grandparent__m,"1",s__Human) ).

fof(kb_SUMO_14730,axiom,
    s__domain(s__grandparent__m,"2",s__Human) ).

fof(kb_SUMO_14731,axiom,
    s__documentation(s__grandparent__m,s__EnglishLanguage,'(&%grandparent ?YOUNGER ?OLDER) means that ?OLDER is a &%parent of ?YOUNGERs &%parent.') ).

fof(kb_SUMO_14732,axiom,
    s__subrelation(s__grandmother__m,s__grandparent__m) ).

fof(kb_SUMO_14733,axiom,
    s__subrelation(s__grandfather__m,s__grandparent__m) ).

fof(kb_SUMO_14734,axiom,
    s__subrelation(s__grandparent__m,s__ancestor__m) ).

fof(kb_SUMO_14735,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__instance(V__PARENT,s__Man) )
       => s__father(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_14736,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__instance(V__CHILD,s__Man) )
       => s__son(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_14737,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__instance(V__CHILD,s__Woman) )
       => s__daughter(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_14738,axiom,
    s__documentation(s__aunt__m,s__EnglishLanguage,'(aunt ?AUNT ?PERSON) means that ?AUNT is the sister of a parent of ?PERSON.') ).

fof(kb_SUMO_14739,axiom,
    s__domain(s__aunt__m,"1",s__Woman) ).

fof(kb_SUMO_14740,axiom,
    s__domain(s__aunt__m,"2",s__Human) ).

fof(kb_SUMO_14741,axiom,
    s__subrelation(s__aunt__m,s__familyRelation__m) ).

fof(kb_SUMO_14742,axiom,
    ! [V__A,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__A,s__Woman) )
     => ( s__aunt(V__A,V__H)
      <=> ? [V__P] :
            ( s__instance(V__P,s__Human)
            & s__sister(V__A,V__P)
            & s__parent(V__H,V__P) ) ) ) ).

fof(kb_SUMO_14743,axiom,
    s__documentation(s__cousin__m,s__EnglishLanguage,'(cousin ?PERSON1 ?PERSON2) means that ?PERSON1 and ?PERSON2 are cousins, i.e. ?PERSON1 and ?PERSON2 have grandparents (but not parents) in common.') ).

fof(kb_SUMO_14744,axiom,
    s__domain(s__cousin__m,"1",s__Human) ).

fof(kb_SUMO_14745,axiom,
    s__domain(s__cousin__m,"2",s__Human) ).

fof(kb_SUMO_14746,axiom,
    s__subrelation(s__cousin__m,s__familyRelation__m) ).

fof(kb_SUMO_14747,axiom,
    ! [V__P2,V__P1] :
      ( ( s__instance(V__P1,s__Human)
        & s__instance(V__P2,s__Human) )
     => ( s__cousin(V__P1,V__P2)
      <=> ( ? [V__G1,V__G2] :
              ( s__instance(V__G2,s__Man)
              & s__instance(V__G1,s__Woman)
              & s__grandmother(V__P1,V__G1)
              & s__grandfather(V__P1,V__G2)
              & s__grandmother(V__P2,V__G1)
              & s__grandfather(V__P2,V__G2) )
          & ~ ? [V__M,V__F] :
                ( s__instance(V__F,s__Organism)
                & s__instance(V__M,s__Organism)
                & s__mother(V__P1,V__M)
                & s__father(V__P1,V__F)
                & s__mother(V__P2,V__M)
                & s__father(V__P2,V__F) ) ) ) ) ).

fof(kb_SUMO_14748,axiom,
    s__documentation(s__grandfather__m,s__EnglishLanguage,'(grandfather ?PERSON ?PARENT) means that ?PARENT is the grandfather of ?PERSON.') ).

fof(kb_SUMO_14749,axiom,
    s__domain(s__grandfather__m,"1",s__Human) ).

fof(kb_SUMO_14750,axiom,
    s__domain(s__grandfather__m,"2",s__Man) ).

fof(kb_SUMO_14751,axiom,
    s__subrelation(s__grandfather__m,s__familyRelation__m) ).

fof(kb_SUMO_14752,axiom,
    ! [V__P,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__P,s__Man) )
     => ( s__grandfather(V__H,V__P)
       => ? [V__C] :
            ( s__instance(V__C,s__Organism)
            & s__father(V__C,V__P)
            & s__parent(V__H,V__C) ) ) ) ).

fof(kb_SUMO_14753,axiom,
    s__documentation(s__grandmother__m,s__EnglishLanguage,'(grandmother ?PERSON ?PARENT) means that ?PARENT is the grandmother of ?PERSON.') ).

fof(kb_SUMO_14754,axiom,
    s__domain(s__grandmother__m,"1",s__Human) ).

fof(kb_SUMO_14755,axiom,
    s__domain(s__grandmother__m,"2",s__Woman) ).

fof(kb_SUMO_14756,axiom,
    s__subrelation(s__grandmother__m,s__familyRelation__m) ).

fof(kb_SUMO_14757,axiom,
    ! [V__P,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__P,s__Woman) )
     => ( s__grandmother(V__H,V__P)
       => ? [V__C] :
            ( s__instance(V__C,s__Organism)
            & s__mother(V__C,V__P)
            & s__parent(V__H,V__C) ) ) ) ).

fof(kb_SUMO_14758,axiom,
    s__documentation(s__nephew__m,s__EnglishLanguage,'(nephew ?NEPHEW ?PERSON) means that ?NEPHEW is the &%son of a &%sibling of ?PERSON.') ).

fof(kb_SUMO_14759,axiom,
    s__domain(s__nephew__m,"1",s__Man) ).

fof(kb_SUMO_14760,axiom,
    s__domain(s__nephew__m,"2",s__Human) ).

fof(kb_SUMO_14761,axiom,
    s__subrelation(s__nephew__m,s__familyRelation__m) ).

fof(kb_SUMO_14762,axiom,
    ! [V__H,V__N] :
      ( ( s__instance(V__N,s__Man)
        & s__instance(V__H,s__Human) )
     => ( s__nephew(V__N,V__H)
      <=> ? [V__S] :
            ( s__instance(V__S,s__Organism)
            & s__sibling(V__S,V__H)
            & s__son(V__N,V__S) ) ) ) ).

fof(kb_SUMO_14763,axiom,
    s__documentation(s__niece__m,s__EnglishLanguage,'(niece ?NIECE ?PERSON) means that ?NIECE is the &%daughter of a &%sibling of ?PERSON.') ).

fof(kb_SUMO_14764,axiom,
    s__domain(s__niece__m,"1",s__Woman) ).

fof(kb_SUMO_14765,axiom,
    s__domain(s__niece__m,"2",s__Human) ).

fof(kb_SUMO_14766,axiom,
    s__subrelation(s__niece__m,s__familyRelation__m) ).

fof(kb_SUMO_14767,axiom,
    ! [V__H,V__N] :
      ( ( s__instance(V__N,s__Woman)
        & s__instance(V__H,s__Human) )
     => ( s__niece(V__N,V__H)
      <=> ? [V__S] :
            ( s__instance(V__S,s__Organism)
            & s__sibling(V__S,V__H)
            & s__daughter(V__N,V__S) ) ) ) ).

fof(kb_SUMO_14768,axiom,
    s__documentation(s__uncle__m,s__EnglishLanguage,'(uncle ?UNCLE ?PERSON) means that ?UNCLE is the brother of a parent of ?PERSON.') ).

fof(kb_SUMO_14769,axiom,
    s__domain(s__uncle__m,"1",s__Man) ).

fof(kb_SUMO_14770,axiom,
    s__domain(s__uncle__m,"2",s__Human) ).

fof(kb_SUMO_14771,axiom,
    s__subrelation(s__uncle__m,s__familyRelation__m) ).

fof(kb_SUMO_14772,axiom,
    ! [V__U,V__H] :
      ( ( s__instance(V__H,s__Human)
        & s__instance(V__U,s__Man) )
     => ( s__uncle(V__U,V__H)
      <=> ? [V__P] :
            ( s__instance(V__P,s__Human)
            & s__brother(V__U,V__P)
            & s__parent(V__H,V__P) ) ) ) ).

fof(kb_SUMO_14773,axiom,
    s__documentation(s__stepfather__m,s__EnglishLanguage,'(stepfather ?PERSON ?FATHER) means that ?FATHER is the stepfather of ?PERSON, i.e. ?FATHER is the &%spouse of the &%mother of ?PERSON, without also being the &%father of ?PERSON.') ).

fof(kb_SUMO_14774,axiom,
    s__domain(s__stepfather__m,"1",s__Human) ).

fof(kb_SUMO_14775,axiom,
    s__domain(s__stepfather__m,"2",s__Man) ).

fof(kb_SUMO_14776,axiom,
    s__subrelation(s__stepfather__m,s__legalRelation__m) ).

fof(kb_SUMO_14777,axiom,
    ! [V__P,V__F] :
      ( ( s__instance(V__F,s__Man)
        & s__instance(V__P,s__Human) )
     => ( s__stepfather(V__P,V__F)
      <=> ? [V__M] :
            ( s__instance(V__M,s__Human)
            & s__mother(V__P,V__M)
            & s__spouse(V__F,V__M)
            & ~ s__father(V__P,V__F) ) ) ) ).

fof(kb_SUMO_14778,axiom,
    s__documentation(s__stepmother__m,s__EnglishLanguage,'(stepmother ?PERSON ?MOTHER) means that ?MOTHER is the &%stepmother of ?PERSON, i.e. ?MOTHER is the spouse of the &%father of ?PERSON, without also being the &%mother of ?PERSON.') ).

fof(kb_SUMO_14779,axiom,
    s__domain(s__stepmother__m,"1",s__Human) ).

fof(kb_SUMO_14780,axiom,
    s__domain(s__stepmother__m,"2",s__Woman) ).

fof(kb_SUMO_14781,axiom,
    s__subrelation(s__stepmother__m,s__legalRelation__m) ).

fof(kb_SUMO_14782,axiom,
    ! [V__P,V__M] :
      ( ( s__instance(V__M,s__Woman)
        & s__instance(V__P,s__Human) )
     => ( s__stepmother(V__P,V__M)
      <=> ? [V__F] :
            ( s__instance(V__F,s__Human)
            & s__father(V__P,V__F)
            & s__spouse(V__M,V__F)
            & ~ s__mother(V__P,V__M) ) ) ) ).

fof(kb_SUMO_14783,axiom,
    s__subclass(s__NuclearFamily,s__FamilyGroup) ).

fof(kb_SUMO_14784,axiom,
    s__instance(s__NuclearFamily__t,s__SetOrClass) ).

fof(kb_SUMO_14785,axiom,
    s__subclass(s__NuclearFamily,s__SocialUnit) ).

fof(kb_SUMO_14786,axiom,
    s__documentation(s__NuclearFamily,s__EnglishLanguage,'A &%NuclearFamily is a &%SocialUnit composed of at least two and not more than three generations of &%familyRelations: &%parents, their children, and possibly the parents parents (childrens &%grandparents).') ).

fof(kb_SUMO_14787,axiom,
    ! [V__T1,V__PARENT2,V__PARENT1,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Human)
        & s__instance(V__PARENT1,s__Human)
        & s__instance(V__PARENT2,s__Human)
        & s__instance(V__T1,s__TimePosition) )
     => ( ( s__parent(V__CHILD,V__PARENT1)
          & s__parent(V__CHILD,V__PARENT2)
          & s__holdsDuring(V__T1,'(s__spouse(V__PARENT1,V__PARENT2) & s__cohabitant(V__PARENT1,V__PARENT2) & s__cohabitant(V__CHILD,V__PARENT1))') )
       => ? [V__FAM] :
            ( s__instance(V__FAM,s__Collection)
            & s__instance(V__FAM,s__NuclearFamily)
            & s__holdsDuring(V__T1,'(s__member(V__CHILD,V__FAM) & s__member(V__PARENT1,V__FAM) & s__member(V__PARENT2,V__FAM))') ) ) ) ).

fof(kb_SUMO_14788,axiom,
    s__instance(s__alias__m,s__BinaryPredicate) ).

fof(kb_SUMO_14789,axiom,
    s__instance(s__alias__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14790,axiom,
    s__domain(s__alias__m,"1",s__SymbolicString) ).

fof(kb_SUMO_14791,axiom,
    s__domain(s__alias__m,"2",s__Agent) ).

fof(kb_SUMO_14792,axiom,
    s__documentation(s__alias__m,s__EnglishLanguage,'(&%alias ?STRING ?AGENT) means that ?STRING is an alternate identifier for ?AGENT, and is likely being used to hide or obscure ?AGENTs true identity.') ).

fof(kb_SUMO_14793,axiom,
    s__subrelation(s__alias__m,s__names__m) ).

fof(kb_SUMO_14794,axiom,
    s__instance(s__workAddress__m,s__BinaryPredicate) ).

fof(kb_SUMO_14795,axiom,
    s__instance(s__workAddress__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14796,axiom,
    s__subrelation(s__workAddress__m,s__postContactSite__m) ).

fof(kb_SUMO_14797,axiom,
    s__documentation(s__workAddress__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%workAddress ?AGENT ?ADDRESS)) means that during the time specified by ?T1, ?ADDRESS identifies one of the locations at which ?AGENT works.') ).

fof(kb_SUMO_14798,axiom,
    s__domain(s__workAddress__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_14799,axiom,
    s__domain(s__workAddress__m,"2",s__PostalPlace) ).

fof(kb_SUMO_14800,axiom,
    s__instance(s__homeAddress__m,s__BinaryPredicate) ).

fof(kb_SUMO_14801,axiom,
    s__instance(s__homeAddress__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14802,axiom,
    s__domain(s__homeAddress__m,"1",s__PermanentResidence) ).

fof(kb_SUMO_14803,axiom,
    s__domain(s__homeAddress__m,"2",s__Human) ).

fof(kb_SUMO_14804,axiom,
    s__subrelation(s__homeAddress__m,s__postContactSite__m) ).

fof(kb_SUMO_14805,axiom,
    s__documentation(s__homeAddress__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%homeAddress ?PLACE ?AGENT)) means that during the time specified by ?T1, the &%PostalPlace ?PLACE is ?AGENTs &%home.') ).

fof(kb_SUMO_14806,axiom,
    s__instance(s__playsRoleInEvent__m,s__TernaryPredicate) ).

fof(kb_SUMO_14807,axiom,
    s__domain(s__playsRoleInEvent__m,"1",s__Object) ).

fof(kb_SUMO_14808,axiom,
    s__domain(s__playsRoleInEvent__m,"2",s__CaseRole) ).

fof(kb_SUMO_14809,axiom,
    s__domain(s__playsRoleInEvent__m,"3",s__Process) ).

fof(kb_SUMO_14810,axiom,
    s__documentation(s__playsRoleInEvent__m,s__EnglishLanguage,'(&%playsRoleInEvent ?OBJ ?ROLE ?EVENT) means that the &%Object ?OBJ is involved in the &%Process ?EVENT in a way specified by the &%CaseRole predicate ?ROLE.') ).

fof(kb_SUMO_14811,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__eventPartlyLocated__m,V__EVENT)
       => s__eventPartlyLocated(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14812,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__destination__m,V__EVENT)
       => s__destination(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14813,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__AchievingControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__playsRoleInEvent(V__OBJ,s__gainsControl__m,V__EVENT)
       => s__gainsControl(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14814,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__PlacingUnderArrest)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__playsRoleInEvent(V__OBJ,s__arrested__m,V__EVENT)
       => s__arrested(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14815,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__playsRoleInEvent(V__OBJ,s__experiencer__m,V__EVENT)
       => s__experiencer(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14816,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object)
        & s__instance(V__OBJ,s__DirectionalAttribute) )
     => ( s__playsRoleInEvent(V__OBJ,s__direction__m,V__EVENT)
       => s__direction(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14817,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Translocation)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__changesLocation__m,V__EVENT)
       => s__changesLocation(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14818,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__AchievingControl)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__controlled__m,V__EVENT)
       => s__controlled(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14819,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Confining)
        & s__instance(V__OBJ,s__Animal) )
     => ( s__playsRoleInEvent(V__OBJ,s__detainee__m,V__EVENT)
       => s__detainee(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14820,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__ChangeOfControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__playsRoleInEvent(V__OBJ,s__losesControl__m,V__EVENT)
       => s__losesControl(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14821,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__playsRoleInEvent(V__OBJ,s__agent__m,V__EVENT)
       => s__agent(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14822,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Motion)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__path__m,V__EVENT)
       => s__path(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14823,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Experimenting)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__experimentalControl__m,V__EVENT)
       => s__experimentalControl(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14824,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__patient__m,V__EVENT)
       => s__patient(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14825,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Transportation)
        & s__instance(V__OBJ,s__TransportationDevice) )
     => ( s__playsRoleInEvent(V__OBJ,s__conveyance__m,V__EVENT)
       => s__conveyance(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14826,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__targetInAttack__m,V__EVENT)
       => s__targetInAttack(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14827,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Motion)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__moves__m,V__EVENT)
       => s__moves(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14828,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEvent(V__OBJ,s__origin__m,V__EVENT)
       => s__origin(V__EVENT,V__OBJ) ) ) ).

fof(kb_SUMO_14829,axiom,
    ! [V__ROLE2,V__OBJ,V__EVENT,V__ROLE] :
      ( ( s__instance(V__ROLE,s__CaseRole)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object)
        & s__instance(V__ROLE2,s__CaseRole) )
     => ( ( s__playsRoleInEvent(V__OBJ,V__ROLE,V__EVENT)
          & s__subrelation(V__ROLE,V__ROLE2) )
       => s__playsRoleInEvent(V__OBJ,V__ROLE2,V__EVENT) ) ) ).

fof(kb_SUMO_14830,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__destination(V__EVENT,V__OBJ)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => s__playsRoleInEvent(V__OBJ,s__destination__m,V__EVENT) ) ).

fof(kb_SUMO_14831,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__EVENT,s__Motion)
     => ( ( s__path(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__path__m,V__EVENT) ) ) ).

fof(kb_SUMO_14832,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__EVENT,s__Motion)
     => ( ( s__moves(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__moves__m,V__EVENT) ) ) ).

fof(kb_SUMO_14833,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__EVENT,s__Experimenting)
     => ( ( s__experimentalControl(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__experimentalControl__m,V__EVENT) ) ) ).

fof(kb_SUMO_14834,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__patient(V__EVENT,V__OBJ)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => s__playsRoleInEvent(V__OBJ,s__patient__m,V__EVENT) ) ).

fof(kb_SUMO_14835,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__targetInAttack(V__EVENT,V__OBJ)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => s__playsRoleInEvent(V__OBJ,s__targetInAttack__m,V__EVENT) ) ).

fof(kb_SUMO_14836,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Confining)
        & s__instance(V__OBJ,s__Animal) )
     => ( ( s__detainee(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__detainee__m,V__EVENT) ) ) ).

fof(kb_SUMO_14837,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__AchievingControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__gainsControl(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__gainsControl__m,V__EVENT) ) ) ).

fof(kb_SUMO_14838,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__EVENT,s__AchievingControl)
     => ( ( s__controlled(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__controlled__m,V__EVENT) ) ) ).

fof(kb_SUMO_14839,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__OBJ,s__DirectionalAttribute)
     => ( ( s__direction(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__direction__m,V__EVENT) ) ) ).

fof(kb_SUMO_14840,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__Transportation)
        & s__instance(V__OBJ,s__TransportationDevice) )
     => ( ( s__conveyance(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__conveyance__m,V__EVENT) ) ) ).

fof(kb_SUMO_14841,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__ChangeOfControl)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__losesControl(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__losesControl__m,V__EVENT) ) ) ).

fof(kb_SUMO_14842,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__eventPartlyLocated(V__EVENT,V__OBJ)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => s__playsRoleInEvent(V__OBJ,s__eventPartlyLocated__m,V__EVENT) ) ).

fof(kb_SUMO_14843,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__origin(V__EVENT,V__OBJ)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => s__playsRoleInEvent(V__OBJ,s__origin__m,V__EVENT) ) ).

fof(kb_SUMO_14844,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__EVENT,s__Translocation)
     => ( ( s__changesLocation(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__changesLocation__m,V__EVENT) ) ) ).

fof(kb_SUMO_14845,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__OBJ,s__Agent)
     => ( ( s__agent(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__agent__m,V__EVENT) ) ) ).

fof(kb_SUMO_14846,axiom,
    ! [V__OBJ,V__EVENT] :
      ( ( s__instance(V__EVENT,s__PlacingUnderArrest)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__arrested(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__arrested__m,V__EVENT) ) ) ).

fof(kb_SUMO_14847,axiom,
    ! [V__OBJ,V__EVENT] :
      ( s__instance(V__OBJ,s__Agent)
     => ( ( s__experiencer(V__EVENT,V__OBJ)
          & s__instance(V__EVENT,s__Process)
          & s__instance(V__OBJ,s__Object) )
       => s__playsRoleInEvent(V__OBJ,s__experiencer__m,V__EVENT) ) ) ).

fof(kb_SUMO_14848,axiom,
    ! [V__OBJ,V__EVENT,V__TIME,V__CLASS,V__ROLE,V__PLACE] :
      ( ( s__instance(V__PLACE,s__Object)
        & s__instance(V__ROLE,s__CaseRole)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__playsRoleInEvent(V__OBJ,V__ROLE,V__EVENT)
          & s__instance(V__EVENT,V__CLASS)
          & s__subclass(V__CLASS,s__Process)
          & s__time(V__EVENT,V__TIME)
          & s__eventLocated(V__EVENT,V__PLACE) )
       => s__playsRoleInEventOfType(V__OBJ,V__ROLE,V__CLASS,V__TIME,V__PLACE) ) ) ).

fof(kb_SUMO_14849,axiom,
    s__instance(s__playsRoleInEventOfType__m,s__QuintaryPredicate) ).

fof(kb_SUMO_14850,axiom,
    s__domain(s__playsRoleInEventOfType__m,"1",s__Object) ).

fof(kb_SUMO_14851,axiom,
    s__domain(s__playsRoleInEventOfType__m,"2",s__CaseRole) ).

fof(kb_SUMO_14852,axiom,
    s__domainSubclass(s__playsRoleInEventOfType__m,"3",s__Process) ).

fof(kb_SUMO_14853,axiom,
    s__domain(s__playsRoleInEventOfType__m,"4",s__TimePosition) ).

fof(kb_SUMO_14854,axiom,
    s__domain(s__playsRoleInEventOfType__m,"5",s__Object) ).

fof(kb_SUMO_14855,axiom,
    s__documentation(s__playsRoleInEventOfType__m,s__EnglishLanguage,'(&%playsRoleInEventOfType ?OBJ ?ROLE ?TYPE ?TIME ?PLACE) means that ?OBJ plays the role specified by ?ROLE in an instance of ?TYPE, which occurs at ?TIME and ?PLACE.') ).

fof(kb_SUMO_14856,axiom,
    ! [V__OBJ,V__TIME,V__ROLE,V__PLACE,V__TYPE] :
      ( ( s__subclass(V__TYPE,s__Process)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__PLACE,s__Object)
        & s__instance(V__ROLE,s__CaseRole)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__OBJ,s__Object) )
     => ( s__playsRoleInEventOfType(V__OBJ,V__ROLE,V__TYPE,V__TIME,V__PLACE)
       => ? [V__EVENT] :
            ( s__instance(V__EVENT,s__Process)
            & s__instance(V__EVENT,V__TYPE)
            & s__time(V__EVENT,V__TIME)
            & s__eventLocated(V__EVENT,V__PLACE)
            & s__playsRoleInEvent(V__OBJ,V__ROLE,V__EVENT) ) ) ) ).

fof(kb_SUMO_14857,axiom,
    ! [V__OBJ,V__EVENT,V__TIME,V__ROLE,V__PLACE,V__TYPE] :
      ( ( s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__PLACE,s__Object)
        & s__instance(V__ROLE,s__CaseRole)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__playsRoleInEvent(V__OBJ,V__ROLE,V__EVENT)
          & s__instance(V__EVENT,V__TYPE)
          & s__subclass(V__TYPE,s__Process)
          & s__time(V__EVENT,V__TIME)
          & s__eventLocated(V__EVENT,V__PLACE) )
       => s__playsRoleInEventOfType(V__OBJ,V__ROLE,V__TYPE,V__TIME,V__PLACE) ) ) ).

fof(kb_SUMO_14858,axiom,
    s__instance(s__locatedAtTime__m,s__TernaryPredicate) ).

fof(kb_SUMO_14859,axiom,
    s__domain(s__locatedAtTime__m,"1",s__Object) ).

fof(kb_SUMO_14860,axiom,
    s__domain(s__locatedAtTime__m,"2",s__TimePosition) ).

fof(kb_SUMO_14861,axiom,
    s__domain(s__locatedAtTime__m,"3",s__Object) ).

fof(kb_SUMO_14862,axiom,
    s__documentation(s__locatedAtTime__m,s__EnglishLanguage,'(&%locatedAtTime ?OBJ ?TIME ?PLACE) means that during the time specified by ?TIME, ?OBJ was in the location specified by ?PLACE.') ).

%FOL fof(kb_SUMO_14863,axiom,(( (! [V__OBJ,V__TIME,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__TIME,s__TimePosition) & s__instance(V__OBJ,s__Object)) => (s__locatedAtTime(V__OBJ,V__TIME,V__PLACE) <=> s__holdsDuring(V__TIME,'s__located(V__OBJ,V__PLACE)')))) ))).

fof(kb_SUMO_14864,axiom,
    ! [V__OBJ,V__EVENT,V__TIME,V__ROLE,V__PLACE] :
      ( ( s__instance(V__PLACE,s__Object)
        & s__instance(V__ROLE,s__CaseRole)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__EVENT,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__playsRoleInEvent(V__OBJ,V__ROLE,V__EVENT)
          & s__time(V__EVENT,V__TIME)
          & s__eventLocated(V__EVENT,V__PLACE) )
       => s__locatedAtTime(V__OBJ,V__TIME,V__PLACE) ) ) ).

fof(kb_SUMO_14865,axiom,
    s__instance(s__deceptiveIdentifier__m,s__BinaryPredicate) ).

fof(kb_SUMO_14866,axiom,
    s__instance(s__deceptiveIdentifier__m,s__AsymmetricRelation) ).

fof(kb_SUMO_14867,axiom,
    s__domain(s__deceptiveIdentifier__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_14868,axiom,
    s__domain(s__deceptiveIdentifier__m,"2",s__Agent) ).

fof(kb_SUMO_14869,axiom,
    s__subrelation(s__deceptiveIdentifier__m,s__refers__m) ).

fof(kb_SUMO_14870,axiom,
    s__subrelation(s__alias__m,s__deceptiveIdentifier__m) ).

fof(kb_SUMO_14871,axiom,
    s__documentation(s__deceptiveIdentifier__m,s__EnglishLanguage,'(&%deceptiveIdentifier ?OBJ ?AGENT) means that ?AGENT presents ?OBJ as a representation of ?AGENTs `true identity, when in fact it is not.') ).

fof(kb_SUMO_14872,axiom,
    s__instance(s__stranger__m,s__BinaryPredicate) ).

fof(kb_SUMO_14873,axiom,
    s__documentation(s__stranger__m,s__EnglishLanguage,'(&%stranger ?H1 ?H2) means that ?H1 has not met ?H2, or, in other words, (&%not (&%acquaintance ?H1 ?H2)). Statements made with &%stranger should be temporally specified with &%holdsDuring. Note that &%stranger is not symmetric, meaning that ?H2 might know ?H1. For the symmetric version, see &%mutualStranger.') ).

fof(kb_SUMO_14874,axiom,
    s__domain(s__stranger__m,"1",s__Human) ).

fof(kb_SUMO_14875,axiom,
    s__domain(s__stranger__m,"2",s__Human) ).

fof(kb_SUMO_14876,axiom,
    s__disjointRelation(s__stranger__m,s__acquaintance__m) ).

fof(kb_SUMO_14877,axiom,
    s__instance(s__mutualStranger__m,s__BinaryPredicate) ).

fof(kb_SUMO_14878,axiom,
    s__instance(s__mutualStranger__m,s__SymmetricRelation) ).

fof(kb_SUMO_14879,axiom,
    s__documentation(s__mutualStranger__m,s__EnglishLanguage,'(&%mutualStranger ?H1 ?H2) means that ?H1 and ?H2 have not met each other and do not know each other. Statements made with this predicate should be temporally specified with &%holdsDuring. See also the weaker, non-symmetric version of this predicate, &%stranger.') ).

fof(kb_SUMO_14880,axiom,
    s__domain(s__mutualStranger__m,"1",s__Human) ).

fof(kb_SUMO_14881,axiom,
    s__domain(s__mutualStranger__m,"2",s__Human) ).

fof(kb_SUMO_14882,axiom,
    s__subrelation(s__mutualStranger__m,s__stranger__m) ).

fof(kb_SUMO_14883,axiom,
    s__disjointRelation(s__mutualStranger__m,s__mutualAcquaintance__m) ).

fof(kb_SUMO_14884,axiom,
    s__instance(s__domesticPartner__m,s__BinaryPredicate) ).

fof(kb_SUMO_14885,axiom,
    s__instance(s__domesticPartner__m,s__SymmetricRelation) ).

fof(kb_SUMO_14886,axiom,
    s__instance(s__domesticPartner__m,s__IntentionalRelation) ).

fof(kb_SUMO_14887,axiom,
    s__documentation(s__domesticPartner__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%domesticPartner ?H1 ?H2)) means that during the time ?T1, ?H1 and ?H2 live together and share a common domestic life but are not joined in a traditional marriage, a common-law marriage, or a civil union.') ).

fof(kb_SUMO_14888,axiom,
    s__domain(s__domesticPartner__m,"1",s__Human) ).

fof(kb_SUMO_14889,axiom,
    s__domain(s__domesticPartner__m,"2",s__Human) ).

fof(kb_SUMO_14890,axiom,
    s__disjointRelation(s__spouse__m,s__domesticPartner__m) ).

fof(kb_SUMO_14891,axiom,
    s__subrelation(s__domesticPartner__m,s__cohabitant__m) ).

fof(kb_SUMO_14892,axiom,
    s__instance(s__legalGuardian__m,s__BinaryPredicate) ).

fof(kb_SUMO_14893,axiom,
    s__instance(s__legalGuardian__m,s__AntisymmetricRelation) ).

fof(kb_SUMO_14894,axiom,
    s__documentation(s__legalGuardian__m,s__EnglishLanguage,'(&%holdsDuring ?T1 (&%legalGuardian ?H1 ?H2)) means that during the time ?T1, ?H2 has legal authority over ?H1, and is responsible for looking after ?H1s interests.') ).

fof(kb_SUMO_14895,axiom,
    s__domain(s__legalGuardian__m,"1",s__Human) ).

fof(kb_SUMO_14896,axiom,
    s__domain(s__legalGuardian__m,"2",s__Human) ).

fof(kb_SUMO_14897,axiom,
    ! [V__OBJ,V__REGION,V__TIME,V__PLACE] :
      ( ( s__instance(V__PLACE,s__GeographicArea)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__REGION,s__GeographicArea)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__locatedAtTime(V__OBJ,V__TIME,V__PLACE)
          & s__geographicSubregion(V__PLACE,V__REGION) )
       => s__locatedAtTime(V__OBJ,V__TIME,V__REGION) ) ) ).

fof(kb_SUMO_14898,axiom,
    s__subclass(s__Seating,s__Guiding) ).

fof(kb_SUMO_14899,axiom,
    s__instance(s__Seating__t,s__SetOrClass) ).

fof(kb_SUMO_14900,axiom,
    s__documentation(s__Seating,s__EnglishLanguage,'Guiding someone to a &%Seat, e.g. as when an usher shows someone to a &%Seat in an &%Auditorium.') ).

fof(kb_SUMO_14901,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Seating)
       => ? [V__P,V__H] :
            ( s__instance(V__H,s__Agent)
            & s__experiencer(V__S,V__H)
            & s__instance(V__H,s__Human)
            & s__destination(V__S,V__P)
            & s__instance(V__P,s__Seat) ) ) ) ).

fof(kb_SUMO_14902,axiom,
    s__subclass(s__Signalling,s__Guiding) ).

fof(kb_SUMO_14903,axiom,
    s__documentation(s__Signalling,s__EnglishLanguage,'Signalling is the subclass of &%Guiding processes in which an agent, animate or inanimate, sends a signal to another &%Object. In many cases, this signal will be an electrical or electronic one. Some signals may directly control the behavior of the object signalled, while others may merely cause information to be presented. Instances of electrical Signalling are typically more complex than simply than operation of a &%DeviceSwitch, though in some cases, Signalling involves remote activation of such a switch by another device.') ).

fof(kb_SUMO_14904,axiom,
    s__subclass(s__AchievingControl,s__Guiding) ).

fof(kb_SUMO_14905,axiom,
    s__instance(s__AchievingControl__t,s__SetOrClass) ).

fof(kb_SUMO_14906,axiom,
    s__documentation(s__AchievingControl,s__EnglishLanguage,'&%AchievingControl is the class of all events in which an &%Agent gains physical control over some object.') ).

fof(kb_SUMO_14907,axiom,
    s__instance(s__controlled__m,s__CaseRole) ).

fof(kb_SUMO_14908,axiom,
    s__documentation(s__controlled__m,s__EnglishLanguage,'(&%controlled ?EVENT ?OBJECT) means that during the &%AchievingControl denoted by ?EVENT, ?OBJECT comes to be physically controlled by an &%Agent.') ).

fof(kb_SUMO_14909,axiom,
    s__subrelation(s__controlled__m,s__patient__m) ).

fof(kb_SUMO_14910,axiom,
    s__domain(s__controlled__m,"1",s__AchievingControl) ).

fof(kb_SUMO_14911,axiom,
    s__domain(s__controlled__m,"2",s__Object) ).

fof(kb_SUMO_14912,axiom,
    s__instance(s__gainsControl__m,s__CaseRole) ).

fof(kb_SUMO_14913,axiom,
    s__documentation(s__gainsControl__m,s__EnglishLanguage,'(&%gainsControl ?EVENT ?AGENT) means that during ?EVENT, ?AGENT gains control of the &%patient (object).') ).

fof(kb_SUMO_14914,axiom,
    s__subrelation(s__gainsControl__m,s__agent__m) ).

fof(kb_SUMO_14915,axiom,
    s__domain(s__gainsControl__m,"1",s__AchievingControl) ).

fof(kb_SUMO_14916,axiom,
    s__domain(s__gainsControl__m,"2",s__Agent) ).

fof(kb_SUMO_14917,axiom,
    s__instance(s__ChangeOfControl,s__Class) ).

fof(kb_SUMO_14918,axiom,
    s__subclass(s__ChangeOfControl,s__AchievingControl) ).

fof(kb_SUMO_14919,axiom,
    s__instance(s__ChangeOfControl__t,s__SetOrClass) ).

fof(kb_SUMO_14920,axiom,
    s__documentation(s__ChangeOfControl,s__EnglishLanguage,'A &%ChangeOfControl is an event in which an &%agent gains physical control over some object that was previously controlled by a different &%agent.') ).

fof(kb_SUMO_14921,axiom,
    s__instance(s__losesControl__m,s__CaseRole) ).

fof(kb_SUMO_14922,axiom,
    s__subrelation(s__losesControl__m,s__experiencer__m) ).

fof(kb_SUMO_14923,axiom,
    s__documentation(s__losesControl__m,s__EnglishLanguage,'(&%losesControl ?EVENT ?AGENT) means that during ?EVENT, ?AGENT loses physical control of the &%controlled object.') ).

fof(kb_SUMO_14924,axiom,
    s__domain(s__losesControl__m,"1",s__ChangeOfControl) ).

fof(kb_SUMO_14925,axiom,
    s__domain(s__losesControl__m,"2",s__Agent) ).

fof(kb_SUMO_14926,axiom,
    s__subclass(s__Capturing,s__ChangeOfControl) ).

fof(kb_SUMO_14927,axiom,
    s__documentation(s__Capturing,s__EnglishLanguage,'A &%Capturing is a &%ChangeOfControl event in which an &%Agent gains physical control over another &%Agent.') ).

fof(kb_SUMO_14928,axiom,
    ! [V__OBJ,V__CAPTURE] :
      ( ( s__instance(V__CAPTURE,s__AchievingControl)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__CAPTURE,s__Capturing)
          & s__controlled(V__CAPTURE,V__OBJ) )
       => s__instance(V__OBJ,s__Agent) ) ) ).

fof(kb_SUMO_14929,axiom,
    s__subclass(s__PlacingUnderArrest,s__Capturing) ).

fof(kb_SUMO_14930,axiom,
    s__instance(s__PlacingUnderArrest__t,s__SetOrClass) ).

fof(kb_SUMO_14931,axiom,
    s__instance(s__Capturing__t,s__SetOrClass) ).

fof(kb_SUMO_14932,axiom,
    s__subclass(s__PlacingUnderArrest,s__LawEnforcement) ).

fof(kb_SUMO_14933,axiom,
    s__instance(s__LawEnforcement__t,s__SetOrClass) ).

fof(kb_SUMO_14934,axiom,
    s__documentation(s__PlacingUnderArrest,s__EnglishLanguage,'&%PlacingUnderArrest is the class of events in which a &%CognitiveAgent, typically a law enforcement professional, legally takes into custody a human or group of humans.') ).

fof(kb_SUMO_14935,axiom,
    s__subclass(s__PlacingUnderArrest,s__SocialInteraction) ).

fof(kb_SUMO_14936,axiom,
    s__subclass(s__PlacingUnderArrest,s__LegalAction) ).

fof(kb_SUMO_14937,axiom,
    s__instance(s__arrested__m,s__CaseRole) ).

fof(kb_SUMO_14938,axiom,
    s__documentation(s__arrested__m,s__EnglishLanguage,'(&%arrested ?EVENT ?AGENT) means that during ?EVENT, ?AGENT is taken into custody, typically by a representative of a law enforcement organization.') ).

fof(kb_SUMO_14939,axiom,
    s__domain(s__arrested__m,"1",s__PlacingUnderArrest) ).

fof(kb_SUMO_14940,axiom,
    s__domain(s__arrested__m,"2",s__Agent) ).

fof(kb_SUMO_14941,axiom,
    s__subrelation(s__arrested__m,s__controlled__m) ).

fof(kb_SUMO_14942,axiom,
    ! [V__ARREST,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__ARREST,s__Process) )
     => ( ( s__instance(V__ARREST,s__PlacingUnderArrest)
          & s__agent(V__ARREST,V__AGENT) )
       => s__instance(V__AGENT,s__CognitiveAgent) ) ) ).

fof(kb_SUMO_14943,axiom,
    ! [V__OBJ,V__ARREST] :
      ( ( s__instance(V__ARREST,s__PlacingUnderArrest)
        & s__instance(V__OBJ,s__Agent) )
     => ( s__arrested(V__ARREST,V__OBJ)
       => ( s__instance(V__OBJ,s__Human)
          | s__instance(V__OBJ,s__GroupOfPeople) ) ) ) ).

fof(kb_SUMO_14944,axiom,
    ! [V__MEMBER,V__ARREST,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__Collection)
        & s__instance(V__MEMBER,s__SelfConnectedObject)
        & s__instance(V__MEMBER,s__Agent) )
     => ( ( s__instance(V__ARREST,s__PlacingUnderArrest)
          & s__arrested(V__ARREST,V__AGENT)
          & s__instance(V__AGENT,s__GroupOfPeople)
          & s__member(V__MEMBER,V__AGENT) )
       => ? [V__ARREST1] :
            ( s__instance(V__ARREST1,s__PlacingUnderArrest)
            & s__arrested(V__ARREST1,V__MEMBER)
            & s__subProcess(V__ARREST1,V__ARREST) ) ) ) ).

fof(kb_SUMO_14945,axiom,
    ! [V__SUB,V__PROC,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__SUB,s__Process) )
     => ( ( s__instance(V__PROC,s__Process)
          & s__eventLocated(V__PROC,V__LOC)
          & s__subProcess(V__SUB,V__PROC) )
       => s__eventLocated(V__SUB,V__LOC) ) ) ).

fof(kb_SUMO_14946,axiom,
    ! [V__IMPRISON,V__AGENT,V__INTERVAL] :
      ( ( s__instance(V__AGENT,s__Animal)
        & s__instance(V__IMPRISON,s__Confining) )
     => ( ( s__instance(V__IMPRISON,s__Imprisoning)
          & s__detainee(V__IMPRISON,V__AGENT)
          & s__instance(V__AGENT,s__Human)
          & s__time(V__IMPRISON,V__INTERVAL)
          & s__instance(V__INTERVAL,s__TimeInterval) )
       => ? [V__ARREST,V__TIME] :
            ( s__instance(V__TIME,s__TimeInterval)
            & s__time(V__ARREST,V__TIME)
            & s__earlier(V__TIME,V__INTERVAL)
            & s__instance(V__ARREST,s__PlacingUnderArrest)
            & s__arrested(V__ARREST,V__AGENT) ) ) ) ).

fof(kb_SUMO_14947,axiom,
    s__instance(s__conveyance__m,s__CaseRole) ).

fof(kb_SUMO_14948,axiom,
    s__documentation(s__conveyance__m,s__EnglishLanguage,'(&%conveyance ?EVENT ?OBJ) means that ?OBJ is the &%Vehicle or other transportation device used in ?EVENT.') ).

fof(kb_SUMO_14949,axiom,
    s__subrelation(s__conveyance__m,s__instrument__m) ).

fof(kb_SUMO_14950,axiom,
    s__domain(s__conveyance__m,"1",s__Transportation) ).

fof(kb_SUMO_14951,axiom,
    s__domain(s__conveyance__m,"2",s__TransportationDevice) ).

fof(kb_SUMO_14952,axiom,
    ! [V__TRANSPORT,V__VEHICLE] :
      ( ( s__instance(V__VEHICLE,s__Object)
        & s__instance(V__TRANSPORT,s__Process) )
     => ( ( s__instance(V__TRANSPORT,s__Transportation)
          & s__instrument(V__TRANSPORT,V__VEHICLE)
          & s__instance(V__VEHICLE,s__RoadVehicle) )
       => s__instance(V__TRANSPORT,s__TransportViaRoadVehicle) ) ) ).

fof(kb_SUMO_14953,axiom,
    ! [V__TRANSPORT,V__VEHICLE] :
      ( ( s__instance(V__VEHICLE,s__TransportationDevice)
        & s__instance(V__TRANSPORT,s__Transportation) )
     => ( ( s__instance(V__TRANSPORT,s__TransportViaRoadVehicle)
          & s__conveyance(V__TRANSPORT,V__VEHICLE) )
       => s__instance(V__VEHICLE,s__RoadVehicle) ) ) ).

fof(kb_SUMO_14954,axiom,
    ! [V__TRANSPORT] :
      ( s__instance(V__TRANSPORT,s__Process)
     => ( s__instance(V__TRANSPORT,s__TransportViaRoadVehicle)
       => ? [V__DRIVING] :
            ( s__instance(V__DRIVING,s__Process)
            & s__instance(V__DRIVING,s__Driving)
            & s__subProcess(V__TRANSPORT,V__DRIVING) ) ) ) ).

fof(kb_SUMO_14955,axiom,
    ! [V__DRIVE,V__TRANSPORT,V__VEHICLE] :
      ( ( s__instance(V__VEHICLE,s__Object)
        & s__instance(V__TRANSPORT,s__Process)
        & s__instance(V__DRIVE,s__Process) )
     => ( ( s__instance(V__TRANSPORT,s__Transportation)
          & s__subProcess(V__TRANSPORT,V__DRIVE)
          & s__instance(V__DRIVE,s__Driving)
          & s__instrument(V__TRANSPORT,V__VEHICLE)
          & s__instance(V__VEHICLE,s__TransportationDevice) )
       => s__patient(V__DRIVE,V__VEHICLE) ) ) ).

fof(kb_SUMO_14956,axiom,
    ! [V__DRIVE,V__VEHICLE] :
      ( s__instance(V__DRIVE,s__Process)
     => ( ( s__instance(V__DRIVE,s__Driving)
          & s__patient(V__DRIVE,V__VEHICLE)
          & s__instance(V__VEHICLE,s__RoadVehicle) )
       => ? [V__TRANSPORT] :
            ( s__instance(V__TRANSPORT,s__Process)
            & s__instance(V__TRANSPORT,s__TransportViaRoadVehicle)
            & s__subProcess(V__TRANSPORT,V__DRIVE) ) ) ) ).

fof(kb_SUMO_14957,axiom,
    ! [V__DRIVER,V__TRANSPORT,V__DRIVING] :
      ( ( s__instance(V__DRIVING,s__Process)
        & s__instance(V__DRIVER,s__Agent) )
     => ( ( s__instance(V__DRIVING,s__Driving)
          & s__subProcess(V__TRANSPORT,V__DRIVING)
          & s__instance(V__TRANSPORT,s__Transportation)
          & s__agent(V__DRIVING,V__DRIVER) )
       => s__transported(V__TRANSPORT,V__DRIVER) ) ) ).

fof(kb_SUMO_14958,axiom,
    ! [V__TRANSPORT,V__DEST,V__DRIVING] :
      ( ( s__instance(V__DRIVING,s__Process)
        & s__instance(V__TRANSPORT,s__Process) )
     => ( ( s__instance(V__DRIVING,s__Driving)
          & s__subProcess(V__TRANSPORT,V__DRIVING)
          & s__instance(V__TRANSPORT,s__Transportation)
          & s__destination(V__DRIVING,V__DEST) )
       => s__destination(V__TRANSPORT,V__DEST) ) ) ).

fof(kb_SUMO_14959,axiom,
    ! [V__TRANSPORT,V__VEHICLE,V__DRIVING] :
      ( ( s__instance(V__DRIVING,s__Process)
        & s__instance(V__VEHICLE,s__TransportationDevice) )
     => ( ( s__instance(V__DRIVING,s__Driving)
          & s__subProcess(V__TRANSPORT,V__DRIVING)
          & s__instance(V__TRANSPORT,s__Transportation)
          & s__instance(V__VEHICLE,s__Vehicle)
          & s__patient(V__DRIVING,V__VEHICLE) )
       => s__conveyance(V__TRANSPORT,V__VEHICLE) ) ) ).

fof(kb_SUMO_14960,axiom,
    s__subclass(s__GasolineEngine,s__InternalCombustionEngine) ).

fof(kb_SUMO_14961,axiom,
    s__instance(s__GasolineEngine__t,s__SetOrClass) ).

fof(kb_SUMO_14962,axiom,
    s__documentation(s__GasolineEngine,s__EnglishLanguage,'&%GasolineEngine is the subclass of &%InternalCombustionEngines that use &%Gasoline as their resource.') ).

fof(kb_SUMO_14963,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__OperatingFn(s__GasolineEngine))
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__Gasoline)
            & s__resource(V__R,V__F) ) ) ) ).

fof(kb_SUMO_14964,axiom,
    s__subclass(s__DieselEngine,s__InternalCombustionEngine) ).

fof(kb_SUMO_14965,axiom,
    s__instance(s__DieselEngine__t,s__SetOrClass) ).

fof(kb_SUMO_14966,axiom,
    s__instance(s__InternalCombustionEngine__t,s__SetOrClass) ).

fof(kb_SUMO_14967,axiom,
    s__documentation(s__DieselEngine,s__EnglishLanguage,'&%DieselEngine is the subclass of &%InternalCombustionEngines that use &%DieselFuel as their resource.') ).

fof(kb_SUMO_14968,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__OperatingFn(s__DieselEngine))
       => ? [V__F] :
            ( s__instance(V__F,s__Object)
            & s__instance(V__F,s__DieselFuel)
            & s__resource(V__P,V__F) ) ) ) ).

fof(kb_SUMO_14969,axiom,
    s__instance(s__typicalPart__m,s__BinaryRelation) ).

fof(kb_SUMO_14970,axiom,
    s__instance(s__typicalPart__m,s__SpatialRelation) ).

fof(kb_SUMO_14971,axiom,
    s__relatedInternalConcept(s__typicalPart__m,s__part__m) ).

fof(kb_SUMO_14972,axiom,
    s__documentation(s__typicalPart__m,s__EnglishLanguage,'An instance of the first argument is typically found as part of an instance of the second argument. This is a class-level relation roughly corresponding to &%part. Note that this does not imply that such wholes typically have such parts.') ).

fof(kb_SUMO_14973,axiom,
    s__domainSubclass(s__typicalPart__m,"1",s__Object) ).

fof(kb_SUMO_14974,axiom,
    s__domainSubclass(s__typicalPart__m,"2",s__Object) ).

fof(kb_SUMO_14975,axiom,
    ! [V__PART,V__WHOLE] :
      ( ( s__subclass(V__WHOLE,s__Object)
        & s__instance(V__WHOLE,s__SetOrClass)
        & s__subclass(V__PART,s__Object)
        & s__instance(V__PART,s__SetOrClass) )
     => ( s__typicalPart(V__PART,V__WHOLE)
       => ? [V__X,V__Y] :
            ( s__instance(V__Y,s__Object)
            & s__instance(V__X,s__Object)
            & s__instance(V__X,V__WHOLE)
            & s__instance(V__Y,V__PART)
            & s__part(V__Y,V__X) ) ) ) ).

fof(kb_SUMO_14976,axiom,
    ! [V__NOTPARTPROB,V__PART,V__PARTPROB,V__X,V__WHOLE] :
      ( ( s__subclass(V__WHOLE,s__Object)
        & s__instance(V__WHOLE,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__PARTPROB,s__Quantity)
        & s__subclass(V__PART,s__Object)
        & s__instance(V__PART,s__SetOrClass)
        & s__instance(V__NOTPARTPROB,s__Quantity) )
     => ( ( s__typicalPart(V__PART,V__WHOLE)
          & s__instance(V__X,V__PART)
          & V__PARTPROB = s__ProbabilityFn('(? [V__Y] : (s__instance(V__Y,s__Object) & s__instance(V__Y,V__WHOLE) & s__part(V__X,V__Y)))')
          & V__NOTPARTPROB = s__ProbabilityFn('(~ (? [V__Z] : (s__instance(V__Z,s__Object) & s__instance(V__Z,V__WHOLE) & s__part(V__X,V__Z))))') )
       => greater(V__PARTPROB,V__NOTPARTPROB) ) ) ).

fof(kb_SUMO_14977,axiom,
    s__instance(s__typicallyContainsPart__m,s__BinaryRelation) ).

fof(kb_SUMO_14978,axiom,
    s__instance(s__typicallyContainsPart__m,s__SpatialRelation) ).

fof(kb_SUMO_14979,axiom,
    s__relatedInternalConcept(s__typicallyContainsPart__m,s__part__m) ).

fof(kb_SUMO_14980,axiom,
    s__documentation(s__typicallyContainsPart__m,s__EnglishLanguage,'An instance of the second argument typically contains an instance of the first argument. This is a class-level relation roughly corresponding to &%part. Note that this does not imply that such parts typically have such wholes.') ).

fof(kb_SUMO_14981,axiom,
    s__domainSubclass(s__typicallyContainsPart__m,"1",s__Object) ).

fof(kb_SUMO_14982,axiom,
    s__domainSubclass(s__typicallyContainsPart__m,"2",s__Object) ).

fof(kb_SUMO_14983,axiom,
    ! [V__PART,V__WHOLE] :
      ( ( s__subclass(V__WHOLE,s__Object)
        & s__instance(V__WHOLE,s__SetOrClass)
        & s__subclass(V__PART,s__Object)
        & s__instance(V__PART,s__SetOrClass) )
     => ( s__typicallyContainsPart(V__PART,V__WHOLE)
       => ? [V__X,V__Y] :
            ( s__instance(V__Y,s__Object)
            & s__instance(V__X,s__Object)
            & s__instance(V__X,V__WHOLE)
            & s__instance(V__Y,V__PART)
            & s__part(V__Y,V__X) ) ) ) ).

fof(kb_SUMO_14984,axiom,
    ! [V__NOTPARTPROB,V__PART,V__PARTPROB,V__WHOLE,V__Y] :
      ( ( s__instance(V__Y,s__Object)
        & s__subclass(V__WHOLE,s__Object)
        & s__instance(V__WHOLE,s__SetOrClass)
        & s__instance(V__PARTPROB,s__Quantity)
        & s__subclass(V__PART,s__Object)
        & s__instance(V__PART,s__SetOrClass)
        & s__instance(V__NOTPARTPROB,s__Quantity) )
     => ( ( s__typicallyContainsPart(V__PART,V__WHOLE)
          & s__instance(V__Y,V__WHOLE)
          & V__PARTPROB = s__ProbabilityFn('(? [V__X1] : (s__instance(V__X1,s__Object) & s__instance(V__X1,V__PART) & s__part(V__X1,V__Y)))')
          & V__NOTPARTPROB = s__ProbabilityFn('(~ (? [V__X2] : (s__instance(V__X2,s__Object) & s__instance(V__X2,V__PART) & s__part(V__X2,V__Y))))') )
       => greater(V__PARTPROB,V__NOTPARTPROB) ) ) ).

fof(kb_SUMO_14985,axiom,
    s__instance(s__initialPart__m,s__BinaryRelation) ).

fof(kb_SUMO_14986,axiom,
    s__instance(s__initialPart__m,s__SpatialRelation) ).

fof(kb_SUMO_14987,axiom,
    s__relatedInternalConcept(s__initialPart__m,s__part__m) ).

fof(kb_SUMO_14988,axiom,
    s__documentation(s__initialPart__m,s__EnglishLanguage,'Every instance of the first argument is initially found as part of an instance of the second argument, even though it might lose that part later in its lifetime. While the part must initially exist as part of a whole, this does not say that each whole necessarily initially contains such a part. For example, a thumb must at some time have been part of a hand, but every hand need not have a thumb, even at birth. This is a class-level relation roughly corresponding to &%part.') ).

fof(kb_SUMO_14989,axiom,
    s__domainSubclass(s__initialPart__m,"1",s__Object) ).

fof(kb_SUMO_14990,axiom,
    s__domainSubclass(s__initialPart__m,"2",s__Object) ).

%FOL fof(kb_SUMO_14991,axiom,(( (! [V__C2,V__PART,V__C1] : ((s__subclass(V__C1,s__Object) & s__instance(V__C1,s__SetOrClass) & s__instance(V__PART,s__Object) & s__subclass(V__C2,s__Object) & s__instance(V__C2,s__SetOrClass)) => ((s__initialPart(V__C2,V__C1) & s__instance(V__PART,V__C2)) => (? [V__WHOLE] : (s__instance(V__WHOLE,s__Object) & s__instance(V__WHOLE,V__C1) & s__holdsDuring(s__BeginFn(s__WhenFn(V__PART)),'s__part(V__PART,V__WHOLE)')))))) ))).

fof(kb_SUMO_14992,axiom,
    s__initialPart(s__AnimalAnatomicalStructure,s__Animal) ).

fof(kb_SUMO_14993,axiom,
    s__instance(s__initiallyContainsPart__m,s__BinaryRelation) ).

fof(kb_SUMO_14994,axiom,
    s__instance(s__initiallyContainsPart__m,s__SpatialRelation) ).

fof(kb_SUMO_14995,axiom,
    s__relatedInternalConcept(s__initiallyContainsPart__m,s__part__m) ).

fof(kb_SUMO_14996,axiom,
    s__documentation(s__initiallyContainsPart__m,s__EnglishLanguage,'Every instance of the second argument initially contains an instance of the first argument, even though it might lose that part later in its lifetime. Every normal human starts life with an appendix for example. While the whole must initially contain such a part, this does not say that each part necessarily initially exists as part of such a whole. This is a class-level relation roughly corresponding to &%part.') ).

fof(kb_SUMO_14997,axiom,
    s__domainSubclass(s__initiallyContainsPart__m,"1",s__Object) ).

fof(kb_SUMO_14998,axiom,
    s__domainSubclass(s__initiallyContainsPart__m,"2",s__Object) ).

%FOL fof(kb_SUMO_14999,axiom,(( (! [V__C2,V__C1,V__WHOLE] : ((s__instance(V__WHOLE,s__Object) & s__subclass(V__C1,s__Object) & s__instance(V__C1,s__SetOrClass) & s__subclass(V__C2,s__Object) & s__instance(V__C2,s__SetOrClass)) => ((s__initiallyContainsPart(V__C2,V__C1) & s__instance(V__WHOLE,V__C1)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__instance(V__PART,V__C2) & s__holdsDuring(s__BeginFn(s__WhenFn(V__WHOLE)),'s__part(V__PART,V__WHOLE)')))))) ))).

fof(kb_SUMO_15000,axiom,
    s__subclass(s__CausingHappiness,s__Process) ).

fof(kb_SUMO_15001,axiom,
    s__instance(s__CausingHappiness__t,s__SetOrClass) ).

fof(kb_SUMO_15002,axiom,
    s__documentation(s__CausingHappiness,s__EnglishLanguage,'Any &%Process whose result is that the patient of the process is happy.') ).

%FOL fof(kb_SUMO_15003,axiom,(( (! [V__P,V__C] : ((s__instance(V__C,s__Process) & s__instance(V__P,s__Object)) => ((s__instance(V__C,s__CausingHappiness) & s__patient(V__C,V__P)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__C)),'(~ s__attribute(V__P,s__Happiness))') & s__holdsDuring(s__EndFn(s__WhenFn(V__C)),'s__attribute(V__P,s__Happiness)'))))) ))).

fof(kb_SUMO_15004,axiom,
    s__subclass(s__CausingPain,s__CausingUnhappiness) ).

fof(kb_SUMO_15005,axiom,
    s__instance(s__CausingPain__t,s__SetOrClass) ).

fof(kb_SUMO_15006,axiom,
    s__documentation(s__CausingPain,s__EnglishLanguage,'Any &%Process whose result is that the patient of the process is in &%Pain.') ).

fof(kb_SUMO_15007,axiom,
    s__subclass(s__CausingUnhappiness,s__Process) ).

fof(kb_SUMO_15008,axiom,
    s__instance(s__CausingUnhappiness__t,s__SetOrClass) ).

fof(kb_SUMO_15009,axiom,
    s__documentation(s__CausingUnhappiness,s__EnglishLanguage,'Any &%Process whose result is that the patient of the process is unhappy.') ).

%FOL fof(kb_SUMO_15010,axiom,(( (! [V__P,V__C] : ((s__instance(V__C,s__Process) & s__instance(V__P,s__Object)) => ((s__instance(V__C,s__CausingHappiness) & s__patient(V__C,V__P)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__C)),'(~ s__attribute(V__P,s__Unhappiness))') & s__holdsDuring(s__EndFn(s__WhenFn(V__C)),'s__attribute(V__P,s__Unhappiness)'))))) ))).

fof(kb_SUMO_15011,axiom,
    s__subclass(s__Lengthening,s__Increasing) ).

fof(kb_SUMO_15012,axiom,
    s__instance(s__Lengthening__t,s__SetOrClass) ).

fof(kb_SUMO_15013,axiom,
    s__documentation(s__Lengthening,s__EnglishLanguage,'&%Increasing the length of something.') ).

%FOL fof(kb_SUMO_15014,axiom,(( (! [V__O,V__L] : ((s__instance(V__L,s__Process) & s__instance(V__O,s__Object)) => ((s__instance(V__L,s__Lengthening) & s__patient(V__L,V__O)) => (? [V__L1,V__L2] : (s__instance(V__L2,s__LengthMeasure) & s__instance(V__L1,s__LengthMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__L)),'s__length(V__O,V__L1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__L)),'s__length(V__O,V__L2)') & greater(V__L2,V__L1)))))) ))).

fof(kb_SUMO_15015,axiom,
    s__subclass(s__Saving,s__Increasing) ).

fof(kb_SUMO_15016,axiom,
    s__instance(s__Saving__t,s__SetOrClass) ).

fof(kb_SUMO_15017,axiom,
    s__documentation(s__Saving,s__EnglishLanguage,'Any instance of &%Increasing where the &%PhysicalQuantity involved is a &%CurrencyMeasure. This includes saving in a financial account as well as stuffing gold bars under the matress, or a squirrel saving nuts for winter.') ).

%FOL fof(kb_SUMO_15018,axiom,(( (! [V__O,V__A,V__S] : ((s__instance(V__S,s__Process) & s__instance(V__A,s__Agent) & s__instance(V__O,s__Object)) => ((s__instance(V__S,s__Saving) & s__patient(V__S,V__O) & s__agent(V__S,V__A)) => (? [V__Q1,V__Q2] : (s__instance(V__Q2,s__CurrencyMeasure) & s__instance(V__Q1,s__CurrencyMeasure) & s__holdsDuring(s__BeginFn(s__WhenFn(V__S)),'s__monetaryValue(V__O,V__Q1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__S)),'s__monetaryValue(V__O,V__Q2)') & s__possesses(V__A,V__O) & less(V__Q1,V__Q2)))))) ))).

fof(kb_SUMO_15019,axiom,
    s__documentation(s__financialAsset__m,s__EnglishLanguage,'A predicate that relates an &%Agent to any item of economic value owned by the &%Agent. Examples of financial assets are cash, securities, accounts receivable, inventory, office equipment, a house, a car, and other property.') ).

fof(kb_SUMO_15020,axiom,
    s__domain(s__financialAsset__m,"1",s__Agent) ).

fof(kb_SUMO_15021,axiom,
    s__domain(s__financialAsset__m,"2",s__Object) ).

fof(kb_SUMO_15022,axiom,
    s__subrelation(s__financialAsset__m,s__possesses__m) ).

fof(kb_SUMO_15023,axiom,
    ! [V__P,V__A] :
      ( ( s__instance(V__A,s__Object)
        & s__instance(V__P,s__Agent) )
     => ( s__financialAsset(V__P,V__A)
       => ? [V__V] :
            ( s__instance(V__V,s__CurrencyMeasure)
            & s__monetaryValue(V__A,V__V) ) ) ) ).

fof(kb_SUMO_15024,axiom,
    s__subclass(s__Barking,s__RadiatingSound) ).

fof(kb_SUMO_15025,axiom,
    s__instance(s__Barking__t,s__SetOrClass) ).

fof(kb_SUMO_15026,axiom,
    s__documentation(s__Barking,s__EnglishLanguage,'Any instance of &%RadiatingSound which is produced by a &%Canine.') ).

fof(kb_SUMO_15027,axiom,
    ! [V__B] :
      ( s__instance(V__B,s__Process)
     => ( s__instance(V__B,s__Barking)
       => ? [V__D] :
            ( s__instance(V__D,s__Agent)
            & s__instance(V__D,s__Canine)
            & s__agent(V__B,V__D) ) ) ) ).

fof(kb_SUMO_15028,axiom,
    s__subclass(s__Menstruation,s__OrganOrTissueProcess) ).

fof(kb_SUMO_15029,axiom,
    s__instance(s__Menstruation__t,s__SetOrClass) ).

fof(kb_SUMO_15030,axiom,
    s__documentation(s__Menstruation,s__EnglishLanguage,'A periodic discharge of &%Blood and other &%BiologicalSubstances by &%Females that is part of a readjustment of the uterus.') ).

fof(kb_SUMO_15031,axiom,
    s__subclass(s__Organification,s__OrganOrTissueProcess) ).

fof(kb_SUMO_15032,axiom,
    s__instance(s__Organification__t,s__SetOrClass) ).

fof(kb_SUMO_15033,axiom,
    s__documentation(s__Organification,s__EnglishLanguage,'Any &%BiologicalProcess that results in the formation of an &%Organ.') ).

fof(kb_SUMO_15034,axiom,
    ! [V__P] :
      ( s__instance(V__P,s__Process)
     => ( s__instance(V__P,s__Organification)
       => ? [V__O] :
            ( s__instance(V__O,s__Organ)
            & s__result(V__P,V__O) ) ) ) ).

fof(kb_SUMO_15035,axiom,
    s__subclass(s__BiologicalConception,s__OrganOrTissueProcess) ).

fof(kb_SUMO_15036,axiom,
    s__instance(s__BiologicalConception__t,s__SetOrClass) ).

fof(kb_SUMO_15037,axiom,
    s__relatedInternalConcept(s__BiologicalConception,s__SexualReproduction) ).

fof(kb_SUMO_15038,axiom,
    s__relatedInternalConcept(s__BiologicalConception,s__Birth) ).

fof(kb_SUMO_15039,axiom,
    s__relatedInternalConcept(s__BiologicalConception,s__Mating) ).

fof(kb_SUMO_15040,axiom,
    s__documentation(s__BiologicalConception,s__EnglishLanguage,'The production of a zygote from the fusion of a male and female gamete.') ).

fof(kb_SUMO_15041,axiom,
    ! [V__SR] :
      ( s__instance(V__SR,s__Process)
     => ( s__instance(V__SR,s__SexualReproduction)
       => ? [V__C] :
            ( s__instance(V__C,s__Process)
            & s__instance(V__C,s__BiologicalConception)
            & s__subProcess(V__C,V__SR) ) ) ) ).

fof(kb_SUMO_15042,axiom,
    s__subclass(s__ContraceptiveDevice,s__Device) ).

fof(kb_SUMO_15043,axiom,
    s__instance(s__ContraceptiveDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15044,axiom,
    s__documentation(s__ContraceptiveDevice,s__EnglishLanguage,'&%Devices which permit sexual intercourse but which reduce the likelihood of conception.') ).

fof(kb_SUMO_15045,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Physical)
     => ( s__instance(V__C,s__ContraceptiveDevice)
       => s__hasPurpose(V__C,'(? [V__M] : (s__instance(V__M,s__Mating) & s__patient(V__M,V__C) & (~ (? [V__SR] : (s__instance(V__M,s__Process) & s__instance(V__SR,s__BiologicalConception) & s__result(V__M,V__SR))))))') ) ) ).

fof(kb_SUMO_15046,axiom,
    s__subclass(s__BirdEgg,s__Egg) ).

fof(kb_SUMO_15047,axiom,
    s__instance(s__BirdEgg__t,s__SetOrClass) ).

fof(kb_SUMO_15048,axiom,
    s__documentation(s__BirdEgg,s__EnglishLanguage,'Any &%Egg that is produced by a &%Bird.') ).

fof(kb_SUMO_15049,axiom,
    ! [V__E] :
      ( s__instance(V__E,s__BirdEgg)
     => ? [V__SR,V__B] :
          ( s__instance(V__B,s__Agent)
          & s__instance(V__SR,s__Process)
          & s__instance(V__SR,s__SexualReproduction)
          & s__agent(V__SR,V__B)
          & s__instance(V__B,s__Bird)
          & s__result(V__SR,V__E) ) ) ).

fof(kb_SUMO_15050,axiom,
    s__subclass(s__Biopsy,s__DiagnosticProcess) ).

fof(kb_SUMO_15051,axiom,
    s__subclass(s__Biopsy,s__Removing) ).

fof(kb_SUMO_15052,axiom,
    s__instance(s__Biopsy__t,s__SetOrClass) ).

fof(kb_SUMO_15053,axiom,
    s__documentation(s__Biopsy,s__EnglishLanguage,'Any &%DiagnosticProcess which involves the examination of &%BodySubstances taken from a living &%Organism.') ).

fof(kb_SUMO_15054,axiom,
    ! [V__B,V__BS] :
      ( s__instance(V__B,s__Process)
     => ( ( s__instance(V__B,s__Biopsy)
          & s__patient(V__B,V__BS) )
       => s__instance(V__BS,s__BodySubstance) ) ) ).

fof(kb_SUMO_15055,axiom,
    s__subclass(s__Mating,s__OrganismProcess) ).

fof(kb_SUMO_15056,axiom,
    s__documentation(s__Mating,s__EnglishLanguage,'Any process of sexual intercourse between two &%Humans or &%Animals.') ).

fof(kb_SUMO_15057,axiom,
    s__subclass(s__Raping,s__Mating) ).

fof(kb_SUMO_15058,axiom,
    s__instance(s__Raping__t,s__SetOrClass) ).

fof(kb_SUMO_15059,axiom,
    s__instance(s__Mating__t,s__SetOrClass) ).

fof(kb_SUMO_15060,axiom,
    s__subclass(s__Raping,s__CriminalAction) ).

fof(kb_SUMO_15061,axiom,
    s__documentation(s__Raping,s__EnglishLanguage,'Any instance of &%Mating where one participant does not consent. This is limited to acts between &%Humans.') ).

fof(kb_SUMO_15062,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Process)
     => ( s__instance(V__R,s__Raping)
       => ? [V__A] :
            ( s__instance(V__A,s__CognitiveAgent)
            & s__experiencer(V__R,V__A)
            & ~ s__wants(V__A,V__R) ) ) ) ).

fof(kb_SUMO_15063,axiom,
    s__subclass(s__LayingEggs,s__OrganismProcess) ).

fof(kb_SUMO_15064,axiom,
    s__instance(s__LayingEggs__t,s__SetOrClass) ).

fof(kb_SUMO_15065,axiom,
    s__documentation(s__LayingEggs,s__EnglishLanguage,'Any &%OrganismProcess where an &%Egg is expelled from the body of a &%Animal, e.g. a &%Bird or &%Reptile laying eggs.') ).

%FOL fof(kb_SUMO_15066,axiom,(( (! [V__A,V__L] : ((s__instance(V__L,s__Process) & s__instance(V__A,s__Agent)) => ((s__instance(V__L,s__LayingEggs) & s__experiencer(V__L,V__A)) => (? [V__E] : (s__instance(V__E,s__Object) & s__instance(V__E,s__Egg) & s__patient(V__L,V__E) & s__holdsDuring(s__BeginFn(s__WhenFn(V__L)),'s__part(V__E,V__A)') & s__holdsDuring(s__EndFn(s__WhenFn(V__L)),'(~ s__part(V__E,V__A))')))))) ))).

fof(kb_SUMO_15067,axiom,
    ! [V__A,V__L] :
      ( ( s__instance(V__L,s__Process)
        & s__instance(V__A,s__Agent) )
     => ( ( s__instance(V__L,s__LayingEggs)
          & s__experiencer(V__L,V__A) )
       => ( s__instance(V__A,s__Animal)
          & s__attribute(V__A,s__Female) ) ) ) ).

fof(kb_SUMO_15068,axiom,
    s__instance(s__affiliatedOrganization__m,s__BinaryPredicate) ).

fof(kb_SUMO_15069,axiom,
    s__domain(s__affiliatedOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_15070,axiom,
    s__domain(s__affiliatedOrganization__m,"2",s__Organization) ).

fof(kb_SUMO_15071,axiom,
    s__documentation(s__ideologicalAffiliationOfOrganization__m,s__EnglishLanguage,'(ideologicalAffiliationOfOrganization ?ORG ?GOV) means that one of the goals of ?ORG is to realize the &%FormOfGovernment ?GOV.') ).

fof(kb_SUMO_15072,axiom,
    s__instance(s__ideologicalAffiliationOfOrganization__m,s__BinaryPredicate) ).

fof(kb_SUMO_15073,axiom,
    s__domain(s__ideologicalAffiliationOfOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_15074,axiom,
    s__domain(s__ideologicalAffiliationOfOrganization__m,"2",s__FormOfGovernment) ).

fof(kb_SUMO_15075,axiom,
    s__documentation(s__religiousAffiliationOfOrganization__m,s__EnglishLanguage,'(religiousAffiliationOfOrganization ?ORG ?BELIEF) means that one of the goals of ?ORG is to advance the religious teachings of the &%BeliefGroup ?BELIEF.') ).

fof(kb_SUMO_15076,axiom,
    s__instance(s__religiousAffiliationOfOrganization__m,s__BinaryPredicate) ).

fof(kb_SUMO_15077,axiom,
    s__domain(s__religiousAffiliationOfOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_15078,axiom,
    s__domain(s__religiousAffiliationOfOrganization__m,"2",s__BeliefGroup) ).

fof(kb_SUMO_15079,axiom,
    s__documentation(s__allegiance__m,s__EnglishLanguage,'(allegiance ?AGENT ?ENTITY) means that the &%CognitiveAgent ?AGENT owes its allegiance to the political entity ?ENTITY.') ).

fof(kb_SUMO_15080,axiom,
    s__instance(s__allegiance__m,s__BinaryPredicate) ).

fof(kb_SUMO_15081,axiom,
    s__domain(s__allegiance__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_15082,axiom,
    s__domain(s__allegiance__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_15083,axiom,
    s__documentation(s__ancestorOrganization__m,s__EnglishLanguage,'(ancestorOrganization ?ORG1 ?ORG2) means that the &%Organization ?ORG1 descended from the &%Organization ?ORG2.') ).

fof(kb_SUMO_15084,axiom,
    s__instance(s__ancestorOrganization__m,s__BinaryPredicate) ).

fof(kb_SUMO_15085,axiom,
    s__instance(s__ancestorOrganization__m,s__TransitiveRelation) ).

fof(kb_SUMO_15086,axiom,
    s__instance(s__ancestorOrganization__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_15087,axiom,
    s__domain(s__ancestorOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_15088,axiom,
    s__domain(s__ancestorOrganization__m,"2",s__Organization) ).

fof(kb_SUMO_15089,axiom,
    s__disjointRelation(s__ancestorOrganization__m,s__subOrganization__m) ).

fof(kb_SUMO_15090,axiom,
    s__documentation(s__anniversary__m,s__EnglishLanguage,'(anniversary ?PHYSICAL ?TIME) means that ?TIME is the class of TimeIntervals which mark the anniversary of ?PHYSICAL. For example, (anniversary Christmas (&%DayFn 35 &%December)) means that Christmas is celebrated each year on the 25th of &%December.') ).

fof(kb_SUMO_15091,axiom,
    s__instance(s__anniversary__m,s__BinaryPredicate) ).

fof(kb_SUMO_15092,axiom,
    s__instance(s__anniversary__m,s__TemporalRelation) ).

fof(kb_SUMO_15093,axiom,
    s__domain(s__anniversary__m,"1",s__Physical) ).

fof(kb_SUMO_15094,axiom,
    s__domain(s__anniversary__m,"2",s__TimeInterval) ).

fof(kb_SUMO_15095,axiom,
    s__documentation(s__birthday__m,s__EnglishLanguage,'(birthday ?PERSON ?DAY) means that ?DAY is the anniversary each year of the birth of ?PERSON. For example, (birthday &%WilliamJeffersonClinton (&%DayFn 19 &%August)) means that Bill Clintons birthday is &%August 19th.') ).

fof(kb_SUMO_15096,axiom,
    s__domain(s__birthday__m,"1",s__Human) ).

fof(kb_SUMO_15097,axiom,
    s__domain(s__birthday__m,"2",s__Day) ).

fof(kb_SUMO_15098,axiom,
    s__subrelation(s__birthday__m,s__anniversary__m) ).

fof(kb_SUMO_15099,axiom,
    s__documentation(s__birthplace__m,s__EnglishLanguage,'(birthplace ?INDIV ?PLACE) means that the &%Animal ?INDIV was born at the location ?PLACE. The location may be a geographic area or a building, such as a hospital.') ).

fof(kb_SUMO_15100,axiom,
    s__instance(s__birthplace__m,s__BinaryPredicate) ).

fof(kb_SUMO_15101,axiom,
    s__domain(s__birthplace__m,"1",s__Animal) ).

fof(kb_SUMO_15102,axiom,
    s__domain(s__birthplace__m,"2",s__Object) ).

fof(kb_SUMO_15103,axiom,
    ! [V__INDIV,V__PLACE] :
      ( ( s__instance(V__PLACE,s__Object)
        & s__instance(V__INDIV,s__Animal) )
     => ( s__birthplace(V__INDIV,V__PLACE)
       => ? [V__BIRTH] :
            ( s__instance(V__BIRTH,s__Process)
            & s__instance(V__BIRTH,s__Birth)
            & s__experiencer(V__BIRTH,V__INDIV)
            & s__eventLocated(V__BIRTH,V__PLACE) ) ) ) ).

fof(kb_SUMO_15104,axiom,
    s__documentation(s__birthdate__m,s__EnglishLanguage,'(birthdate ?PERSON ?DAY) means that ?DAY is the &%Day on which the ?PERSON was born.') ).

fof(kb_SUMO_15105,axiom,
    s__instance(s__birthdate__m,s__BinaryPredicate) ).

fof(kb_SUMO_15106,axiom,
    s__domain(s__birthdate__m,"1",s__Human) ).

fof(kb_SUMO_15107,axiom,
    s__domain(s__birthdate__m,"2",s__Day) ).

fof(kb_SUMO_15108,axiom,
    ! [V__P,V__D] :
      ( ( s__instance(V__D,s__Day)
        & s__instance(V__P,s__Human) )
     => ( s__birthdate(V__P,V__D)
       => ? [V__B] :
            ( s__instance(V__B,s__Process)
            & s__instance(V__B,s__Birth)
            & s__experiencer(V__B,V__P)
            & s__date(V__B,V__D) ) ) ) ).

fof(kb_SUMO_15109,axiom,
    s__documentation(s__deathdate__m,s__EnglishLanguage,'(birthdate ?PERSON ?DAY) means that ?DAY is the &%Day on which the ?PERSON died.') ).

fof(kb_SUMO_15110,axiom,
    s__domain(s__deathdate__m,"1",s__Human) ).

fof(kb_SUMO_15111,axiom,
    s__domain(s__deathdate__m,"2",s__Day) ).

fof(kb_SUMO_15112,axiom,
    s__instance(s__deathdate__m,s__BinaryPredicate) ).

fof(kb_SUMO_15113,axiom,
    ! [V__P,V__T] :
      ( ( s__instance(V__T,s__Day)
        & s__instance(V__P,s__Human) )
     => ( s__deathdate(V__P,V__T)
       => ? [V__D] :
            ( s__instance(V__D,s__Process)
            & s__instance(V__D,s__Death)
            & s__experiencer(V__D,V__P)
            & s__date(V__D,V__T) ) ) ) ).

fof(kb_SUMO_15114,axiom,
    s__documentation(s__deathplace__m,s__EnglishLanguage,'(deathplace ?INDIV ?PLACE) means that the &%Animal ?INDIV died at the location ?PLACE. The location may be a geographic area or a building, such as a hospital.') ).

fof(kb_SUMO_15115,axiom,
    s__instance(s__deathplace__m,s__BinaryPredicate) ).

fof(kb_SUMO_15116,axiom,
    s__domain(s__deathplace__m,"1",s__Animal) ).

fof(kb_SUMO_15117,axiom,
    s__domain(s__deathplace__m,"2",s__Object) ).

fof(kb_SUMO_15118,axiom,
    ! [V__P,V__L] :
      ( ( s__instance(V__L,s__Object)
        & s__instance(V__P,s__Animal) )
     => ( s__deathplace(V__P,V__L)
       => ? [V__D] :
            ( s__instance(V__D,s__Process)
            & s__instance(V__D,s__Death)
            & s__experiencer(V__D,V__P)
            & s__eventLocated(V__D,V__L) ) ) ) ).

fof(kb_SUMO_15119,axiom,
    s__instance(s__equipmentCount__m,s__TernaryPredicate) ).

fof(kb_SUMO_15120,axiom,
    s__domain(s__equipmentCount__m,"1",s__Object) ).

fof(kb_SUMO_15121,axiom,
    s__domainSubclass(s__equipmentCount__m,"2",s__Device) ).

fof(kb_SUMO_15122,axiom,
    s__domain(s__equipmentCount__m,"3",s__Quantity) ).

fof(kb_SUMO_15123,axiom,
    s__documentation(s__equipmentCount__m,s__EnglishLanguage,'(&%equipmentCount ?OBJECT ?TYPE ?QUANTITY) means that ?OBJECT is equipped with devices of the type ?TYPE, in the number ?QUANTITY. Equipment associated with an ?OBJECT may be a &%component of ?OBJECT (such as the emergency oxygen system built into passenger jets) or it may be a device simply located on or with ?OBJECT (such as a first aid kit).') ).

fof(kb_SUMO_15124,axiom,
    s__documentation(s__equipmentType__m,s__EnglishLanguage,'(equipmentType ?THING ?TYPE) means that the &%Artifact ?THING has a component or attachment of &%Device ?TYPE. See also &%equipmentTypeCount.') ).

fof(kb_SUMO_15125,axiom,
    s__instance(s__equipmentType__m,s__BinaryPredicate) ).

fof(kb_SUMO_15126,axiom,
    s__domain(s__equipmentType__m,"1",s__Artifact) ).

fof(kb_SUMO_15127,axiom,
    s__domain(s__equipmentType__m,"2",s__Device) ).

fof(kb_SUMO_15128,axiom,
    ! [V__O,V__T] :
      ( ( s__instance(V__T,s__Device)
        & s__instance(V__T,s__SetOrClass)
        & s__instance(V__O,s__Artifact) )
     => ( s__equipmentType(V__O,V__T)
       => ? [V__D] :
            ( s__instance(V__D,s__Object)
            & s__instance(V__D,V__T)
            & ( s__part(V__D,V__O)
              | s__connected(V__D,V__O) ) ) ) ) ).

fof(kb_SUMO_15129,axiom,
    ! [V__O,V__C,V__T] :
      ( ( s__subclass(V__T,s__Device)
        & s__instance(V__T,s__Device)
        & s__instance(V__T,s__SetOrClass)
        & s__instance(V__C,s__Quantity)
        & s__instance(V__O,s__Artifact) )
     => ( s__equipmentCount(V__O,V__T,V__C)
       => s__equipmentType(V__O,V__T) ) ) ).

fof(kb_SUMO_15130,axiom,
    ! [V__O,V__T] :
      ( ( s__subclass(V__T,s__Device)
        & s__instance(V__T,s__Device)
        & s__instance(V__T,s__SetOrClass)
        & s__instance(V__O,s__Artifact) )
     => ( s__equipmentType(V__O,V__T)
       => ? [V__C] :
            ( s__instance(V__C,s__Quantity)
            & greatereq(V__C,"1")
            & s__equipmentCount(V__O,V__T,V__C) ) ) ) ).

fof(kb_SUMO_15131,axiom,
    s__documentation(s__grammaticalRelation__m,s__EnglishLanguage,'(grammaticalRelation ?PHRASE ?SENTENCE) means that the &%Phrase ?PHRASE has a grammatical relation to the Sentence ?SENTENCE, i.e. it is a subject, object, main verb, etc. of the ?SENTENCE.') ).

fof(kb_SUMO_15132,axiom,
    s__instance(s__grammaticalRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_15133,axiom,
    s__domain(s__grammaticalRelation__m,"1",s__Phrase) ).

fof(kb_SUMO_15134,axiom,
    s__domain(s__grammaticalRelation__m,"2",s__Sentence) ).

fof(kb_SUMO_15135,axiom,
    s__instance(s__distanceOnPath__m,s__BinaryRelation) ).

fof(kb_SUMO_15136,axiom,
    s__documentation(s__distanceOnPath__m,s__EnglishLanguage,'(distanceOnPath ?DIST ?PATH) means that for a given path (which is a pathInSystem) that the distance of the route is the measurement ?DIST.') ).

fof(kb_SUMO_15137,axiom,
    s__domain(s__distanceOnPath__m,"1",s__ConstantQuantity) ).

fof(kb_SUMO_15138,axiom,
    s__domain(s__distanceOnPath__m,"2",s__Transitway) ).

fof(kb_SUMO_15139,axiom,
    s__instance(s__inString__m,s__BinaryPredicate) ).

fof(kb_SUMO_15140,axiom,
    s__domain(s__inString__m,"1",s__Character) ).

fof(kb_SUMO_15141,axiom,
    s__domain(s__inString__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15142,axiom,
    s__documentation(s__inString__m,s__EnglishLanguage,'(&%inString ?&%Character ?&%SymbolicString) means that ?&%Character is &%part of ?&%SymbolicString. See also &%subString.') ).

fof(kb_SUMO_15143,axiom,
    s__subrelation(s__inString__m,s__part__m) ).

fof(kb_SUMO_15144,axiom,
    ! [V__CHAR,V__STRING] :
      ( ( s__instance(V__STRING,s__SymbolicString)
        & s__part(V__CHAR,V__STRING)
        & s__instance(V__CHAR,s__Character) )
     => s__inString(V__CHAR,V__STRING) ) ).

fof(kb_SUMO_15145,axiom,
    s__instance(s__subString__m,s__AntisymmetricRelation) ).

fof(kb_SUMO_15146,axiom,
    s__instance(s__subString__m,s__ReflexiveRelation) ).

fof(kb_SUMO_15147,axiom,
    s__instance(s__subString__m,s__BinaryPredicate) ).

fof(kb_SUMO_15148,axiom,
    s__domain(s__subString__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15149,axiom,
    s__domain(s__subString__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15150,axiom,
    s__documentation(s__subString__m,s__EnglishLanguage,'(&%subString ?&%SymbolicString-1 ?&%SymbolicString-2) means that ?&%SymbolicString-1 is &%part of ?&%SymbolicString-2. ?&%SymbolicString-2 includes all the same &%Characters as ?&%SymbolicString-1 and in the same order, but ?&%SymbolicString-2 may include more &%Characters than ?&%SymbolicString-1. See also &%inString.') ).

fof(kb_SUMO_15151,axiom,
    s__subrelation(s__subString__m,s__part__m) ).

fof(kb_SUMO_15152,axiom,
    ! [V__S1,V__S2,V__L1,V__L2] :
      ( ( s__instance(V__L2,s__Quantity)
        & s__instance(V__L1,s__Quantity)
        & s__instance(V__S2,s__SymbolicString)
        & s__instance(V__S1,s__SymbolicString) )
     => ( ( s__subString(V__S1,V__S2)
          & V__L1 = s__StringLengthFn(V__S1)
          & V__L2 = s__StringLengthFn(V__S2) )
       => lesseq(V__L1,V__L2) ) ) ).

fof(kb_SUMO_15153,axiom,
    ! [V__S1,V__S2,V__CH] :
      ( ( s__instance(V__CH,s__Character)
        & s__instance(V__S2,s__SymbolicString)
        & s__instance(V__S1,s__SymbolicString) )
     => ( ( s__subString(V__S1,V__S2)
          & s__inString(V__CH,V__S1) )
       => s__inString(V__CH,V__S2) ) ) ).

fof(kb_SUMO_15154,axiom,
    s__instance(s__SubstringFn__m,s__TernaryFunction) ).

fof(kb_SUMO_15155,axiom,
    s__instance(s__SubstringFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_15156,axiom,
    s__instance(s__SubstringFn__m,s__SingleValuedRelation) ).

fof(kb_SUMO_15157,axiom,
    s__domain(s__SubstringFn__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15158,axiom,
    s__domain(s__SubstringFn__m,"2",s__NonnegativeInteger) ).

fof(kb_SUMO_15159,axiom,
    s__domain(s__SubstringFn__m,"3",s__NonnegativeInteger) ).

fof(kb_SUMO_15160,axiom,
    s__range(s__SubstringFn__m,s__SymbolicString) ).

fof(kb_SUMO_15161,axiom,
    s__documentation(s__SubstringFn__m,s__EnglishLanguage,'(&%SubstringFn ?&%SymbolicString ?&%NonnegativeInteger-1 ?&%NonnegativeInteger-2) denotes a string that is a &%subString of ?&%SymbolicString, begins with the &%Character at the index ?&%NonnegativeInteger-1, and ends with the &%Character at the index (&%SubtractionFn ?&%NonnegativeInteger-2 1). The first &%Character in ?&%SymbolicString is denoted by the index 0. If the value of ?&%NonnegativeInteger-1 or ?&%NonnegativeInteger-2 is greater than the value of (&%StringLengthFn ?&%SymbolicString), or if ?&%NonnegativeInteger-1 is greater than ?&%NonnegativeInteger-2, the result of evaluating the &%SubstringFn expression is undefined. Example: (&%equal &quot;Charle&quot; (&%SubstringFn &quot;Charles Darwin&quot; 0 6)).') ).

fof(kb_SUMO_15162,axiom,
    ! [V__LEN,V__START,V__SUB,V__END,V__STRING] :
      ( ( s__instance(V__STRING,s__SymbolicString)
        & s__instance(V__END,s__NonnegativeInteger)
        & s__instance(V__START,s__NonnegativeInteger)
        & s__instance(V__LEN,s__Quantity) )
     => ( ( V__SUB = s__SubstringFn(V__STRING,V__START,V__END)
          & V__LEN = s__StringLengthFn(V__STRING) )
       => ( lesseq(V__START,V__END)
          & less(V__START,V__LEN)
          & lesseq(V__END,V__LEN) ) ) ) ).

fof(kb_SUMO_15163,axiom,
    s__instance(s__StringLengthFn__m,s__UnaryFunction) ).

fof(kb_SUMO_15164,axiom,
    s__instance(s__StringLengthFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_15165,axiom,
    s__instance(s__StringLengthFn__m,s__SingleValuedRelation) ).

fof(kb_SUMO_15166,axiom,
    s__domain(s__StringLengthFn__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15167,axiom,
    s__range(s__StringLengthFn__m,s__NonnegativeInteger) ).

fof(kb_SUMO_15168,axiom,
    s__documentation(s__StringLengthFn__m,s__EnglishLanguage,'This &%UnaryFunction takes a &%SymbolicString as its sole argument. The result of evaluating a term formed with &%StringLengthFn is a &%NonnegativeInteger that denotes the number of &%Characters in the &%SymbolicString. Example: (&%equal 14 (&%StringLengthFn &quot;Charles Darwin&quot;)).') ).

fof(kb_SUMO_15169,axiom,
    s__instance(s__stringLength__m,s__BinaryPredicate) ).

fof(kb_SUMO_15170,axiom,
    s__instance(s__stringLength__m,s__TotalValuedRelation) ).

fof(kb_SUMO_15171,axiom,
    s__instance(s__stringLength__m,s__SingleValuedRelation) ).

fof(kb_SUMO_15172,axiom,
    s__instance(s__stringLength__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15173,axiom,
    s__domain(s__stringLength__m,"1",s__NonnegativeInteger) ).

fof(kb_SUMO_15174,axiom,
    s__domain(s__stringLength__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15175,axiom,
    s__documentation(s__stringLength__m,s__EnglishLanguage,'(&%stringLength ?&%NonnegativeInteger ?&%SymbolicString) means that the number of &%Characters in ?&%SymbolicString is ?&%NonnegativeInteger. Example: (&%stringLength 14 &quot;Charles Darwin&quot;), which is a &%True &%Sentence.') ).

fof(kb_SUMO_15176,axiom,
    ! [V__INT,V__STRING] :
      ( ( s__instance(V__STRING,s__SymbolicString)
        & s__instance(V__INT,s__NonnegativeInteger) )
     => ( s__stringLength(V__INT,V__STRING)
      <=> V__INT = s__StringLengthFn(V__STRING) ) ) ).

fof(kb_SUMO_15177,axiom,
    s__instance(s__StringConcatenateFn__m,s__BinaryFunction) ).

fof(kb_SUMO_15178,axiom,
    s__instance(s__StringConcatenateFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_15179,axiom,
    s__instance(s__StringConcatenateFn__m,s__SingleValuedRelation) ).

fof(kb_SUMO_15180,axiom,
    s__domain(s__StringConcatenateFn__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15181,axiom,
    s__domain(s__StringConcatenateFn__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15182,axiom,
    s__range(s__StringConcatenateFn__m,s__SymbolicString) ).

fof(kb_SUMO_15183,axiom,
    s__documentation(s__StringConcatenateFn__m,s__EnglishLanguage,'The result of applying this &%Function to two &%SymbolicString arguments is a third &%SymbolicString that is the concatenation of the two arguments. Example: (&%equal &quot;Charles Darwin&quot; (&%StringConcatenateFn &quot;Charles &quot; &quot;Darwin&quot;)).') ).

fof(kb_SUMO_15184,axiom,
    s__instance(s__stringConcatenation__m,s__TernaryPredicate) ).

fof(kb_SUMO_15185,axiom,
    s__instance(s__stringConcatenation__m,s__TotalValuedRelation) ).

fof(kb_SUMO_15186,axiom,
    s__instance(s__stringConcatenation__m,s__SingleValuedRelation) ).

fof(kb_SUMO_15187,axiom,
    s__domain(s__stringConcatenation__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15188,axiom,
    s__domain(s__stringConcatenation__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15189,axiom,
    s__domain(s__stringConcatenation__m,"3",s__SymbolicString) ).

fof(kb_SUMO_15190,axiom,
    s__documentation(s__stringConcatenation__m,s__EnglishLanguage,'(&%stringConcatenation ?&%SymbolicString-1 ?&%SymbolicString-2 ?&%SymbolicString-3) means that ?&%SymbolicString-3 can be formed by appending ?&%SymbolicString-1 and ?&%SymbolicString-2, in order. Example: (&%stringConcatenation &quot;Charles &quot; &quot;Darwin&quot; &quot;Charles Darwin&quot;) is a &%True &%Sentence.') ).

fof(kb_SUMO_15191,axiom,
    ! [V__S1,V__S3,V__S2] :
      ( ( s__instance(V__S2,s__SymbolicString)
        & s__instance(V__S3,s__SymbolicString)
        & s__instance(V__S1,s__SymbolicString) )
     => ( s__stringConcatenation(V__S1,V__S1,V__S3)
      <=> V__S3 = s__StringConcatenateFn(V__S1,V__S2) ) ) ).

fof(kb_SUMO_15192,axiom,
    s__instance(s__precedesInString__m,s__TernaryPredicate) ).

fof(kb_SUMO_15193,axiom,
    s__domain(s__precedesInString__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15194,axiom,
    s__domain(s__precedesInString__m,"2",s__SymbolicString) ).

fof(kb_SUMO_15195,axiom,
    s__domain(s__precedesInString__m,"3",s__SymbolicString) ).

fof(kb_SUMO_15196,axiom,
    s__documentation(s__precedesInString__m,s__EnglishLanguage,'(&%precedesInString ?&%SymbolicString-1 ?&%SymbolicString-2 ?&%SymbolicString-3) means that ?&%SymbolicString-1 and ?&%SymbolicString-2 are &%subStrings of ?&%SymbolicString-3, and ?&%SymbolicString-1 occurs sequentially before ?&%SymbolicString-2 in ?&%SymbolicString-3. Example: (&%precedesInString &quot;Johann&quot; &quot;Bach&quot; &quot;Johann Sebastian Bach&quot;).') ).

fof(kb_SUMO_15197,axiom,
    s__subrelation(s__stringConcatenation__m,s__precedesInString__m) ).

fof(kb_SUMO_15198,axiom,
    ! [V__S1,V__S3,V__S2] :
      ( ( s__instance(V__S2,s__SymbolicString)
        & s__instance(V__S3,s__SymbolicString)
        & s__instance(V__S1,s__SymbolicString) )
     => ( s__precedesInString(V__S1,V__S2,V__S3)
       => ( s__subString(V__S1,V__S3)
          & s__subString(V__S2,V__S3) ) ) ) ).

fof(kb_SUMO_15199,axiom,
    ! [V__S1,V__S3,V__S2,V__S4] :
      ( ( s__instance(V__S4,s__SymbolicString)
        & s__instance(V__S2,s__SymbolicString)
        & s__instance(V__S3,s__SymbolicString)
        & s__instance(V__S1,s__SymbolicString) )
     => ( ( s__precedesInString(V__S1,V__S2,V__S4)
          & s__precedesInString(V__S2,V__S3,V__S4) )
       => s__precedesInString(V__S1,V__S3,V__S4) ) ) ).

fof(kb_SUMO_15200,axiom,
    s__subclass(s__Descriptor,s__ContentBearingObject) ).

fof(kb_SUMO_15201,axiom,
    s__subclass(s__Name,s__Descriptor) ).

fof(kb_SUMO_15202,axiom,
    s__instance(s__Name__t,s__SetOrClass) ).

fof(kb_SUMO_15203,axiom,
    s__instance(s__Descriptor__t,s__SetOrClass) ).

fof(kb_SUMO_15204,axiom,
    s__documentation(s__Name,s__EnglishLanguage,'&%Name denotes the &%Class of &%ContentBearingObjects that identify an &%Entity, typically in some linguistic form such as an epithet, given name, street address, etc.') ).

fof(kb_SUMO_15205,axiom,
    s__subclass(s__Identifier,s__Name) ).

fof(kb_SUMO_15206,axiom,
    s__instance(s__Identifier__t,s__SetOrClass) ).

fof(kb_SUMO_15207,axiom,
    s__documentation(s__Identifier,s__EnglishLanguage,'&%Identifier is the &%Class of &%ContentBearingObjects that identify some entity, such as a bank account, a person, or a location (e.g., as identified by a specific street address or GPS coordinates), perhaps uniquely under some circumstances.') ).

fof(kb_SUMO_15208,axiom,
    s__subclass(s__PlaceDescriptor,s__Descriptor) ).

fof(kb_SUMO_15209,axiom,
    s__subclass(s__DescriptorPart,s__ContentBearingObject) ).

fof(kb_SUMO_15210,axiom,
    s__instance(s__DescriptorPart__t,s__SetOrClass) ).

fof(kb_SUMO_15211,axiom,
    s__subclass(s__NamePart,s__DescriptorPart) ).

fof(kb_SUMO_15212,axiom,
    s__instance(s__NamePart__t,s__SetOrClass) ).

fof(kb_SUMO_15213,axiom,
    s__subclass(s__IdentifierPart,s__NamePart) ).

fof(kb_SUMO_15214,axiom,
    s__instance(s__IdentifierPart__t,s__SetOrClass) ).

fof(kb_SUMO_15215,axiom,
    s__subclass(s__PlaceID,s__PlaceDescriptor) ).

fof(kb_SUMO_15216,axiom,
    s__instance(s__PlaceID__t,s__SetOrClass) ).

fof(kb_SUMO_15217,axiom,
    s__instance(s__PlaceDescriptor__t,s__SetOrClass) ).

fof(kb_SUMO_15218,axiom,
    s__subclass(s__LocalizablePlaceID,s__PlaceID) ).

fof(kb_SUMO_15219,axiom,
    s__instance(s__LocalizablePlaceID__t,s__SetOrClass) ).

fof(kb_SUMO_15220,axiom,
    s__subclass(s__PlaceAddress,s__PlaceID) ).

fof(kb_SUMO_15221,axiom,
    s__subclass(s__ContactSite,s__Object) ).

fof(kb_SUMO_15222,axiom,
    s__documentation(s__ContactSite,s__EnglishLanguage,'A &%ContactSite is an &%Object, typically a &%Place or a &%Residence or a &%CommunicationDevice such as a &%Telephone, that has some kind of address identifier and can serve as a point of contact for a &%Human or &%Organization.') ).

fof(kb_SUMO_15223,axiom,
    s__subclass(s__TelephonyDevice,s__ContactSite) ).

fof(kb_SUMO_15224,axiom,
    s__instance(s__TelephonyDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15225,axiom,
    s__instance(s__ContactSite__t,s__SetOrClass) ).

fof(kb_SUMO_15226,axiom,
    s__subclass(s__TelephonyDevice,s__CommunicationDevice) ).

fof(kb_SUMO_15227,axiom,
    s__subclass(s__TelephonyDevice,s__ElectricDevice) ).

fof(kb_SUMO_15228,axiom,
    s__instance(s__ElectricDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15229,axiom,
    s__documentation(s__TelephonyDevice,s__EnglishLanguage,'A &%TelephonyDevice is a &%CommunicationDevice that, when connected to a &%TelephoneSystem, functions as an access point allowing end users (&%Humans or other &%Agents, such as autonomous/scheduled &%ComputerPrograms) to send or receive signals via the system. &%Telephones and &%FaxMachines are &%TelephonyDevices. A given &%Computer may or may not function as a &%TelephonyDevice, depending on the &%ComputerPrograms it runs and the &%ComputerComponents that are part of it.') ).

fof(kb_SUMO_15230,axiom,
    s__subclass(s__Telephone,s__TelephonyDevice) ).

fof(kb_SUMO_15231,axiom,
    s__instance(s__canonicalPlaceName__m,s__TernaryPredicate) ).

fof(kb_SUMO_15232,axiom,
    s__documentation(s__canonicalPlaceName__m,s__EnglishLanguage,'(&%canonicalPlaceName ?PLACE ?LANG ?STRING) means that in the &%Language ?LANG, the &%SymbolicString ?STRING is a canonical name for the &%GeographicArea ?PLACE') ).

fof(kb_SUMO_15233,axiom,
    s__domain(s__canonicalPlaceName__m,"1",s__Region) ).

fof(kb_SUMO_15234,axiom,
    s__domain(s__canonicalPlaceName__m,"2",s__Language) ).

fof(kb_SUMO_15235,axiom,
    s__domain(s__canonicalPlaceName__m,"3",s__SymbolicString) ).

fof(kb_SUMO_15236,axiom,
    ! [V__LANG,V__PLACE,V__STR] :
      ( ( s__instance(V__STR,s__SymbolicString)
        & s__instance(V__PLACE,s__Region)
        & s__instance(V__LANG,s__Language) )
     => ( s__canonicalPlaceName(V__PLACE,V__LANG,V__STR)
       => s__names(V__STR,V__PLACE) ) ) ).

fof(kb_SUMO_15237,axiom,
    s__subclass(s__PostalPlace,s__StationaryArtifact) ).

fof(kb_SUMO_15238,axiom,
    s__subclass(s__PostalPlace,s__LocalizablePlace) ).

fof(kb_SUMO_15239,axiom,
    s__subclass(s__PostalPlace,s__ContactSite) ).

fof(kb_SUMO_15240,axiom,
    s__documentation(s__PostalPlace,s__EnglishLanguage,'A &%PostalPlace is any &%LocalizablePlace that can have a postal address, and to which hardcopy mail (letters, packages, etc.) can be delivered.') ).

fof(kb_SUMO_15241,axiom,
    s__subclass(s__MilitaryInstallation,s__PostalPlace) ).

fof(kb_SUMO_15242,axiom,
    s__instance(s__MilitaryInstallation__t,s__SetOrClass) ).

fof(kb_SUMO_15243,axiom,
    s__subclass(s__Residence,s__PostalPlace) ).

fof(kb_SUMO_15244,axiom,
    s__instance(s__PostalPlace__t,s__SetOrClass) ).

fof(kb_SUMO_15245,axiom,
    s__subclass(s__PlaceOfCommerce,s__PostalPlace) ).

fof(kb_SUMO_15246,axiom,
    s__instance(s__siteForContact__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15247,axiom,
    s__instance(s__siteForContact__m,s__BinaryPredicate) ).

fof(kb_SUMO_15248,axiom,
    s__domain(s__siteForContact__m,"1",s__ContactSite) ).

fof(kb_SUMO_15249,axiom,
    s__domain(s__siteForContact__m,"2",s__Agent) ).

fof(kb_SUMO_15250,axiom,
    s__documentation(s__siteForContact__m,s__EnglishLanguage,'(&%siteForContact ?&%ContactSite ?&%Agent) means that the &%Human or &%Organization ?&%Agent can be reached at or via the point of contact ?&%ContactSite.') ).

fof(kb_SUMO_15251,axiom,
    s__instance(s__postContactSite__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15252,axiom,
    s__instance(s__postContactSite__m,s__BinaryPredicate) ).

fof(kb_SUMO_15253,axiom,
    s__domain(s__postContactSite__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15254,axiom,
    s__domain(s__postContactSite__m,"2",s__Agent) ).

fof(kb_SUMO_15255,axiom,
    s__documentation(s__postContactSite__m,s__EnglishLanguage,'(&%postContactSite ?&%PostalPlace ?&%Agent) means that the &%Human or &%Organization ?&%Agent can be contacted by post (mail) at the location ?&%PostalPlace.') ).

fof(kb_SUMO_15256,axiom,
    s__subrelation(s__postContactSite__m,s__siteForContact__m) ).

fof(kb_SUMO_15257,axiom,
    s__instance(s__unitNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15258,axiom,
    s__documentation(s__unitNumber__m,s__EnglishLanguage,'(&%unitNumber ?STR ?PLACE) means that ?STR represents the particular unit or space within the building that a &%PostalPlace is located') ).

fof(kb_SUMO_15259,axiom,
    s__domain(s__unitNumber__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15260,axiom,
    s__domain(s__unitNumber__m,"2",s__PostalPlace) ).

fof(kb_SUMO_15261,axiom,
    s__instance(s__floorCode__m,s__BinaryPredicate) ).

fof(kb_SUMO_15262,axiom,
    s__documentation(s__floorCode__m,s__EnglishLanguage,'(&%floorCode ?STR ?PLACE) means that ?STR represents the &%BuildingLevel that a particular &%PostalPlace can be found at') ).

fof(kb_SUMO_15263,axiom,
    s__domain(s__floorCode__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15264,axiom,
    s__domain(s__floorCode__m,"2",s__PostalPlace) ).

fof(kb_SUMO_15265,axiom,
    ! [V__FLRCODE,V__PLACE,V__UNITSTR] :
      ( ( s__instance(V__UNITSTR,s__SymbolicString)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__FLRCODE,s__SymbolicString) )
     => ( ( s__unitNumber(V__UNITSTR,V__PLACE)
          & s__floorCode(V__FLRCODE,V__PLACE) )
       => ? [V__UNIT,V__FLOOR] :
            ( s__instance(V__FLOOR,s__Object)
            & s__instance(V__UNIT,s__Physical)
            & s__instance(V__FLOOR,s__BuildingLevel)
            & s__instance(V__UNIT,s__Room)
            & s__located(V__UNIT,V__FLOOR)
            & s__part(V__FLOOR,V__PLACE)
            & s__names(V__UNITSTR,V__UNIT)
            & s__names(V__FLRCODE,V__FLOOR) ) ) ) ).

fof(kb_SUMO_15266,axiom,
    ! [V__BLDG,V__PLACE,V__UNITSTR] :
      ( ( s__instance(V__UNITSTR,s__SymbolicString)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__BLDG,s__Object) )
     => ( ( s__unitNumber(V__UNITSTR,V__PLACE)
          & ~ ? [V__FLR] :
                ( s__instance(V__FLR,s__SymbolicString)
                & s__floorCode(V__FLR,V__PLACE) ) )
       => ? [V__UNIT] :
            ( s__instance(V__UNIT,s__Physical)
            & s__instance(V__UNIT,s__Room)
            & s__names(V__UNITSTR,V__UNIT)
            & s__located(V__UNIT,V__BLDG) ) ) ) ).

fof(kb_SUMO_15267,axiom,
    s__subclass(s__Neighborhood,s__GeographicArea) ).

fof(kb_SUMO_15268,axiom,
    s__instance(s__Neighborhood__t,s__SetOrClass) ).

fof(kb_SUMO_15269,axiom,
    s__documentation(s__Neighborhood,s__EnglishLanguage,'&%Neighborhood refers to a &%GeographicArea that is a subregion of a larger geographic area, such as a &%City, normally with a distinctive feature') ).

fof(kb_SUMO_15270,axiom,
    s__termFormat(s__EnglishLanguage,s__Neighborhood,neighborhood) ).

fof(kb_SUMO_15271,axiom,
    ! [V__PLACE] :
      ( s__instance(V__PLACE,s__GeographicArea)
     => ( s__instance(V__PLACE,s__Neighborhood)
       => ? [V__AREA] :
            ( s__instance(V__AREA,s__GeographicArea)
            & s__geographicSubregion(V__PLACE,V__AREA) ) ) ) ).

fof(kb_SUMO_15272,axiom,
    s__instance(s__postNeighborhood__m,s__BinaryPredicate) ).

fof(kb_SUMO_15273,axiom,
    s__instance(s__postNeighborhood__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15274,axiom,
    s__subrelation(s__postNeighborhood__m,s__located__m) ).

fof(kb_SUMO_15275,axiom,
    s__documentation(s__postNeighborhood__m,s__EnglishLanguage,'(&%postNeighborhood ?PLACE ?NEIGHBORHOOD) means that ?PLACE is located in ?NEIGHBORHOOD') ).

fof(kb_SUMO_15276,axiom,
    s__domain(s__postNeighborhood__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15277,axiom,
    s__domain(s__postNeighborhood__m,"2",s__Neighborhood) ).

fof(kb_SUMO_15278,axiom,
    ! [V__GEO,V__PLACE] :
      ( ( s__located(V__PLACE,V__GEO)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__GEO,s__Neighborhood) )
    <=> s__postNeighborhood(V__PLACE,V__GEO) ) ).

fof(kb_SUMO_15279,axiom,
    ! [V__CITY,V__NEIGHBORHOOD,V__PLACE] :
      ( ( s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__NEIGHBORHOOD,s__Neighborhood) )
     => ( ( s__postNeighborhood(V__PLACE,V__NEIGHBORHOOD)
          & s__geographicSubregion(V__NEIGHBORHOOD,V__CITY)
          & s__instance(V__CITY,s__City) )
       => s__postCity(V__PLACE,V__CITY) ) ) ).

fof(kb_SUMO_15280,axiom,
    ! [V__NEIGHBORHOOD,V__PLACE,V__STATE] :
      ( ( s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__NEIGHBORHOOD,s__Neighborhood) )
     => ( ( s__postNeighborhood(V__PLACE,V__NEIGHBORHOOD)
          & s__geographicSubregion(V__NEIGHBORHOOD,V__STATE)
          & s__instance(V__STATE,s__StateOrProvince) )
       => s__postDistrict(V__PLACE,V__STATE) ) ) ).

fof(kb_SUMO_15281,axiom,
    s__instance(s__postCountry__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15282,axiom,
    s__instance(s__postCountry__m,s__BinaryPredicate) ).

fof(kb_SUMO_15283,axiom,
    s__domain(s__postCountry__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15284,axiom,
    s__domain(s__postCountry__m,"2",s__GeopoliticalArea) ).

fof(kb_SUMO_15285,axiom,
    s__subrelation(s__postCountry__m,s__located__m) ).

fof(kb_SUMO_15286,axiom,
    s__documentation(s__postCountry__m,s__EnglishLanguage,'(&%postCountry ?&%PostalPlace ?&%GeopoliticalArea) means that ?&%PostalPlace is located in the &%Nation or &%DependencyOrSpecialSovereigntyArea ?&%GeopoliticalArea.') ).

fof(kb_SUMO_15287,axiom,
    ! [V__PLACE,V__COUNTRY] :
      ( ( s__instance(V__COUNTRY,s__GeopoliticalArea)
        & s__instance(V__PLACE,s__PostalPlace) )
     => ( s__postCountry(V__PLACE,V__COUNTRY)
       => ( s__instance(V__COUNTRY,s__Nation)
          | s__instance(V__COUNTRY,s__DependencyOrSpecialSovereigntyArea) ) ) ) ).

fof(kb_SUMO_15288,axiom,
    ! [V__GEO,V__PLACE] :
      ( s__instance(V__GEO,s__GeopoliticalArea)
     => ( ( s__located(V__PLACE,V__GEO)
          & s__instance(V__PLACE,s__PostalPlace)
          & ( s__instance(V__GEO,s__Nation)
            | s__instance(V__GEO,s__DependencyOrSpecialSovereigntyArea) ) )
      <=> s__postCountry(V__PLACE,V__GEO) ) ) ).

fof(kb_SUMO_15289,axiom,
    ! [V__CITY,V__PLACE,V__AREA] :
      ( ( s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__CITY,s__City) )
     => ( ( s__postCity(V__PLACE,V__CITY)
          & s__geographicSubregion(V__CITY,V__AREA)
          & s__instance(V__AREA,s__StateOrProvince) )
       => s__postDistrict(V__PLACE,V__AREA) ) ) ).

fof(kb_SUMO_15290,axiom,
    ! [V__CITY,V__PLACE,V__AREA] :
      ( ( s__instance(V__AREA,s__GeopoliticalArea)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__CITY,s__City) )
     => ( ( s__postCity(V__PLACE,V__CITY)
          & s__geographicSubregion(V__CITY,V__AREA)
          & ( s__instance(V__AREA,s__Nation)
            | s__instance(V__AREA,s__DependencyOrSpecialSovereigntyArea) ) )
       => s__postCountry(V__PLACE,V__AREA) ) ) ).

fof(kb_SUMO_15291,axiom,
    s__instance(s__postDistrict__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15292,axiom,
    s__instance(s__postDistrict__m,s__BinaryPredicate) ).

fof(kb_SUMO_15293,axiom,
    s__domain(s__postDistrict__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15294,axiom,
    s__domain(s__postDistrict__m,"2",s__StateOrProvince) ).

fof(kb_SUMO_15295,axiom,
    s__subrelation(s__postDistrict__m,s__located__m) ).

fof(kb_SUMO_15296,axiom,
    s__documentation(s__postDistrict__m,s__EnglishLanguage,'(&%postDistrict ?&%PostalPlace ?&%StateOrProvince) means that ?&%PostalPlace is located in ?&%StateOrProvince.') ).

fof(kb_SUMO_15297,axiom,
    ! [V__GEO,V__PLACE] :
      ( ( s__located(V__PLACE,V__GEO)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__GEO,s__StateOrProvince) )
    <=> s__postDistrict(V__PLACE,V__GEO) ) ).

fof(kb_SUMO_15298,axiom,
    s__instance(s__postCity__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15299,axiom,
    s__instance(s__postCity__m,s__BinaryPredicate) ).

fof(kb_SUMO_15300,axiom,
    s__domain(s__postCity__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15301,axiom,
    s__domain(s__postCity__m,"2",s__City) ).

fof(kb_SUMO_15302,axiom,
    s__subrelation(s__postCity__m,s__located__m) ).

fof(kb_SUMO_15303,axiom,
    s__documentation(s__postCity__m,s__EnglishLanguage,'(&%postCity ?&%PostalPlace ?&%City) means that ?&%PostalPlace is located in ?&%City.') ).

fof(kb_SUMO_15304,axiom,
    ! [V__GEO,V__PLACE] :
      ( ( s__located(V__PLACE,V__GEO)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__GEO,s__City) )
    <=> s__postCity(V__PLACE,V__GEO) ) ).

fof(kb_SUMO_15305,axiom,
    s__subclass(s__PostcodeArea,s__LocalizablePlace) ).

fof(kb_SUMO_15306,axiom,
    s__instance(s__PostcodeArea__t,s__SetOrClass) ).

fof(kb_SUMO_15307,axiom,
    s__documentation(s__PostcodeArea,s__EnglishLanguage,'An &%instance of &%PostcodeArea is a &%LocalizablePlace that is identified by a &%Postcode.') ).

fof(kb_SUMO_15308,axiom,
    ! [V__AREA] :
      ( s__instance(V__AREA,s__GeographicArea)
     => ( s__instance(V__AREA,s__PostcodeArea)
       => ? [V__GEO] :
            ( s__instance(V__GEO,s__GeographicArea)
            & s__geographicSubregion(V__AREA,V__GEO) ) ) ) ).

fof(kb_SUMO_15309,axiom,
    s__instance(s__postPostcodeArea__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15310,axiom,
    s__instance(s__postPostcodeArea__m,s__BinaryPredicate) ).

fof(kb_SUMO_15311,axiom,
    s__domain(s__postPostcodeArea__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15312,axiom,
    s__domain(s__postPostcodeArea__m,"2",s__PostcodeArea) ).

fof(kb_SUMO_15313,axiom,
    s__subrelation(s__postPostcodeArea__m,s__located__m) ).

fof(kb_SUMO_15314,axiom,
    s__documentation(s__postPostcodeArea__m,s__EnglishLanguage,'(&%postPostcodeArea ?&%PostalPlace ?&%PostcodeArea) means that ?&%PostalPlace is located in ?&%PostcodeArea.') ).

fof(kb_SUMO_15315,axiom,
    ! [V__PLACE,V__AREA] :
      ( ( s__located(V__PLACE,V__AREA)
        & s__instance(V__PLACE,s__PostalPlace)
        & s__instance(V__AREA,s__PostcodeArea) )
    <=> s__postPostcodeArea(V__PLACE,V__AREA) ) ).

fof(kb_SUMO_15316,axiom,
    ! [V__CITY,V__PLACE,V__AREA] :
      ( ( s__instance(V__AREA,s__PostcodeArea)
        & s__instance(V__PLACE,s__PostalPlace) )
     => ( ( s__postPostcodeArea(V__PLACE,V__AREA)
          & s__geographicSubregion(V__AREA,V__CITY)
          & s__instance(V__CITY,s__City) )
       => s__postCity(V__PLACE,V__CITY) ) ) ).

fof(kb_SUMO_15317,axiom,
    ! [V__GEO,V__PLACE,V__AREA] :
      ( ( s__instance(V__AREA,s__PostcodeArea)
        & s__instance(V__PLACE,s__PostalPlace) )
     => ( ( s__postPostcodeArea(V__PLACE,V__AREA)
          & s__geographicSubregion(V__AREA,V__GEO)
          & s__instance(V__GEO,s__StateOrProvince) )
       => s__postDistrict(V__PLACE,V__GEO) ) ) ).

fof(kb_SUMO_15318,axiom,
    s__instance(s__postStreet__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15319,axiom,
    s__instance(s__postStreet__m,s__BinaryPredicate) ).

fof(kb_SUMO_15320,axiom,
    s__domain(s__postStreet__m,"1",s__PostalPlace) ).

fof(kb_SUMO_15321,axiom,
    s__domain(s__postStreet__m,"2",s__Roadway) ).

fof(kb_SUMO_15322,axiom,
    s__documentation(s__postStreet__m,s__EnglishLanguage,'(&%postStreet ?&%PostalPlace ?&%Roadway) means that ?&%PostalPlace is &%Adjacent to ?&%Roadway.') ).

fof(kb_SUMO_15323,axiom,
    ! [V__POSTPLACE,V__ROADWAY] :
      ( ( s__instance(V__ROADWAY,s__Roadway)
        & s__instance(V__POSTPLACE,s__PostalPlace) )
     => ( s__postStreet(V__POSTPLACE,V__ROADWAY)
       => s__orientation(V__POSTPLACE,V__ROADWAY,s__Adjacent) ) ) ).

fof(kb_SUMO_15324,axiom,
    s__instance(s__postStreetNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15325,axiom,
    s__instance(s__postStreetNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15326,axiom,
    s__domain(s__postStreetNumber__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15327,axiom,
    s__domain(s__postStreetNumber__m,"2",s__PostalPlace) ).

fof(kb_SUMO_15328,axiom,
    s__documentation(s__postStreetNumber__m,s__EnglishLanguage,'(&%postStreetNumber ?&%SymbolicString ?&%PostalPlace) means that ?&%SymbolicString identifies the sub-city block or building level location of a ?&%PostalPlace. ?&%SymbolicString need not consist exclusively of &%DigitCharacters.') ).

fof(kb_SUMO_15329,axiom,
    s__instance(s__postPostOfficeBox__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15330,axiom,
    s__instance(s__postPostOfficeBox__m,s__BinaryPredicate) ).

fof(kb_SUMO_15331,axiom,
    s__domain(s__postPostOfficeBox__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15332,axiom,
    s__domain(s__postPostOfficeBox__m,"2",s__PostalPlace) ).

fof(kb_SUMO_15333,axiom,
    s__documentation(s__postPostOfficeBox__m,s__EnglishLanguage,'(&%postPostOfficeBox ?&%SymbolicString ?&%PostalPlace) means that ?&%SymbolicString identifies the post office box of a ?&%PostalPlace. ?&%SymbolicString need not consist exclusively of &%DigitCharacters.') ).

fof(kb_SUMO_15334,axiom,
    s__subclass(s__PostalAddressText,s__PlaceAddress) ).

fof(kb_SUMO_15335,axiom,
    s__subclass(s__PostalAddressText,s__LocalizablePlaceID) ).

fof(kb_SUMO_15336,axiom,
    s__subclass(s__PostalAddressText,s__SymbolicString) ).

fof(kb_SUMO_15337,axiom,
    s__instance(s__PostalAddressText__t,s__SetOrClass) ).

fof(kb_SUMO_15338,axiom,
    s__subclass(s__PostalAddressText,s__LinguisticExpression) ).

fof(kb_SUMO_15339,axiom,
    s__instance(s__postAddressText__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15340,axiom,
    s__instance(s__postAddressText__m,s__BinaryPredicate) ).

fof(kb_SUMO_15341,axiom,
    s__domain(s__postAddressText__m,"1",s__PostalAddressText) ).

fof(kb_SUMO_15342,axiom,
    s__domain(s__postAddressText__m,"2",s__PostalPlace) ).

fof(kb_SUMO_15343,axiom,
    s__documentation(s__postAddressText__m,s__EnglishLanguage,'(&%postAddressText ?&%PostalAddressText ?&%PostalPlace) means that the &%ContactSite ?&%PostalPlace is identified by ?&%PostalAddressText.') ).

fof(kb_SUMO_15344,axiom,
    s__instance(s__telecomContactDevice__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15345,axiom,
    s__instance(s__telecomContactDevice__m,s__BinaryPredicate) ).

fof(kb_SUMO_15346,axiom,
    s__domain(s__telecomContactDevice__m,"1",s__TelephonyDevice) ).

fof(kb_SUMO_15347,axiom,
    s__domain(s__telecomContactDevice__m,"2",s__Agent) ).

fof(kb_SUMO_15348,axiom,
    s__documentation(s__telecomContactDevice__m,s__EnglishLanguage,'(&%telecomContactDevice ?&%TelephonyDevice ?&%Agent) means that ?&%TelephonyDevice is a &%ContactSite for the &%Human or &%Organization ?&%Agent.') ).

fof(kb_SUMO_15349,axiom,
    s__subrelation(s__telecomContactDevice__m,s__siteForContact__m) ).

fof(kb_SUMO_15350,axiom,
    s__subclass(s__VirtualPlaceID,s__PlaceID) ).

fof(kb_SUMO_15351,axiom,
    s__subclass(s__VirtualAddress,s__PlaceAddress) ).

fof(kb_SUMO_15352,axiom,
    s__instance(s__VirtualAddress__t,s__SetOrClass) ).

fof(kb_SUMO_15353,axiom,
    s__instance(s__PlaceAddress__t,s__SetOrClass) ).

fof(kb_SUMO_15354,axiom,
    s__subclass(s__VirtualAddress,s__VirtualPlaceID) ).

fof(kb_SUMO_15355,axiom,
    s__instance(s__VirtualPlaceID__t,s__SetOrClass) ).

fof(kb_SUMO_15356,axiom,
    s__subclass(s__TelecomNumber,s__VirtualAddress) ).

fof(kb_SUMO_15357,axiom,
    s__subclass(s__TelecomNumber,s__SymbolicString) ).

fof(kb_SUMO_15358,axiom,
    s__instance(s__TelecomNumber__t,s__SetOrClass) ).

fof(kb_SUMO_15359,axiom,
    s__subclass(s__TelecomNumber,s__ContactSite) ).

fof(kb_SUMO_15360,axiom,
    s__instance(s__deviceTelecomNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15361,axiom,
    s__instance(s__deviceTelecomNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15362,axiom,
    s__domain(s__deviceTelecomNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15363,axiom,
    s__domain(s__deviceTelecomNumber__m,"2",s__TelephonyDevice) ).

fof(kb_SUMO_15364,axiom,
    s__documentation(s__deviceTelecomNumber__m,s__EnglishLanguage,'(&%deviceTelecomNumber ?&%TelecomNumber ?&%TelephonyDevice) means that ?&%TelephonyDevice is identified, and can be accessed, by ?&%TelecomNumber.') ).

fof(kb_SUMO_15365,axiom,
    s__instance(s__telecomCoreNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15366,axiom,
    s__instance(s__telecomCoreNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15367,axiom,
    s__domain(s__telecomCoreNumber__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15368,axiom,
    s__domain(s__telecomCoreNumber__m,"2",s__TelecomNumber) ).

fof(kb_SUMO_15369,axiom,
    s__subrelation(s__telecomCoreNumber__m,s__subString__m) ).

fof(kb_SUMO_15370,axiom,
    s__documentation(s__telecomCoreNumber__m,s__EnglishLanguage,'(&%telecomCoreNumber ?&%SymbolicString ?&%TelecomNumber) means that ?&%SymbolicString is the &%part of a &%TelecomNumber that identifies an individual subscriber line, not including the area code and any possible extensions.') ).

fof(kb_SUMO_15371,axiom,
    s__instance(s__telecomCountryCode__m,s__BinaryPredicate) ).

fof(kb_SUMO_15372,axiom,
    s__instance(s__telecomCountryCode__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15373,axiom,
    s__domain(s__telecomCountryCode__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15374,axiom,
    s__domain(s__telecomCountryCode__m,"2",s__TelecomNumber) ).

fof(kb_SUMO_15375,axiom,
    s__documentation(s__telecomCountryCode__m,s__EnglishLanguage,'(&%telecomCountryCode ?&%SymbolicString &%TelecomNumber) means that ?&%SymbolicString is the &%part of ?&%TelecomNumber that identifies the &%Nation in which the device identified by ?&%TelecomNumber is located (or registered). ?&%SymbolicString will be standard code conforming to, and assigned by, ITU-T Recommendation E.164.') ).

fof(kb_SUMO_15376,axiom,
    s__subrelation(s__telecomCountryCode__m,s__subString__m) ).

fof(kb_SUMO_15377,axiom,
    s__instance(s__telecomAreaCode__m,s__BinaryPredicate) ).

fof(kb_SUMO_15378,axiom,
    s__instance(s__telecomAreaCode__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15379,axiom,
    s__domain(s__telecomAreaCode__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15380,axiom,
    s__domain(s__telecomAreaCode__m,"2",s__TelecomNumber) ).

fof(kb_SUMO_15381,axiom,
    s__documentation(s__telecomAreaCode__m,s__EnglishLanguage,'(&%telecomAreaCode ?&%SymbolicString &%TelecomNumber) means that ?&%SymbolicString is the &%part of ?&%TelecomNumber that follows the country code. ?&%SymbolicString may denote a &%GeographicArea in which the &%TelephonyDevice identified by ?&%TelecomNumber is located (registered), but it may also denote a call billing plan or status, as for 800 numbers in the North American Numbering Plan.') ).

fof(kb_SUMO_15382,axiom,
    s__subrelation(s__telecomAreaCode__m,s__subString__m) ).

fof(kb_SUMO_15383,axiom,
    s__instance(s__telecomCode2__m,s__BinaryPredicate) ).

fof(kb_SUMO_15384,axiom,
    s__instance(s__telecomCode2__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15385,axiom,
    s__domain(s__telecomCode2__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15386,axiom,
    s__domain(s__telecomCode2__m,"2",s__TelecomNumber) ).

fof(kb_SUMO_15387,axiom,
    s__documentation(s__telecomCode2__m,s__EnglishLanguage,'(&%telecomCode2 ?&%SymbolicString ?&%TelecomNumber) means that ?&%SymbolicString is the second code (if there is one, such as a sub-area code) following the part of ?&%TelecomNumber denoted by &%telecomCountryCode.') ).

fof(kb_SUMO_15388,axiom,
    s__subrelation(s__telecomCode2__m,s__subString__m) ).

fof(kb_SUMO_15389,axiom,
    s__instance(s__telecomExtension__m,s__BinaryPredicate) ).

fof(kb_SUMO_15390,axiom,
    s__instance(s__telecomExtension__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15391,axiom,
    s__domain(s__telecomExtension__m,"1",s__SymbolicString) ).

fof(kb_SUMO_15392,axiom,
    s__domain(s__telecomExtension__m,"2",s__TelecomNumber) ).

fof(kb_SUMO_15393,axiom,
    s__documentation(s__telecomExtension__m,s__EnglishLanguage,'(&%telecomExtension ?&%SymbolicString ?&%TelecomNumber) means that ?&%SymbolicString is a &%part of ?&%TelecomNumber that identifies a &%TelephonyDevice within a group of such &%Devices, the members of which share a local subscriber line.') ).

fof(kb_SUMO_15394,axiom,
    ! [V__CN,V__WHOLE,V__AC] :
      ( ( s__instance(V__AC,s__SymbolicString)
        & s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__CN,s__SymbolicString) )
     => ( ( s__telecomCoreNumber(V__CN,V__WHOLE)
          & s__telecomAreaCode(V__AC,V__WHOLE) )
       => s__precedesInString(V__AC,V__CN,V__WHOLE) ) ) ).

fof(kb_SUMO_15395,axiom,
    ! [V__CN,V__CC,V__WHOLE] :
      ( ( s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__CC,s__SymbolicString)
        & s__instance(V__CN,s__SymbolicString) )
     => ( ( s__telecomCoreNumber(V__CN,V__WHOLE)
          & s__telecomCountryCode(V__CC,V__WHOLE) )
       => s__precedesInString(V__CC,V__CN,V__WHOLE) ) ) ).

fof(kb_SUMO_15396,axiom,
    ! [V__CC,V__WHOLE,V__AC] :
      ( ( s__instance(V__AC,s__SymbolicString)
        & s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__CC,s__SymbolicString) )
     => ( ( s__telecomAreaCode(V__AC,V__WHOLE)
          & s__telecomCountryCode(V__CC,V__WHOLE) )
       => s__precedesInString(V__CC,V__AC,V__WHOLE) ) ) ).

fof(kb_SUMO_15397,axiom,
    ! [V__CN,V__EX,V__WHOLE] :
      ( ( s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__EX,s__SymbolicString)
        & s__instance(V__CN,s__SymbolicString) )
     => ( ( s__telecomCoreNumber(V__CN,V__WHOLE)
          & s__telecomExtension(V__EX,V__WHOLE) )
       => s__precedesInString(V__CN,V__EX,V__WHOLE) ) ) ).

fof(kb_SUMO_15398,axiom,
    ! [V__C2,V__WHOLE,V__AC] :
      ( ( s__instance(V__AC,s__SymbolicString)
        & s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__C2,s__SymbolicString) )
     => ( ( s__telecomCode2(V__C2,V__WHOLE)
          & s__telecomAreaCode(V__AC,V__WHOLE) )
       => s__precedesInString(V__AC,V__C2,V__WHOLE) ) ) ).

fof(kb_SUMO_15399,axiom,
    ! [V__CC,V__C2,V__WHOLE] :
      ( ( s__instance(V__WHOLE,s__TelecomNumber)
        & s__instance(V__C2,s__SymbolicString)
        & s__instance(V__CC,s__SymbolicString) )
     => ( ( s__telecomCode2(V__C2,V__WHOLE)
          & s__telecomCountryCode(V__CC,V__WHOLE) )
       => s__precedesInString(V__CC,V__C2,V__WHOLE) ) ) ).

fof(kb_SUMO_15400,axiom,
    s__instance(s__telephoneNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15401,axiom,
    s__instance(s__telephoneNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15402,axiom,
    s__domain(s__telephoneNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15403,axiom,
    s__domain(s__telephoneNumber__m,"2",s__Agent) ).

fof(kb_SUMO_15404,axiom,
    s__documentation(s__telephoneNumber__m,s__EnglishLanguage,'(%&telephoneNumber ?NUMBER ?AGENT) means that ?&%Agent identifies a &%TelecomeNumber at which ?&%Agent can be contacted') ).

fof(kb_SUMO_15405,axiom,
    ! [V__NUMBER,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__NUMBER,s__TelecomNumber) )
     => ( s__telephoneNumber(V__NUMBER,V__AGENT)
       => s__siteForContact(V__NUMBER,V__AGENT) ) ) ).

fof(kb_SUMO_15406,axiom,
    s__instance(s__personalPhoneNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15407,axiom,
    s__instance(s__personalPhoneNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15408,axiom,
    s__domain(s__personalPhoneNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15409,axiom,
    s__domain(s__personalPhoneNumber__m,"2",s__Human) ).

fof(kb_SUMO_15410,axiom,
    s__subrelation(s__personalPhoneNumber__m,s__telephoneNumber__m) ).

fof(kb_SUMO_15411,axiom,
    s__documentation(s__personalPhoneNumber__m,s__EnglishLanguage,'(&%personalPhoneNumber ?&%TelecomNumber ?&%Human) means that ?&%TelecomNumber identifies a &%Telephone at which ?&%Human can be contacted when not a work, or for purposes other than work.') ).

%FOL fof(kb_SUMO_15412,axiom,(( (! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => ((s__instance(V__DEVICE,s__Telephone) & s__holdsDuring(V__TIME,'(s__possesses(V__AGENT,V__DEVICE) & s__deviceTelecomNumber(V__NUMBER,V__DEVICE))')) => s__holdsDuring(V__TIME,'s__telephoneNumber(V__NUMBER,V__AGENT)')))) ))).

fof(kb_SUMO_15413,axiom,
    s__instance(s__homePhoneNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15414,axiom,
    s__instance(s__homePhoneNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15415,axiom,
    s__domain(s__homePhoneNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15416,axiom,
    s__domain(s__homePhoneNumber__m,"2",s__Human) ).

fof(kb_SUMO_15417,axiom,
    s__subrelation(s__homePhoneNumber__m,s__telephoneNumber__m) ).

fof(kb_SUMO_15418,axiom,
    s__documentation(s__homePhoneNumber__m,s__EnglishLanguage,'(&%homePhoneNumber ?&%TelecomNumber ?&%Human) means that ?&%TelecomNumber identifies a &%Telephone located at ?&%Humans &%PermanentResidence.') ).

%FOL fof(kb_SUMO_15419,axiom,(( (! [V__NUMBER,V__TIME,V__PLACE,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Human) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => (s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__homePhoneNumber(V__NUMBER,V__AGENT) & s__located(V__DEVICE,V__PLACE) & s__instance(V__PLACE,s__PermanentResidence))') => s__holdsDuring(V__TIME,'s__home(V__AGENT,V__PLACE)')))) ))).

%FOL fof(kb_SUMO_15420,axiom,(( (! [V__NUMBER,V__TIME,V__PLACE,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Organism) & s__instance(V__PLACE,s__Object) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => ((s__instance(V__AGENT,s__Human) & s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__telephoneNumber(V__NUMBER,V__AGENT) & s__located(V__DEVICE,V__PLACE) & s__instance(V__PLACE,s__Residence))')) => s__holdsDuring(V__TIME,'s__inhabits(V__AGENT,V__PLACE)')))) ))).

fof(kb_SUMO_15421,axiom,
    s__instance(s__workPhoneNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15422,axiom,
    s__instance(s__workPhoneNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15423,axiom,
    s__domain(s__workPhoneNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15424,axiom,
    s__domain(s__workPhoneNumber__m,"2",s__Agent) ).

fof(kb_SUMO_15425,axiom,
    s__subrelation(s__workPhoneNumber__m,s__telephoneNumber__m) ).

fof(kb_SUMO_15426,axiom,
    s__documentation(s__workPhoneNumber__m,s__EnglishLanguage,'(&%workPhoneNumber ?&%TelecomNumber ?&%Agent) means that ?&%TelecomNumber identifies a &%Telephone at which ?&%Agent can be contacted when at work, or for business purposes.') ).

fof(kb_SUMO_15427,axiom,
    s__documentation(s__FixedPhone,s__EnglishLanguage,'An &%instance of &%FixedPhone is a &%Telephone that must be connected to the telephone network via a cord.') ).

fof(kb_SUMO_15428,axiom,
    s__subclass(s__FixedPhone,s__Telephone) ).

fof(kb_SUMO_15429,axiom,
    s__instance(s__FixedPhone__t,s__SetOrClass) ).

fof(kb_SUMO_15430,axiom,
    s__instance(s__Telephone__t,s__SetOrClass) ).

fof(kb_SUMO_15431,axiom,
    s__subclass(s__MobileCellPhone,s__ReceiverDevice) ).

fof(kb_SUMO_15432,axiom,
    s__subclass(s__MobileCellPhone,s__Telephone) ).

fof(kb_SUMO_15433,axiom,
    s__instance(s__MobileCellPhone__t,s__SetOrClass) ).

fof(kb_SUMO_15434,axiom,
    s__documentation(s__MobileCellPhone,s__EnglishLanguage,'A &%MobileCellPhone is a &%Telephone that connects to the telephone network by sending and receiving radio transmissions, rather than via a cord, and so is portable.') ).

fof(kb_SUMO_15435,axiom,
    s__instance(s__mobilePhoneNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15436,axiom,
    s__instance(s__mobilePhoneNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15437,axiom,
    s__domain(s__mobilePhoneNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15438,axiom,
    s__domain(s__mobilePhoneNumber__m,"2",s__Agent) ).

fof(kb_SUMO_15439,axiom,
    s__subrelation(s__mobilePhoneNumber__m,s__telephoneNumber__m) ).

fof(kb_SUMO_15440,axiom,
    s__documentation(s__mobilePhoneNumber__m,s__EnglishLanguage,'(&%mobilePhoneNumber ?&%TelecomNumber ?&%Agent) means that ?&%TelecomNumber identifies a &%MobileCellPhone at which ?&%Agent can be contacted.') ).

fof(kb_SUMO_15441,axiom,
    ! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__TelephonyDevice)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__NUMBER,s__TelecomNumber) )
     => ( s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__mobilePhoneNumber(V__NUMBER,V__AGENT))')
       => s__instance(V__DEVICE,s__MobileCellPhone) ) ) ).

%FOL fof(kb_SUMO_15442,axiom,(( (! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => ((s__instance(V__DEVICE,s__MobileCellPhone) & s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__telephoneNumber(V__NUMBER,V__AGENT))')) => s__holdsDuring(V__TIME,'s__mobilePhoneNumber(V__NUMBER,V__AGENT)')))) ))).

%FOL fof(kb_SUMO_15443,axiom,(( (! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => (s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__mobilePhoneNumber(V__NUMBER,V__AGENT))') => s__holdsDuring(V__TIME,'s__possesses(V__AGENT,V__DEVICE)')))) ))).

fof(kb_SUMO_15444,axiom,
    s__instance(s__faxNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_15445,axiom,
    s__instance(s__faxNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_15446,axiom,
    s__domain(s__faxNumber__m,"1",s__TelecomNumber) ).

fof(kb_SUMO_15447,axiom,
    s__domain(s__faxNumber__m,"2",s__Agent) ).

fof(kb_SUMO_15448,axiom,
    s__documentation(s__faxNumber__m,s__EnglishLanguage,'(&%faxNumber ?&%TelecomNumber ?&%Agent) means that ?&%TelecomNumber identifies a &%FaxMachine at which ?&%Agent can be contacted.') ).

%FOL fof(kb_SUMO_15449,axiom,(( (! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] : ((s__instance(V__DEVICE,s__TelephonyDevice) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimePosition) & s__instance(V__NUMBER,s__TelecomNumber)) => ((s__instance(V__DEVICE,s__FaxMachine) & s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__possesses(V__AGENT,V__DEVICE))')) => s__holdsDuring(V__TIME,'s__faxNumber(V__NUMBER,V__AGENT)')))) ))).

fof(kb_SUMO_15450,axiom,
    ! [V__NUMBER,V__TIME,V__AGENT,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__TelephonyDevice)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__TIME,s__TimePosition)
        & s__instance(V__NUMBER,s__TelecomNumber) )
     => ( s__holdsDuring(V__TIME,'(s__deviceTelecomNumber(V__NUMBER,V__DEVICE) & s__faxNumber(V__NUMBER,V__AGENT))')
       => s__instance(V__DEVICE,s__FaxMachine) ) ) ).

fof(kb_SUMO_15451,axiom,
    s__subclass(s__FabricIron,s__Device) ).

fof(kb_SUMO_15452,axiom,
    s__instance(s__FabricIron__t,s__SetOrClass) ).

fof(kb_SUMO_15453,axiom,
    s__documentation(s__FabricIron,s__EnglishLanguage,'&%FabricIron is a type of &%Device that has a flat metal base used to smooth cloth') ).

fof(kb_SUMO_15454,axiom,
    s__termFormat(s__EnglishLanguage,s__FabricIron,iron) ).

fof(kb_SUMO_15455,axiom,
    ! [V__IRON] :
      ( s__instance(V__IRON,s__SelfConnectedObject)
     => ( s__instance(V__IRON,s__FabricIron)
       => ? [V__BASE,V__METAL] :
            ( s__subclass(V__METAL,s__Substance)
            & s__instance(V__BASE,s__CorpuscularObject)
            & s__bottom(V__BASE,V__IRON)
            & s__material(V__METAL,V__BASE)
            & s__instance(V__METAL,s__Metal)
            & s__attribute(V__BASE,s__Flat) ) ) ) ).

fof(kb_SUMO_15456,axiom,
    s__subclass(s__IroningBoard,s__Device) ).

fof(kb_SUMO_15457,axiom,
    s__instance(s__IroningBoard__t,s__SetOrClass) ).

fof(kb_SUMO_15458,axiom,
    s__documentation(s__IroningBoard,s__EnglishLanguage,'&%IroningBoard is a type of &%Device consisting of a flat, padded board used as a surface for ironing') ).

fof(kb_SUMO_15459,axiom,
    s__termFormat(s__EnglishLanguage,s__IroningBoard,'ironing board') ).

fof(kb_SUMO_15460,axiom,
    ! [V__BOARD] :
      ( s__instance(V__BOARD,s__Object)
     => ( s__instance(V__BOARD,s__IroningBoard)
       => s__hasPurpose(V__BOARD,'(? [V__IRON,V__FABRIC,V__OBJ] : (s__instance(V__OBJ,s__Object) & s__instance(V__FABRIC,s__Object) & s__instance(V__IRON,s__Process) & s__instance(V__IRON,s__Ironing) & s__patient(V__IRON,V__OBJ) & s__part(V__FABRIC,V__OBJ) & s__instance(V__FABRIC,s__Fabric) & s__holdsDuring(s__WhenFn(V__IRON),s__orientation(V__OBJ,V__BOARD,s__On))))') ) ) ).

fof(kb_SUMO_15461,axiom,
    s__subclass(s__Smoothing,s__SurfaceChange) ).

fof(kb_SUMO_15462,axiom,
    s__instance(s__Smoothing__t,s__SetOrClass) ).

fof(kb_SUMO_15463,axiom,
    s__documentation(s__Smoothing,s__EnglishLanguage,'&%Smoothing is a type of &%SurfaceChange to make something &%Smooth') ).

fof(kb_SUMO_15464,axiom,
    s__termFormat(s__EnglishLanguage,s__Smoothing,smoothing) ).

%FOL fof(kb_SUMO_15465,axiom,(( (! [V__OBJ,V__SMOOTH] : ((s__instance(V__SMOOTH,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SMOOTH,s__Smoothing) & s__patient(V__SMOOTH,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__superficialPart(V__PART,V__OBJ) & s__holdsDuring(s__EndFn(s__WhenFn(V__SMOOTH)),'s__attribute(V__PART,s__Smooth)')))))) ))).

fof(kb_SUMO_15466,axiom,
    s__subclass(s__Ironing,s__Smoothing) ).

fof(kb_SUMO_15467,axiom,
    s__instance(s__Ironing__t,s__SetOrClass) ).

fof(kb_SUMO_15468,axiom,
    s__documentation(s__Ironing,s__EnglishLanguage,'&%Ironing refers to a &%Smoothing process where a heated &%Device is used to smooth something') ).

fof(kb_SUMO_15469,axiom,
    s__termFormat(s__EnglishLanguage,s__Ironing,ironing) ).

fof(kb_SUMO_15470,axiom,
    ! [V__OBJ,V__I] :
      ( ( s__instance(V__I,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__I,s__Ironing)
          & s__patient(V__I,V__OBJ) )
       => ? [V__HEAT,V__IRON,V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__IRON,s__Object)
            & s__instance(V__HEAT,s__Process)
            & s__superficialPart(V__PART,V__OBJ)
            & s__instance(V__HEAT,s__Heating)
            & s__patient(V__HEAT,V__IRON)
            & s__patient(V__I,V__PART)
            & s__instrument(V__I,V__IRON) ) ) ) ).

fof(kb_SUMO_15471,axiom,
    ! [V__OBJ,V__I,V__FABRIC] :
      ( ( s__instance(V__FABRIC,s__Object)
        & s__instance(V__I,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__I,s__Ironing)
          & s__patient(V__I,V__OBJ)
          & s__part(V__FABRIC,V__OBJ)
          & s__instance(V__FABRIC,s__Fabric) )
       => ? [V__IRON,V__HEAT] :
            ( s__instance(V__HEAT,s__Process)
            & s__instance(V__IRON,s__Object)
            & s__instance(V__HEAT,s__Heating)
            & s__patient(V__HEAT,V__IRON)
            & s__instance(V__IRON,s__FabricIron)
            & s__instrument(V__I,V__IRON) ) ) ) ).

fof(kb_SUMO_15472,axiom,
    s__subclass(s__WhirlpoolTub,s__FluidContainer) ).

fof(kb_SUMO_15473,axiom,
    s__documentation(s__WhirlpoolTub,s__EnglishLanguage,'&%WhirlpoolTub refers to a &%FluidContainer used by &%Humans for relaxation with jets used to create water currents to massage the body') ).

fof(kb_SUMO_15474,axiom,
    s__termFormat(s__EnglishLanguage,s__WhirlpoolTub,'whirlpool tub') ).

fof(kb_SUMO_15475,axiom,
    ! [V__TUB] :
      ( s__instance(V__TUB,s__Object)
     => ( s__instance(V__TUB,s__WhirlpoolTub)
       => ? [V__VALVE] :
            ( s__instance(V__VALVE,s__PressureControlValve)
            & s__part(V__VALVE,V__TUB)
            & s__hasPurpose(V__VALVE,'(? [V__WATER,V__CREATION,V__MOTION] : (s__instance(V__MOTION,s__Physical) & s__instance(V__CREATION,s__Process) & s__instance(V__WATER,s__Object) & s__instance(V__VALVE,s__Object) & s__instance(V__WATER,s__Water) & s__located(V__WATER,V__TUB) & s__instance(V__CREATION,s__Creation) & s__instrument(V__CREATION,V__VALVE) & s__result(V__CREATION,V__MOTION) & s__instance(V__MOTION,s__Motion) & s__located(V__MOTION,V__WATER)))') ) ) ) ).

fof(kb_SUMO_15476,axiom,
    s__subclass(s__HotTub,s__WhirlpoolTub) ).

fof(kb_SUMO_15477,axiom,
    s__instance(s__HotTub__t,s__SetOrClass) ).

fof(kb_SUMO_15478,axiom,
    s__instance(s__WhirlpoolTub__t,s__SetOrClass) ).

fof(kb_SUMO_15479,axiom,
    s__documentation(s__HotTub,s__EnglishLanguage,'&%HotTub refers to a &%WhirlpoolTub that is capable of heating the water located in it') ).

fof(kb_SUMO_15480,axiom,
    s__termFormat(s__EnglishLanguage,s__HotTub,'hot tub') ).

fof(kb_SUMO_15481,axiom,
    ! [V__X,V__WATER] :
      ( ( s__instance(V__WATER,s__Physical)
        & s__instance(V__X,s__Object) )
     => ( ( s__instance(V__X,s__HotTub)
          & s__located(V__WATER,V__X)
          & s__instance(V__WATER,s__Water) )
       => s__modalAttribute('(? [V__HEAT] : (s__instance(V__HEAT,s__Process) & s__instance(V__HEAT,s__Heating) & s__instrument(V__HEAT,V__X) & s__patient(V__HEAT,V__WATER)))',s__Possibility) ) ) ).

fof(kb_SUMO_15482,axiom,
    s__subclass(s__SizeAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_15483,axiom,
    s__documentation(s__SizeAttribute,s__EnglishLanguage,'&%SizeAttribute refers to attributes that pertain to the &%measure of some &%Object') ).

fof(kb_SUMO_15484,axiom,
    s__termFormat(s__EnglishLanguage,s__SizeAttribute,'size attribute') ).

fof(kb_SUMO_15485,axiom,
    ! [V__ATTR,V__X] :
      ( s__instance(V__ATTR,s__Attribute)
     => ( ( s__attribute(V__X,V__ATTR)
          & s__instance(V__ATTR,s__SizeAttribute) )
       => s__instance(V__X,s__Object) ) ) ).

fof(kb_SUMO_15486,axiom,
    s__instance(s__DoubleSize,s__SizeAttribute) ).

fof(kb_SUMO_15487,axiom,
    s__instance(s__SizeAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_15488,axiom,
    s__documentation(s__DoubleSize,s__EnglishLanguage,'&%DoubleSize refers to how an &%Object can fit 2 of its target users at the same time') ).

fof(kb_SUMO_15489,axiom,
    s__termFormat(s__EnglishLanguage,s__DoubleSize,'double size') ).

fof(kb_SUMO_15490,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( ( s__instance(V__X,s__WhirlpoolTub)
          & s__attribute(V__X,s__DoubleSize) )
       => s__modalAttribute('(? [V__T1] : s__holdsDuring(V__T1,(? [V__P1,V__P2] : (s__instance(V__P2,s__Physical) & s__instance(V__P1,s__Physical) & s__instance(V__T1,s__TimePosition) & s__instance(V__P1,s__Human) & s__instance(V__P2,s__Human) & (~ (V__P1 = V__P2)) & s__located(V__P1,V__X) & s__located(V__P2,V__X)))))',s__Possibility) ) ) ).

fof(kb_SUMO_15491,axiom,
    s__subclass(s__Kennel,s__TrapOrCage) ).

fof(kb_SUMO_15492,axiom,
    s__instance(s__Kennel__t,s__SetOrClass) ).

fof(kb_SUMO_15493,axiom,
    s__documentation(s__Kennel,s__EnglishLanguage,'&%Kennel is a &%TrapOrCage where a &%DomesticAnimal is &%Confining by its owner') ).

fof(kb_SUMO_15494,axiom,
    s__termFormat(s__EnglishLanguage,s__Kennel,kennel) ).

fof(kb_SUMO_15495,axiom,
    ! [V__KENNEL] :
      ( s__instance(V__KENNEL,s__Object)
     => ( s__instance(V__KENNEL,s__Kennel)
       => s__hasPurpose(V__KENNEL,'(? [V__ANIMAL,V__CONFINING] : (s__instance(V__CONFINING,s__Process) & s__instance(V__ANIMAL,s__DomesticAnimal) & s__instance(V__CONFINING,s__Confining) & s__patient(V__CONFINING,V__ANIMAL) & s__eventLocated(V__CONFINING,V__KENNEL)))') ) ) ).

fof(kb_SUMO_15496,axiom,
    s__subclass(s__DryingDevice,s__Device) ).

fof(kb_SUMO_15497,axiom,
    s__documentation(s__DryingDevice,s__EnglishLanguage,'&%DryingDevice refers to any &%Device used as an instrument in the &%Drying process') ).

fof(kb_SUMO_15498,axiom,
    s__termFormat(s__EnglishLanguage,s__DryingDevice,'drying device') ).

fof(kb_SUMO_15499,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__DryingDevice)
       => s__hasPurpose(V__D,'(? [V__DRYING] : (s__instance(V__DRYING,s__Process) & s__instance(V__DRYING,s__Drying) & s__instrument(V__DRYING,V__D)))') ) ) ).

fof(kb_SUMO_15500,axiom,
    s__subclass(s__ClothesDryer,s__DryingDevice) ).

fof(kb_SUMO_15501,axiom,
    s__instance(s__ClothesDryer__t,s__SetOrClass) ).

fof(kb_SUMO_15502,axiom,
    s__instance(s__DryingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15503,axiom,
    s__subclass(s__ClothesWashingMachine,s__WashingDevice) ).

fof(kb_SUMO_15504,axiom,
    s__instance(s__WashingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15505,axiom,
    s__subclass(s__HairDryer,s__DryingDevice) ).

fof(kb_SUMO_15506,axiom,
    s__instance(s__HairDryer__t,s__SetOrClass) ).

fof(kb_SUMO_15507,axiom,
    s__subclass(s__HairDryer,s__ElectricDevice) ).

fof(kb_SUMO_15508,axiom,
    s__documentation(s__HairDryer,s__EnglishLanguage,'&%HairDryer is a type of &%DryingDevice used specifically for &%Drying &%Hair') ).

fof(kb_SUMO_15509,axiom,
    s__termFormat(s__EnglishLanguage,s__HairDryer,'hair dryer') ).

fof(kb_SUMO_15510,axiom,
    ! [V__HD] :
      ( s__instance(V__HD,s__Object)
     => ( s__instance(V__HD,s__HairDryer)
       => s__hasPurpose(V__HD,'(? [V__HAIR,V__DRYING] : (s__instance(V__DRYING,s__Process) & s__instance(V__HAIR,s__Hair) & s__instance(V__DRYING,s__Drying) & s__patient(V__DRYING,V__HAIR) & s__instrument(V__DRYING,V__HD)))') ) ) ).

fof(kb_SUMO_15511,axiom,
    s__subclass(s__SelfServiceLaundry,s__Room) ).

fof(kb_SUMO_15512,axiom,
    s__instance(s__SelfServiceLaundry__t,s__SetOrClass) ).

fof(kb_SUMO_15513,axiom,
    s__documentation(s__SelfServiceLaundry,s__EnglishLanguage,'&%SelfServiceLaundry is a &%Room where a collection of coin-operatend washing machines and dryers are available for customers') ).

fof(kb_SUMO_15514,axiom,
    s__termFormat(s__EnglishLanguage,s__SelfServiceLaundry,'self-service laundry') ).

fof(kb_SUMO_15515,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__SelfServiceLaundry)
       => ? [V__WASHER,V__DRYER] :
            ( s__instance(V__WASHER,s__Collection)
            & s__memberType(V__WASHER,s__ClothesWashingMachine)
            & s__located(V__WASHER,V__ROOM)
            & s__instance(V__DRYER,s__Collection)
            & s__memberType(V__DRYER,s__ClothesDryer)
            & s__located(V__DRYER,V__ROOM) ) ) ) ).

fof(kb_SUMO_15516,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__SelfServiceLaundry)
       => s__attribute(V__ROOM,s__CommunalAttribute) ) ) ).

fof(kb_SUMO_15517,axiom,
    s__subclass(s__Microwave,s__ElectricDevice) ).

fof(kb_SUMO_15518,axiom,
    s__instance(s__Microwave__t,s__SetOrClass) ).

fof(kb_SUMO_15519,axiom,
    s__documentation(s__Microwave,s__EnglishLanguage,'&%Microwave is an &%ElectricDevice that heats food by passing an electromagnetic wave through it') ).

fof(kb_SUMO_15520,axiom,
    s__termFormat(s__EnglishLanguage,s__Microwave,microwave) ).

fof(kb_SUMO_15521,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( s__instance(V__M,s__Microwave)
       => s__hasPurpose(V__M,'(? [V__FOOD,V__HEATING] : (s__instance(V__HEATING,s__Process) & s__instance(V__FOOD,s__PreparedFood) & s__instance(V__HEATING,s__Heating) & s__instrument(V__HEATING,V__M) & s__patient(V__HEATING,V__FOOD)))') ) ) ).

fof(kb_SUMO_15522,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Object)
     => ( ( s__instance(V__M,s__Microwave)
          & s__attribute(V__M,s__DeviceOn) )
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__RadiatingElectromagnetic)
            & s__instrument(V__PROC,V__M) ) ) ) ).

fof(kb_SUMO_15523,axiom,
    s__subclass(s__SmokeDetector,s__Device) ).

fof(kb_SUMO_15524,axiom,
    s__instance(s__SmokeDetector__t,s__SetOrClass) ).

fof(kb_SUMO_15525,axiom,
    s__documentation(s__SmokeDetector,s__EnglishLanguage,'&%SmokeDetector is a &%Device that is able to &%Discovering the presence of &%Smoke') ).

fof(kb_SUMO_15526,axiom,
    s__termFormat(s__EnglishLanguage,s__SmokeDetector,'smoke detector') ).

fof(kb_SUMO_15527,axiom,
    ! [V__D] :
      ( s__instance(V__D,s__Object)
     => ( s__instance(V__D,s__SmokeDetector)
       => s__hasPurpose(V__D,'(? [V__DISCOVER,V__SMOKE] : (s__instance(V__DISCOVER,s__Process) & s__instance(V__DISCOVER,s__Discovering) & s__instrument(V__DISCOVER,V__D) & s__patient(V__DISCOVER,V__SMOKE) & s__instance(V__SMOKE,s__Smoke)))') ) ) ).

fof(kb_SUMO_15528,axiom,
    s__subclass(s__Sprinkler,s__Device) ).

fof(kb_SUMO_15529,axiom,
    s__instance(s__Sprinkler__t,s__SetOrClass) ).

fof(kb_SUMO_15530,axiom,
    s__documentation(s__Sprinkler,s__EnglishLanguage,'&%Sprinkler is a type of &%Device that loosely distributes a substance, either solid (e.g. Salt or herbs) or liquid (e.g. water sprinkler)') ).

fof(kb_SUMO_15531,axiom,
    s__termFormat(s__EnglishLanguage,s__Sprinkler,sprinkler) ).

fof(kb_SUMO_15532,axiom,
    s__subclass(s__WaterSprinkler,s__Sprinkler) ).

fof(kb_SUMO_15533,axiom,
    s__instance(s__WaterSprinkler__t,s__SetOrClass) ).

fof(kb_SUMO_15534,axiom,
    s__documentation(s__WaterSprinkler,s__EnglishLanguage,'&%WaterSprinkler is a type of &%Sprinkler that releases &%Water') ).

fof(kb_SUMO_15535,axiom,
    s__termFormat(s__EnglishLanguage,s__WaterSprinkler,'water sprinkler') ).

fof(kb_SUMO_15536,axiom,
    ! [V__W] :
      ( s__instance(V__W,s__Object)
     => ( s__instance(V__W,s__WaterSprinkler)
       => s__hasPurpose(V__W,'(? [V__WM] : (s__instance(V__WM,s__Process) & s__instance(V__WM,s__WaterMotion) & s__origin(V__WM,V__W)))') ) ) ).

fof(kb_SUMO_15537,axiom,
    s__subclass(s__FireSprinklerSystem,s__Collection) ).

fof(kb_SUMO_15538,axiom,
    s__instance(s__FireSprinklerSystem__t,s__SetOrClass) ).

fof(kb_SUMO_15539,axiom,
    s__documentation(s__FireSprinklerSystem,s__EnglishLanguage,'&%FireSprinklerSystem is a &%Collection of &%Devices that allow water to be released when a &%Fire is detected') ).

fof(kb_SUMO_15540,axiom,
    s__termFormat(s__EnglishLanguage,s__FireSprinklerSystem,'sprinkler system') ).

fof(kb_SUMO_15541,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Collection)
     => ( s__instance(V__X,s__FireSprinklerSystem)
       => ? [V__DETECT,V__SPRINKLER] :
            ( s__instance(V__SPRINKLER,s__SelfConnectedObject)
            & s__instance(V__DETECT,s__SelfConnectedObject)
            & s__instance(V__DETECT,s__SmokeDetector)
            & s__instance(V__SPRINKLER,s__WaterSprinkler)
            & s__member(V__DETECT,V__X)
            & s__member(V__SPRINKLER,V__X) ) ) ) ).

fof(kb_SUMO_15542,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__FireSprinklerSystem)
       => ? [V__FIRE,V__DISCOVER,V__WM] :
            ( s__instance(V__WM,s__Process)
            & s__instance(V__DISCOVER,s__Process)
            & s__instance(V__DISCOVER,s__Discovering)
            & s__instance(V__FIRE,s__Fire)
            & s__instrument(V__DISCOVER,V__X)
            & s__patient(V__DISCOVER,V__FIRE)
            & s__instance(V__WM,s__WaterMotion)
            & s__origin(V__WM,V__X)
            & s__causes(V__DISCOVER,V__WM) ) ) ) ).

fof(kb_SUMO_15543,axiom,
    s__subclass(s__IceMachine,s__Machine) ).

fof(kb_SUMO_15544,axiom,
    s__instance(s__IceMachine__t,s__SetOrClass) ).

fof(kb_SUMO_15545,axiom,
    s__documentation(s__IceMachine,s__EnglishLanguage,'&%IceMachine is a type of &%Machine that produces &%Ice') ).

fof(kb_SUMO_15546,axiom,
    s__termFormat(s__EnglishLanguage,s__IceMachine,'ice machine') ).

fof(kb_SUMO_15547,axiom,
    ! [V__IM] :
      ( s__instance(V__IM,s__Object)
     => ( s__instance(V__IM,s__IceMachine)
       => s__hasPurpose(V__IM,'(? [V__PROC,V__ICE] : (s__instance(V__PROC,s__Process) & s__instrument(V__PROC,V__IM) & s__result(V__PROC,V__ICE) & s__instance(V__ICE,s__Ice)))') ) ) ).

fof(kb_SUMO_15548,axiom,
    s__subclass(s__AlarmClock,s__Clock) ).

fof(kb_SUMO_15549,axiom,
    s__instance(s__AlarmClock__t,s__SetOrClass) ).

fof(kb_SUMO_15550,axiom,
    s__documentation(s__AlarmClock,s__EnglishLanguage,'&%AlarmClock is a type of &%Clock that will radiate sound when a certain time is set') ).

fof(kb_SUMO_15551,axiom,
    s__termFormat(s__EnglishLanguage,s__AlarmClock,'alarm clock') ).

fof(kb_SUMO_15552,axiom,
    ! [V__AC] :
      ( s__instance(V__AC,s__Agent)
     => ( s__instance(V__AC,s__AlarmClock)
       => s__hasPurpose(V__AC,'(? [V__TIME,V__M,V__Q] : (s__instance(V__M,s__Measuring) & s__agent(V__M,V__AC) & s__result(V__M,V__Q) & (V__Q = V__TIME) & s__holdsDuring(s__WhenFn(V__M),(? [V__S] : (s__instance(V__S,s__Process) & s__instance(V__M,s__Process) & s__instance(V__S,s__RadiatingSound) & s__agent(V__S,V__AC))))))') ) ) ).

fof(kb_SUMO_15553,axiom,
    s__subclass(s__AMFMAlarmClock,s__AlarmClock) ).

fof(kb_SUMO_15554,axiom,
    s__instance(s__AMFMAlarmClock__t,s__SetOrClass) ).

fof(kb_SUMO_15555,axiom,
    s__subclass(s__AMFMAlarmClock,s__RadioReceiver) ).

fof(kb_SUMO_15556,axiom,
    s__documentation(s__AMFMAlarmClock,s__EnglishLanguage,'&%AMFMAlarmClock is a type of &%AlarmClock that is also a &%RadioReceiver, meaning it can get &%RadioBroadcast from &%RadioStation') ).

fof(kb_SUMO_15557,axiom,
    s__termFormat(s__EnglishLanguage,s__AMFMAlarmClock,'am / fm alarm clock') ).

fof(kb_SUMO_15558,axiom,
    s__subclass(s__ElectricCoffeeMaker,s__ElectricDevice) ).

fof(kb_SUMO_15559,axiom,
    s__instance(s__ElectricCoffeeMaker__t,s__SetOrClass) ).

fof(kb_SUMO_15560,axiom,
    s__documentation(s__ElectricCoffeeMaker,s__EnglishLanguage,'&%ElectricCoffeeMaker is a &%Device that makes &%Coffee') ).

fof(kb_SUMO_15561,axiom,
    s__termFormat(s__EnglishLanguage,s__ElectricCoffeeMaker,'coffee maker') ).

fof(kb_SUMO_15562,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Object)
     => ( s__instance(V__C,s__ElectricCoffeeMaker)
       => s__hasPurpose(V__C,'(? [V__COFFEE,V__M] : (s__instance(V__M,s__Process) & s__instance(V__M,s__Making) & s__instrument(V__M,V__C) & s__result(V__M,V__COFFEE) & s__instance(V__COFFEE,s__Coffee)))') ) ) ).

fof(kb_SUMO_15563,axiom,
    s__instance(s__Clean,s__SubjectiveAssessmentAttribute) ).

fof(kb_SUMO_15564,axiom,
    s__documentation(s__Clean,s__EnglishLanguage,'&%Clean describes how something is free from dirt or impurities') ).

fof(kb_SUMO_15565,axiom,
    s__termFormat(s__EnglishLanguage,s__Clean,clean) ).

fof(kb_SUMO_15566,axiom,
    s__instance(s__Dirty,s__SubjectiveAssessmentAttribute) ).

fof(kb_SUMO_15567,axiom,
    s__documentation(s__Dirty,s__EnglishLanguage,'&%Dirty describes how something has been soiled with dirt, dust or grime') ).

fof(kb_SUMO_15568,axiom,
    s__termFormat(s__EnglishLanguage,s__Dirty,dirty) ).

fof(kb_SUMO_15569,axiom,
    ! [V__X] :
      ( s__attribute(V__X,s__Clean)
     => s__instance(V__X,s__Object) ) ).

fof(kb_SUMO_15570,axiom,
    ! [V__X] :
      ( s__attribute(V__X,s__Dirty)
     => s__instance(V__X,s__Object) ) ).

fof(kb_SUMO_15571,axiom,
    s__contraryAttribute_2(s__Dirty,s__Clean) ).

fof(kb_SUMO_15572,axiom,
    s__subclass(s__DataStorageDevice,s__Device) ).

fof(kb_SUMO_15573,axiom,
    s__documentation(s__DataStorageDevice,s__EnglishLanguage,'An &%instance of &%DataStorageDevice is a &%Device intended to be used for storing data (information).') ).

fof(kb_SUMO_15574,axiom,
    s__subclass(s__Whiteboard,s__DataStorageDevice) ).

fof(kb_SUMO_15575,axiom,
    s__instance(s__Whiteboard__t,s__SetOrClass) ).

fof(kb_SUMO_15576,axiom,
    s__instance(s__DataStorageDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15577,axiom,
    s__subclass(s__Whiteboard,s__DisplayArtifact) ).

fof(kb_SUMO_15578,axiom,
    s__documentation(s__Whiteboard,s__EnglishLanguage,'%&Whiteboard refers to flat surface where information can be encoded using erasable pens. This baord is normally colored White') ).

fof(kb_SUMO_15579,axiom,
    s__termFormat(s__EnglishLanguage,s__Whiteboard,whiteboard) ).

fof(kb_SUMO_15580,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Whiteboard)
       => s__color(V__OBJ,s__White) ) ) ).

fof(kb_SUMO_15581,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Whiteboard)
       => s__structure(V__OBJ,s__Flat) ) ) ).

fof(kb_SUMO_15582,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Physical)
     => ( s__instance(V__OBJ,s__Whiteboard)
       => s__hasPurpose(V__OBJ,'(? [V__WRITE] : (s__instance(V__WRITE,s__Process) & s__instance(V__WRITE,s__Writing) & s__destination(V__WRITE,V__OBJ)))') ) ) ).

fof(kb_SUMO_15583,axiom,
    s__subclass(s__Steam,s__Water) ).

fof(kb_SUMO_15584,axiom,
    s__instance(s__Steam__t,s__SetOrClass) ).

fof(kb_SUMO_15585,axiom,
    s__documentation(s__Steam,s__EnglishLanguage,'&%Steam refers to the &%Gas form of &%Water that is a result of &%Boiling it and diffusing it into the air') ).

fof(kb_SUMO_15586,axiom,
    s__termFormat(s__EnglishLanguage,s__Steam,steam) ).

fof(kb_SUMO_15587,axiom,
    ! [V__STEAM] :
      ( s__instance(V__STEAM,s__Object)
     => ( s__instance(V__STEAM,s__Steam)
       => ? [V__BOIL,V__WATER] :
            ( s__instance(V__BOIL,s__Process)
            & s__instance(V__BOIL,s__Boiling)
            & s__instance(V__WATER,s__Water)
            & s__patient(V__BOIL,V__WATER)
            & s__result(V__BOIL,V__STEAM)
            & s__attribute(V__STEAM,s__Gas) ) ) ) ).

fof(kb_SUMO_15588,axiom,
    s__subclass(s__WaterHeater,s__HeatingDevice) ).

fof(kb_SUMO_15589,axiom,
    s__instance(s__WaterHeater__t,s__SetOrClass) ).

fof(kb_SUMO_15590,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__WaterHeater)
       => s__hasPurpose(V__X,'(? [V__HEAT,V__WATER] : (s__instance(V__HEAT,s__Process) & s__instance(V__HEAT,s__Heating) & s__instance(V__WATER,s__Water) & s__patient(V__HEAT,V__WATER) & s__instrument(V__HEAT,V__X)))') ) ) ).

fof(kb_SUMO_15591,axiom,
    s__domain(s__airTemperature__m,"1",s__Object) ).

fof(kb_SUMO_15592,axiom,
    s__domain(s__airTemperature__m,"2",s__TemperatureMeasure) ).

fof(kb_SUMO_15593,axiom,
    s__subrelation(s__airTemperature__m,s__measure__m) ).

fof(kb_SUMO_15594,axiom,
    s__documentation(s__airTemperature__m,s__EnglishLanguage,'(&%airTemperature ?AREA ?TEMP) means that the temperature of the air at ?AREA is ?TEMP. Temperature may be expressed in units of &%TemperatureMeasure, including &%CelsiusDegree and &%FahrenheitDegree, among others.') ).

fof(kb_SUMO_15595,axiom,
    s__subclass(s__TemperatureAttribute,s__SubjectiveAssessmentAttribute) ).

fof(kb_SUMO_15596,axiom,
    s__instance(s__TemperatureAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_15597,axiom,
    s__documentation(s__TemperatureAttribute,s__EnglishLanguage,'&%TemperatureAttribute is an attribute that describes the temperature of a certain object') ).

fof(kb_SUMO_15598,axiom,
    s__termFormat(s__EnglishLanguage,s__TemperatureAttribute,'temperature attribute') ).

fof(kb_SUMO_15599,axiom,
    ! [V__X,V__Y] :
      ( s__instance(V__Y,s__Attribute)
     => ( ( s__attribute(V__X,V__Y)
          & s__instance(V__Y,s__TemperatureAttribute)
          & s__instance(V__X,s__Object) )
       => ? [V__TEMP] :
            ( s__instance(V__TEMP,s__PhysicalQuantity)
            & s__instance(V__TEMP,s__Object)
            & s__measure(V__X,V__TEMP)
            & s__instance(V__TEMP,s__TemperatureMeasure)
            & s__attribute(V__TEMP,V__Y) ) ) ) ).

fof(kb_SUMO_15600,axiom,
    s__instance(s__ColdTemperature,s__TemperatureAttribute) ).

fof(kb_SUMO_15601,axiom,
    s__documentation(s__ColdTemperature,s__EnglishLanguage,'&%ColdTemperature is a type of &%TemperatureAttribute that has a low or inadequate temperature') ).

fof(kb_SUMO_15602,axiom,
    s__termFormat(s__EnglishLanguage,s__ColdTemperature,cold) ).

fof(kb_SUMO_15603,axiom,
    s__successorAttributeClosure(s__ColdTemperature,s__HotTemperature) ).

fof(kb_SUMO_15604,axiom,
    s__instance(s__CoolTemperature,s__TemperatureAttribute) ).

fof(kb_SUMO_15605,axiom,
    s__documentation(s__CoolTemperature,s__EnglishLanguage,'&%CoolTemperature describes how there is some relief from heat but not very cold, is between cold and warm') ).

fof(kb_SUMO_15606,axiom,
    s__termFormat(s__EnglishLanguage,s__CoolTemperature,cool) ).

fof(kb_SUMO_15607,axiom,
    s__successorAttribute(s__ColdTemperature,s__CoolTemperature) ).

fof(kb_SUMO_15608,axiom,
    s__instance(s__WarmTemperature,s__TemperatureAttribute) ).

fof(kb_SUMO_15609,axiom,
    s__documentation(s__WarmTemperature,s__EnglishLanguage,'&%WarmTemperature describes how there is a comfortable or agreeable degree of heat') ).

fof(kb_SUMO_15610,axiom,
    s__termFormat(s__EnglishLanguage,s__WarmTemperature,warm) ).

fof(kb_SUMO_15611,axiom,
    s__successorAttribute(s__CoolTemperature,s__WarmTemperature) ).

fof(kb_SUMO_15612,axiom,
    s__instance(s__HotTemperature,s__TemperatureAttribute) ).

fof(kb_SUMO_15613,axiom,
    s__documentation(s__HotTemperature,s__EnglishLanguage,'&%HotTemperature describes how something has a high temperature') ).

fof(kb_SUMO_15614,axiom,
    s__termFormat(s__EnglishLanguage,s__HotTemperature,hot) ).

fof(kb_SUMO_15615,axiom,
    s__successorAttribute(s__WarmTemperature,s__HotTemperature) ).

fof(kb_SUMO_15616,axiom,
    ! [V__CLASS,V__X,V__Y] :
      ( ( s__instance(V__Y,s__Object)
        & s__instance(V__X,s__Object)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__immediateInstance(V__X,V__CLASS)
          & s__immediateInstance(V__Y,V__CLASS)
          & s__attribute(V__X,s__ColdTemperature)
          & s__attribute(V__Y,s__HotTemperature) )
       => ? [V__TEMPX,V__TEMPY] :
            ( s__instance(V__TEMPY,s__PhysicalQuantity)
            & s__instance(V__TEMPX,s__PhysicalQuantity)
            & s__measure(V__X,V__TEMPX)
            & s__instance(V__TEMPX,s__TemperatureMeasure)
            & s__measure(V__Y,V__TEMPY)
            & s__instance(V__TEMPY,s__TemperatureMeasure)
            & greater(V__TEMPY,V__TEMPX) ) ) ) ).

fof(kb_SUMO_15617,axiom,
    s__instance(s__Multilingual,s__RelationalAttribute) ).

fof(kb_SUMO_15618,axiom,
    s__documentation(s__Multilingual,s__EnglishLanguage,'&%Multilingual describes a person who is able to speak more than one language fluently') ).

fof(kb_SUMO_15619,axiom,
    s__termFormat(s__EnglishLanguage,s__Multilingual,multilingual) ).

fof(kb_SUMO_15620,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Multilingual)
       => s__instance(V__X,s__Human) ) ) ).

fof(kb_SUMO_15621,axiom,
    ! [V__SPEAK,V__X] :
      ( ( s__instance(V__X,s__Agent)
        & s__instance(V__SPEAK,s__Process) )
     => ( ( s__attribute(V__X,s__Multilingual)
          & s__instance(V__SPEAK,s__Speaking)
          & s__agent(V__SPEAK,V__X) )
       => s__modalAttribute('(? [V__LANG1,V__LANG2] : (s__instance(V__LANG1,s__SpokenHumanLanguage) & s__instance(V__LANG2,s__SpokenHumanLanguage) & (~ (V__LANG1 = V__LANG2)) & (s__patient(V__SPEAK,V__LANG1) | s__patient(V__SPEAK,V__LANG2))))',s__Possibility) ) ) ).

fof(kb_SUMO_15622,axiom,
    s__subclass(s__RecreationalVehicle,s__Vehicle) ).

fof(kb_SUMO_15623,axiom,
    s__subclass(s__RecreationalVehicle,s__MobileResidence) ).

fof(kb_SUMO_15624,axiom,
    s__instance(s__RecreationalVehicle__t,s__SetOrClass) ).

fof(kb_SUMO_15625,axiom,
    s__documentation(s__RecreationalVehicle,s__EnglishLanguage,'A &%RecreationalVehicle is a type of motorized &%Vehicle that is used for camping or can serve as a &%Residence that is mobile') ).

fof(kb_SUMO_15626,axiom,
    s__termFormat(s__EnglishLanguage,s__RecreationalVehicle,rv) ).

fof(kb_SUMO_15627,axiom,
    ! [V__RV] :
      ( s__instance(V__RV,s__Object)
     => ( s__instance(V__RV,s__RecreationalVehicle)
       => s__modalAttribute('(? [V__BED,V__DINING,V__KITCHEN] : (s__instance(V__KITCHEN,s__Physical) & s__instance(V__DINING,s__Physical) & s__instance(V__BED,s__Physical) & s__instance(V__BED,s__Bed) & s__instance(V__DINING,s__DiningArea) & s__instance(V__KITCHEN,s__KitchenArea) & s__located(V__BED,V__RV) & s__located(V__DINING,V__RV) & s__located(V__KITCHEN,V__RV)))',s__Likely) ) ) ).

fof(kb_SUMO_15628,axiom,
    s__subclass(s__ElectronicLock,s__Lock) ).

fof(kb_SUMO_15629,axiom,
    s__instance(s__ElectronicLock__t,s__SetOrClass) ).

fof(kb_SUMO_15630,axiom,
    s__instance(s__Lock__t,s__SetOrClass) ).

fof(kb_SUMO_15631,axiom,
    s__documentation(s__ElectronicLock,s__EnglishLanguage,'&%ElectronicLock is a type of &%Lock that depends on some &%ElectronicSignalling process to open') ).

fof(kb_SUMO_15632,axiom,
    s__termFormat(s__EnglishLanguage,s__ElectronicLock,'electronic lock') ).

fof(kb_SUMO_15633,axiom,
    ! [V__LOCK] :
      ( s__instance(V__LOCK,s__Object)
     => ( s__instance(V__LOCK,s__ElectronicLock)
       => s__hasPurpose(V__LOCK,'(? [V__ES,V__PROC] : (s__instance(V__PROC,s__Process) & s__instance(V__ES,s__Process) & s__instance(V__ES,s__ElectronicSignalling) & s__destination(V__ES,V__LOCK) & s__instance(V__PROC,s__Opening) & s__instrument(V__PROC,V__LOCK) & s__before(s__BeginFn(s__WhenFn(V__ES)),s__BeginFn(s__WhenFn(V__PROC)))))') ) ) ).

fof(kb_SUMO_15634,axiom,
    s__subclass(s__RunningTrack,s__StationaryArtifact) ).

fof(kb_SUMO_15635,axiom,
    s__instance(s__RunningTrack__t,s__SetOrClass) ).

fof(kb_SUMO_15636,axiom,
    s__subclass(s__RunningTrack,s__LandTransitway) ).

fof(kb_SUMO_15637,axiom,
    s__documentation(s__RunningTrack,s__EnglishLanguage,'&%RunningTrack is a &%StationaryArtifact which serves as a path for people running') ).

fof(kb_SUMO_15638,axiom,
    s__termFormat(s__EnglishLanguage,s__RunningTrack,'running track') ).

fof(kb_SUMO_15639,axiom,
    ! [V__TRACK] :
      ( s__instance(V__TRACK,s__Object)
     => ( s__instance(V__TRACK,s__RunningTrack)
       => s__hasPurpose(V__TRACK,'(? [V__RUN,V__HUMAN] : (s__instance(V__HUMAN,s__Agent) & s__instance(V__RUN,s__Motion) & s__instance(V__HUMAN,s__Human) & s__instance(V__RUN,s__Running) & s__agent(V__RUN,V__HUMAN) & s__path(V__RUN,V__TRACK)))') ) ) ).

fof(kb_SUMO_15640,axiom,
    s__subclass(s__KnockLight,s__Device) ).

fof(kb_SUMO_15641,axiom,
    s__instance(s__KnockLight__t,s__SetOrClass) ).

fof(kb_SUMO_15642,axiom,
    s__documentation(s__KnockLight,s__EnglishLanguage,'&%KnockLight is a type of &%Device that flashes light when a door knock is made. It is used by the hearing impaired') ).

fof(kb_SUMO_15643,axiom,
    s__termFormat(s__EnglishLanguage,s__KnockLight,'knock light') ).

fof(kb_SUMO_15644,axiom,
    ! [V__DOOR,V__ROOM,V__KL] :
      ( ( s__instance(V__KL,s__Agent)
        & s__instance(V__ROOM,s__Object)
        & s__instance(V__DOOR,s__Agent) )
     => ( ( s__instance(V__KL,s__KnockLight)
          & s__instance(V__ROOM,s__Room)
          & s__located(V__KL,V__ROOM)
          & s__instance(V__DOOR,s__Door)
          & s__part(V__DOOR,V__ROOM) )
       => s__hasPurpose(V__KL,'(? [V__SOUND,V__LIGHT,V__IMPACT] : (s__instance(V__IMPACT,s__Process) & s__instance(V__LIGHT,s__Process) & s__instance(V__SOUND,s__Process) & s__instance(V__IMPACT,s__Impacting) & s__patient(V__IMPACT,V__DOOR) & s__causes(V__IMPACT,V__SOUND) & s__instance(V__SOUND,s__RadiatingSound) & s__agent(V__SOUND,V__DOOR) & s__causes(V__SOUND,V__LIGHT) & s__instance(V__LIGHT,s__RadiatingLight) & s__agent(V__LIGHT,V__KL)))') ) ) ).

%FOL fof(kb_SUMO_15645,axiom,(( (! [V__DOOR,V__X,V__KL,V__LOC] : ((s__instance(V__LOC,s__Object) & s__instance(V__KL,s__Physical) & s__instance(V__X,s__CognitiveAgent) & s__instance(V__DOOR,s__Object)) => ((s__instance(V__KL,s__KnockLight) & s__attribute(V__X,s__Deaf) & s__located(V__KL,V__LOC) & s__located(V__X,V__LOC) & s__instance(V__DOOR,s__Door) & s__part(V__DOOR,V__LOC)) => s__hasPurposeForAgent(V__KL,'s__knows(V__X,(? [V__KNOCK] : (s__instance(V__KNOCK,s__Process) & s__instance(V__KNOCK,s__Impacting) & s__patient(V__KNOCK,V__DOOR))))',V__X)))) ))).

fof(kb_SUMO_15646,axiom,
    s__subclass(s__PrayerMat,s__Rug) ).

fof(kb_SUMO_15647,axiom,
    s__instance(s__PrayerMat__t,s__SetOrClass) ).

fof(kb_SUMO_15648,axiom,
    s__instance(s__Rug__t,s__SetOrClass) ).

fof(kb_SUMO_15649,axiom,
    s__documentation(s__PrayerMat,s__EnglishLanguage,'&%PrayerMat is a type of &%Rug which is used in &%Praying') ).

fof(kb_SUMO_15650,axiom,
    s__termFormat(s__EnglishLanguage,s__PrayerMat,'prayer mat') ).

fof(kb_SUMO_15651,axiom,
    ! [V__MAT] :
      ( s__instance(V__MAT,s__Object)
     => ( s__instance(V__MAT,s__PrayerMat)
       => s__hasPurpose(V__MAT,'(? [V__PRAY,V__PERSON] : (s__instance(V__PERSON,s__Agent) & s__instance(V__PRAY,s__Process) & s__instance(V__PRAY,s__Praying) & s__agent(V__PRAY,V__PERSON) & s__instance(V__PERSON,s__Human) & s__holdsDuring(s__WhenFn(V__PRAY),s__orientation(V__PERSON,V__MAT,s__On))))') ) ) ).

fof(kb_SUMO_15652,axiom,
    s__subclass(s__VideoGame,s__Game) ).

fof(kb_SUMO_15653,axiom,
    s__instance(s__VideoGame__t,s__SetOrClass) ).

fof(kb_SUMO_15654,axiom,
    s__documentation(s__VideoGame,s__EnglishLanguage,'&%VideoGame is a &%Game in &%VideoRecording form') ).

fof(kb_SUMO_15655,axiom,
    s__termFormat(s__EnglishLanguage,s__VideoGame,'video game') ).

fof(kb_SUMO_15656,axiom,
    ! [V__GAME] :
      ( s__instance(V__GAME,s__VideoGame)
     => ? [V__VIDEO] :
          ( s__instance(V__VIDEO,s__VideoRecording)
          & s__represents(V__VIDEO,V__GAME) ) ) ).

fof(kb_SUMO_15657,axiom,
    s__subclass(s__VideoGamePlayer,s__MediaSystem) ).

fof(kb_SUMO_15658,axiom,
    s__instance(s__VideoGamePlayer__t,s__SetOrClass) ).

fof(kb_SUMO_15659,axiom,
    s__documentation(s__VideoGamePlayer,s__EnglishLanguage,'&%VideoGamePlayer is a &%MediaSystem that enables the playing of a &%VideoGame') ).

fof(kb_SUMO_15660,axiom,
    s__termFormat(s__EnglishLanguage,s__VideoGamePlayer,'video game player') ).

fof(kb_SUMO_15661,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Agent)
     => ( s__instance(V__X,s__VideoGamePlayer)
       => s__hasPurpose(V__X,'(? [V__GAME,V__RL,V__MOVE,V__CONTROLLER,V__PLAYER] : (s__instance(V__PLAYER,s__Agent) & s__instance(V__CONTROLLER,s__Object) & s__instance(V__MOVE,s__Process) & s__instance(V__RL,s__Process) & s__instance(V__GAME,s__Process) & s__instance(V__GAME,s__VideoGame) & s__instrument(V__GAME,V__X) & s__agent(V__GAME,V__PLAYER) & s__instance(V__MOVE,s__Maneuver) & s__instrument(V__MOVE,V__CONTROLLER) & s__agent(V__MOVE,V__PLAYER) & s__subProcess(V__MOVE,V__GAME) & s__part(V__CONTROLLER,V__X) & s__instance(V__RL,s__RadiatingLight) & s__agent(V__RL,V__X) & s__patient(V__RL,V__GAME)))') ) ) ).

fof(kb_SUMO_15662,axiom,
    s__subclass(s__ElectricalOutlet,s__Device) ).

fof(kb_SUMO_15663,axiom,
    s__instance(s__ElectricalOutlet__t,s__SetOrClass) ).

fof(kb_SUMO_15664,axiom,
    s__documentation(s__ElectricalOutlet,s__EnglishLanguage,'&%ElectricalOutlet refers to a &%Device that is used to connect a plug to a power source so that &%Electricity can flow from the source to an &%ElectricDevice') ).

fof(kb_SUMO_15665,axiom,
    s__termFormat(s__EnglishLanguage,s__ElectricalOutlet,'electrical outlet') ).

fof(kb_SUMO_15666,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__ElectricalOutlet)
       => ? [V__HOLE] :
            ( s__instance(V__HOLE,s__Collection)
            & s__memberType(V__HOLE,s__Hole)
            & s__part(V__HOLE,V__X) ) ) ) ).

fof(kb_SUMO_15667,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__EngineeringComponent)
     => ( s__instance(V__X,s__ElectricalOutlet)
       => s__hasPurpose(V__X,'(? [V__POWER,V__WIRE] : (s__instance(V__WIRE,s__EngineeringConnection) & s__instance(V__POWER,s__EngineeringComponent) & s__instance(V__POWER,s__PowerSource) & s__instance(V__WIRE,s__Collection) & s__memberType(V__WIRE,s__WireLine) & s__connectsEngineeringComponents(V__WIRE,V__X,V__POWER)))') ) ) ).

fof(kb_SUMO_15668,axiom,
    s__subclass(s__ElectricalPlug,s__Plug) ).

fof(kb_SUMO_15669,axiom,
    s__instance(s__ElectricalPlug__t,s__SetOrClass) ).

fof(kb_SUMO_15670,axiom,
    s__instance(s__Plug__t,s__SetOrClass) ).

fof(kb_SUMO_15671,axiom,
    s__documentation(s__ElectricalPlug,s__EnglishLanguage,'&%ElectricalPlug is a type of &%Plug made of metal that is normally used to conduct electricity from an &%ElectricalOutlet to an &%ElectricDevice') ).

fof(kb_SUMO_15672,axiom,
    s__termFormat(s__EnglishLanguage,s__ElectricalPlug,'electrical plug') ).

fof(kb_SUMO_15673,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CorpuscularObject)
     => ( s__instance(V__X,s__ElectricalPlug)
       => s__material(s__Metal,V__X) ) ) ).

fof(kb_SUMO_15674,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__ElectricalPlug)
       => s__hasPurpose(V__X,'(? [V__OUTLET] : (s__instance(V__OUTLET,s__Hole) & s__instance(V__OUTLET,s__ElectricalOutlet) & s__completelyFills(V__X,V__OUTLET)))') ) ) ).

fof(kb_SUMO_15675,axiom,
    ! [V__OUTLET,V__PLUG,V__POWER,V__DEVICE] :
      ( ( s__instance(V__DEVICE,s__EngineeringComponent)
        & s__instance(V__POWER,s__EngineeringComponent)
        & s__instance(V__PLUG,s__EngineeringComponent)
        & s__instance(V__OUTLET,s__Hole)
        & s__instance(V__OUTLET,s__EngineeringComponent) )
     => ( ( s__instance(V__PLUG,s__ElectricalPlug)
          & s__instance(V__DEVICE,s__ElectricDevice)
          & s__instance(V__OUTLET,s__ElectricalOutlet)
          & s__connectedEngineeringComponents(V__DEVICE,V__PLUG)
          & s__completelyFills(V__PLUG,V__OUTLET)
          & s__instance(V__POWER,s__PowerSource)
          & s__connectedEngineeringComponents(V__POWER,V__OUTLET) )
       => ? [V__RE] :
            ( s__instance(V__RE,s__Process)
            & s__instance(V__RE,s__RadiatingElectromagnetic)
            & s__origin(V__RE,V__POWER)
            & s__destination(V__RE,V__DEVICE) ) ) ) ).

fof(kb_SUMO_15676,axiom,
    s__subclass(s__OutletAdapter,s__Device) ).

fof(kb_SUMO_15677,axiom,
    s__instance(s__OutletAdapter__t,s__SetOrClass) ).

fof(kb_SUMO_15678,axiom,
    s__documentation(s__OutletAdapter,s__EnglishLanguage,'An &%OutletAdapter is a device that, on one side has &%Hole and on another side has metal prongs so that an &%ElectricalPlug can fit into an &%ElectricalOutlet') ).

fof(kb_SUMO_15679,axiom,
    s__termFormat(s__EnglishLanguage,s__OutletAdapter,'outlet adapter') ).

fof(kb_SUMO_15680,axiom,
    ! [V__HOLD,V__ADAPT] :
      ( ( s__instance(V__ADAPT,s__CorpuscularObject)
        & s__instance(V__HOLD,s__Object) )
     => ( s__instance(V__ADAPT,s__OutletAdapter)
       => ? [V__HOLE] :
            ( s__instance(V__HOLE,s__Collection)
            & s__memberType(V__HOLE,s__Hole)
            & s__part(V__HOLD,V__ADAPT)
            & s__material(s__Metal,V__ADAPT) ) ) ) ).

fof(kb_SUMO_15681,axiom,
    ! [V__ADAPT] :
      ( ( s__instance(V__ADAPT,s__Hole)
        & s__instance(V__ADAPT,s__EngineeringConnection) )
     => ( s__instance(V__ADAPT,s__OutletAdapter)
       => s__hasPurpose(V__ADAPT,'(? [V__OUTLET,V__PLUG] : (s__instance(V__PLUG,s__EngineeringComponent) & s__instance(V__OUTLET,s__Hole) & s__instance(V__OUTLET,s__EngineeringComponent) & s__instance(V__PLUG,s__ElectricalPlug) & s__instance(V__OUTLET,s__ElectricalOutlet) & s__completelyFills(V__PLUG,V__ADAPT) & s__completelyFills(V__ADAPT,V__OUTLET) & s__connectsEngineeringComponents(V__ADAPT,V__PLUG,V__OUTLET)))') ) ) ).

fof(kb_SUMO_15682,axiom,
    s__subclass(s__AirConditioner,s__ElectricDevice) ).

fof(kb_SUMO_15683,axiom,
    s__instance(s__AirConditioner__t,s__SetOrClass) ).

fof(kb_SUMO_15684,axiom,
    s__documentation(s__AirConditioner,s__EnglishLanguage,'&%AirConditioner is a type of &%ElectricDevice that is designed to provide comfort during hot or cold weather by keeping the air in an area a specific temperature') ).

fof(kb_SUMO_15685,axiom,
    s__termFormat(s__EnglishLanguage,s__AirConditioner,'air conditioner') ).

fof(kb_SUMO_15686,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__AirConditioner)
       => s__hasPurpose(V__X,'(? [V__PROC,V__TEMP,V__AREA] : (s__instance(V__AREA,s__Object) & s__instance(V__TEMP,s__TemperatureMeasure) & s__located(V__X,V__AREA) & s__instance(V__PROC,s__Process) & s__instrument(V__PROC,V__X) & s__result(V__PROC,s__airTemperature(V__AREA,V__TEMP))))') ) ) ).

fof(kb_SUMO_15687,axiom,
    s__instance(s__Surrounded,s__PositionalAttribute) ).

fof(kb_SUMO_15688,axiom,
    s__documentation(s__Surrounded,s__EnglishLanguage,'&%Surrounded describes how an object or a collection of objects &%meetsSpatially with all sides of another object') ).

fof(kb_SUMO_15689,axiom,
    s__termFormat(s__EnglishLanguage,s__Surrounded,surrounded) ).

fof(kb_SUMO_15690,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__orientation(V__OBJ1,V__OBJ2,s__Surrounded)
     => ! [V__X] :
          ( ( s__instance(V__X,s__SelfConnectedObject)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__SelfConnectedObject) )
         => ( s__side(V__X,V__OBJ1)
           => s__meetsSpatially(V__X,V__OBJ2) ) ) ) ).

fof(kb_SUMO_15691,axiom,
    s__subclass(s__Courtyard,s__StationaryArtifact) ).

fof(kb_SUMO_15692,axiom,
    s__instance(s__Courtyard__t,s__SetOrClass) ).

fof(kb_SUMO_15693,axiom,
    s__documentation(s__Courtyard,s__EnglishLanguage,'&%Courtyard is an unroofed area wholly or partly surrounded by walls or buildings') ).

fof(kb_SUMO_15694,axiom,
    s__termFormat(s__EnglishLanguage,s__Courtyard,courtyard) ).

fof(kb_SUMO_15695,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__SelfConnectedObject)
     => ( s__instance(V__X,s__Courtyard)
       => ( ~ ? [V__ROOF] :
                ( s__instance(V__ROOF,s__SelfConnectedObject)
                & s__instance(V__ROOF,s__Roof)
                & s__top(V__ROOF,V__X) )
          & ? [V__BLDG] :
              ( s__instance(V__BLDG,s__Object)
              & s__instance(V__BLDG,s__Building)
              & s__orientation(V__X,V__BLDG,s__Surrounded) ) ) ) ) ).

fof(kb_SUMO_15696,axiom,
    s__subclass(s__SpeakerDevice,s__ElectricDevice) ).

fof(kb_SUMO_15697,axiom,
    s__instance(s__SpeakerDevice__t,s__SetOrClass) ).

fof(kb_SUMO_15698,axiom,
    s__documentation(s__SpeakerDevice,s__EnglishLanguage,'&%SpeakerDevice is a type of device that converts electrical signals into sounds loud enough to be heard at a distance') ).

fof(kb_SUMO_15699,axiom,
    s__termFormat(s__EnglishLanguage,s__SpeakerDevice,speaker) ).

fof(kb_SUMO_15700,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__SpeakerDevice)
       => s__hasPurpose(V__X,'(? [V__RS] : (s__instance(V__RS,s__Process) & s__instance(V__RS,s__Object) & s__instance(V__RS,s__RadiatingSound) & s__instrument(V__RS,V__X) & s__attribute(V__RS,s__Audible)))') ) ) ).

fof(kb_SUMO_15701,axiom,
    s__subclass(s__Earphone,s__Device) ).

fof(kb_SUMO_15702,axiom,
    s__instance(s__Earphone__t,s__SetOrClass) ).

fof(kb_SUMO_15703,axiom,
    s__documentation(s__Earphone,s__EnglishLanguage,'&%Earphone is a type of &%Device that that converts electric signals into sound and is usually held over or inserted in the ear') ).

fof(kb_SUMO_15704,axiom,
    s__termFormat(s__EnglishLanguage,s__Earphone,earphone) ).

fof(kb_SUMO_15705,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Earphone)
       => s__hasPurpose(V__X,'(? [V__ES,V__RS,V__SIGNAL,V__EAR,V__PROC] : (s__instance(V__EAR,s__Object) & s__instance(V__RS,s__Process) & s__instance(V__ES,s__Process) & s__instance(V__ES,s__ElectricalSignalling) & s__patient(V__ES,V__SIGNAL) & s__destination(V__ES,V__X) & s__instance(V__PROC,s__Process) & s__instrument(V__PROC,V__X) & s__patient(V__PROC,V__SIGNAL) & s__result(V__PROC,V__RS) & s__instance(V__RS,s__RadiatingSound) & s__origin(V__RS,V__X) & s__before(s__BeginFn(s__WhenFn(V__ES)),s__BeginFn(s__WhenFn(V__PROC))) & s__before(s__BeginFn(s__WhenFn(V__PROC)),s__BeginFn(s__WhenFn(V__RS))) & s__instance(V__EAR,s__Ear) & s__orientation(V__X,V__EAR,s__Adjacent)))') ) ) ).

fof(kb_SUMO_15706,axiom,
    s__subclass(s__Public,s__GroupOfPeople) ).

fof(kb_SUMO_15707,axiom,
    s__instance(s__Public__t,s__SetOrClass) ).

fof(kb_SUMO_15708,axiom,
    s__documentation(s__Public,s__EnglishLanguage,'a body of people sharing some common interest; example: the reading public.') ).

fof(kb_SUMO_15709,axiom,
    ! [V__T1,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__SelfConnectedObject)
        & s__instance(V__AGENT1,s__CognitiveAgent)
        & s__instance(V__AGENT2,s__SelfConnectedObject)
        & s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__T1,s__TimePosition) )
     => ( s__holdsDuring(V__T1,'(s__member(V__AGENT1,s__Public) & s__member(V__AGENT2,s__Public) & (~ (V__AGENT1 = V__AGENT2)))')
       => ? [V__INTEREST] :
            ( s__instance(V__INTEREST,s__Formula)
            & s__holdsDuring(V__T1,'(s__desires(V__AGENT1,V__INTEREST) & s__desires(V__AGENT2,V__INTEREST))') ) ) ) ).

fof(kb_SUMO_15710,axiom,
    s__subclass(s__PublicAddressSystem,s__CommunicationSystem) ).

fof(kb_SUMO_15711,axiom,
    s__instance(s__PublicAddressSystem__t,s__SetOrClass) ).

fof(kb_SUMO_15712,axiom,
    s__documentation(s__PublicAddressSystem,s__EnglishLanguage,'&%PublicAddressSystem refers to an electronic amplification system used as a communication system in public areas') ).

fof(kb_SUMO_15713,axiom,
    s__termFormat(s__EnglishLanguage,s__PublicAddressSystem,'public address system') ).

fof(kb_SUMO_15714,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Collection)
     => ( s__instance(V__X,s__PublicAddressSystem)
       => ( s__memberType(V__X,s__Microphone)
          & s__memberType(V__X,s__SpeakerDevice) ) ) ) ).

fof(kb_SUMO_15715,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__PublicAddressSystem)
     => s__hasPurpose(V__X,'(? [V__RS,V__AREA,V__GRP] : (s__instance(V__AREA,s__LandArea) & s__located(V__X,V__AREA) & s__instance(V__GRP,s__GroupOfPeople) & s__located(V__GRP,V__AREA) & s__instance(V__RS,s__RadiatingSound) & s__instrument(V__RS,V__X) & (! [V__PERSON] : ((s__instance(V__PERSON,s__SelfConnectedObject) & s__instance(V__PERSON,s__Agent) & s__instance(V__X,s__Object)) => (s__member(V__PERSON,V__GRP) => (? [V__HEAR] : (s__instance(V__HEAR,s__Process) & s__instance(V__GRP,s__Collection) & s__instance(V__AREA,s__Object) & s__instance(V__RS,s__Process) & s__instance(V__HEAR,s__Hearing) & s__patient(V__HEAR,V__RS) & s__agent(V__HEAR,V__PERSON))))))))') ) ).

fof(kb_SUMO_15716,axiom,
    s__subclass(s__Wheelchair,s__TransportationDevice) ).

fof(kb_SUMO_15717,axiom,
    s__instance(s__Wheelchair__t,s__SetOrClass) ).

fof(kb_SUMO_15718,axiom,
    s__documentation(s__Wheelchair,s__EnglishLanguage,'&%Wheelchair is a type of &%LandVehicle that is used to individually transport those who cannot walk') ).

fof(kb_SUMO_15719,axiom,
    s__termFormat(s__EnglishLanguage,s__Wheelchair,wheelchair) ).

fof(kb_SUMO_15720,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Wheelchair)
       => ? [V__WHEEL,V__SEAT] :
            ( s__instance(V__SEAT,s__Object)
            & s__instance(V__WHEEL,s__Object)
            & s__instance(V__SEAT,s__Seat)
            & s__instance(V__WHEEL,s__Wheel)
            & s__part(V__SEAT,V__X)
            & s__part(V__WHEEL,V__X) ) ) ) ).

fof(kb_SUMO_15721,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Wheelchair)
       => s__hasPurpose(V__X,'(? [V__TRANSPORT,V__HUMAN] : (s__instance(V__HUMAN,s__Agent) & s__instance(V__TRANSPORT,s__Process) & s__instance(V__HUMAN,s__Human) & (~ s__capability(s__Walking,s__agent__m,V__HUMAN)) & s__instance(V__TRANSPORT,s__Transportation) & s__agent(V__TRANSPORT,V__HUMAN) & s__instrument(V__TRANSPORT,V__X)))') ) ) ).

fof(kb_SUMO_15722,axiom,
    s__instance(s__WheelchairAccessible,s__ObjectiveNorm) ).

fof(kb_SUMO_15723,axiom,
    s__documentation(s__WheelchairAccessible,s__EnglishLanguage,'&%WheelchairAccessible describes how a location lets a person using a wheelchair move around without interference and with access to all features of that place.') ).

fof(kb_SUMO_15724,axiom,
    s__termFormat(s__EnglishLanguage,s__WheelchairAccessible,'wheelchair accessible') ).

fof(kb_SUMO_15725,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__WheelchairAccessible)
       => s__attribute(V__X,s__HandicappedFriendly) ) ) ).

fof(kb_SUMO_15726,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( ( s__attribute(V__X,s__WheelchairAccessible)
          & ( s__instance(V__X,s__Building)
            | s__instance(V__X,s__Room) ) )
       => s__modalAttribute('(? [V__MOTION,V__WHEELCHAIR] : (s__instance(V__WHEELCHAIR,s__Object) & s__instance(V__MOTION,s__Process) & s__instance(V__MOTION,s__Motion) & s__instrument(V__MOTION,V__WHEELCHAIR) & s__instance(V__WHEELCHAIR,s__Wheelchair) & s__eventLocated(V__MOTION,V__X)))',s__Possibility) ) ) ).

fof(kb_SUMO_15727,axiom,
    s__instance(s__HandicappedFriendly,s__SubjectiveAssessmentAttribute) ).

fof(kb_SUMO_15728,axiom,
    s__documentation(s__HandicappedFriendly,s__EnglishLanguage,'&%HandicappedFriendly describes an object that can be easily used by somebody who has some &%Disability') ).

fof(kb_SUMO_15729,axiom,
    s__termFormat(s__EnglishLanguage,s__HandicappedFriendly,'handicapped friendly') ).

fof(kb_SUMO_15730,axiom,
    ! [V__X] :
      ( s__attribute(V__X,s__HandicappedFriendly)
     => s__instance(V__X,s__Object) ) ).

fof(kb_SUMO_15731,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__HandicappedFriendly)
       => ? [V__ATTR,V__PERSON] :
            ( s__instance(V__PERSON,s__CognitiveAgent)
            & s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__Disability)
            & s__instance(V__PERSON,s__Human)
            & s__attribute(V__PERSON,V__ATTR)
            & s__inScopeOfInterest(V__PERSON,V__X) ) ) ) ).

fof(kb_SUMO_15732,axiom,
    s__subclass(s__Recliner,s__Seat) ).

fof(kb_SUMO_15733,axiom,
    s__instance(s__Recliner__t,s__SetOrClass) ).

fof(kb_SUMO_15734,axiom,
    s__documentation(s__Recliner,s__EnglishLanguage,'&%Recliner is a type of &%Seat whose back can be lowered and the foot can be rasied to allow the sitter to recline in it.') ).

fof(kb_SUMO_15735,axiom,
    s__termFormat(s__EnglishLanguage,s__Recliner,recliner) ).

fof(kb_SUMO_15736,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Recliner)
     => s__modalAttribute('(? [V__INCLINE] : (s__instance(V__INCLINE,s__Process) & s__instance(V__INCLINE,s__Inclining) & s__patient(V__INCLINE,V__X)))',s__Possibility) ) ).

fof(kb_SUMO_15737,axiom,
    s__subclass(s__VisualContentBearingPhysical,s__ContentBearingPhysical) ).

fof(kb_SUMO_15738,axiom,
    s__documentation(s__VisualContentBearingPhysical,s__EnglishLanguage,'Instances of &%VisualContentBearingPhysical are &%ContentBearingPhysicals that are intended to convey meaning as the result of being seen.') ).

fof(kb_SUMO_15739,axiom,
    s__subclass(s__VisualContentBearingObject,s__ContentBearingPhysical) ).

fof(kb_SUMO_15740,axiom,
    s__subclass(s__VisualContentBearingObject,s__VisualContentBearingPhysical) ).

fof(kb_SUMO_15741,axiom,
    s__instance(s__VisualContentBearingPhysical__t,s__SetOrClass) ).

fof(kb_SUMO_15742,axiom,
    s__documentation(s__VisualContentBearingObject,s__EnglishLanguage,'Instances of &%VisualContentBearingObject are &%ContentBearingObjects that are intended to convey meaning as the result of being seen.') ).

fof(kb_SUMO_15743,axiom,
    s__subclass(s__Image,s__VisualContentBearingObject) ).

fof(kb_SUMO_15744,axiom,
    s__instance(s__Image__t,s__SetOrClass) ).

fof(kb_SUMO_15745,axiom,
    s__instance(s__VisualContentBearingObject__t,s__SetOrClass) ).

fof(kb_SUMO_15746,axiom,
    s__documentation(s__Image,s__EnglishLanguage,'Instances of &%Image are &%VisualContentBearingObjects that convey their meaning primarily in non-textual form.') ).

fof(kb_SUMO_15747,axiom,
    s__subclass(s__MultimediaProjector,s__MediaSystem) ).

fof(kb_SUMO_15748,axiom,
    s__instance(s__MultimediaProjector__t,s__SetOrClass) ).

fof(kb_SUMO_15749,axiom,
    s__instance(s__MediaSystem__t,s__SetOrClass) ).

fof(kb_SUMO_15750,axiom,
    s__documentation(s__MultimediaProjector,s__EnglishLanguage,'&%MultimediaProjector is a type of &%MediaSystem that projects images on a screen') ).

fof(kb_SUMO_15751,axiom,
    s__termFormat(s__EnglishLanguage,s__MultimediaProjector,'multimedia projector') ).

fof(kb_SUMO_15752,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__MultimediaProjector)
       => s__hasPurpose(V__X,'(? [V__RS,V__SCREEN,V__VIDEO] : (s__instance(V__SCREEN,s__Object) & s__instance(V__RS,s__Process) & s__instance(V__RS,s__RadiatingLight) & s__instrument(V__RS,V__X) & s__patient(V__RS,V__VIDEO) & (s__instance(V__VIDEO,s__VideoRecording) | s__instance(V__VIDEO,s__Image)) & s__destination(V__RS,V__SCREEN) & s__instance(V__SCREEN,s__Artifact) & s__attribute(V__SCREEN,s__Flat) & (~ s__connected(V__X,V__SCREEN))))') ) ) ).

fof(kb_SUMO_15753,axiom,
    s__subclass(s__AudioRecorder,s__Device) ).

fof(kb_SUMO_15754,axiom,
    s__instance(s__AudioRecorder__t,s__SetOrClass) ).

fof(kb_SUMO_15755,axiom,
    s__documentation(s__AudioRecorder,s__EnglishLanguage,'&%AudioRecorder is a type of &%Device that creates an &%AudioRecording by capturing sound and storing it in a &%DataStorageDevice') ).

fof(kb_SUMO_15756,axiom,
    s__termFormat(s__EnglishLanguage,s__AudioRecorder,'audio recorder') ).

fof(kb_SUMO_15757,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__AudioRecorder)
       => s__hasPurpose(V__X,'(? [V__RS,V__RECORD,V__PROC] : (s__instance(V__PROC,s__Process) & s__instance(V__RS,s__RadiatingSound) & s__instance(V__PROC,s__IntentionalProcess) & s__instrument(V__PROC,V__X) & s__patient(V__PROC,V__RS) & s__result(V__PROC,V__RECORD) & s__instance(V__RECORD,s__AudioRecording)))') ) ) ).

fof(kb_SUMO_15758,axiom,
    s__subclass(s__VideoDisplay,s__ElectricDevice) ).

fof(kb_SUMO_15759,axiom,
    s__instance(s__VideoDisplay__t,s__SetOrClass) ).

fof(kb_SUMO_15760,axiom,
    s__documentation(s__VideoDisplay,s__EnglishLanguage,'&%VideoDisplay is a type of &%ElectricDevice that can &%RadiatingLight to show &%VideoRecording') ).

fof(kb_SUMO_15761,axiom,
    s__termFormat(s__EnglishLanguage,s__VideoDisplay,'video display') ).

fof(kb_SUMO_15762,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__VideoDisplay)
       => s__hasPurpose(V__X,'(? [V__RL,V__VIDEO] : (s__instance(V__RL,s__Process) & s__instance(V__RL,s__RadiatingLight) & s__instance(V__VIDEO,s__VideoRecording) & s__patient(V__RL,V__VIDEO) & s__instrument(V__RL,V__X)))') ) ) ).

fof(kb_SUMO_15763,axiom,
    s__subclass(s__TDDPhone,s__Telephone) ).

fof(kb_SUMO_15764,axiom,
    s__instance(s__TDDPhone__t,s__SetOrClass) ).

fof(kb_SUMO_15765,axiom,
    s__documentation(s__TDDPhone,s__EnglishLanguage,'&%TDDPhone, which stands for Telecommunications Device for the Deaf, describes a &%Telephone that is designed so that &%Deaf people can use it') ).

fof(kb_SUMO_15766,axiom,
    ! [V__TDD] :
      ( s__instance(V__TDD,s__Object)
     => ( s__instance(V__TDD,s__TDDPhone)
       => s__hasPurpose(V__TDD,'(? [V__AGENT,V__PHONING] : (s__instance(V__PHONING,s__Process) & s__instance(V__AGENT,s__Agent) & s__instance(V__PHONING,s__Telephoning) & s__instrument(V__PHONING,V__TDD) & s__agent(V__PHONING,V__AGENT) & s__attribute(V__AGENT,s__Deaf)))') ) ) ).

fof(kb_SUMO_15767,axiom,
    s__subclass(s__Sail,s__Artifact) ).

fof(kb_SUMO_15768,axiom,
    s__instance(s__Sail__t,s__SetOrClass) ).

fof(kb_SUMO_15769,axiom,
    s__documentation(s__Sail,s__EnglishLanguage,'&%Sail refers to an &%Artifact made of some type of &%Fabric which by means of which wind is used to propel a sailing vessel') ).

fof(kb_SUMO_15770,axiom,
    s__termFormat(s__EnglishLanguage,s__Sail,sail) ).

fof(kb_SUMO_15771,axiom,
    ! [V__SAIL] :
      ( s__instance(V__SAIL,s__CorpuscularObject)
     => ( s__instance(V__SAIL,s__Sail)
       => ? [V__MAST] :
            ( s__instance(V__MAST,s__Object)
            & s__material(s__Fabric,V__SAIL)
            & s__instance(V__MAST,s__Mast)
            & s__connected(V__SAIL,V__MAST) ) ) ) ).

fof(kb_SUMO_15772,axiom,
    s__subclass(s__ACPowerSource,s__PowerSource) ).

fof(kb_SUMO_15773,axiom,
    s__instance(s__PowerSource__t,s__SetOrClass) ).

fof(kb_SUMO_15774,axiom,
    s__documentation(s__ACPowerSource,s__EnglishLanguage,'&%ACPowerSource refers to an alternating current &%PowerSource') ).

fof(kb_SUMO_15775,axiom,
    s__termFormat(s__EnglishLanguage,s__ACPowerSource,'ac power source') ).

fof(kb_SUMO_15776,axiom,
    s__subclass(s__SinglePhasePowerSource,s__ACPowerSource) ).

fof(kb_SUMO_15777,axiom,
    s__instance(s__SinglePhasePowerSource__t,s__SetOrClass) ).

fof(kb_SUMO_15778,axiom,
    s__instance(s__ACPowerSource__t,s__SetOrClass) ).

fof(kb_SUMO_15779,axiom,
    s__subclass(s__ThreePhasePowerSource,s__ACPowerSource) ).

fof(kb_SUMO_15780,axiom,
    s__instance(s__ThreePhasePowerSource__t,s__SetOrClass) ).

fof(kb_SUMO_15781,axiom,
    s__instance(s__voltageMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_15782,axiom,
    s__documentation(s__voltageMeasure__m,s__EnglishLanguage,'(&%voltageMeasure ?OBJ ?MEAS) describes how much electricity ?OBJ, a power source, generates') ).

fof(kb_SUMO_15783,axiom,
    s__termFormat(s__EnglishLanguage,s__voltageMeasure__m,'voltage measure') ).

fof(kb_SUMO_15784,axiom,
    s__domain(s__voltageMeasure__m,"1",s__PowerSource) ).

fof(kb_SUMO_15785,axiom,
    s__domain(s__voltageMeasure__m,"2",s__PhysicalQuantity) ).

fof(kb_SUMO_15786,axiom,
    ! [V__OBJ,V__QUANT,V__MEAS] :
      ( ( s__instance(V__MEAS,s__PhysicalQuantity)
        & s__instance(V__QUANT,s__RealNumber)
        & s__instance(V__OBJ,s__PowerSource) )
     => ( s__voltageMeasure(V__OBJ,V__MEAS)
       => V__MEAS = s__MeasureFn(V__QUANT,s__Volt) ) ) ).

fof(kb_SUMO_15787,axiom,
    ! [V__OBJ,V__MEAS] :
      ( ( s__instance(V__MEAS,s__PhysicalQuantity)
        & s__instance(V__OBJ,s__PowerSource) )
     => ( s__voltageMeasure(V__OBJ,V__MEAS)
       => ? [V__ELEC,V__PROC] :
            ( s__instance(V__ELEC,s__Object)
            & s__instance(V__ELEC,s__Electricity)
            & s__instance(V__PROC,s__Process)
            & s__instrument(V__PROC,V__OBJ)
            & s__result(V__PROC,V__ELEC)
            & s__measure(V__ELEC,V__MEAS) ) ) ) ).

fof(kb_SUMO_15788,axiom,
    s__subclass(s__Document,s__ContentBearingObject) ).

fof(kb_SUMO_15789,axiom,
    s__subclass(s__Document,s__Artifact) ).

fof(kb_SUMO_15790,axiom,
    s__documentation(s__Document,s__EnglishLanguage,'Instances of &%Document are &%ContentBearingObjects that are intended to convey propositional content via &%Text (&%LinguisticExpressions, seen or heard), &%Images, or some combination of these (e.g., an audio clip included in an electronic document consisting mostly of &%VisualText and some &%Images). Formally, a &%Document constitutes any &%ContentBearingObject that is an &%Artifact conventionally typically intended to be transmitted and assimilated as a meaningful whole. An &%Article or a &%Book would be a &%Document, but a &%Word or &%Paragraph typically would not.') ).

fof(kb_SUMO_15791,axiom,
    ! [V__DOC] :
      ( s__instance(V__DOC,s__Object)
     => ( s__instance(V__DOC,s__Document)
       => s__hasPurpose(V__DOC,'(? [V__COMM] : (s__instance(V__COMM,s__Process) & s__instance(V__COMM,s__Communication) & s__instrument(V__COMM,V__DOC)))') ) ) ).

fof(kb_SUMO_15792,axiom,
    s__subclass(s__Book,s__Document) ).

fof(kb_SUMO_15793,axiom,
    s__instance(s__Document__t,s__SetOrClass) ).

fof(kb_SUMO_15794,axiom,
    s__documentation(s__Book,s__EnglishLanguage,'A &%Document that has pages and is bound.') ).

fof(kb_SUMO_15795,axiom,
    s__subclass(s__GuideBook,s__Book) ).

fof(kb_SUMO_15796,axiom,
    s__documentation(s__GuideBook,s__EnglishLanguage,'&%GuideBook is a type of &%Book that offers basic information about a place, normally designed for the use of visitors or tourists.') ).

fof(kb_SUMO_15797,axiom,
    s__termFormat(s__EnglishLanguage,s__GuideBook,'guide book') ).

fof(kb_SUMO_15798,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__GuideBook)
     => ? [V__LOC] :
          ( s__instance(V__LOC,s__GeographicArea)
          & s__refers(V__X,V__LOC) ) ) ).

fof(kb_SUMO_15799,axiom,
    s__subclass(s__DiningGuide,s__GuideBook) ).

fof(kb_SUMO_15800,axiom,
    s__instance(s__DiningGuide__t,s__SetOrClass) ).

fof(kb_SUMO_15801,axiom,
    s__instance(s__GuideBook__t,s__SetOrClass) ).

fof(kb_SUMO_15802,axiom,
    s__documentation(s__DiningGuide,s__EnglishLanguage,'&%DiningGuide is a type of &%GuideBook that offers information about dining places around a specific location') ).

fof(kb_SUMO_15803,axiom,
    s__termFormat(s__EnglishLanguage,s__DiningGuide,'dining guide') ).

fof(kb_SUMO_15804,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__DiningGuide)
     => ? [V__LOC,V__REST] :
          ( s__instance(V__REST,s__Physical)
          & s__instance(V__LOC,s__Object)
          & s__instance(V__LOC,s__GeographicArea)
          & s__refers(V__X,V__LOC)
          & s__instance(V__REST,s__Restaurant)
          & s__located(V__REST,V__LOC)
          & s__refers(V__X,V__REST) ) ) ).

fof(kb_SUMO_15805,axiom,
    s__subclass(s__TelephoneHandset,s__Device) ).

fof(kb_SUMO_15806,axiom,
    s__instance(s__TelephoneHandset__t,s__SetOrClass) ).

fof(kb_SUMO_15807,axiom,
    s__documentation(s__TelephoneHandset,s__EnglishLanguage,'&%TelephoneHandset is the part of the &%Telephone that has a &%Earphone and a &%Microphone for the transmission and reception of sound') ).

fof(kb_SUMO_15808,axiom,
    s__termFormat(s__EnglishLanguage,s__TelephoneHandset,'telephone handset') ).

fof(kb_SUMO_15809,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__TelephoneHandset)
       => ? [V__EARPHONE,V__MIC] :
            ( s__instance(V__MIC,s__Object)
            & s__instance(V__EARPHONE,s__Object)
            & s__instance(V__EARPHONE,s__Earphone)
            & s__instance(V__MIC,s__Microphone)
            & s__part(V__EARPHONE,V__X)
            & s__part(V__MIC,V__X) ) ) ) ).

fof(kb_SUMO_15810,axiom,
    s__subclass(s__FireAlarm,s__Device) ).

fof(kb_SUMO_15811,axiom,
    s__instance(s__FireAlarm__t,s__SetOrClass) ).

fof(kb_SUMO_15812,axiom,
    s__documentation(s__FireAlarm,s__EnglishLanguage,'&%FireAlarm is a &%Device that releases a distinctive noise to inform people that there is a &%Fire') ).

fof(kb_SUMO_15813,axiom,
    s__termFormat(s__EnglishLanguage,s__FireAlarm,'fire alarm') ).

fof(kb_SUMO_15814,axiom,
    ! [V__X,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__X,s__Object) )
     => ( ( s__instance(V__X,s__FireAlarm)
          & s__attribute(V__X,s__DeviceOn)
          & s__located(V__X,V__LOC) )
       => ? [V__RS] :
            ( s__instance(V__RS,s__RadiatingSound)
            & s__instrument(V__RS,V__X)
            & s__hasPurpose(V__RS,'(? [V__GRP] : (s__instance(V__GRP,s__GroupOfPeople) & s__located(V__GRP,V__LOC) & s__knows(V__GRP,(? [V__FIRE] : (s__instance(V__FIRE,s__Process) & s__instance(V__GRP,s__CognitiveAgent) & s__instance(V__RS,s__Process) & s__instance(V__FIRE,s__Fire) & s__eventLocated(V__FIRE,V__LOC))))))') ) ) ) ).

fof(kb_SUMO_15815,axiom,
    s__subclass(s__GrabBar,s__Artifact) ).

fof(kb_SUMO_15816,axiom,
    s__instance(s__GrabBar__t,s__SetOrClass) ).

fof(kb_SUMO_15817,axiom,
    s__documentation(s__GrabBar,s__EnglishLanguage,'&%GrabBar is a bar attached to a &%Wall to provide a handgrip for steadying yourself') ).

fof(kb_SUMO_15818,axiom,
    s__termFormat(s__EnglishLanguage,s__GrabBar,'grab bar') ).

fof(kb_SUMO_15819,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__GrabBar)
       => ( ? [V__WALL] :
              ( s__instance(V__WALL,s__Object)
              & s__instance(V__WALL,s__Wall)
              & s__connected(V__X,V__WALL) )
          & s__hasPurpose(V__X,'(? [V__GRAB] : (s__instance(V__GRAB,s__Process) & s__instance(V__GRAB,s__Grabbing) & s__instrument(V__GRAB,V__X)))') ) ) ) ).

fof(kb_SUMO_15820,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__GrabBar)
     => s__modalAttribute('(? [V__HUMAN] : (s__instance(V__HUMAN,s__CognitiveAgent) & s__attribute(V__HUMAN,s__PhysicalDisability) & s__inScopeOfInterest(V__HUMAN,V__X)))',s__Likely) ) ).

fof(kb_SUMO_15821,axiom,
    s__subclass(s__HighRise,s__Building) ).

fof(kb_SUMO_15822,axiom,
    s__instance(s__HighRise__t,s__SetOrClass) ).

fof(kb_SUMO_15823,axiom,
    s__documentation(s__HighRise,s__EnglishLanguage,'&%HighRise refers to a type of &%Building that has greater than 10 &%BuildingLevel') ).

fof(kb_SUMO_15824,axiom,
    s__termFormat(s__EnglishLanguage,s__HighRise,'high rise') ).

fof(kb_SUMO_15825,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__HighRise)
     => ? [V__LEVELS,V__NUM] :
          ( s__instance(V__NUM,s__Integer)
          & s__instance(V__LEVELS,s__Collection)
          & ! [V__FLR] :
              ( ( s__instance(V__FLR,s__SelfConnectedObject)
                & s__instance(V__X,s__Object) )
             => ( ( s__instance(V__FLR,s__BuildingLevel)
                  & s__part(V__FLR,V__X) )
               => s__member(V__FLR,V__LEVELS) ) )
          & s__memberCount(V__LEVELS,V__NUM)
          & greatereq(V__NUM,"10") ) ) ).

fof(kb_SUMO_15826,axiom,
    s__subclass(s__Soaking,s__Wetting) ).

fof(kb_SUMO_15827,axiom,
    s__instance(s__Soaking__t,s__SetOrClass) ).

fof(kb_SUMO_15828,axiom,
    s__documentation(s__Soaking,s__EnglishLanguage,'&%Soaking refers to the process of &%Wetting wherein an &%Object is &%Surrounded by &%Water') ).

fof(kb_SUMO_15829,axiom,
    s__termFormat(s__EnglishLanguage,s__Soaking,soaking) ).

%FOL fof(kb_SUMO_15830,axiom,(( (! [V__SOAK] : ((s__instance(V__SOAK,s__Process) & s__instance(V__SOAK,s__TimePosition)) => (s__instance(V__SOAK,s__Soaking) => (? [V__WATER,V__OBJ] : (s__instance(V__WATER,s__Object) & s__instance(V__OBJ,s__Object) & s__patient(V__SOAK,V__OBJ) & s__instance(V__WATER,s__Water) & s__resource(V__SOAK,V__WATER) & s__holdsDuring(V__SOAK,'s__orientation(V__OBJ,V__WATER,s__Surrounded)')))))) ))).

fof(kb_SUMO_15831,axiom,
    s__subclass(s__GrecianTub,s__BathTub) ).

fof(kb_SUMO_15832,axiom,
    s__instance(s__GrecianTub__t,s__SetOrClass) ).

fof(kb_SUMO_15833,axiom,
    s__instance(s__BathTub__t,s__SetOrClass) ).

fof(kb_SUMO_15834,axiom,
    s__documentation(s__GrecianTub,s__EnglishLanguage,'&%GrecianTub is a combination of soaking tubs and standard tubs, meaning it has inreased depth for soaking, but can fit into tight spaces by not being as long as standard tubs') ).

fof(kb_SUMO_15835,axiom,
    s__termFormat(s__EnglishLanguage,s__GrecianTub,'grecian tub') ).

fof(kb_SUMO_15836,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__GrecianTub)
       => s__hasPurpose(V__X,'(? [V__HUMAN,V__SOAK] : (s__instance(V__SOAK,s__Process) & s__instance(V__HUMAN,s__Agent) & s__instance(V__SOAK,s__Soaking) & s__instance(V__HUMAN,s__Human) & s__agent(V__SOAK,V__HUMAN) & s__patient(V__SOAK,V__HUMAN) & s__eventLocated(V__SOAK,V__X)))') ) ) ).

fof(kb_SUMO_15837,axiom,
    s__subclass(s__HemisphereFigure,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_15838,axiom,
    s__instance(s__HemisphereFigure__t,s__SetOrClass) ).

fof(kb_SUMO_15839,axiom,
    s__documentation(s__HemisphereFigure,s__EnglishLanguage,'&%HemisphereFigure describes a figure that is half of a &%Sphere') ).

fof(kb_SUMO_15840,axiom,
    s__termFormat(s__EnglishLanguage,s__HemisphereFigure,hemisphere) ).

fof(kb_SUMO_15841,axiom,
    ! [V__HEMI,V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__HEMI,s__Attribute)
        & s__instance(V__HEMI,s__Object) )
     => ( ( s__attribute(V__X,V__HEMI)
          & s__instance(V__HEMI,s__HemisphereFigure) )
       => ? [V__Y] :
            ( s__instance(V__Y,s__Object)
            & s__instance(V__Y,s__Sphere)
            & s__half(V__HEMI,V__Y) ) ) ) ).

fof(kb_SUMO_15842,axiom,
    s__subclass(s__Dome,s__Ceiling) ).

fof(kb_SUMO_15843,axiom,
    s__instance(s__Dome__t,s__SetOrClass) ).

fof(kb_SUMO_15844,axiom,
    s__instance(s__Ceiling__t,s__SetOrClass) ).

fof(kb_SUMO_15845,axiom,
    s__documentation(s__Dome,s__EnglishLanguage,'&%Dome is a type of &%Ceiling with a &%HemisphereFigure shape') ).

fof(kb_SUMO_15846,axiom,
    s__termFormat(s__EnglishLanguage,s__Dome,dome) ).

fof(kb_SUMO_15847,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Dome)
       => ? [V__HEMI] :
            ( s__instance(V__HEMI,s__Attribute)
            & s__attribute(V__X,V__HEMI)
            & s__instance(V__HEMI,s__HemisphereFigure) ) ) ) ).

fof(kb_SUMO_15848,axiom,
    s__instance(s__Historical,s__RelationalAttribute) ).

fof(kb_SUMO_15849,axiom,
    s__documentation(s__Historical,s__EnglishLanguage,'&%Historical describes something that was important in &%History') ).

fof(kb_SUMO_15850,axiom,
    s__termFormat(s__EnglishLanguage,s__Historical,historical) ).

fof(kb_SUMO_15851,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Historical)
       => s__instance(V__X,s__Physical) ) ) ).

fof(kb_SUMO_15852,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Historical)
       => s__refers(s__History,V__X) ) ) ).

fof(kb_SUMO_15853,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( ( s__attribute(V__X,s__Historical)
          & s__instance(V__X,s__City) )
       => ? [V__EV] :
            ( s__instance(V__EV,s__Object)
            & s__instance(V__EV,s__Process)
            & s__instance(V__EV,s__Physical)
            & s__attribute(V__EV,s__Historical)
            & s__eventLocated(V__EV,V__X) ) ) ) ).

fof(kb_SUMO_15854,axiom,
    s__instance(s__Rural,s__RelationalAttribute) ).

fof(kb_SUMO_15855,axiom,
    s__documentation(s__Rural,s__EnglishLanguage,'&%Rural describes that is characteristic of country life as opposed to the city life') ).

fof(kb_SUMO_15856,axiom,
    s__termFormat(s__EnglishLanguage,s__Rural,rural) ).

fof(kb_SUMO_15857,axiom,
    s__instance(s__Suburban,s__RelationalAttribute) ).

fof(kb_SUMO_15858,axiom,
    s__documentation(s__Suburban,s__EnglishLanguage,'&%Suburban describes something that is characteristic of a residential district on the outskirts of a city') ).

fof(kb_SUMO_15859,axiom,
    s__termFormat(s__EnglishLanguage,s__Suburban,suburban) ).

fof(kb_SUMO_15860,axiom,
    s__instance(s__Urban,s__RelationalAttribute) ).

fof(kb_SUMO_15861,axiom,
    s__documentation(s__Urban,s__EnglishLanguage,'&%Urban describes something that is characteristic of a city or city life') ).

fof(kb_SUMO_15862,axiom,
    s__termFormat(s__EnglishLanguage,s__Urban,urban) ).

fof(kb_SUMO_15863,axiom,
    s__subclass(s__Patio,s__Region) ).

fof(kb_SUMO_15864,axiom,
    s__documentation(s__Patio,s__EnglishLanguage,'&%Patio refers to an &%Region adjoining a building, usually &%Paved, that is used for outdoor activities') ).

fof(kb_SUMO_15865,axiom,
    s__termFormat(s__EnglishLanguage,s__Patio,patio) ).

%FOL fof(kb_SUMO_15866,axiom,(( (! [V__X] : (s__instance(V__X,s__Object) => (s__instance(V__X,s__Patio) => (s__modalAttribute('s__attribute(V__X,s__Paved)',s__Likely) & (? [V__BLDG] : (s__instance(V__BLDG,s__Object) & s__instance(V__BLDG,s__Building) & s__orientation(V__X,V__BLDG,s__Adjacent) & s__located(V__X,s__Outdoors))))))) ))).

fof(kb_SUMO_15867,axiom,
    s__subclass(s__Lanai,s__Patio) ).

fof(kb_SUMO_15868,axiom,
    s__instance(s__Lanai__t,s__SetOrClass) ).

fof(kb_SUMO_15869,axiom,
    s__instance(s__Patio__t,s__SetOrClass) ).

fof(kb_SUMO_15870,axiom,
    s__subclass(s__Lanai,s__StationaryArtifact) ).

fof(kb_SUMO_15871,axiom,
    s__documentation(s__Lanai,s__EnglishLanguage,'&%Lanai refers to a roofed outdoor area %&Adjacent to a &%Building often furnished and used as a living room') ).

fof(kb_SUMO_15872,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Lanai)
       => ? [V__ROOF] :
            ( s__instance(V__ROOF,s__Roof)
            & s__part(V__ROOF,V__X)
            & s__modalAttribute('(? [V__AREA] : (s__instance(V__AREA,s__Physical) & s__instance(V__ROOF,s__Object) & s__instance(V__AREA,s__SittingArea) & s__located(V__AREA,V__X)))',s__Likely) ) ) ) ).

fof(kb_SUMO_15873,axiom,
    s__instance(s__hasUniform__m,s__BinaryPredicate) ).

fof(kb_SUMO_15874,axiom,
    s__documentation(s__hasUniform__m,s__EnglishLanguage,'(&%hasUniform ?GRP ?UNIFORM) means that ?GRP is associated or identified by ?UNIFORM and members of ?GRP are expected to wear ?UNIFORM') ).

fof(kb_SUMO_15875,axiom,
    s__termFormat(s__EnglishLanguage,s__hasUniform__m,'has uniform') ).

fof(kb_SUMO_15876,axiom,
    s__domain(s__hasUniform__m,"1",s__Group) ).

fof(kb_SUMO_15877,axiom,
    s__domainSubclass(s__hasUniform__m,"2",s__UniformClothing) ).

fof(kb_SUMO_15878,axiom,
    ! [V__GRP,V__UNIFORM] :
      ( ( s__subclass(V__UNIFORM,s__UniformClothing)
        & s__instance(V__UNIFORM,s__SetOrClass)
        & s__instance(V__GRP,s__Group) )
     => ( s__hasUniform(V__GRP,V__UNIFORM)
       => s__modalAttribute('(? [V__PERS,V__CLOTHING,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__CLOTHING,s__WearableItem) & s__instance(V__PERS,s__Animal) & s__member(V__PERS,V__GRP) & s__instance(V__CLOTHING,V__UNIFORM) & s__holdsDuring(V__TIME,s__wears(V__PERS,V__CLOTHING))))',s__Likely) ) ) ).

fof(kb_SUMO_15879,axiom,
    s__subclass(s__UniformClothing,s__Clothing) ).

fof(kb_SUMO_15880,axiom,
    s__instance(s__UniformClothing__t,s__SetOrClass) ).

fof(kb_SUMO_15881,axiom,
    s__documentation(s__UniformClothing,s__EnglishLanguage,'&%UniformClothing is a type of clothing with a distinctive design worn by members of a particular group as a means of identification') ).

fof(kb_SUMO_15882,axiom,
    s__termFormat(s__EnglishLanguage,s__UniformClothing,uniform) ).

fof(kb_SUMO_15883,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__SetOrClass)
     => ( s__subclass(V__X,s__UniformClothing)
       => ? [V__GRP] :
            ( s__instance(V__GRP,s__Group)
            & s__hasUniform(V__GRP,V__X) ) ) ) ).

fof(kb_SUMO_15884,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__UniformClothing)
     => ? [V__PROC,V__DESIGN] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__IntentionalProcess)
          & s__result(V__PROC,V__DESIGN)
          & s__represents(V__X,V__DESIGN) ) ) ).

fof(kb_SUMO_15885,axiom,
    s__subclass(s__Tripod,s__Device) ).

fof(kb_SUMO_15886,axiom,
    s__instance(s__Tripod__t,s__SetOrClass) ).

fof(kb_SUMO_15887,axiom,
    s__documentation(s__Tripod,s__EnglishLanguage,'&%Tripod refers to a &%Device with 3 legs to support some other &%Object') ).

fof(kb_SUMO_15888,axiom,
    s__termFormat(s__EnglishLanguage,s__Tripod,tripod) ).

fof(kb_SUMO_15889,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Tripod)
       => ? [V__LEG1,V__LEG2,V__LEG3] :
            ( s__instance(V__LEG3,s__Object)
            & s__instance(V__LEG2,s__Object)
            & s__instance(V__LEG1,s__Object)
            & s__part(V__LEG1,V__X)
            & s__part(V__LEG2,V__X)
            & s__part(V__LEG3,V__X)
            & s__meetsSpatially(V__LEG1,V__LEG2)
            & s__meetsSpatially(V__LEG2,V__LEG3)
            & s__meetsSpatially(V__LEG1,V__LEG3) ) ) ) ).

fof(kb_SUMO_15890,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Physical)
     => ( s__instance(V__X,s__Tripod)
       => s__hasPurpose(V__X,'(? [V__OBJ,V__PUT,V__PROC] : (s__instance(V__PUT,s__Process) & s__instance(V__OBJ,s__Object) & s__instance(V__OBJ,s__Artifact) & s__instance(V__PUT,s__Putting) & s__patient(V__PUT,V__OBJ) & s__destination(V__PUT,V__X) & s__instance(V__PROC,s__Process) & s__instrument(V__PROC,V__OBJ) & s__before(s__EndFn(s__WhenFn(V__PUT)),s__BeginFn(s__WhenFn(V__PROC)))))') ) ) ).

fof(kb_SUMO_15891,axiom,
    s__subclass(s__Easel,s__Tripod) ).

fof(kb_SUMO_15892,axiom,
    s__instance(s__Easel__t,s__SetOrClass) ).

fof(kb_SUMO_15893,axiom,
    s__documentation(s__Easel,s__EnglishLanguage,'&%Easel is a type of &%Tripod that supports a flat object such as a canvas or a flipboard') ).

fof(kb_SUMO_15894,axiom,
    s__termFormat(s__EnglishLanguage,s__Easel,easel) ).

fof(kb_SUMO_15895,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Physical)
     => ( s__instance(V__X,s__Easel)
       => s__hasPurpose(V__X,'(? [V__OBJ,V__PUT] : (s__instance(V__PUT,s__Process) & s__instance(V__OBJ,s__Object) & s__instance(V__OBJ,s__Artifact) & s__attribute(V__OBJ,s__Flat) & s__instance(V__PUT,s__Putting) & s__patient(V__PUT,V__OBJ) & s__destination(V__PUT,V__X)))') ) ) ).

fof(kb_SUMO_15896,axiom,
    s__subclass(s__Solarium,s__Room) ).

fof(kb_SUMO_15897,axiom,
    s__instance(s__Solarium__t,s__SetOrClass) ).

fof(kb_SUMO_15898,axiom,
    s__documentation(s__Solarium,s__EnglishLanguage,'&%Solarium is a type of &%Room part of which is made with &%Transparent material like glass to afford exposure to the sun.') ).

fof(kb_SUMO_15899,axiom,
    s__termFormat(s__EnglishLanguage,s__Solarium,solarium) ).

fof(kb_SUMO_15900,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Solarium)
       => ? [V__WALL] :
            ( s__instance(V__WALL,s__Object)
            & s__instance(V__WALL,s__Wall)
            & s__part(V__WALL,V__X)
            & s__attribute(V__WALL,s__Transparent) ) ) ) ).

fof(kb_SUMO_15901,axiom,
    s__subclass(s__ExerciseCenter,s__SportsFacility) ).

fof(kb_SUMO_15902,axiom,
    s__instance(s__ExerciseCenter__t,s__SetOrClass) ).

fof(kb_SUMO_15903,axiom,
    s__documentation(s__ExerciseCenter,s__EnglishLanguage,'&%ExerciseCenter refers to a type of &%SportsFacility that has equipment and services for physical training and keeping fit') ).

fof(kb_SUMO_15904,axiom,
    s__termFormat(s__EnglishLanguage,s__ExerciseCenter,'exercise center') ).

fof(kb_SUMO_15905,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__ExerciseCenter)
       => s__hasPurpose(V__X,'(? [V__DEVICE] : (s__instance(V__DEVICE,s__Physical) & (s__instance(V__DEVICE,s__AerobicExerciseDevice) | s__instance(V__DEVICE,s__AnaerobicExerciseDevice)) & s__located(V__DEVICE,V__X)))') ) ) ).

fof(kb_SUMO_15906,axiom,
    s__subclass(s__GameRoom,s__Room) ).

fof(kb_SUMO_15907,axiom,
    s__instance(s__GameRoom__t,s__SetOrClass) ).

fof(kb_SUMO_15908,axiom,
    s__documentation(s__GameRoom,s__EnglishLanguage,'&%GameRoom refers to a type of &%Room that have facilities for &%Game that can be played') ).

fof(kb_SUMO_15909,axiom,
    s__termFormat(s__EnglishLanguage,s__GameRoom,'game room') ).

fof(kb_SUMO_15910,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__GameRoom)
       => s__hasPurpose(V__X,'(? [V__GAME] : (s__instance(V__GAME,s__Process) & s__instance(V__GAME,s__Game) & s__eventLocated(V__GAME,V__X)))') ) ) ).

fof(kb_SUMO_15911,axiom,
    s__subclass(s__Nursery,s__Room) ).

fof(kb_SUMO_15912,axiom,
    s__instance(s__Nursery__t,s__SetOrClass) ).

fof(kb_SUMO_15913,axiom,
    s__documentation(s__Nursery,s__EnglishLanguage,'&%Nursery refers to a &%Room for babies') ).

fof(kb_SUMO_15914,axiom,
    s__termFormat(s__EnglishLanguage,s__Nursery,nursery) ).

fof(kb_SUMO_15915,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__Nursery)
       => ? [V__CRIB] :
            ( s__instance(V__CRIB,s__Physical)
            & s__instance(V__CRIB,s__Crib)
            & s__located(V__CRIB,V__X) ) ) ) ).

fof(kb_SUMO_15916,axiom,
    s__subclass(s__SteamBath,s__Room) ).

fof(kb_SUMO_15917,axiom,
    s__instance(s__SteamBath__t,s__SetOrClass) ).

fof(kb_SUMO_15918,axiom,
    s__documentation(s__SteamBath,s__EnglishLanguage,'&%SteamBath refers to a room that is filled with &%Steam in order to make people sweat') ).

fof(kb_SUMO_15919,axiom,
    s__termFormat(s__EnglishLanguage,s__SteamBath,'steam bath') ).

fof(kb_SUMO_15920,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__SteamBath)
       => ? [V__STEAM] :
            ( s__instance(V__STEAM,s__Physical)
            & s__instance(V__STEAM,s__Steam)
            & s__located(V__STEAM,V__X) ) ) ) ).

fof(kb_SUMO_15921,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__SteamBath)
       => s__hasPurpose(V__X,'(? [V__BATH] : (s__instance(V__BATH,s__Process) & s__instance(V__BATH,s__Bathing) & s__eventLocated(V__BATH,V__X)))') ) ) ).

fof(kb_SUMO_15922,axiom,
    s__subclass(s__HeatedPool,s__SwimmingPool) ).

fof(kb_SUMO_15923,axiom,
    s__instance(s__HeatedPool__t,s__SetOrClass) ).

fof(kb_SUMO_15924,axiom,
    s__documentation(s__HeatedPool,s__EnglishLanguage,'&%HeatedPool is a type of &%SwimmingPool that has &%HotWaterHeater so that the &%Water in the pool is constantly kept at a certain warm temperature') ).

fof(kb_SUMO_15925,axiom,
    s__termFormat(s__EnglishLanguage,s__HeatedPool,'heated pool') ).

fof(kb_SUMO_15926,axiom,
    ! [V__X,V__HEATER,V__WATER] :
      ( ( s__instance(V__WATER,s__Object)
        & s__instance(V__HEATER,s__Object)
        & s__instance(V__X,s__SelfConnectedObject) )
     => ( ( s__instance(V__X,s__HeatedPool)
          & s__contains(V__X,V__WATER)
          & s__instance(V__WATER,s__Water)
          & s__part(V__X,V__HEATER)
          & s__instance(V__HEATER,s__WaterHeater)
          & s__attribute(V__HEATER,s__DeviceOn) )
       => s__attribute(V__WATER,s__WarmTemperature) ) ) ).

fof(kb_SUMO_15927,axiom,
    s__subclass(s__RoomHeater,s__HeatingDevice) ).

fof(kb_SUMO_15928,axiom,
    s__instance(s__RoomHeater__t,s__SetOrClass) ).

fof(kb_SUMO_15929,axiom,
    s__documentation(s__RoomHeater,s__EnglishLanguage,'&%RoomHeater is a type of &%HeatingDevice that heats the air in a confined space') ).

fof(kb_SUMO_15930,axiom,
    s__termFormat(s__EnglishLanguage,s__RoomHeater,'room heater') ).

fof(kb_SUMO_15931,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__RoomHeater)
       => s__hasPurpose(V__X,'(? [V__AIR,V__HEATING,V__ROOM] : (s__instance(V__ROOM,s__Object) & s__instance(V__HEATING,s__Process) & s__instance(V__AIR,s__Physical) & s__instance(V__AIR,s__Air) & s__instance(V__ROOM,s__Room) & s__located(V__AIR,V__ROOM) & s__instance(V__HEATING,s__Heating) & s__patient(V__HEATING,V__AIR) & s__instrument(V__HEATING,V__X)))') ) ) ).

fof(kb_SUMO_15932,axiom,
    s__subclass(s__DanceHall,s__StationaryArtifact) ).

fof(kb_SUMO_15933,axiom,
    s__documentation(s__DanceHall,s__EnglishLanguage,'&%DanceHall is a &%StationaryArtifact equipped with floors amenable to &%Dancing and devices that blare out &%MakingMusic') ).

fof(kb_SUMO_15934,axiom,
    s__termFormat(s__EnglishLanguage,s__DanceHall,'dance hall') ).

fof(kb_SUMO_15935,axiom,
    ! [V__DISCO] :
      ( s__instance(V__DISCO,s__Object)
     => ( s__instance(V__DISCO,s__DanceHall)
       => s__hasPurpose(V__DISCO,'(? [V__DANCE,V__MUSIC] : (s__instance(V__MUSIC,s__Process) & s__instance(V__DANCE,s__Process) & s__instance(V__MUSIC,s__MakingMusic) & s__instance(V__DANCE,s__Dancing) & s__cooccur(V__MUSIC,V__DANCE) & s__eventLocated(V__MUSIC,V__DISCO) & s__eventLocated(V__DANCE,V__DISCO)))') ) ) ).

fof(kb_SUMO_15936,axiom,
    s__subclass(s__NightClub,s__DanceHall) ).

fof(kb_SUMO_15937,axiom,
    s__instance(s__NightClub__t,s__SetOrClass) ).

fof(kb_SUMO_15938,axiom,
    s__instance(s__DanceHall__t,s__SetOrClass) ).

fof(kb_SUMO_15939,axiom,
    s__documentation(s__NightClub,s__EnglishLanguage,'&%NightClub is a type of &%DanceHall that typically opens at &%NightTime and has a &%Tavern located in it') ).

fof(kb_SUMO_15940,axiom,
    s__termFormat(s__EnglishLanguage,s__NightClub,'night club') ).

fof(kb_SUMO_15941,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__NightClub)
       => ? [V__BAR] :
            ( s__instance(V__BAR,s__Physical)
            & s__instance(V__BAR,s__Tavern)
            & s__located(V__BAR,V__X) ) ) ) ).

fof(kb_SUMO_15942,axiom,
    s__subclass(s__ScubaDiving,s__Swimming) ).

fof(kb_SUMO_15943,axiom,
    s__instance(s__ScubaDiving__t,s__SetOrClass) ).

fof(kb_SUMO_15944,axiom,
    s__documentation(s__ScubaDiving,s__EnglishLanguage,'&%ScubaDiving is &%Swimming &%Below a &%WaterArea with the aid of some &%Device to help in &%Breathing') ).

fof(kb_SUMO_15945,axiom,
    s__termFormat(s__EnglishLanguage,s__ScubaDiving,'scuba diving') ).

fof(kb_SUMO_15946,axiom,
    ! [V__SCUBA] :
      ( ( s__instance(V__SCUBA,s__Object)
        & s__instance(V__SCUBA,s__Process) )
     => ( s__instance(V__SCUBA,s__ScubaDiving)
       => ? [V__WATER,V__DEVICE,V__BREATH] :
            ( s__instance(V__BREATH,s__Process)
            & s__instance(V__DEVICE,s__Object)
            & s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__orientation(V__SCUBA,V__WATER,s__Below)
            & s__instance(V__DEVICE,s__Device)
            & s__instance(V__BREATH,s__Breathing)
            & s__instrument(V__BREATH,V__DEVICE)
            & s__subProcess(V__BREATH,V__SCUBA) ) ) ) ).

fof(kb_SUMO_15947,axiom,
    s__instance(s__AmericansWithDisabilitiesAct,s__Proposition) ).

fof(kb_SUMO_15948,axiom,
    s__documentation(s__AmericansWithDisabilitiesAct,s__EnglishLanguage,'The &%AmericansWithDisabilitiesAct is a &%Proposition promulgated by the US Employment Opportunity Commission to give civil right protections to individuals with &%Disability similar to those provided to individuals on the basis of race, color, sex, national origin, age and religion. It guarantees equal opportunities for individuals with &%Disability in public accommodation, employment, transportation, State and local government services and telecommunications') ).

fof(kb_SUMO_15949,axiom,
    s__termFormat(s__EnglishLanguage,s__AmericansWithDisabilitiesAct,'ADA') ).

fof(kb_SUMO_15950,axiom,
    s__subrelation(s__conforms__m,s__represents__m) ).

fof(kb_SUMO_15951,axiom,
    s__documentation(s__conforms__m,s__EnglishLanguage,'(&%conforms ?OBJ ?PROP) describes how ?OBJ follows the ideas outlined by ?PROP') ).

fof(kb_SUMO_15952,axiom,
    s__termFormat(s__EnglishLanguage,s__conforms__m,conforms) ).

fof(kb_SUMO_15953,axiom,
    s__domain(s__conforms__m,"1",s__Object) ).

fof(kb_SUMO_15954,axiom,
    s__domain(s__conforms__m,"2",s__Proposition) ).

fof(kb_SUMO_15955,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__conforms(V__OBJ,s__AmericansWithDisabilitiesAct)
       => s__attribute(V__OBJ,s__HandicappedFriendly) ) ) ).

fof(kb_SUMO_15956,axiom,
    s__instance(s__USFEMA,s__GovernmentOrganization) ).

fof(kb_SUMO_15957,axiom,
    s__documentation(s__USFEMA,s__EnglishLanguage,'&%USFEMA, which stands for Federal Emergency Management Agency, is a &%GovernmentOrganization in charge of disaster mitigation, preparedness, response, recovery, education and references') ).

fof(kb_SUMO_15958,axiom,
    s__termFormat(s__EnglishLanguage,s__USFEMA,fema) ).

fof(kb_SUMO_15959,axiom,
    s__subrelation(s__approves__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_15960,axiom,
    s__documentation(s__approves__m,s__EnglishLanguage,'(&%approves ?AGENT1 ?AGENT2) means that ?AGENT1 is satisfied that ?AGENT2 has met some requirement or proposition, and publicly declares such') ).

fof(kb_SUMO_15961,axiom,
    s__termFormat(s__EnglishLanguage,s__approves__m,approves) ).

fof(kb_SUMO_15962,axiom,
    s__domain(s__approves__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_15963,axiom,
    s__domain(s__approves__m,"2",s__CognitiveAgent) ).

%FOL fof(kb_SUMO_15964,axiom,(( (! [V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__CognitiveAgent) & s__instance(V__AGENT2,s__CognitiveAgent)) => (s__approves(V__AGENT1,V__AGENT2) => (? [V__PROP] : (s__instance(V__PROP,s__Proposition) & s__believes(V__AGENT1,'s__conforms(V__AGENT2,V__PROP)')))))) ))).

fof(kb_SUMO_15965,axiom,
    s__subclass(s__WetBar,s__Artifact) ).

fof(kb_SUMO_15966,axiom,
    s__instance(s__WetBar__t,s__SetOrClass) ).

fof(kb_SUMO_15967,axiom,
    s__documentation(s__WetBar,s__EnglishLanguage,'&%WetBar is a place for preparing food and beverage that has a sink with running water') ).

fof(kb_SUMO_15968,axiom,
    s__termFormat(s__EnglishLanguage,s__WetBar,'wet bar') ).

fof(kb_SUMO_15969,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__instance(V__X,s__WetBar)
       => ? [V__SINK,V__OBJ] :
            ( s__instance(V__SINK,s__WashBasin)
            & s__part(V__SINK,V__X)
            & s__instance(V__OBJ,s__Object)
            & s__attribute(V__OBJ,s__Flat)
            & s__hasPurpose(V__OBJ,'(? [V__PREP,V__FOOD] : (s__instance(V__PREP,s__Process) & s__instance(V__OBJ,s__Object) & s__instance(V__SINK,s__Object) & s__instance(V__PREP,s__Making) & s__result(V__PREP,V__FOOD) & (s__instance(V__FOOD,s__PreparedFood) | s__instance(V__FOOD,s__Beverage)) & s__eventLocated(V__PREP,V__OBJ)))')
            & s__part(V__OBJ,V__X) ) ) ) ).

fof(kb_SUMO_15970,axiom,
    s__subclass(s__SurveillanceSystem,s__Collection) ).

fof(kb_SUMO_15971,axiom,
    s__instance(s__SurveillanceSystem__t,s__SetOrClass) ).

fof(kb_SUMO_15972,axiom,
    s__documentation(s__SurveillanceSystem,s__EnglishLanguage,'&%SurveillanceSystem is a &%Collection of devices that work together to provide security by recording sound or video in a certain location and showing it instantly to people, presumably a &%SecurityUnit') ).

fof(kb_SUMO_15973,axiom,
    s__termFormat(s__EnglishLanguage,s__SurveillanceSystem,'surveillance system') ).

fof(kb_SUMO_15974,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Collection)
     => ( s__instance(V__X,s__SurveillanceSystem)
       => ( s__memberType(V__X,s__Camera)
          & s__memberType(V__X,s__VideoDisplay) ) ) ) ).

fof(kb_SUMO_15975,axiom,
    ! [V__VIDEO,V__X,V__LOC1,V__LOC2,V__DISPLAY] :
      ( ( s__instance(V__DISPLAY,s__Collection)
        & s__instance(V__LOC2,s__Object)
        & s__instance(V__LOC1,s__Object)
        & s__instance(V__X,s__SelfConnectedObject)
        & s__instance(V__VIDEO,s__Collection) )
     => ( ( s__instance(V__X,s__SurveillanceSystem)
          & s__member(V__X,V__VIDEO)
          & s__member(V__X,V__DISPLAY)
          & s__located(V__VIDEO,V__LOC1)
          & s__instance(V__VIDEO,s__Camera)
          & s__located(V__DISPLAY,V__LOC2)
          & V__LOC1 != V__LOC2
          & s__instance(V__DISPLAY,s__VideoDisplay) )
       => s__hasPurpose(V__X,'(? [V__PROC,V__VID,V__RL,V__CAPTURE] : (s__instance(V__CAPTURE,s__Process) & s__instance(V__CAPTURE,s__TimeInterval) & s__instance(V__RL,s__Process) & s__instance(V__RL,s__TimeInterval) & s__instance(V__PROC,s__TimeInterval) & s__instance(V__PROC,s__Process) & s__eventLocated(V__PROC,V__LOC1) & s__represents(V__VID,V__PROC) & s__instrument(V__CAPTURE,s__Camera) & s__result(V__CAPTURE,V__VID) & s__instance(V__RL,s__RadiatingLight) & s__instrument(V__RL,V__DISPLAY) & s__patient(V__RL,V__VID) & s__before(s__BeginFn(V__PROC),s__BeginFn(V__CAPTURE)) & s__before(s__BeginFn(V__CAPTURE),s__BeginFn(V__RL))))') ) ) ).

fof(kb_SUMO_15976,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__CognitiveAgent)
     => ( s__instance(V__X,s__SecurityUnit)
       => s__modalAttribute('(? [V__S] : (s__instance(V__S,s__SurveillanceSystem) & s__inScopeOfInterest(V__X,V__S)))',s__Likely) ) ) ).

fof(kb_SUMO_15977,axiom,
    s__subclass(s__ArtifactMediatedCommunication,s__Communication) ).

fof(kb_SUMO_15978,axiom,
    s__instance(s__ArtifactMediatedCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_15979,axiom,
    s__documentation(s__ArtifactMediatedCommunication,s__EnglishLanguage,'&%ArtifactMediatedCommunication refers to &%Communication that uses some &%Artifact as an &%instrument or &%path for the &%Transfer of messages or information') ).

fof(kb_SUMO_15980,axiom,
    s__termFormat(s__EnglishLanguage,s__ArtifactMediatedCommunication,'artifact mediated communication') ).

fof(kb_SUMO_15981,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__ArtifactMediatedCommunication)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__instance(V__OBJ,s__Artifact)
            & s__instrument(V__X,V__OBJ) ) ) ) ).

fof(kb_SUMO_15982,axiom,
    s__subclass(s__TelephoneCommunication,s__ArtifactMediatedCommunication) ).

fof(kb_SUMO_15983,axiom,
    s__documentation(s__TelephoneCommunication,s__EnglishLanguage,'&%TelephoneCommunication refers to a &%Communication that is done through the use of the &%TelephoneSystem') ).

fof(kb_SUMO_15984,axiom,
    s__termFormat(s__EnglishLanguage,s__TelephoneCommunication,'telephone communication') ).

fof(kb_SUMO_15985,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__TelephoneCommunication)
       => ? [V__TEL1,V__TEL2,V__ORIGIN,V__DEST] :
            ( s__instance(V__DEST,s__ContactSite)
            & s__instance(V__ORIGIN,s__ContactSite)
            & s__instance(V__TEL2,s__Agent)
            & s__instance(V__TEL1,s__Agent)
            & s__origin(V__X,V__ORIGIN)
            & s__destination(V__X,V__DEST)
            & s__siteForContact(V__ORIGIN,V__TEL1)
            & s__siteForContact(V__DEST,V__TEL2)
            & s__instance(V__TEL1,s__Telephone)
            & s__instance(V__TEL2,s__Telephone)
            & s__instrument(V__X,V__TEL1)
            & s__instrument(V__X,V__TEL2) ) ) ) ).

fof(kb_SUMO_15986,axiom,
    s__subclass(s__OperatorAssistedTelephoneCommunication,s__TelephoneCommunication) ).

fof(kb_SUMO_15987,axiom,
    s__instance(s__OperatorAssistedTelephoneCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_15988,axiom,
    s__instance(s__TelephoneCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_15989,axiom,
    s__documentation(s__OperatorAssistedTelephoneCommunication,s__EnglishLanguage,'&%OperatorAssistedTelephoneCommunication refers to &%TelephoneCommunication where an intermediary person connects origin and destination') ).

fof(kb_SUMO_15990,axiom,
    s__termFormat(s__EnglishLanguage,s__OperatorAssistedTelephoneCommunication,'operator assisted telephone communication') ).

fof(kb_SUMO_15991,axiom,
    ! [V__X,V__RESULT] :
      ( s__instance(V__X,s__Process)
     => ( s__instance(V__X,s__OperatorAssistedTelephoneCommunication)
       => ? [V__ORIGIN,V__DEST,V__OPERATOR] :
            ( s__origin(V__X,V__ORIGIN)
            & s__destination(V__X,V__DEST)
            & s__instance(V__OPERATOR,s__Human)
            & s__hasPurpose(V__OPERATOR,'(? [V__PROC] : (s__instance(V__PROC,s__IntentionalProcess) & s__agent(V__PROC,V__OPERATOR) & s__subProcess(V__PROC,V__X) & s__result(V__PROC,V__RESULT) & (V__RESULT = s__modalAttribute((? [V__COMM] : (s__instance(V__COMM,s__Process) & s__instance(V__PROC,s__Process) & s__instance(V__OPERATOR,s__Agent) & s__instance(V__ORIGIN,s__Object) & s__instance(V__COMM,s__Communication) & s__origin(V__COMM,V__ORIGIN) & s__destination(V__COMM,V__DEST))),s__Possibility))))') ) ) ) ).

fof(kb_SUMO_15992,axiom,
    s__subclass(s__DirectDialTelephoneCommunication,s__TelephoneCommunication) ).

fof(kb_SUMO_15993,axiom,
    s__instance(s__DirectDialTelephoneCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_15994,axiom,
    s__documentation(s__DirectDialTelephoneCommunication,s__EnglishLanguage,'&%DirectDialTelephoneCommunication refers to &%TelephoneCommunication where there is no operator that connects origin and destination') ).

fof(kb_SUMO_15995,axiom,
    s__termFormat(s__EnglishLanguage,s__DirectDialTelephoneCommunication,'direct dial telephone communication') ).

fof(kb_SUMO_15996,axiom,
    ! [V__ORIGIN,V__X,V__RESULT,V__DEST] :
      ( ( s__instance(V__X,s__Process)
        & s__instance(V__ORIGIN,s__Object) )
     => ( s__instance(V__X,s__DirectDialTelephoneCommunication)
       => ~ ? [V__OPERATOR] :
              ( s__instance(V__OPERATOR,s__Human)
              & s__hasPurpose(V__OPERATOR,'(? [V__PROC] : (s__instance(V__PROC,s__IntentionalProcess) & s__agent(V__PROC,V__OPERATOR) & s__subProcess(V__PROC,V__X) & s__result(V__PROC,V__RESULT) & (V__RESULT = s__modalAttribute((? [V__COMM] : (s__instance(V__COMM,s__Process) & s__instance(V__PROC,s__Process) & s__instance(V__OPERATOR,s__Agent) & s__instance(V__COMM,s__Communication) & s__origin(V__COMM,V__ORIGIN) & s__destination(V__COMM,V__DEST))),s__Possibility))))') ) ) ) ).

fof(kb_SUMO_15997,axiom,
    s__subclass(s__VoiceMail,s__AudioRecording) ).

fof(kb_SUMO_15998,axiom,
    s__instance(s__VoiceMail__t,s__SetOrClass) ).

fof(kb_SUMO_15999,axiom,
    s__documentation(s__VoiceMail,s__EnglishLanguage,'&%VoiceMail refers to an &%AudioRecording that is done through the &%TelephoneSystem') ).

fof(kb_SUMO_16000,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__VoiceMail)
     => ? [V__TEL] :
          ( s__instance(V__TEL,s__Process)
          & s__instance(V__TEL,s__TelephoneCommunication)
          & s__patient(V__TEL,V__X) ) ) ).

fof(kb_SUMO_16001,axiom,
    s__instance(s__Local,s__RelationalAttribute) ).

fof(kb_SUMO_16002,axiom,
    s__documentation(s__Local,s__EnglishLanguage,'&%Local refers to something within the same region or area') ).

fof(kb_SUMO_16003,axiom,
    s__termFormat(s__EnglishLanguage,s__Local,local) ).

fof(kb_SUMO_16004,axiom,
    ! [V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__X,s__Process) )
     => ( ( s__instance(V__X,s__TelephoneCommunication)
          & s__attribute(V__X,s__Local) )
       => ? [V__TEL1,V__TEL2,V__ORIGIN,V__DEST,V__CODE] :
            ( s__instance(V__CODE,s__SymbolicString)
            & s__instance(V__DEST,s__Agent)
            & s__instance(V__ORIGIN,s__Agent)
            & s__instance(V__TEL2,s__TelecomNumber)
            & s__instance(V__TEL1,s__TelecomNumber)
            & s__origin(V__X,V__ORIGIN)
            & s__destination(V__X,V__DEST)
            & s__telephoneNumber(V__TEL1,V__ORIGIN)
            & s__telephoneNumber(V__TEL2,V__DEST)
            & s__telecomAreaCode(V__CODE,V__TEL1)
            & s__telecomAreaCode(V__CODE,V__TEL2) ) ) ) ).

fof(kb_SUMO_16005,axiom,
    s__instance(s__Domestic,s__RelationalAttribute) ).

fof(kb_SUMO_16006,axiom,
    s__documentation(s__Domestic,s__EnglishLanguage,'&%Domestic refers to something within the same &%Nation') ).

fof(kb_SUMO_16007,axiom,
    s__termFormat(s__EnglishLanguage,s__Domestic,domestic) ).

fof(kb_SUMO_16008,axiom,
    ! [V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__X,s__Process) )
     => ( ( s__instance(V__X,s__TelephoneCommunication)
          & s__attribute(V__X,s__Domestic) )
       => ? [V__ORIGIN,V__DEST,V__COUNTRY] :
            ( s__instance(V__COUNTRY,s__Object)
            & s__instance(V__DEST,s__Physical)
            & s__instance(V__ORIGIN,s__Object)
            & s__origin(V__X,V__ORIGIN)
            & s__destination(V__X,V__DEST)
            & s__located(V__ORIGIN,V__COUNTRY)
            & s__located(V__DEST,V__COUNTRY)
            & s__instance(V__COUNTRY,s__Nation) ) ) ) ).

fof(kb_SUMO_16009,axiom,
    s__instance(s__International,s__RelationalAttribute) ).

fof(kb_SUMO_16010,axiom,
    s__documentation(s__International,s__EnglishLanguage,'&%International refers to something outside of the country') ).

fof(kb_SUMO_16011,axiom,
    s__termFormat(s__EnglishLanguage,s__International,international) ).

fof(kb_SUMO_16012,axiom,
    ! [V__X] :
      ( ( s__instance(V__X,s__Object)
        & s__instance(V__X,s__Process) )
     => ( ( s__instance(V__X,s__TelephoneCommunication)
          & s__attribute(V__X,s__International) )
       => ? [V__ORIGIN,V__DEST,V__CTRY1,V__CTRY2] :
            ( s__instance(V__CTRY2,s__Object)
            & s__instance(V__CTRY1,s__Object)
            & s__instance(V__DEST,s__Physical)
            & s__instance(V__ORIGIN,s__Object)
            & s__origin(V__X,V__ORIGIN)
            & s__destination(V__X,V__DEST)
            & s__located(V__ORIGIN,V__CTRY1)
            & s__located(V__DEST,V__CTRY2)
            & s__instance(V__CTRY1,s__Nation)
            & s__instance(V__CTRY2,s__Nation)
            & V__CTRY1 != V__CTRY2 ) ) ) ).

fof(kb_SUMO_16013,axiom,
    s__instance(s__CommunalAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_16014,axiom,
    s__documentation(s__CommunalAttribute,s__EnglishLanguage,'&%CommunalAttribute describes how an &%Object is shared by many') ).

fof(kb_SUMO_16015,axiom,
    s__termFormat(s__EnglishLanguage,s__CommunalAttribute,communal) ).

fof(kb_SUMO_16016,axiom,
    s__instance(s__PrivateAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_16017,axiom,
    s__documentation(s__PrivateAttribute,s__EnglishLanguage,'&%PrivateAttribute describes how an object is not available to other people without the consent of the current owner') ).

fof(kb_SUMO_16018,axiom,
    ! [V__X] :
      ( s__attribute(V__X,s__CommunalAttribute)
     => s__instance(V__X,s__Object) ) ).

fof(kb_SUMO_16019,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__PrivateAttribute)
       => s__modalAttribute('(~ s__attribute(V__X,s__CommunalAttribute))',s__Likely) ) ) ).

fof(kb_SUMO_16020,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__CommunalAttribute)
       => s__modalAttribute('(~ s__attribute(V__X,s__PrivateAttribute))',s__Likely) ) ) ).

fof(kb_SUMO_16021,axiom,
    s__documentation(s__Policy,s__EnglishLanguage,'&%Policy is (the contents of) a type of &%Declaring created and enforced by an &%Organization such as a government or a business, which contains guiding principles or a plan or course of action adopted by that organization.') ).

fof(kb_SUMO_16022,axiom,
    s__termFormat(s__EnglishLanguage,s__Policy,policy) ).

fof(kb_SUMO_16023,axiom,
    s__subclass(s__Policy,s__Proposition) ).

fof(kb_SUMO_16024,axiom,
    s__instance(s__Policy__t,s__SetOrClass) ).

fof(kb_SUMO_16025,axiom,
    ! [V__POLICY] :
      ( s__instance(V__POLICY,s__Policy)
     => ? [V__ORG] :
          ( s__instance(V__ORG,s__Organization)
          & s__policyOwner(V__ORG,V__POLICY) ) ) ).

fof(kb_SUMO_16026,axiom,
    s__instance(s__policyOwner__m,s__BinaryPredicate) ).

fof(kb_SUMO_16027,axiom,
    s__documentation(s__policyOwner__m,s__EnglishLanguage,'(&%policyOwner ?&%Organization ?&%Policy) describes how ?&%Policy is adopted and enforced by ?&%Organization') ).

fof(kb_SUMO_16028,axiom,
    s__termFormat(s__EnglishLanguage,s__policyOwner__m,'policy owner') ).

fof(kb_SUMO_16029,axiom,
    s__domain(s__policyOwner__m,"1",s__Organization) ).

fof(kb_SUMO_16030,axiom,
    s__domain(s__policyOwner__m,"2",s__Policy) ).

fof(kb_SUMO_16031,axiom,
    ! [V__POLICY,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Organization)
        & s__instance(V__POLICY,s__Policy) )
     => ( s__policyOwner(V__AGENT,V__POLICY)
       => ? [V__CREATE] :
            ( s__instance(V__CREATE,s__Process)
            & s__instance(V__CREATE,s__Creation)
            & s__agent(V__CREATE,V__AGENT)
            & s__result(V__CREATE,V__POLICY) ) ) ) ).

fof(kb_SUMO_16032,axiom,
    s__subclass(s__Hydrogen,s__ElementalSubstance) ).

fof(kb_SUMO_16033,axiom,
    s__instance(s__Hydrogen__t,s__SetOrClass) ).

fof(kb_SUMO_16034,axiom,
    s__names(s__Hydrogen,'Hydrogen') ).

fof(kb_SUMO_16035,axiom,
    s__conventionalShortName('H',s__Hydrogen) ).

fof(kb_SUMO_16036,axiom,
    s__atomicNumber(s__Hydrogen,"1") ).

fof(kb_SUMO_16037,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Hydrogen)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("1.0079",s__Amu)) ) ) ).

fof(kb_SUMO_16038,axiom,
    s__documentation(s__Hydrogen,s__EnglishLanguage,'Colourless, odourless gaseous chemical element. Lightest and most abundant element in the universe. Present in water and in all organic compounds. Chemically reacts with most elements. Discovered by Henry Cavendish in 1776.') ).

fof(kb_SUMO_16039,axiom,
    s__subclass(s__Helium,s__ElementalSubstance) ).

fof(kb_SUMO_16040,axiom,
    s__instance(s__Helium__t,s__SetOrClass) ).

fof(kb_SUMO_16041,axiom,
    s__names(s__Helium,'Helium') ).

fof(kb_SUMO_16042,axiom,
    s__conventionalShortName('He',s__Helium) ).

fof(kb_SUMO_16043,axiom,
    s__atomicNumber(s__Helium,"2") ).

fof(kb_SUMO_16044,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Helium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("4.0026",s__Amu)) ) ) ).

fof(kb_SUMO_16045,axiom,
    s__documentation(s__Helium,s__EnglishLanguage,'Colourless, odourless gaseous nonmetallic element. Belongs to group 18 of the periodic table. Lowest boiling point of all elements and can only be solidified under pressure. Chemically inert, no known compounds. Discovered in the solar spectrum in 1868 by Lockyer.') ).

fof(kb_SUMO_16046,axiom,
    s__subclass(s__Lithium,s__ElementalSubstance) ).

fof(kb_SUMO_16047,axiom,
    s__instance(s__Lithium__t,s__SetOrClass) ).

fof(kb_SUMO_16048,axiom,
    s__names(s__Lithium,'Lithium') ).

fof(kb_SUMO_16049,axiom,
    s__conventionalShortName('Li',s__Lithium) ).

fof(kb_SUMO_16050,axiom,
    s__atomicNumber(s__Lithium,"3") ).

fof(kb_SUMO_16051,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Lithium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("6.939",s__Amu)) ) ) ).

fof(kb_SUMO_16052,axiom,
    s__documentation(s__Lithium,s__EnglishLanguage,'Socket silvery metal. First member of group 1 of the periodic table. Lithium salts are used in psychomedicine.') ).

fof(kb_SUMO_16053,axiom,
    s__subclass(s__Beryllium,s__ElementalSubstance) ).

fof(kb_SUMO_16054,axiom,
    s__instance(s__Beryllium__t,s__SetOrClass) ).

fof(kb_SUMO_16055,axiom,
    s__names(s__Beryllium,'Beryllium') ).

fof(kb_SUMO_16056,axiom,
    s__conventionalShortName('Be',s__Beryllium) ).

fof(kb_SUMO_16057,axiom,
    s__atomicNumber(s__Beryllium,"4") ).

fof(kb_SUMO_16058,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Beryllium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("9.0122",s__Amu)) ) ) ).

fof(kb_SUMO_16059,axiom,
    s__documentation(s__Beryllium,s__EnglishLanguage,'Grey metallic element of group 2 of the periodic table. Is toxic and can cause severe lung diseases and dermatitis. Shows high covalent character. It was isolated independently by F. Wohler and A.A. Bussy in 1828.') ).

fof(kb_SUMO_16060,axiom,
    s__subclass(s__Boron,s__ElementalSubstance) ).

fof(kb_SUMO_16061,axiom,
    s__instance(s__Boron__t,s__SetOrClass) ).

fof(kb_SUMO_16062,axiom,
    s__names(s__Boron,'Boron') ).

fof(kb_SUMO_16063,axiom,
    s__conventionalShortName('B',s__Boron) ).

fof(kb_SUMO_16064,axiom,
    s__atomicNumber(s__Boron,"5") ).

fof(kb_SUMO_16065,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Boron)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("10.811",s__Amu)) ) ) ).

fof(kb_SUMO_16066,axiom,
    s__documentation(s__Boron,s__EnglishLanguage,'An element of group 13 of the periodic table. There are two allotropes, amorphous boron is a brown power, but metallic boron is black. The metallic form is hard (9.3 on Mohs scale) and a bad conductor in room temperatures. It is never found free in nature. Boron-10 is used in nuclear reactor control rods and shields. It was discovered in 1808 by Sir Humphry Davy and by J.L. Gay-Lussac and L.J. Thenard.') ).

fof(kb_SUMO_16067,axiom,
    s__subclass(s__Carbon,s__ElementalSubstance) ).

fof(kb_SUMO_16068,axiom,
    s__instance(s__Carbon__t,s__SetOrClass) ).

fof(kb_SUMO_16069,axiom,
    s__names(s__Carbon,'Carbon') ).

fof(kb_SUMO_16070,axiom,
    s__conventionalShortName('C',s__Carbon) ).

fof(kb_SUMO_16071,axiom,
    s__atomicNumber(s__Carbon,"6") ).

fof(kb_SUMO_16072,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Carbon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("12.01115",s__Amu)) ) ) ).

fof(kb_SUMO_16073,axiom,
    s__documentation(s__Carbon,s__EnglishLanguage,'Carbon is a member of group 14 of the periodic table. It has three allotropic forms of it, diamonds, graphite and fullerite. Carbon-14 is commonly used in radioactive dating. Carbon occurs in all organic life and is the basis of organic chemistry. Carbon has the interesting chemical property of being able to bond with itself, and a wide variety of other elements.') ).

fof(kb_SUMO_16074,axiom,
    s__subclass(s__Nitrogen,s__ElementalSubstance) ).

fof(kb_SUMO_16075,axiom,
    s__instance(s__Nitrogen__t,s__SetOrClass) ).

fof(kb_SUMO_16076,axiom,
    s__names(s__Nitrogen,'Nitrogen') ).

fof(kb_SUMO_16077,axiom,
    s__conventionalShortName('N',s__Nitrogen) ).

fof(kb_SUMO_16078,axiom,
    s__atomicNumber(s__Nitrogen,"7") ).

fof(kb_SUMO_16079,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Nitrogen)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("14.0067",s__Amu)) ) ) ).

fof(kb_SUMO_16080,axiom,
    s__documentation(s__Nitrogen,s__EnglishLanguage,'Colourless, gaseous element which belongs to group 15 of the periodic table. Constitutes ~78 percent of the atmosphere and is an essential part of the ecosystem. Nitrogen for industrial purposes is acquired by the fractional distillation of liquid air. Chemically inactive, reactive generally only at high temperatures or in electrical discharges. It was discovered in 1772 by D. Rutherford.') ).

fof(kb_SUMO_16081,axiom,
    s__subclass(s__Oxygen,s__ElementalSubstance) ).

fof(kb_SUMO_16082,axiom,
    s__instance(s__Oxygen__t,s__SetOrClass) ).

fof(kb_SUMO_16083,axiom,
    s__names(s__Oxygen,'Oxygen') ).

fof(kb_SUMO_16084,axiom,
    s__conventionalShortName('O',s__Oxygen) ).

fof(kb_SUMO_16085,axiom,
    s__atomicNumber(s__Oxygen,"8") ).

fof(kb_SUMO_16086,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Oxygen)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("15.9994",s__Amu)) ) ) ).

fof(kb_SUMO_16087,axiom,
    s__documentation(s__Oxygen,s__EnglishLanguage,'A colourless, odourless gaseous element belonging to group 16 of the periodic table. It is the most abundant element present in the earths crust. It also makes up 20.8 percent of the Earths atmosphere. For industrial purposes, it is separated from liquid air by fractional distillation. It is used in high temperature welding, and in breathing. It commonly comes in the form of Oxygen, but is found as Ozone in the upper atmosphere. It was discovered by Priestley in 1774.') ).

fof(kb_SUMO_16088,axiom,
    s__subclass(s__Fluorine,s__ElementalSubstance) ).

fof(kb_SUMO_16089,axiom,
    s__instance(s__Fluorine__t,s__SetOrClass) ).

fof(kb_SUMO_16090,axiom,
    s__names(s__Fluorine,'Fluorine') ).

fof(kb_SUMO_16091,axiom,
    s__conventionalShortName('F',s__Fluorine) ).

fof(kb_SUMO_16092,axiom,
    s__atomicNumber(s__Fluorine,"9") ).

fof(kb_SUMO_16093,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Fluorine)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("18.9984",s__Amu)) ) ) ).

fof(kb_SUMO_16094,axiom,
    s__documentation(s__Fluorine,s__EnglishLanguage,'A poisonous pale yellow gaseous element belonging to group 17 of the periodic table (The halogens). It is the most chemically reactive and electronegative element. It is highly dangerous, causing severe chemical burns on contact with flesh. Fluorine was identified by Scheele in 1771 and first isolated by Moissan in 1886.') ).

fof(kb_SUMO_16095,axiom,
    s__subclass(s__Neon,s__ElementalSubstance) ).

fof(kb_SUMO_16096,axiom,
    s__instance(s__Neon__t,s__SetOrClass) ).

fof(kb_SUMO_16097,axiom,
    s__names(s__Neon,'Neon') ).

fof(kb_SUMO_16098,axiom,
    s__conventionalShortName('Ne',s__Neon) ).

fof(kb_SUMO_16099,axiom,
    s__atomicNumber(s__Neon,"10") ).

fof(kb_SUMO_16100,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Neon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("20.183",s__Amu)) ) ) ).

fof(kb_SUMO_16101,axiom,
    s__documentation(s__Neon,s__EnglishLanguage,'Colourless gaseous element of group 18 on the periodic table (noble gases). Neon occurs in the atmosphere, and comprises 0.0018 percent of the volume of the atmosphere. It has a distinct reddish glow when used in discharge tubes and neon based lamps. It forms almost no chemical compounds. Neon was discovered in 1898 by Sir William Ramsey and M.W. Travers. ') ).

fof(kb_SUMO_16102,axiom,
    s__subclass(s__Sodium,s__ElementalSubstance) ).

fof(kb_SUMO_16103,axiom,
    s__instance(s__Sodium__t,s__SetOrClass) ).

fof(kb_SUMO_16104,axiom,
    s__names(s__Sodium,'Sodium') ).

fof(kb_SUMO_16105,axiom,
    s__conventionalShortName('Na',s__Sodium) ).

fof(kb_SUMO_16106,axiom,
    s__atomicNumber(s__Sodium,"11") ).

fof(kb_SUMO_16107,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Sodium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("22.9898",s__Amu)) ) ) ).

fof(kb_SUMO_16108,axiom,
    s__documentation(s__Sodium,s__EnglishLanguage,'Soft silvery reactive element belonging to group 1 of the periodic table (alkali metals). It is highly reactive, oxidizing in air and reacting violently with water, forcing it to be kept under oil. It was first isolated by Humphrey Davy in 1807.') ).

fof(kb_SUMO_16109,axiom,
    s__subclass(s__Magnesium,s__ElementalSubstance) ).

fof(kb_SUMO_16110,axiom,
    s__instance(s__Magnesium__t,s__SetOrClass) ).

fof(kb_SUMO_16111,axiom,
    s__names(s__Magnesium,'Magnesium') ).

fof(kb_SUMO_16112,axiom,
    s__conventionalShortName('Mg',s__Magnesium) ).

fof(kb_SUMO_16113,axiom,
    s__atomicNumber(s__Magnesium,"12") ).

fof(kb_SUMO_16114,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Magnesium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("24.312",s__Amu)) ) ) ).

fof(kb_SUMO_16115,axiom,
    s__documentation(s__Magnesium,s__EnglishLanguage,'Silvery metallic element belonging to group 2 of the periodic table (alkaline-earth metals). It is essential for living organisms, and is used in a number of light alloys. Chemically very reactive, it forms a protective oxide coating when exposed to air and burns with an intense white flame. It also reacts with sulphur, nitrogen and the halogens. First isolated by Bussy in 1828.') ).

fof(kb_SUMO_16116,axiom,
    s__subclass(s__Aluminum,s__ElementalSubstance) ).

fof(kb_SUMO_16117,axiom,
    s__instance(s__Aluminum__t,s__SetOrClass) ).

fof(kb_SUMO_16118,axiom,
    s__names(s__Aluminum,'Aluminum') ).

fof(kb_SUMO_16119,axiom,
    s__conventionalShortName('Al',s__Aluminum) ).

fof(kb_SUMO_16120,axiom,
    s__atomicNumber(s__Aluminum,"13") ).

fof(kb_SUMO_16121,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Aluminum)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("26.9815",s__Amu)) ) ) ).

fof(kb_SUMO_16122,axiom,
    s__documentation(s__Aluminum,s__EnglishLanguage,'Silvery-white lustrous metallic element of group 3 of the periodic table. Highly reactive but protected by a thin transparent layer of the oxide which quickly forms in air. There are many alloys of aluminum, as well as a good number of industrial uses. Makes up 8.1 percent of the Earths crust, by weight. Isolated in 1825 by H.C. Oersted.') ).

fof(kb_SUMO_16123,axiom,
    s__subclass(s__Silicon,s__ElementalSubstance) ).

fof(kb_SUMO_16124,axiom,
    s__instance(s__Silicon__t,s__SetOrClass) ).

fof(kb_SUMO_16125,axiom,
    s__names(s__Silicon,'Silicon') ).

fof(kb_SUMO_16126,axiom,
    s__conventionalShortName('Si',s__Silicon) ).

fof(kb_SUMO_16127,axiom,
    s__atomicNumber(s__Silicon,"14") ).

fof(kb_SUMO_16128,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Silicon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("28.086",s__Amu)) ) ) ).

fof(kb_SUMO_16129,axiom,
    s__documentation(s__Silicon,s__EnglishLanguage,'Metalloid element belonging to group 14 of the periodic table. It is the second most abundant element in the Earths crust, making up 25.7 percent of it by weight. Chemically less reactive than carbon. First identified by Lavoisier in 1787 and first isolated in 1823 by Berzelius.') ).

fof(kb_SUMO_16130,axiom,
    s__subclass(s__Phosphorus,s__ElementalSubstance) ).

fof(kb_SUMO_16131,axiom,
    s__instance(s__Phosphorus__t,s__SetOrClass) ).

fof(kb_SUMO_16132,axiom,
    s__names(s__Phosphorus,'Phosphorus') ).

fof(kb_SUMO_16133,axiom,
    s__conventionalShortName('P',s__Phosphorus) ).

fof(kb_SUMO_16134,axiom,
    s__atomicNumber(s__Phosphorus,"15") ).

fof(kb_SUMO_16135,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Phosphorus)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("30.9738",s__Amu)) ) ) ).

fof(kb_SUMO_16136,axiom,
    s__documentation(s__Phosphorus,s__EnglishLanguage,'Non-metallic element belonging to group 15 of the periodic table. Has a multiple allotropic forms. Essential element for living organisms. It was discovered by Brandt in 1669.') ).

fof(kb_SUMO_16137,axiom,
    s__subclass(s__Sulphur,s__ElementalSubstance) ).

fof(kb_SUMO_16138,axiom,
    s__instance(s__Sulphur__t,s__SetOrClass) ).

fof(kb_SUMO_16139,axiom,
    s__names(s__Sulphur,'Sulphur') ).

fof(kb_SUMO_16140,axiom,
    s__conventionalShortName('S',s__Sulphur) ).

fof(kb_SUMO_16141,axiom,
    s__atomicNumber(s__Sulphur,"16") ).

fof(kb_SUMO_16142,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Sulphur)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("32.064",s__Amu)) ) ) ).

fof(kb_SUMO_16143,axiom,
    s__documentation(s__Sulphur,s__EnglishLanguage,'Yellow, nonmetallic element belonging to group 16 of the periodic table. It is an essential element in living organisms, needed in the amino acids cysteine and methionine, and hence in many proteins. Absorbed by plants from the soil as sulphate ion.') ).

fof(kb_SUMO_16144,axiom,
    s__subclass(s__Chlorine,s__ElementalSubstance) ).

fof(kb_SUMO_16145,axiom,
    s__instance(s__Chlorine__t,s__SetOrClass) ).

fof(kb_SUMO_16146,axiom,
    s__names(s__Chlorine,'Chlorine') ).

fof(kb_SUMO_16147,axiom,
    s__conventionalShortName('Cl',s__Chlorine) ).

fof(kb_SUMO_16148,axiom,
    s__atomicNumber(s__Chlorine,"17") ).

fof(kb_SUMO_16149,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Chlorine)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("35.453",s__Amu)) ) ) ).

fof(kb_SUMO_16150,axiom,
    s__documentation(s__Chlorine,s__EnglishLanguage,'Halogen element. Poisonous greenish-yellow gas. Occurs widely in nature as sodium chloride in seawater. Reacts directly with many elements and compounds, strong oxidizing agent. Discovered by Karl Scheele in 1774. Humphrey David confirmed it as an element in 1810.') ).

fof(kb_SUMO_16151,axiom,
    s__subclass(s__Argon,s__ElementalSubstance) ).

fof(kb_SUMO_16152,axiom,
    s__instance(s__Argon__t,s__SetOrClass) ).

fof(kb_SUMO_16153,axiom,
    s__names(s__Argon,'Argon') ).

fof(kb_SUMO_16154,axiom,
    s__conventionalShortName('Ar',s__Argon) ).

fof(kb_SUMO_16155,axiom,
    s__atomicNumber(s__Argon,"18") ).

fof(kb_SUMO_16156,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Argon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("39.948",s__Amu)) ) ) ).

fof(kb_SUMO_16157,axiom,
    s__documentation(s__Argon,s__EnglishLanguage,'Monatomic noble gas. Makes up 0.93 percent of the air. Colourless, odorless. Is inert and has no true compounds. Lord Rayleigh and Sir william Ramsey identified argon in 1894.') ).

fof(kb_SUMO_16158,axiom,
    s__subclass(s__Potassium,s__ElementalSubstance) ).

fof(kb_SUMO_16159,axiom,
    s__instance(s__Potassium__t,s__SetOrClass) ).

fof(kb_SUMO_16160,axiom,
    s__names(s__Potassium,'Potassium') ).

fof(kb_SUMO_16161,axiom,
    s__conventionalShortName('K',s__Potassium) ).

fof(kb_SUMO_16162,axiom,
    s__atomicNumber(s__Potassium,"19") ).

fof(kb_SUMO_16163,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Potassium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("39.0983",s__Amu)) ) ) ).

fof(kb_SUMO_16164,axiom,
    s__documentation(s__Potassium,s__EnglishLanguage,'Soft silvery metallic element belonging to group 1 of the periodic table (alkali metals). Occurs naturally in seawater and a many minerals. Highly reactive, chemically, it resembles sodium in its behavior and compounds. Discovered by Sir Humphry Davy in 1807.') ).

fof(kb_SUMO_16165,axiom,
    s__subclass(s__Calcium,s__ElementalSubstance) ).

fof(kb_SUMO_16166,axiom,
    s__instance(s__Calcium__t,s__SetOrClass) ).

fof(kb_SUMO_16167,axiom,
    s__names(s__Calcium,'Calcium') ).

fof(kb_SUMO_16168,axiom,
    s__conventionalShortName('Ca',s__Calcium) ).

fof(kb_SUMO_16169,axiom,
    s__atomicNumber(s__Calcium,"20") ).

fof(kb_SUMO_16170,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Calcium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("40.08",s__Amu)) ) ) ).

fof(kb_SUMO_16171,axiom,
    s__documentation(s__Calcium,s__EnglishLanguage,'Soft grey metallic element belonging to group 2 of the periodic table. Used a reducing agent in the extraction of thorium, zirconium and uranium. Essential element for living organisms.') ).

fof(kb_SUMO_16172,axiom,
    s__subclass(s__Scandium,s__ElementalSubstance) ).

fof(kb_SUMO_16173,axiom,
    s__instance(s__Scandium__t,s__SetOrClass) ).

fof(kb_SUMO_16174,axiom,
    s__names(s__Scandium,'Scandium') ).

fof(kb_SUMO_16175,axiom,
    s__conventionalShortName('Sc',s__Scandium) ).

fof(kb_SUMO_16176,axiom,
    s__atomicNumber(s__Scandium,"21") ).

fof(kb_SUMO_16177,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Scandium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("44.956",s__Amu)) ) ) ).

fof(kb_SUMO_16178,axiom,
    s__documentation(s__Scandium,s__EnglishLanguage,'Rare soft silvery metallic element belonging to group 3 of the periodic table. There are ten isotopes, nine of which are radioactive and have short half-lives. Predicted in 1869 by Mendeleev, isolated by Nilson in 1879.') ).

fof(kb_SUMO_16179,axiom,
    s__subclass(s__Titanium,s__ElementalSubstance) ).

fof(kb_SUMO_16180,axiom,
    s__instance(s__Titanium__t,s__SetOrClass) ).

fof(kb_SUMO_16181,axiom,
    s__names(s__Titanium,'Titanium') ).

fof(kb_SUMO_16182,axiom,
    s__conventionalShortName('Ti',s__Titanium) ).

fof(kb_SUMO_16183,axiom,
    s__atomicNumber(s__Titanium,"22") ).

fof(kb_SUMO_16184,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Titanium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("47.90",s__Amu)) ) ) ).

fof(kb_SUMO_16185,axiom,
    s__documentation(s__Titanium,s__EnglishLanguage,'White metallic transition element. Occurs in numerous minerals. Used in strong, light corrosion-resistant alloys. Forms a passive oxide coating when exposed to air. First discovered by Gregor in 1789.') ).

fof(kb_SUMO_16186,axiom,
    s__subclass(s__Vanadium,s__ElementalSubstance) ).

fof(kb_SUMO_16187,axiom,
    s__instance(s__Vanadium__t,s__SetOrClass) ).

fof(kb_SUMO_16188,axiom,
    s__names(s__Vanadium,'Vanadium') ).

fof(kb_SUMO_16189,axiom,
    s__conventionalShortName('V',s__Vanadium) ).

fof(kb_SUMO_16190,axiom,
    s__atomicNumber(s__Vanadium,"23") ).

fof(kb_SUMO_16191,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Vanadium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("50.9415",s__Amu)) ) ) ).

fof(kb_SUMO_16192,axiom,
    s__documentation(s__Vanadium,s__EnglishLanguage,'Soft and ductile, bright white metal. Good resistance to corrosion by alkalis, sulphuric and hydrochloric acid. It oxidizes readily about 933K. There are two naturally occurring isotopes of vanadium, and 5 radioisotopes, V-49 having the longest half-life at 337 days. Vanadium has nuclear applications, the foil is used in cladding titanium to steel, and vanadium-gallium tape is used to produce a superconductive magnet. Originally discovered by Andres Manuel del Rio of Mexico City in 1801. His discovery went unheeded, however, and in 1820, Nils Gabriel Sefstron of Sweden rediscovered it. Metallic vanadium was isolated by Henry Enfield Roscoe in 1867. The name vanadium comes from {Vanadis}, a goddess of Scandinavian mythology. Silvery-white metallic transition element. Vanadium is essential to {ascidian}s. Rats and chickens are also known to require it. Metal powder is a fire hazard, and vanadium compounds should be considered highly toxic. May cause lung cancer if inhaled.') ).

fof(kb_SUMO_16193,axiom,
    s__subclass(s__Chromium,s__ElementalSubstance) ).

fof(kb_SUMO_16194,axiom,
    s__instance(s__Chromium__t,s__SetOrClass) ).

fof(kb_SUMO_16195,axiom,
    s__names(s__Chromium,'Chromium') ).

fof(kb_SUMO_16196,axiom,
    s__conventionalShortName('Cr',s__Chromium) ).

fof(kb_SUMO_16197,axiom,
    s__atomicNumber(s__Chromium,"24") ).

fof(kb_SUMO_16198,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Chromium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("51.996",s__Amu)) ) ) ).

fof(kb_SUMO_16199,axiom,
    s__documentation(s__Chromium,s__EnglishLanguage,'Hard silvery transition element. Used in decorative electroplating. Discovered in 1797 by Vauquelin.') ).

fof(kb_SUMO_16200,axiom,
    s__subclass(s__Manganese,s__ElementalSubstance) ).

fof(kb_SUMO_16201,axiom,
    s__instance(s__Manganese__t,s__SetOrClass) ).

fof(kb_SUMO_16202,axiom,
    s__names(s__Manganese,'Manganese') ).

fof(kb_SUMO_16203,axiom,
    s__conventionalShortName('Mn',s__Manganese) ).

fof(kb_SUMO_16204,axiom,
    s__atomicNumber(s__Manganese,"25") ).

fof(kb_SUMO_16205,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Manganese)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("54.938",s__Amu)) ) ) ).

fof(kb_SUMO_16206,axiom,
    s__documentation(s__Manganese,s__EnglishLanguage,'Grey brittle metallic transition element. Rather electropositive, combines with some non-metals when heated. Discovered in 1774 by Scheele.') ).

fof(kb_SUMO_16207,axiom,
    s__subclass(s__Iron,s__ElementalSubstance) ).

fof(kb_SUMO_16208,axiom,
    s__instance(s__Iron__t,s__SetOrClass) ).

fof(kb_SUMO_16209,axiom,
    s__names(s__Iron,'Iron') ).

fof(kb_SUMO_16210,axiom,
    s__conventionalShortName('Fe',s__Iron) ).

fof(kb_SUMO_16211,axiom,
    s__atomicNumber(s__Iron,"26") ).

fof(kb_SUMO_16212,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Iron)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("55.847",s__Amu)) ) ) ).

fof(kb_SUMO_16213,axiom,
    s__documentation(s__Iron,s__EnglishLanguage,'Silvery malleable and ductile metallic transition element. Has nine isotopes and is the fourth most abundant element in the earths crust. Required by living organisms as a trace element (used in hemoglobin in humans.) Quite reactive, oxidizes in moist air, displaces hydrogen from dilute acids and combines with nonmetallic elements.') ).

fof(kb_SUMO_16214,axiom,
    s__subclass(s__Cobalt,s__ElementalSubstance) ).

fof(kb_SUMO_16215,axiom,
    s__instance(s__Cobalt__t,s__SetOrClass) ).

fof(kb_SUMO_16216,axiom,
    s__names(s__Cobalt,'Cobalt') ).

fof(kb_SUMO_16217,axiom,
    s__conventionalShortName('Co',s__Cobalt) ).

fof(kb_SUMO_16218,axiom,
    s__atomicNumber(s__Cobalt,"27") ).

fof(kb_SUMO_16219,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Cobalt)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("58.993",s__Amu)) ) ) ).

fof(kb_SUMO_16220,axiom,
    s__documentation(s__Cobalt,s__EnglishLanguage,'Light grey transition element. Some meteorites contain small amounts of metallic cobalt. Generally alloyed for use. Mammals require small amounts of cobalt salts. Cobalt-60, an artificially produced radioactive isotope of Cobalt is an important radioactive tracer and cancer-treatment agent. Discovered by G. Brandt in 1737.') ).

fof(kb_SUMO_16221,axiom,
    s__subclass(s__Nickel,s__ElementalSubstance) ).

fof(kb_SUMO_16222,axiom,
    s__instance(s__Nickel__t,s__SetOrClass) ).

fof(kb_SUMO_16223,axiom,
    s__names(s__Nickel,'Nickel') ).

fof(kb_SUMO_16224,axiom,
    s__conventionalShortName('Ni',s__Nickel) ).

fof(kb_SUMO_16225,axiom,
    s__atomicNumber(s__Nickel,"28") ).

fof(kb_SUMO_16226,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Nickel)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("58.71",s__Amu)) ) ) ).

fof(kb_SUMO_16227,axiom,
    s__documentation(s__Nickel,s__EnglishLanguage,'Malleable ductile silvery metallic transition element. Discovered by A.F. Cronstedt in 1751.') ).

fof(kb_SUMO_16228,axiom,
    s__subclass(s__Copper,s__ElementalSubstance) ).

fof(kb_SUMO_16229,axiom,
    s__instance(s__Copper__t,s__SetOrClass) ).

fof(kb_SUMO_16230,axiom,
    s__names(s__Copper,'Copper') ).

fof(kb_SUMO_16231,axiom,
    s__conventionalShortName('Cu',s__Copper) ).

fof(kb_SUMO_16232,axiom,
    s__atomicNumber(s__Copper,"29") ).

fof(kb_SUMO_16233,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Copper)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("63.54",s__Amu)) ) ) ).

fof(kb_SUMO_16234,axiom,
    s__documentation(s__Copper,s__EnglishLanguage,'Red-brown transition element. Known by the Romans as cuprum. Extracted and used for thousands of years. Malleable, ductile and an excellent conductor of heat and electricity. When in moist conditions, a greenish layer forms on the outside.') ).

fof(kb_SUMO_16235,axiom,
    s__subclass(s__Zinc,s__ElementalSubstance) ).

fof(kb_SUMO_16236,axiom,
    s__instance(s__Zinc__t,s__SetOrClass) ).

fof(kb_SUMO_16237,axiom,
    s__names(s__Zinc,'Zinc') ).

fof(kb_SUMO_16238,axiom,
    s__conventionalShortName('Zn',s__Zinc) ).

fof(kb_SUMO_16239,axiom,
    s__atomicNumber(s__Zinc,"30") ).

fof(kb_SUMO_16240,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Zinc)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("65.38",s__Amu)) ) ) ).

fof(kb_SUMO_16241,axiom,
    s__documentation(s__Zinc,s__EnglishLanguage,'Blue-white metallic element. Occurs in multiple compounds naturally. Five stable isotopes are six radioactive isotopes have been found. Chemically a reactive metal, combines with oxygen and other non-metals, reacts with dilute acids to release hydrogen.') ).

fof(kb_SUMO_16242,axiom,
    s__subclass(s__Gallium,s__ElementalSubstance) ).

fof(kb_SUMO_16243,axiom,
    s__instance(s__Gallium__t,s__SetOrClass) ).

fof(kb_SUMO_16244,axiom,
    s__names(s__Gallium,'Gallium') ).

fof(kb_SUMO_16245,axiom,
    s__conventionalShortName('Ga',s__Gallium) ).

fof(kb_SUMO_16246,axiom,
    s__atomicNumber(s__Gallium,"31") ).

fof(kb_SUMO_16247,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Gallium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("69.72",s__Amu)) ) ) ).

fof(kb_SUMO_16248,axiom,
    s__documentation(s__Gallium,s__EnglishLanguage,'Soft silvery metallic element, belongs to group 13 of the periodic table. The two stable isotopes are Ga-69 and Ga-71. Eight radioactive isotopes are known, all having short half-lives. Gallium Arsenide is used as a semiconductor. Corrodes most other metals by diffusing into their lattice. First identified by Francois Lecoq de Boisbaudran in 1875.') ).

fof(kb_SUMO_16249,axiom,
    s__subclass(s__Germanium,s__ElementalSubstance) ).

fof(kb_SUMO_16250,axiom,
    s__instance(s__Germanium__t,s__SetOrClass) ).

fof(kb_SUMO_16251,axiom,
    s__names(s__Germanium,'Germanium') ).

fof(kb_SUMO_16252,axiom,
    s__conventionalShortName('Ge',s__Germanium) ).

fof(kb_SUMO_16253,axiom,
    s__atomicNumber(s__Germanium,"32") ).

fof(kb_SUMO_16254,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Germanium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("72.59",s__Amu)) ) ) ).

fof(kb_SUMO_16255,axiom,
    s__documentation(s__Germanium,s__EnglishLanguage,'Lustrous hard metalloid element, belongs to group 14 of the periodic table. Forms a large number of organometallic compounds. Predicted by Mendeleev in 1871, it was actually found in 1886 by Winkler.') ).

fof(kb_SUMO_16256,axiom,
    s__subclass(s__Arsenic,s__ElementalSubstance) ).

fof(kb_SUMO_16257,axiom,
    s__instance(s__Arsenic__t,s__SetOrClass) ).

fof(kb_SUMO_16258,axiom,
    s__names(s__Arsenic,'Arsenic') ).

fof(kb_SUMO_16259,axiom,
    s__conventionalShortName('As',s__Arsenic) ).

fof(kb_SUMO_16260,axiom,
    s__atomicNumber(s__Arsenic,"33") ).

fof(kb_SUMO_16261,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Arsenic)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("74.922",s__Amu)) ) ) ).

fof(kb_SUMO_16262,axiom,
    s__documentation(s__Arsenic,s__EnglishLanguage,'Metalloid element of group 15. There are three allotropes, yellow, black, and grey. Reacts with halogens, concentrated oxidizing acids and hot alkalis. Albertus Magnus is believed to have been the first to isolate the element in 1250.') ).

fof(kb_SUMO_16263,axiom,
    s__subclass(s__Selenium,s__ElementalSubstance) ).

fof(kb_SUMO_16264,axiom,
    s__instance(s__Selenium__t,s__SetOrClass) ).

fof(kb_SUMO_16265,axiom,
    s__names(s__Selenium,'Selenium') ).

fof(kb_SUMO_16266,axiom,
    s__conventionalShortName('Se',s__Selenium) ).

fof(kb_SUMO_16267,axiom,
    s__atomicNumber(s__Selenium,"34") ).

fof(kb_SUMO_16268,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Selenium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("78.96",s__Amu)) ) ) ).

fof(kb_SUMO_16269,axiom,
    s__documentation(s__Selenium,s__EnglishLanguage,'Metalloid element, belongs to group 16 of the periodic table. Multiple allotropic forms exist. Chemically resembles sulphur. Discovered in 1817 by Jons J. Berzelius.') ).

fof(kb_SUMO_16270,axiom,
    s__subclass(s__Bromine,s__ElementalSubstance) ).

fof(kb_SUMO_16271,axiom,
    s__instance(s__Bromine__t,s__SetOrClass) ).

fof(kb_SUMO_16272,axiom,
    s__names(s__Bromine,'Bromine') ).

fof(kb_SUMO_16273,axiom,
    s__conventionalShortName('Br',s__Bromine) ).

fof(kb_SUMO_16274,axiom,
    s__atomicNumber(s__Bromine,"35") ).

fof(kb_SUMO_16275,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Bromine)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("79.909",s__Amu)) ) ) ).

fof(kb_SUMO_16276,axiom,
    s__documentation(s__Bromine,s__EnglishLanguage,'Halogen element. Red volatile liquid at room temperature. Its reactivity is somewhere between chlorine and iodine. Harmful to human tissue in a liquid state, the vapour irritates eyes and throat. Discovered in 1826 by Antoine Balard.') ).

fof(kb_SUMO_16277,axiom,
    s__subclass(s__Krypton,s__ElementalSubstance) ).

fof(kb_SUMO_16278,axiom,
    s__instance(s__Krypton__t,s__SetOrClass) ).

fof(kb_SUMO_16279,axiom,
    s__names(s__Krypton,'Krypton') ).

fof(kb_SUMO_16280,axiom,
    s__conventionalShortName('Kr',s__Krypton) ).

fof(kb_SUMO_16281,axiom,
    s__atomicNumber(s__Krypton,"36") ).

fof(kb_SUMO_16282,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Krypton)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("83.80",s__Amu)) ) ) ).

fof(kb_SUMO_16283,axiom,
    s__documentation(s__Krypton,s__EnglishLanguage,'Colorless gaseous element, belongs to the noble gases. Occurs in the air, 0.0001 percent by volume. It can be extracted from liquid air by fractional distillation. Generally not isolated, but used with other inert gases in fluorescent lamps. Five natural isotopes, and five radioactive isotopes. Kr-85, the most stable radioactive isotope, has a half-life of 10.76 years and is produced in fission reactors. Practically inert, though known to form compounds with {fluorine}.') ).

fof(kb_SUMO_16284,axiom,
    s__subclass(s__Rubidium,s__ElementalSubstance) ).

fof(kb_SUMO_16285,axiom,
    s__instance(s__Rubidium__t,s__SetOrClass) ).

fof(kb_SUMO_16286,axiom,
    s__names(s__Rubidium,'Rubidium') ).

fof(kb_SUMO_16287,axiom,
    s__conventionalShortName('Rb',s__Rubidium) ).

fof(kb_SUMO_16288,axiom,
    s__atomicNumber(s__Rubidium,"37") ).

fof(kb_SUMO_16289,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Rubidium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("85.47",s__Amu)) ) ) ).

fof(kb_SUMO_16290,axiom,
    s__documentation(s__Rubidium,s__EnglishLanguage,'Soft silvery metallic element, belongs to group 1 of the periodic table. Rb-97, the naturally occurring isotope, is radioactive. It is highly reactive, with properties similar to other elements in group 1, like igniting spontaneously in air. Discovered spectroscopically in 1861 by W. Bunsen and G.R. Kirchoff.') ).

fof(kb_SUMO_16291,axiom,
    s__subclass(s__Strontium,s__ElementalSubstance) ).

fof(kb_SUMO_16292,axiom,
    s__instance(s__Strontium__t,s__SetOrClass) ).

fof(kb_SUMO_16293,axiom,
    s__names(s__Strontium,'Strontium') ).

fof(kb_SUMO_16294,axiom,
    s__conventionalShortName('Sr',s__Strontium) ).

fof(kb_SUMO_16295,axiom,
    s__atomicNumber(s__Strontium,"38") ).

fof(kb_SUMO_16296,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Strontium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("87.62",s__Amu)) ) ) ).

fof(kb_SUMO_16297,axiom,
    s__documentation(s__Strontium,s__EnglishLanguage,'Soft yellowish metallic element, belongs to group 2 of the periodic table. Highly reactive chemically. Sr-90 is present in radioactive fallout and has a half-life of 28 years. Discovered in 1798 by Klaproth and Hope, isolated in 1808 by Humphry Davy.') ).

fof(kb_SUMO_16298,axiom,
    s__subclass(s__Yttrium,s__ElementalSubstance) ).

fof(kb_SUMO_16299,axiom,
    s__instance(s__Yttrium__t,s__SetOrClass) ).

fof(kb_SUMO_16300,axiom,
    s__names(s__Yttrium,'Yttrium') ).

fof(kb_SUMO_16301,axiom,
    s__conventionalShortName('Y',s__Yttrium) ).

fof(kb_SUMO_16302,axiom,
    s__atomicNumber(s__Yttrium,"39") ).

fof(kb_SUMO_16303,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Yttrium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("88.905",s__Amu)) ) ) ).

fof(kb_SUMO_16304,axiom,
    s__documentation(s__Yttrium,s__EnglishLanguage,'Silvery-grey metallic element of group 3 on the periodic table. Found in uranium ores. The only natural isotope is Y-89, there are 14 other artificial isotopes. Chemically resembles the lanthanoids. Stable in the air below 400 degrees, celsius. Discovered in 1828 by Friedrich Wohler.') ).

fof(kb_SUMO_16305,axiom,
    s__subclass(s__Zirconium,s__ElementalSubstance) ).

fof(kb_SUMO_16306,axiom,
    s__instance(s__Zirconium__t,s__SetOrClass) ).

fof(kb_SUMO_16307,axiom,
    s__names(s__Zirconium,'Zirconium') ).

fof(kb_SUMO_16308,axiom,
    s__conventionalShortName('Zr',s__Zirconium) ).

fof(kb_SUMO_16309,axiom,
    s__atomicNumber(s__Zirconium,"40") ).

fof(kb_SUMO_16310,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Zirconium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("91.22",s__Amu)) ) ) ).

fof(kb_SUMO_16311,axiom,
    s__documentation(s__Zirconium,s__EnglishLanguage,'Grey-white metallic transition element. Five natural isotopes and six radioactive isotopes are known. Used in nuclear reactors for a {neutron} absorber. Discovered in 1789 by Martin Klaproth, isolated in 1824 by Berzelius.') ).

fof(kb_SUMO_16312,axiom,
    s__subclass(s__Niobium,s__ElementalSubstance) ).

fof(kb_SUMO_16313,axiom,
    s__instance(s__Niobium__t,s__SetOrClass) ).

fof(kb_SUMO_16314,axiom,
    s__names(s__Niobium,'Niobium') ).

fof(kb_SUMO_16315,axiom,
    s__conventionalShortName('Nb',s__Niobium) ).

fof(kb_SUMO_16316,axiom,
    s__atomicNumber(s__Niobium,"41") ).

fof(kb_SUMO_16317,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Niobium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("92.906",s__Amu)) ) ) ).

fof(kb_SUMO_16318,axiom,
    s__documentation(s__Niobium,s__EnglishLanguage,'Soft, ductile grey-blue metallic transition element. Used in special steels and in welded joints to increase strength. Combines with halogens and oxidizes in air at 200 degrees celsius. Discovered by Charles Hatchett in 1801 and isolated by Blomstrand in 1864. Called {columbium} originally.') ).

fof(kb_SUMO_16319,axiom,
    s__subclass(s__Molybdenum,s__ElementalSubstance) ).

fof(kb_SUMO_16320,axiom,
    s__instance(s__Molybdenum__t,s__SetOrClass) ).

fof(kb_SUMO_16321,axiom,
    s__names(s__Molybdenum,'Molybdenum') ).

fof(kb_SUMO_16322,axiom,
    s__conventionalShortName('Mo',s__Molybdenum) ).

fof(kb_SUMO_16323,axiom,
    s__atomicNumber(s__Molybdenum,"42") ).

fof(kb_SUMO_16324,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Molybdenum)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("95.94",s__Amu)) ) ) ).

fof(kb_SUMO_16325,axiom,
    s__documentation(s__Molybdenum,s__EnglishLanguage,'Silvery-white, hard metallic transition element. It is chemically unreactive and is not affected by most acids. It oxidizes at high temperatures. There are seven natural isotopes, and four radioisotopes, Mo-93 being the most stable with a half-life of 3500 years. Molybdenum is used in almost all high-strength steels, it has nuclear applications, and is a catalyst in petroleum refining. Discovered in 1778 by Carl Welhelm Scheele of Sweden. Impure metal was prepared in 1782 by Peter Jacob Hjelm. The name comes from the Greek word molybdos which means lead. Trace amounts of molybdenum are required for all known forms of life. All molybdenum compounds should be considered highly toxic, and will also cause severe birth defects.') ).

fof(kb_SUMO_16326,axiom,
    s__subclass(s__Technetium,s__ElementalSubstance) ).

fof(kb_SUMO_16327,axiom,
    s__instance(s__Technetium__t,s__SetOrClass) ).

fof(kb_SUMO_16328,axiom,
    s__names(s__Technetium,'Technetium') ).

fof(kb_SUMO_16329,axiom,
    s__conventionalShortName('Tc',s__Technetium) ).

fof(kb_SUMO_16330,axiom,
    s__atomicNumber(s__Technetium,"43") ).

fof(kb_SUMO_16331,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Technetium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("98",s__Amu)) ) ) ).

fof(kb_SUMO_16332,axiom,
    s__documentation(s__Technetium,s__EnglishLanguage,'Radioactive metallic transition element. Can be detected in some stars and the fission products of uranium. First made by Perrier and Segre by bombarding molybdenum with deutrons, giving them Tc-97. Tc-99 is the most stable isotope with a half-life of 2.6*10^6 years. Sixteen isotopes are known. Organic technetium compounds are used in bone imaging. Chemical properties are intermediate between rhenium and manganese.') ).

fof(kb_SUMO_16333,axiom,
    s__subclass(s__Ruthenium,s__ElementalSubstance) ).

fof(kb_SUMO_16334,axiom,
    s__instance(s__Ruthenium__t,s__SetOrClass) ).

fof(kb_SUMO_16335,axiom,
    s__names(s__Ruthenium,'Ruthenium') ).

fof(kb_SUMO_16336,axiom,
    s__conventionalShortName('Ru',s__Ruthenium) ).

fof(kb_SUMO_16337,axiom,
    s__atomicNumber(s__Ruthenium,"44") ).

fof(kb_SUMO_16338,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Ruthenium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("101.07",s__Amu)) ) ) ).

fof(kb_SUMO_16339,axiom,
    s__documentation(s__Ruthenium,s__EnglishLanguage,'Hard white metallic transition element. Found with platinum, used as a catalyst in some platinum alloys. Dissolves in fused alkalis, and is not attacked by acids. Reacts with halogens and oxygen at high temperatures. Isolated in 1844 by K.K. Klaus.') ).

fof(kb_SUMO_16340,axiom,
    s__subclass(s__Rhodium,s__ElementalSubstance) ).

fof(kb_SUMO_16341,axiom,
    s__instance(s__Rhodium__t,s__SetOrClass) ).

fof(kb_SUMO_16342,axiom,
    s__names(s__Rhodium,'Rhodium') ).

fof(kb_SUMO_16343,axiom,
    s__conventionalShortName('Rh',s__Rhodium) ).

fof(kb_SUMO_16344,axiom,
    s__atomicNumber(s__Rhodium,"45") ).

fof(kb_SUMO_16345,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Rhodium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("102.905",s__Amu)) ) ) ).

fof(kb_SUMO_16346,axiom,
    s__documentation(s__Rhodium,s__EnglishLanguage,'Silvery white metallic transition element. Found with platinum and used in some platinum alloys. Not attacked by acids, dissolves only in aqua regia. Discovered in 1803 by W.H. Wollaston.') ).

fof(kb_SUMO_16347,axiom,
    s__subclass(s__Palladium,s__ElementalSubstance) ).

fof(kb_SUMO_16348,axiom,
    s__instance(s__Palladium__t,s__SetOrClass) ).

fof(kb_SUMO_16349,axiom,
    s__names(s__Palladium,'Palladium') ).

fof(kb_SUMO_16350,axiom,
    s__conventionalShortName('Pd',s__Palladium) ).

fof(kb_SUMO_16351,axiom,
    s__atomicNumber(s__Palladium,"46") ).

fof(kb_SUMO_16352,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Palladium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("106.4",s__Amu)) ) ) ).

fof(kb_SUMO_16353,axiom,
    s__documentation(s__Palladium,s__EnglishLanguage,'Soft white ductile transition element. Found with some copper and nickel ores. Does not react with oxygen at normal temperatures. Dissolves slowly in hydrochloric acid. Discovered in 1803 by W.H. Wollaston.') ).

fof(kb_SUMO_16354,axiom,
    s__subclass(s__Silver,s__ElementalSubstance) ).

fof(kb_SUMO_16355,axiom,
    s__instance(s__Silver__t,s__SetOrClass) ).

fof(kb_SUMO_16356,axiom,
    s__names(s__Silver,'Silver') ).

fof(kb_SUMO_16357,axiom,
    s__conventionalShortName('Ag',s__Silver) ).

fof(kb_SUMO_16358,axiom,
    s__atomicNumber(s__Silver,"47") ).

fof(kb_SUMO_16359,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Silver)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("107.870",s__Amu)) ) ) ).

fof(kb_SUMO_16360,axiom,
    s__documentation(s__Silver,s__EnglishLanguage,'White lustrous soft metallic transition element. Found in both its elemental form and in minerals. Used in jewellery, tableware and so on. Less reactive than silver, chemically.') ).

fof(kb_SUMO_16361,axiom,
    s__subclass(s__Cadmium,s__ElementalSubstance) ).

fof(kb_SUMO_16362,axiom,
    s__instance(s__Cadmium__t,s__SetOrClass) ).

fof(kb_SUMO_16363,axiom,
    s__names(s__Cadmium,'Cadmium') ).

fof(kb_SUMO_16364,axiom,
    s__conventionalShortName('Cd',s__Cadmium) ).

fof(kb_SUMO_16365,axiom,
    s__atomicNumber(s__Cadmium,"48") ).

fof(kb_SUMO_16366,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Cadmium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("112.40",s__Amu)) ) ) ).

fof(kb_SUMO_16367,axiom,
    s__documentation(s__Cadmium,s__EnglishLanguage,'Soft bluish metal belonging to group 12 of the periodic table. Extremely toxic even in low concentrations. Chemically similar to zinc, but lends itself to more complex compounds. Discovered in 1817 by F. Stromeyer.') ).

fof(kb_SUMO_16368,axiom,
    s__subclass(s__Indium,s__ElementalSubstance) ).

fof(kb_SUMO_16369,axiom,
    s__instance(s__Indium__t,s__SetOrClass) ).

fof(kb_SUMO_16370,axiom,
    s__names(s__Indium,'Indium') ).

fof(kb_SUMO_16371,axiom,
    s__conventionalShortName('In',s__Indium) ).

fof(kb_SUMO_16372,axiom,
    s__atomicNumber(s__Indium,"49") ).

fof(kb_SUMO_16373,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Indium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("114.82",s__Amu)) ) ) ).

fof(kb_SUMO_16374,axiom,
    s__documentation(s__Indium,s__EnglishLanguage,'Soft silvery element belonging to group 13 of the periodic table. The most common natural isotope is In-115, which has a half-life of 6*10^4 years. Five other radioisotopes exist. Discovered in 1863 by Reich and Richter.') ).

fof(kb_SUMO_16375,axiom,
    s__subclass(s__Tin,s__ElementalSubstance) ).

fof(kb_SUMO_16376,axiom,
    s__instance(s__Tin__t,s__SetOrClass) ).

fof(kb_SUMO_16377,axiom,
    s__names(s__Tin,'Tin') ).

fof(kb_SUMO_16378,axiom,
    s__conventionalShortName('Sn',s__Tin) ).

fof(kb_SUMO_16379,axiom,
    s__atomicNumber(s__Tin,"50") ).

fof(kb_SUMO_16380,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Tin)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("118.69",s__Amu)) ) ) ).

fof(kb_SUMO_16381,axiom,
    s__documentation(s__Tin,s__EnglishLanguage,'Silvery malleable metallic element belonging to group 14 of the periodic table. Twenty-six isotopes are known, five of which are radioactive. Chemically reactive. Combines directly with chlorine and oxygen and displaces hydrogen from dilute acids. ') ).

fof(kb_SUMO_16382,axiom,
    s__subclass(s__Antimony,s__ElementalSubstance) ).

fof(kb_SUMO_16383,axiom,
    s__instance(s__Antimony__t,s__SetOrClass) ).

fof(kb_SUMO_16384,axiom,
    s__names(s__Antimony,'Antimony') ).

fof(kb_SUMO_16385,axiom,
    s__conventionalShortName('Sb',s__Antimony) ).

fof(kb_SUMO_16386,axiom,
    s__atomicNumber(s__Antimony,"51") ).

fof(kb_SUMO_16387,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Antimony)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("121.75",s__Amu)) ) ) ).

fof(kb_SUMO_16388,axiom,
    s__documentation(s__Antimony,s__EnglishLanguage,'Element of group 15. Multiple allotropic forms. The stable form of antimony is a blue-white metal. Yellow and black antimony are unstable non-metals. Used in flame-proofing, paints, ceramics, enamels, and rubber. Attacked by oxidizing acids and halogens. First reported by Tholden in 1450.') ).

fof(kb_SUMO_16389,axiom,
    s__subclass(s__Tellurium,s__ElementalSubstance) ).

fof(kb_SUMO_16390,axiom,
    s__instance(s__Tellurium__t,s__SetOrClass) ).

fof(kb_SUMO_16391,axiom,
    s__names(s__Tellurium,'Tellurium') ).

fof(kb_SUMO_16392,axiom,
    s__conventionalShortName('Te',s__Tellurium) ).

fof(kb_SUMO_16393,axiom,
    s__atomicNumber(s__Tellurium,"52") ).

fof(kb_SUMO_16394,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Tellurium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("127.60",s__Amu)) ) ) ).

fof(kb_SUMO_16395,axiom,
    s__documentation(s__Tellurium,s__EnglishLanguage,'Silvery metalloid element of group 16. Eight natural isotopes, nine radioactive isotopes. Used in semiconductors and to a degree in some steels. Chemistry is similar to {sulphur}. Discovered in 1782 by Franz Miller.') ).

fof(kb_SUMO_16396,axiom,
    s__subclass(s__Iodine,s__ElementalSubstance) ).

fof(kb_SUMO_16397,axiom,
    s__instance(s__Iodine__t,s__SetOrClass) ).

fof(kb_SUMO_16398,axiom,
    s__names(s__Iodine,'Iodine') ).

fof(kb_SUMO_16399,axiom,
    s__conventionalShortName('I',s__Iodine) ).

fof(kb_SUMO_16400,axiom,
    s__atomicNumber(s__Iodine,"53") ).

fof(kb_SUMO_16401,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Iodine)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("126.904",s__Amu)) ) ) ).

fof(kb_SUMO_16402,axiom,
    s__documentation(s__Iodine,s__EnglishLanguage,'Dark violet nonmetallic element, belongs to group 17 of the periodic table. Insoluble in water. Required as a trace element for living organisms. One stable isotope, I-127 exists, in addition to fourteen radioactive isotopes. Chemically the least reactive of the halogens, and the most electropositive metallic halogen. Discovered in 1812 by Courtois. ') ).

fof(kb_SUMO_16403,axiom,
    s__subclass(s__Xenon,s__ElementalSubstance) ).

fof(kb_SUMO_16404,axiom,
    s__instance(s__Xenon__t,s__SetOrClass) ).

fof(kb_SUMO_16405,axiom,
    s__names(s__Xenon,'Xenon') ).

fof(kb_SUMO_16406,axiom,
    s__conventionalShortName('Xe',s__Xenon) ).

fof(kb_SUMO_16407,axiom,
    s__atomicNumber(s__Xenon,"54") ).

fof(kb_SUMO_16408,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Xenon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("131.30",s__Amu)) ) ) ).

fof(kb_SUMO_16409,axiom,
    s__documentation(s__Xenon,s__EnglishLanguage,'Colourless, odourless gas belonging to group 18 on the periodic table (the noble gases.) Nine natural isotopes and seven radioactive isotopes are known. Xenon was part of the first noble-gas compound synthesized. Several others involving Xenon have been found since then. Xenon was discovered by Ramsey and Travers in 1898.') ).

fof(kb_SUMO_16410,axiom,
    s__subclass(s__Caesium,s__ElementalSubstance) ).

fof(kb_SUMO_16411,axiom,
    s__instance(s__Caesium__t,s__SetOrClass) ).

fof(kb_SUMO_16412,axiom,
    s__names(s__Caesium,'Caesium') ).

fof(kb_SUMO_16413,axiom,
    s__conventionalShortName('Cs',s__Caesium) ).

fof(kb_SUMO_16414,axiom,
    s__atomicNumber(s__Caesium,"55") ).

fof(kb_SUMO_16415,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Caesium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("132.90545",s__Amu)) ) ) ).

fof(kb_SUMO_16416,axiom,
    s__documentation(s__Caesium,s__EnglishLanguage,'Soft silvery-white metallic element belonging to group 1 of the periodic table. One of the three metals which are liquid at room temperature. Cs-133 is the natural, and only stable, isotope. Fifteen other radioisotopes exist. Caesium reacts explosively with cold water, and ice at temperatures above 157K. Caesium hydroxide is the strongest base known. Caesium is the most electropositive, most alkaline and has the least ionization potential of all the elements. Known uses include the basis of atomic clocks, catalyst for the hydrogenation of some organic compounds, and in photoelectric cells. Caesium was discovered by Gustav Kirchoff and Robert Bunsen in Germany in 1860 spectroscopically. Its identification was based upon the bright blue lines in its spectrum. The name comes from the latin word caesius, which means sky blue. Caesium should be considered highly toxic. Some of the radioisotopes are even more toxic.') ).

fof(kb_SUMO_16417,axiom,
    s__subclass(s__Barium,s__ElementalSubstance) ).

fof(kb_SUMO_16418,axiom,
    s__instance(s__Barium__t,s__SetOrClass) ).

fof(kb_SUMO_16419,axiom,
    s__names(s__Barium,'Barium') ).

fof(kb_SUMO_16420,axiom,
    s__conventionalShortName('Ba',s__Barium) ).

fof(kb_SUMO_16421,axiom,
    s__atomicNumber(s__Barium,"56") ).

fof(kb_SUMO_16422,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Barium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("137.34",s__Amu)) ) ) ).

fof(kb_SUMO_16423,axiom,
    s__documentation(s__Barium,s__EnglishLanguage,'Silvery-white reactive element, belonging to group 2 of the periodic table. Soluble barium compounds are extremely poisonous. Identified in 1774 by Karl Scheele and extracted in 1808 by Humphry Davy.') ).

fof(kb_SUMO_16424,axiom,
    s__subclass(s__Lanthanum,s__ElementalSubstance) ).

fof(kb_SUMO_16425,axiom,
    s__instance(s__Lanthanum__t,s__SetOrClass) ).

fof(kb_SUMO_16426,axiom,
    s__names(s__Lanthanum,'Lanthanum') ).

fof(kb_SUMO_16427,axiom,
    s__conventionalShortName('La',s__Lanthanum) ).

fof(kb_SUMO_16428,axiom,
    s__atomicNumber(s__Lanthanum,"57") ).

fof(kb_SUMO_16429,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Lanthanum)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("138.9055",s__Amu)) ) ) ).

fof(kb_SUMO_16430,axiom,
    s__documentation(s__Lanthanum,s__EnglishLanguage,'(From the Greek word lanthanein, to line hidden) Silvery metallic element belonging to group 3 of the periodic table and oft considered to be one of the lanthanoids. Found in some rare-earth minerals. Twenty-five natural isotopes exist. La-139 which is stable, and La-138 which has a half-life of 10^10 to 10^15 years. The other twenty-three isotopes are radioactive. It resembles the lanthanoids chemically. Lanthanum has a low to moderate level of toxicity, and should be handled with care. Discovered in 1839 by C.G. Mosander.') ).

fof(kb_SUMO_16431,axiom,
    s__subclass(s__Cerium,s__ElementalSubstance) ).

fof(kb_SUMO_16432,axiom,
    s__instance(s__Cerium__t,s__SetOrClass) ).

fof(kb_SUMO_16433,axiom,
    s__names(s__Cerium,'Cerium') ).

fof(kb_SUMO_16434,axiom,
    s__conventionalShortName('Ce',s__Cerium) ).

fof(kb_SUMO_16435,axiom,
    s__atomicNumber(s__Cerium,"58") ).

fof(kb_SUMO_16436,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Cerium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("140.12",s__Amu)) ) ) ).

fof(kb_SUMO_16437,axiom,
    s__documentation(s__Cerium,s__EnglishLanguage,'Silvery metallic element, belongs to the lanthanoids. Four natural isotopes exist, and fifteen radioactive isotopes have been identified. Used in some rare-earth alloys. The oxidized form is used in the glass industry. Discovered by Martin .H. Klaproth in 1803.') ).

fof(kb_SUMO_16438,axiom,
    s__subclass(s__Praseodymium,s__ElementalSubstance) ).

fof(kb_SUMO_16439,axiom,
    s__instance(s__Praseodymium__t,s__SetOrClass) ).

fof(kb_SUMO_16440,axiom,
    s__names(s__Praseodymium,'Praseodymium') ).

fof(kb_SUMO_16441,axiom,
    s__conventionalShortName('Pr',s__Praseodymium) ).

fof(kb_SUMO_16442,axiom,
    s__atomicNumber(s__Praseodymium,"59") ).

fof(kb_SUMO_16443,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Praseodymium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("140.907",s__Amu)) ) ) ).

fof(kb_SUMO_16444,axiom,
    s__documentation(s__Praseodymium,s__EnglishLanguage,'Soft silvery metallic element, belongs to the lanthanoids. Only natural isotope is Pr-141 which is not radioactive. Fourteen radioactive isotopes have been artificially produced. Used in rare-earth alloys. Discovered in 1885 by C.A. von Welsbach.') ).

fof(kb_SUMO_16445,axiom,
    s__subclass(s__Neodymium,s__ElementalSubstance) ).

fof(kb_SUMO_16446,axiom,
    s__instance(s__Neodymium__t,s__SetOrClass) ).

fof(kb_SUMO_16447,axiom,
    s__names(s__Neodymium,'Neodymium') ).

fof(kb_SUMO_16448,axiom,
    s__conventionalShortName('Nd',s__Neodymium) ).

fof(kb_SUMO_16449,axiom,
    s__atomicNumber(s__Neodymium,"60") ).

fof(kb_SUMO_16450,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Neodymium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("144.24",s__Amu)) ) ) ).

fof(kb_SUMO_16451,axiom,
    s__documentation(s__Neodymium,s__EnglishLanguage,'Soft bright silvery metallic element, belongs to the lanthanoids. Seven natural isotopes, Nd-144 being the only radioactive one with a half-life of 10^10 to 10^15 years. Six artificial radioisotopes have been produced. The metal is used in glass works to color class a shade of violet-purple and make it dichroic. One of the more reactive rare-earth metals, quickly reacts with air. Used in some rare-earth alloys. Neodymium is used to color the glass used in welders glasses. Neodymium is also used in very powerful, permanent magnets (Nd2Fe14B). Discovered by Carl F. Auer von Welsbach in Austria in 1885 by separating didymium into its elemental components {praseodymium} and neodymium. The name comes from the Greek words neos didymos which means new twin. Neodymium should be considered highly toxic, however evidence would seem to show that it acts as little more than a skin and eye irritant. The dust however, presents a fire and explosion hazard.') ).

fof(kb_SUMO_16452,axiom,
    s__subclass(s__Promethium,s__ElementalSubstance) ).

fof(kb_SUMO_16453,axiom,
    s__instance(s__Promethium__t,s__SetOrClass) ).

fof(kb_SUMO_16454,axiom,
    s__names(s__Promethium,'Promethium') ).

fof(kb_SUMO_16455,axiom,
    s__conventionalShortName('Pm',s__Promethium) ).

fof(kb_SUMO_16456,axiom,
    s__atomicNumber(s__Promethium,"61") ).

fof(kb_SUMO_16457,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Promethium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("147",s__Amu)) ) ) ).

fof(kb_SUMO_16458,axiom,
    s__documentation(s__Promethium,s__EnglishLanguage,'Soft silvery metallic element, belongs to the lanthanoids. Pm-147, the only natural isotope, is radioactive and has a half-life of 252 years. Eighteen radioisotopes have been produced, but all have very short half-lives. Found only in nuclear decay waste. Pm-147 is of interest as a beta-decay source, however Pm-146 and Pm-148 have to be removed from it first, as they generate gamma radiation. Discovered by J.A. Marinsky, L.E. Glendenin and C.D. Coryell in 1947.') ).

fof(kb_SUMO_16459,axiom,
    s__subclass(s__Samarium,s__ElementalSubstance) ).

fof(kb_SUMO_16460,axiom,
    s__instance(s__Samarium__t,s__SetOrClass) ).

fof(kb_SUMO_16461,axiom,
    s__names(s__Samarium,'Samarium') ).

fof(kb_SUMO_16462,axiom,
    s__conventionalShortName('Sm',s__Samarium) ).

fof(kb_SUMO_16463,axiom,
    s__atomicNumber(s__Samarium,"62") ).

fof(kb_SUMO_16464,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Samarium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("150.35",s__Amu)) ) ) ).

fof(kb_SUMO_16465,axiom,
    s__documentation(s__Samarium,s__EnglishLanguage,'Soft silvery metallic element, belongs to the lanthanoids. Seven natural isotopes, Sm-147 is the only radioisotope, and has a half-life of 2.5*10^11 years. Used for making special alloys needed in the production of nuclear reactors. Also used as a neutron absorber. Small quantities of samarium oxide is used in special optical glasses. The largest use of the element is its ferromagnetic alloy which produces permanent magnets that are five times stronger than magnets produced by any other material. Discovered by Francois Lecoq de Boisbaudran in 1879.') ).

fof(kb_SUMO_16466,axiom,
    s__subclass(s__Europium,s__ElementalSubstance) ).

fof(kb_SUMO_16467,axiom,
    s__instance(s__Europium__t,s__SetOrClass) ).

fof(kb_SUMO_16468,axiom,
    s__names(s__Europium,'Europium') ).

fof(kb_SUMO_16469,axiom,
    s__conventionalShortName('Eu',s__Europium) ).

fof(kb_SUMO_16470,axiom,
    s__atomicNumber(s__Europium,"63") ).

fof(kb_SUMO_16471,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Europium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("151.25",s__Amu)) ) ) ).

fof(kb_SUMO_16472,axiom,
    s__documentation(s__Europium,s__EnglishLanguage,'Soft silvery metallic element belonging to the lanthanoids. Eu-151 and Eu-153 are the only two stable isotopes, both of which are {neutron} absorbers. Discovered in 1889 by Sir William Crookes.') ).

fof(kb_SUMO_16473,axiom,
    s__subclass(s__Gadolinium,s__ElementalSubstance) ).

fof(kb_SUMO_16474,axiom,
    s__instance(s__Gadolinium__t,s__SetOrClass) ).

fof(kb_SUMO_16475,axiom,
    s__names(s__Gadolinium,'Gadolinium') ).

fof(kb_SUMO_16476,axiom,
    s__conventionalShortName('Gd',s__Gadolinium) ).

fof(kb_SUMO_16477,axiom,
    s__atomicNumber(s__Gadolinium,"64") ).

fof(kb_SUMO_16478,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Gadolinium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("157.25",s__Amu)) ) ) ).

fof(kb_SUMO_16479,axiom,
    s__documentation(s__Gadolinium,s__EnglishLanguage,'Soft silvery metallic element belonging to the lanthanoids. Seven natural, stable isotopes are known in addition to eleven artificial isotopes. Gd-155 and Gd-157 and the best neutron absorbers of all elements. Gadolinium compounds are used in electronics. Discovered by J.C.G Marignac in 1880.') ).

fof(kb_SUMO_16480,axiom,
    s__subclass(s__Terbium,s__ElementalSubstance) ).

fof(kb_SUMO_16481,axiom,
    s__instance(s__Terbium__t,s__SetOrClass) ).

fof(kb_SUMO_16482,axiom,
    s__names(s__Terbium,'Terbium') ).

fof(kb_SUMO_16483,axiom,
    s__conventionalShortName('Tb',s__Terbium) ).

fof(kb_SUMO_16484,axiom,
    s__atomicNumber(s__Terbium,"65") ).

fof(kb_SUMO_16485,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Terbium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("158.924",s__Amu)) ) ) ).

fof(kb_SUMO_16486,axiom,
    s__documentation(s__Terbium,s__EnglishLanguage,'Silvery metallic element belonging to the lanthanoids. Tb-159 is the only stable isotope, there are seventeen artificial isotopes. Discovered by G.G. Mosander in 1843.') ).

fof(kb_SUMO_16487,axiom,
    s__subclass(s__Dysprosium,s__ElementalSubstance) ).

fof(kb_SUMO_16488,axiom,
    s__instance(s__Dysprosium__t,s__SetOrClass) ).

fof(kb_SUMO_16489,axiom,
    s__names(s__Dysprosium,'Dysprosium') ).

fof(kb_SUMO_16490,axiom,
    s__conventionalShortName('Dy',s__Dysprosium) ).

fof(kb_SUMO_16491,axiom,
    s__atomicNumber(s__Dysprosium,"66") ).

fof(kb_SUMO_16492,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Dysprosium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("162.50",s__Amu)) ) ) ).

fof(kb_SUMO_16493,axiom,
    s__documentation(s__Dysprosium,s__EnglishLanguage,'Metallic with a bright silvery-white lustre. Dysprosium belongs to the lanthanoids. It is relatively stable in air at room temperatures, it will however dissolve in mineral acids, evolving hydrogen. It is found in from rare-earth minerals. There are seven natural isotopes of dysprosium, and eight radioisotopes, Dy-154 being the most stable with a half-life of 3*10^6 years. Dysprosium is used as a neutron absorber in nuclear fission reactions, and in compact disks. It was discovered by Paul Emile Lecoq de Boisbaudran in 1886 in France. Its name comes from the Greek word dysprositos, which means hard to obtain.') ).

fof(kb_SUMO_16494,axiom,
    s__subclass(s__Holmium,s__ElementalSubstance) ).

fof(kb_SUMO_16495,axiom,
    s__instance(s__Holmium__t,s__SetOrClass) ).

fof(kb_SUMO_16496,axiom,
    s__names(s__Holmium,'Holmium') ).

fof(kb_SUMO_16497,axiom,
    s__conventionalShortName('Ho',s__Holmium) ).

fof(kb_SUMO_16498,axiom,
    s__atomicNumber(s__Holmium,"67") ).

fof(kb_SUMO_16499,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Holmium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("167.26",s__Amu)) ) ) ).

fof(kb_SUMO_16500,axiom,
    s__documentation(s__Holmium,s__EnglishLanguage,'Relatively soft and malleable silvery-white metallic element, which is stable in dry air at room temperature. It oxidizes in moist air and at high temperatures. It belongs to the lanthanoids. A rare-earth metal, it is found in the minerals monazite and gadolinite. It possesses unusual magnetic properties. One natural isotope, Ho-165 exists, six radioisotopes exist, the most stable being Ho-163 with a half-life of 4570 years. Holmium is used in some metal alloys, it is also said to stimulate the metabolism. Discovered by Per Theodor Cleve and J.L. Soret in Switzerland in 1879. The name homium comes from the Greek word Holmia which means Sweden. While all holmium compounds should be considered highly toxic, initial evidence seems to indicate that they do not pose much danger. The metals dust however, is a fire hazard.') ).

fof(kb_SUMO_16501,axiom,
    s__subclass(s__Erbium,s__ElementalSubstance) ).

fof(kb_SUMO_16502,axiom,
    s__instance(s__Erbium__t,s__SetOrClass) ).

fof(kb_SUMO_16503,axiom,
    s__names(s__Erbium,'Erbium') ).

fof(kb_SUMO_16504,axiom,
    s__conventionalShortName('Er',s__Erbium) ).

fof(kb_SUMO_16505,axiom,
    s__atomicNumber(s__Erbium,"68") ).

fof(kb_SUMO_16506,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Erbium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("167.26",s__Amu)) ) ) ).

fof(kb_SUMO_16507,axiom,
    s__documentation(s__Erbium,s__EnglishLanguage,'Soft silvery metallic element which belongs to the lanthanoids. Six natural isotopes that are stable. Twelve artificial isotopes are known. Used in nuclear technology as a neutron absorber. It is being investigated for other possible uses. Discovered by Carl G. Mosander in 1843.') ).

fof(kb_SUMO_16508,axiom,
    s__subclass(s__Thulium,s__ElementalSubstance) ).

fof(kb_SUMO_16509,axiom,
    s__instance(s__Thulium__t,s__SetOrClass) ).

fof(kb_SUMO_16510,axiom,
    s__names(s__Thulium,'Thulium') ).

fof(kb_SUMO_16511,axiom,
    s__conventionalShortName('Tm',s__Thulium) ).

fof(kb_SUMO_16512,axiom,
    s__atomicNumber(s__Thulium,"69") ).

fof(kb_SUMO_16513,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Thulium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("168.934",s__Amu)) ) ) ).

fof(kb_SUMO_16514,axiom,
    s__documentation(s__Thulium,s__EnglishLanguage,'Soft grey metallic element that belongs to the lanthanoids. One natural isotope exists, Tm-169, and seventeen artificial isotopes have been produced. No known uses for the element. Discovered in 1879 by Per Theodor Cleve.') ).

fof(kb_SUMO_16515,axiom,
    s__subclass(s__Ytterbium,s__ElementalSubstance) ).

fof(kb_SUMO_16516,axiom,
    s__instance(s__Ytterbium__t,s__SetOrClass) ).

fof(kb_SUMO_16517,axiom,
    s__names(s__Ytterbium,'Ytterbium') ).

fof(kb_SUMO_16518,axiom,
    s__conventionalShortName('Yb',s__Ytterbium) ).

fof(kb_SUMO_16519,axiom,
    s__atomicNumber(s__Ytterbium,"70") ).

fof(kb_SUMO_16520,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Ytterbium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("173.04",s__Amu)) ) ) ).

fof(kb_SUMO_16521,axiom,
    s__documentation(s__Ytterbium,s__EnglishLanguage,'Silvery metallic element of the lanthanoids. Seven natural isotopes and ten artificial isotopes are known. Used in certain steels. Discovered by J.D.G. Marignac in 1878.') ).

fof(kb_SUMO_16522,axiom,
    s__subclass(s__Lutetium,s__ElementalSubstance) ).

fof(kb_SUMO_16523,axiom,
    s__instance(s__Lutetium__t,s__SetOrClass) ).

fof(kb_SUMO_16524,axiom,
    s__names(s__Lutetium,'Lutetium') ).

fof(kb_SUMO_16525,axiom,
    s__conventionalShortName('Lu',s__Lutetium) ).

fof(kb_SUMO_16526,axiom,
    s__atomicNumber(s__Lutetium,"71") ).

fof(kb_SUMO_16527,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Lutetium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("194.967",s__Amu)) ) ) ).

fof(kb_SUMO_16528,axiom,
    s__documentation(s__Lutetium,s__EnglishLanguage,'Silvery-white rare-earth metal which is relatively stable in air. It happens to be the most expensive rare-earth metal. Its found with almost all rare-earth metals, but is very difficult to separate from other elements. Least abundant of all natural elements. Used in metal alloys, and as a catalyst in various processes. There are two natural, stable isotopes, and seven radioisotopes, the most stable being Lu-174 with a half-life of 3.3 years. The separation of lutetium from {ytterbium} was described by Georges Urbain in 1907. It was discovered at approximately the same time by Carl Auer von Welsbach. The name comes from the Greek word lutetia which means Paris.') ).

fof(kb_SUMO_16529,axiom,
    s__subclass(s__Hafnium,s__ElementalSubstance) ).

fof(kb_SUMO_16530,axiom,
    s__instance(s__Hafnium__t,s__SetOrClass) ).

fof(kb_SUMO_16531,axiom,
    s__names(s__Hafnium,'Hafnium') ).

fof(kb_SUMO_16532,axiom,
    s__conventionalShortName('Hf',s__Hafnium) ).

fof(kb_SUMO_16533,axiom,
    s__atomicNumber(s__Hafnium,"72") ).

fof(kb_SUMO_16534,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Hafnium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("178.49",s__Amu)) ) ) ).

fof(kb_SUMO_16535,axiom,
    s__documentation(s__Hafnium,s__EnglishLanguage,'Silvery lustrous metallic transition element. Used in tungsten alloys in filaments and electrodes, also acts as a neutron absorber. First reported by Urbain in 1911, existence was finally established in 1923 by D. Coster, G.C. de Hevesy in 1923.') ).

fof(kb_SUMO_16536,axiom,
    s__subclass(s__Tantalum,s__ElementalSubstance) ).

fof(kb_SUMO_16537,axiom,
    s__instance(s__Tantalum__t,s__SetOrClass) ).

fof(kb_SUMO_16538,axiom,
    s__names(s__Tantalum,'Tantalum') ).

fof(kb_SUMO_16539,axiom,
    s__conventionalShortName('Ta',s__Tantalum) ).

fof(kb_SUMO_16540,axiom,
    s__atomicNumber(s__Tantalum,"73") ).

fof(kb_SUMO_16541,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Tantalum)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("180.948",s__Amu)) ) ) ).

fof(kb_SUMO_16542,axiom,
    s__documentation(s__Tantalum,s__EnglishLanguage,'Heavy blue-grey metallic transition element. Ta-181 is a stable isotope, and Ta-180 is a radioactive isotope, with a half-life in excess of 10^7 years. Used in surgery as it is unreactive. Forms a passive oxide layer in air. Identified in 1802 by Ekeberg and isolated in 1820 by Jons J. Berzelius.') ).

fof(kb_SUMO_16543,axiom,
    s__subclass(s__Tungsten,s__ElementalSubstance) ).

fof(kb_SUMO_16544,axiom,
    s__instance(s__Tungsten__t,s__SetOrClass) ).

fof(kb_SUMO_16545,axiom,
    s__names(s__Tungsten,'Tungsten') ).

fof(kb_SUMO_16546,axiom,
    s__conventionalShortName('W',s__Tungsten) ).

fof(kb_SUMO_16547,axiom,
    s__atomicNumber(s__Tungsten,"74") ).

fof(kb_SUMO_16548,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Tungsten)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("183.85",s__Amu)) ) ) ).

fof(kb_SUMO_16549,axiom,
    s__documentation(s__Tungsten,s__EnglishLanguage,'White or grey metallic transition element, formerly called {wolfram}. Forms a protective oxide in air and can be oxidized at high temperature. First isolated by Jose and Fausto de Elhuyer in 1783.') ).

fof(kb_SUMO_16550,axiom,
    s__subclass(s__Rhenium,s__ElementalSubstance) ).

fof(kb_SUMO_16551,axiom,
    s__instance(s__Rhenium__t,s__SetOrClass) ).

fof(kb_SUMO_16552,axiom,
    s__names(s__Rhenium,'Rhenium') ).

fof(kb_SUMO_16553,axiom,
    s__conventionalShortName('Re',s__Rhenium) ).

fof(kb_SUMO_16554,axiom,
    s__atomicNumber(s__Rhenium,"75") ).

fof(kb_SUMO_16555,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Rhenium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("186.2",s__Amu)) ) ) ).

fof(kb_SUMO_16556,axiom,
    s__documentation(s__Rhenium,s__EnglishLanguage,'Silvery-white metallic transition element. Obtained as a by-product of molybdenum refinement. Rhenium-molybdenum alloys are superconducting.') ).

fof(kb_SUMO_16557,axiom,
    s__subclass(s__Osmium,s__ElementalSubstance) ).

fof(kb_SUMO_16558,axiom,
    s__instance(s__Osmium__t,s__SetOrClass) ).

fof(kb_SUMO_16559,axiom,
    s__names(s__Osmium,'Osmium') ).

fof(kb_SUMO_16560,axiom,
    s__conventionalShortName('Os',s__Osmium) ).

fof(kb_SUMO_16561,axiom,
    s__atomicNumber(s__Osmium,"76") ).

fof(kb_SUMO_16562,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Osmium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("190.2",s__Amu)) ) ) ).

fof(kb_SUMO_16563,axiom,
    s__documentation(s__Osmium,s__EnglishLanguage,'Hard blue-white metallic transition element. Found with platinum and used in some alloys with platinum and iridium.') ).

fof(kb_SUMO_16564,axiom,
    s__subclass(s__Iridium,s__ElementalSubstance) ).

fof(kb_SUMO_16565,axiom,
    s__instance(s__Iridium__t,s__SetOrClass) ).

fof(kb_SUMO_16566,axiom,
    s__names(s__Iridium,'Iridium') ).

fof(kb_SUMO_16567,axiom,
    s__conventionalShortName('Ir',s__Iridium) ).

fof(kb_SUMO_16568,axiom,
    s__atomicNumber(s__Iridium,"77") ).

fof(kb_SUMO_16569,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Iridium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("192.217",s__Amu)) ) ) ).

fof(kb_SUMO_16570,axiom,
    s__documentation(s__Iridium,s__EnglishLanguage,'Very hard and brittle, silvery metallic transition element. It has a yellowish cast to it. Salts of iridium are highly colored. It is the most corrosion resistant metal known, not attacked by any acid, but is attacked by molten salts. There are two natural isotopes of iridium, and 4 radioisotopes, the most stable being Ir-192 with a half-life of 73.83 days. Ir-192 decays into {platinum}, while the other radioisotopes decay into {osmium}. Iridium is used in high temperature apparatus, electrical contacts, and as a hardening agent for platinum. Discovered in 1803 by Smithson Tennant in England. The name comes from the Greek word iris, which means rainbow. Iridium metal is generally non-toxic due to its relative unreactivity, but iridium compounds should be considered highly toxic.') ).

fof(kb_SUMO_16571,axiom,
    s__subclass(s__Platinum,s__ElementalSubstance) ).

fof(kb_SUMO_16572,axiom,
    s__instance(s__Platinum__t,s__SetOrClass) ).

fof(kb_SUMO_16573,axiom,
    s__names(s__Platinum,'Platinum') ).

fof(kb_SUMO_16574,axiom,
    s__conventionalShortName('Pt',s__Platinum) ).

fof(kb_SUMO_16575,axiom,
    s__atomicNumber(s__Platinum,"78") ).

fof(kb_SUMO_16576,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Platinum)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("195.078",s__Amu)) ) ) ).

fof(kb_SUMO_16577,axiom,
    s__documentation(s__Platinum,s__EnglishLanguage,'Attractive greyish-white metal. When pure, it is malleable and ductile. Does not oxidize in air, insoluble in hydrochloric and nitric acid. Corroded by halogens, cyandies, sulphur and alkalis. {Hydrogen} and {oxygen} react explosively in the presence of platinum. There are six stable isotopes and three radioisotopes, the most stable being Pt-193 with a half-life of 60 years. Platinum is used in jewelry, laboratory equipment, electrical contacts, dentistry, and anti-pollution devices in cars. PtCl2(NH3)2 is used to treat some forms of cancer. Platinum-{cobalt} alloys have magnetic properties. It is also used in the definition of the Standard Hydrogen Electrode. Discovered by Antonio de Ulloa in South America in 1735. The name comes from the Spanish word platina which means silver. Platinum metal is generally not a health concern due to its unreactivity, however platinum compounds should be considered highly toxic.') ).

fof(kb_SUMO_16578,axiom,
    s__subclass(s__Gold,s__ElementalSubstance) ).

fof(kb_SUMO_16579,axiom,
    s__instance(s__Gold__t,s__SetOrClass) ).

fof(kb_SUMO_16580,axiom,
    s__names(s__Gold,'Gold') ).

fof(kb_SUMO_16581,axiom,
    s__conventionalShortName('Au',s__Gold) ).

fof(kb_SUMO_16582,axiom,
    s__atomicNumber(s__Gold,"79") ).

fof(kb_SUMO_16583,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Gold)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("196.96655",s__Amu)) ) ) ).

fof(kb_SUMO_16584,axiom,
    s__documentation(s__Gold,s__EnglishLanguage,'Gold is gold colored. It is the most malleable and ductile metal known. There is only one stable isotope of gold, and five radioisotopes of gold, Au-195 being the most stable with a half-life of 186 days. Gold is used as a monetary standard, in jewelry, dentistry, electronics. Au-198 is used in treating cancer and some other medical conditions. Gold has been known to exist as far back as 2600 BC. Gold comes from the Anglo-Saxon word gold. Its symbol, Au, comes from the Latin word aurum, which means gold. Gold is not particularly toxic, however it is known to cause damage to the liver and kidneys in some.') ).

fof(kb_SUMO_16585,axiom,
    s__subclass(s__Mercury,s__ElementalSubstance) ).

fof(kb_SUMO_16586,axiom,
    s__instance(s__Mercury__t,s__SetOrClass) ).

fof(kb_SUMO_16587,axiom,
    s__names(s__Mercury,'Mercury') ).

fof(kb_SUMO_16588,axiom,
    s__conventionalShortName('Hg',s__Mercury) ).

fof(kb_SUMO_16589,axiom,
    s__atomicNumber(s__Mercury,"80") ).

fof(kb_SUMO_16590,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Mercury)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("200.59",s__Amu)) ) ) ).

fof(kb_SUMO_16591,axiom,
    s__documentation(s__Mercury,s__EnglishLanguage,'Heavy silvery liquid metallic element, belongs to the zinc group. Used in thermometers, barometers and other scientific apparatus. Less reactive than zinc and cadmium, does not displace hydrogen from acids. Forms a number of complexes and organomercury compounds.') ).

fof(kb_SUMO_16592,axiom,
    s__subclass(s__Thallium,s__ElementalSubstance) ).

fof(kb_SUMO_16593,axiom,
    s__instance(s__Thallium__t,s__SetOrClass) ).

fof(kb_SUMO_16594,axiom,
    s__names(s__Thallium,'Thallium') ).

fof(kb_SUMO_16595,axiom,
    s__conventionalShortName('Tl',s__Thallium) ).

fof(kb_SUMO_16596,axiom,
    s__atomicNumber(s__Thallium,"81") ).

fof(kb_SUMO_16597,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Thallium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("204.3833",s__Amu)) ) ) ).

fof(kb_SUMO_16598,axiom,
    s__documentation(s__Thallium,s__EnglishLanguage,'Pure, unreacted thallium appears silvery-white and exhibits a metallic lustre. Upon reacting with air, it begins to turn bluish-grey and looks like lead. It is very malleable, and can be cut with a knife. There are two stable isotopes, and four radioisotopes, Tl-204 being the most stable with a half-life of 3.78 years. Thallium sulphate was used as a rodenticide. Thallium sulphines conductivity changes with exposure to infrared light, this gives it a use in infrared detectors. Discovered by Sir William Crookes via spectroscopy. Its name comes from the Greek word thallos, which means green twig. Thallium and its compounds are toxic and can cause cancer.') ).

fof(kb_SUMO_16599,axiom,
    s__subclass(s__Lead,s__ElementalSubstance) ).

fof(kb_SUMO_16600,axiom,
    s__instance(s__Lead__t,s__SetOrClass) ).

fof(kb_SUMO_16601,axiom,
    s__names(s__Lead,'Lead') ).

fof(kb_SUMO_16602,axiom,
    s__conventionalShortName('Pb',s__Lead) ).

fof(kb_SUMO_16603,axiom,
    s__atomicNumber(s__Lead,"82") ).

fof(kb_SUMO_16604,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Lead)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("207.19",s__Amu)) ) ) ).

fof(kb_SUMO_16605,axiom,
    s__documentation(s__Lead,s__EnglishLanguage,'Heavy dull grey ductile metallic element, belongs to group 14. Used in building construction, lead-place accumulators, bullets and shot, and is part of solder, pewter, bearing metals, type metals and fusible alloys.') ).

fof(kb_SUMO_16606,axiom,
    s__subclass(s__Bismuth,s__ElementalSubstance) ).

fof(kb_SUMO_16607,axiom,
    s__instance(s__Bismuth__t,s__SetOrClass) ).

fof(kb_SUMO_16608,axiom,
    s__names(s__Bismuth,'Bismuth') ).

fof(kb_SUMO_16609,axiom,
    s__conventionalShortName('Bi',s__Bismuth) ).

fof(kb_SUMO_16610,axiom,
    s__atomicNumber(s__Bismuth,"83") ).

fof(kb_SUMO_16611,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Bismuth)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("208.980",s__Amu)) ) ) ).

fof(kb_SUMO_16612,axiom,
    s__documentation(s__Bismuth,s__EnglishLanguage,'White crystalline metal with a pink tinge, belongs to group 15. Most diamagnetic of all metals and has the lowest thermal conductivity of all the elements except mercury. Lead-free bismuth compounds are used in cosmetics and medical procedures. Burns in the air and produces a blue flame. In 1753, C.G. Junine first demonstrated that it was different from lead.') ).

fof(kb_SUMO_16613,axiom,
    s__subclass(s__Polonium,s__ElementalSubstance) ).

fof(kb_SUMO_16614,axiom,
    s__instance(s__Polonium__t,s__SetOrClass) ).

fof(kb_SUMO_16615,axiom,
    s__names(s__Polonium,'Polonium') ).

fof(kb_SUMO_16616,axiom,
    s__conventionalShortName('Po',s__Polonium) ).

fof(kb_SUMO_16617,axiom,
    s__atomicNumber(s__Polonium,"84") ).

fof(kb_SUMO_16618,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Polonium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("210",s__Amu)) ) ) ).

fof(kb_SUMO_16619,axiom,
    s__documentation(s__Polonium,s__EnglishLanguage,'Rare radioactive metallic element, belongs to group 16 of the periodic table. Over 30 known isotopes exist, the most of all elements. Po-209 has a half-life of 103 years. Possible uses in heating spacecraft. Discovered by Marie Curie in 1898 in a sample of pitchblende.') ).

fof(kb_SUMO_16620,axiom,
    s__subclass(s__Astatine,s__ElementalSubstance) ).

fof(kb_SUMO_16621,axiom,
    s__instance(s__Astatine__t,s__SetOrClass) ).

fof(kb_SUMO_16622,axiom,
    s__names(s__Astatine,'Astatine') ).

fof(kb_SUMO_16623,axiom,
    s__conventionalShortName('At',s__Astatine) ).

fof(kb_SUMO_16624,axiom,
    s__atomicNumber(s__Astatine,"85") ).

fof(kb_SUMO_16625,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Astatine)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("210",s__Amu)) ) ) ).

fof(kb_SUMO_16626,axiom,
    s__documentation(s__Astatine,s__EnglishLanguage,'Radioactive halogen element. Occurs naturally from uranium and thorium decay. At least 20 known isotopes. At-210, the most stable, has a half-life of 8.3 hours. Synthesized by nuclear bombardment in 1940 by D.R. Corson, K.R. MacKenzie and E. Segre at the University of California.') ).

fof(kb_SUMO_16627,axiom,
    s__subclass(s__Radon,s__ElementalSubstance) ).

fof(kb_SUMO_16628,axiom,
    s__instance(s__Radon__t,s__SetOrClass) ).

fof(kb_SUMO_16629,axiom,
    s__names(s__Radon,'Radon') ).

fof(kb_SUMO_16630,axiom,
    s__conventionalShortName('Rn',s__Radon) ).

fof(kb_SUMO_16631,axiom,
    s__atomicNumber(s__Radon,"86") ).

fof(kb_SUMO_16632,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Radon)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("222",s__Amu)) ) ) ).

fof(kb_SUMO_16633,axiom,
    s__documentation(s__Radon,s__EnglishLanguage,'Colorless radioactive gaseous element, belongs to the noble gases. Of the twenty known isotopes, the most stable is Rn-222 with a half-life of 3.8 days. Formed by the radioactive decay of {Radium}-226. Radon itself decays into {polonium}. Used in radiotherapy. As a noble gas, it is effectively inert, though radon fluoride has been synthesized. First isolated in 1908 by Ramsey and Gray.') ).

fof(kb_SUMO_16634,axiom,
    s__subclass(s__Francium,s__ElementalSubstance) ).

fof(kb_SUMO_16635,axiom,
    s__instance(s__Francium__t,s__SetOrClass) ).

fof(kb_SUMO_16636,axiom,
    s__names(s__Francium,'Francium') ).

fof(kb_SUMO_16637,axiom,
    s__conventionalShortName('Fr',s__Francium) ).

fof(kb_SUMO_16638,axiom,
    s__atomicNumber(s__Francium,"87") ).

fof(kb_SUMO_16639,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Francium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("223",s__Amu)) ) ) ).

fof(kb_SUMO_16640,axiom,
    s__documentation(s__Francium,s__EnglishLanguage,'Radioactive element, belongs to group 1 of the periodic table. Found in uranium and thorium ores. The 22 known isotopes are all radioactive, with the most stable being Fr-223. Its existence was confirmed in 1939 by Marguerite Perey.') ).

fof(kb_SUMO_16641,axiom,
    s__subclass(s__Radium,s__ElementalSubstance) ).

fof(kb_SUMO_16642,axiom,
    s__instance(s__Radium__t,s__SetOrClass) ).

fof(kb_SUMO_16643,axiom,
    s__names(s__Radium,'Radium') ).

fof(kb_SUMO_16644,axiom,
    s__conventionalShortName('Ra',s__Radium) ).

fof(kb_SUMO_16645,axiom,
    s__atomicNumber(s__Radium,"88") ).

fof(kb_SUMO_16646,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Radium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("226",s__Amu)) ) ) ).

fof(kb_SUMO_16647,axiom,
    s__documentation(s__Radium,s__EnglishLanguage,'Radioactive metallic transuranic element, belongs to group 2 of the periodic table. Most stable isotope, Ra-226 has a half-life of 1602 years, which decays into radon. Isolated from pitchblende in 1898 Marie and Pierre Curie.') ).

fof(kb_SUMO_16648,axiom,
    s__subclass(s__Actinium,s__ElementalSubstance) ).

fof(kb_SUMO_16649,axiom,
    s__instance(s__Actinium__t,s__SetOrClass) ).

fof(kb_SUMO_16650,axiom,
    s__names(s__Actinium,'Actinium') ).

fof(kb_SUMO_16651,axiom,
    s__conventionalShortName('Ac',s__Actinium) ).

fof(kb_SUMO_16652,axiom,
    s__atomicNumber(s__Actinium,"89") ).

fof(kb_SUMO_16653,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Actinium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("227",s__Amu)) ) ) ).

fof(kb_SUMO_16654,axiom,
    s__documentation(s__Actinium,s__EnglishLanguage,'Silvery radioactive metallic element, belongs to group 3 of the periodic table. The most stable isotope, Ac-227, has a half-life of 217 years. Ac-228 (half-life of 6.13 hours) also occurs in nature. There are 22 other artificial isotopes, all radioactive and having very short half-lives. Chemistry similar to lanthanum. Used as a source of alpha particles. Discovered by A. Debierne in 1899.') ).

fof(kb_SUMO_16655,axiom,
    s__subclass(s__Thorium,s__ElementalSubstance) ).

fof(kb_SUMO_16656,axiom,
    s__instance(s__Thorium__t,s__SetOrClass) ).

fof(kb_SUMO_16657,axiom,
    s__names(s__Thorium,'Thorium') ).

fof(kb_SUMO_16658,axiom,
    s__conventionalShortName('Th',s__Thorium) ).

fof(kb_SUMO_16659,axiom,
    s__atomicNumber(s__Thorium,"90") ).

fof(kb_SUMO_16660,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Thorium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("232.038",s__Amu)) ) ) ).

fof(kb_SUMO_16661,axiom,
    s__documentation(s__Thorium,s__EnglishLanguage,'Grey radioactive metallic element. Belongs to actinoids. Found in monazite sand in Brazil, India and the US. Thorium-232 has a half-life of 1.39x10^10 years. Can be used as a nuclear fuel for breeder reactors. Thorium-232 captures slow {neutron}s and breeds uranium-233. Discovered by Jons J. Berzelius in 1829.') ).

fof(kb_SUMO_16662,axiom,
    s__subclass(s__Protactinium,s__ElementalSubstance) ).

fof(kb_SUMO_16663,axiom,
    s__instance(s__Protactinium__t,s__SetOrClass) ).

fof(kb_SUMO_16664,axiom,
    s__names(s__Protactinium,'Protactinium') ).

fof(kb_SUMO_16665,axiom,
    s__conventionalShortName('Pa',s__Protactinium) ).

fof(kb_SUMO_16666,axiom,
    s__atomicNumber(s__Protactinium,"91") ).

fof(kb_SUMO_16667,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Protactinium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("231",s__Amu)) ) ) ).

fof(kb_SUMO_16668,axiom,
    s__documentation(s__Protactinium,s__EnglishLanguage,'Radioactive metallic element, belongs to the actinoids. The most stable isotope, Pa-231 has a half-life of 2.43*10^4 years. At least 10 other radioactive isotopes are known. No practical applications are known. Discovered in 1917 by Lise Meitner and Otto Hahn.') ).

fof(kb_SUMO_16669,axiom,
    s__subclass(s__Uranium,s__ElementalSubstance) ).

fof(kb_SUMO_16670,axiom,
    s__instance(s__Uranium__t,s__SetOrClass) ).

fof(kb_SUMO_16671,axiom,
    s__names(s__Uranium,'Uranium') ).

fof(kb_SUMO_16672,axiom,
    s__conventionalShortName('U',s__Uranium) ).

fof(kb_SUMO_16673,axiom,
    s__atomicNumber(s__Uranium,"92") ).

fof(kb_SUMO_16674,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Uranium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("231",s__Amu)) ) ) ).

fof(kb_SUMO_16675,axiom,
    s__documentation(s__Uranium,s__EnglishLanguage,'White radioactive metallic element belonging to the actinoids. Three natural isotopes, U-238, U-235 and U-234. Uranium-235 is used as the fuel for nuclear reactors and weapons. Discovered by Martin H. Klaproth in 1789.') ).

fof(kb_SUMO_16676,axiom,
    s__subclass(s__Neptunium,s__ElementalSubstance) ).

fof(kb_SUMO_16677,axiom,
    s__instance(s__Neptunium__t,s__SetOrClass) ).

fof(kb_SUMO_16678,axiom,
    s__names(s__Neptunium,'Neptunium') ).

fof(kb_SUMO_16679,axiom,
    s__conventionalShortName('Np',s__Neptunium) ).

fof(kb_SUMO_16680,axiom,
    s__atomicNumber(s__Neptunium,"93") ).

fof(kb_SUMO_16681,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Neptunium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("237",s__Amu)) ) ) ).

fof(kb_SUMO_16682,axiom,
    s__documentation(s__Neptunium,s__EnglishLanguage,'Radioactive metallic transuranic element, belongs to the actinoids. Np-237, the most stable isotope, has a half-life of 2.2*10^6 years and is a by product of nuclear reactors. The other known isotopes have mass numbers 229 through 236, and 238 through 241. Np-236 has a half-life of 5*10^3 years. First produced by Edwin M. McMillan and P.H. Abelson in 1940.') ).

fof(kb_SUMO_16683,axiom,
    s__subclass(s__Plutonium,s__ElementalSubstance) ).

fof(kb_SUMO_16684,axiom,
    s__instance(s__Plutonium__t,s__SetOrClass) ).

fof(kb_SUMO_16685,axiom,
    s__names(s__Plutonium,'Plutonium') ).

fof(kb_SUMO_16686,axiom,
    s__conventionalShortName('Pu',s__Plutonium) ).

fof(kb_SUMO_16687,axiom,
    s__atomicNumber(s__Plutonium,"94") ).

fof(kb_SUMO_16688,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Plutonium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("242",s__Amu)) ) ) ).

fof(kb_SUMO_16689,axiom,
    s__documentation(s__Plutonium,s__EnglishLanguage,'Dense silvery radioactive metallic transuranic element, belongs to the actinoids. Pu-244 is the most stable isotope with a half-life of 7.6*10^7 years. Thirteen isotopes are known. Pu-239 is the most important, it undergoes nuclear fission with slow neutrons and is hence important to nuclear weapons and reactors. Plutonium production is monitored down to the gram to prevent military misuse. First produced by Gleen T. Seaborg, Edwin M. McMillan, J.W. Kennedy and A.C. Wahl in 1940.') ).

fof(kb_SUMO_16690,axiom,
    s__subclass(s__Americium,s__ElementalSubstance) ).

fof(kb_SUMO_16691,axiom,
    s__instance(s__Americium__t,s__SetOrClass) ).

fof(kb_SUMO_16692,axiom,
    s__names(s__Americium,'Americium') ).

fof(kb_SUMO_16693,axiom,
    s__conventionalShortName('Am',s__Americium) ).

fof(kb_SUMO_16694,axiom,
    s__atomicNumber(s__Americium,"95") ).

fof(kb_SUMO_16695,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Americium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("243",s__Amu)) ) ) ).

fof(kb_SUMO_16696,axiom,
    s__documentation(s__Americium,s__EnglishLanguage,'Radioactive metallic transuranic element, belongs to the actinoids. Ten known isotopes. Am-243 is the most stable isotope, with a half-life of 7.95*10^3 years. Discovered by Glenn T. Seaborg and associates in 1945, it was obtained by bombarding {uranium}-238 with alpha particles.') ).

fof(kb_SUMO_16697,axiom,
    s__subclass(s__Curium,s__ElementalSubstance) ).

fof(kb_SUMO_16698,axiom,
    s__instance(s__Curium__t,s__SetOrClass) ).

fof(kb_SUMO_16699,axiom,
    s__names(s__Curium,'Curium') ).

fof(kb_SUMO_16700,axiom,
    s__conventionalShortName('Cm',s__Curium) ).

fof(kb_SUMO_16701,axiom,
    s__atomicNumber(s__Curium,"96") ).

fof(kb_SUMO_16702,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Curium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("247",s__Amu)) ) ) ).

fof(kb_SUMO_16703,axiom,
    s__documentation(s__Curium,s__EnglishLanguage,'Radioactive metallic transuranic element. Belongs to actinoid series. Nine known isotopes, Cm-247 has a half-life of 1.64*10^7 years. First identified by Glenn T. Seaborg and associates in 1944, first produced by L.B. Werner and I. Perlman in 1947 by bombarding americium-241 with {neutron}s. Named for Marie Curie.') ).

fof(kb_SUMO_16704,axiom,
    s__subclass(s__Berkelium,s__ElementalSubstance) ).

fof(kb_SUMO_16705,axiom,
    s__instance(s__Berkelium__t,s__SetOrClass) ).

fof(kb_SUMO_16706,axiom,
    s__names(s__Berkelium,'Berkelium') ).

fof(kb_SUMO_16707,axiom,
    s__conventionalShortName('Bk',s__Berkelium) ).

fof(kb_SUMO_16708,axiom,
    s__atomicNumber(s__Berkelium,"97") ).

fof(kb_SUMO_16709,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Berkelium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("247",s__Amu)) ) ) ).

fof(kb_SUMO_16710,axiom,
    s__documentation(s__Berkelium,s__EnglishLanguage,'Radioactive metallic transuranic element. Belongs to actinoid series. Eight known isotopes, the most common Bk-247, has a half-life of 1.4*10^3 years. First produced by Glenn T. Seaborg and associates in 1949 by bombarding americium-241 with alpha particles.') ).

fof(kb_SUMO_16711,axiom,
    s__subclass(s__Californium,s__ElementalSubstance) ).

fof(kb_SUMO_16712,axiom,
    s__instance(s__Californium__t,s__SetOrClass) ).

fof(kb_SUMO_16713,axiom,
    s__names(s__Californium,'Californium') ).

fof(kb_SUMO_16714,axiom,
    s__conventionalShortName('Cf',s__Californium) ).

fof(kb_SUMO_16715,axiom,
    s__atomicNumber(s__Californium,"98") ).

fof(kb_SUMO_16716,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Californium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("249",s__Amu)) ) ) ).

fof(kb_SUMO_16717,axiom,
    s__documentation(s__Californium,s__EnglishLanguage,'Radioactive metallic transuranic element. Belongs to actinoid series. Cf-251 has a half life of about 700 years. Nine isotopes are known. Cf-252 is an intense {neutron} source, which makes it an intense {neutron} source and gives it a use in {neutron} activation analysis and a possible use as a radiation source in medicine. First produced by Glenn T. Seaborg and associates in 1950.') ).

fof(kb_SUMO_16718,axiom,
    s__subclass(s__Einsteinium,s__ElementalSubstance) ).

fof(kb_SUMO_16719,axiom,
    s__instance(s__Einsteinium__t,s__SetOrClass) ).

fof(kb_SUMO_16720,axiom,
    s__names(s__Einsteinium,'Einsteinium') ).

fof(kb_SUMO_16721,axiom,
    s__conventionalShortName('Es',s__Einsteinium) ).

fof(kb_SUMO_16722,axiom,
    s__atomicNumber(s__Einsteinium,"99") ).

fof(kb_SUMO_16723,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Einsteinium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("254",s__Amu)) ) ) ).

fof(kb_SUMO_16724,axiom,
    s__documentation(s__Einsteinium,s__EnglishLanguage,'Appearance is unknown, however it is most probably metallic and silver or gray in color. Radioactive metallic transuranic element belonging to the actinoids. Es-254 has the longest half-life of the eleven known isotopes at 270 days. First identified by Albert Ghiorso and associates in the debris of the 1952 hydrogen bomb explosion. In 1961 the first microgram quantities of Es-232 were separated. While einsteinium never exists naturally, if a sufficient amount was assembled, it would pose a radiation hazard.') ).

fof(kb_SUMO_16725,axiom,
    s__subclass(s__Fermium,s__ElementalSubstance) ).

fof(kb_SUMO_16726,axiom,
    s__instance(s__Fermium__t,s__SetOrClass) ).

fof(kb_SUMO_16727,axiom,
    s__names(s__Fermium,'Fermium') ).

fof(kb_SUMO_16728,axiom,
    s__conventionalShortName('Fm',s__Fermium) ).

fof(kb_SUMO_16729,axiom,
    s__atomicNumber(s__Fermium,"100") ).

fof(kb_SUMO_16730,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Fermium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("253",s__Amu)) ) ) ).

fof(kb_SUMO_16731,axiom,
    s__documentation(s__Fermium,s__EnglishLanguage,'Radioactive metallic transuranic element, belongs to the actinoids. Ten known isotopes, most stable is Fm-257 with a half-life of 10 days. First identified by Albert Ghiorso and associates in the debris of the first hydrogen-bomb explosion in 1952.') ).

fof(kb_SUMO_16732,axiom,
    s__subclass(s__Mendelevium,s__ElementalSubstance) ).

fof(kb_SUMO_16733,axiom,
    s__instance(s__Mendelevium__t,s__SetOrClass) ).

fof(kb_SUMO_16734,axiom,
    s__names(s__Mendelevium,'Mendelevium') ).

fof(kb_SUMO_16735,axiom,
    s__conventionalShortName('Md',s__Mendelevium) ).

fof(kb_SUMO_16736,axiom,
    s__atomicNumber(s__Mendelevium,"101") ).

fof(kb_SUMO_16737,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Mendelevium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("256",s__Amu)) ) ) ).

fof(kb_SUMO_16738,axiom,
    s__documentation(s__Mendelevium,s__EnglishLanguage,'Radioactive metallic transuranic element. Belongs to the actinoid series. Only known isotope, Md-256 has a half-life of 1.3 hours. First identified by Glenn T. Seaborg, Albert Ghiorso and associates in 1955. Alternative name {unnilunium} has been proposed. Named after the inventor of the periodic table, Dmitri Mendeleev.') ).

fof(kb_SUMO_16739,axiom,
    s__subclass(s__Nobelium,s__ElementalSubstance) ).

fof(kb_SUMO_16740,axiom,
    s__instance(s__Nobelium__t,s__SetOrClass) ).

fof(kb_SUMO_16741,axiom,
    s__names(s__Nobelium,'Nobelium') ).

fof(kb_SUMO_16742,axiom,
    s__conventionalShortName('No',s__Nobelium) ).

fof(kb_SUMO_16743,axiom,
    s__atomicNumber(s__Nobelium,"102") ).

fof(kb_SUMO_16744,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Nobelium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("254",s__Amu)) ) ) ).

fof(kb_SUMO_16745,axiom,
    s__documentation(s__Nobelium,s__EnglishLanguage,'Radioactive metallic transuranic element, belongs to the actinoids. Seven known isotopes exist, the most stable being No-254 with a half-life of 255 seconds. First identified with certainty by Albert Ghiorso and Glenn T. Seaborg in 1966. {Unnilbium} has been proposed as an alternative name.') ).

fof(kb_SUMO_16746,axiom,
    s__subclass(s__Lawrencium,s__ElementalSubstance) ).

fof(kb_SUMO_16747,axiom,
    s__instance(s__Lawrencium__t,s__SetOrClass) ).

fof(kb_SUMO_16748,axiom,
    s__names(s__Lawrencium,'Lawrencium') ).

fof(kb_SUMO_16749,axiom,
    s__conventionalShortName('Lr',s__Lawrencium) ).

fof(kb_SUMO_16750,axiom,
    s__atomicNumber(s__Lawrencium,"103") ).

fof(kb_SUMO_16751,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Lawrencium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("262",s__Amu)) ) ) ).

fof(kb_SUMO_16752,axiom,
    s__documentation(s__Lawrencium,s__EnglishLanguage,'Appearance unknown, however it is most likely silvery-white or grey and metallic. Lawrencium is a synthetic rare-earth metal. There are eight known radioisotopes, the most stable being Lr-262 with a half-life of 3.6 hours. Due to the short half-life of lawrencium, and its radioactivity, there are no known uses for it. Identified by Albert Ghiorso in 1961 at Berkeley. It was produced by bombarding californium with boron ions. The name is temporary {IUPAC} nomenclature, the origin of the name comes from Ernest O. Lawrence, the inventor of the cyclotron. If sufficient amounts of lawrencium were produced, it would pose a radiation hazard.') ).

fof(kb_SUMO_16753,axiom,
    s__subclass(s__Unnilquadium,s__ElementalSubstance) ).

fof(kb_SUMO_16754,axiom,
    s__instance(s__Unnilquadium__t,s__SetOrClass) ).

fof(kb_SUMO_16755,axiom,
    s__names(s__Unnilquadium,'Unnilquadium') ).

fof(kb_SUMO_16756,axiom,
    s__conventionalShortName('Unq',s__Unnilquadium) ).

fof(kb_SUMO_16757,axiom,
    s__atomicNumber(s__Unnilquadium,"104") ).

fof(kb_SUMO_16758,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unnilquadium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("261",s__Amu)) ) ) ).

fof(kb_SUMO_16759,axiom,
    s__documentation(s__Unnilquadium,s__EnglishLanguage,'Radioactive transactinide element. Expected to have similar chemical properties to those displayed by hafnium. Rf-260 was discovered by the Joint Nuclear Research Institute at Dubna (U.S.S.R.) in 1964. Researchers at Berkeley discovered Unq-257 and Unq-258 in 1964.') ).

fof(kb_SUMO_16760,axiom,
    s__subclass(s__Unnilpentium,s__ElementalSubstance) ).

fof(kb_SUMO_16761,axiom,
    s__instance(s__Unnilpentium__t,s__SetOrClass) ).

fof(kb_SUMO_16762,axiom,
    s__names(s__Unnilpentium,'Unnilpentium') ).

fof(kb_SUMO_16763,axiom,
    s__conventionalShortName('Unp',s__Unnilpentium) ).

fof(kb_SUMO_16764,axiom,
    s__atomicNumber(s__Unnilpentium,"105") ).

fof(kb_SUMO_16765,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unnilpentium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("262",s__Amu)) ) ) ).

fof(kb_SUMO_16766,axiom,
    s__documentation(s__Unnilpentium,s__EnglishLanguage,'Radioactive transactinide element. Half-life of 1.6s. Discovered in 1970 by Berkeley researchers. So far, seven isotopes have been discovered.') ).

fof(kb_SUMO_16767,axiom,
    s__subclass(s__Unnilhexium,s__ElementalSubstance) ).

fof(kb_SUMO_16768,axiom,
    s__instance(s__Unnilhexium__t,s__SetOrClass) ).

fof(kb_SUMO_16769,axiom,
    s__names(s__Unnilhexium,'Unnilhexium') ).

fof(kb_SUMO_16770,axiom,
    s__atomicNumber(s__Unnilhexium,"106") ).

fof(kb_SUMO_16771,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unnilhexium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("263",s__Amu)) ) ) ).

fof(kb_SUMO_16772,axiom,
    s__documentation(s__Unnilhexium,s__EnglishLanguage,'Half-life of 0.9 +/- 0.2 s. Discovered by the Joint Institute for Nuclear Research at Dubna (U.S.S.R.) in June of 1974. Its existence was confirmed by the Lawrence Berkeley Laboratory and Livermore National Laboratory in September of 1974.') ).

fof(kb_SUMO_16773,axiom,
    s__subclass(s__Unnilseptium,s__ElementalSubstance) ).

fof(kb_SUMO_16774,axiom,
    s__instance(s__Unnilseptium__t,s__SetOrClass) ).

fof(kb_SUMO_16775,axiom,
    s__names(s__Unnilseptium,'Unnilseptium') ).

fof(kb_SUMO_16776,axiom,
    s__atomicNumber(s__Unnilseptium,"107") ).

fof(kb_SUMO_16777,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unnilseptium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("262",s__Amu)) ) ) ).

fof(kb_SUMO_16778,axiom,
    s__documentation(s__Unnilseptium,s__EnglishLanguage,'Radioactive transition metal. Half-life of approximately 1/500 s. Discovered by the Joint Institute for Nuclear Research at Dubna (U.S.S.R.) in 1976. Confirmed by West German physicists at the Heavy Ion Research Laboratory at Darmstadt.') ).

fof(kb_SUMO_16779,axiom,
    s__subclass(s__Unniloctium,s__ElementalSubstance) ).

fof(kb_SUMO_16780,axiom,
    s__instance(s__Unniloctium__t,s__SetOrClass) ).

fof(kb_SUMO_16781,axiom,
    s__names(s__Unniloctium,'Unniloctium') ).

fof(kb_SUMO_16782,axiom,
    s__conventionalShortName('Uno',s__Unniloctium) ).

fof(kb_SUMO_16783,axiom,
    s__atomicNumber(s__Unniloctium,"108") ).

fof(kb_SUMO_16784,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unniloctium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("265",s__Amu)) ) ) ).

fof(kb_SUMO_16785,axiom,
    s__documentation(s__Unniloctium,s__EnglishLanguage,'Radioactive transition metal.') ).

fof(kb_SUMO_16786,axiom,
    s__subclass(s__Meitnerium,s__ElementalSubstance) ).

fof(kb_SUMO_16787,axiom,
    s__instance(s__Meitnerium__t,s__SetOrClass) ).

fof(kb_SUMO_16788,axiom,
    s__names(s__Meitnerium,'Meitnerium') ).

fof(kb_SUMO_16789,axiom,
    s__conventionalShortName('Mt',s__Meitnerium) ).

fof(kb_SUMO_16790,axiom,
    s__atomicNumber(s__Meitnerium,"109") ).

fof(kb_SUMO_16791,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Meitnerium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("266",s__Amu)) ) ) ).

fof(kb_SUMO_16792,axiom,
    s__documentation(s__Meitnerium,s__EnglishLanguage,'Half-life of approximately 5ms. The creation of this element demonstrated that fusion techniques could indeed be used to make new, heavy nuclei. Made and identified by physicists of the Heavy Ion Research Laboratory, Darmstadt, West Germany in 1982. Named in honor of Lise Meitner the Austrian physicist.') ).

fof(kb_SUMO_16793,axiom,
    s__subclass(s__Unnildecium,s__ElementalSubstance) ).

fof(kb_SUMO_16794,axiom,
    s__instance(s__Unnildecium__t,s__SetOrClass) ).

fof(kb_SUMO_16795,axiom,
    s__names(s__Unnildecium,'Unnildecium') ).

fof(kb_SUMO_16796,axiom,
    s__conventionalShortName('Unn',s__Unnildecium) ).

fof(kb_SUMO_16797,axiom,
    s__atomicNumber(s__Unnildecium,"110") ).

fof(kb_SUMO_16798,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Object)
     => ( ( s__instance(V__ATOM,s__Unnildecium)
          & s__instance(V__ATOM,s__Atom) )
       => s__measure(V__ATOM,s__MeasureFn("272",s__Amu)) ) ) ).

fof(kb_SUMO_16799,axiom,
    s__documentation(s__Unnildecium,s__EnglishLanguage,'Half-life of approximately 10ms. Reported in 1994 by German researchers at Darmstadt, Germany.') ).

fof(kb_SUMO_16800,axiom,
    s__meltingPoint(s__Hydrogen,s__MeasureFn("14.01",s__KelvinDegree)) ).

fof(kb_SUMO_16801,axiom,
    s__boilingPoint(s__Hydrogen,s__MeasureFn("20.28",s__KelvinDegree)) ).

fof(kb_SUMO_16802,axiom,
    s__meltingPoint(s__Helium,s__MeasureFn("0.95",s__KelvinDegree)) ).

fof(kb_SUMO_16803,axiom,
    s__boilingPoint(s__Helium,s__MeasureFn("4.216",s__KelvinDegree)) ).

fof(kb_SUMO_16804,axiom,
    s__meltingPoint(s__Lithium,s__MeasureFn("453.69",s__KelvinDegree)) ).

fof(kb_SUMO_16805,axiom,
    s__boilingPoint(s__Lithium,s__MeasureFn("1590",s__KelvinDegree)) ).

fof(kb_SUMO_16806,axiom,
    s__meltingPoint(s__Beryllium,s__MeasureFn("1551",s__KelvinDegree)) ).

fof(kb_SUMO_16807,axiom,
    s__boilingPoint(s__Beryllium,s__MeasureFn("3243",s__KelvinDegree)) ).

fof(kb_SUMO_16808,axiom,
    s__meltingPoint(s__Boron,s__MeasureFn("2573",s__KelvinDegree)) ).

fof(kb_SUMO_16809,axiom,
    s__boilingPoint(s__Boron,s__MeasureFn("2823",s__KelvinDegree)) ).

fof(kb_SUMO_16810,axiom,
    s__meltingPoint(s__Carbon,s__MeasureFn("3823",s__KelvinDegree)) ).

fof(kb_SUMO_16811,axiom,
    s__boilingPoint(s__Carbon,s__MeasureFn("5100",s__KelvinDegree)) ).

fof(kb_SUMO_16812,axiom,
    s__meltingPoint(s__Nitrogen,s__MeasureFn("63.29",s__KelvinDegree)) ).

fof(kb_SUMO_16813,axiom,
    s__boilingPoint(s__Nitrogen,s__MeasureFn("77.4",s__KelvinDegree)) ).

fof(kb_SUMO_16814,axiom,
    s__meltingPoint(s__Oxygen,s__MeasureFn("54.75",s__KelvinDegree)) ).

fof(kb_SUMO_16815,axiom,
    s__boilingPoint(s__Oxygen,s__MeasureFn("90.188",s__KelvinDegree)) ).

fof(kb_SUMO_16816,axiom,
    s__meltingPoint(s__Fluorine,s__MeasureFn("53.53",s__KelvinDegree)) ).

fof(kb_SUMO_16817,axiom,
    s__boilingPoint(s__Fluorine,s__MeasureFn("85.01",s__KelvinDegree)) ).

fof(kb_SUMO_16818,axiom,
    s__meltingPoint(s__Neon,s__MeasureFn("24.48",s__KelvinDegree)) ).

fof(kb_SUMO_16819,axiom,
    s__boilingPoint(s__Neon,s__MeasureFn("27.1",s__KelvinDegree)) ).

fof(kb_SUMO_16820,axiom,
    s__meltingPoint(s__Sodium,s__MeasureFn("370.95",s__KelvinDegree)) ).

fof(kb_SUMO_16821,axiom,
    s__boilingPoint(s__Sodium,s__MeasureFn("1165",s__KelvinDegree)) ).

fof(kb_SUMO_16822,axiom,
    s__meltingPoint(s__Magnesium,s__MeasureFn("921.95",s__KelvinDegree)) ).

fof(kb_SUMO_16823,axiom,
    s__boilingPoint(s__Magnesium,s__MeasureFn("1380",s__KelvinDegree)) ).

fof(kb_SUMO_16824,axiom,
    s__meltingPoint(s__Aluminum,s__MeasureFn("933.52",s__KelvinDegree)) ).

fof(kb_SUMO_16825,axiom,
    s__boilingPoint(s__Aluminum,s__MeasureFn("2740",s__KelvinDegree)) ).

fof(kb_SUMO_16826,axiom,
    s__meltingPoint(s__Silicon,s__MeasureFn("1683",s__KelvinDegree)) ).

fof(kb_SUMO_16827,axiom,
    s__boilingPoint(s__Silicon,s__MeasureFn("2628",s__KelvinDegree)) ).

fof(kb_SUMO_16828,axiom,
    s__meltingPoint(s__Phosphorus,s__MeasureFn("317.3",s__KelvinDegree)) ).

fof(kb_SUMO_16829,axiom,
    s__boilingPoint(s__Phosphorus,s__MeasureFn("553",s__KelvinDegree)) ).

fof(kb_SUMO_16830,axiom,
    s__meltingPoint(s__Sulphur,s__MeasureFn("386",s__KelvinDegree)) ).

fof(kb_SUMO_16831,axiom,
    s__boilingPoint(s__Sulphur,s__MeasureFn("717.824",s__KelvinDegree)) ).

fof(kb_SUMO_16832,axiom,
    s__meltingPoint(s__Chlorine,s__MeasureFn("172.17",s__KelvinDegree)) ).

fof(kb_SUMO_16833,axiom,
    s__boilingPoint(s__Chlorine,s__MeasureFn("238.55",s__KelvinDegree)) ).

fof(kb_SUMO_16834,axiom,
    s__meltingPoint(s__Argon,s__MeasureFn("83.78",s__KelvinDegree)) ).

fof(kb_SUMO_16835,axiom,
    s__boilingPoint(s__Argon,s__MeasureFn("87.29",s__KelvinDegree)) ).

fof(kb_SUMO_16836,axiom,
    s__meltingPoint(s__Potassium,s__MeasureFn("336.8",s__KelvinDegree)) ).

fof(kb_SUMO_16837,axiom,
    s__boilingPoint(s__Potassium,s__MeasureFn("1047",s__KelvinDegree)) ).

fof(kb_SUMO_16838,axiom,
    s__meltingPoint(s__Calcium,s__MeasureFn("1112",s__KelvinDegree)) ).

fof(kb_SUMO_16839,axiom,
    s__boilingPoint(s__Calcium,s__MeasureFn("1760",s__KelvinDegree)) ).

fof(kb_SUMO_16840,axiom,
    s__meltingPoint(s__Scandium,s__MeasureFn("1812",s__KelvinDegree)) ).

fof(kb_SUMO_16841,axiom,
    s__boilingPoint(s__Scandium,s__MeasureFn("3105",s__KelvinDegree)) ).

fof(kb_SUMO_16842,axiom,
    s__meltingPoint(s__Titanium,s__MeasureFn("1933",s__KelvinDegree)) ).

fof(kb_SUMO_16843,axiom,
    s__boilingPoint(s__Titanium,s__MeasureFn("3533",s__KelvinDegree)) ).

fof(kb_SUMO_16844,axiom,
    s__meltingPoint(s__Vanadium,s__MeasureFn("2163",s__KelvinDegree)) ).

fof(kb_SUMO_16845,axiom,
    s__boilingPoint(s__Vanadium,s__MeasureFn("3653",s__KelvinDegree)) ).

fof(kb_SUMO_16846,axiom,
    s__meltingPoint(s__Chromium,s__MeasureFn("2130",s__KelvinDegree)) ).

fof(kb_SUMO_16847,axiom,
    s__boilingPoint(s__Chromium,s__MeasureFn("2755",s__KelvinDegree)) ).

fof(kb_SUMO_16848,axiom,
    s__meltingPoint(s__Manganese,s__MeasureFn("1517",s__KelvinDegree)) ).

fof(kb_SUMO_16849,axiom,
    s__boilingPoint(s__Manganese,s__MeasureFn("2370",s__KelvinDegree)) ).

fof(kb_SUMO_16850,axiom,
    s__meltingPoint(s__Iron,s__MeasureFn("1808",s__KelvinDegree)) ).

fof(kb_SUMO_16851,axiom,
    s__boilingPoint(s__Iron,s__MeasureFn("3023",s__KelvinDegree)) ).

fof(kb_SUMO_16852,axiom,
    s__meltingPoint(s__Cobalt,s__MeasureFn("1768",s__KelvinDegree)) ).

fof(kb_SUMO_16853,axiom,
    s__boilingPoint(s__Cobalt,s__MeasureFn("3143",s__KelvinDegree)) ).

fof(kb_SUMO_16854,axiom,
    s__meltingPoint(s__Nickel,s__MeasureFn("1726",s__KelvinDegree)) ).

fof(kb_SUMO_16855,axiom,
    s__boilingPoint(s__Nickel,s__MeasureFn("3005",s__KelvinDegree)) ).

fof(kb_SUMO_16856,axiom,
    s__meltingPoint(s__Copper,s__MeasureFn("1356.6",s__KelvinDegree)) ).

fof(kb_SUMO_16857,axiom,
    s__boilingPoint(s__Copper,s__MeasureFn("2868",s__KelvinDegree)) ).

fof(kb_SUMO_16858,axiom,
    s__meltingPoint(s__Zinc,s__MeasureFn("692.73",s__KelvinDegree)) ).

fof(kb_SUMO_16859,axiom,
    s__boilingPoint(s__Zinc,s__MeasureFn("1180",s__KelvinDegree)) ).

fof(kb_SUMO_16860,axiom,
    s__meltingPoint(s__Gallium,s__MeasureFn("302.93",s__KelvinDegree)) ).

fof(kb_SUMO_16861,axiom,
    s__boilingPoint(s__Gallium,s__MeasureFn("2676",s__KelvinDegree)) ).

fof(kb_SUMO_16862,axiom,
    s__meltingPoint(s__Germanium,s__MeasureFn("1210.55",s__KelvinDegree)) ).

fof(kb_SUMO_16863,axiom,
    s__boilingPoint(s__Germanium,s__MeasureFn("3103",s__KelvinDegree)) ).

fof(kb_SUMO_16864,axiom,
    s__meltingPoint(s__Arsenic,s__MeasureFn("886",s__KelvinDegree)) ).

fof(kb_SUMO_16865,axiom,
    s__boilingPoint(s__Arsenic,s__MeasureFn("886",s__KelvinDegree)) ).

fof(kb_SUMO_16866,axiom,
    s__meltingPoint(s__Selenium,s__MeasureFn("490",s__KelvinDegree)) ).

fof(kb_SUMO_16867,axiom,
    s__boilingPoint(s__Selenium,s__MeasureFn("958.1",s__KelvinDegree)) ).

fof(kb_SUMO_16868,axiom,
    s__meltingPoint(s__Bromine,s__MeasureFn("265.9",s__KelvinDegree)) ).

fof(kb_SUMO_16869,axiom,
    s__boilingPoint(s__Bromine,s__MeasureFn("331.93",s__KelvinDegree)) ).

fof(kb_SUMO_16870,axiom,
    s__meltingPoint(s__Krypton,s__MeasureFn("116.55",s__KelvinDegree)) ).

fof(kb_SUMO_16871,axiom,
    s__boilingPoint(s__Krypton,s__MeasureFn("120.85",s__KelvinDegree)) ).

fof(kb_SUMO_16872,axiom,
    s__meltingPoint(s__Rubidium,s__MeasureFn("312.2",s__KelvinDegree)) ).

fof(kb_SUMO_16873,axiom,
    s__boilingPoint(s__Rubidium,s__MeasureFn("961",s__KelvinDegree)) ).

fof(kb_SUMO_16874,axiom,
    s__meltingPoint(s__Strontium,s__MeasureFn("1042",s__KelvinDegree)) ).

fof(kb_SUMO_16875,axiom,
    s__boilingPoint(s__Strontium,s__MeasureFn("1657",s__KelvinDegree)) ).

fof(kb_SUMO_16876,axiom,
    s__meltingPoint(s__Yttrium,s__MeasureFn("1796",s__KelvinDegree)) ).

fof(kb_SUMO_16877,axiom,
    s__boilingPoint(s__Yttrium,s__MeasureFn("3610",s__KelvinDegree)) ).

fof(kb_SUMO_16878,axiom,
    s__meltingPoint(s__Zirconium,s__MeasureFn("2125",s__KelvinDegree)) ).

fof(kb_SUMO_16879,axiom,
    s__boilingPoint(s__Zirconium,s__MeasureFn("4650",s__KelvinDegree)) ).

fof(kb_SUMO_16880,axiom,
    s__meltingPoint(s__Niobium,s__MeasureFn("2741",s__KelvinDegree)) ).

fof(kb_SUMO_16881,axiom,
    s__boilingPoint(s__Niobium,s__MeasureFn("5200",s__KelvinDegree)) ).

fof(kb_SUMO_16882,axiom,
    s__meltingPoint(s__Molybdenum,s__MeasureFn("2890",s__KelvinDegree)) ).

fof(kb_SUMO_16883,axiom,
    s__boilingPoint(s__Molybdenum,s__MeasureFn("5833",s__KelvinDegree)) ).

fof(kb_SUMO_16884,axiom,
    s__meltingPoint(s__Technetium,s__MeasureFn("2445",s__KelvinDegree)) ).

fof(kb_SUMO_16885,axiom,
    s__boilingPoint(s__Technetium,s__MeasureFn("5303",s__KelvinDegree)) ).

fof(kb_SUMO_16886,axiom,
    s__meltingPoint(s__Ruthenium,s__MeasureFn("2583",s__KelvinDegree)) ).

fof(kb_SUMO_16887,axiom,
    s__boilingPoint(s__Ruthenium,s__MeasureFn("4173",s__KelvinDegree)) ).

fof(kb_SUMO_16888,axiom,
    s__meltingPoint(s__Rhodium,s__MeasureFn("2239",s__KelvinDegree)) ).

fof(kb_SUMO_16889,axiom,
    s__boilingPoint(s__Rhodium,s__MeasureFn("4000",s__KelvinDegree)) ).

fof(kb_SUMO_16890,axiom,
    s__meltingPoint(s__Palladium,s__MeasureFn("1825",s__KelvinDegree)) ).

fof(kb_SUMO_16891,axiom,
    s__boilingPoint(s__Palladium,s__MeasureFn("3413",s__KelvinDegree)) ).

fof(kb_SUMO_16892,axiom,
    s__meltingPoint(s__Silver,s__MeasureFn("1235.08",s__KelvinDegree)) ).

fof(kb_SUMO_16893,axiom,
    s__boilingPoint(s__Silver,s__MeasureFn("2485",s__KelvinDegree)) ).

fof(kb_SUMO_16894,axiom,
    s__meltingPoint(s__Cadmium,s__MeasureFn("594.1",s__KelvinDegree)) ).

fof(kb_SUMO_16895,axiom,
    s__boilingPoint(s__Cadmium,s__MeasureFn("1038",s__KelvinDegree)) ).

fof(kb_SUMO_16896,axiom,
    s__meltingPoint(s__Indium,s__MeasureFn("429.32",s__KelvinDegree)) ).

fof(kb_SUMO_16897,axiom,
    s__boilingPoint(s__Indium,s__MeasureFn("2353",s__KelvinDegree)) ).

fof(kb_SUMO_16898,axiom,
    s__meltingPoint(s__Tin,s__MeasureFn("505.118",s__KelvinDegree)) ).

fof(kb_SUMO_16899,axiom,
    s__boilingPoint(s__Tin,s__MeasureFn("2543",s__KelvinDegree)) ).

fof(kb_SUMO_16900,axiom,
    s__meltingPoint(s__Antimony,s__MeasureFn("903.89",s__KelvinDegree)) ).

fof(kb_SUMO_16901,axiom,
    s__boilingPoint(s__Antimony,s__MeasureFn("2023",s__KelvinDegree)) ).

fof(kb_SUMO_16902,axiom,
    s__meltingPoint(s__Tellurium,s__MeasureFn("722.7",s__KelvinDegree)) ).

fof(kb_SUMO_16903,axiom,
    s__boilingPoint(s__Tellurium,s__MeasureFn("1263",s__KelvinDegree)) ).

fof(kb_SUMO_16904,axiom,
    s__meltingPoint(s__Iodine,s__MeasureFn("386.65",s__KelvinDegree)) ).

fof(kb_SUMO_16905,axiom,
    s__boilingPoint(s__Iodine,s__MeasureFn("457.55",s__KelvinDegree)) ).

fof(kb_SUMO_16906,axiom,
    s__meltingPoint(s__Xenon,s__MeasureFn("161.3",s__KelvinDegree)) ).

fof(kb_SUMO_16907,axiom,
    s__boilingPoint(s__Xenon,s__MeasureFn("166.1",s__KelvinDegree)) ).

fof(kb_SUMO_16908,axiom,
    s__meltingPoint(s__Caesium,s__MeasureFn("301.55",s__KelvinDegree)) ).

fof(kb_SUMO_16909,axiom,
    s__boilingPoint(s__Caesium,s__MeasureFn("963",s__KelvinDegree)) ).

fof(kb_SUMO_16910,axiom,
    s__meltingPoint(s__Barium,s__MeasureFn("998",s__KelvinDegree)) ).

fof(kb_SUMO_16911,axiom,
    s__boilingPoint(s__Barium,s__MeasureFn("1913",s__KelvinDegree)) ).

fof(kb_SUMO_16912,axiom,
    s__meltingPoint(s__Lanthanum,s__MeasureFn("1193",s__KelvinDegree)) ).

fof(kb_SUMO_16913,axiom,
    s__boilingPoint(s__Lanthanum,s__MeasureFn("3727",s__KelvinDegree)) ).

fof(kb_SUMO_16914,axiom,
    s__meltingPoint(s__Cerium,s__MeasureFn("1071",s__KelvinDegree)) ).

fof(kb_SUMO_16915,axiom,
    s__boilingPoint(s__Cerium,s__MeasureFn("3530",s__KelvinDegree)) ).

fof(kb_SUMO_16916,axiom,
    s__meltingPoint(s__Praseodymium,s__MeasureFn("1204",s__KelvinDegree)) ).

fof(kb_SUMO_16917,axiom,
    s__boilingPoint(s__Praseodymium,s__MeasureFn("3485",s__KelvinDegree)) ).

fof(kb_SUMO_16918,axiom,
    s__meltingPoint(s__Neodymium,s__MeasureFn("1283",s__KelvinDegree)) ).

fof(kb_SUMO_16919,axiom,
    s__boilingPoint(s__Neodymium,s__MeasureFn("3400",s__KelvinDegree)) ).

fof(kb_SUMO_16920,axiom,
    s__meltingPoint(s__Promethium,s__MeasureFn("1353",s__KelvinDegree)) ).

fof(kb_SUMO_16921,axiom,
    s__boilingPoint(s__Promethium,s__MeasureFn("3000",s__KelvinDegree)) ).

fof(kb_SUMO_16922,axiom,
    s__meltingPoint(s__Samarium,s__MeasureFn("1345",s__KelvinDegree)) ).

fof(kb_SUMO_16923,axiom,
    s__boilingPoint(s__Samarium,s__MeasureFn("2051",s__KelvinDegree)) ).

fof(kb_SUMO_16924,axiom,
    s__meltingPoint(s__Europium,s__MeasureFn("1095",s__KelvinDegree)) ).

fof(kb_SUMO_16925,axiom,
    s__boilingPoint(s__Europium,s__MeasureFn("1870",s__KelvinDegree)) ).

fof(kb_SUMO_16926,axiom,
    s__meltingPoint(s__Gadolinium,s__MeasureFn("1584",s__KelvinDegree)) ).

fof(kb_SUMO_16927,axiom,
    s__boilingPoint(s__Gadolinium,s__MeasureFn("3506",s__KelvinDegree)) ).

fof(kb_SUMO_16928,axiom,
    s__meltingPoint(s__Terbium,s__MeasureFn("1633",s__KelvinDegree)) ).

fof(kb_SUMO_16929,axiom,
    s__boilingPoint(s__Terbium,s__MeasureFn("3314",s__KelvinDegree)) ).

fof(kb_SUMO_16930,axiom,
    s__meltingPoint(s__Dysprosium,s__MeasureFn("1682",s__KelvinDegree)) ).

fof(kb_SUMO_16931,axiom,
    s__boilingPoint(s__Dysprosium,s__MeasureFn("2608",s__KelvinDegree)) ).

fof(kb_SUMO_16932,axiom,
    s__meltingPoint(s__Holmium,s__MeasureFn("1743",s__KelvinDegree)) ).

fof(kb_SUMO_16933,axiom,
    s__boilingPoint(s__Holmium,s__MeasureFn("2993",s__KelvinDegree)) ).

fof(kb_SUMO_16934,axiom,
    s__meltingPoint(s__Erbium,s__MeasureFn("1795",s__KelvinDegree)) ).

fof(kb_SUMO_16935,axiom,
    s__boilingPoint(s__Erbium,s__MeasureFn("2783",s__KelvinDegree)) ).

fof(kb_SUMO_16936,axiom,
    s__meltingPoint(s__Thulium,s__MeasureFn("1818",s__KelvinDegree)) ).

fof(kb_SUMO_16937,axiom,
    s__boilingPoint(s__Thulium,s__MeasureFn("2000",s__KelvinDegree)) ).

fof(kb_SUMO_16938,axiom,
    s__meltingPoint(s__Ytterbium,s__MeasureFn("1097",s__KelvinDegree)) ).

fof(kb_SUMO_16939,axiom,
    s__boilingPoint(s__Ytterbium,s__MeasureFn("1466",s__KelvinDegree)) ).

fof(kb_SUMO_16940,axiom,
    s__meltingPoint(s__Lutetium,s__MeasureFn("1929",s__KelvinDegree)) ).

fof(kb_SUMO_16941,axiom,
    s__boilingPoint(s__Lutetium,s__MeasureFn("3588",s__KelvinDegree)) ).

fof(kb_SUMO_16942,axiom,
    s__meltingPoint(s__Hafnium,s__MeasureFn("2423",s__KelvinDegree)) ).

fof(kb_SUMO_16943,axiom,
    s__boilingPoint(s__Hafnium,s__MeasureFn("5673",s__KelvinDegree)) ).

fof(kb_SUMO_16944,axiom,
    s__meltingPoint(s__Tantalum,s__MeasureFn("3269",s__KelvinDegree)) ).

fof(kb_SUMO_16945,axiom,
    s__boilingPoint(s__Tantalum,s__MeasureFn("5698",s__KelvinDegree)) ).

fof(kb_SUMO_16946,axiom,
    s__meltingPoint(s__Tungsten,s__MeasureFn("3680",s__KelvinDegree)) ).

fof(kb_SUMO_16947,axiom,
    s__boilingPoint(s__Tungsten,s__MeasureFn("6200",s__KelvinDegree)) ).

fof(kb_SUMO_16948,axiom,
    s__meltingPoint(s__Rhenium,s__MeasureFn("3453",s__KelvinDegree)) ).

fof(kb_SUMO_16949,axiom,
    s__boilingPoint(s__Rhenium,s__MeasureFn("5900",s__KelvinDegree)) ).

fof(kb_SUMO_16950,axiom,
    s__meltingPoint(s__Osmium,s__MeasureFn("3318",s__KelvinDegree)) ).

fof(kb_SUMO_16951,axiom,
    s__boilingPoint(s__Osmium,s__MeasureFn("5300",s__KelvinDegree)) ).

fof(kb_SUMO_16952,axiom,
    s__meltingPoint(s__Iridium,s__MeasureFn("2683",s__KelvinDegree)) ).

fof(kb_SUMO_16953,axiom,
    s__boilingPoint(s__Iridium,s__MeasureFn("4403",s__KelvinDegree)) ).

fof(kb_SUMO_16954,axiom,
    s__meltingPoint(s__Platinum,s__MeasureFn("2045",s__KelvinDegree)) ).

fof(kb_SUMO_16955,axiom,
    s__boilingPoint(s__Platinum,s__MeasureFn("4100",s__KelvinDegree)) ).

fof(kb_SUMO_16956,axiom,
    s__meltingPoint(s__Gold,s__MeasureFn("1337.58",s__KelvinDegree)) ).

fof(kb_SUMO_16957,axiom,
    s__boilingPoint(s__Gold,s__MeasureFn("3213",s__KelvinDegree)) ).

fof(kb_SUMO_16958,axiom,
    s__meltingPoint(s__Mercury,s__MeasureFn("234.28",s__KelvinDegree)) ).

fof(kb_SUMO_16959,axiom,
    s__boilingPoint(s__Mercury,s__MeasureFn("629.73",s__KelvinDegree)) ).

fof(kb_SUMO_16960,axiom,
    s__meltingPoint(s__Thallium,s__MeasureFn("576.7",s__KelvinDegree)) ).

fof(kb_SUMO_16961,axiom,
    s__boilingPoint(s__Thallium,s__MeasureFn("1730",s__KelvinDegree)) ).

fof(kb_SUMO_16962,axiom,
    s__meltingPoint(s__Lead,s__MeasureFn("600.65",s__KelvinDegree)) ).

fof(kb_SUMO_16963,axiom,
    s__boilingPoint(s__Lead,s__MeasureFn("2013",s__KelvinDegree)) ).

fof(kb_SUMO_16964,axiom,
    s__meltingPoint(s__Bismuth,s__MeasureFn("544.5",s__KelvinDegree)) ).

fof(kb_SUMO_16965,axiom,
    s__boilingPoint(s__Bismuth,s__MeasureFn("1833",s__KelvinDegree)) ).

fof(kb_SUMO_16966,axiom,
    s__meltingPoint(s__Polonium,s__MeasureFn("527",s__KelvinDegree)) ).

fof(kb_SUMO_16967,axiom,
    s__boilingPoint(s__Polonium,s__MeasureFn("1235",s__KelvinDegree)) ).

fof(kb_SUMO_16968,axiom,
    s__meltingPoint(s__Astatine,s__MeasureFn("575",s__KelvinDegree)) ).

fof(kb_SUMO_16969,axiom,
    s__boilingPoint(s__Astatine,s__MeasureFn("610",s__KelvinDegree)) ).

fof(kb_SUMO_16970,axiom,
    s__meltingPoint(s__Radon,s__MeasureFn("202",s__KelvinDegree)) ).

fof(kb_SUMO_16971,axiom,
    s__boilingPoint(s__Radon,s__MeasureFn("211.4",s__KelvinDegree)) ).

fof(kb_SUMO_16972,axiom,
    s__meltingPoint(s__Francium,s__MeasureFn("300",s__KelvinDegree)) ).

fof(kb_SUMO_16973,axiom,
    s__boilingPoint(s__Francium,s__MeasureFn("950",s__KelvinDegree)) ).

fof(kb_SUMO_16974,axiom,
    s__meltingPoint(s__Radium,s__MeasureFn("973",s__KelvinDegree)) ).

fof(kb_SUMO_16975,axiom,
    s__boilingPoint(s__Radium,s__MeasureFn("1413",s__KelvinDegree)) ).

fof(kb_SUMO_16976,axiom,
    s__meltingPoint(s__Actinium,s__MeasureFn("1320",s__KelvinDegree)) ).

fof(kb_SUMO_16977,axiom,
    s__boilingPoint(s__Actinium,s__MeasureFn("3470",s__KelvinDegree)) ).

fof(kb_SUMO_16978,axiom,
    s__meltingPoint(s__Thorium,s__MeasureFn("2023",s__KelvinDegree)) ).

fof(kb_SUMO_16979,axiom,
    s__boilingPoint(s__Thorium,s__MeasureFn("5060",s__KelvinDegree)) ).

fof(kb_SUMO_16980,axiom,
    s__meltingPoint(s__Protactinium,s__MeasureFn("1827",s__KelvinDegree)) ).

fof(kb_SUMO_16981,axiom,
    s__boilingPoint(s__Protactinium,s__MeasureFn("4300",s__KelvinDegree)) ).

fof(kb_SUMO_16982,axiom,
    s__meltingPoint(s__Uranium,s__MeasureFn("1405.5",s__KelvinDegree)) ).

fof(kb_SUMO_16983,axiom,
    s__boilingPoint(s__Uranium,s__MeasureFn("4091",s__KelvinDegree)) ).

fof(kb_SUMO_16984,axiom,
    s__meltingPoint(s__Neptunium,s__MeasureFn("913",s__KelvinDegree)) ).

fof(kb_SUMO_16985,axiom,
    s__boilingPoint(s__Neptunium,s__MeasureFn("4175",s__KelvinDegree)) ).

fof(kb_SUMO_16986,axiom,
    s__meltingPoint(s__Plutonium,s__MeasureFn("914",s__KelvinDegree)) ).

fof(kb_SUMO_16987,axiom,
    s__boilingPoint(s__Plutonium,s__MeasureFn("3600",s__KelvinDegree)) ).

fof(kb_SUMO_16988,axiom,
    s__meltingPoint(s__Americium,s__MeasureFn("1267",s__KelvinDegree)) ).

fof(kb_SUMO_16989,axiom,
    s__boilingPoint(s__Americium,s__MeasureFn("2880",s__KelvinDegree)) ).

fof(kb_SUMO_16990,axiom,
    s__meltingPoint(s__Curium,s__MeasureFn("1613",s__KelvinDegree)) ).

fof(kb_SUMO_16991,axiom,
    s__meltingPoint(s__Berkelium,s__MeasureFn("1259",s__KelvinDegree)) ).

fof(kb_SUMO_16992,axiom,
    s__meltingPoint(s__Californium,s__MeasureFn("1173",s__KelvinDegree)) ).

fof(kb_SUMO_16993,axiom,
    s__meltingPoint(s__Einsteinium,s__MeasureFn("1133",s__KelvinDegree)) ).

%FOL fof(kb_SUMO_16994,axiom,(( s__instance(s__AssignmentFn_2,s__Function) ))).
%FOL fof(kb_SUMO_16995,axiom,(( s__instance(s__AssignmentFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_16996,axiom,(( s__domain(s__AssignmentFn_2,1,s__Function) ))).
%FOL fof(kb_SUMO_16997,axiom,(( s__range(s__AssignmentFn_2,s__Entity) ))).
%FOL fof(kb_SUMO_16998,axiom,(( s__documentation(s__AssignmentFn_2,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_2 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_16999,axiom,(( s__instance(s__AssignmentFn_3,s__Function) ))).
%FOL fof(kb_SUMO_17000,axiom,(( s__instance(s__AssignmentFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17001,axiom,(( s__domain(s__AssignmentFn_3,1,s__Function) ))).
%FOL fof(kb_SUMO_17002,axiom,(( s__range(s__AssignmentFn_3,s__Entity) ))).
%FOL fof(kb_SUMO_17003,axiom,(( s__documentation(s__AssignmentFn_3,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_3 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_17004,axiom,(( s__instance(s__AssignmentFn_4,s__Function) ))).
%FOL fof(kb_SUMO_17005,axiom,(( s__instance(s__AssignmentFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17006,axiom,(( s__domain(s__AssignmentFn_4,1,s__Function) ))).
%FOL fof(kb_SUMO_17007,axiom,(( s__range(s__AssignmentFn_4,s__Entity) ))).
%FOL fof(kb_SUMO_17008,axiom,(( s__documentation(s__AssignmentFn_4,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_4 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_17009,axiom,(( s__instance(s__AssignmentFn_5,s__Function) ))).
%FOL fof(kb_SUMO_17010,axiom,(( s__instance(s__AssignmentFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17011,axiom,(( s__domain(s__AssignmentFn_5,1,s__Function) ))).
%FOL fof(kb_SUMO_17012,axiom,(( s__range(s__AssignmentFn_5,s__Entity) ))).
%FOL fof(kb_SUMO_17013,axiom,(( s__documentation(s__AssignmentFn_5,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_5 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_17014,axiom,(( s__instance(s__AssignmentFn_6,s__Function) ))).
%FOL fof(kb_SUMO_17015,axiom,(( s__instance(s__AssignmentFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17016,axiom,(( s__domain(s__AssignmentFn_6,1,s__Function) ))).
%FOL fof(kb_SUMO_17017,axiom,(( s__range(s__AssignmentFn_6,s__Entity) ))).
%FOL fof(kb_SUMO_17018,axiom,(( s__documentation(s__AssignmentFn_6,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_6 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_17019,axiom,(( s__instance(s__AssignmentFn_7,s__Function) ))).
%FOL fof(kb_SUMO_17020,axiom,(( s__instance(s__AssignmentFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17021,axiom,(( s__domain(s__AssignmentFn_7,1,s__Function) ))).
%FOL fof(kb_SUMO_17022,axiom,(( s__range(s__AssignmentFn_7,s__Entity) ))).
%FOL fof(kb_SUMO_17023,axiom,(( s__documentation(s__AssignmentFn_7,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_7 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_17024,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__Function) ))).
%FOL fof(kb_SUMO_17025,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17026,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17027,axiom,(( s__range(s__GreatestCommonDivisorFn_1,s__Integer) ))).
%FOL fof(kb_SUMO_17028,axiom,(( s__documentation(s__GreatestCommonDivisorFn_1,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_1 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17029,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__Function) ))).
%FOL fof(kb_SUMO_17030,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17031,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17032,axiom,(( s__range(s__GreatestCommonDivisorFn_2,s__Integer) ))).
%FOL fof(kb_SUMO_17033,axiom,(( s__documentation(s__GreatestCommonDivisorFn_2,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_2 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17034,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__Function) ))).
%FOL fof(kb_SUMO_17035,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17036,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17037,axiom,(( s__range(s__GreatestCommonDivisorFn_3,s__Integer) ))).
%FOL fof(kb_SUMO_17038,axiom,(( s__documentation(s__GreatestCommonDivisorFn_3,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_3 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17039,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__Function) ))).
%FOL fof(kb_SUMO_17040,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17041,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17042,axiom,(( s__range(s__GreatestCommonDivisorFn_4,s__Integer) ))).
%FOL fof(kb_SUMO_17043,axiom,(( s__documentation(s__GreatestCommonDivisorFn_4,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_4 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17044,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__Function) ))).
%FOL fof(kb_SUMO_17045,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17046,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17047,axiom,(( s__range(s__GreatestCommonDivisorFn_5,s__Integer) ))).
%FOL fof(kb_SUMO_17048,axiom,(( s__documentation(s__GreatestCommonDivisorFn_5,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_5 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17049,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__Function) ))).
%FOL fof(kb_SUMO_17050,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17051,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17052,axiom,(( s__range(s__GreatestCommonDivisorFn_6,s__Integer) ))).
%FOL fof(kb_SUMO_17053,axiom,(( s__documentation(s__GreatestCommonDivisorFn_6,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_6 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17054,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__Function) ))).
%FOL fof(kb_SUMO_17055,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17056,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17057,axiom,(( s__range(s__GreatestCommonDivisorFn_7,s__Integer) ))).
%FOL fof(kb_SUMO_17058,axiom,(( s__documentation(s__GreatestCommonDivisorFn_7,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_7 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17059,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__Function) ))).
%FOL fof(kb_SUMO_17060,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17061,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17062,axiom,(( s__range(s__LeastCommonMultipleFn_1,s__Integer) ))).
%FOL fof(kb_SUMO_17063,axiom,(( s__documentation(s__LeastCommonMultipleFn_1,s__EnglishLanguage,'(&%LeastCommonMultipleFn_1 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17064,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__Function) ))).
%FOL fof(kb_SUMO_17065,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17066,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17067,axiom,(( s__range(s__LeastCommonMultipleFn_2,s__Integer) ))).
%FOL fof(kb_SUMO_17068,axiom,(( s__documentation(s__LeastCommonMultipleFn_2,s__EnglishLanguage,'(&%LeastCommonMultipleFn_2 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17069,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__Function) ))).
%FOL fof(kb_SUMO_17070,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17071,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17072,axiom,(( s__range(s__LeastCommonMultipleFn_3,s__Integer) ))).
%FOL fof(kb_SUMO_17073,axiom,(( s__documentation(s__LeastCommonMultipleFn_3,s__EnglishLanguage,'(&%LeastCommonMultipleFn_3 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17074,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__Function) ))).
%FOL fof(kb_SUMO_17075,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17076,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17077,axiom,(( s__range(s__LeastCommonMultipleFn_4,s__Integer) ))).
%FOL fof(kb_SUMO_17078,axiom,(( s__documentation(s__LeastCommonMultipleFn_4,s__EnglishLanguage,'(&%LeastCommonMultipleFn_4 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17079,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__Function) ))).
%FOL fof(kb_SUMO_17080,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17081,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17082,axiom,(( s__range(s__LeastCommonMultipleFn_5,s__Integer) ))).
%FOL fof(kb_SUMO_17083,axiom,(( s__documentation(s__LeastCommonMultipleFn_5,s__EnglishLanguage,'(&%LeastCommonMultipleFn_5 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17084,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__Function) ))).
%FOL fof(kb_SUMO_17085,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17086,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17087,axiom,(( s__range(s__LeastCommonMultipleFn_6,s__Integer) ))).
%FOL fof(kb_SUMO_17088,axiom,(( s__documentation(s__LeastCommonMultipleFn_6,s__EnglishLanguage,'(&%LeastCommonMultipleFn_6 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17089,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__Function) ))).
%FOL fof(kb_SUMO_17090,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_17091,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17092,axiom,(( s__range(s__LeastCommonMultipleFn_7,s__Integer) ))).
%FOL fof(kb_SUMO_17093,axiom,(( s__documentation(s__LeastCommonMultipleFn_7,s__EnglishLanguage,'(&%LeastCommonMultipleFn_7 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_17094,axiom,(( s__instance(s__ListFn_1,s__Function) ))).
%FOL fof(kb_SUMO_17095,axiom,(( s__instance(s__ListFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17096,axiom,(( s__range(s__ListFn_1,s__List) ))).
%FOL fof(kb_SUMO_17097,axiom,(( s__documentation(s__ListFn_1,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17098,axiom,(( s__instance(s__ListFn_2,s__Function) ))).
%FOL fof(kb_SUMO_17099,axiom,(( s__instance(s__ListFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17100,axiom,(( s__range(s__ListFn_2,s__List) ))).
%FOL fof(kb_SUMO_17101,axiom,(( s__documentation(s__ListFn_2,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17102,axiom,(( s__instance(s__ListFn_3,s__Function) ))).
%FOL fof(kb_SUMO_17103,axiom,(( s__instance(s__ListFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17104,axiom,(( s__range(s__ListFn_3,s__List) ))).
%FOL fof(kb_SUMO_17105,axiom,(( s__documentation(s__ListFn_3,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17106,axiom,(( s__instance(s__ListFn_4,s__Function) ))).
%FOL fof(kb_SUMO_17107,axiom,(( s__instance(s__ListFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17108,axiom,(( s__range(s__ListFn_4,s__List) ))).
%FOL fof(kb_SUMO_17109,axiom,(( s__documentation(s__ListFn_4,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17110,axiom,(( s__instance(s__ListFn_5,s__Function) ))).
%FOL fof(kb_SUMO_17111,axiom,(( s__instance(s__ListFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17112,axiom,(( s__range(s__ListFn_5,s__List) ))).
%FOL fof(kb_SUMO_17113,axiom,(( s__documentation(s__ListFn_5,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17114,axiom,(( s__instance(s__ListFn_6,s__Function) ))).
%FOL fof(kb_SUMO_17115,axiom,(( s__instance(s__ListFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17116,axiom,(( s__range(s__ListFn_6,s__List) ))).
%FOL fof(kb_SUMO_17117,axiom,(( s__documentation(s__ListFn_6,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17118,axiom,(( s__instance(s__ListFn_7,s__Function) ))).
%FOL fof(kb_SUMO_17119,axiom,(( s__instance(s__ListFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17120,axiom,(( s__range(s__ListFn_7,s__List) ))).
%FOL fof(kb_SUMO_17121,axiom,(( s__documentation(s__ListFn_7,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17122,axiom,(( s__instance(s__ListFn_8,s__Function) ))).
%FOL fof(kb_SUMO_17123,axiom,(( s__instance(s__ListFn_8,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17124,axiom,(( s__range(s__ListFn_8,s__List) ))).
%FOL fof(kb_SUMO_17125,axiom,(( s__documentation(s__ListFn_8,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_17126,axiom,(( s__instance(s__contraryAttribute_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17127,axiom,(( s__instance(s__contraryAttribute_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17128,axiom,(( s__documentation(s__contraryAttribute_1__m,s__EnglishLanguage,'A &%contraryAttribute_1 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_1 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17129,axiom,(( s__instance(s__contraryAttribute_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17130,axiom,(( s__instance(s__contraryAttribute_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17131,axiom,(( s__documentation(s__contraryAttribute_2__m,s__EnglishLanguage,'A &%contraryAttribute_2 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_2 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17132,axiom,(( s__instance(s__contraryAttribute_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17133,axiom,(( s__instance(s__contraryAttribute_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17134,axiom,(( s__documentation(s__contraryAttribute_3__m,s__EnglishLanguage,'A &%contraryAttribute_3 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_3 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17135,axiom,(( s__instance(s__contraryAttribute_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17136,axiom,(( s__instance(s__contraryAttribute_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17137,axiom,(( s__documentation(s__contraryAttribute_4__m,s__EnglishLanguage,'A &%contraryAttribute_4 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_4 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17138,axiom,(( s__instance(s__contraryAttribute_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17139,axiom,(( s__instance(s__contraryAttribute_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17140,axiom,(( s__documentation(s__contraryAttribute_5__m,s__EnglishLanguage,'A &%contraryAttribute_5 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_5 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17141,axiom,(( s__instance(s__contraryAttribute_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17142,axiom,(( s__instance(s__contraryAttribute_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17143,axiom,(( s__documentation(s__contraryAttribute_6__m,s__EnglishLanguage,'A &%contraryAttribute_6 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_6 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17144,axiom,(( s__instance(s__contraryAttribute_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17145,axiom,(( s__instance(s__contraryAttribute_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17146,axiom,(( s__documentation(s__contraryAttribute_7__m,s__EnglishLanguage,'A &%contraryAttribute_7 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_7 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_17147,axiom,(( s__instance(s__disjointDecomposition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17148,axiom,(( s__instance(s__disjointDecomposition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17149,axiom,(( s__domain(s__disjointDecomposition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17150,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_1__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17151,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_1__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17152,axiom,(( s__documentation(s__disjointDecomposition_1__m,s__EnglishLanguage,'A &%disjointDecomposition_1 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17153,axiom,(( s__instance(s__disjointDecomposition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17154,axiom,(( s__instance(s__disjointDecomposition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17155,axiom,(( s__domain(s__disjointDecomposition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17156,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_2__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17157,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_2__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17158,axiom,(( s__documentation(s__disjointDecomposition_2__m,s__EnglishLanguage,'A &%disjointDecomposition_2 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17159,axiom,(( s__instance(s__disjointDecomposition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17160,axiom,(( s__instance(s__disjointDecomposition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17161,axiom,(( s__domain(s__disjointDecomposition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17162,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_3__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17163,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_3__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17164,axiom,(( s__documentation(s__disjointDecomposition_3__m,s__EnglishLanguage,'A &%disjointDecomposition_3 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17165,axiom,(( s__instance(s__disjointDecomposition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17166,axiom,(( s__instance(s__disjointDecomposition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17167,axiom,(( s__domain(s__disjointDecomposition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17168,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_4__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17169,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_4__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17170,axiom,(( s__documentation(s__disjointDecomposition_4__m,s__EnglishLanguage,'A &%disjointDecomposition_4 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17171,axiom,(( s__instance(s__disjointDecomposition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17172,axiom,(( s__instance(s__disjointDecomposition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17173,axiom,(( s__domain(s__disjointDecomposition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17174,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_5__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17175,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_5__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17176,axiom,(( s__documentation(s__disjointDecomposition_5__m,s__EnglishLanguage,'A &%disjointDecomposition_5 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17177,axiom,(( s__instance(s__disjointDecomposition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17178,axiom,(( s__instance(s__disjointDecomposition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17179,axiom,(( s__domain(s__disjointDecomposition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17180,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_6__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17181,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_6__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17182,axiom,(( s__documentation(s__disjointDecomposition_6__m,s__EnglishLanguage,'A &%disjointDecomposition_6 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17183,axiom,(( s__instance(s__disjointDecomposition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17184,axiom,(( s__instance(s__disjointDecomposition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17185,axiom,(( s__domain(s__disjointDecomposition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17186,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_7__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17187,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_7__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17188,axiom,(( s__documentation(s__disjointDecomposition_7__m,s__EnglishLanguage,'A &%disjointDecomposition_7 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17189,axiom,(( s__instance(s__disjointDecomposition_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17190,axiom,(( s__instance(s__disjointDecomposition_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17191,axiom,(( s__domain(s__disjointDecomposition_8__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17192,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_8__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_17193,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_8__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_17194,axiom,(( s__documentation(s__disjointDecomposition_8__m,s__EnglishLanguage,'A &%disjointDecomposition_8 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_17195,axiom,(( s__instance(s__exhaustiveAttribute_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17196,axiom,(( s__instance(s__exhaustiveAttribute_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17197,axiom,(( s__domainSubclass(s__exhaustiveAttribute_1__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17198,axiom,(( s__documentation(s__exhaustiveAttribute_1__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_1 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17199,axiom,(( s__instance(s__exhaustiveAttribute_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17200,axiom,(( s__instance(s__exhaustiveAttribute_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17201,axiom,(( s__domainSubclass(s__exhaustiveAttribute_2__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17202,axiom,(( s__documentation(s__exhaustiveAttribute_2__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_2 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17203,axiom,(( s__instance(s__exhaustiveAttribute_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17204,axiom,(( s__instance(s__exhaustiveAttribute_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17205,axiom,(( s__domainSubclass(s__exhaustiveAttribute_3__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17206,axiom,(( s__documentation(s__exhaustiveAttribute_3__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_3 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17207,axiom,(( s__instance(s__exhaustiveAttribute_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17208,axiom,(( s__instance(s__exhaustiveAttribute_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17209,axiom,(( s__domainSubclass(s__exhaustiveAttribute_4__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17210,axiom,(( s__documentation(s__exhaustiveAttribute_4__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_4 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17211,axiom,(( s__instance(s__exhaustiveAttribute_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17212,axiom,(( s__instance(s__exhaustiveAttribute_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17213,axiom,(( s__domainSubclass(s__exhaustiveAttribute_5__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17214,axiom,(( s__documentation(s__exhaustiveAttribute_5__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_5 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17215,axiom,(( s__instance(s__exhaustiveAttribute_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17216,axiom,(( s__instance(s__exhaustiveAttribute_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17217,axiom,(( s__domainSubclass(s__exhaustiveAttribute_6__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17218,axiom,(( s__documentation(s__exhaustiveAttribute_6__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_6 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17219,axiom,(( s__instance(s__exhaustiveAttribute_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17220,axiom,(( s__instance(s__exhaustiveAttribute_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17221,axiom,(( s__domainSubclass(s__exhaustiveAttribute_7__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17222,axiom,(( s__documentation(s__exhaustiveAttribute_7__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_7 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17223,axiom,(( s__instance(s__exhaustiveAttribute_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17224,axiom,(( s__instance(s__exhaustiveAttribute_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17225,axiom,(( s__domainSubclass(s__exhaustiveAttribute_8__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_17226,axiom,(( s__documentation(s__exhaustiveAttribute_8__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_8 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_17227,axiom,(( s__instance(s__exhaustiveDecomposition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17228,axiom,(( s__instance(s__exhaustiveDecomposition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17229,axiom,(( s__domain(s__exhaustiveDecomposition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17230,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_1__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17231,axiom,(( s__documentation(s__exhaustiveDecomposition_1__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_1 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17232,axiom,(( s__instance(s__exhaustiveDecomposition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17233,axiom,(( s__instance(s__exhaustiveDecomposition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17234,axiom,(( s__domain(s__exhaustiveDecomposition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17235,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_2__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17236,axiom,(( s__documentation(s__exhaustiveDecomposition_2__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_2 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17237,axiom,(( s__instance(s__exhaustiveDecomposition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17238,axiom,(( s__instance(s__exhaustiveDecomposition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17239,axiom,(( s__domain(s__exhaustiveDecomposition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17240,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_3__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17241,axiom,(( s__documentation(s__exhaustiveDecomposition_3__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_3 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17242,axiom,(( s__instance(s__exhaustiveDecomposition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17243,axiom,(( s__instance(s__exhaustiveDecomposition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17244,axiom,(( s__domain(s__exhaustiveDecomposition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17245,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_4__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17246,axiom,(( s__documentation(s__exhaustiveDecomposition_4__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_4 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17247,axiom,(( s__instance(s__exhaustiveDecomposition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17248,axiom,(( s__instance(s__exhaustiveDecomposition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17249,axiom,(( s__domain(s__exhaustiveDecomposition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17250,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_5__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17251,axiom,(( s__documentation(s__exhaustiveDecomposition_5__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_5 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17252,axiom,(( s__instance(s__exhaustiveDecomposition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17253,axiom,(( s__instance(s__exhaustiveDecomposition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17254,axiom,(( s__domain(s__exhaustiveDecomposition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17255,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_6__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17256,axiom,(( s__documentation(s__exhaustiveDecomposition_6__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_6 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17257,axiom,(( s__instance(s__exhaustiveDecomposition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17258,axiom,(( s__instance(s__exhaustiveDecomposition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17259,axiom,(( s__domain(s__exhaustiveDecomposition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17260,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_7__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17261,axiom,(( s__documentation(s__exhaustiveDecomposition_7__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_7 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17262,axiom,(( s__instance(s__exhaustiveDecomposition_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17263,axiom,(( s__instance(s__exhaustiveDecomposition_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17264,axiom,(( s__domain(s__exhaustiveDecomposition_8__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17265,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_8__m,s__partition__m) ))).
%FOL fof(kb_SUMO_17266,axiom,(( s__documentation(s__exhaustiveDecomposition_8__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_8 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_17267,axiom,(( s__instance(s__partition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17268,axiom,(( s__instance(s__partition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17269,axiom,(( s__domain(s__partition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17270,axiom,(( s__documentation(s__partition_1__m,s__EnglishLanguage,'A &%partition_1 of a class C is a set of mutually &%disjoint classes (a subclass partition_1) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_1.') ))).
%FOL fof(kb_SUMO_17271,axiom,(( s__instance(s__partition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17272,axiom,(( s__instance(s__partition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17273,axiom,(( s__domain(s__partition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17274,axiom,(( s__documentation(s__partition_2__m,s__EnglishLanguage,'A &%partition_2 of a class C is a set of mutually &%disjoint classes (a subclass partition_2) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_2.') ))).
%FOL fof(kb_SUMO_17275,axiom,(( s__instance(s__partition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17276,axiom,(( s__instance(s__partition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17277,axiom,(( s__domain(s__partition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17278,axiom,(( s__documentation(s__partition_3__m,s__EnglishLanguage,'A &%partition_3 of a class C is a set of mutually &%disjoint classes (a subclass partition_3) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_3.') ))).
%FOL fof(kb_SUMO_17279,axiom,(( s__instance(s__partition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17280,axiom,(( s__instance(s__partition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17281,axiom,(( s__domain(s__partition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17282,axiom,(( s__documentation(s__partition_4__m,s__EnglishLanguage,'A &%partition_4 of a class C is a set of mutually &%disjoint classes (a subclass partition_4) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_4.') ))).
%FOL fof(kb_SUMO_17283,axiom,(( s__instance(s__partition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17284,axiom,(( s__instance(s__partition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17285,axiom,(( s__domain(s__partition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17286,axiom,(( s__documentation(s__partition_5__m,s__EnglishLanguage,'A &%partition_5 of a class C is a set of mutually &%disjoint classes (a subclass partition_5) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_5.') ))).
%FOL fof(kb_SUMO_17287,axiom,(( s__instance(s__partition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17288,axiom,(( s__instance(s__partition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17289,axiom,(( s__domain(s__partition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17290,axiom,(( s__documentation(s__partition_6__m,s__EnglishLanguage,'A &%partition_6 of a class C is a set of mutually &%disjoint classes (a subclass partition_6) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_6.') ))).
%FOL fof(kb_SUMO_17291,axiom,(( s__instance(s__partition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_17292,axiom,(( s__instance(s__partition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_17293,axiom,(( s__domain(s__partition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_17294,axiom,(( s__documentation(s__partition_7__m,s__EnglishLanguage,'A &%partition_7 of a class C is a set of mutually &%disjoint classes (a subclass partition_7) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_7.') ))).

%------------------------------------------------------------------------------
