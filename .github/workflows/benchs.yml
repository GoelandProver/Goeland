name: Benchs

permissions:
  pull-requests: write

on:
  pull_request:
    types: [labeled]

env:
  goVersion: '>=1.22.0'
  GOMEMLIMIT: '3GiB'
  GOMAXPROCS: '3'

jobs:
  RemoveLabel:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: mondeja/remove-labels-gh-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            request:benchs

  CASCSet1:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: First set of benchs
        id: benchs-1
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/1 $RUNNER_TEMP/benchs-1

  CASCSet2:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: Second set of benchs
        id: benchs-2
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/2 $RUNNER_TEMP/benchs-2

  CASCSet3:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: Third set of benchs
        id: benchs-3
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/3 $RUNNER_TEMP/benchs-3

  CASCSet4:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: Fourth set of benchs
        id: benchs-4
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/4 $RUNNER_TEMP/benchs-4

  CASCSet5:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: Fifth set of benchs
        id: benchs-5
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/5 $RUNNER_TEMP/benchs-5

  CASCSet6:
    if: github.event.label.name == 'request:benchs'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goVersion }}
      - run: go install golang.org/x/tools/cmd/goyacc@latest
      - name: Sixth set of benchs
        id: benchs-6
        run: |
          git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
          git fetch
          new_commit=${{ github.event.pull_request.head.sha }}
          old_commit=$(git merge-base origin/master $new_commit)
          cd devtools
          chmod +x run-benchs.sh
          ./run-benchs.sh $new_commit $old_commit $(pwd)/../.github/benchs ../.github/benchs/CASC-J12/6 $RUNNER_TEMP/benchs-6

  WriteCASCRecap:
    needs:
      - CASCSet1
      - CASCSet2
      - CASCSet3
      - CASCSet4
      - CASCSet5
      - CASCSet6
    runs-on: ubuntu-latest
    name: Add recap of CASC benchs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Format message
        id: format-message
        run: |
          pip install prettytable
          cd devtools
          echo "message=$(python3 make-recap-comment.py $RUNNER_TEMP/benchs-1 $RUNNER_TEMP/benchs-2 $RUNNER_TEMP/benchs-3 $RUNNER_TEMP/benchs-4 $RUNNER_TEMP/benchs-5 $RUNNER_TEMP/benchs-6)" >> $GITHUB_ENV
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: ${{ env.message }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
