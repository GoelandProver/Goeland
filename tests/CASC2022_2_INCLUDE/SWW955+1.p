%--------------------------------------------------------------------------
% File     : SWW955+1 : TPTP v8.1.0. Released v7.4.0.
% Domain   : Software Verification
% Problem  : Attack on Shamir-Rivest-Adleman Three pass protocol
% Version  : [LT19] axioms : Especial.
% English  : Attack demonstrates secrecy violation of secret message.

% Refs     : [BO97]  Bull & Otway (1997), The Authentication Protocol
%          : [RS98]  Ryan & Schneider (1998), An Attack on a Recursive Auth
%          : [LT19]  Li & Tiu (2019), Combining ProVerif and Automated Theo
%          : [Li20]  Li (2020), Email to Geoff Sutcliffe
% Source   : [Li20]
% Names    : Shamir-Rivest-Adleman-Three-Pass.p [LT20]

% Status   : Theorem
% Rating   : 0.50 v8.1.0, 0.47 v7.5.0, 0.50 v7.4.0
% Syntax   : Number of formulae    :   82 (  59 unt;   0 def)
%            Number of atoms       :  111 (  47 equ)
%            Maximal formula atoms :    3 (   1 avg)
%            Number of connectives :   74 (  45   ~;   0   |;   6   &)
%                                         (   0 <=>;  23  =>;   0  <=;   0 <~>)
%            Maximal formula depth :    5 (   2 avg)
%            Maximal term depth    :    3 (   1 avg)
%            Number of predicates  :    4 (   3 usr;   0 prp; 1-2 aty)
%            Number of functors    :   24 (  24 usr;  12 con; 0-2 aty)
%            Number of variables   :   35 (  35   !;   0   ?)
% SPC      : FOF_THM_RFO_SEQ

% Comments : Generated by a modified version of ProVerif used in the
%            ProVerif-ATP project [LT19].
%--------------------------------------------------------------------------
fof(ax0,axiom,
    constr_CONST_0x30 != constr_CONST_1 ).

fof(ax1,axiom,
    constr_CONST_0x30 != constr_CONST_2 ).

fof(ax2,axiom,
    constr_CONST_0x30 != constr_CONST_3 ).

fof(ax3,axiom,
    constr_CONST_0x30 != constr_CONST_4 ).

fof(ax4,axiom,
    constr_CONST_0x30 != name_Ka ).

fof(ax5,axiom,
    constr_CONST_0x30 != name_Kb ).

fof(ax6,axiom,
    constr_CONST_0x30 != name_c ).

fof(ax7,axiom,
    constr_CONST_0x30 != name_m_9 ).

fof(ax8,axiom,
    constr_CONST_0x30 != name_objective ).

fof(ax9,axiom,
    constr_CONST_1 != constr_CONST_2 ).

fof(ax10,axiom,
    constr_CONST_1 != constr_CONST_3 ).

fof(ax11,axiom,
    constr_CONST_1 != constr_CONST_4 ).

fof(ax12,axiom,
    constr_CONST_1 != name_Ka ).

fof(ax13,axiom,
    constr_CONST_1 != name_Kb ).

fof(ax14,axiom,
    constr_CONST_1 != name_c ).

fof(ax15,axiom,
    constr_CONST_1 != name_m_9 ).

fof(ax16,axiom,
    constr_CONST_1 != name_objective ).

fof(ax17,axiom,
    constr_CONST_2 != constr_CONST_3 ).

fof(ax18,axiom,
    constr_CONST_2 != constr_CONST_4 ).

fof(ax19,axiom,
    constr_CONST_2 != name_Ka ).

fof(ax20,axiom,
    constr_CONST_2 != name_Kb ).

fof(ax21,axiom,
    constr_CONST_2 != name_c ).

fof(ax22,axiom,
    constr_CONST_2 != name_m_9 ).

fof(ax23,axiom,
    constr_CONST_2 != name_objective ).

fof(ax24,axiom,
    constr_CONST_3 != constr_CONST_4 ).

fof(ax25,axiom,
    constr_CONST_3 != name_Ka ).

fof(ax26,axiom,
    constr_CONST_3 != name_Kb ).

fof(ax27,axiom,
    constr_CONST_3 != name_c ).

fof(ax28,axiom,
    constr_CONST_3 != name_m_9 ).

fof(ax29,axiom,
    constr_CONST_3 != name_objective ).

fof(ax30,axiom,
    constr_CONST_4 != name_Ka ).

fof(ax31,axiom,
    constr_CONST_4 != name_Kb ).

fof(ax32,axiom,
    constr_CONST_4 != name_c ).

fof(ax33,axiom,
    constr_CONST_4 != name_m_9 ).

fof(ax34,axiom,
    constr_CONST_4 != name_objective ).

fof(ax35,axiom,
    name_Ka != name_Kb ).

fof(ax36,axiom,
    name_Ka != name_c ).

fof(ax37,axiom,
    name_Ka != name_m_9 ).

fof(ax38,axiom,
    name_Ka != name_objective ).

fof(ax39,axiom,
    name_Kb != name_c ).

fof(ax40,axiom,
    name_Kb != name_m_9 ).

fof(ax41,axiom,
    name_Kb != name_objective ).

fof(ax42,axiom,
    name_c != name_m_9 ).

fof(ax43,axiom,
    name_c != name_objective ).

fof(ax44,axiom,
    name_m_9 != name_objective ).

fof(ax45,axiom,
    ! [VAR_K_8,VAR_M_7] : constr_dec(constr_enc(VAR_M_7,VAR_K_8),VAR_K_8) = VAR_M_7 ).

fof(ax46,axiom,
    ! [VAR_K_0X30,VAR_M_0X30] : constr_comm_dec(constr_comm_enc(VAR_M_0X30,VAR_K_0X30),VAR_K_0X30) = VAR_M_0X30 ).

fof(ax47,axiom,
    pred_attacker(tuple_true) ).

fof(ax48,axiom,
    pred_attacker(tuple_false) ).

fof(ax49,axiom,
    ! [VAR_V_29,VAR_V_30X30] :
      ( ( pred_attacker(VAR_V_29)
        & pred_attacker(VAR_V_30X30) )
     => pred_attacker(constr_enc(VAR_V_29,VAR_V_30X30)) ) ).

fof(ax50,axiom,
    ! [VAR_V_33,VAR_V_34] :
      ( ( pred_attacker(VAR_V_33)
        & pred_attacker(VAR_V_34) )
     => pred_attacker(constr_dec(VAR_V_33,VAR_V_34)) ) ).

fof(ax51,axiom,
    ! [VAR_V_37,VAR_V_38] :
      ( ( pred_attacker(VAR_V_37)
        & pred_attacker(VAR_V_38) )
     => pred_attacker(constr_comm_enc(VAR_V_37,VAR_V_38)) ) ).

fof(ax52,axiom,
    ! [VAR_V_41,VAR_V_42] :
      ( ( pred_attacker(VAR_V_41)
        & pred_attacker(VAR_V_42) )
     => pred_attacker(constr_comm_dec(VAR_V_41,VAR_V_42)) ) ).

fof(ax53,axiom,
    pred_attacker(constr_CONST_4) ).

fof(ax54,axiom,
    pred_attacker(constr_CONST_3) ).

fof(ax55,axiom,
    pred_attacker(constr_CONST_2) ).

fof(ax56,axiom,
    pred_attacker(constr_CONST_1) ).

fof(ax57,axiom,
    pred_attacker(constr_CONST_0x30) ).

fof(ax58,axiom,
    ! [VAR_V_44] :
      ( pred_attacker(VAR_V_44)
     => pred_attacker(tuple_B_out_2(VAR_V_44)) ) ).

fof(ax59,axiom,
    ! [VAR_V_47] :
      ( pred_attacker(tuple_B_out_2(VAR_V_47))
     => pred_attacker(VAR_V_47) ) ).

fof(ax60,axiom,
    ! [VAR_V_50X30] :
      ( pred_attacker(VAR_V_50X30)
     => pred_attacker(tuple_B_in_3(VAR_V_50X30)) ) ).

fof(ax61,axiom,
    ! [VAR_V_53] :
      ( pred_attacker(tuple_B_in_3(VAR_V_53))
     => pred_attacker(VAR_V_53) ) ).

fof(ax62,axiom,
    ! [VAR_V_56] :
      ( pred_attacker(VAR_V_56)
     => pred_attacker(tuple_B_in_1(VAR_V_56)) ) ).

fof(ax63,axiom,
    ! [VAR_V_59] :
      ( pred_attacker(tuple_B_in_1(VAR_V_59))
     => pred_attacker(VAR_V_59) ) ).

fof(ax64,axiom,
    ! [VAR_V_62] :
      ( pred_attacker(VAR_V_62)
     => pred_attacker(tuple_A_out_4(VAR_V_62)) ) ).

fof(ax65,axiom,
    ! [VAR_V_65] :
      ( pred_attacker(tuple_A_out_4(VAR_V_65))
     => pred_attacker(VAR_V_65) ) ).

fof(ax66,axiom,
    ! [VAR_V_68] :
      ( pred_attacker(VAR_V_68)
     => pred_attacker(tuple_A_out_3(VAR_V_68)) ) ).

fof(ax67,axiom,
    ! [VAR_V_71] :
      ( pred_attacker(tuple_A_out_3(VAR_V_71))
     => pred_attacker(VAR_V_71) ) ).

fof(ax68,axiom,
    ! [VAR_V_74] :
      ( pred_attacker(VAR_V_74)
     => pred_attacker(tuple_A_out_1(VAR_V_74)) ) ).

fof(ax69,axiom,
    ! [VAR_V_77] :
      ( pred_attacker(tuple_A_out_1(VAR_V_77))
     => pred_attacker(VAR_V_77) ) ).

fof(ax70,axiom,
    ! [VAR_V_80X30] :
      ( pred_attacker(VAR_V_80X30)
     => pred_attacker(tuple_A_in_2(VAR_V_80X30)) ) ).

fof(ax71,axiom,
    ! [VAR_V_83] :
      ( pred_attacker(tuple_A_in_2(VAR_V_83))
     => pred_attacker(VAR_V_83) ) ).

fof(ax72,axiom,
    ! [VAR_V_89,VAR_V_90X30] :
      ( ( pred_mess(VAR_V_90X30,VAR_V_89)
        & pred_attacker(VAR_V_90X30) )
     => pred_attacker(VAR_V_89) ) ).

fof(ax73,axiom,
    ! [VAR_V_91,VAR_V_92] :
      ( ( pred_attacker(VAR_V_92)
        & pred_attacker(VAR_V_91) )
     => pred_mess(VAR_V_92,VAR_V_91) ) ).

fof(ax74,axiom,
    pred_attacker(name_c) ).

fof(ax75,axiom,
    ! [VAR_V_94] : pred_equal(VAR_V_94,VAR_V_94) ).

fof(ax76,axiom,
    ! [VAR_V_95] : pred_attacker(name_new0x2Dname(VAR_V_95)) ).

fof(ax77,axiom,
    pred_attacker(tuple_A_out_1(constr_comm_enc(name_m_9,name_Ka))) ).

fof(ax78,axiom,
    ! [VAR_MSG1_128] :
      ( pred_attacker(tuple_A_in_2(VAR_MSG1_128))
     => pred_attacker(tuple_A_out_3(constr_comm_dec(VAR_MSG1_128,name_Ka))) ) ).

fof(ax79,axiom,
    ! [VAR_MSG1_142] :
      ( pred_attacker(tuple_A_in_2(VAR_MSG1_142))
     => pred_attacker(tuple_A_out_4(constr_enc(name_objective,name_m_9))) ) ).

fof(ax80,axiom,
    ! [VAR_MSG1_162] :
      ( pred_attacker(tuple_B_in_1(VAR_MSG1_162))
     => pred_attacker(tuple_B_out_2(constr_comm_enc(VAR_MSG1_162,name_Kb))) ) ).

fof(co0,conjecture,
    pred_attacker(name_objective) ).

%--------------------------------------------------------------------------
