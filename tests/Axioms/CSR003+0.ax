%------------------------------------------------------------------------------
% File     : CSR003+0 : TPTP v8.1.2. Bugfixed v7.3.0.
% Domain   : Commonsense Reasoning
% Axioms   : SUMO
% Version  : Especial.
% English  :

% Refs     : [NP01]  Niles & Pease (2001), Towards A Standard Upper Ontology
%          : [Pea11] Pease (2011), Ontology: A Practical Guide
%          : [Pea12] Pease (2012), Email to G. Sutcliffe
% Source   : [Pea12]
% Names    :

% Status   : ContradictoryAxioms
% Syntax   : Number of formulae    : 7217 (4491 unt;   0 def)
%            Number of atoms       : 18018 (1090 equ)
%            Maximal formula atoms :   22 (   2 avg)
%            Number of connectives : 11357 ( 556   ~;  70   |;4875   &)
%                                         ( 100 <=>;5756  =>;   0  <=;   0 <~>)
%            Maximal formula depth :   26 (   3 avg)
%            Maximal term depth    :    5 (   1 avg)
%            Number of predicates  :  290 ( 289 usr;   0 prp; 1-8 aty)
%            Number of functors    : 3169 (3118 usr;3056 con; 0-8 aty)
%            Number of variables   : 7498 (7003   !; 495   ?)
% SPC      :

% Comments : This is a translation to TPTP of KB SUMO.
%          : Copyright 2010 Articulate Software Incorporated, released under
%            the GNU Public License <http://www.gnu.org/copyleft/gpl.html>.
%          : CVS re.84.
%          : The lines commented out with %FOL contain either non-first-order
%            contructs, or aspects of the ontology not relevant to reasoning.
% Bugfixes : v4.0.1 - This is a new translation of the updated SUMO. Cached
%            axioms have been separated out to a separate file.
%          : .0 - Updated ontology.
%          : v5.3.0 - Repaired ontology to remove inconsistency
%          : v5.4.0 - Updated ontology
%          : v7.3.0 - Double quoted numbers
%------------------------------------------------------------------------------
fof(kb_SUMO_1,axiom,
    s__instance(s__instance__m,s__BinaryPredicate) ).

fof(kb_SUMO_2,axiom,
    s__domain(s__instance__m,"1",s__Entity) ).

fof(kb_SUMO_3,axiom,
    s__domain(s__instance__m,"2",s__SetOrClass) ).

fof(kb_SUMO_4,axiom,
    s__documentation(s__instance__m,s__EnglishLanguage,'An object is an &%instance of a &%SetOrClass if it is included in that &%SetOrClass. An individual may be an instance of many classes, some of which may be subclasses of others. Thus, there is no assumption in the meaning of &%instance about specificity or uniqueness.') ).

fof(kb_SUMO_5,axiom,
    s__subrelation(s__immediateInstance__m,s__instance__m) ).

fof(kb_SUMO_6,axiom,
    s__instance(s__immediateInstance__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7,axiom,
    s__instance(s__immediateInstance__m,s__IntransitiveRelation) ).

fof(kb_SUMO_8,axiom,
    s__documentation(s__immediateInstance__m,s__EnglishLanguage,'An object is an &%immediateInstance of a &%SetOrClass if it is an instance of the &%SetOrClass and it is not an instance of a proper subclass of &%SetOrClass.') ).

fof(kb_SUMO_9,axiom,
    ! [V__CLASS,V__ENTITY] :
      ( s__instance(V__CLASS,s__SetOrClass)
     => ( s__immediateInstance(V__ENTITY,V__CLASS)
       => ~ ? [V__SUBCLASS] :
              ( s__instance(V__SUBCLASS,s__SetOrClass)
              & s__subclass(V__SUBCLASS,V__CLASS)
              & V__SUBCLASS != V__CLASS
              & s__instance(V__ENTITY,V__SUBCLASS) ) ) ) ).

fof(kb_SUMO_10,axiom,
    s__instance(s__inverse__m,s__BinaryPredicate) ).

fof(kb_SUMO_11,axiom,
    s__instance(s__inverse__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_12,axiom,
    s__instance(s__inverse__m,s__IntransitiveRelation) ).

fof(kb_SUMO_13,axiom,
    s__instance(s__inverse__m,s__SymmetricRelation) ).

fof(kb_SUMO_14,axiom,
    s__domain(s__inverse__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_15,axiom,
    s__domain(s__inverse__m,"2",s__BinaryRelation) ).

fof(kb_SUMO_16,axiom,
    s__documentation(s__inverse__m,s__EnglishLanguage,'The inverse of a &%BinaryRelation is a relation in which all the tuples of the original relation are reversed. In other words, one &%BinaryRelation is the inverse of another if they are equivalent when their arguments are swapped.') ).

fof(kb_SUMO_17,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Man) )
     => ( s__husband(V__INST1,V__INST2)
      <=> s__wife(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_18,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( greater(V__INST1,V__INST2)
      <=> less(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_19,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( greatereq(V__INST1,V__INST2)
      <=> lesseq(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_20,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__smaller(V__INST1,V__INST2)
      <=> s__larger(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_21,axiom,
    s__instance(s__subclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_22,axiom,
    s__instance(s__subclass__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_23,axiom,
    s__domain(s__subclass__m,"1",s__SetOrClass) ).

fof(kb_SUMO_24,axiom,
    s__domain(s__subclass__m,"2",s__SetOrClass) ).

fof(kb_SUMO_25,axiom,
    s__documentation(s__subclass__m,s__EnglishLanguage,'(&%subclass ?CLASS1 ?CLASS2) means that ?CLASS1 is a subclass of ?CLASS2, i.e. every instance of ?CLASS1 is also an instance of ?CLASS2. A class may have multiple superclasses and subclasses.') ).

fof(kb_SUMO_26,axiom,
    ! [V__X,V__Y] :
      ( s__subclass(V__X,V__Y)
     => ( s__instance(V__X,s__SetOrClass)
        & s__instance(V__Y,s__SetOrClass) ) ) ).

fof(kb_SUMO_27,axiom,
    ! [V__X,V__Y,V__Z] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__SetOrClass) )
     => ( ( s__subclass(V__X,V__Y)
          & s__instance(V__Z,V__X) )
       => s__instance(V__Z,V__Y) ) ) ).

fof(kb_SUMO_28,axiom,
    s__subrelation(s__immediateSubclass__m,s__subclass__m) ).

fof(kb_SUMO_29,axiom,
    s__instance(s__immediateSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_30,axiom,
    s__instance(s__immediateSubclass__m,s__IntransitiveRelation) ).

fof(kb_SUMO_31,axiom,
    s__instance(s__IntransitiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_32,axiom,
    s__documentation(s__immediateSubclass__m,s__EnglishLanguage,'A &%SetOrClass ?CLASS1 is an &%immediateSubclass of another &%SetOrClass ?CLASS2 just in case ?CLASS1 is a subclass of ?CLASS2 and there is no other subclass of ?CLASS2 such that ?CLASS1 is also a subclass of it.') ).

fof(kb_SUMO_33,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( s__immediateSubclass(V__CLASS1,V__CLASS2)
       => ~ ? [V__CLASS3] :
              ( s__instance(V__CLASS3,s__SetOrClass)
              & s__subclass(V__CLASS3,V__CLASS2)
              & s__subclass(V__CLASS1,V__CLASS3)
              & V__CLASS2 != V__CLASS3
              & V__CLASS1 != V__CLASS3 ) ) ) ).

fof(kb_SUMO_34,axiom,
    s__instance(s__subrelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_35,axiom,
    s__instance(s__subrelation__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_36,axiom,
    s__domain(s__subrelation__m,"1",s__Relation) ).

fof(kb_SUMO_37,axiom,
    s__domain(s__subrelation__m,"2",s__Relation) ).

fof(kb_SUMO_38,axiom,
    s__documentation(s__subrelation__m,s__EnglishLanguage,'(&%subrelation ?REL1 ?REL2) means that every tuple of ?REL1 is also a tuple of ?REL2. In other words, if the &%Relation ?REL1 holds for some arguments arg_1, arg_2, ... arg_n, then the &%Relation ?REL2 holds for the same arguments. A consequence of this is that a &%Relation and its subrelations must have the same &%valence.') ).

fof(kb_SUMO_39,axiom,
    ! [V__NUMBER,V__PRED1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__valence(V__PRED1,V__NUMBER) )
       => s__valence(V__PRED2,V__NUMBER) ) ) ).

fof(kb_SUMO_40,axiom,
    ! [V__NUMBER,V__PRED1,V__CLASS1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__domain(V__PRED2,V__NUMBER,V__CLASS1) )
       => s__domain(V__PRED1,V__NUMBER,V__CLASS1) ) ) ).

fof(kb_SUMO_41,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_42,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__relative(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_43,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_44,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsPartially(V__ROW1,V__ROW2)
       => s__overlapsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_45,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__synonymousExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_46,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_47,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__properPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_48,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__depth(V__ROW1,V__ROW2,V__ROW3)
       => s__distance(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_49,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_50,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_51,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__refers(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_52,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__time(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_53,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_54,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__beforeOrEqual(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_55,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_56,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_57,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__acquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_58,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__subsumesContentInstance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_59,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__inhabits(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_60,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__properPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_61,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__immediateSubclass(V__ROW1,V__ROW2)
       => s__subclass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_62,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_63,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__crosses(V__ROW1,V__ROW2)
       => s__traverses(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_64,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_65,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_66,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__meetsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_67,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__experiencer(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_68,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__immediateInstance(V__ROW1,V__ROW2)
       => s__instance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_69,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__sibling(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_70,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_71,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_72,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__located(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_73,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_74,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_75,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_76,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__properlyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_77,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_78,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__geographicSubregion(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_79,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_80,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_81,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__interiorPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_82,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_83,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_84,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_85,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__initialList(V__ROW1,V__ROW2)
       => s__subList(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_86,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_87,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__relatedEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_88,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subsumesContentClass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_89,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_90,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_91,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__completelyFills(V__ROW1,V__ROW2)
       => s__partiallyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_92,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_93,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__represents(V__ROW1,V__ROW2)
     => s__refers(V__ROW1,V__ROW2) ) ).

fof(kb_SUMO_94,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__legalRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_95,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_96,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__exactlyLocated(V__ROW1,V__ROW2)
       => s__located(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_97,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__ancestor(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_98,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__eventPartlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_99,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__sibling(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_100,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_101,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_102,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_103,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__uniqueIdentifier(V__ROW1,V__ROW2)
       => s__names(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_104,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__spouse(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_105,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_106,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__subCollection(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_107,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__moves(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_108,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_109,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_110,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_111,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__altitude(V__ROW1,V__ROW2,V__ROW3)
       => s__distance(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_112,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__mutualAcquaintance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_113,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__patient(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_114,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_115,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__width(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_116,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__traverses(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_117,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__relative(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_118,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_119,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__geometricPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_120,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumingExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_121,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__spouse(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_122,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_123,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__overlapsTemporally(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_124,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__length(V__ROW1,V__ROW2)
       => s__linearExtent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_125,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__parent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_126,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsSpatially(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_127,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__represents(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_128,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_129,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__partiallyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_130,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_131,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__measure(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_132,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle)
        & s__instance(V__ROW1,s__Object) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__width(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_133,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__superficialPart(V__ROW1,V__ROW2)
       => s__part(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_134,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_135,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__EngineeringConnection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__connects(V__ROW1,V__ROW2,V__ROW3) ) ) ).

fof(kb_SUMO_136,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__subProposition(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_137,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_138,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_139,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__meetsSpatially(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_140,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__meetsSpatially(V__ROW1,V__ROW2)
       => s__connected(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_141,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_142,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_143,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__temporalPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_144,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__property(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_145,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__subclass(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_146,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventLocated(V__ROW1,V__ROW2)
       => s__eventPartlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_147,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__inhabits(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_148,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__completelyFills(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_149,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__involvedInEvent(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_150,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_151,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__familyRelation(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_152,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__inScopeOfInterest(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_153,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__attribute(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_154,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__superficialPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_155,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__partlyLocated(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_156,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__geometricPart(V__ROW1,V__ROW2) ) ) ).

fof(kb_SUMO_157,axiom,
    ! [V__CLASS,V__PRED1,V__PRED2] :
      ( ( s__instance(V__PRED2,s__Relation)
        & s__instance(V__PRED1,s__Relation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__subrelation(V__PRED1,V__PRED2)
          & s__instance(V__PRED2,V__CLASS)
          & s__instance(V__CLASS,s__InheritableRelation) )
       => s__instance(V__PRED1,V__CLASS) ) ) ).

fof(kb_SUMO_158,axiom,
    s__instance(s__domain__m,s__TernaryPredicate) ).

fof(kb_SUMO_159,axiom,
    s__domain(s__domain__m,"1",s__Relation) ).

fof(kb_SUMO_160,axiom,
    s__domain(s__domain__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_161,axiom,
    s__domain(s__domain__m,"3",s__SetOrClass) ).

fof(kb_SUMO_162,axiom,
    s__documentation(s__domain__m,s__EnglishLanguage,'Provides a computationally and heuristically convenient mechanism for declaring the argument types of a given relation. The formula (&%domain ?REL ?INT ?CLASS) means that the ?INTth element of each tuple in the relation ?REL must be an instance of ?CLASS. Specifying argument types is very helpful in maintaining ontologies. Representation systems can use these specifications to classify terms and check integrity constraints. If the restriction on the argument type of a &%Relation is not captured by a &%SetOrClass already defined in the ontology, one can specify a &%SetOrClass compositionally with the functions &%UnionFn, &%IntersectionFn, etc.') ).

fof(kb_SUMO_163,axiom,
    ! [V__NUMBER,V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__domain(V__REL,V__NUMBER,V__CLASS1)
          & s__domain(V__REL,V__NUMBER,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_164,axiom,
    s__instance(s__domainSubclass__m,s__TernaryPredicate) ).

fof(kb_SUMO_165,axiom,
    s__domain(s__domainSubclass__m,"1",s__Relation) ).

fof(kb_SUMO_166,axiom,
    s__domain(s__domainSubclass__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_167,axiom,
    s__domain(s__domainSubclass__m,"3",s__SetOrClass) ).

fof(kb_SUMO_168,axiom,
    s__documentation(s__domainSubclass__m,s__EnglishLanguage,'&%Predicate used to specify argument type restrictions of &%Predicates. The formula (&%domainSubclass ?REL ?INT ?CLASS) means that the ?INTth element of each tuple in the relation ?REL must be a subclass of ?CLASS.') ).

fof(kb_SUMO_169,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__domainSubclass(V__REL2,V__NUMBER,V__CLASS1) )
       => s__domainSubclass(V__REL1,V__NUMBER,V__CLASS1) ) ) ).

fof(kb_SUMO_170,axiom,
    ! [V__NUMBER,V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Relation)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( ( s__domainSubclass(V__REL,V__NUMBER,V__CLASS1)
          & s__domainSubclass(V__REL,V__NUMBER,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_171,axiom,
    ! [V__THING2,V__THING1] :
      ( V__THING1 = V__THING2
     => ! [V__ATTR] :
          ( s__instance(V__ATTR,s__Attribute)
         => ( s__property(V__THING1,V__ATTR)
          <=> s__property(V__THING2,V__ATTR) ) ) ) ).

fof(kb_SUMO_172,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( V__ATTR1 = V__ATTR2
     => ! [V__THING] :
          ( ( s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__ATTR2,s__Attribute) )
         => ( s__property(V__THING,V__ATTR1)
          <=> s__property(V__THING,V__ATTR2) ) ) ) ).

fof(kb_SUMO_173,axiom,
    ! [V__THING2,V__THING1] :
      ( V__THING1 = V__THING2
     => ! [V__CLASS] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__THING1,V__CLASS)
          <=> s__instance(V__THING2,V__CLASS) ) ) ) ).

fof(kb_SUMO_174,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( V__CLASS1 = V__CLASS2
     => ! [V__THING] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ( s__instance(V__THING,V__CLASS1)
          <=> s__instance(V__THING,V__CLASS2) ) ) ) ).

fof(kb_SUMO_175,axiom,
    ! [V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_176,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_177,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_178,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_179,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_180,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_181,axiom,
    ! [V__ROW27,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_1(V__ROW11)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_1(V__ROW11),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_182,axiom,
    ! [V__ROW12,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_183,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_184,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_185,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_186,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_187,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_188,axiom,
    ! [V__ROW27,V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_2(V__ROW11,V__ROW12)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_2(V__ROW11,V__ROW12),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_189,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_190,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_191,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_192,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_193,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_194,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_195,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_3(V__ROW11,V__ROW12,V__ROW13)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_196,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_197,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_198,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_199,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_200,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_201,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_202,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_203,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_204,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_205,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_206,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_207,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_208,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_209,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_210,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_211,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_212,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_213,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_214,axiom,
    ! [V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_215,axiom,
    ! [V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_216,axiom,
    ! [V__ROW27,V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_217,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_1(V__ROW21) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_1(V__ROW21),V__NUMBER) ) ) ) ).

fof(kb_SUMO_218,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_2(V__ROW21,V__ROW22) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_2(V__ROW21,V__ROW22),V__NUMBER) ) ) ) ).

fof(kb_SUMO_219,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_3(V__ROW21,V__ROW22,V__ROW23) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_3(V__ROW21,V__ROW22,V__ROW23),V__NUMBER) ) ) ) ).

fof(kb_SUMO_220,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24),V__NUMBER) ) ) ) ).

fof(kb_SUMO_221,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25),V__NUMBER) ) ) ) ).

fof(kb_SUMO_222,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26),V__NUMBER) ) ) ) ).

fof(kb_SUMO_223,axiom,
    ! [V__ROW27,V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__LIST2,V__LIST1,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( V__LIST1 = V__LIST2
     => ( ( V__LIST1 = s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
          & V__LIST2 = s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) )
       => ! [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
           => s__ListOrderFn(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),V__NUMBER) = s__ListOrderFn(s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27),V__NUMBER) ) ) ) ).

fof(kb_SUMO_224,axiom,
    s__instance(s__range__m,s__BinaryPredicate) ).

fof(kb_SUMO_225,axiom,
    s__instance(s__range__m,s__AsymmetricRelation) ).

fof(kb_SUMO_226,axiom,
    s__domain(s__range__m,"1",s__Function) ).

fof(kb_SUMO_227,axiom,
    s__domain(s__range__m,"2",s__SetOrClass) ).

fof(kb_SUMO_228,axiom,
    s__documentation(s__range__m,s__EnglishLanguage,'Gives the range of a function. In other words, (&%range ?FUNCTION ?CLASS) means that all of the values assigned by ?FUNCTION are &%instances of ?CLASS.') ).

fof(kb_SUMO_229,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_2(V__FUNCTION,V__ROW1) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_230,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_3(V__FUNCTION,V__ROW1,V__ROW2) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_231,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_4(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_232,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_5(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_233,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_6(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_234,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__range(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_7(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__VALUE )
       => s__instance(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_235,axiom,
    ! [V__REL2,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__range(V__REL2,V__CLASS1) )
       => s__range(V__REL1,V__CLASS1) ) ) ).

fof(kb_SUMO_236,axiom,
    ! [V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Function)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__range(V__REL,V__CLASS1)
          & s__range(V__REL,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_237,axiom,
    s__instance(s__rangeSubclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_238,axiom,
    s__instance(s__rangeSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_239,axiom,
    s__domain(s__rangeSubclass__m,"1",s__Function) ).

fof(kb_SUMO_240,axiom,
    s__domainSubclass(s__rangeSubclass__m,"2",s__SetOrClass) ).

fof(kb_SUMO_241,axiom,
    s__documentation(s__rangeSubclass__m,s__EnglishLanguage,'(&%rangeSubclass ?FUNCTION ?CLASS) means that all of the values assigned by ?FUNCTION are &%subclasses of ?CLASS.') ).

fof(kb_SUMO_242,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_2(V__FUNCTION,V__ROW1) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_243,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_3(V__FUNCTION,V__ROW1,V__ROW2) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_244,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_4(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_245,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_5(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_246,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_6(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_247,axiom,
    ! [V__VALUE,V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__FUNCTION] :
      ( ( s__instance(V__FUNCTION,s__Function)
        & s__subclass(V__CLASS,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__VALUE,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__FUNCTION,V__CLASS)
          & s__AssignmentFn_7(V__FUNCTION,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__VALUE )
       => s__subclass(V__VALUE,V__CLASS) ) ) ).

fof(kb_SUMO_248,axiom,
    ! [V__REL2,V__CLASS1,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__subrelation(V__REL1,V__REL2)
          & s__rangeSubclass(V__REL2,V__CLASS1) )
       => s__rangeSubclass(V__REL1,V__CLASS1) ) ) ).

fof(kb_SUMO_249,axiom,
    ! [V__CLASS1,V__REL,V__CLASS2] :
      ( ( s__subclass(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__REL,s__Function)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__REL,V__CLASS1)
          & s__rangeSubclass(V__REL,V__CLASS2) )
       => ( s__subclass(V__CLASS1,V__CLASS2)
          | s__subclass(V__CLASS2,V__CLASS1) ) ) ) ).

fof(kb_SUMO_250,axiom,
    s__instance(s__valence__m,s__BinaryPredicate) ).

fof(kb_SUMO_251,axiom,
    s__instance(s__valence__m,s__AsymmetricRelation) ).

fof(kb_SUMO_252,axiom,
    s__instance(s__valence__m,s__SingleValuedRelation) ).

fof(kb_SUMO_253,axiom,
    s__domain(s__valence__m,"1",s__Relation) ).

fof(kb_SUMO_254,axiom,
    s__domain(s__valence__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_255,axiom,
    s__documentation(s__valence__m,s__EnglishLanguage,'Specifies the number of arguments that a relation can take. If a relation does not have a fixed number of arguments, it does not have a valence and it is an instance of &%VariableArityRelation.') ).

fof(kb_SUMO_256,axiom,
    s__instance(s__documentation__m,s__TernaryPredicate) ).

fof(kb_SUMO_257,axiom,
    s__domain(s__documentation__m,"1",s__Entity) ).

fof(kb_SUMO_258,axiom,
    s__domain(s__documentation__m,"2",s__HumanLanguage) ).

fof(kb_SUMO_259,axiom,
    s__domain(s__documentation__m,"3",s__SymbolicString) ).

fof(kb_SUMO_260,axiom,
    s__documentation(s__documentation__m,s__EnglishLanguage,'A relation between objects in the domain of discourse and strings of natural language text stated in a particular &%HumanLanguage. The domain of &%documentation is not constants (names), but the objects themselves. This means that one does not quote the names when associating them with their documentation.') ).

fof(kb_SUMO_261,axiom,
    s__instance(s__format__m,s__TernaryPredicate) ).

fof(kb_SUMO_262,axiom,
    s__domain(s__format__m,"1",s__Language) ).

fof(kb_SUMO_263,axiom,
    s__domain(s__format__m,"2",s__Entity) ).

fof(kb_SUMO_264,axiom,
    s__domain(s__format__m,"3",s__SymbolicString) ).

fof(kb_SUMO_265,axiom,
    s__documentation(s__format__m,s__EnglishLanguage,'A relation that specifies how to present an expression in a natural language format.') ).

fof(kb_SUMO_266,axiom,
    s__instance(s__termFormat__m,s__TernaryPredicate) ).

fof(kb_SUMO_267,axiom,
    s__domain(s__termFormat__m,"1",s__Language) ).

fof(kb_SUMO_268,axiom,
    s__domain(s__termFormat__m,"2",s__Entity) ).

fof(kb_SUMO_269,axiom,
    s__domain(s__termFormat__m,"3",s__SymbolicString) ).

fof(kb_SUMO_270,axiom,
    s__documentation(s__termFormat__m,s__EnglishLanguage,'A relation that specifies how to present a term in a natural language format.') ).

fof(kb_SUMO_271,axiom,
    s__instance(s__disjoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_272,axiom,
    s__instance(s__disjoint__m,s__SymmetricRelation) ).

fof(kb_SUMO_273,axiom,
    s__domain(s__disjoint__m,"1",s__SetOrClass) ).

fof(kb_SUMO_274,axiom,
    s__domain(s__disjoint__m,"2",s__SetOrClass) ).

fof(kb_SUMO_275,axiom,
    s__documentation(s__disjoint__m,s__EnglishLanguage,'&%Classes are &%disjoint only if they share no instances, i.e. just in case the result of applying &%IntersectionFn to them is empty.') ).

fof(kb_SUMO_276,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( s__disjoint(V__CLASS1,V__CLASS2)
    <=> ! [V__INST] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ~ ( s__instance(V__INST,V__CLASS1)
              & s__instance(V__INST,V__CLASS2) ) ) ) ).

fof(kb_SUMO_277,axiom,
    s__instance(s__disjointRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_278,axiom,
    s__instance(s__disjointRelation__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_279,axiom,
    s__domain(s__disjointRelation__m,"1",s__Relation) ).

fof(kb_SUMO_280,axiom,
    s__domain(s__disjointRelation__m,"2",s__Relation) ).

fof(kb_SUMO_281,axiom,
    s__relatedInternalConcept(s__disjointRelation__m,s__disjoint__m) ).

fof(kb_SUMO_282,axiom,
    s__documentation(s__disjointRelation__m,s__EnglishLanguage,'This predicate relates two &%Relations. (&%disjointRelation ?REL1 ?REL2) means that the two relations have no tuples in common.') ).

fof(kb_SUMO_283,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__domain(V__REL1,V__NUMBER,V__CLASS1)
          & s__domain(V__REL2,V__NUMBER,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_284,axiom,
    ! [V__REL2,V__NUMBER,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Relation)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__REL2,s__Relation) )
     => ( ( s__domainSubclass(V__REL1,V__NUMBER,V__CLASS1)
          & s__domainSubclass(V__REL2,V__NUMBER,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_285,axiom,
    ! [V__REL2,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__range(V__REL1,V__CLASS1)
          & s__range(V__REL2,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_286,axiom,
    ! [V__REL2,V__CLASS1,V__CLASS2,V__REL1] :
      ( ( s__instance(V__REL1,s__Function)
        & s__subclass(V__CLASS2,s__SetOrClass)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__subclass(V__CLASS1,s__SetOrClass)
        & s__instance(V__CLASS1,s__SetOrClass)
        & s__instance(V__REL2,s__Function) )
     => ( ( s__rangeSubclass(V__REL1,V__CLASS1)
          & s__rangeSubclass(V__REL2,V__CLASS2)
          & s__disjoint(V__CLASS1,V__CLASS2) )
       => s__disjointRelation(V__REL1,V__REL2) ) ) ).

fof(kb_SUMO_287,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__resource__m != s__result__m
          & s__resource(V__ROW21,V__ROW22) )
       => ~ s__result(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_288,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__subsumedExternalConcept__m != s__subsumingExternalConcept__m
          & s__subsumedExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumingExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_289,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__crosses__m != s__connected__m
          & s__crosses(V__ROW21,V__ROW22) )
       => ~ s__connected(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_290,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__synonymousExternalConcept__m != s__subsumingExternalConcept__m
          & s__synonymousExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumingExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_291,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__increasesLikelihood__m != s__independentProbability__m
          & s__increasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__independentProbability(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_292,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__Language)
        & s__instance(V__ROW21,s__SymbolicString) )
     => ( ( s__synonymousExternalConcept__m != s__subsumedExternalConcept__m
          & s__synonymousExternalConcept(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__subsumedExternalConcept(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_293,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__resource__m != s__instrument__m
          & s__resource(V__ROW21,V__ROW22) )
       => ~ s__instrument(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_294,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__decreasesLikelihood__m != s__independentProbability__m
          & s__decreasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__independentProbability(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_295,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Attribute) )
     => ( ( s__manner__m != s__attribute__m
          & s__manner(V__ROW21,V__ROW22) )
       => ~ s__attribute(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_296,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Process)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__result__m != s__instrument__m
          & s__result(V__ROW21,V__ROW22) )
       => ~ s__instrument(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_297,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Attribute)
        & s__instance(V__ROW22,s__Attribute) )
     => ( ( s__subAttribute__m != s__successorAttribute__m
          & s__subAttribute(V__ROW21,V__ROW22) )
       => ~ s__successorAttribute(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_298,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Formula)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__increasesLikelihood__m != s__decreasesLikelihood__m
          & s__increasesLikelihood(V__ROW21,V__ROW22) )
       => ~ s__decreasesLikelihood(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_299,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Object)
        & s__instance(V__ROW22,s__Object) )
     => ( ( s__meetsSpatially__m != s__overlapsSpatially__m
          & s__meetsSpatially(V__ROW21,V__ROW22) )
       => ~ s__overlapsSpatially(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_300,axiom,
    ! [V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__instance(V__ROW23,s__ObjectiveNorm)
        & s__instance(V__ROW22,s__Formula) )
     => ( ( s__deprivesNorm__m != s__confersNorm__m
          & s__deprivesNorm(V__ROW21,V__ROW22,V__ROW23) )
       => ~ s__confersNorm(V__ROW21,V__ROW22,V__ROW23) ) ) ).

fof(kb_SUMO_301,axiom,
    ! [V__ROW22,V__ROW21] :
      ( ( s__instance(V__ROW21,s__Human)
        & s__instance(V__ROW22,s__TemporaryResidence)
        & s__instance(V__ROW22,s__PermanentResidence) )
     => ( ( s__stays__m != s__home__m
          & s__stays(V__ROW21,V__ROW22) )
       => ~ s__home(V__ROW21,V__ROW22) ) ) ).

fof(kb_SUMO_302,axiom,
    s__instance(s__contraryAttribute__m,s__Predicate) ).

fof(kb_SUMO_303,axiom,
    s__instance(s__Predicate__t,s__SetOrClass) ).

fof(kb_SUMO_304,axiom,
    s__instance(s__contraryAttribute__m,s__VariableArityRelation) ).

fof(kb_SUMO_305,axiom,
    s__instance(s__VariableArityRelation__t,s__SetOrClass) ).

fof(kb_SUMO_306,axiom,
    s__documentation(s__contraryAttribute__m,s__EnglishLanguage,'A &%contraryAttribute is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ).

fof(kb_SUMO_307,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__contraryAttribute_1(V__ROW1)
     => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_308,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__contraryAttribute_2(V__ROW1,V__ROW2)
     => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_309,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
     => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_310,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_311,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_312,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_313,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
       => s__instance(V__ELEMENT,s__Attribute) ) ) ).

fof(kb_SUMO_314,axiom,
    ! [V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_315,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_316,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_317,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_318,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_319,axiom,
    ! [V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_320,axiom,
    ! [V__ROW27,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_1(V__ROW11)
        & s__identicalListItems(s__ListFn_1(V__ROW11),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_321,axiom,
    ! [V__ROW12,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_322,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_323,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_324,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_325,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_326,axiom,
    ! [V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_327,axiom,
    ! [V__ROW27,V__ROW12,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_2(V__ROW11,V__ROW12)
        & s__identicalListItems(s__ListFn_2(V__ROW11,V__ROW12),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_328,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_329,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_330,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_331,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_332,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_333,axiom,
    ! [V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_334,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_3(V__ROW11,V__ROW12,V__ROW13)
        & s__identicalListItems(s__ListFn_3(V__ROW11,V__ROW12,V__ROW13),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_335,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_336,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_337,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_338,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_339,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_340,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_341,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14)
        & s__identicalListItems(s__ListFn_4(V__ROW11,V__ROW12,V__ROW13,V__ROW14),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_342,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_343,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_344,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_345,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_346,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_347,axiom,
    ! [V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_348,axiom,
    ! [V__ROW27,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15)
        & s__identicalListItems(s__ListFn_5(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_349,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_350,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_351,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_352,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_353,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_354,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_355,axiom,
    ! [V__ROW27,V__ROW16,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16)
        & s__identicalListItems(s__ListFn_6(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_356,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW21] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_1(V__ROW21)) )
     => s__contraryAttribute_1(V__ROW21) ) ).

fof(kb_SUMO_357,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_2(V__ROW21,V__ROW22)) )
     => s__contraryAttribute_2(V__ROW21,V__ROW22) ) ).

fof(kb_SUMO_358,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_3(V__ROW21,V__ROW22,V__ROW23)) )
     => s__contraryAttribute_3(V__ROW21,V__ROW22,V__ROW23) ) ).

fof(kb_SUMO_359,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24)) )
     => s__contraryAttribute_4(V__ROW21,V__ROW22,V__ROW23,V__ROW24) ) ).

fof(kb_SUMO_360,axiom,
    ! [V__ROW12,V__ROW13,V__ROW16,V__ROW14,V__ROW17,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25)) )
     => s__contraryAttribute_5(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25) ) ).

fof(kb_SUMO_361,axiom,
    ! [V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26)) )
     => s__contraryAttribute_6(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26) ) ).

fof(kb_SUMO_362,axiom,
    ! [V__ROW27,V__ROW16,V__ROW17,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW11,V__ROW22,V__ROW21,V__ROW26,V__ROW25,V__ROW24,V__ROW23] :
      ( ( s__contraryAttribute_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17)
        & s__identicalListItems(s__ListFn_7(V__ROW11,V__ROW12,V__ROW13,V__ROW14,V__ROW15,V__ROW16,V__ROW17),s__ListFn_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27)) )
     => s__contraryAttribute_7(V__ROW21,V__ROW22,V__ROW23,V__ROW24,V__ROW25,V__ROW26,V__ROW27) ) ).

fof(kb_SUMO_363,axiom,
    ! [V__OBJ,V__ROW1,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_1(V__ROW1)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_364,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_2(V__ROW1,V__ROW2)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_365,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_366,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_367,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_368,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__NUMBER2,V__NUMBER1] :
      ( s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_369,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__NUMBER2,V__ROW7,V__NUMBER1] :
      ( s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ATTR1,V__ATTR2] :
          ( ( s__instance(V__ATTR2,s__Attribute)
            & s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__NUMBER2,s__PositiveInteger) )
         => ( ( V__ATTR1 = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER1)
              & V__ATTR2 = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER2)
              & V__NUMBER1 != V__NUMBER2 )
           => ( s__property(V__OBJ,V__ATTR1)
             => ~ s__property(V__OBJ,V__ATTR2) ) ) ) ) ).

fof(kb_SUMO_370,axiom,
    s__instance(s__exhaustiveAttribute__m,s__Predicate) ).

fof(kb_SUMO_371,axiom,
    s__instance(s__exhaustiveAttribute__m,s__VariableArityRelation) ).

fof(kb_SUMO_372,axiom,
    s__domainSubclass(s__exhaustiveAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_373,axiom,
    s__documentation(s__exhaustiveAttribute__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ).

fof(kb_SUMO_374,axiom,
    ! [V__ROW1,V__CLASS,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__CLASS,V__ROW1)
       => ( s__inList(V__ATTR,s__ListFn_1(V__ROW1))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_375,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__CLASS,V__ROW1,V__ROW2)
       => ( s__inList(V__ATTR,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_376,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ATTR,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_377,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ATTR,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_378,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ATTR,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_379,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5,V__ROW6] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ATTR,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_380,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ATTR,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( ( s__subclass(V__CLASS,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ATTR,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ATTR,s__Attribute) ) ) ) ).

fof(kb_SUMO_381,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__exhaustiveAttribute_2(V__CLASS,V__ROW1)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_1(V__ROW1))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_382,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__exhaustiveAttribute_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_2(V__ROW1,V__ROW2))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_383,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__exhaustiveAttribute_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_384,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__exhaustiveAttribute_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_385,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__exhaustiveAttribute_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_386,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__exhaustiveAttribute_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_387,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__exhaustiveAttribute_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ATTR1] :
          ( ( s__subclass(V__CLASS,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__ATTR1,V__CLASS)
           => ? [V__ATTR2] :
                ( s__inList(V__ATTR2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                & V__ATTR1 = V__ATTR2 ) ) ) ) ).

fof(kb_SUMO_388,axiom,
    ! [V__ROW1,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__ATTRCLASS,V__ROW1)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_389,axiom,
    ! [V__ROW1,V__ROW2,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__ATTRCLASS,V__ROW1,V__ROW2)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_390,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_391,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_392,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_393,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_394,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ATTRCLASS] :
      ( ( s__subclass(V__ATTRCLASS,s__Attribute)
        & s__instance(V__ATTRCLASS,s__SetOrClass) )
     => ( s__exhaustiveAttribute_8(V__ATTRCLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ~ ? [V__EL] :
              ( s__instance(V__EL,V__ATTRCLASS)
              & ~ ? [V__ATTR,V__NUMBER] :
                    ( s__instance(V__NUMBER,s__PositiveInteger)
                    & V__EL = V__ATTR
                    & V__ATTR = s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_395,axiom,
    s__instance(s__exhaustiveDecomposition__m,s__Predicate) ).

fof(kb_SUMO_396,axiom,
    s__instance(s__exhaustiveDecomposition__m,s__VariableArityRelation) ).

fof(kb_SUMO_397,axiom,
    s__domain(s__exhaustiveDecomposition__m,"1",s__Class) ).

fof(kb_SUMO_398,axiom,
    s__relatedInternalConcept(s__exhaustiveDecomposition__m,s__partition__m) ).

fof(kb_SUMO_399,axiom,
    s__documentation(s__exhaustiveDecomposition__m,s__EnglishLanguage,'An &%exhaustiveDecomposition of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ).

fof(kb_SUMO_400,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_1(V__ROW1)
       => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_401,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
       => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_402,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_403,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_404,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_405,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_406,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_407,axiom,
    s__instance(s__disjointDecomposition__m,s__Predicate) ).

fof(kb_SUMO_408,axiom,
    s__instance(s__disjointDecomposition__m,s__VariableArityRelation) ).

fof(kb_SUMO_409,axiom,
    s__domain(s__disjointDecomposition__m,"1",s__Class) ).

fof(kb_SUMO_410,axiom,
    s__relatedInternalConcept(s__disjointDecomposition__m,s__exhaustiveDecomposition__m) ).

fof(kb_SUMO_411,axiom,
    s__relatedInternalConcept(s__disjointDecomposition__m,s__disjoint__m) ).

fof(kb_SUMO_412,axiom,
    s__documentation(s__disjointDecomposition__m,s__EnglishLanguage,'A &%disjointDecomposition of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ).

fof(kb_SUMO_413,axiom,
    ! [V__ROW1,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_1(V__ROW1)
       => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_414,axiom,
    ! [V__ROW1,V__ROW2,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_2(V__ROW1,V__ROW2)
       => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_415,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_416,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_417,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_418,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_419,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ELEMENT] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
         => s__instance(V__ELEMENT,s__Class) ) ) ) ).

fof(kb_SUMO_420,axiom,
    s__instance(s__partition__m,s__Predicate) ).

fof(kb_SUMO_421,axiom,
    s__instance(s__partition__m,s__VariableArityRelation) ).

fof(kb_SUMO_422,axiom,
    s__domain(s__partition__m,"1",s__Class) ).

fof(kb_SUMO_423,axiom,
    s__documentation(s__partition__m,s__EnglishLanguage,'A &%partition of a class C is a set of mutually &%disjoint classes (a subclass partition) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition.') ).

fof(kb_SUMO_424,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_1(V__ROW1)
      <=> ( s__exhaustiveDecomposition_1(V__ROW1)
          & s__disjointDecomposition_1(V__ROW1) ) ) ) ).

fof(kb_SUMO_425,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_2(V__ROW1,V__ROW2)
      <=> ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
          & s__disjointDecomposition_2(V__ROW1,V__ROW2) ) ) ) ).

fof(kb_SUMO_426,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_3(V__ROW1,V__ROW2,V__ROW3)
      <=> ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
          & s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3) ) ) ) ).

fof(kb_SUMO_427,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
      <=> ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
          & s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) ) ) ) ).

fof(kb_SUMO_428,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
      <=> ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
          & s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) ) ) ) ).

fof(kb_SUMO_429,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
      <=> ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
          & s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) ) ) ) ).

fof(kb_SUMO_430,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
      <=> ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
          & s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) ) ) ) ).

fof(kb_SUMO_431,axiom,
    s__instance(s__relatedInternalConcept__m,s__BinaryPredicate) ).

fof(kb_SUMO_432,axiom,
    s__instance(s__relatedInternalConcept__m,s__EquivalenceRelation) ).

fof(kb_SUMO_433,axiom,
    s__domain(s__relatedInternalConcept__m,"1",s__Entity) ).

fof(kb_SUMO_434,axiom,
    s__domain(s__relatedInternalConcept__m,"2",s__Entity) ).

fof(kb_SUMO_435,axiom,
    s__documentation(s__relatedInternalConcept__m,s__EnglishLanguage,'Means that the two arguments are related concepts within the SUMO, i.e. there is a significant similarity of meaning between them. To indicate a meaning relation between a SUMO concept and a concept from another source, use the Predicate &%relatedExternalConcept.') ).

fof(kb_SUMO_436,axiom,
    s__instance(s__relatedExternalConcept__m,s__TernaryPredicate) ).

fof(kb_SUMO_437,axiom,
    s__domain(s__relatedExternalConcept__m,"1",s__SymbolicString) ).

fof(kb_SUMO_438,axiom,
    s__domain(s__relatedExternalConcept__m,"2",s__Entity) ).

fof(kb_SUMO_439,axiom,
    s__domain(s__relatedExternalConcept__m,"3",s__Language) ).

fof(kb_SUMO_440,axiom,
    s__relatedInternalConcept(s__relatedExternalConcept__m,s__relatedInternalConcept__m) ).

fof(kb_SUMO_441,axiom,
    s__documentation(s__relatedExternalConcept__m,s__EnglishLanguage,'Used to signify a three-place relation between a concept in an external knowledge source, a concept in the SUMO, and the name of the other knowledge source.') ).

fof(kb_SUMO_442,axiom,
    s__subrelation(s__synonymousExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_443,axiom,
    s__disjointRelation(s__synonymousExternalConcept__m,s__subsumedExternalConcept__m) ).

fof(kb_SUMO_444,axiom,
    s__disjointRelation(s__synonymousExternalConcept__m,s__subsumingExternalConcept__m) ).

fof(kb_SUMO_445,axiom,
    s__disjointRelation(s__subsumedExternalConcept__m,s__subsumingExternalConcept__m) ).

fof(kb_SUMO_446,axiom,
    s__documentation(s__synonymousExternalConcept__m,s__EnglishLanguage,'(&%synonymousExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING has the same meaning as ?STRING in ?LANGUAGE.') ).

fof(kb_SUMO_447,axiom,
    s__subrelation(s__subsumingExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_448,axiom,
    s__documentation(s__subsumingExternalConcept__m,s__EnglishLanguage,'(&%subsumingExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING subsumes the meaning of ?STRING in ?LANGUAGE, i.e. the concept ?THING is broader in meaning than ?STRING.') ).

fof(kb_SUMO_449,axiom,
    s__subrelation(s__subsumedExternalConcept__m,s__relatedExternalConcept__m) ).

fof(kb_SUMO_450,axiom,
    s__documentation(s__subsumedExternalConcept__m,s__EnglishLanguage,'(&%subsumedExternalConcept ?STRING ?THING ?LANGUAGE) means that the SUMO concept ?THING is subsumed by the meaning of ?STRING in ?LANGUAGE, i.e. the concept ?THING is narrower in meaning than ?STRING.') ).

fof(kb_SUMO_451,axiom,
    s__instance(s__externalImage__m,s__BinaryPredicate) ).

fof(kb_SUMO_452,axiom,
    s__documentation(s__externalImage__m,s__EnglishLanguage,'A link between an Entity and a URL that represents or exemplifies the term in some way.') ).

fof(kb_SUMO_453,axiom,
    s__domain(s__externalImage__m,"1",s__Entity) ).

fof(kb_SUMO_454,axiom,
    s__domain(s__externalImage__m,"2",s__SymbolicString) ).

fof(kb_SUMO_455,axiom,
    s__instance(s__subAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_456,axiom,
    s__instance(s__subAttribute__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_457,axiom,
    s__domain(s__subAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_458,axiom,
    s__domain(s__subAttribute__m,"2",s__Attribute) ).

fof(kb_SUMO_459,axiom,
    s__disjointRelation(s__subAttribute__m,s__successorAttribute__m) ).

fof(kb_SUMO_460,axiom,
    s__documentation(s__subAttribute__m,s__EnglishLanguage,'Means that the second argument can be ascribed to everything which has the first argument ascribed to it.') ).

fof(kb_SUMO_461,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( s__subAttribute(V__ATTR1,V__ATTR2)
     => ! [V__OBJ] :
          ( ( s__instance(V__ATTR1,s__Attribute)
            & s__instance(V__ATTR2,s__Attribute) )
         => ( s__property(V__OBJ,V__ATTR1)
           => s__property(V__OBJ,V__ATTR2) ) ) ) ).

fof(kb_SUMO_462,axiom,
    ! [V__CLASS,V__ATTR2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__Attribute)
        & s__instance(V__ATTR2,s__Attribute)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__subAttribute(V__ATTR1,V__ATTR2)
          & s__instance(V__ATTR2,V__CLASS) )
       => s__instance(V__ATTR1,V__CLASS) ) ) ).

fof(kb_SUMO_463,axiom,
    s__instance(s__successorAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_464,axiom,
    s__instance(s__successorAttribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_465,axiom,
    s__domain(s__successorAttribute__m,"1",s__Attribute) ).

fof(kb_SUMO_466,axiom,
    s__domain(s__successorAttribute__m,"2",s__Attribute) ).

fof(kb_SUMO_467,axiom,
    s__documentation(s__successorAttribute__m,s__EnglishLanguage,'(&%successorAttribute ?ATTR1 ?ATTR2) means that ?ATTR2 is the &%Attribute that comes immediately after ?ATTR1 on the scale that they share.') ).

%FOL fof(kb_SUMO_468,axiom,(( (! [V__ATTR2,V__ENTITY,V__TIME1,V__ATTR1] : ((s__instance(V__ATTR1,s__Attribute) & s__instance(V__TIME1,s__TimePosition) & s__instance(V__ATTR2,s__Attribute)) => ((s__successorAttribute(V__ATTR1,V__ATTR2) & s__holdsDuring(V__TIME1,'s__property(V__ENTITY,V__ATTR2)')) => (? [V__TIME2] : (s__instance(V__TIME2,s__TimePosition) & s__temporalPart(V__TIME2,s__PastFn(V__TIME1)) & s__holdsDuring(V__TIME2,'s__property(V__ENTITY,V__ATTR1)')))))) ))).

fof(kb_SUMO_469,axiom,
    s__instance(s__successorAttributeClosure__m,s__BinaryPredicate) ).

fof(kb_SUMO_470,axiom,
    s__instance(s__successorAttributeClosure__m,s__TransitiveRelation) ).

fof(kb_SUMO_471,axiom,
    s__instance(s__successorAttributeClosure__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_472,axiom,
    s__domain(s__successorAttributeClosure__m,"1",s__Attribute) ).

fof(kb_SUMO_473,axiom,
    s__domain(s__successorAttributeClosure__m,"2",s__Attribute) ).

fof(kb_SUMO_474,axiom,
    s__relatedInternalConcept(s__successorAttributeClosure__m,s__successorAttribute__m) ).

fof(kb_SUMO_475,axiom,
    s__documentation(s__successorAttributeClosure__m,s__EnglishLanguage,'The transitive closure of &%successorAttribute. (&%successorAttributeClosure ?ATTR1 ?ATTR2) means that there is a chain of &%successorAttribute assertions connecting ?ATTR1 and ?ATTR2.') ).

fof(kb_SUMO_476,axiom,
    ! [V__ATTR2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__Attribute)
        & s__instance(V__ATTR2,s__Attribute) )
     => ( s__successorAttribute(V__ATTR1,V__ATTR2)
       => s__successorAttributeClosure(V__ATTR1,V__ATTR2) ) ) ).

fof(kb_SUMO_477,axiom,
    s__instance(s__greaterThanByQuality__m,s__TernaryPredicate) ).

fof(kb_SUMO_478,axiom,
    s__documentation(s__greaterThanByQuality__m,s__EnglishLanguage,'(greaterThanByQuality ?ENTITY1 ?ENTITY2 ?ATT) means that ?ENTITY1 has more of the given quality ?ATT than ?ENTITY2)') ).

fof(kb_SUMO_479,axiom,
    s__domain(s__greaterThanByQuality__m,"1",s__Entity) ).

fof(kb_SUMO_480,axiom,
    s__domain(s__greaterThanByQuality__m,"2",s__Entity) ).

fof(kb_SUMO_481,axiom,
    s__domain(s__greaterThanByQuality__m,"3",s__Attribute) ).

fof(kb_SUMO_482,axiom,
    ! [V__E3,V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
          & s__greaterThanByQuality(V__E2,V__E3,V__ATT) )
       => s__greaterThanByQuality(V__E1,V__E3,V__ATT) ) ) ).

fof(kb_SUMO_483,axiom,
    ! [V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
       => ~ s__greaterThanByQuality(V__E2,V__E1,V__ATT) ) ) ).

fof(kb_SUMO_484,axiom,
    ! [V__E2,V__ATT,V__E1] :
      ( s__instance(V__ATT,s__Attribute)
     => ( s__greaterThanByQuality(V__E1,V__E2,V__ATT)
       => V__E2 != V__E1 ) ) ).

fof(kb_SUMO_485,axiom,
    s__instance(s__entails__m,s__BinaryPredicate) ).

fof(kb_SUMO_486,axiom,
    s__domain(s__entails__m,"1",s__Formula) ).

fof(kb_SUMO_487,axiom,
    s__domain(s__entails__m,"2",s__Formula) ).

fof(kb_SUMO_488,axiom,
    s__documentation(s__entails__m,s__EnglishLanguage,'The operator of logical entailment. (&%entails ?FORMULA1 ?FORMULA2) means that ?FORMULA2 can be derived from ?FORMULA1 by means of the proof theory of SUO-KIF.') ).

fof(kb_SUMO_489,axiom,
    s__instance(s__AssignmentFn__m,s__Function) ).

fof(kb_SUMO_490,axiom,
    s__instance(s__Function__t,s__SetOrClass) ).

fof(kb_SUMO_491,axiom,
    s__instance(s__AssignmentFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_492,axiom,
    s__domain(s__AssignmentFn__m,"1",s__Function) ).

fof(kb_SUMO_493,axiom,
    s__range(s__AssignmentFn__m,s__Entity) ).

fof(kb_SUMO_494,axiom,
    s__documentation(s__AssignmentFn__m,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ).

fof(kb_SUMO_495,axiom,
    s__instance(s__PowerSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_496,axiom,
    s__instance(s__PowerSetFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_497,axiom,
    s__domain(s__PowerSetFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_498,axiom,
    s__rangeSubclass(s__PowerSetFn__m,s__SetOrClass) ).

fof(kb_SUMO_499,axiom,
    s__documentation(s__PowerSetFn__m,s__EnglishLanguage,'(&%PowerSetFn ?CLASS) maps the &%SetOrClass ?CLASS to the &%SetOrClass of all &%subclasses of ?CLASS.') ).

fof(kb_SUMO_500,axiom,
    s__partition_3(s__Entity,s__Physical,s__Abstract) ).

fof(kb_SUMO_501,axiom,
    s__documentation(s__Entity,s__EnglishLanguage,'The universal class of individuals. This is the root node of the ontology.') ).

fof(kb_SUMO_502,axiom,
    ! [V__THING] : s__instance(V__THING,s__Entity) ).

fof(kb_SUMO_503,axiom,
    ? [V__THING] : s__instance(V__THING,s__Entity) ).

fof(kb_SUMO_504,axiom,
    ! [V__CLASS] :
      ( s__instance(V__CLASS,s__SetOrClass)
     => ( s__instance(V__CLASS,s__Class)
      <=> s__subclass(V__CLASS,s__Entity) ) ) ).

fof(kb_SUMO_505,axiom,
    s__subclass(s__Physical,s__Entity) ).

fof(kb_SUMO_506,axiom,
    s__instance(s__Physical__t,s__SetOrClass) ).

fof(kb_SUMO_507,axiom,
    s__partition_3(s__Physical,s__Object,s__Process) ).

fof(kb_SUMO_508,axiom,
    s__documentation(s__Physical,s__EnglishLanguage,'An entity that has a location in space-time. Note that locations are themselves understood to have a location in space-time.') ).

fof(kb_SUMO_509,axiom,
    ! [V__PHYS] :
      ( s__instance(V__PHYS,s__Physical)
    <=> ? [V__LOC,V__TIME] :
          ( s__instance(V__TIME,s__TimePosition)
          & s__instance(V__LOC,s__Object)
          & s__located(V__PHYS,V__LOC)
          & s__time(V__PHYS,V__TIME) ) ) ).

fof(kb_SUMO_510,axiom,
    s__subclass(s__Object,s__Physical) ).

fof(kb_SUMO_511,axiom,
    s__documentation(s__Object,s__EnglishLanguage,'Corresponds roughly to the class of ordinary objects. Examples include normal physical objects, geographical regions, and locations of &%Processes, the complement of &%Objects in the &%Physical class. In a 4D ontology, an &%Object is something whose spatiotemporal extent is thought of as dividing into spatial parts roughly parallel to the time-axis.') ).

fof(kb_SUMO_512,axiom,
    s__subclass(s__SelfConnectedObject,s__Object) ).

fof(kb_SUMO_513,axiom,
    s__instance(s__SelfConnectedObject__t,s__SetOrClass) ).

fof(kb_SUMO_514,axiom,
    s__documentation(s__SelfConnectedObject,s__EnglishLanguage,'A &%SelfConnectedObject is any &%Object that does not consist of two or more disconnected parts.') ).

fof(kb_SUMO_515,axiom,
    s__subclass(s__OrganicThing,s__SelfConnectedObject) ).

fof(kb_SUMO_516,axiom,
    s__documentation(s__OrganicThing,s__EnglishLanguage,'A &%SelfConnectedObject that is produced by a non-intentional process from an &%Organism. Note that this refers only to the primary cause. That is, a &%PlantAgriculturalProduct is firstly produced by a &%Plant, and only secondarily by a &%Human that is tending the plant.') ).

fof(kb_SUMO_517,axiom,
    s__instance(s__FrontFn__m,s__SpatialRelation) ).

fof(kb_SUMO_518,axiom,
    s__instance(s__SpatialRelation__t,s__SetOrClass) ).

fof(kb_SUMO_519,axiom,
    s__instance(s__FrontFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_520,axiom,
    s__instance(s__FrontFn__m,s__UnaryFunction) ).

fof(kb_SUMO_521,axiom,
    s__instance(s__FrontFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_522,axiom,
    s__instance(s__FrontFn__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_523,axiom,
    s__domain(s__FrontFn__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_524,axiom,
    s__range(s__FrontFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_525,axiom,
    s__documentation(s__FrontFn__m,s__EnglishLanguage,'A &%Function that maps an &%Object to the side that generally receives the most attention or that typically faces the direction in which the &%Object moves. Note that this is a partial function, since some &%Objects do not have sides, e.g. apples and spheres. Note too that the &%range of this &%Function is indefinite in much the way that &%ImmediateFutureFn and &%ImmediatePastFn are indefinite. Although this indefiniteness is undesirable from a theoretical standpoint, it does not have significant practical implications, since there is widespread intersubjective agreement about the most common cases.') ).

fof(kb_SUMO_526,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
     => s__side(s__FrontFn(V__OBJ),V__OBJ) ) ).

fof(kb_SUMO_527,axiom,
    s__instance(s__BackFn__m,s__SpatialRelation) ).

fof(kb_SUMO_528,axiom,
    s__instance(s__BackFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_529,axiom,
    s__instance(s__PartialValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_530,axiom,
    s__instance(s__BackFn__m,s__UnaryFunction) ).

fof(kb_SUMO_531,axiom,
    s__instance(s__BackFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_532,axiom,
    s__instance(s__BackFn__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_533,axiom,
    s__domain(s__BackFn__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_534,axiom,
    s__range(s__BackFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_535,axiom,
    s__documentation(s__BackFn__m,s__EnglishLanguage,'A &%Function that maps an &%Object to the side that is opposite the &%FrontFn of the &%Object. Note that this is a partial function, since some &%Objects do not have sides, e.g. apples and spheres. Note too that the &%range of this &%Function is indefinite in much the way that &%ImmediateFutureFn and &%ImmediatePastFn are indefinite. Although this indefiniteness is undesirable from a theoretical standpoint, it does not have significant practical implications, since there is widespread intersubjective agreement about the most common cases.') ).

fof(kb_SUMO_536,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
     => s__side(s__BackFn(V__OBJ),V__OBJ) ) ).

fof(kb_SUMO_537,axiom,
    s__instance(s__part__m,s__SpatialRelation) ).

fof(kb_SUMO_538,axiom,
    s__instance(s__part__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_539,axiom,
    s__domain(s__part__m,"1",s__Object) ).

fof(kb_SUMO_540,axiom,
    s__domain(s__part__m,"2",s__Object) ).

fof(kb_SUMO_541,axiom,
    s__documentation(s__part__m,s__EnglishLanguage,'The basic mereological relation. All other mereological relations are defined in terms of this one. (&%part ?PART ?WHOLE) simply means that the &%Object ?PART is part of the &%Object ?WHOLE. Note that, since &%part is a &%ReflexiveRelation, every &%Object is a part of itself.') ).

fof(kb_SUMO_542,axiom,
    s__instance(s__properPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_543,axiom,
    s__instance(s__properPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_544,axiom,
    s__subrelation(s__properPart__m,s__part__m) ).

fof(kb_SUMO_545,axiom,
    s__documentation(s__properPart__m,s__EnglishLanguage,'(&%properPart ?OBJ1 ?OBJ2) means that ?OBJ1 is a part of ?OBJ2 other than ?OBJ2 itself. This is a &%TransitiveRelation and &%AsymmetricRelation (hence an &%IrreflexiveRelation).') ).

fof(kb_SUMO_546,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__properPart(V__OBJ1,V__OBJ2)
      <=> ( s__part(V__OBJ1,V__OBJ2)
          & ~ s__part(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_547,axiom,
    s__subrelation(s__piece__m,s__part__m) ).

fof(kb_SUMO_548,axiom,
    s__domain(s__piece__m,"1",s__Substance) ).

fof(kb_SUMO_549,axiom,
    s__domain(s__piece__m,"2",s__Substance) ).

fof(kb_SUMO_550,axiom,
    s__documentation(s__piece__m,s__EnglishLanguage,'A specialized common sense notion of part for arbitrary parts of &%Substances. Quasi-synonyms are: chunk, hunk, bit, etc. Compare &%component, another subrelation of &%part.') ).

fof(kb_SUMO_551,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2] :
      ( s__piece(V__SUBSTANCE1,V__SUBSTANCE2)
     => ! [V__CLASS] :
          ( ( s__instance(V__CLASS,s__SetOrClass)
            & s__instance(V__SUBSTANCE2,s__Substance)
            & s__instance(V__SUBSTANCE1,s__Substance) )
         => ( s__instance(V__SUBSTANCE1,V__CLASS)
           => s__instance(V__SUBSTANCE2,V__CLASS) ) ) ) ).

fof(kb_SUMO_552,axiom,
    s__subrelation(s__component__m,s__part__m) ).

fof(kb_SUMO_553,axiom,
    s__domain(s__component__m,"1",s__CorpuscularObject) ).

fof(kb_SUMO_554,axiom,
    s__domain(s__component__m,"2",s__CorpuscularObject) ).

fof(kb_SUMO_555,axiom,
    s__documentation(s__component__m,s__EnglishLanguage,'A specialized common sense notion of part for heterogeneous parts of complexes. (&%component ?COMPONENT ?WHOLE) means that ?COMPONENT is a component of ?WHOLE. Examples of component include the doors and walls of a house, the states or provinces of a country, or the limbs and organs of an animal. Compare &%piece, which is also a subrelation of &%part.') ).

fof(kb_SUMO_556,axiom,
    s__instance(s__material__m,s__BinaryPredicate) ).

fof(kb_SUMO_557,axiom,
    s__domainSubclass(s__material__m,"1",s__Substance) ).

fof(kb_SUMO_558,axiom,
    s__domain(s__material__m,"2",s__CorpuscularObject) ).

fof(kb_SUMO_559,axiom,
    s__documentation(s__material__m,s__EnglishLanguage,'(&%material ?SUBSTANCE ?OBJECT) means that ?OBJECT is structurally made up in part of ?SUBSTANCE. This relation encompasses the concepts of composed of, made of, and formed of. For example, plastic is a &%material of my computer monitor. Compare &%part and its subrelations, viz &%component and &%piece.') ).

fof(kb_SUMO_560,axiom,
    s__subrelation(s__contains__m,s__partlyLocated__m) ).

fof(kb_SUMO_561,axiom,
    s__instance(s__contains__m,s__SpatialRelation) ).

fof(kb_SUMO_562,axiom,
    s__instance(s__contains__m,s__AsymmetricRelation) ).

fof(kb_SUMO_563,axiom,
    s__disjointRelation(s__contains__m,s__part__m) ).

fof(kb_SUMO_564,axiom,
    s__domain(s__contains__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_565,axiom,
    s__domain(s__contains__m,"2",s__Object) ).

fof(kb_SUMO_566,axiom,
    s__documentation(s__contains__m,s__EnglishLanguage,'The relation of spatial containment for two separable objects. When the two objects are not separable (e.g. an automobile and one of its seats), the relation of &%part should be used. (&%contains ?OBJ1 ?OBJ2) means that the &%SelfConnectedObject ?OBJ1 has a space (i.e. a &%Hole) which is at least partially filled by ?OBJ2.') ).

fof(kb_SUMO_567,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__contains(V__OBJ1,V__OBJ2)
      <=> ? [V__HOLE] :
            ( s__instance(V__HOLE,s__Hole)
            & s__hole(V__HOLE,V__OBJ1)
            & s__properlyFills(V__OBJ2,V__HOLE) ) ) ) ).

fof(kb_SUMO_568,axiom,
    s__subclass(s__Substance,s__SelfConnectedObject) ).

fof(kb_SUMO_569,axiom,
    s__partition_3(s__Substance,s__PureSubstance,s__Mixture) ).

fof(kb_SUMO_570,axiom,
    s__partition_3(s__Substance,s__SyntheticSubstance,s__NaturalSubstance) ).

fof(kb_SUMO_571,axiom,
    s__documentation(s__Substance,s__EnglishLanguage,'An &%Object in which every part is similar to every other in every relevant respect. More precisely, something is a &%Substance when it has only arbitrary pieces as parts - any parts have properties which are similar to those of the whole. Note that a &%Substance may nonetheless have physical properties that vary. For example, the temperature, chemical constitution, density, etc. may change from one part to another. An example would be a body of water.') ).

fof(kb_SUMO_572,axiom,
    ! [V__OBJECT,V__OBJECTTYPE,V__PART] :
      ( ( s__instance(V__PART,s__Object)
        & s__instance(V__OBJECTTYPE,s__SetOrClass)
        & s__instance(V__OBJECT,s__Object) )
     => ( ( s__subclass(V__OBJECTTYPE,s__Substance)
          & s__instance(V__OBJECT,V__OBJECTTYPE)
          & s__part(V__PART,V__OBJECT) )
       => s__instance(V__PART,V__OBJECTTYPE) ) ) ).

fof(kb_SUMO_573,axiom,
    ! [V__OBJ,V__PART,V__ATTR] :
      ( ( s__instance(V__ATTR,s__Attribute)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__OBJ,s__Substance)
          & s__attribute(V__OBJ,V__ATTR)
          & s__part(V__PART,V__OBJ) )
       => s__attribute(V__PART,V__ATTR) ) ) ).

fof(kb_SUMO_574,axiom,
    s__subclass(s__SyntheticSubstance,s__Substance) ).

fof(kb_SUMO_575,axiom,
    s__instance(s__SyntheticSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_576,axiom,
    s__documentation(s__SyntheticSubstance,s__EnglishLanguage,'Any &%Substance that is the result of an &%IntentionalProcess, i.e. any substance that is created by &%Humans.') ).

fof(kb_SUMO_577,axiom,
    ! [V__SUBSTANCE] :
      ( s__instance(V__SUBSTANCE,s__SyntheticSubstance)
    <=> ? [V__PROCESS] :
          ( s__instance(V__PROCESS,s__Process)
          & s__instance(V__PROCESS,s__IntentionalProcess)
          & s__result(V__PROCESS,V__SUBSTANCE)
          & s__instance(V__SUBSTANCE,s__Substance) ) ) ).

fof(kb_SUMO_578,axiom,
    s__subclass(s__NaturalSubstance,s__Substance) ).

fof(kb_SUMO_579,axiom,
    s__instance(s__NaturalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_580,axiom,
    s__documentation(s__NaturalSubstance,s__EnglishLanguage,'Any &%Substance that is not the result of an &%IntentionalProcess, i.e. any substance that occurs naturally.') ).

fof(kb_SUMO_581,axiom,
    s__subclass(s__PureSubstance,s__Substance) ).

fof(kb_SUMO_582,axiom,
    s__instance(s__PureSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_583,axiom,
    s__partition_3(s__PureSubstance,s__CompoundSubstance,s__ElementalSubstance) ).

fof(kb_SUMO_584,axiom,
    s__documentation(s__PureSubstance,s__EnglishLanguage,'The &%Class of &%Substances with constant composition. A &%PureSubstance can be either an element (&%ElementalSubstance) or a compound of elements (&%CompoundSubstance). Examples: Table salt (sodium chloride, NaCl), sugar (sucrose, C_{12}H_{22}O_{11}), water (H_2O), iron (Fe), copper (Cu), and oxygen (O_2).') ).

fof(kb_SUMO_585,axiom,
    s__subclass(s__ElementalSubstance,s__PureSubstance) ).

fof(kb_SUMO_586,axiom,
    s__documentation(s__ElementalSubstance,s__EnglishLanguage,'The &%Class of &%PureSubstances that cannot be separated into two or more &%Substances by ordinary chemical (or physical) means. This excludes nuclear reactions. &%ElementalSubstances are composed of only one kind of atom. Examples: Iron (Fe), copper (Cu), and oxygen (O_2). &%ElementalSubstances are the simplest &%PureSubstances.') ).

fof(kb_SUMO_587,axiom,
    s__subclass(s__Metal,s__ElementalSubstance) ).

fof(kb_SUMO_588,axiom,
    s__instance(s__Metal__t,s__SetOrClass) ).

fof(kb_SUMO_589,axiom,
    s__documentation(s__Metal,s__EnglishLanguage,'A &%Metal is an &%ElementalSubstance that conducts heat and electricity, is shiny and reflects many colors of light, and can be hammered into sheets or drawn into wire. About 80% of the known chemical elements (&%ElementalSubstances) are metals.') ).

fof(kb_SUMO_590,axiom,
    s__subclass(s__Atom,s__ElementalSubstance) ).

fof(kb_SUMO_591,axiom,
    s__instance(s__Atom__t,s__SetOrClass) ).

fof(kb_SUMO_592,axiom,
    s__instance(s__ElementalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_593,axiom,
    s__documentation(s__Atom,s__EnglishLanguage,'An extremely small unit of matter that retains its identity in Chemical reactions. It consists of an &%AtomicNucleus and &%Electrons surrounding the &%AtomicNucleus.') ).

fof(kb_SUMO_594,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__CorpuscularObject)
     => ( s__instance(V__ATOM,s__Atom)
       => ? [V__PROTON,V__ELECTRON] :
            ( s__instance(V__ELECTRON,s__CorpuscularObject)
            & s__instance(V__PROTON,s__CorpuscularObject)
            & s__component(V__PROTON,V__ATOM)
            & s__component(V__ELECTRON,V__ATOM)
            & s__instance(V__PROTON,s__Proton)
            & s__instance(V__ELECTRON,s__Electron) ) ) ) ).

fof(kb_SUMO_595,axiom,
    ! [V__ATOM] :
      ( s__instance(V__ATOM,s__Atom)
     => ! [V__NUCLEUS1,V__NUCLEUS2] :
          ( ( s__instance(V__NUCLEUS2,s__CorpuscularObject)
            & s__instance(V__NUCLEUS1,s__CorpuscularObject)
            & s__instance(V__ATOM,s__CorpuscularObject) )
         => ( ( s__component(V__NUCLEUS1,V__ATOM)
              & s__component(V__NUCLEUS2,V__ATOM)
              & s__instance(V__NUCLEUS1,s__AtomicNucleus)
              & s__instance(V__NUCLEUS2,s__AtomicNucleus) )
           => V__NUCLEUS1 = V__NUCLEUS2 ) ) ) ).

fof(kb_SUMO_596,axiom,
    s__subclass(s__SubatomicParticle,s__ElementalSubstance) ).

fof(kb_SUMO_597,axiom,
    s__documentation(s__SubatomicParticle,s__EnglishLanguage,'The class of &%ElementalSubstances that are smaller than &%Atoms and compose &%Atoms.') ).

fof(kb_SUMO_598,axiom,
    ! [V__PARTICLE] :
      ( s__instance(V__PARTICLE,s__Object)
     => ( s__instance(V__PARTICLE,s__SubatomicParticle)
       => ? [V__ATOM] :
            ( s__instance(V__ATOM,s__Object)
            & s__instance(V__ATOM,s__Atom)
            & s__part(V__PARTICLE,V__ATOM) ) ) ) ).

fof(kb_SUMO_599,axiom,
    s__subclass(s__AtomicNucleus,s__SubatomicParticle) ).

fof(kb_SUMO_600,axiom,
    s__instance(s__AtomicNucleus__t,s__SetOrClass) ).

fof(kb_SUMO_601,axiom,
    s__documentation(s__AtomicNucleus,s__EnglishLanguage,'The core of the &%Atom. It is composed of &%Protons and &%Neutrons.') ).

fof(kb_SUMO_602,axiom,
    ! [V__NUCLEUS] :
      ( s__instance(V__NUCLEUS,s__CorpuscularObject)
     => ( s__instance(V__NUCLEUS,s__AtomicNucleus)
       => ? [V__NEUTRON,V__PROTON] :
            ( s__instance(V__PROTON,s__CorpuscularObject)
            & s__instance(V__NEUTRON,s__CorpuscularObject)
            & s__component(V__NEUTRON,V__NUCLEUS)
            & s__component(V__PROTON,V__NUCLEUS)
            & s__instance(V__NEUTRON,s__Neutron)
            & s__instance(V__PROTON,s__Proton) ) ) ) ).

fof(kb_SUMO_603,axiom,
    s__subclass(s__Electron,s__SubatomicParticle) ).

fof(kb_SUMO_604,axiom,
    s__instance(s__Electron__t,s__SetOrClass) ).

fof(kb_SUMO_605,axiom,
    s__documentation(s__Electron,s__EnglishLanguage,'&%SubatomicParticles that surround the &%AtomicNucleus. They have a negative charge.') ).

fof(kb_SUMO_606,axiom,
    s__subclass(s__Proton,s__SubatomicParticle) ).

fof(kb_SUMO_607,axiom,
    s__instance(s__Proton__t,s__SetOrClass) ).

fof(kb_SUMO_608,axiom,
    s__instance(s__SubatomicParticle__t,s__SetOrClass) ).

fof(kb_SUMO_609,axiom,
    s__documentation(s__Proton,s__EnglishLanguage,'Components of the &%AtomicNucleus. They have a positive charge.') ).

fof(kb_SUMO_610,axiom,
    s__subclass(s__Neutron,s__SubatomicParticle) ).

fof(kb_SUMO_611,axiom,
    s__instance(s__Neutron__t,s__SetOrClass) ).

fof(kb_SUMO_612,axiom,
    s__documentation(s__Neutron,s__EnglishLanguage,'Components of the &%AtomicNucleus. They have no charge.') ).

fof(kb_SUMO_613,axiom,
    s__subclass(s__CompoundSubstance,s__PureSubstance) ).

fof(kb_SUMO_614,axiom,
    s__documentation(s__CompoundSubstance,s__EnglishLanguage,'The &%Class of &%Substances that contain two or more elements (&%ElementalSubstances), in definite proportion by weight. The composition of a pure compound will be invariant, regardless of the method of preparation. Compounds are composed of more than one kind of atom (element). The term molecule is often used for the smallest unit of a compound that still retains all of the properties of the compound. Examples: Table salt (sodium chloride, NaCl), sugar (sucrose, C_{12}H_{22}O_{11}), and water (H_2O). ') ).

fof(kb_SUMO_615,axiom,
    s__subclass(s__Mixture,s__Substance) ).

fof(kb_SUMO_616,axiom,
    s__documentation(s__Mixture,s__EnglishLanguage,'A &%Mixture is two or more &%PureSubstances, combined in varying proportions - each retaining its own specific properties. The components of a &%Mixture can be separated by physical means, i.e. without the making and breaking of chemical bonds. Examples: Air, table salt thoroughly dissolved in water, milk, wood, and concrete. ') ).

fof(kb_SUMO_617,axiom,
    ! [V__MIXTURE] :
      ( s__instance(V__MIXTURE,s__Object)
     => ( s__instance(V__MIXTURE,s__Mixture)
       => ? [V__PURE1,V__PURE2] :
            ( s__instance(V__PURE2,s__Object)
            & s__instance(V__PURE1,s__Object)
            & s__instance(V__PURE1,s__PureSubstance)
            & s__instance(V__PURE2,s__PureSubstance)
            & V__PURE1 != V__PURE2
            & s__part(V__PURE1,V__MIXTURE)
            & s__part(V__PURE2,V__MIXTURE) ) ) ) ).

fof(kb_SUMO_618,axiom,
    ! [V__SUBSTANCE,V__MIXTURE] :
      ( ( s__instance(V__MIXTURE,s__Object)
        & s__instance(V__SUBSTANCE,s__Object) )
     => ( ( s__instance(V__MIXTURE,s__Mixture)
          & s__part(V__SUBSTANCE,V__MIXTURE)
          & ~ s__instance(V__SUBSTANCE,s__Mixture) )
       => s__instance(V__SUBSTANCE,s__PureSubstance) ) ) ).

fof(kb_SUMO_619,axiom,
    s__subclass(s__CorpuscularObject,s__SelfConnectedObject) ).

fof(kb_SUMO_620,axiom,
    s__disjoint(s__CorpuscularObject,s__Substance) ).

fof(kb_SUMO_621,axiom,
    s__documentation(s__CorpuscularObject,s__EnglishLanguage,'A &%SelfConnectedObject whose parts have properties that are not shared by the whole.') ).

fof(kb_SUMO_622,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__CorpuscularObject)
     => ? [V__SUBSTANCE1,V__SUBSTANCE2] :
          ( s__instance(V__SUBSTANCE2,s__SetOrClass)
          & s__instance(V__SUBSTANCE1,s__SetOrClass)
          & s__subclass(V__SUBSTANCE1,s__Substance)
          & s__subclass(V__SUBSTANCE2,s__Substance)
          & s__material(V__SUBSTANCE1,V__OBJ)
          & s__material(V__SUBSTANCE2,V__OBJ)
          & V__SUBSTANCE1 != V__SUBSTANCE2 ) ) ).

fof(kb_SUMO_623,axiom,
    s__subclass(s__Region,s__Object) ).

fof(kb_SUMO_624,axiom,
    s__documentation(s__Region,s__EnglishLanguage,'A topographic location. &%Regions encompass surfaces of &%Objects, imaginary places, and &%GeographicAreas. Note that a &%Region is the only kind of &%Object which can be located at itself. Note too that &%Region is not a subclass of &%SelfConnectedObject, because some &%Regions, e.g. archipelagos, have &%parts which are not &%connected with one another.') ).

fof(kb_SUMO_625,axiom,
    ! [V__REGION] :
      ( s__instance(V__REGION,s__Object)
     => ( s__instance(V__REGION,s__Region)
       => ? [V__PHYS] :
            ( s__instance(V__PHYS,s__Physical)
            & s__located(V__PHYS,V__REGION) ) ) ) ).

fof(kb_SUMO_626,axiom,
    s__subclass(s__Collection,s__Object) ).

fof(kb_SUMO_627,axiom,
    s__instance(s__Collection__t,s__SetOrClass) ).

fof(kb_SUMO_628,axiom,
    s__disjoint(s__Collection,s__SelfConnectedObject) ).

fof(kb_SUMO_629,axiom,
    s__documentation(s__Collection,s__EnglishLanguage,'Collections have &%members like &%Classes, but, unlike &%Classes, they have a position in space-time and &%members can be added and subtracted without thereby changing the identity of the &%Collection. Some examples are toolkits, football teams, and flocks of sheep.') ).

fof(kb_SUMO_630,axiom,
    ! [V__COLL] :
      ( s__instance(V__COLL,s__Collection)
     => ? [V__OBJ] :
          ( s__instance(V__OBJ,s__SelfConnectedObject)
          & s__member(V__OBJ,V__COLL) ) ) ).

fof(kb_SUMO_631,axiom,
    s__subrelation(s__member__m,s__part__m) ).

fof(kb_SUMO_632,axiom,
    s__instance(s__member__m,s__AsymmetricRelation) ).

fof(kb_SUMO_633,axiom,
    s__instance(s__member__m,s__IntransitiveRelation) ).

fof(kb_SUMO_634,axiom,
    s__domain(s__member__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_635,axiom,
    s__domain(s__member__m,"2",s__Collection) ).

fof(kb_SUMO_636,axiom,
    s__relatedInternalConcept(s__member__m,s__instance__m) ).

fof(kb_SUMO_637,axiom,
    s__relatedInternalConcept(s__member__m,s__element__m) ).

fof(kb_SUMO_638,axiom,
    s__documentation(s__member__m,s__EnglishLanguage,'A specialized common sense notion of part for uniform parts of &%Collections. For example, each sheep in a flock of sheep would have the relationship of member to the flock.') ).

fof(kb_SUMO_639,axiom,
    s__instance(s__subCollection__m,s__BinaryPredicate) ).

fof(kb_SUMO_640,axiom,
    s__instance(s__subCollection__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_641,axiom,
    s__domain(s__subCollection__m,"1",s__Collection) ).

fof(kb_SUMO_642,axiom,
    s__domain(s__subCollection__m,"2",s__Collection) ).

fof(kb_SUMO_643,axiom,
    s__documentation(s__subCollection__m,s__EnglishLanguage,'(&%subCollection ?COLL1 ?COLL2) means that the &%Collection ?COLL1 is a proper part of the &%Collection ?COLL2.') ).

fof(kb_SUMO_644,axiom,
    s__subrelation(s__subCollection__m,s__part__m) ).

fof(kb_SUMO_645,axiom,
    ! [V__COLL1,V__COLL2] :
      ( s__subCollection(V__COLL1,V__COLL2)
    <=> ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
            & s__instance(V__COLL2,s__Collection)
            & s__instance(V__COLL1,s__Collection) )
         => ( s__member(V__MEMBER,V__COLL1)
           => s__member(V__MEMBER,V__COLL2) ) ) ) ).

fof(kb_SUMO_646,axiom,
    s__subclass(s__ContentBearingPhysical,s__Physical) ).

fof(kb_SUMO_647,axiom,
    s__documentation(s__ContentBearingPhysical,s__EnglishLanguage,'Any &%Object or &%Process that expresses content. This covers &%Objects that contain a &%Proposition, such as a book, as well as &%ManualSignLanguage, which may similarly contain a &%Proposition.') ).

fof(kb_SUMO_648,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__ContentBearingPhysical)
     => ? [V__THING] : s__represents(V__OBJ,V__THING) ) ).

fof(kb_SUMO_649,axiom,
    s__subclass(s__ContentBearingProcess,s__ContentBearingPhysical) ).

fof(kb_SUMO_650,axiom,
    s__subclass(s__ContentBearingProcess,s__Process) ).

fof(kb_SUMO_651,axiom,
    s__instance(s__ContentBearingProcess__t,s__SetOrClass) ).

fof(kb_SUMO_652,axiom,
    s__documentation(s__ContentBearingProcess,s__EnglishLanguage,'Any &%Process, for example &%ManualHumanLanguage, which may contain a &%Proposition.') ).

fof(kb_SUMO_653,axiom,
    s__subclass(s__ContentBearingObject,s__CorpuscularObject) ).

fof(kb_SUMO_654,axiom,
    s__subclass(s__ContentBearingObject,s__ContentBearingPhysical) ).

fof(kb_SUMO_655,axiom,
    s__relatedInternalConcept(s__ContentBearingObject,s__containsInformation__m) ).

fof(kb_SUMO_656,axiom,
    s__documentation(s__ContentBearingObject,s__EnglishLanguage,'Any &%SelfConnectedObject that expresses content. This content may be a &%Proposition, e.g. when the &%ContentBearingObject is a &%Sentence or &%Text, or it may be a representation of an abstract or physical object, as with an &%Icon, a &%Word or a &%Phrase.') ).

fof(kb_SUMO_657,axiom,
    s__subclass(s__SymbolicString,s__ContentBearingObject) ).

fof(kb_SUMO_658,axiom,
    s__documentation(s__SymbolicString,s__EnglishLanguage,'The &%Class of alphanumeric sequences.') ).

fof(kb_SUMO_659,axiom,
    s__subclass(s__Character,s__SymbolicString) ).

fof(kb_SUMO_660,axiom,
    s__instance(s__Character__t,s__SetOrClass) ).

fof(kb_SUMO_661,axiom,
    s__instance(s__SymbolicString__t,s__SetOrClass) ).

fof(kb_SUMO_662,axiom,
    s__documentation(s__Character,s__EnglishLanguage,'An element of an alphabet, a set of numerals, etc. Note that a &%Character may or may not be part of a &%Language. &%Character is a subclass of &%SymbolicString, because every instance of &%Character is an alphanumeric sequence consisting of a single element.') ).

fof(kb_SUMO_663,axiom,
    ! [V__STRING] :
      ( s__instance(V__STRING,s__Object)
     => ( s__instance(V__STRING,s__SymbolicString)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__STRING)
            & s__instance(V__PART,s__Character) ) ) ) ).

fof(kb_SUMO_664,axiom,
    s__instance(s__containsInformation__m,s__BinaryPredicate) ).

fof(kb_SUMO_665,axiom,
    s__instance(s__containsInformation__m,s__AsymmetricRelation) ).

fof(kb_SUMO_666,axiom,
    s__subrelation(s__containsInformation__m,s__represents__m) ).

fof(kb_SUMO_667,axiom,
    s__domain(s__containsInformation__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_668,axiom,
    s__domain(s__containsInformation__m,"2",s__Proposition) ).

fof(kb_SUMO_669,axiom,
    s__documentation(s__containsInformation__m,s__EnglishLanguage,'A subrelation of &%represents. This predicate relates a &%ContentBearingPhysical to the &%Proposition that is expressed by the &%ContentBearingPhysical. Examples include the relationships between a physical novel and its story and between a printed score and its musical content.') ).

fof(kb_SUMO_670,axiom,
    s__subclass(s__Icon,s__ContentBearingPhysical) ).

fof(kb_SUMO_671,axiom,
    s__instance(s__Icon__t,s__SetOrClass) ).

fof(kb_SUMO_672,axiom,
    s__instance(s__ContentBearingPhysical__t,s__SetOrClass) ).

fof(kb_SUMO_673,axiom,
    s__documentation(s__Icon,s__EnglishLanguage,'This is the subclass of &%ContentBearingPhysical which are not part of a &%Language and which have some sort of similarity with the &%Objects that they represent. This &%Class would include symbolic roadway signs, representational art works, photographs, etc.') ).

fof(kb_SUMO_674,axiom,
    s__subclass(s__MotionPicture,s__Text) ).

fof(kb_SUMO_675,axiom,
    s__instance(s__MotionPicture__t,s__SetOrClass) ).

fof(kb_SUMO_676,axiom,
    s__documentation(s__MotionPicture,s__EnglishLanguage,'A &%ContentBearingObject which depicts motion (and which may have an audio or text component as well). This &%Class covers films, videos, etc.') ).

fof(kb_SUMO_677,axiom,
    s__subclass(s__LinguisticExpression,s__ContentBearingPhysical) ).

fof(kb_SUMO_678,axiom,
    s__disjoint(s__LinguisticExpression,s__Icon) ).

fof(kb_SUMO_679,axiom,
    s__documentation(s__LinguisticExpression,s__EnglishLanguage,'This is the subclass of &%ContentBearingPhysical which are language-related. Note that this &%Class encompasses both &%Language and the the elements of &%Languages, e.g. &%Words.') ).

fof(kb_SUMO_680,axiom,
    s__subclass(s__Language,s__LinguisticExpression) ).

fof(kb_SUMO_681,axiom,
    s__disjointDecomposition_4(s__Language,s__AnimalLanguage,s__HumanLanguage,s__ComputerLanguage) ).

fof(kb_SUMO_682,axiom,
    s__documentation(s__Language,s__EnglishLanguage,'A system of signs for expressing thought. The system can be either natural or artificial, i.e. something that emerges gradually as a cultural artifact or something that is intentionally created by a person or group of people.') ).

fof(kb_SUMO_683,axiom,
    s__subclass(s__AnimalLanguage,s__Language) ).

fof(kb_SUMO_684,axiom,
    s__instance(s__AnimalLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_685,axiom,
    s__documentation(s__AnimalLanguage,s__EnglishLanguage,'The &%subclass of &%Languages used by &%Animals other than &%Humans.') ).

fof(kb_SUMO_686,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__AnimalLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => ( s__instance(V__AGENT,s__Animal)
          & ~ s__instance(V__AGENT,s__Human) ) ) ) ).

fof(kb_SUMO_687,axiom,
    s__subclass(s__ArtificialLanguage,s__Language) ).

fof(kb_SUMO_688,axiom,
    s__instance(s__ArtificialLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_689,axiom,
    s__documentation(s__ArtificialLanguage,s__EnglishLanguage,'The &%subclass of &%Languages that are designed by &%Humans.') ).

fof(kb_SUMO_690,axiom,
    s__subclass(s__ComputerLanguage,s__ArtificialLanguage) ).

fof(kb_SUMO_691,axiom,
    s__instance(s__ComputerLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_692,axiom,
    s__documentation(s__ComputerLanguage,s__EnglishLanguage,'The class of &%Languages designed for and interpreted by a computer.') ).

fof(kb_SUMO_693,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__ComputerLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => s__instance(V__AGENT,s__Machine) ) ) ).

fof(kb_SUMO_694,axiom,
    s__subclass(s__HumanLanguage,s__Language) ).

fof(kb_SUMO_695,axiom,
    s__instance(s__HumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_696,axiom,
    s__instance(s__Language__t,s__SetOrClass) ).

fof(kb_SUMO_697,axiom,
    s__partition_3(s__HumanLanguage,s__NaturalLanguage,s__ConstructedLanguage) ).

fof(kb_SUMO_698,axiom,
    s__partition_3(s__HumanLanguage,s__SpokenHumanLanguage,s__ManualHumanLanguage) ).

fof(kb_SUMO_699,axiom,
    s__documentation(s__HumanLanguage,s__EnglishLanguage,'The &%subclass of &%Languages used by &%Humans.') ).

fof(kb_SUMO_700,axiom,
    ! [V__LANG,V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__LANG,s__Object) )
     => ( ( s__instance(V__LANG,s__HumanLanguage)
          & s__agent(V__PROC,V__AGENT)
          & s__instrument(V__PROC,V__LANG) )
       => s__instance(V__AGENT,s__Human) ) ) ).

fof(kb_SUMO_701,axiom,
    s__subclass(s__ConstructedLanguage,s__HumanLanguage) ).

fof(kb_SUMO_702,axiom,
    s__instance(s__ConstructedLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_703,axiom,
    s__subclass(s__ConstructedLanguage,s__ArtificialLanguage) ).

fof(kb_SUMO_704,axiom,
    s__documentation(s__ConstructedLanguage,s__EnglishLanguage,'An &%ConstructedLanguage is a &%HumanLanguage that did not evolve spontaneously within a language community, but rather had its core grammar and vocabulary invented by one or more language experts, often with an aim to produce a more grammatically regular language than any language that has evolved naturally. This &%Class includes languages like Esperanto that were created to facilitate international communication') ).

fof(kb_SUMO_705,axiom,
    ! [V__LANG] :
      ( s__instance(V__LANG,s__ConstructedLanguage)
     => ? [V__PLAN] :
          ( s__instance(V__PLAN,s__Process)
          & s__instance(V__PLAN,s__Planning)
          & s__result(V__PLAN,V__LANG) ) ) ).

fof(kb_SUMO_706,axiom,
    s__subclass(s__NaturalLanguage,s__HumanLanguage) ).

fof(kb_SUMO_707,axiom,
    s__documentation(s__NaturalLanguage,s__EnglishLanguage,'The &%subclass of &%HumanLanguages which are not designed and which evolve from generation to generation. This &%Class includes all of the national languages, e.g. English, Spanish, Japanese, etc. Note that this class includes dialects of natural languages.') ).

fof(kb_SUMO_708,axiom,
    s__subclass(s__ManualHumanLanguage,s__HumanLanguage) ).

fof(kb_SUMO_709,axiom,
    s__instance(s__ManualHumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_710,axiom,
    s__documentation(s__ManualHumanLanguage,s__EnglishLanguage,'A &%ManualHumanLanguage is a &%HumanLanguage which has as its medium gestures and movement, such as the shape, position, and movement of the hands.') ).

fof(kb_SUMO_711,axiom,
    s__subclass(s__SpokenHumanLanguage,s__HumanLanguage) ).

fof(kb_SUMO_712,axiom,
    s__documentation(s__SpokenHumanLanguage,s__EnglishLanguage,'A &%SpokenHumanLanguage is a &%HumanLanguage which has as its medium the human voice. It can also berepresented visually through writing, although not all &%SpokenHumanLanguages have a codified written form.') ).

fof(kb_SUMO_713,axiom,
    s__instance(s__EnglishLanguage,s__NaturalLanguage) ).

fof(kb_SUMO_714,axiom,
    s__instance(s__NaturalLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_715,axiom,
    s__instance(s__EnglishLanguage,s__SpokenHumanLanguage) ).

fof(kb_SUMO_716,axiom,
    s__instance(s__SpokenHumanLanguage__t,s__SetOrClass) ).

fof(kb_SUMO_717,axiom,
    s__documentation(s__EnglishLanguage,s__EnglishLanguage,'A Germanic language that incorporates many roots from the Romance languages. It is the official language of the &%UnitedStates, the &%UnitedKingdom, and many other countries.') ).

fof(kb_SUMO_718,axiom,
    s__subclass(s__Word,s__LinguisticExpression) ).

fof(kb_SUMO_719,axiom,
    s__documentation(s__Word,s__EnglishLanguage,'A term of a &%Language that represents a concept.') ).

fof(kb_SUMO_720,axiom,
    s__subclass(s__Formula,s__Sentence) ).

fof(kb_SUMO_721,axiom,
    s__instance(s__Formula__t,s__SetOrClass) ).

fof(kb_SUMO_722,axiom,
    s__documentation(s__Formula,s__EnglishLanguage,'A syntactically well-formed formula in the SUO-KIF knowledge representation language.') ).

fof(kb_SUMO_723,axiom,
    s__subclass(s__Agent,s__Object) ).

fof(kb_SUMO_724,axiom,
    s__documentation(s__Agent,s__EnglishLanguage,'Something or someone that can act on its own and produce changes in the world.') ).

fof(kb_SUMO_725,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Agent)
    <=> ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__agent(V__PROC,V__AGENT) ) ) ).

fof(kb_SUMO_726,axiom,
    s__subclass(s__SentientAgent,s__Agent) ).

fof(kb_SUMO_727,axiom,
    s__documentation(s__SentientAgent,s__EnglishLanguage,'A &%SentientAgent is an &%Agent that is capable of &%Perception and experiences some level of consciousness (see &%ConsciousnessAttribute). If the &%Agent is able to reason at a comparatively high level (evinced by the ability to learn, plan, and feel emotions), then it is also an instance of &%CognitiveAgent. A &%DomesticAnimal is a &%SentientAgent, but may or may not be a &%CognitiveAgent, depending on the type of &%Animal.') ).

fof(kb_SUMO_728,axiom,
    s__subclass(s__CognitiveAgent,s__SentientAgent) ).

fof(kb_SUMO_729,axiom,
    s__instance(s__SentientAgent__t,s__SetOrClass) ).

fof(kb_SUMO_730,axiom,
    s__documentation(s__CognitiveAgent,s__EnglishLanguage,'A &%CognitiveAgent is an &%Agent that has the ability to reason, deliberate, make plans, and experience emotions. Although &%Human is a subclass of &%CognitiveAgent, there may be instances of &%CognitiveAgent which are not also instances of &%Human. For example, &%Primates, dolphins, whales, and some extraterrestrials (if they exist) might be considered &%CognitiveAgents.') ).

fof(kb_SUMO_731,axiom,
    s__subclass(s__LegalAgent,s__Agent) ).

fof(kb_SUMO_732,axiom,
    s__documentation(s__LegalAgent,s__EnglishLanguage,'A &%LegalAgent is an &%Agent that is allowed by law to to act and be treated as a legal person for certain purposes, such as being a party to a lawsuit, owning property, and entering into a contract. Typically, a &%LegalAgent is either an adult &%Human or some type of &%Organization. Depending on the prevailing legal system in a given time and location, &%Humans in general, as well as other &%CognitiveAgents, typically will have additional legal rights and obligations beyond those accorded to &%LegalAgents. See the Wikipedia description of <a href=http://en.wikipedia.org/wiki/Juristic_person>Juristic person</a>.') ).

%FOL fof(kb_SUMO_733,axiom,(( (! [V__TIME,V__AGENT] : ((s__instance(V__AGENT,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__instance(V__AGENT,s__LegalAgent)') <=> s__holdsDuring(V__TIME,'(s__capability(s__LegalAction,s__agent__m,V__AGENT) | s__capability(s__LegalAction,s__patient__m,V__AGENT))')))) ))).

fof(kb_SUMO_734,axiom,
    s__instance(s__leader__m,s__BinaryPredicate) ).

fof(kb_SUMO_735,axiom,
    s__instance(s__leader__m,s__AsymmetricRelation) ).

fof(kb_SUMO_736,axiom,
    s__instance(s__leader__m,s__SingleValuedRelation) ).

fof(kb_SUMO_737,axiom,
    s__domain(s__leader__m,"1",s__Agent) ).

fof(kb_SUMO_738,axiom,
    s__domain(s__leader__m,"2",s__Human) ).

fof(kb_SUMO_739,axiom,
    s__documentation(s__leader__m,s__EnglishLanguage,'(&%leader ?INSTITUTION ?PERSON) means that the leader of ?INSTITUTION is ?PERSON.') ).

%FOL fof(kb_SUMO_740,axiom,(( (! [V__TIME,V__X,V__Y] : ((s__instance(V__Y,s__Human) & s__instance(V__X,s__Agent) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__leader(V__X,V__Y)') => s__holdsDuring(V__TIME,'s__attribute(V__Y,s__Living)')))) ))).

fof(kb_SUMO_741,axiom,
    s__subclass(s__Process,s__Physical) ).

fof(kb_SUMO_742,axiom,
    s__documentation(s__Process,s__EnglishLanguage,'The class of things that happen and have temporal parts or stages. Examples include extended events like a football match or a race, actions like &%Pursuing and &%Reading, and biological processes. The formal definition is: anything that occurs in time but is not an &%Object. Note that a &%Process may have participants inside it which are &%Objects, such as the players in a football match. In a 4D ontology, a &%Process is something whose spatiotemporal extent is thought of as dividing into temporal stages roughly perpendicular to the time-axis.') ).

fof(kb_SUMO_743,axiom,
    s__subclass(s__DualObjectProcess,s__Process) ).

fof(kb_SUMO_744,axiom,
    s__documentation(s__DualObjectProcess,s__EnglishLanguage,'Any &%Process that requires two, nonidentical &%patients.') ).

fof(kb_SUMO_745,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__DualObjectProcess)
       => ? [V__OBJ1,V__OBJ2] :
            ( s__patient(V__PROCESS,V__OBJ1)
            & s__patient(V__PROCESS,V__OBJ2)
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_746,axiom,
    s__subclass(s__SingleAgentProcess,s__Process) ).

fof(kb_SUMO_747,axiom,
    s__instance(s__SingleAgentProcess__t,s__SetOrClass) ).

fof(kb_SUMO_748,axiom,
    s__documentation(s__SingleAgentProcess,s__EnglishLanguage,'&%SingleAgentProcess is the &%Class of all &%Processes that require exactly one &%agent in order to occur.') ).

fof(kb_SUMO_749,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__SingleAgentProcess)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__agent(V__PROC,V__AGENT) ) ) ) ).

fof(kb_SUMO_750,axiom,
    ! [V__AGENT_1,V__AGENT_2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT_2,s__Agent)
        & s__instance(V__AGENT_1,s__Agent) )
     => ( ( s__instance(V__PROC,s__SingleAgentProcess)
          & s__agent(V__PROC,V__AGENT_1)
          & s__agent(V__PROC,V__AGENT_2) )
       => V__AGENT_1 = V__AGENT_2 ) ) ).

fof(kb_SUMO_751,axiom,
    s__subclass(s__Abstract,s__Entity) ).

fof(kb_SUMO_752,axiom,
    s__instance(s__Abstract__t,s__SetOrClass) ).

fof(kb_SUMO_753,axiom,
    s__instance(s__Entity__t,s__SetOrClass) ).

fof(kb_SUMO_754,axiom,
    s__disjointDecomposition_6(s__Abstract,s__Quantity,s__Attribute,s__SetOrClass,s__Relation,s__Proposition) ).

fof(kb_SUMO_755,axiom,
    s__documentation(s__Abstract,s__EnglishLanguage,'Properties or qualities as distinguished from any particular embodiment of the properties/qualities in a physical medium. Instances of Abstract can be said to exist in the same sense as mathematical objects such as sets and relations, but they cannot exist at a particular place and time without some physical encoding or embodiment.') ).

fof(kb_SUMO_756,axiom,
    ! [V__ABS] :
      ( s__instance(V__ABS,s__Physical)
     => ( s__instance(V__ABS,s__Abstract)
      <=> ~ ? [V__POINT] :
              ( s__instance(V__POINT,s__Object)
              & s__instance(V__POINT,s__TimePosition)
              & ( s__located(V__ABS,V__POINT)
                | s__time(V__ABS,V__POINT) ) ) ) ) ).

fof(kb_SUMO_757,axiom,
    s__subclass(s__Quantity,s__Abstract) ).

fof(kb_SUMO_758,axiom,
    s__documentation(s__Quantity,s__EnglishLanguage,'Any specification of how many or how much of something there is. Accordingly, there are two subclasses of &%Quantity: &%Number (how many) and &%PhysicalQuantity (how much).') ).

fof(kb_SUMO_759,axiom,
    s__subclass(s__Attribute,s__Abstract) ).

fof(kb_SUMO_760,axiom,
    s__partition_3(s__Attribute,s__InternalAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_761,axiom,
    s__documentation(s__Attribute,s__EnglishLanguage,'Qualities which we cannot or choose not to reify into subclasses of &%Object.') ).

fof(kb_SUMO_762,axiom,
    s__instance(s__property__m,s__BinaryPredicate) ).

fof(kb_SUMO_763,axiom,
    s__domain(s__property__m,"1",s__Entity) ).

fof(kb_SUMO_764,axiom,
    s__domain(s__property__m,"2",s__Attribute) ).

fof(kb_SUMO_765,axiom,
    s__documentation(s__property__m,s__EnglishLanguage,'This &%Predicate holds between an instance of &%Entity and an instance of &%Attribute. (&%property ?ENTITY ?ATTR) means that ?ENTITY has the &%Attribute ?ATTR.') ).

fof(kb_SUMO_766,axiom,
    s__instance(s__attribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_767,axiom,
    s__instance(s__attribute__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_768,axiom,
    s__subrelation(s__attribute__m,s__property__m) ).

fof(kb_SUMO_769,axiom,
    s__domain(s__attribute__m,"1",s__Object) ).

fof(kb_SUMO_770,axiom,
    s__documentation(s__attribute__m,s__EnglishLanguage,'(&%attribute ?OBJECT ?PROPERTY) means that ?PROPERTY is a &%Attribute of ?OBJECT. For example, (&%attribute &%MyLittleRedWagon &%Red).') ).

fof(kb_SUMO_771,axiom,
    s__instance(s__manner__m,s__AsymmetricRelation) ).

fof(kb_SUMO_772,axiom,
    s__instance(s__manner__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_773,axiom,
    s__subrelation(s__manner__m,s__property__m) ).

fof(kb_SUMO_774,axiom,
    s__domain(s__manner__m,"1",s__Process) ).

fof(kb_SUMO_775,axiom,
    s__disjointRelation(s__manner__m,s__attribute__m) ).

fof(kb_SUMO_776,axiom,
    s__documentation(s__manner__m,s__EnglishLanguage,'(&%manner ?PROCESS ?MANNER) means that the &%Process ?PROCESS is qualified by the &%Attribute ?MANNER. The &%Attributes of &%Processes are usually denoted by adverbs and include things like the speed of the wind, the style of a dance, or the intensity of a sports competition.') ).

fof(kb_SUMO_777,axiom,
    s__instance(s__ExtensionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_778,axiom,
    s__instance(s__ExtensionFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_779,axiom,
    s__domain(s__ExtensionFn__m,"1",s__Attribute) ).

fof(kb_SUMO_780,axiom,
    s__range(s__ExtensionFn__m,s__Class) ).

fof(kb_SUMO_781,axiom,
    s__documentation(s__ExtensionFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Attribute into the &%Class whose condition for membership is the &%Attribute.') ).

fof(kb_SUMO_782,axiom,
    s__subclass(s__InternalAttribute,s__Attribute) ).

fof(kb_SUMO_783,axiom,
    s__instance(s__InternalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_784,axiom,
    s__instance(s__Attribute__t,s__SetOrClass) ).

fof(kb_SUMO_785,axiom,
    s__documentation(s__InternalAttribute,s__EnglishLanguage,'Any &%Attribute of an &%Entity that is an internal property of the &%Entity, e.g. its shape, its color, its fragility, etc.') ).

fof(kb_SUMO_786,axiom,
    s__documentation(s__PhysicalAttribute,s__EnglishLanguage,'An &%InternalAttribute given by physical properties of the object.') ).

fof(kb_SUMO_787,axiom,
    s__subclass(s__PhysicalAttribute,s__InternalAttribute) ).

fof(kb_SUMO_788,axiom,
    s__instance(s__PhysicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_789,axiom,
    s__subclass(s__RelationalAttribute,s__Attribute) ).

fof(kb_SUMO_790,axiom,
    s__documentation(s__RelationalAttribute,s__EnglishLanguage,'Any &%Attribute that an &%Entity has by virtue of a relationship that it bears to another &%Entity or set of &%Entities, e.g. &%SocialRoles and &%PositionalAttributes.') ).

fof(kb_SUMO_791,axiom,
    s__subclass(s__Number,s__Quantity) ).

fof(kb_SUMO_792,axiom,
    s__partition_4(s__Number,s__RealNumber,s__ImaginaryNumber,s__ComplexNumber) ).

fof(kb_SUMO_793,axiom,
    s__documentation(s__Number,s__EnglishLanguage,'A measure of how many things there are, or how much there is, of a certain kind. &%Numbers are subclassed into &%RealNumber, &%ComplexNumber, and &%ImaginaryNumber.') ).

fof(kb_SUMO_794,axiom,
    s__instance(less__m,s__BinaryPredicate) ).

fof(kb_SUMO_795,axiom,
    s__instance(less__m,s__TransitiveRelation) ).

fof(kb_SUMO_796,axiom,
    s__instance(less__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_797,axiom,
    s__instance(less__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_798,axiom,
    s__trichotomizingOn(less__m,s__RealNumber) ).

fof(kb_SUMO_799,axiom,
    s__domain(less__m,"1",s__Quantity) ).

fof(kb_SUMO_800,axiom,
    s__domain(less__m,"2",s__Quantity) ).

fof(kb_SUMO_801,axiom,
    s__documentation(less__m,s__EnglishLanguage,'(&%lessThan ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is less than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_802,axiom,
    s__instance(greater__m,s__BinaryPredicate) ).

fof(kb_SUMO_803,axiom,
    s__instance(greater__m,s__TransitiveRelation) ).

fof(kb_SUMO_804,axiom,
    s__instance(greater__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_805,axiom,
    s__instance(greater__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_806,axiom,
    s__trichotomizingOn(greater__m,s__RealNumber) ).

fof(kb_SUMO_807,axiom,
    s__domain(greater__m,"1",s__Quantity) ).

fof(kb_SUMO_808,axiom,
    s__domain(greater__m,"2",s__Quantity) ).

fof(kb_SUMO_809,axiom,
    s__inverse(greater__m,less__m) ).

fof(kb_SUMO_810,axiom,
    s__documentation(greater__m,s__EnglishLanguage,'(&%greaterThan ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is greater than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_811,axiom,
    s__instance(lesseq__m,s__BinaryPredicate) ).

fof(kb_SUMO_812,axiom,
    s__instance(lesseq__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_813,axiom,
    s__instance(lesseq__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_814,axiom,
    s__trichotomizingOn(lesseq__m,s__RealNumber) ).

fof(kb_SUMO_815,axiom,
    s__domain(lesseq__m,"1",s__Quantity) ).

fof(kb_SUMO_816,axiom,
    s__domain(lesseq__m,"2",s__Quantity) ).

fof(kb_SUMO_817,axiom,
    s__documentation(lesseq__m,s__EnglishLanguage,'(&%lessThanOrEqualTo ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is less than or equal to the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_818,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( lesseq(V__NUMBER1,V__NUMBER2)
      <=> ( V__NUMBER1 = V__NUMBER2
          | less(V__NUMBER1,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_819,axiom,
    s__instance(greatereq__m,s__BinaryPredicate) ).

fof(kb_SUMO_820,axiom,
    s__instance(greatereq__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_821,axiom,
    s__instance(greatereq__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_822,axiom,
    s__trichotomizingOn(greatereq__m,s__RealNumber) ).

fof(kb_SUMO_823,axiom,
    s__domain(greatereq__m,"1",s__Quantity) ).

fof(kb_SUMO_824,axiom,
    s__domain(greatereq__m,"2",s__Quantity) ).

fof(kb_SUMO_825,axiom,
    s__inverse(greatereq__m,lesseq__m) ).

fof(kb_SUMO_826,axiom,
    s__documentation(greatereq__m,s__EnglishLanguage,'(&%greaterThanOrEqualTo ?NUMBER1 ?NUMBER2) is true just in case the &%Quantity ?NUMBER1 is greater than the &%Quantity ?NUMBER2.') ).

fof(kb_SUMO_827,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( greatereq(V__NUMBER1,V__NUMBER2)
      <=> ( V__NUMBER1 = V__NUMBER2
          | greater(V__NUMBER1,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_828,axiom,
    s__subclass(s__RealNumber,s__Number) ).

fof(kb_SUMO_829,axiom,
    s__partition_3(s__RealNumber,s__NegativeRealNumber,s__NonnegativeRealNumber) ).

fof(kb_SUMO_830,axiom,
    s__partition_3(s__RealNumber,s__RationalNumber,s__IrrationalNumber) ).

fof(kb_SUMO_831,axiom,
    s__documentation(s__RealNumber,s__EnglishLanguage,'Any &%Number that can be expressed as a (possibly infinite) decimal, i.e. any &%Number that has a position on the number line.') ).

fof(kb_SUMO_832,axiom,
    s__subclass(s__ImaginaryNumber,s__Number) ).

fof(kb_SUMO_833,axiom,
    s__instance(s__ImaginaryNumber__t,s__SetOrClass) ).

fof(kb_SUMO_834,axiom,
    s__documentation(s__ImaginaryNumber,s__EnglishLanguage,'Any &%Number that is the result of multiplying a &%RealNumber by the square root of -1.') ).

fof(kb_SUMO_835,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ImaginaryNumber)
     => ? [V__REAL] :
          ( s__instance(V__REAL,s__Quantity)
          & s__instance(V__REAL,s__RealNumber)
          & V__NUMBER = times(V__REAL,s__SquareRootFn("-1")) ) ) ).

fof(kb_SUMO_836,axiom,
    s__subclass(s__RationalNumber,s__RealNumber) ).

fof(kb_SUMO_837,axiom,
    s__instance(s__RationalNumber__t,s__SetOrClass) ).

fof(kb_SUMO_838,axiom,
    s__documentation(s__RationalNumber,s__EnglishLanguage,'Any &%RealNumber that is the product of dividing two &%Integers.') ).

fof(kb_SUMO_839,axiom,
    s__subclass(s__IrrationalNumber,s__RealNumber) ).

fof(kb_SUMO_840,axiom,
    s__instance(s__IrrationalNumber__t,s__SetOrClass) ).

fof(kb_SUMO_841,axiom,
    s__documentation(s__IrrationalNumber,s__EnglishLanguage,'Any &%RealNumber that is not also a &%RationalNumber.') ).

fof(kb_SUMO_842,axiom,
    s__subclass(s__NonnegativeRealNumber,s__RealNumber) ).

fof(kb_SUMO_843,axiom,
    s__instance(s__NonnegativeRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_844,axiom,
    s__documentation(s__NonnegativeRealNumber,s__EnglishLanguage,'A &%RealNumber that is greater than or equal to zero.') ).

fof(kb_SUMO_845,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__NonnegativeRealNumber)
      <=> ( greatereq(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_846,axiom,
    s__subclass(s__PositiveRealNumber,s__NonnegativeRealNumber) ).

fof(kb_SUMO_847,axiom,
    s__documentation(s__PositiveRealNumber,s__EnglishLanguage,'A &%RealNumber that is greater than zero.') ).

fof(kb_SUMO_848,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__PositiveRealNumber)
      <=> ( greater(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_849,axiom,
    s__subclass(s__NegativeRealNumber,s__RealNumber) ).

fof(kb_SUMO_850,axiom,
    s__instance(s__NegativeRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_851,axiom,
    s__documentation(s__NegativeRealNumber,s__EnglishLanguage,'A &%RealNumber that is less than zero.') ).

fof(kb_SUMO_852,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__NegativeRealNumber)
      <=> ( less(V__NUMBER,"0")
          & s__instance(V__NUMBER,s__RealNumber) ) ) ) ).

fof(kb_SUMO_853,axiom,
    s__subclass(s__Integer,s__RationalNumber) ).

fof(kb_SUMO_854,axiom,
    s__partition_3(s__Integer,s__OddInteger,s__EvenInteger) ).

fof(kb_SUMO_855,axiom,
    s__partition_3(s__Integer,s__NegativeInteger,s__NonnegativeInteger) ).

fof(kb_SUMO_856,axiom,
    s__documentation(s__Integer,s__EnglishLanguage,'A negative or nonnegative whole number.') ).

fof(kb_SUMO_857,axiom,
    s__subclass(s__EvenInteger,s__Integer) ).

fof(kb_SUMO_858,axiom,
    s__instance(s__EvenInteger__t,s__SetOrClass) ).

fof(kb_SUMO_859,axiom,
    s__documentation(s__EvenInteger,s__EnglishLanguage,'An &%Integer that is evenly divisible by 2.') ).

fof(kb_SUMO_860,axiom,
    s__subclass(s__OddInteger,s__Integer) ).

fof(kb_SUMO_861,axiom,
    s__instance(s__OddInteger__t,s__SetOrClass) ).

fof(kb_SUMO_862,axiom,
    s__instance(s__Integer__t,s__SetOrClass) ).

fof(kb_SUMO_863,axiom,
    s__documentation(s__OddInteger,s__EnglishLanguage,'An &%Integer that is not evenly divisible by 2.') ).

fof(kb_SUMO_864,axiom,
    s__subclass(s__PrimeNumber,s__Integer) ).

fof(kb_SUMO_865,axiom,
    s__instance(s__PrimeNumber__t,s__SetOrClass) ).

fof(kb_SUMO_866,axiom,
    s__documentation(s__PrimeNumber,s__EnglishLanguage,'An &%Integer that is evenly divisible only by itself and 1.') ).

fof(kb_SUMO_867,axiom,
    s__subclass(s__NonnegativeInteger,s__Integer) ).

fof(kb_SUMO_868,axiom,
    s__instance(s__NonnegativeInteger__t,s__SetOrClass) ).

fof(kb_SUMO_869,axiom,
    s__subclass(s__NonnegativeInteger,s__NonnegativeRealNumber) ).

fof(kb_SUMO_870,axiom,
    s__documentation(s__NonnegativeInteger,s__EnglishLanguage,'An &%Integer that is greater than or equal to zero.') ).

fof(kb_SUMO_871,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__NonnegativeInteger)
       => greater(V__X,"-1") ) ) ).

fof(kb_SUMO_872,axiom,
    s__subclass(s__NegativeInteger,s__Integer) ).

fof(kb_SUMO_873,axiom,
    s__instance(s__NegativeInteger__t,s__SetOrClass) ).

fof(kb_SUMO_874,axiom,
    s__subclass(s__NegativeInteger,s__NegativeRealNumber) ).

fof(kb_SUMO_875,axiom,
    s__documentation(s__NegativeInteger,s__EnglishLanguage,'An &%Integer that is less than zero.') ).

fof(kb_SUMO_876,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__NegativeInteger)
       => greater("0",V__X) ) ) ).

fof(kb_SUMO_877,axiom,
    s__subclass(s__PositiveInteger,s__NonnegativeInteger) ).

fof(kb_SUMO_878,axiom,
    s__subclass(s__PositiveInteger,s__PositiveRealNumber) ).

fof(kb_SUMO_879,axiom,
    s__instance(s__PositiveInteger__t,s__SetOrClass) ).

fof(kb_SUMO_880,axiom,
    s__documentation(s__PositiveInteger,s__EnglishLanguage,'An &%Integer that is greater than zero.') ).

fof(kb_SUMO_881,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Quantity)
     => ( s__instance(V__X,s__PositiveInteger)
       => greater(V__X,"0") ) ) ).

fof(kb_SUMO_882,axiom,
    s__subclass(s__BinaryNumber,s__RealNumber) ).

fof(kb_SUMO_883,axiom,
    s__instance(s__BinaryNumber__t,s__SetOrClass) ).

fof(kb_SUMO_884,axiom,
    s__instance(s__RealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_885,axiom,
    s__documentation(s__BinaryNumber,s__EnglishLanguage,'Elements from the number system with base 2. Every &%BinaryNumber is expressed as a sequence of the digits 1 and 0.') ).

fof(kb_SUMO_886,axiom,
    s__subclass(s__ComplexNumber,s__Number) ).

fof(kb_SUMO_887,axiom,
    s__instance(s__ComplexNumber__t,s__SetOrClass) ).

fof(kb_SUMO_888,axiom,
    s__instance(s__Number__t,s__SetOrClass) ).

fof(kb_SUMO_889,axiom,
    s__disjoint(s__ComplexNumber,s__RealNumber) ).

fof(kb_SUMO_890,axiom,
    s__documentation(s__ComplexNumber,s__EnglishLanguage,'A &%Number that has the form: x + yi, where x and y are &%RealNumbers and i is the square root of -1.') ).

fof(kb_SUMO_891,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ComplexNumber)
     => ? [V__REAL1,V__REAL2] :
          ( s__instance(V__REAL2,s__Quantity)
          & s__instance(V__REAL1,s__Quantity)
          & s__instance(V__REAL1,s__RealNumber)
          & s__instance(V__REAL2,s__RealNumber)
          & V__NUMBER = plus(V__REAL1,times(V__REAL2,s__SquareRootFn("-1"))) ) ) ).

fof(kb_SUMO_892,axiom,
    s__subclass(s__PhysicalQuantity,s__Quantity) ).

fof(kb_SUMO_893,axiom,
    s__instance(s__PhysicalQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_894,axiom,
    s__instance(s__Quantity__t,s__SetOrClass) ).

fof(kb_SUMO_895,axiom,
    s__partition_3(s__PhysicalQuantity,s__ConstantQuantity,s__FunctionQuantity) ).

fof(kb_SUMO_896,axiom,
    s__documentation(s__PhysicalQuantity,s__EnglishLanguage,'A &%PhysicalQuantity is a measure of some quantifiable aspect of the modeled world, such as the earths diameter (a constant length) and the stress in a loaded deformable solid (a measure of stress, which is a function of three spatial coordinates). Every &%PhysicalQuantity is either a &%ConstantQuantity or &%FunctionQuantity. Instances of &%ConstantQuantity are dependent on a &%UnitOfMeasure, while instances of &%FunctionQuantity are &%Functions that map instances of &%ConstantQuantity to other instances of &%ConstantQuantity (e.g., a &%TimeDependentQuantity is a &%FunctionQuantity). Although the name and definition of &%PhysicalQuantity is borrowed from physics, a &%PhysicalQuantity need not be material. Aside from the dimensions of length, time, velocity, etc., nonphysical dimensions such as currency are also possible. Accordingly, amounts of money would be instances of &%PhysicalQuantity. A &%PhysicalQuantity is distinguished from a pure &%Number by the fact that the former is associated with a dimension of measurement.') ).

fof(kb_SUMO_897,axiom,
    s__subclass(s__ConstantQuantity,s__PhysicalQuantity) ).

fof(kb_SUMO_898,axiom,
    s__documentation(s__ConstantQuantity,s__EnglishLanguage,'A &%ConstantQuantity is a &%PhysicalQuantity that has a constant value, e.g. 3 &%Meters and 5 &%HourDurations. The magnitude (see &%MagnitudeFn) of every &%ConstantQuantity is a &%RealNumber. &%ConstantQuantity is distinguished from &%FunctionQuantity, in that each instance of the latter is formed through the mapping of one &%PhysicalQuantity to another &%PhysicalQuantity. Each instance of &%ConstantQuantity is expressed with the &%BinaryFunction &%MeasureFn, which takes a &%Number and a &%UnitOfMeasure as arguments. For example, 3 &%Meters is expressed as (&%MeasureFn 3 &%Meter). Instances of &%ConstantQuantity form a partial order (see &%PartialOrderingRelation) with the &%lessThan relation, since &%lessThan is a &%RelationExtendedToQuantities and &%lessThan is defined over the &%RealNumbers. The &%lessThan relation is not a total order (see &%TotalOrderingRelation) over the class &%ConstantQuantity since elements of some subclasses of &%ConstantQuantity (such as length quantities) are incomparable to elements of other subclasses of &%ConstantQuantity (such as mass quantities).') ).

fof(kb_SUMO_899,axiom,
    s__subclass(s__TimeMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_900,axiom,
    s__instance(s__TimeMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_901,axiom,
    s__documentation(s__TimeMeasure,s__EnglishLanguage,'The class of temporal durations (instances of &%TimeDuration) and positions of &%TimePoints and &%TimeIntervals along the universal timeline (instances of &%TimePosition).') ).

fof(kb_SUMO_902,axiom,
    s__subclass(s__TimeDuration,s__TimeMeasure) ).

fof(kb_SUMO_903,axiom,
    s__instance(s__TimeDuration__t,s__SetOrClass) ).

fof(kb_SUMO_904,axiom,
    s__documentation(s__TimeDuration,s__EnglishLanguage,'Any measure of length of time, with or without respect to the universal timeline.') ).

fof(kb_SUMO_905,axiom,
    s__subclass(s__TimePosition,s__TimeMeasure) ).

fof(kb_SUMO_906,axiom,
    s__partition_3(s__TimePosition,s__TimeInterval,s__TimePoint) ).

fof(kb_SUMO_907,axiom,
    s__documentation(s__TimePosition,s__EnglishLanguage,'Any &%TimePoint or &%TimeInterval along the universal timeline from &%NegativeInfinity to &%PositiveInfinity.') ).

fof(kb_SUMO_908,axiom,
    s__subclass(s__TimeInterval,s__TimePosition) ).

fof(kb_SUMO_909,axiom,
    s__instance(s__TimeInterval__t,s__SetOrClass) ).

fof(kb_SUMO_910,axiom,
    s__instance(s__TimePosition__t,s__SetOrClass) ).

fof(kb_SUMO_911,axiom,
    s__documentation(s__TimeInterval,s__EnglishLanguage,'An interval of time. Note that a &%TimeInterval has both an extent and a location on the universal timeline. Note too that a &%TimeInterval has no gaps, i.e. this class contains only convex time intervals.') ).

fof(kb_SUMO_912,axiom,
    s__subclass(s__TimePoint,s__TimePosition) ).

fof(kb_SUMO_913,axiom,
    s__documentation(s__TimePoint,s__EnglishLanguage,'An extensionless point on the universal timeline. The &%TimePoints at which &%Processes occur can be known with various degrees of precision and approximation, but conceptually &%TimePoints are point-like and not interval-like. That is, it doesnt make sense to talk about how long a &%TimePoint lasts.') ).

fof(kb_SUMO_914,axiom,
    s__subclass(s__FunctionQuantity,s__PhysicalQuantity) ).

fof(kb_SUMO_915,axiom,
    s__documentation(s__FunctionQuantity,s__EnglishLanguage,'A &%FunctionQuantity is a &%PhysicalQuantity that is returned by a &%Function that maps from one or more instances of &%ConstantQuantity to another instance of &%ConstantQuantity. For example, the velocity of a particle would be represented by a &%FunctionQuantity relating values of time (which are instances of &%ConstantQuantity) to values of distance (also instances of &%ConstantQuantity). Note that all elements of the range of the &%Function corresponding to a &%FunctionQuantity have the same physical dimension as the &%FunctionQuantity itself.') ).

fof(kb_SUMO_916,axiom,
    s__subclass(s__UnaryConstantFunctionQuantity,s__FunctionQuantity) ).

fof(kb_SUMO_917,axiom,
    s__documentation(s__UnaryConstantFunctionQuantity,s__EnglishLanguage,'A &%subclass of &%FunctionQuantity, instances of which are returned by &%UnaryFunctions that map from one instance of the &%Class &%ConstantQuantity to another instance of the &%Class &%ConstantQuantity.') ).

fof(kb_SUMO_918,axiom,
    s__subclass(s__TimeDependentQuantity,s__UnaryConstantFunctionQuantity) ).

fof(kb_SUMO_919,axiom,
    s__instance(s__TimeDependentQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_920,axiom,
    s__instance(s__UnaryConstantFunctionQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_921,axiom,
    s__documentation(s__TimeDependentQuantity,s__EnglishLanguage,'A &%UnaryConstantFunctionQuantity of continuous time. All instances of this &%Class are returned by &%Functions that map a time quantity into another &%ConstantQuantity such as temperature. For example, the temperature at the top of the Empire State Building is a &%TimeDependentQuantity, since its value depends on the time.') ).

fof(kb_SUMO_922,axiom,
    s__subclass(s__SetOrClass,s__Abstract) ).

fof(kb_SUMO_923,axiom,
    s__partition_3(s__SetOrClass,s__Set,s__Class) ).

fof(kb_SUMO_924,axiom,
    s__documentation(s__SetOrClass,s__EnglishLanguage,'The &%SetOrClass of &%Sets and &%Classes, i.e. any instance of &%Abstract that has &%elements or &%instances.') ).

fof(kb_SUMO_925,axiom,
    s__subclass(s__Class,s__SetOrClass) ).

fof(kb_SUMO_926,axiom,
    s__instance(s__Class__t,s__SetOrClass) ).

fof(kb_SUMO_927,axiom,
    s__documentation(s__Class,s__EnglishLanguage,'&%Classes differ from &%Sets in three important respects. First, &%Classes are not assumed to be extensional. That is, distinct &%Classes might well have exactly the same instances. Second, &%Classes typically have an associated `condition that determines the instances of the &%Class. So, for example, the condition `human determines the &%Class of &%Humans. Note that some &%Classes might satisfy their own condition (e.g., the &%Class of &%Abstract things is &%Abstract) and hence be instances of themselves. Third, the instances of a class may occur only once within the class, i.e. a class cannot contain duplicate instances.') ).

fof(kb_SUMO_928,axiom,
    s__subclass(s__Set,s__SetOrClass) ).

fof(kb_SUMO_929,axiom,
    s__instance(s__Set__t,s__SetOrClass) ).

fof(kb_SUMO_930,axiom,
    s__documentation(s__Set,s__EnglishLanguage,'A &%SetOrClass that satisfies extensionality as well as other constraints specified by some choice of set theory. &%Sets differ from &%Classes in two important respects. First, &%Sets are extensional - two &%Sets with the same &%elements are identical. Second, a &%Set can be an arbitrary stock of objects. That is, there is no requirement that &%Sets have an associated condition that determines their membership. Note that &%Sets are not assumed to be unique sets, i.e. &%elements of a &%Set may occur more than once in the &%Set.') ).

fof(kb_SUMO_931,axiom,
    s__subclass(s__Relation,s__Abstract) ).

fof(kb_SUMO_932,axiom,
    s__disjointDecomposition_6(s__Relation,s__BinaryRelation,s__TernaryRelation,s__QuaternaryRelation,s__QuintaryRelation,s__VariableArityRelation) ).

fof(kb_SUMO_933,axiom,
    s__partition_4(s__Relation,s__Predicate,s__Function,s__List) ).

fof(kb_SUMO_934,axiom,
    s__partition_3(s__Relation,s__TotalValuedRelation,s__PartialValuedRelation) ).

fof(kb_SUMO_935,axiom,
    s__documentation(s__Relation,s__EnglishLanguage,'The &%Class of relations. There are three kinds of &%Relation: &%Predicate, &%Function, and &%List. &%Predicates and &%Functions both denote sets of ordered n-tuples. The difference between these two &%Classes is that &%Predicates cover formula-forming operators, while &%Functions cover term-forming operators. A &%List, on the other hand, is a particular ordered n-tuple.') ).

fof(kb_SUMO_936,axiom,
    s__subclass(s__SingleValuedRelation,s__Relation) ).

fof(kb_SUMO_937,axiom,
    s__subclass(s__SingleValuedRelation,s__InheritableRelation) ).

fof(kb_SUMO_938,axiom,
    s__documentation(s__SingleValuedRelation,s__EnglishLanguage,'A &%Relation is a &%SingleValuedRelation just in case an assignment of values to every argument position except the last one determines at most one assignment for the last argument position. Note that not all &%SingleValuedRelations are &%TotalValuedRelations.') ).

fof(kb_SUMO_939,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__depth(V__ROW1,V__ROW2,V__ITEM1)
          & s__depth(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_940,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Human)
        & s__instance(V__ITEM1,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( ( s__leader(V__ROW1,V__ITEM1)
          & s__leader(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_941,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( ( s__radius(V__ROW1,V__ITEM1)
          & s__radius(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_942,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Organism)
        & s__instance(V__ITEM1,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( ( s__father(V__ROW1,V__ITEM1)
          & s__father(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_943,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( ( s__diameter(V__ROW1,V__ITEM1)
          & s__diameter(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_944,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__CurrencyMeasure)
        & s__instance(V__ITEM1,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__monetaryValue(V__ROW1,V__ITEM1)
          & s__monetaryValue(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_945,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( ( s__geometricDistance(V__ROW1,V__ROW2,V__ITEM1)
          & s__geometricDistance(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_946,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Quantity)
        & s__instance(V__ITEM1,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( ( s__arcWeight(V__ROW1,V__ITEM1)
          & s__arcWeight(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_947,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__width(V__ROW1,V__ITEM1)
          & s__width(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_948,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__TimeDuration)
        & s__instance(V__ITEM1,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__age(V__ROW1,V__ITEM1)
          & s__age(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_949,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Day)
        & s__instance(V__ITEM1,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__date(V__ROW1,V__ITEM1)
          & s__date(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_950,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__altitude(V__ROW1,V__ROW2,V__ITEM1)
          & s__altitude(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_951,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Proposition)
        & s__instance(V__ITEM1,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( ( s__conclusion(V__ROW1,V__ITEM1)
          & s__conclusion(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_952,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__PositiveInteger)
        & s__instance(V__ITEM1,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( ( s__valence(V__ROW1,V__ITEM1)
          & s__valence(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_953,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__distance(V__ROW1,V__ROW2,V__ITEM1)
          & s__distance(V__ROW1,V__ROW2,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_954,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__LengthMeasure)
        & s__instance(V__ITEM1,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( ( s__length(V__ROW1,V__ITEM1)
          & s__length(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_955,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__CurrencyMeasure)
        & s__instance(V__ITEM1,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( ( s__transactionAmount(V__ROW1,V__ITEM1)
          & s__transactionAmount(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_956,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__Organism)
        & s__instance(V__ITEM1,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( ( s__mother(V__ROW1,V__ITEM1)
          & s__mother(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_957,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( ( s__uniqueIdentifier(V__ROW1,V__ITEM1)
          & s__uniqueIdentifier(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_958,axiom,
    ! [V__ROW1,V__ITEM1,V__ITEM2] :
      ( ( s__instance(V__ITEM2,s__RealNumber)
        & s__instance(V__ITEM1,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( ( s__average(V__ROW1,V__ITEM1)
          & s__average(V__ROW1,V__ITEM2) )
       => V__ITEM1 = V__ITEM2 ) ) ).

fof(kb_SUMO_959,axiom,
    s__subclass(s__TotalValuedRelation,s__Relation) ).

fof(kb_SUMO_960,axiom,
    s__subclass(s__TotalValuedRelation,s__InheritableRelation) ).

fof(kb_SUMO_961,axiom,
    s__documentation(s__TotalValuedRelation,s__EnglishLanguage,'A &%Relation is a &%TotalValuedRelation just in case there exists an assignment for the last argument position of the &%Relation given any assignment of values to every argument position except the last one. Note that declaring a &%Relation to be both a &%TotalValuedRelation and a &%SingleValuedRelation means that it is a total function.') ).

fof(kb_SUMO_962,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ? [V__VALENCE] :
          ( s__instance(s__geometricDistance__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__geometricDistance(V__ROW1,V__ROW2,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_963,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__OneDimensionalFigure)
     => ? [V__VALENCE] :
          ( s__instance(s__lineMeasure__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__lineMeasure(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_964,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Argument)
     => ? [V__VALENCE] :
          ( s__instance(s__premise__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__Proposition)
                & s__instance(V__VALENCE,s__Quantity)
                & s__premise(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_965,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Circle)
     => ? [V__VALENCE] :
          ( s__instance(s__diameter__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__diameter(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_966,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Argument)
     => ? [V__VALENCE] :
          ( s__instance(s__conclusion__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__Proposition)
                & s__instance(V__VALENCE,s__Quantity)
                & s__conclusion(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_967,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__TwoDimensionalAngle)
     => ? [V__VALENCE] :
          ( s__instance(s__angularMeasure__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__PlaneAngleMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__angularMeasure(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_968,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Circle)
     => ? [V__VALENCE] :
          ( s__instance(s__radius__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__LengthMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__radius(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_969,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__FinancialTransaction)
     => ? [V__VALENCE] :
          ( s__instance(s__transactionAmount__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__CurrencyMeasure)
                & s__instance(V__VALENCE,s__Quantity)
                & s__transactionAmount(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_970,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__TimeInterval)
     => ? [V__VALENCE] :
          ( s__instance(s__duration__m,s__Relation)
          & ( ! [V__NUMBER,V__ELEMENT,V__CLASS] :
                ( ( s__instance(V__CLASS,s__SetOrClass)
                  & s__instance(V__NUMBER,s__PositiveInteger) )
               => ( ( less(V__NUMBER,V__VALENCE)
                    & V__ELEMENT = s__ListOrderFn(s__ListFn_1(V__ROW1),V__NUMBER) )
                 => s__instance(V__ELEMENT,V__CLASS) ) )
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__TimeDuration)
                & s__instance(V__VALENCE,s__Quantity)
                & s__duration(V__ROW1,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_971,axiom,
    s__subclass(s__PartialValuedRelation,s__Relation) ).

fof(kb_SUMO_972,axiom,
    s__documentation(s__PartialValuedRelation,s__EnglishLanguage,'A &%Relation is a &%PartialValuedRelation just in case it is not a &%TotalValuedRelation, i.e. just in case assigning values to every argument position except the last one does not necessarily mean that there is a value assignment for the last argument position. Note that, if a &%Relation is both a &%PartialValuedRelation and a &%SingleValuedRelation, then it is a partial function.') ).

fof(kb_SUMO_973,axiom,
    s__subclass(s__BinaryRelation,s__Relation) ).

fof(kb_SUMO_974,axiom,
    s__subclass(s__BinaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_975,axiom,
    s__documentation(s__BinaryRelation,s__EnglishLanguage,'&%BinaryRelations are relations that are true only of pairs of things. &%BinaryRelations are represented as slots in frame systems.') ).

fof(kb_SUMO_976,axiom,
    s__subclass(s__ReflexiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_977,axiom,
    s__documentation(s__ReflexiveRelation,s__EnglishLanguage,'&%Relation ?REL is reflexive iff (?REL ?INST ?INST) for all ?INST.') ).

fof(kb_SUMO_978,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__identicalListItems(V__INST,V__INST) ) ).

fof(kb_SUMO_979,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeometricFigure)
     => s__geometricPart(V__INST,V__INST) ) ).

fof(kb_SUMO_980,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => s__familyRelation(V__INST,V__INST) ) ).

fof(kb_SUMO_981,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePosition)
     => s__temporalPart(V__INST,V__INST) ) ).

fof(kb_SUMO_982,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => s__overlapsTemporally(V__INST,V__INST) ) ).

fof(kb_SUMO_983,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => s__subAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_984,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Collection)
     => s__subCollection(V__INST,V__INST) ) ).

fof(kb_SUMO_985,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => greatereq(V__INST,V__INST) ) ).

fof(kb_SUMO_986,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__SetOrClass) )
     => s__equivalentContentClass(V__INST,V__INST) ) ).

fof(kb_SUMO_987,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => s__subclass(V__INST,V__INST) ) ).

fof(kb_SUMO_988,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Graph)
     => s__subGraph(V__INST,V__INST) ) ).

fof(kb_SUMO_989,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Relation)
     => s__subrelation(V__INST,V__INST) ) ).

fof(kb_SUMO_990,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__ContentBearingPhysical)
     => s__equivalentContentInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_991,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__subList(V__INST,V__INST) ) ).

fof(kb_SUMO_992,axiom,
    ! [V__INST] : s__relatedInternalConcept(V__INST,V__INST) ).

fof(kb_SUMO_993,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__SetOrClass) )
     => s__subsumesContentClass(V__INST,V__INST) ) ).

fof(kb_SUMO_994,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__connected(V__INST,V__INST) ) ).

fof(kb_SUMO_995,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => s__initialList(V__INST,V__INST) ) ).

fof(kb_SUMO_996,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__ContentBearingPhysical)
     => s__subsumesContentInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_997,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__copy(V__INST,V__INST) ) ).

fof(kb_SUMO_998,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => lesseq(V__INST,V__INST) ) ).

fof(kb_SUMO_999,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organization)
     => s__subOrganization(V__INST,V__INST) ) ).

fof(kb_SUMO_1000,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePoint)
     => s__beforeOrEqual(V__INST,V__INST) ) ).

fof(kb_SUMO_1001,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => s__overlapsSpatially(V__INST,V__INST) ) ).

fof(kb_SUMO_1002,axiom,
    ! [V__INST] : V__INST = V__INST ).

fof(kb_SUMO_1003,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Physical)
     => s__cooccur(V__INST,V__INST) ) ).

fof(kb_SUMO_1004,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => s__subProcess(V__INST,V__INST) ) ).

fof(kb_SUMO_1005,axiom,
    s__subclass(s__IrreflexiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1006,axiom,
    s__documentation(s__IrreflexiveRelation,s__EnglishLanguage,'&%Relation ?REL is irreflexive iff (?REL ?INST ?INST) holds for no value of ?INST.') ).

fof(kb_SUMO_1007,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__smaller(V__INST,V__INST) ) ).

fof(kb_SUMO_1008,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__NormativeAttribute) )
     => ~ s__modalAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1009,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__patient(V__INST,V__INST) ) ).

fof(kb_SUMO_1010,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__fills(V__INST,V__INST) ) ).

fof(kb_SUMO_1011,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Woman)
        & s__instance(V__INST,s__Man) )
     => ~ s__wife(V__INST,V__INST) ) ).

fof(kb_SUMO_1012,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimePoint)
     => ~ s__before(V__INST,V__INST) ) ).

fof(kb_SUMO_1013,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Object) )
     => ~ s__origin(V__INST,V__INST) ) ).

fof(kb_SUMO_1014,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__involvedInEvent(V__INST,V__INST) ) ).

fof(kb_SUMO_1015,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => ~ greater(V__INST,V__INST) ) ).

fof(kb_SUMO_1016,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Man)
     => ~ s__brother(V__INST,V__INST) ) ).

fof(kb_SUMO_1017,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__sibling(V__INST,V__INST) ) ).

fof(kb_SUMO_1018,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__authors(V__INST,V__INST) ) ).

fof(kb_SUMO_1019,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeographicArea)
     => ~ s__geographicSubregion(V__INST,V__INST) ) ).

fof(kb_SUMO_1020,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__finishes(V__INST,V__INST) ) ).

fof(kb_SUMO_1021,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Translocation)
        & s__instance(V__INST,s__Object) )
     => ~ s__changesLocation(V__INST,V__INST) ) ).

fof(kb_SUMO_1022,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__destination(V__INST,V__INST) ) ).

fof(kb_SUMO_1023,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Quantity)
     => ~ less(V__INST,V__INST) ) ).

fof(kb_SUMO_1024,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => ~ s__immediateSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1025,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Proposition) )
     => ~ s__realization(V__INST,V__INST) ) ).

fof(kb_SUMO_1026,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TimeInterval)
        & s__instance(V__INST,s__TimeDuration) )
     => ~ s__duration(V__INST,V__INST) ) ).

fof(kb_SUMO_1027,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__reflexiveOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1028,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__completelyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1029,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Woman)
     => ~ s__sister(V__INST,V__INST) ) ).

fof(kb_SUMO_1030,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Set)
     => ~ s__element(V__INST,V__INST) ) ).

fof(kb_SUMO_1031,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__considers(V__INST,V__INST) ) ).

fof(kb_SUMO_1032,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Process)
     => ~ s__causes(V__INST,V__INST) ) ).

fof(kb_SUMO_1033,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__UnitOfAtmosphericPressure) )
     => ~ s__barometricPressure(V__INST,V__INST) ) ).

fof(kb_SUMO_1034,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Relation)
        & s__instance(V__INST,s__PositiveInteger) )
     => ~ s__valence(V__INST,V__INST) ) ).

fof(kb_SUMO_1035,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__SelfConnectedObject)
        & s__instance(V__INST,s__Collection) )
     => ~ s__member(V__INST,V__INST) ) ).

fof(kb_SUMO_1036,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__superficialPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1037,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Attribute) )
     => ~ s__manner(V__INST,V__INST) ) ).

fof(kb_SUMO_1038,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__causesSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1039,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__closedOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1040,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__Attribute) )
     => ~ s__attribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1041,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__holdsObligation(V__INST,V__INST) ) ).

fof(kb_SUMO_1042,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__decreasesLikelihood(V__INST,V__INST) ) ).

fof(kb_SUMO_1043,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => ~ s__successorAttributeClosure(V__INST,V__INST) ) ).

fof(kb_SUMO_1044,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Agent) )
     => ~ s__experiencer(V__INST,V__INST) ) ).

fof(kb_SUMO_1045,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__irreflexiveOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1046,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__causesProposition(V__INST,V__INST) ) ).

fof(kb_SUMO_1047,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Object)
        & s__instance(V__INST,s__PhysicalQuantity) )
     => ~ s__measure(V__INST,V__INST) ) ).

fof(kb_SUMO_1048,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__precondition(V__INST,V__INST) ) ).

fof(kb_SUMO_1049,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Proposition)
     => ~ s__subProposition(V__INST,V__INST) ) ).

fof(kb_SUMO_1050,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__penetrates(V__INST,V__INST) ) ).

fof(kb_SUMO_1051,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Hole)
        & s__instance(V__INST,s__SelfConnectedObject) )
     => ~ s__hole(V__INST,V__INST) ) ).

fof(kb_SUMO_1052,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__crosses(V__INST,V__INST) ) ).

fof(kb_SUMO_1053,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__range(V__INST,V__INST) ) ).

fof(kb_SUMO_1054,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Motion)
        & s__instance(V__INST,s__Object) )
     => ~ s__path(V__INST,V__INST) ) ).

fof(kb_SUMO_1055,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__earlier(V__INST,V__INST) ) ).

fof(kb_SUMO_1056,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__starts(V__INST,V__INST) ) ).

fof(kb_SUMO_1057,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__editor(V__INST,V__INST) ) ).

fof(kb_SUMO_1058,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__ElementalSubstance)
        & s__instance(V__INST,s__PositiveInteger)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__atomicNumber(V__INST,V__INST) ) ).

fof(kb_SUMO_1059,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__believes(V__INST,V__INST) ) ).

fof(kb_SUMO_1060,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__trichotomizingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1061,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Formula)
        & s__instance(V__INST,s__CognitiveAgent) )
     => ~ s__holdsRight(V__INST,V__INST) ) ).

fof(kb_SUMO_1062,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__possesses(V__INST,V__INST) ) ).

fof(kb_SUMO_1063,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__partiallyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1064,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__GeopoliticalArea)
     => ~ s__geopoliticalSubdivision(V__INST,V__INST) ) ).

fof(kb_SUMO_1065,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__inhabits(V__INST,V__INST) ) ).

fof(kb_SUMO_1066,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__overlapsPartially(V__INST,V__INST) ) ).

fof(kb_SUMO_1067,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Text)
        & s__instance(V__INST,s__Organization)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__publishes(V__INST,V__INST) ) ).

fof(kb_SUMO_1068,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__knows(V__INST,V__INST) ) ).

fof(kb_SUMO_1069,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__spouse(V__INST,V__INST) ) ).

fof(kb_SUMO_1070,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__TimePosition)
        & s__instance(V__INST,s__Formula) )
     => ~ s__holdsDuring(V__INST,V__INST) ) ).

fof(kb_SUMO_1071,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__DirectionalAttribute) )
     => ~ s__direction(V__INST,V__INST) ) ).

fof(kb_SUMO_1072,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Motion)
        & s__instance(V__INST,s__Object) )
     => ~ s__moves(V__INST,V__INST) ) ).

fof(kb_SUMO_1073,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__Agent)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__hasSkill(V__INST,V__INST) ) ).

fof(kb_SUMO_1074,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__parent(V__INST,V__INST) ) ).

fof(kb_SUMO_1075,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Organism)
     => ~ s__ancestor(V__INST,V__INST) ) ).

fof(kb_SUMO_1076,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__exploits(V__INST,V__INST) ) ).

fof(kb_SUMO_1077,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Agent)
     => ~ s__uses(V__INST,V__INST) ) ).

fof(kb_SUMO_1078,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__ContentBearingPhysical)
        & s__instance(V__INST,s__Proposition) )
     => ~ s__containsInformation(V__INST,V__INST) ) ).

fof(kb_SUMO_1079,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__GraphPath)
        & s__instance(V__INST,s__PositiveInteger) )
     => ~ s__pathLength(V__INST,V__INST) ) ).

fof(kb_SUMO_1080,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__meetsSpatially(V__INST,V__INST) ) ).

fof(kb_SUMO_1081,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__properPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1082,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__TimeDuration)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__frequency(V__INST,V__INST) ) ).

fof(kb_SUMO_1083,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Man)
        & s__instance(V__INST,s__Woman) )
     => ~ s__husband(V__INST,V__INST) ) ).

fof(kb_SUMO_1084,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SelfConnectedObject)
     => ~ s__contains(V__INST,V__INST) ) ).

fof(kb_SUMO_1085,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__SetOrClass)
        & s__instance(V__INST,s__Function)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__rangeSubclass(V__INST,V__INST) ) ).

fof(kb_SUMO_1086,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Human)
        & s__instance(V__INST,s__Nation) )
     => ~ s__citizen(V__INST,V__INST) ) ).

fof(kb_SUMO_1087,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__interiorPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1088,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SetOrClass)
     => ~ s__immediateInstance(V__INST,V__INST) ) ).

fof(kb_SUMO_1089,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__List)
     => ~ s__inList(V__INST,V__INST) ) ).

fof(kb_SUMO_1090,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Object)
     => ~ s__larger(V__INST,V__INST) ) ).

fof(kb_SUMO_1091,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__EngineeringComponent)
     => ~ s__connectedEngineeringComponents(V__INST,V__INST) ) ).

fof(kb_SUMO_1092,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Agent) )
     => ~ s__agent(V__INST,V__INST) ) ).

fof(kb_SUMO_1093,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Process)
        & s__instance(V__INST,s__Object) )
     => ~ s__eventPartlyLocated(V__INST,V__INST) ) ).

fof(kb_SUMO_1094,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__CognitiveAgent)
        & s__instance(V__INST,s__Formula) )
     => ~ s__desires(V__INST,V__INST) ) ).

fof(kb_SUMO_1095,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__equivalenceRelationOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1096,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Language)
     => ~ s__expressedInLanguage(V__INST,V__INST) ) ).

fof(kb_SUMO_1097,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Physical)
        & s__instance(V__INST,s__Day) )
     => ~ s__date(V__INST,V__INST) ) ).

fof(kb_SUMO_1098,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__totalOrderingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1099,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__prevents(V__INST,V__INST) ) ).

fof(kb_SUMO_1100,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Attribute)
     => ~ s__successorAttribute(V__INST,V__INST) ) ).

fof(kb_SUMO_1101,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__Physical)
        & s__instance(V__INST,s__TimePosition) )
     => ~ s__time(V__INST,V__INST) ) ).

fof(kb_SUMO_1102,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__hasPurpose(V__INST,V__INST) ) ).

fof(kb_SUMO_1103,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__GraphElement)
        & s__instance(V__INST,s__Graph) )
     => ~ s__graphPart(V__INST,V__INST) ) ).

fof(kb_SUMO_1104,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__BinaryRelation)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__partialOrderingOn(V__INST,V__INST) ) ).

fof(kb_SUMO_1105,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__BinaryRelation)
     => ~ s__inverse(V__INST,V__INST) ) ).

fof(kb_SUMO_1106,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__BinaryFunction)
     => ~ s__identityElement(V__INST,V__INST) ) ).

fof(kb_SUMO_1107,axiom,
    ! [V__INST] :
      ( ( s__instance(V__INST,s__OrganicObject)
        & s__instance(V__INST,s__DevelopmentalAttribute) )
     => ~ s__developmentalForm(V__INST,V__INST) ) ).

fof(kb_SUMO_1108,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Formula)
     => ~ s__increasesLikelihood(V__INST,V__INST) ) ).

fof(kb_SUMO_1109,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Relation)
     => ~ s__disjointRelation(V__INST,V__INST) ) ).

fof(kb_SUMO_1110,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Plan)
     => ~ s__subPlan(V__INST,V__INST) ) ).

fof(kb_SUMO_1111,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__meetsTemporally(V__INST,V__INST) ) ).

fof(kb_SUMO_1112,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Process)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__inhibits(V__INST,V__INST) ) ).

fof(kb_SUMO_1113,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__TimeInterval)
     => ~ s__during(V__INST,V__INST) ) ).

fof(kb_SUMO_1114,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__SelfConnectedObject)
     => ~ s__surface(V__INST,V__INST) ) ).

fof(kb_SUMO_1115,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Hole)
     => ~ s__properlyFills(V__INST,V__INST) ) ).

fof(kb_SUMO_1116,axiom,
    ! [V__INST] :
      ( ( s__subclass(V__INST,s__Artifact)
        & s__instance(V__INST,s__SetOrClass) )
     => ~ s__version(V__INST,V__INST) ) ).

fof(kb_SUMO_1117,axiom,
    ! [V__INST] :
      ( s__instance(V__INST,s__Human)
     => ~ s__leader(V__INST,V__INST) ) ).

fof(kb_SUMO_1118,axiom,
    s__subclass(s__SymmetricRelation,s__BinaryRelation) ).

fof(kb_SUMO_1119,axiom,
    s__documentation(s__SymmetricRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is symmetric just iff (?REL ?INST1 ?INST2) imples (?REL ?INST2 ?INST1), for all ?INST1 and ?INST2.') ).

fof(kb_SUMO_1120,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( s__relatedEvent(V__INST1,V__INST2)
       => s__relatedEvent(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1121,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__overlapsPartially(V__INST1,V__INST2)
       => s__overlapsPartially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1122,axiom,
    ! [V__INST1,V__INST2] :
      ( V__INST1 = V__INST2
     => V__INST2 = V__INST1 ) ).

fof(kb_SUMO_1123,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__mutualAcquaintance(V__INST1,V__INST2)
       => s__mutualAcquaintance(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1124,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical) )
     => ( s__cooccur(V__INST1,V__INST2)
       => s__cooccur(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1125,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__INST1,V__INST2)
       => s__equivalentContentClass(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1126,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__sibling(V__INST1,V__INST2)
       => s__sibling(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1127,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__relative(V__INST1,V__INST2)
       => s__relative(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1128,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( s__independentProbability(V__INST1,V__INST2)
       => s__independentProbability(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1129,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__spouse(V__INST1,V__INST2)
       => s__spouse(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1130,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__meetsSpatially(V__INST1,V__INST2)
       => s__meetsSpatially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1131,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation) )
     => ( s__inverse(V__INST1,V__INST2)
       => s__inverse(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1132,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__copy(V__INST1,V__INST2)
       => s__copy(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1133,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__INST1,V__INST2)
       => s__equivalentContentInstance(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1134,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST1,s__Proposition) )
     => ( s__consistent(V__INST1,V__INST2)
       => s__consistent(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1135,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( s__identicalListItems(V__INST1,V__INST2)
       => s__identicalListItems(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1136,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__INST1,V__INST2)
       => s__overlapsTemporally(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1137,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__overlapsSpatially(V__INST1,V__INST2)
       => s__overlapsSpatially(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1138,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( s__familyRelation(V__INST1,V__INST2)
       => s__familyRelation(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1139,axiom,
    ! [V__INST1,V__INST2] :
      ( s__relatedInternalConcept(V__INST1,V__INST2)
     => s__relatedInternalConcept(V__INST2,V__INST1) ) ).

fof(kb_SUMO_1140,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( s__legalRelation(V__INST1,V__INST2)
       => s__legalRelation(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1141,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( s__connected(V__INST1,V__INST2)
       => s__connected(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1142,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( s__disjoint(V__INST1,V__INST2)
       => s__disjoint(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1143,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__EngineeringComponent)
        & s__instance(V__INST1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__INST1,V__INST2)
       => s__connectedEngineeringComponents(V__INST2,V__INST1) ) ) ).

fof(kb_SUMO_1144,axiom,
    s__subclass(s__AsymmetricRelation,s__IrreflexiveRelation) ).

fof(kb_SUMO_1145,axiom,
    s__subclass(s__AsymmetricRelation,s__AntisymmetricRelation) ).

fof(kb_SUMO_1146,axiom,
    s__documentation(s__AsymmetricRelation,s__EnglishLanguage,'A &%BinaryRelation is asymmetric if and only if it is both an &%AntisymmetricRelation and an &%IrreflexiveRelation.') ).

fof(kb_SUMO_1147,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__AsymmetricRelation)
    <=> ( s__instance(V__REL,s__AntisymmetricRelation)
        & s__instance(V__REL,s__IrreflexiveRelation) ) ) ).

fof(kb_SUMO_1148,axiom,
    s__subclass(s__AntisymmetricRelation,s__BinaryRelation) ).

fof(kb_SUMO_1149,axiom,
    s__instance(s__AntisymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1150,axiom,
    s__documentation(s__AntisymmetricRelation,s__EnglishLanguage,'&%BinaryRelation ?REL is an &%AntisymmetricRelation if for distinct ?INST1 and ?INST2, (?REL ?INST1 ?INST2) implies not (?REL ?INST2 ?INST1). In other words, for all ?INST1 and ?INST2, (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST1) imply that ?INST1 and ?INST2 are identical. Note that it is possible for an &%AntisymmetricRelation to be a &%ReflexiveRelation.') ).

fof(kb_SUMO_1151,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__INST1,V__INST2)
          & s__subsumesContentInstance(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1152,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__agent(V__INST1,V__INST2)
          & s__agent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1153,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__hasPurpose(V__INST1,V__INST2)
          & s__hasPurpose(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1154,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ElementalSubstance)
        & s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ElementalSubstance)
        & s__instance(V__INST1,s__PositiveInteger)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__atomicNumber(V__INST1,V__INST2)
          & s__atomicNumber(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1155,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Man)
        & s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Woman)
        & s__instance(V__INST1,s__Man) )
     => ( ( s__wife(V__INST1,V__INST2)
          & s__wife(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1156,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__fills(V__INST1,V__INST2)
          & s__fills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1157,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__totalOrderingOn(V__INST1,V__INST2)
          & s__totalOrderingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1158,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__causes(V__INST1,V__INST2)
          & s__causes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1159,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Set)
        & s__instance(V__INST1,s__Set) )
     => ( ( s__element(V__INST1,V__INST2)
          & s__element(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1160,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__range(V__INST1,V__INST2)
          & s__range(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1161,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human) )
     => ( ( s__leader(V__INST1,V__INST2)
          & s__leader(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1162,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__partialOrderingOn(V__INST1,V__INST2)
          & s__partialOrderingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1163,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__involvedInEvent(V__INST1,V__INST2)
          & s__involvedInEvent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1164,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__properlyFills(V__INST1,V__INST2)
          & s__properlyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1165,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation)
        & s__instance(V__INST1,s__PositiveInteger) )
     => ( ( s__valence(V__INST1,V__INST2)
          & s__valence(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1166,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PositiveInteger)
        & s__instance(V__INST2,s__GraphPath)
        & s__instance(V__INST1,s__GraphPath)
        & s__instance(V__INST1,s__PositiveInteger) )
     => ( ( s__pathLength(V__INST1,V__INST2)
          & s__pathLength(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1167,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Day)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical)
        & s__instance(V__INST1,s__Day) )
     => ( ( s__date(V__INST1,V__INST2)
          & s__date(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1168,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Nation)
        & s__instance(V__INST2,s__Human)
        & s__instance(V__INST1,s__Human)
        & s__instance(V__INST1,s__Nation) )
     => ( ( s__citizen(V__INST1,V__INST2)
          & s__citizen(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1169,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__realization(V__INST1,V__INST2)
          & s__realization(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1170,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__hole(V__INST1,V__INST2)
          & s__hole(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1171,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Collection)
        & s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__member(V__INST1,V__INST2)
          & s__member(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1172,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__holdsObligation(V__INST1,V__INST2)
          & s__holdsObligation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1173,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__inList(V__INST1,V__INST2)
          & s__inList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1174,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( lesseq(V__INST1,V__INST2)
          & lesseq(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1175,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__PhysicalQuantity)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__PhysicalQuantity) )
     => ( ( s__measure(V__INST1,V__INST2)
          & s__measure(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1176,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Language)
        & s__instance(V__INST1,s__Language) )
     => ( ( s__expressedInLanguage(V__INST1,V__INST2)
          & s__expressedInLanguage(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1177,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__uses(V__INST1,V__INST2)
          & s__uses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1178,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeopoliticalArea)
        & s__instance(V__INST1,s__GeopoliticalArea) )
     => ( ( s__geopoliticalSubdivision(V__INST1,V__INST2)
          & s__geopoliticalSubdivision(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1179,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__eventPartlyLocated(V__INST1,V__INST2)
          & s__eventPartlyLocated(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1180,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__initialList(V__INST1,V__INST2)
          & s__initialList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1181,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__completelyFills(V__INST1,V__INST2)
          & s__completelyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1182,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__beforeOrEqual(V__INST1,V__INST2)
          & s__beforeOrEqual(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1183,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__penetrates(V__INST1,V__INST2)
          & s__penetrates(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1184,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__crosses(V__INST1,V__INST2)
          & s__crosses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1185,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__containsInformation(V__INST1,V__INST2)
          & s__containsInformation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1186,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__OrganicObject)
        & s__instance(V__INST1,s__OrganicObject)
        & s__instance(V__INST1,s__DevelopmentalAttribute) )
     => ( ( s__developmentalForm(V__INST1,V__INST2)
          & s__developmentalForm(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1187,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__temporalPart(V__INST1,V__INST2)
          & s__temporalPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1188,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__CognitiveAgent) )
     => ( ( s__holdsRight(V__INST1,V__INST2)
          & s__holdsRight(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1189,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeographicArea)
        & s__instance(V__INST1,s__GeographicArea) )
     => ( ( s__geographicSubregion(V__INST1,V__INST2)
          & s__geographicSubregion(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1190,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__contains(V__INST1,V__INST2)
          & s__contains(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1191,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__desires(V__INST1,V__INST2)
          & s__desires(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1192,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__knows(V__INST1,V__INST2)
          & s__knows(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1193,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Graph)
        & s__instance(V__INST2,s__GraphElement)
        & s__instance(V__INST1,s__GraphElement)
        & s__instance(V__INST1,s__Graph) )
     => ( ( s__graphPart(V__INST1,V__INST2)
          & s__graphPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1194,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__subList(V__INST1,V__INST2)
          & s__subList(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1195,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__reflexiveOn(V__INST1,V__INST2)
          & s__reflexiveOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1196,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__surface(V__INST1,V__INST2)
          & s__surface(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1197,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__destination(V__INST1,V__INST2)
          & s__destination(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1198,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateSubclass(V__INST1,V__INST2)
          & s__immediateSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1199,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__INST1,V__INST2)
          & s__subsumesContentClass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1200,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__time(V__INST1,V__INST2)
          & s__time(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1201,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation) )
     => ( ( s__subrelation(V__INST1,V__INST2)
          & s__subrelation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1202,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__causesSubclass(V__INST1,V__INST2)
          & s__causesSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1203,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Motion)
        & s__instance(V__INST1,s__Motion)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__moves(V__INST1,V__INST2)
          & s__moves(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1204,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__authors(V__INST1,V__INST2)
          & s__authors(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1205,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__manner(V__INST1,V__INST2)
          & s__manner(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1206,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Hole)
        & s__instance(V__INST1,s__Hole) )
     => ( ( s__partiallyFills(V__INST1,V__INST2)
          & s__partiallyFills(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1207,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Translocation)
        & s__instance(V__INST1,s__Translocation)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__changesLocation(V__INST1,V__INST2)
          & s__changesLocation(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1208,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Collection)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__subCollection(V__INST1,V__INST2)
          & s__subCollection(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1209,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__hasSkill(V__INST1,V__INST2)
          & s__hasSkill(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1210,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Motion)
        & s__instance(V__INST1,s__Motion)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__path(V__INST1,V__INST2)
          & s__path(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1211,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__precondition(V__INST1,V__INST2)
          & s__precondition(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1212,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__holdsDuring(V__INST1,V__INST2)
          & s__holdsDuring(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1213,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__parent(V__INST1,V__INST2)
          & s__parent(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1214,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greatereq(V__INST1,V__INST2)
          & greatereq(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1215,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__successorAttribute(V__INST1,V__INST2)
          & s__successorAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1216,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateInstance(V__INST1,V__INST2)
          & s__immediateInstance(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1217,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__patient(V__INST1,V__INST2)
          & s__patient(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1218,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__possesses(V__INST1,V__INST2)
          & s__possesses(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1219,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__GeometricFigure)
        & s__instance(V__INST1,s__GeometricFigure) )
     => ( ( s__geometricPart(V__INST1,V__INST2)
          & s__geometricPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1220,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subclass(V__INST1,V__INST2)
          & s__subclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1221,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__attribute(V__INST1,V__INST2)
          & s__attribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1222,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__inhabits(V__INST1,V__INST2)
          & s__inhabits(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1223,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__closedOn(V__INST1,V__INST2)
          & s__closedOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1224,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__subProcess(V__INST1,V__INST2)
          & s__subProcess(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1225,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__BinaryFunction)
        & s__instance(V__INST1,s__BinaryFunction) )
     => ( ( s__identityElement(V__INST1,V__INST2)
          & s__identityElement(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1226,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__located(V__INST1,V__INST2)
          & s__located(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1227,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__subOrganization(V__INST1,V__INST2)
          & s__subOrganization(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1228,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Woman)
        & s__instance(V__INST2,s__Man)
        & s__instance(V__INST1,s__Man)
        & s__instance(V__INST1,s__Woman) )
     => ( ( s__husband(V__INST1,V__INST2)
          & s__husband(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1229,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__Function)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__SetOrClass)
        & s__instance(V__INST1,s__Function)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__rangeSubclass(V__INST1,V__INST2)
          & s__rangeSubclass(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1230,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__properPart(V__INST1,V__INST2)
          & s__properPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1231,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__origin(V__INST1,V__INST2)
          & s__origin(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1232,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__causesProposition(V__INST1,V__INST2)
          & s__causesProposition(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1233,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeDuration)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval)
        & s__instance(V__INST1,s__TimeDuration) )
     => ( ( s__duration(V__INST1,V__INST2)
          & s__duration(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1234,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Artifact)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Artifact)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__version(V__INST1,V__INST2)
          & s__version(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1235,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__exploits(V__INST1,V__INST2)
          & s__exploits(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1236,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__DirectionalAttribute)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__DirectionalAttribute) )
     => ( ( s__direction(V__INST1,V__INST2)
          & s__direction(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1237,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process)
        & s__instance(V__INST1,s__Agent) )
     => ( ( s__experiencer(V__INST1,V__INST2)
          & s__experiencer(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1238,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Agent)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Agent)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__editor(V__INST1,V__INST2)
          & s__editor(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1239,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__interiorPart(V__INST1,V__INST2)
          & s__interiorPart(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1240,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__UnitOfAtmosphericPressure)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object)
        & s__instance(V__INST1,s__UnitOfAtmosphericPressure) )
     => ( ( s__barometricPressure(V__INST1,V__INST2)
          & s__barometricPressure(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1241,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__subAttribute(V__INST1,V__INST2)
          & s__subAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1242,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__TimeDuration)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__TimeDuration)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__frequency(V__INST1,V__INST2)
          & s__frequency(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1243,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__meetsTemporally(V__INST1,V__INST2)
          & s__meetsTemporally(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1244,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__considers(V__INST1,V__INST2)
          & s__considers(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1245,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__equivalenceRelationOn(V__INST1,V__INST2)
          & s__equivalenceRelationOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1246,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__irreflexiveOn(V__INST1,V__INST2)
          & s__irreflexiveOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1247,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__NormativeAttribute)
        & s__instance(V__INST2,s__Formula)
        & s__instance(V__INST1,s__Formula)
        & s__instance(V__INST1,s__NormativeAttribute) )
     => ( ( s__modalAttribute(V__INST1,V__INST2)
          & s__modalAttribute(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1248,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__trichotomizingOn(V__INST1,V__INST2)
          & s__trichotomizingOn(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1249,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Formula)
        & s__instance(V__INST2,s__CognitiveAgent)
        & s__instance(V__INST1,s__CognitiveAgent)
        & s__instance(V__INST1,s__Formula) )
     => ( ( s__believes(V__INST1,V__INST2)
          & s__believes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1250,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__subclass(V__INST2,s__Text)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Text)
        & s__instance(V__INST1,s__Organization)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__publishes(V__INST1,V__INST2)
          & s__publishes(V__INST2,V__INST1) )
       => V__INST1 = V__INST2 ) ) ).

fof(kb_SUMO_1251,axiom,
    s__subclass(s__TrichotomizingRelation,s__BinaryRelation) ).

fof(kb_SUMO_1252,axiom,
    s__instance(s__TrichotomizingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1253,axiom,
    s__documentation(s__TrichotomizingRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is a &%TrichotomizingRelation just in case all ordered pairs consisting of distinct individuals are elements of ?REL.') ).

fof(kb_SUMO_1254,axiom,
    s__subclass(s__TransitiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1255,axiom,
    s__instance(s__TransitiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1256,axiom,
    s__documentation(s__TransitiveRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is transitive if (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST3) imply (?REL ?INST1 ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_1257,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Graph)
        & s__instance(V__INST2,s__Graph)
        & s__instance(V__INST1,s__Graph) )
     => ( ( s__subGraph(V__INST1,V__INST2)
          & s__subGraph(V__INST2,V__INST3) )
       => s__subGraph(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1258,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__superficialPart(V__INST1,V__INST2)
          & s__superficialPart(V__INST2,V__INST3) )
       => s__superficialPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1259,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Relation)
        & s__instance(V__INST2,s__Relation)
        & s__instance(V__INST1,s__Relation) )
     => ( ( s__subrelation(V__INST1,V__INST2)
          & s__subrelation(V__INST2,V__INST3) )
       => s__subrelation(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1260,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__copy(V__INST1,V__INST2)
          & s__copy(V__INST2,V__INST3) )
       => s__copy(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1261,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Proposition)
        & s__instance(V__INST2,s__Proposition)
        & s__instance(V__INST1,s__Proposition) )
     => ( ( s__subProposition(V__INST1,V__INST2)
          & s__subProposition(V__INST2,V__INST3) )
       => s__subProposition(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1262,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePosition)
        & s__instance(V__INST2,s__TimePosition)
        & s__instance(V__INST1,s__TimePosition) )
     => ( ( s__temporalPart(V__INST1,V__INST2)
          & s__temporalPart(V__INST2,V__INST3) )
       => s__temporalPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1263,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greater(V__INST1,V__INST2)
          & greater(V__INST2,V__INST3) )
       => greater(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1264,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__Process)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__Process)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Process)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__precondition(V__INST1,V__INST2)
          & s__precondition(V__INST2,V__INST3) )
       => s__precondition(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1265,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__ancestor(V__INST1,V__INST2)
          & s__ancestor(V__INST2,V__INST3) )
       => s__ancestor(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1266,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__Artifact)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__Artifact)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__Artifact)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__version(V__INST1,V__INST2)
          & s__version(V__INST2,V__INST3) )
       => s__version(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1267,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__crosses(V__INST1,V__INST2)
          & s__crosses(V__INST2,V__INST3) )
       => s__crosses(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1268,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Attribute)
        & s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__successorAttributeClosure(V__INST1,V__INST2)
          & s__successorAttributeClosure(V__INST2,V__INST3) )
       => s__successorAttributeClosure(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1269,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__identicalListItems(V__INST1,V__INST2)
          & s__identicalListItems(V__INST2,V__INST3) )
       => s__identicalListItems(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1270,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__starts(V__INST1,V__INST2)
          & s__starts(V__INST2,V__INST3) )
       => s__starts(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1271,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__larger(V__INST1,V__INST2)
          & s__larger(V__INST2,V__INST3) )
       => s__larger(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1272,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__earlier(V__INST1,V__INST2)
          & s__earlier(V__INST2,V__INST3) )
       => s__earlier(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1273,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__initialList(V__INST1,V__INST2)
          & s__initialList(V__INST2,V__INST3) )
       => s__initialList(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1274,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Integer)
        & s__instance(V__INST2,s__Integer)
        & s__instance(V__INST1,s__Integer) )
     => ( ( s__multiplicativeFactor(V__INST1,V__INST2)
          & s__multiplicativeFactor(V__INST2,V__INST3) )
       => s__multiplicativeFactor(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1275,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( lesseq(V__INST1,V__INST2)
          & lesseq(V__INST2,V__INST3) )
       => lesseq(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1276,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__DevelopmentalAttribute)
        & s__instance(V__INST2,s__OrganicObject)
        & s__instance(V__INST1,s__OrganicObject) )
     => ( ( s__developmentalForm(V__INST1,V__INST2)
          & s__developmentalForm(V__INST2,V__INST3) )
       => s__developmentalForm(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1277,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePoint)
        & s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__before(V__INST1,V__INST2)
          & s__before(V__INST2,V__INST3) )
       => s__before(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1278,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__interiorPart(V__INST1,V__INST2)
          & s__interiorPart(V__INST2,V__INST3) )
       => s__interiorPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1279,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__INST1,V__INST2)
          & s__subsumesContentClass(V__INST2,V__INST3) )
       => s__subsumesContentClass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1280,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeographicArea)
        & s__instance(V__INST2,s__GeographicArea)
        & s__instance(V__INST1,s__GeographicArea) )
     => ( ( s__geographicSubregion(V__INST1,V__INST2)
          & s__geographicSubregion(V__INST2,V__INST3) )
       => s__geographicSubregion(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1281,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__smaller(V__INST1,V__INST2)
          & s__smaller(V__INST2,V__INST3) )
       => s__smaller(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1282,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( less(V__INST1,V__INST2)
          & less(V__INST2,V__INST3) )
       => less(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1283,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__finishes(V__INST1,V__INST2)
          & s__finishes(V__INST2,V__INST3) )
       => s__finishes(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1284,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( V__INST1 = V__INST2
        & V__INST2 = V__INST3 )
     => V__INST1 = V__INST3 ) ).

fof(kb_SUMO_1285,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Attribute)
        & s__instance(V__INST2,s__Attribute)
        & s__instance(V__INST1,s__Attribute) )
     => ( ( s__subAttribute(V__INST1,V__INST2)
          & s__subAttribute(V__INST2,V__INST3) )
       => s__subAttribute(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1286,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Plan)
        & s__instance(V__INST2,s__Plan)
        & s__instance(V__INST1,s__Plan) )
     => ( ( s__subPlan(V__INST1,V__INST2)
          & s__subPlan(V__INST2,V__INST3) )
       => s__subPlan(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1287,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__familyRelation(V__INST1,V__INST2)
          & s__familyRelation(V__INST2,V__INST3) )
       => s__familyRelation(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1288,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Human)
        & s__instance(V__INST2,s__Man)
        & s__instance(V__INST1,s__Man) )
     => ( ( s__brother(V__INST1,V__INST2)
          & s__brother(V__INST2,V__INST3) )
       => s__brother(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1289,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Quantity)
        & s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( greatereq(V__INST1,V__INST2)
          & greatereq(V__INST2,V__INST3) )
       => greatereq(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1290,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__subclass(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST3,s__SetOrClass)
        & s__subclass(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__SetOrClass)
        & s__subclass(V__INST1,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__equivalentContentClass(V__INST1,V__INST2)
          & s__equivalentContentClass(V__INST2,V__INST3) )
       => s__equivalentContentClass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1291,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organization)
        & s__instance(V__INST2,s__Organization)
        & s__instance(V__INST1,s__Organization) )
     => ( ( s__subOrganization(V__INST1,V__INST2)
          & s__subOrganization(V__INST2,V__INST3) )
       => s__subOrganization(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1292,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__INST1,V__INST2)
          & s__subsumesContentInstance(V__INST2,V__INST3) )
       => s__subsumesContentInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1293,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__List)
        & s__instance(V__INST2,s__List)
        & s__instance(V__INST1,s__List) )
     => ( ( s__subList(V__INST1,V__INST2)
          & s__subList(V__INST2,V__INST3) )
       => s__subList(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1294,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__subclass(V__INST1,V__INST2)
          & s__subclass(V__INST2,V__INST3) )
       => s__subclass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1295,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__during(V__INST1,V__INST2)
          & s__during(V__INST2,V__INST3) )
       => s__during(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1296,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Process)
        & s__instance(V__INST2,s__Process)
        & s__instance(V__INST1,s__Process) )
     => ( ( s__subProcess(V__INST1,V__INST2)
          & s__subProcess(V__INST2,V__INST3) )
       => s__subProcess(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1297,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Physical) )
     => ( ( s__located(V__INST1,V__INST2)
          & s__located(V__INST2,V__INST3) )
       => s__located(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1298,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__properPart(V__INST1,V__INST2)
          & s__properPart(V__INST2,V__INST3) )
       => s__properPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1299,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Collection)
        & s__instance(V__INST2,s__Collection)
        & s__instance(V__INST1,s__Collection) )
     => ( ( s__subCollection(V__INST1,V__INST2)
          & s__subCollection(V__INST2,V__INST3) )
       => s__subCollection(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1300,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__relatedInternalConcept(V__INST1,V__INST2)
        & s__relatedInternalConcept(V__INST2,V__INST3) )
     => s__relatedInternalConcept(V__INST1,V__INST3) ) ).

fof(kb_SUMO_1301,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeopoliticalArea)
        & s__instance(V__INST2,s__GeopoliticalArea)
        & s__instance(V__INST1,s__GeopoliticalArea) )
     => ( ( s__geopoliticalSubdivision(V__INST1,V__INST2)
          & s__geopoliticalSubdivision(V__INST2,V__INST3) )
       => s__geopoliticalSubdivision(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1302,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__ContentBearingPhysical)
        & s__instance(V__INST2,s__ContentBearingPhysical)
        & s__instance(V__INST1,s__ContentBearingPhysical) )
     => ( ( s__equivalentContentInstance(V__INST1,V__INST2)
          & s__equivalentContentInstance(V__INST2,V__INST3) )
       => s__equivalentContentInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1303,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Human)
        & s__instance(V__INST2,s__Woman)
        & s__instance(V__INST1,s__Woman) )
     => ( ( s__sister(V__INST1,V__INST2)
          & s__sister(V__INST2,V__INST3) )
       => s__sister(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1304,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimePoint)
        & s__instance(V__INST2,s__TimePoint)
        & s__instance(V__INST1,s__TimePoint) )
     => ( ( s__beforeOrEqual(V__INST1,V__INST2)
          & s__beforeOrEqual(V__INST2,V__INST3) )
       => s__beforeOrEqual(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1305,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__GeometricFigure)
        & s__instance(V__INST2,s__GeometricFigure)
        & s__instance(V__INST1,s__GeometricFigure) )
     => ( ( s__geometricPart(V__INST1,V__INST2)
          & s__geometricPart(V__INST2,V__INST3) )
       => s__geometricPart(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1306,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Physical)
        & s__instance(V__INST2,s__Physical)
        & s__instance(V__INST1,s__Physical) )
     => ( ( s__cooccur(V__INST1,V__INST2)
          & s__cooccur(V__INST2,V__INST3) )
       => s__cooccur(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1307,axiom,
    s__subclass(s__IntransitiveRelation,s__BinaryRelation) ).

fof(kb_SUMO_1308,axiom,
    s__documentation(s__IntransitiveRelation,s__EnglishLanguage,'A &%BinaryRelation ?REL is intransitive only if (?REL ?INST1 ?INST2) and (?REL ?INST2 ?INST3) imply not (?REL ?INST1 ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_1309,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Object)
        & s__instance(V__INST2,s__Object)
        & s__instance(V__INST1,s__Object) )
     => ( ( s__penetrates(V__INST1,V__INST2)
          & s__penetrates(V__INST2,V__INST3) )
       => ~ s__penetrates(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1310,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Organism)
        & s__instance(V__INST2,s__Organism)
        & s__instance(V__INST1,s__Organism) )
     => ( ( s__parent(V__INST1,V__INST2)
          & s__parent(V__INST2,V__INST3) )
       => ~ s__parent(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1311,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__Collection)
        & s__instance(V__INST2,s__Collection)
        & s__instance(V__INST2,s__SelfConnectedObject)
        & s__instance(V__INST1,s__SelfConnectedObject) )
     => ( ( s__member(V__INST1,V__INST2)
          & s__member(V__INST2,V__INST3) )
       => ~ s__member(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1312,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass) )
     => ( ( s__immediateInstance(V__INST1,V__INST2)
          & s__immediateInstance(V__INST2,V__INST3) )
       => ~ s__immediateInstance(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1313,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__BinaryRelation)
        & s__instance(V__INST2,s__BinaryRelation)
        & s__instance(V__INST1,s__BinaryRelation) )
     => ( ( s__inverse(V__INST1,V__INST2)
          & s__inverse(V__INST2,V__INST3) )
       => ~ s__inverse(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1314,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__TimeInterval)
        & s__instance(V__INST2,s__TimeInterval)
        & s__instance(V__INST1,s__TimeInterval) )
     => ( ( s__meetsTemporally(V__INST1,V__INST2)
          & s__meetsTemporally(V__INST2,V__INST3) )
       => ~ s__meetsTemporally(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1315,axiom,
    ! [V__INST1,V__INST2,V__INST3] :
      ( ( s__instance(V__INST3,s__SetOrClass)
        & s__instance(V__INST2,s__SetOrClass)
        & s__instance(V__INST1,s__SetOrClass) )
     => ( ( s__immediateSubclass(V__INST1,V__INST2)
          & s__immediateSubclass(V__INST2,V__INST3) )
       => ~ s__immediateSubclass(V__INST1,V__INST3) ) ) ).

fof(kb_SUMO_1316,axiom,
    s__subclass(s__PartialOrderingRelation,s__TransitiveRelation) ).

fof(kb_SUMO_1317,axiom,
    s__subclass(s__PartialOrderingRelation,s__AntisymmetricRelation) ).

fof(kb_SUMO_1318,axiom,
    s__subclass(s__PartialOrderingRelation,s__ReflexiveRelation) ).

fof(kb_SUMO_1319,axiom,
    s__documentation(s__PartialOrderingRelation,s__EnglishLanguage,'A &%BinaryRelation is a partial ordering if it is a &%ReflexiveRelation, an &%AntisymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_1320,axiom,
    s__subclass(s__TotalOrderingRelation,s__PartialOrderingRelation) ).

fof(kb_SUMO_1321,axiom,
    s__instance(s__TotalOrderingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1322,axiom,
    s__subclass(s__TotalOrderingRelation,s__TrichotomizingRelation) ).

fof(kb_SUMO_1323,axiom,
    s__documentation(s__TotalOrderingRelation,s__EnglishLanguage,'A &%BinaryRelation is a &%TotalOrderingRelation if it is a &%PartialOrderingRelation and a &%TrichotomizingRelation.') ).

fof(kb_SUMO_1324,axiom,
    s__subclass(s__EquivalenceRelation,s__TransitiveRelation) ).

fof(kb_SUMO_1325,axiom,
    s__subclass(s__EquivalenceRelation,s__SymmetricRelation) ).

fof(kb_SUMO_1326,axiom,
    s__subclass(s__EquivalenceRelation,s__ReflexiveRelation) ).

fof(kb_SUMO_1327,axiom,
    s__documentation(s__EquivalenceRelation,s__EnglishLanguage,'A &%BinaryRelation is an equivalence relation if it is a &%ReflexiveRelation, a &%SymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_1328,axiom,
    s__subclass(s__CaseRole,s__BinaryPredicate) ).

fof(kb_SUMO_1329,axiom,
    s__subclass(s__CaseRole,s__InheritableRelation) ).

fof(kb_SUMO_1330,axiom,
    s__instance(s__CaseRole__t,s__SetOrClass) ).

fof(kb_SUMO_1331,axiom,
    s__subclass(s__CaseRole,s__AsymmetricRelation) ).

fof(kb_SUMO_1332,axiom,
    s__documentation(s__CaseRole,s__EnglishLanguage,'The &%Class of &%Predicates relating the spatially distinguished parts of a &%Process. &%CaseRoles include, for example, the &%agent, &%patient or &%destination of an action, the flammable substance in a burning process, or the water that falls in rain.') ).

fof(kb_SUMO_1333,axiom,
    s__documentation(s__involvedInEvent__m,s__EnglishLanguage,'(involvedInEvent ?EVENT ?THING) means that in the &%Process ?EVENT, the &%Entity ?THING plays some &%CaseRole.') ).

fof(kb_SUMO_1334,axiom,
    s__instance(s__involvedInEvent__m,s__BinaryPredicate) ).

fof(kb_SUMO_1335,axiom,
    s__instance(s__involvedInEvent__m,s__AsymmetricRelation) ).

fof(kb_SUMO_1336,axiom,
    s__domain(s__involvedInEvent__m,"1",s__Process) ).

fof(kb_SUMO_1337,axiom,
    s__domain(s__involvedInEvent__m,"2",s__Entity) ).

fof(kb_SUMO_1338,axiom,
    ! [V__R] :
      ( s__instance(V__R,s__Relation)
     => ( s__instance(V__R,s__CaseRole)
       => s__subrelation(V__R,s__involvedInEvent__m) ) ) ).

fof(kb_SUMO_1339,axiom,
    s__instance(s__agent__m,s__CaseRole) ).

fof(kb_SUMO_1340,axiom,
    s__domain(s__agent__m,"1",s__Process) ).

fof(kb_SUMO_1341,axiom,
    s__domain(s__agent__m,"2",s__Agent) ).

fof(kb_SUMO_1342,axiom,
    s__subrelation(s__agent__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1343,axiom,
    s__documentation(s__agent__m,s__EnglishLanguage,'(&%agent ?PROCESS ?AGENT) means that ?AGENT is an active determinant, either animate or inanimate, of the &%Process ?PROCESS, with or without voluntary intention. For example, Eve is an &%agent in the following proposition: Eve bit an apple.') ).

fof(kb_SUMO_1344,axiom,
    s__instance(s__destination__m,s__CaseRole) ).

fof(kb_SUMO_1345,axiom,
    s__domain(s__destination__m,"1",s__Process) ).

fof(kb_SUMO_1346,axiom,
    s__domain(s__destination__m,"2",s__Entity) ).

fof(kb_SUMO_1347,axiom,
    s__subrelation(s__destination__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1348,axiom,
    s__documentation(s__destination__m,s__EnglishLanguage,'(destination ?PROCESS ?GOAL) means that ?GOAL is the target or goal of the Process ?PROCESS. For example, Danbury would be the destination in the following proposition: Bob went to Danbury. Note that this is a very general &%CaseRole and, in particular, that it covers the concepts of recipient and beneficiary. Thus, John would be the &%destination in the following proposition: Tom gave a book to John.') ).

fof(kb_SUMO_1349,axiom,
    s__instance(s__experiencer__m,s__CaseRole) ).

fof(kb_SUMO_1350,axiom,
    s__domain(s__experiencer__m,"1",s__Process) ).

fof(kb_SUMO_1351,axiom,
    s__domain(s__experiencer__m,"2",s__Agent) ).

fof(kb_SUMO_1352,axiom,
    s__subrelation(s__experiencer__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1353,axiom,
    s__documentation(s__experiencer__m,s__EnglishLanguage,'(&%experiencer ?PROCESS ?AGENT) means that ?AGENT experiences the &%Process ?PROCESS. For example, Yojo is the &%experiencer of seeing in the following proposition: Yojo sees the fish. Note that &%experiencer, unlike &%agent, does not entail a causal relation between its arguments.') ).

fof(kb_SUMO_1354,axiom,
    s__subrelation(s__instrument__m,s__patient__m) ).

fof(kb_SUMO_1355,axiom,
    s__domain(s__instrument__m,"1",s__Process) ).

fof(kb_SUMO_1356,axiom,
    s__domain(s__instrument__m,"2",s__Object) ).

fof(kb_SUMO_1357,axiom,
    s__documentation(s__instrument__m,s__EnglishLanguage,'(instrument ?EVENT ?TOOL) means that ?TOOL is used by an agent in bringing about ?EVENT and that ?TOOL is not changed by ?EVENT. For example, the key is an &%instrument in the following proposition: The key opened the door. Note that &%instrument and &%resource cannot be satisfied by the same ordered pair.') ).

fof(kb_SUMO_1358,axiom,
    s__instance(s__origin__m,s__CaseRole) ).

fof(kb_SUMO_1359,axiom,
    s__domain(s__origin__m,"1",s__Process) ).

fof(kb_SUMO_1360,axiom,
    s__domain(s__origin__m,"2",s__Object) ).

fof(kb_SUMO_1361,axiom,
    s__subrelation(s__origin__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1362,axiom,
    s__documentation(s__origin__m,s__EnglishLanguage,'(&%origin ?PROCESS ?SOURCE) means that ?SOURCE indicates where the ?Process began. Note that this relation implies that ?SOURCE is present at the beginning of the process, but need not participate throughout the process. For example, the submarine is the &%origin in the following proposition: the missile was launched from a submarine.') ).

fof(kb_SUMO_1363,axiom,
    s__instance(s__patient__m,s__CaseRole) ).

fof(kb_SUMO_1364,axiom,
    s__domain(s__patient__m,"1",s__Process) ).

fof(kb_SUMO_1365,axiom,
    s__domain(s__patient__m,"2",s__Entity) ).

fof(kb_SUMO_1366,axiom,
    s__subrelation(s__patient__m,s__involvedInEvent__m) ).

fof(kb_SUMO_1367,axiom,
    s__documentation(s__patient__m,s__EnglishLanguage,'(&%patient ?PROCESS ?ENTITY) means that ?ENTITY is a participant in ?PROCESS that may be moved, said, experienced, etc. For example, the direct objects in the sentences The cat swallowed the canary and Billy likes the beer would be examples of &%patients. Note that the &%patient of a &%Process may or may not undergo structural change as a result of the &%Process. The &%CaseRole of &%patient is used when one wants to specify as broadly as possible the object of a &%Process.') ).

fof(kb_SUMO_1368,axiom,
    s__subrelation(s__resource__m,s__patient__m) ).

fof(kb_SUMO_1369,axiom,
    s__domain(s__resource__m,"1",s__Process) ).

fof(kb_SUMO_1370,axiom,
    s__domain(s__resource__m,"2",s__Object) ).

fof(kb_SUMO_1371,axiom,
    s__disjointRelation(s__resource__m,s__result__m) ).

fof(kb_SUMO_1372,axiom,
    s__disjointRelation(s__resource__m,s__instrument__m) ).

fof(kb_SUMO_1373,axiom,
    s__disjointRelation(s__result__m,s__instrument__m) ).

fof(kb_SUMO_1374,axiom,
    s__documentation(s__resource__m,s__EnglishLanguage,'(&%resource ?PROCESS ?RESOURCE) means that ?RESOURCE is present at the beginning of ?PROCESS, is used by ?PROCESS, and as a consequence is changed by ?PROCESS. For example, soap is a &%resource in the following proposition: the gun was carved out of soap. Note that &%resource differs from &%instrument, another subrelation of &%patient, in that its internal or physical properties are altered in some way by the &%Process.') ).

fof(kb_SUMO_1375,axiom,
    s__subrelation(s__result__m,s__patient__m) ).

fof(kb_SUMO_1376,axiom,
    s__domain(s__result__m,"1",s__Process) ).

fof(kb_SUMO_1377,axiom,
    s__domain(s__result__m,"2",s__Entity) ).

fof(kb_SUMO_1378,axiom,
    s__documentation(s__result__m,s__EnglishLanguage,'(result ?ACTION ?OUTPUT) means that ?OUTPUT is a product of ?ACTION. For example, house is a &%result in the following proposition: Eric built a house.') ).

fof(kb_SUMO_1379,axiom,
    s__subclass(s__InheritableRelation,s__Relation) ).

fof(kb_SUMO_1380,axiom,
    s__documentation(s__InheritableRelation,s__EnglishLanguage,'The class of &%Relations whose properties can be inherited downward in the class hierarchy via the &%subrelation &%Predicate.') ).

fof(kb_SUMO_1381,axiom,
    s__subclass(s__ProbabilityRelation,s__Relation) ).

fof(kb_SUMO_1382,axiom,
    s__subclass(s__ProbabilityRelation,s__InheritableRelation) ).

fof(kb_SUMO_1383,axiom,
    s__documentation(s__ProbabilityRelation,s__EnglishLanguage,'The &%Class of &%Relations that permit assessment of the probability of an event or situation.') ).

fof(kb_SUMO_1384,axiom,
    s__instance(s__ProbabilityFn__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1385,axiom,
    s__instance(s__ProbabilityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_1386,axiom,
    s__instance(s__ProbabilityFn__m,s__UnaryFunction) ).

fof(kb_SUMO_1387,axiom,
    s__domain(s__ProbabilityFn__m,"1",s__Formula) ).

fof(kb_SUMO_1388,axiom,
    s__range(s__ProbabilityFn__m,s__RealNumber) ).

fof(kb_SUMO_1389,axiom,
    s__instance(s__ProbabilityFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_1390,axiom,
    s__documentation(s__ProbabilityFn__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations, &%ProbabilityFn is used to state the a priori probability of a state of affairs. (&%ProbabilityFn ?FORMULA) denotes the a priori probability of ?FORMULA.') ).

fof(kb_SUMO_1391,axiom,
    s__instance(s__conditionalProbability__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1392,axiom,
    s__instance(s__conditionalProbability__m,s__TernaryPredicate) ).

fof(kb_SUMO_1393,axiom,
    s__domain(s__conditionalProbability__m,"1",s__Formula) ).

fof(kb_SUMO_1394,axiom,
    s__domain(s__conditionalProbability__m,"2",s__Formula) ).

fof(kb_SUMO_1395,axiom,
    s__domain(s__conditionalProbability__m,"3",s__RealNumber) ).

fof(kb_SUMO_1396,axiom,
    s__documentation(s__conditionalProbability__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. &%conditionalProbability is used to state the numeric value of a conditional probability. (&%conditionalProbability ?FORMULA1 ?FORMULA2 ?NUMBER) means that the probability of ?FORMULA2 being true given that ?FORMULA1 is true is ?NUMBER.') ).

fof(kb_SUMO_1397,axiom,
    s__instance(s__increasesLikelihood__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1398,axiom,
    s__instance(s__increasesLikelihood__m,s__BinaryPredicate) ).

fof(kb_SUMO_1399,axiom,
    s__instance(s__increasesLikelihood__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_1400,axiom,
    s__domain(s__increasesLikelihood__m,"1",s__Formula) ).

fof(kb_SUMO_1401,axiom,
    s__domain(s__increasesLikelihood__m,"2",s__Formula) ).

fof(kb_SUMO_1402,axiom,
    s__disjointRelation(s__increasesLikelihood__m,s__decreasesLikelihood__m) ).

fof(kb_SUMO_1403,axiom,
    s__disjointRelation(s__increasesLikelihood__m,s__independentProbability__m) ).

fof(kb_SUMO_1404,axiom,
    s__disjointRelation(s__decreasesLikelihood__m,s__independentProbability__m) ).

fof(kb_SUMO_1405,axiom,
    s__documentation(s__increasesLikelihood__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%increasesLikelihood ?FORMULA1 ?FORMULA2) means that ?FORMULA2 is more likely to be true if ?FORMULA1 is true.') ).

fof(kb_SUMO_1406,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__increasesLikelihood(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => greater(V__NUMBER2,V__NUMBER1) ) ) ).

fof(kb_SUMO_1407,axiom,
    s__instance(s__decreasesLikelihood__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1408,axiom,
    s__instance(s__ProbabilityRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1409,axiom,
    s__instance(s__decreasesLikelihood__m,s__BinaryPredicate) ).

fof(kb_SUMO_1410,axiom,
    s__instance(s__decreasesLikelihood__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_1411,axiom,
    s__domain(s__decreasesLikelihood__m,"1",s__Formula) ).

fof(kb_SUMO_1412,axiom,
    s__domain(s__decreasesLikelihood__m,"2",s__Formula) ).

fof(kb_SUMO_1413,axiom,
    s__documentation(s__decreasesLikelihood__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%decreasesLikelihood ?FORMULA1 ?FORMULA2) means that ?FORMULA2 is less likely to be true if ?FORMULA1 is true.') ).

fof(kb_SUMO_1414,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__decreasesLikelihood(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => less(V__NUMBER2,V__NUMBER1) ) ) ).

fof(kb_SUMO_1415,axiom,
    s__instance(s__independentProbability__m,s__ProbabilityRelation) ).

fof(kb_SUMO_1416,axiom,
    s__instance(s__independentProbability__m,s__BinaryPredicate) ).

fof(kb_SUMO_1417,axiom,
    s__instance(s__independentProbability__m,s__SymmetricRelation) ).

fof(kb_SUMO_1418,axiom,
    s__domain(s__independentProbability__m,"1",s__Formula) ).

fof(kb_SUMO_1419,axiom,
    s__domain(s__independentProbability__m,"2",s__Formula) ).

fof(kb_SUMO_1420,axiom,
    s__documentation(s__independentProbability__m,s__EnglishLanguage,'One of the basic &%ProbabilityRelations. (&%independentProbability ?FORMULA1 ?FORMULA2) means that the probabilities of ?FORMULA1 and ?FORMULA2 being true are independent.') ).

fof(kb_SUMO_1421,axiom,
    ! [V__NUMBER2,V__FORMULA1,V__NUMBER1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__NUMBER2,s__RealNumber) )
     => ( ( s__independentProbability(V__FORMULA1,V__FORMULA2)
          & s__ProbabilityFn(V__FORMULA2) = V__NUMBER1
          & s__conditionalProbability(V__FORMULA1,V__FORMULA2,V__NUMBER2) )
       => V__NUMBER2 = V__NUMBER1 ) ) ).

fof(kb_SUMO_1422,axiom,
    ! [V__FORMULA1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__FORMULA2,s__Formula) )
     => ( s__increasesLikelihood(V__FORMULA1,V__FORMULA2)
        | s__decreasesLikelihood(V__FORMULA1,V__FORMULA2)
        | s__independentProbability(V__FORMULA1,V__FORMULA2) ) ) ).

fof(kb_SUMO_1423,axiom,
    s__subclass(s__SpatialRelation,s__Relation) ).

fof(kb_SUMO_1424,axiom,
    s__subclass(s__SpatialRelation,s__InheritableRelation) ).

fof(kb_SUMO_1425,axiom,
    s__documentation(s__SpatialRelation,s__EnglishLanguage,'The &%Class of &%Relations that are spatial in a wide sense. This &%Class includes mereological relations and topological relations.') ).

fof(kb_SUMO_1426,axiom,
    s__subclass(s__TemporalRelation,s__Relation) ).

fof(kb_SUMO_1427,axiom,
    s__instance(s__Relation__t,s__SetOrClass) ).

fof(kb_SUMO_1428,axiom,
    s__subclass(s__TemporalRelation,s__InheritableRelation) ).

fof(kb_SUMO_1429,axiom,
    s__documentation(s__TemporalRelation,s__EnglishLanguage,'The &%Class of temporal &%Relations. This &%Class includes notions of (temporal) topology of intervals, (temporal) schemata, and (temporal) extension.') ).

fof(kb_SUMO_1430,axiom,
    s__subclass(s__IntentionalRelation,s__InheritableRelation) ).

fof(kb_SUMO_1431,axiom,
    s__subclass(s__IntentionalRelation,s__Relation) ).

fof(kb_SUMO_1432,axiom,
    s__documentation(s__IntentionalRelation,s__EnglishLanguage,'The &%Class of &%Relations between an &%Agent and one or more &%Entities, where the &%Relation requires that the &%Agent have awareness of the &%Entity.') ).

fof(kb_SUMO_1433,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__considers(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1434,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__believes(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1435,axiom,
    ! [V__OBJ,V__ROW1,V__ROW2,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__prefers(V__AGENT,V__ROW1,V__ROW2)
          & s__inList(V__OBJ,s__ListFn_2(V__ROW1,V__ROW2)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1436,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( ( s__inScopeOfInterest(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1437,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__knows(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1438,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__wants(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1439,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Physical) )
     => ( ( s__needs(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1440,axiom,
    ! [V__OBJ,V__ROW1,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( ( s__desires(V__AGENT,V__ROW1)
          & s__inList(V__OBJ,s__ListFn_1(V__ROW1)) )
       => s__inScopeOfInterest(V__AGENT,V__OBJ) ) ) ).

fof(kb_SUMO_1441,axiom,
    s__instance(s__prefers__m,s__TernaryPredicate) ).

fof(kb_SUMO_1442,axiom,
    s__instance(s__prefers__m,s__IntentionalRelation) ).

fof(kb_SUMO_1443,axiom,
    s__instance(s__IntentionalRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1444,axiom,
    s__domain(s__prefers__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1445,axiom,
    s__domain(s__prefers__m,"2",s__Formula) ).

fof(kb_SUMO_1446,axiom,
    s__domain(s__prefers__m,"3",s__Formula) ).

fof(kb_SUMO_1447,axiom,
    s__documentation(s__prefers__m,s__EnglishLanguage,'(&%prefers ?AGENT ?FORMULA1 ?FORMULA2) means that &%CognitiveAgent ?AGENT prefers the state of affairs expressed by ?FORMULA1 over the state of affairs expressed by ?FORMULA2 all things being equal.') ).

fof(kb_SUMO_1448,axiom,
    s__subclass(s__PropositionalAttitude,s__IntentionalRelation) ).

fof(kb_SUMO_1449,axiom,
    s__instance(s__PropositionalAttitude__t,s__SetOrClass) ).

fof(kb_SUMO_1450,axiom,
    s__subclass(s__PropositionalAttitude,s__AsymmetricRelation) ).

fof(kb_SUMO_1451,axiom,
    s__subclass(s__PropositionalAttitude,s__InheritableRelation) ).

fof(kb_SUMO_1452,axiom,
    s__documentation(s__PropositionalAttitude,s__EnglishLanguage,'The &%Class of &%IntentionalRelations where the &%Agent has awareness of a &%Proposition.') ).

fof(kb_SUMO_1453,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1454,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__considers(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1455,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__believes(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1456,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__desires(V__AGENT,V__FORMULA)
       => s__instance(V__FORMULA,s__Formula) ) ) ).

fof(kb_SUMO_1457,axiom,
    s__subclass(s__ObjectAttitude,s__IntentionalRelation) ).

fof(kb_SUMO_1458,axiom,
    s__subclass(s__ObjectAttitude,s__InheritableRelation) ).

fof(kb_SUMO_1459,axiom,
    s__disjoint(s__ObjectAttitude,s__PropositionalAttitude) ).

fof(kb_SUMO_1460,axiom,
    s__documentation(s__ObjectAttitude,s__EnglishLanguage,'The &%Class of &%IntentionalRelations where the &%Agent has awareness of an instance of &%Physical.') ).

fof(kb_SUMO_1461,axiom,
    ! [V__AGENT,V__THING] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__wants(V__AGENT,V__THING)
       => s__instance(V__THING,s__Physical) ) ) ).

fof(kb_SUMO_1462,axiom,
    ! [V__AGENT,V__THING] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( s__needs(V__AGENT,V__THING)
       => s__instance(V__THING,s__Physical) ) ) ).

fof(kb_SUMO_1463,axiom,
    s__instance(s__inScopeOfInterest__m,s__BinaryPredicate) ).

fof(kb_SUMO_1464,axiom,
    s__instance(s__inScopeOfInterest__m,s__IntentionalRelation) ).

fof(kb_SUMO_1465,axiom,
    s__domain(s__inScopeOfInterest__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1466,axiom,
    s__domain(s__inScopeOfInterest__m,"2",s__Entity) ).

fof(kb_SUMO_1467,axiom,
    s__documentation(s__inScopeOfInterest__m,s__EnglishLanguage,'A very general &%Predicate. (&%inScopeOfInterest ?AGENT ?ENTITY) means that ?ENTITY is within the scope of interest of ?AGENT. Note that the interest indicated can be either positive or negative, i.e. the ?AGENT can have an interest in avoiding or promoting ?ENTITY.') ).

fof(kb_SUMO_1468,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( s__instance(V__AGENT,s__CognitiveAgent)
     => ( ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__instance(V__PROCESS,s__IntentionalProcess)
            & s__agent(V__PROCESS,V__AGENT)
            & s__patient(V__PROCESS,V__OBJECT) )
      <=> s__inScopeOfInterest(V__AGENT,V__OBJECT) ) ) ).

fof(kb_SUMO_1469,axiom,
    s__instance(s__needs__m,s__ObjectAttitude) ).

fof(kb_SUMO_1470,axiom,
    s__instance(s__needs__m,s__BinaryPredicate) ).

fof(kb_SUMO_1471,axiom,
    s__subrelation(s__needs__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1472,axiom,
    s__domain(s__needs__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1473,axiom,
    s__domain(s__needs__m,"2",s__Physical) ).

fof(kb_SUMO_1474,axiom,
    s__documentation(s__needs__m,s__EnglishLanguage,'(&%needs ?AGENT ?OBJECT) means that ?OBJECT is physically required for the continued existence of ?AGENT.') ).

fof(kb_SUMO_1475,axiom,
    ! [V__OBJECT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__OBJECT,s__Physical) )
     => ( s__needs(V__AGENT,V__OBJECT)
       => s__wants(V__AGENT,V__OBJECT) ) ) ).

fof(kb_SUMO_1476,axiom,
    s__instance(s__wants__m,s__ObjectAttitude) ).

fof(kb_SUMO_1477,axiom,
    s__instance(s__ObjectAttitude__t,s__SetOrClass) ).

fof(kb_SUMO_1478,axiom,
    s__instance(s__wants__m,s__BinaryPredicate) ).

fof(kb_SUMO_1479,axiom,
    s__subrelation(s__wants__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1480,axiom,
    s__relatedInternalConcept(s__wants__m,s__desires__m) ).

fof(kb_SUMO_1481,axiom,
    s__domain(s__wants__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1482,axiom,
    s__domain(s__wants__m,"2",s__Physical) ).

fof(kb_SUMO_1483,axiom,
    s__documentation(s__wants__m,s__EnglishLanguage,'(&%wants ?AGENT ?OBJECT) means that ?OBJECT is desired by ?AGENT, i.e. ?AGENT believes that ?OBJECT will satisfy one of its goals. Note that there is no implication that what is wanted by an agent is not already possessed by the agent.') ).

fof(kb_SUMO_1484,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__OBJ,s__Physical) )
     => ( s__wants(V__AGENT,V__OBJ)
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurposeForAgent(V__OBJ,V__PURP,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_1485,axiom,(( (! [V__OBJ,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__OBJ,s__Object)) => (s__wants(V__AGENT,V__OBJ) => s__desires(V__AGENT,'s__possesses(V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_1486,axiom,
    s__instance(s__desires__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1487,axiom,
    s__instance(s__desires__m,s__BinaryPredicate) ).

fof(kb_SUMO_1488,axiom,
    s__subrelation(s__desires__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1489,axiom,
    s__relatedInternalConcept(s__desires__m,s__wants__m) ).

fof(kb_SUMO_1490,axiom,
    s__domain(s__desires__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1491,axiom,
    s__domain(s__desires__m,"2",s__Formula) ).

fof(kb_SUMO_1492,axiom,
    s__documentation(s__desires__m,s__EnglishLanguage,'(&%desires ?AGENT ?FORMULA) means that ?AGENT wants to bring about the state of affairs expressed by ?FORMULA. Note that there is no implication that what is desired by the agent is not already true. Note too that &%desires is distinguished from &%wants only in that the former is a &%PropositionalAttitude, while &%wants is an &%ObjectAttitude.') ).

fof(kb_SUMO_1493,axiom,
    s__instance(s__considers__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1494,axiom,
    s__instance(s__considers__m,s__BinaryPredicate) ).

fof(kb_SUMO_1495,axiom,
    s__subrelation(s__considers__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1496,axiom,
    s__domain(s__considers__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1497,axiom,
    s__domain(s__considers__m,"2",s__Formula) ).

fof(kb_SUMO_1498,axiom,
    s__documentation(s__considers__m,s__EnglishLanguage,'(&%considers ?AGENT ?FORMULA) means that ?AGENT considers or wonders about the truth of the proposition expressed by ?FORMULA.') ).

fof(kb_SUMO_1499,axiom,
    s__instance(s__believes__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1500,axiom,
    s__instance(s__believes__m,s__BinaryPredicate) ).

fof(kb_SUMO_1501,axiom,
    s__subrelation(s__believes__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1502,axiom,
    s__domain(s__believes__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1503,axiom,
    s__domain(s__believes__m,"2",s__Formula) ).

fof(kb_SUMO_1504,axiom,
    s__documentation(s__believes__m,s__EnglishLanguage,'The epistemic predicate of belief. (&%believes ?AGENT ?FORMULA) means that ?AGENT believes the proposition expressed by ?FORMULA.') ).

%FOL fof(kb_SUMO_1505,axiom,(( (! [V__FORMULA,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__FORMULA,s__Formula)) => (s__believes(V__AGENT,V__FORMULA) => (? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__considers(V__AGENT,V__FORMULA)')))))) ))).

fof(kb_SUMO_1506,axiom,
    s__instance(s__knows__m,s__PropositionalAttitude) ).

fof(kb_SUMO_1507,axiom,
    s__instance(s__knows__m,s__BinaryPredicate) ).

fof(kb_SUMO_1508,axiom,
    s__subrelation(s__knows__m,s__inScopeOfInterest__m) ).

fof(kb_SUMO_1509,axiom,
    s__domain(s__knows__m,"1",s__CognitiveAgent) ).

fof(kb_SUMO_1510,axiom,
    s__domain(s__knows__m,"2",s__Formula) ).

fof(kb_SUMO_1511,axiom,
    s__documentation(s__knows__m,s__EnglishLanguage,'The epistemic predicate of knowing. (&%knows ?AGENT ?FORMULA) means that ?AGENT knows the proposition expressed by ?FORMULA. Note that &%knows entails conscious awareness, so this &%Predicate cannot be used to express tacit or subconscious or unconscious knowledge.') ).

fof(kb_SUMO_1512,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__believes(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_1513,axiom,
    ! [V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__knows(V__AGENT,V__FORMULA)
       => s__truth(V__FORMULA,'$true__m') ) ) ).

fof(kb_SUMO_1514,axiom,
    s__subclass(s__TernaryRelation,s__Relation) ).

fof(kb_SUMO_1515,axiom,
    s__subclass(s__TernaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1516,axiom,
    s__documentation(s__TernaryRelation,s__EnglishLanguage,'&%TernaryRelations relate three items. The two &%subclasses of &%TernaryRelation are &%TernaryPredicate and &%BinaryFunction.') ).

fof(kb_SUMO_1517,axiom,
    s__subclass(s__QuaternaryRelation,s__Relation) ).

fof(kb_SUMO_1518,axiom,
    s__subclass(s__QuaternaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1519,axiom,
    s__documentation(s__QuaternaryRelation,s__EnglishLanguage,'&%QuaternaryRelations relate four items. The two &%subclasses of &%QuaternaryRelation are &%QuaternaryPredicate and &%TernaryFunction.') ).

fof(kb_SUMO_1520,axiom,
    s__subclass(s__QuintaryRelation,s__Relation) ).

fof(kb_SUMO_1521,axiom,
    s__subclass(s__QuintaryRelation,s__InheritableRelation) ).

fof(kb_SUMO_1522,axiom,
    s__instance(s__QuintaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_1523,axiom,
    s__documentation(s__QuintaryRelation,s__EnglishLanguage,'&%QuintaryRelations relate five items. The two &%subclasses of &%QuintaryRelation are &%QuintaryPredicate and &%QuaternaryFunction.') ).

fof(kb_SUMO_1524,axiom,
    s__subclass(s__List,s__Relation) ).

fof(kb_SUMO_1525,axiom,
    s__documentation(s__List,s__EnglishLanguage,'Every &%List is a particular ordered n-tuple of items. Generally speaking, &%Lists are created by means of the &%ListFn &%Function, which takes any number of items as arguments and returns a &%List with the items in the same order. Anything, including other &%Lists, may be an item in a &%List. Note too that &%Lists are extensional - two lists that have the same items in the same order are identical. Note too that a &%List may contain no items. In that case, the &%List is the &%NullList.') ).

fof(kb_SUMO_1526,axiom,
    ! [V__LIST] :
      ( ( s__instance(V__LIST,s__List)
        & ~ s__instance(V__LIST,s__NullList__m) )
     => ? [V__NUMBER1,V__ITEM1] :
          ( s__ListOrderFn(V__LIST,V__NUMBER1) != V__ITEM1
          & ! [V__NUMBER2] :
              ( s__instance(V__LIST,s__List)
             => ( ( s__instance(V__NUMBER2,s__PositiveInteger)
                  & less(V__NUMBER2,V__NUMBER1) )
               => ? [V__ITEM2] :
                    ( s__instance(V__NUMBER1,s__PositiveInteger)
                    & s__ListOrderFn(V__LIST,V__NUMBER2) = V__ITEM2 ) ) ) ) ) ).

fof(kb_SUMO_1527,axiom,
    s__subclass(s__UniqueList,s__List) ).

fof(kb_SUMO_1528,axiom,
    s__instance(s__UniqueList__t,s__SetOrClass) ).

fof(kb_SUMO_1529,axiom,
    s__documentation(s__UniqueList,s__EnglishLanguage,'A &%List in which no item appears more than once, i.e. a &%List for which there are no distinct numbers ?NUMBER1 and ?NUMBER2 such that (&%ListOrderFn ?LIST ?NUMBER1) and (&%ListOrderFn ?LIST ?NUMBER2) return the same value.') ).

fof(kb_SUMO_1530,axiom,
    ! [V__LIST] :
      ( s__instance(V__LIST,s__UniqueList)
     => ! [V__NUMBER1,V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__NUMBER1,s__PositiveInteger)
            & s__instance(V__LIST,s__List) )
         => ( s__ListOrderFn(V__LIST,V__NUMBER1) = s__ListOrderFn(V__LIST,V__NUMBER2)
           => V__NUMBER1 = V__NUMBER2 ) ) ) ).

fof(kb_SUMO_1531,axiom,
    s__instance(s__NullList__m,s__List) ).

fof(kb_SUMO_1532,axiom,
    s__instance(s__List__t,s__SetOrClass) ).

fof(kb_SUMO_1533,axiom,
    s__documentation(s__NullList__m,s__EnglishLanguage,'The &%List that has no items. The uniqueness of &%NullList follows from the extensionality of &%Lists, i.e. the fact that two &%Lists with the same items in the same order are identical.') ).

fof(kb_SUMO_1534,axiom,
    ! [V__LIST] :
      ( V__LIST = s__NullList__m
    <=> ( s__instance(V__LIST,s__List)
        & ~ ? [V__ITEM] : s__inList(V__ITEM,V__LIST) ) ) ).

fof(kb_SUMO_1535,axiom,
    s__instance(s__ListFn__m,s__Function) ).

fof(kb_SUMO_1536,axiom,
    s__instance(s__ListFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_1537,axiom,
    s__range(s__ListFn__m,s__List) ).

fof(kb_SUMO_1538,axiom,
    s__documentation(s__ListFn__m,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ).

fof(kb_SUMO_1539,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__exhaustiveDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_1(V__ROW1))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1540,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__exhaustiveDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_2(V__ROW1,V__ROW2))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1541,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__exhaustiveDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1542,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__exhaustiveDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1543,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__exhaustiveDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1544,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__exhaustiveDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1545,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__exhaustiveDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__OBJ] :
          ( s__instance(V__CLASS,s__Class)
         => ( s__instance(V__OBJ,V__CLASS)
           => ? [V__ITEM] :
                ( s__instance(V__ITEM,s__SetOrClass)
                & s__inList(V__ITEM,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                & s__instance(V__OBJ,V__ITEM) ) ) ) ) ).

fof(kb_SUMO_1546,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__disjointDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_1(V__ROW1))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1547,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__disjointDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_2(V__ROW1,V__ROW2))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1548,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1549,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__disjointDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1550,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__disjointDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1551,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__disjointDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1552,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__disjointDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ITEM] :
          ( ( s__instance(V__ITEM,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( s__inList(V__ITEM,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__subclass(V__ITEM,V__CLASS) ) ) ) ).

fof(kb_SUMO_1553,axiom,
    ! [V__ROW1,V__CLASS] :
      ( s__disjointDecomposition_2(V__CLASS,V__ROW1)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_1(V__ROW1))
              & s__inList(V__ITEM2,s__ListFn_1(V__ROW1))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1554,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2] :
      ( s__disjointDecomposition_3(V__CLASS,V__ROW1,V__ROW2)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_2(V__ROW1,V__ROW2))
              & s__inList(V__ITEM2,s__ListFn_2(V__ROW1,V__ROW2))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1555,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
              & s__inList(V__ITEM2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1556,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4] :
      ( s__disjointDecomposition_5(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
              & s__inList(V__ITEM2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1557,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__disjointDecomposition_6(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
              & s__inList(V__ITEM2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1558,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__disjointDecomposition_7(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
              & s__inList(V__ITEM2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1559,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__disjointDecomposition_8(V__CLASS,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
     => ! [V__ITEM1,V__ITEM2] :
          ( ( s__instance(V__ITEM2,s__SetOrClass)
            & s__instance(V__ITEM1,s__SetOrClass)
            & s__instance(V__CLASS,s__Class) )
         => ( ( s__inList(V__ITEM1,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
              & s__inList(V__ITEM2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
              & V__ITEM1 != V__ITEM2 )
           => s__disjoint(V__ITEM1,V__ITEM2) ) ) ) ).

fof(kb_SUMO_1560,axiom,
    ! [V__ROW1,V__CLASS,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__CLASS,s__Class)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjointDecomposition_4(V__CLASS,V__ROW1,V__ROW2,V__ROW3)
      <=> ( s__disjoint(V__ROW1,V__ROW2)
          & s__disjoint(V__ROW2,V__ROW3)
          & s__disjoint(V__ROW3,V__ROW1) ) ) ) ).

fof(kb_SUMO_1561,axiom,
    s__instance(s__ListOrderFn__m,s__BinaryFunction) ).

fof(kb_SUMO_1562,axiom,
    s__instance(s__ListOrderFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_1563,axiom,
    s__domain(s__ListOrderFn__m,"1",s__List) ).

fof(kb_SUMO_1564,axiom,
    s__domain(s__ListOrderFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_1565,axiom,
    s__range(s__ListOrderFn__m,s__Entity) ).

fof(kb_SUMO_1566,axiom,
    s__documentation(s__ListOrderFn__m,s__EnglishLanguage,'(&%ListOrderFn ?LIST ?NUMBER) denotes the item that is in the ?NUMBER position in the &%List ?LIST. For example, (&%ListOrderFn (&%ListFn &%Monday &%Tuesday &%Wednesday) 2) would return the value &%Tuesday.') ).

fof(kb_SUMO_1567,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__instance(V__LIST1,s__List)
        & V__LIST1 != s__NullList__m
        & V__LIST2 != s__NullList__m
        & s__instance(V__LIST2,s__List)
        & ! [V__NUMBER] :
            ( ( s__instance(V__NUMBER,s__PositiveInteger)
              & s__instance(V__LIST1,s__List)
              & s__instance(V__LIST2,s__List) )
           => s__ListOrderFn(V__LIST1,V__NUMBER) = s__ListOrderFn(V__LIST2,V__NUMBER) ) )
     => V__LIST1 = V__LIST2 ) ).

fof(kb_SUMO_1568,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_1569,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1570,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Substance) ) ) ).

fof(kb_SUMO_1571,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1572,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1573,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1574,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1575,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1576,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1577,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1578,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_1579,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"4"),s__Object) ) ) ).

fof(kb_SUMO_1580,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1581,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1582,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1583,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_1584,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__FinancialTransaction) ) ) ).

fof(kb_SUMO_1585,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1586,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__UnitOfAtmosphericPressure) ) ) ).

fof(kb_SUMO_1587,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1588,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Nation) ) ) ).

fof(kb_SUMO_1589,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_1590,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_1591,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__ObjectiveNorm) ) ) ).

fof(kb_SUMO_1592,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Graph) ) ) ).

fof(kb_SUMO_1593,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1594,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1595,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1596,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1597,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1598,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__UnitOfMeasure) ) ) ).

fof(kb_SUMO_1599,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_1600,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_1601,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1602,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1603,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1604,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_1605,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_1606,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalQuantity) ) ) ).

fof(kb_SUMO_1607,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Object) ) ) ).

fof(kb_SUMO_1608,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OrganicObject) ) ) ).

fof(kb_SUMO_1609,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_1610,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1611,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1612,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1613,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Circle) ) ) ).

fof(kb_SUMO_1614,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_1615,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1616,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__EngineeringConnection) ) ) ).

fof(kb_SUMO_1617,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1618,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1619,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1620,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Relation) ) ) ).

fof(kb_SUMO_1621,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Man) ) ) ).

fof(kb_SUMO_1622,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Set) ) ) ).

fof(kb_SUMO_1623,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_1624,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_1625,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_1626,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_1627,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_1628,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_1629,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__exhaustiveDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_1630,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1631,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1632,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_1633,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_1634,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TwoDimensionalAngle) ) ) ).

fof(kb_SUMO_1635,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1636,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Man) ) ) ).

fof(kb_SUMO_1637,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1638,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1639,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1640,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1641,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1642,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1643,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1644,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1645,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1646,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Language) ) ) ).

fof(kb_SUMO_1647,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1648,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1649,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Language) ) ) ).

fof(kb_SUMO_1650,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_1651,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1652,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_1653,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1654,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_1655,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1656,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Plan) ) ) ).

fof(kb_SUMO_1657,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_1658,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1659,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Plan) ) ) ).

fof(kb_SUMO_1660,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1661,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1662,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1663,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Organization) ) ) ).

fof(kb_SUMO_1664,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1665,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_1666,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1667,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_1668,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1669,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1670,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1671,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1672,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__RealNumber) ) ) ).

fof(kb_SUMO_1673,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1674,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_1675,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1676,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Circle) ) ) ).

fof(kb_SUMO_1677,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1678,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1679,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__GraphNode) ) ) ).

fof(kb_SUMO_1680,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1681,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1682,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1683,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeopoliticalArea) ) ) ).

fof(kb_SUMO_1684,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1685,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1686,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1687,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1688,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1689,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PermanentResidence) ) ) ).

fof(kb_SUMO_1690,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1691,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1692,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeographicArea) ) ) ).

fof(kb_SUMO_1693,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1694,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Set) ) ) ).

fof(kb_SUMO_1695,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_1696,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1697,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_1698,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_1699,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_1700,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_1701,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_1702,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_1703,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__partition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_1704,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Abstract) ) ) ).

fof(kb_SUMO_1705,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_1706,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_1707,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1708,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_1709,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1710,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_1711,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__GraphNode) ) ) ).

fof(kb_SUMO_1712,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_1713,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1714,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1715,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_1716,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1717,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__ObjectiveNorm) ) ) ).

fof(kb_SUMO_1718,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Attribute) ) ) ).

fof(kb_SUMO_1719,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1720,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Day) ) ) ).

fof(kb_SUMO_1721,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1722,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Language) ) ) ).

fof(kb_SUMO_1723,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_1724,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1725,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"2"),s__Object) ) ) ).

fof(kb_SUMO_1726,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1727,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1728,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1729,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Argument) ) ) ).

fof(kb_SUMO_1730,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1731,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1732,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1733,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1734,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1735,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1736,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1737,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_1738,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_1739,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_1740,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemporaryResidence) ) ) ).

fof(kb_SUMO_1741,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1742,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1743,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1744,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_1745,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_1746,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1747,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1748,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Substance) ) ) ).

fof(kb_SUMO_1749,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1750,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1751,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1752,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__HumanLanguage) ) ) ).

fof(kb_SUMO_1753,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Animal) ) ) ).

fof(kb_SUMO_1754,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Agent) ) ) ).

fof(kb_SUMO_1755,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Object) ) ) ).

fof(kb_SUMO_1756,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_1757,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Language) ) ) ).

fof(kb_SUMO_1758,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1759,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1760,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_1761,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1762,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1763,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1764,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1765,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TwoDimensionalAngle) ) ) ).

fof(kb_SUMO_1766,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_1767,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1768,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1769,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1770,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Motion) ) ) ).

fof(kb_SUMO_1771,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1772,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_1773,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_1774,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1775,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1776,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1777,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1778,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Human) ) ) ).

fof(kb_SUMO_1779,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_1780,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1781,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Woman) ) ) ).

fof(kb_SUMO_1782,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1783,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1784,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1785,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1786,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__GeometricPoint) ) ) ).

fof(kb_SUMO_1787,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1788,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1789,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphPath) ) ) ).

fof(kb_SUMO_1790,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1791,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_1792,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DevelopmentalAttribute) ) ) ).

fof(kb_SUMO_1793,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1794,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1795,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_1796,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__List) ) ) ).

fof(kb_SUMO_1797,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1798,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1799,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_1800,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1801,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__MassMeasure) ) ) ).

fof(kb_SUMO_1802,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1803,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Set) ) ) ).

fof(kb_SUMO_1804,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1805,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1806,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1807,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1808,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1809,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1810,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphArc) ) ) ).

fof(kb_SUMO_1811,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__CaseRole) ) ) ).

fof(kb_SUMO_1812,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Relation) ) ) ).

fof(kb_SUMO_1813,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1814,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_1815,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1816,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_1817,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1818,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1819,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__TimePoint) ) ) ).

fof(kb_SUMO_1820,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Sentence) ) ) ).

fof(kb_SUMO_1821,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1822,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_1823,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1824,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1825,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1826,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1827,axiom,
    ! [V__ROW1] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_1(V__ROW1)
       => s__instance(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Class) ) ) ).

fof(kb_SUMO_1828,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_2(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Class) ) ) ).

fof(kb_SUMO_1829,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_3(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Class) ) ) ).

fof(kb_SUMO_1830,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Class) ) ) ).

fof(kb_SUMO_1831,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__instance(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Class) ) ) ).

fof(kb_SUMO_1832,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__instance(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Class) ) ) ).

fof(kb_SUMO_1833,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__instance(V__ROW1,s__Class)
     => ( s__disjointDecomposition_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__instance(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Class) ) ) ).

fof(kb_SUMO_1834,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Integer) ) ) ).

fof(kb_SUMO_1835,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1836,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_1837,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_1838,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_1839,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ).

fof(kb_SUMO_1840,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1841,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1842,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1843,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1844,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1845,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1846,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1847,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1848,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1849,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"3"),s__Object) ) ) ).

fof(kb_SUMO_1850,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1851,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__LinguisticExpression) ) ) ).

fof(kb_SUMO_1852,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Relation) ) ) ).

fof(kb_SUMO_1853,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1854,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1855,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1856,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Demonstrating) ) ) ).

fof(kb_SUMO_1857,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1858,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Object) ) ) ).

fof(kb_SUMO_1859,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1860,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1861,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__GraphArc) ) ) ).

fof(kb_SUMO_1862,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1863,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1864,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1865,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_1866,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1867,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1868,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1869,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1870,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Attribute) ) ) ).

fof(kb_SUMO_1871,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_1872,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1873,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Object) ) ) ).

fof(kb_SUMO_1874,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__PositionalAttribute) ) ) ).

fof(kb_SUMO_1875,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1876,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1877,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Collection) ) ) ).

fof(kb_SUMO_1878,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1879,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_1880,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1881,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1882,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_1883,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1884,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Translocation) ) ) ).

fof(kb_SUMO_1885,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1886,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__LinguisticExpression) ) ) ).

fof(kb_SUMO_1887,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_1888,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Language) ) ) ).

fof(kb_SUMO_1889,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_1890,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1891,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_1892,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DirectionalAttribute) ) ) ).

fof(kb_SUMO_1893,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1894,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1895,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1896,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Entity) ) ) ).

fof(kb_SUMO_1897,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1898,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1899,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Hole) ) ) ).

fof(kb_SUMO_1900,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__OneDimensionalFigure) ) ) ).

fof(kb_SUMO_1901,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1902,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1903,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1904,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_1905,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__NormativeAttribute) ) ) ).

fof(kb_SUMO_1906,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_1907,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1908,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Physical) ) ) ).

fof(kb_SUMO_1909,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Graph) ) ) ).

fof(kb_SUMO_1910,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_1911,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1912,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ).

fof(kb_SUMO_1913,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_1914,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1915,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_1916,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1917,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1918,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1919,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1920,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1921,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Position) ) ) ).

fof(kb_SUMO_1922,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1923,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_1924,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1925,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Function) ) ) ).

fof(kb_SUMO_1926,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1927,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_1928,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1929,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1930,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1931,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Collection) ) ) ).

fof(kb_SUMO_1932,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_1933,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeometricFigure) ) ) ).

fof(kb_SUMO_1934,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1935,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1936,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Argument) ) ) ).

fof(kb_SUMO_1937,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1938,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__DirectionalAttribute) ) ) ).

fof(kb_SUMO_1939,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_1940,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1941,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Object) ) ) ).

fof(kb_SUMO_1942,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1943,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SymbolicString) ) ) ).

fof(kb_SUMO_1944,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Object) ) ) ).

fof(kb_SUMO_1945,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeDuration) ) ) ).

fof(kb_SUMO_1946,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1947,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CognitiveAgent) ) ) ).

fof(kb_SUMO_1948,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_1949,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1950,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_1951,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1952,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1953,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1954,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__WearableItem) ) ) ).

fof(kb_SUMO_1955,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1956,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePoint) ) ) ).

fof(kb_SUMO_1957,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1958,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryFunction) ) ) ).

fof(kb_SUMO_1959,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__LengthMeasure) ) ) ).

fof(kb_SUMO_1960,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_1961,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_1962,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Agent) ) ) ).

fof(kb_SUMO_1963,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1964,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PlaneAngleMeasure) ) ) ).

fof(kb_SUMO_1965,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1966,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Quantity) ) ) ).

fof(kb_SUMO_1967,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1968,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Graph) ) ) ).

fof(kb_SUMO_1969,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Formula) ) ) ).

fof(kb_SUMO_1970,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Proposition) ) ) ).

fof(kb_SUMO_1971,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_1972,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organization) ) ) ).

fof(kb_SUMO_1973,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TruthValue) ) ) ).

fof(kb_SUMO_1974,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__instance(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Object) ) ) ).

fof(kb_SUMO_1975,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Motion) ) ) ).

fof(kb_SUMO_1976,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__EngineeringComponent) ) ) ).

fof(kb_SUMO_1977,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SetOrClass) ) ) ).

fof(kb_SUMO_1978,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_1979,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_1980,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Hole) ) ) ).

fof(kb_SUMO_1981,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_1982,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1983,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Integer) ) ) ).

fof(kb_SUMO_1984,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_1985,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1986,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Woman) ) ) ).

fof(kb_SUMO_1987,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Human) ) ) ).

fof(kb_SUMO_1988,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Entity) ) ) ).

fof(kb_SUMO_1989,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1990,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_1991,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__PositiveInteger) ) ) ).

fof(kb_SUMO_1992,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1993,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organization) ) ) ).

fof(kb_SUMO_1994,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_1995,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_1996,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Organism) ) ) ).

fof(kb_SUMO_1997,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Object) ) ) ).

fof(kb_SUMO_1998,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_1999,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Agent) ) ) ).

fof(kb_SUMO_2000,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2001,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2002,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2003,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Physical) ) ) ).

fof(kb_SUMO_2004,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2005,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__RealNumber) ) ) ).

fof(kb_SUMO_2006,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__GraphElement) ) ) ).

fof(kb_SUMO_2007,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2008,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2009,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Quantity) ) ) ).

fof(kb_SUMO_2010,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Organism) ) ) ).

fof(kb_SUMO_2011,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2012,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2013,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Collection) ) ) ).

fof(kb_SUMO_2014,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__SelfConnectedObject) ) ) ).

fof(kb_SUMO_2015,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__CorpuscularObject) ) ) ).

fof(kb_SUMO_2016,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__List) ) ) ).

fof(kb_SUMO_2017,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePosition) ) ) ).

fof(kb_SUMO_2018,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__TimePoint) ) ) ).

fof(kb_SUMO_2019,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Proposition) ) ) ).

fof(kb_SUMO_2020,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Physical) ) ) ).

fof(kb_SUMO_2021,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__Formula) ) ) ).

fof(kb_SUMO_2022,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__BinaryRelation) ) ) ).

fof(kb_SUMO_2023,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimePosition) ) ) ).

fof(kb_SUMO_2024,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimePosition) ) ) ).

fof(kb_SUMO_2025,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2026,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__TimeInterval) ) ) ).

fof(kb_SUMO_2027,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2028,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__TimePoint) ) ) ).

fof(kb_SUMO_2029,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Human) ) ) ).

fof(kb_SUMO_2030,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__PhysicalSystem) ) ) ).

fof(kb_SUMO_2031,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Entity) ) ) ).

fof(kb_SUMO_2032,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__GeographicArea) ) ) ).

fof(kb_SUMO_2033,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"3"),s__Formula) ) ) ).

fof(kb_SUMO_2034,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__instance(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"2"),s__SymbolicString) ) ) ).

fof(kb_SUMO_2035,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__instance(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Graph) ) ) ).

fof(kb_SUMO_2036,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2037,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2038,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Substance) ) ) ).

fof(kb_SUMO_2039,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2040,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2041,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2042,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2043,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2044,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2045,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2046,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2047,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Artifact) ) ) ).

fof(kb_SUMO_2048,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Artifact) ) ) ).

fof(kb_SUMO_2049,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2050,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2051,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Process) ) ) ).

fof(kb_SUMO_2052,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__SetOrClass) ) ) ).

fof(kb_SUMO_2053,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2054,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2055,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Text) ) ) ).

fof(kb_SUMO_2056,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Process) ) ) ).

fof(kb_SUMO_2057,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__Process) ) ) ).

fof(kb_SUMO_2058,axiom,
    ! [V__ROW1] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_1(V__ROW1)
       => s__subclass(s__ListOrderFn(s__ListFn_1(V__ROW1),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2059,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_2(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2060,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_3(V__ROW1,V__ROW2,V__ROW3)
       => s__subclass(s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2061,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__subclass(s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2062,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
       => s__subclass(s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2063,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
       => s__subclass(s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2064,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( ( s__subclass(V__ROW1,s__Attribute)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__exhaustiveAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
       => s__subclass(s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7),"1"),s__Attribute) ) ) ).

fof(kb_SUMO_2065,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"2"),s__ContentBearingPhysical) ) ) ).

fof(kb_SUMO_2066,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__ElementalSubstance) ) ) ).

fof(kb_SUMO_2067,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__subclass(s__ListOrderFn(s__ListFn_2(V__ROW1,V__ROW2),"1"),s__PureSubstance) ) ) ).

fof(kb_SUMO_2068,axiom,
    s__instance(s__ListLengthFn__m,s__UnaryFunction) ).

fof(kb_SUMO_2069,axiom,
    s__instance(s__ListLengthFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_2070,axiom,
    s__domain(s__ListLengthFn__m,"1",s__List) ).

fof(kb_SUMO_2071,axiom,
    s__range(s__ListLengthFn__m,s__NonnegativeInteger) ).

fof(kb_SUMO_2072,axiom,
    s__documentation(s__ListLengthFn__m,s__EnglishLanguage,'A &%Function that takes a &%List as its sole argument and returns the number of items in the &%List. For example, (&%ListLengthFn (&%ListFn &%Monday &%Tuesday &%Wednesday)) would return the value 3.') ).

fof(kb_SUMO_2073,axiom,
    ! [V__NUMBER1,V__LIST] :
      ( ( s__ListLengthFn(V__LIST) = V__NUMBER1
        & s__instance(V__LIST,s__List)
        & V__LIST != s__NullList__m
        & s__instance(V__NUMBER1,s__PositiveInteger) )
     => ! [V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__LIST,s__List)
            & s__instance(V__NUMBER1,s__Quantity) )
         => ( ? [V__ITEM] :
                ( s__ListOrderFn(V__LIST,V__NUMBER2) = V__ITEM
                & s__inList(V__ITEM,V__LIST) )
          <=> lesseq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_2074,axiom,
    ! [V__ROW1,V__ITEM] : s__ListLengthFn(s__ListFn_2(V__ROW1,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_1(V__ROW1))) ).

fof(kb_SUMO_2075,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2))) ).

fof(kb_SUMO_2076,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))) ).

fof(kb_SUMO_2077,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))) ).

fof(kb_SUMO_2078,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))) ).

fof(kb_SUMO_2079,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))) ).

fof(kb_SUMO_2080,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ITEM] : s__ListLengthFn(s__ListFn_8(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7,V__ITEM)) = s__SuccessorFn(s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))) ).

fof(kb_SUMO_2081,axiom,
    ! [V__ROW1,V__ITEM] : s__ListOrderFn(s__ListFn_2(V__ROW1,V__ITEM),s__ListLengthFn(s__ListFn_2(V__ROW1,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2082,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__ListOrderFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM),s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2083,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__ListOrderFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM),s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2084,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__ListOrderFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM),s__ListLengthFn(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2085,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__ListOrderFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM),s__ListLengthFn(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2086,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__ListOrderFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM),s__ListLengthFn(s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM))) = V__ITEM ).

fof(kb_SUMO_2087,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__leader(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2088,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__rangeSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2089,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__PhysicalSystem) )
     => ( s__subSystem(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2090,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__radius(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2091,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Set)
     => ( s__element(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2092,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__closedOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2093,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__FinancialTransaction) )
     => ( s__transactionAmount(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2094,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__temporalPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2095,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__Object) )
     => ( s__age(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2096,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__causesProposition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2097,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__disjoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2098,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__crosses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2099,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Translocation) )
     => ( s__changesLocation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2100,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Attribute)
     => ( s__greaterThanByQuality(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2101,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__father(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2102,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__completelyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2103,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__immediateInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2104,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Artifact)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Artifact)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__version(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2105,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__result(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2106,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__cooccur(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2107,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfMeasure)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__graphMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2108,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__UnitOfAtmosphericPressure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__barometricPressure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2109,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__member(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2110,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalSystem)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__systemPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2111,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__relatedInternalConcept(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2112,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__distance(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2113,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeopoliticalArea)
        & s__instance(V__ROW1,s__GeopoliticalArea) )
     => ( s__geopoliticalSubdivision(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2114,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__beforeOrEqual(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2115,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__trichotomizingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2116,axiom,
    ! [V__ROW1,V__ROW2] :
      ( V__ROW1 = V__ROW2
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2117,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__inhabits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2118,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__daughter(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2119,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SymbolicString)
     => ( s__externalImage(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2120,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__equivalentContentClass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2121,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersRight(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2122,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__during(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2123,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__identicalListItems(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2124,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__List)
     => ( s__inList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2125,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__smaller(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2126,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurpose(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2127,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__superficialPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2128,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__attribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2129,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__containsInformation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2130,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__CognitiveAgent)
     => ( s__inScopeOfInterest(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2131,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__partlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2132,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__manner(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2133,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__surface(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2134,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__subsumesContentInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2135,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__duration(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2136,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__decreasesLikelihood(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2137,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__parallel(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2138,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__engineeringSubcomponent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2139,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2140,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventPartlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2141,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__Hole) )
     => ( s__hole(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2142,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__represents(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2143,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricFigure) )
     => ( s__geometricPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2144,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PhysicalQuantity)
        & s__instance(V__ROW1,s__Object) )
     => ( s__measure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2145,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__authors(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2146,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__meltingPoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2147,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Formula)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__prefers(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2148,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Collection)
        & s__instance(V__ROW1,s__Collection) )
     => ( s__subCollection(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2149,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__prevents(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2150,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Day)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__date(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2151,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__meetsSpatially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2152,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemporaryResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__stays(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2153,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__meetsTemporally(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2154,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SelfConnectedObject)
        & s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__connects(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2155,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__legalRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2156,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Man)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__wife(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2157,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__employs(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2158,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properlyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2159,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subsumesContentClass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2160,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__spouse(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2161,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__contains(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2162,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__instance(V__ROW1,s__CorpuscularObject) )
     => ( s__component(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2163,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__Graph) )
     => ( s__subGraph(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2164,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__totalOrderingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2165,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__parent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2166,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PermanentResidence)
        & s__instance(V__ROW1,s__Human) )
     => ( s__home(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2167,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( less(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2168,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TruthValue)
        & s__instance(V__ROW1,s__Sentence) )
     => ( s__truth(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2169,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__conclusion(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2170,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__NormativeAttribute)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__modalAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2171,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__bottom(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2172,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organization)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__subOrganization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2173,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__possesses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2174,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__subclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2175,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__familyRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2176,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__precondition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2177,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__RealNumber)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__conditionalProbability(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2178,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__subProcess(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2179,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryFunction)
        & s__instance(V__ROW1,s__BinaryFunction) )
     => ( s__distributes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2180,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domain(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2181,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__involvedInEvent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2182,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__SymbolicString) )
     => ( s__comment(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2183,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeographicArea)
        & s__instance(V__ROW1,s__GeographicArea) )
     => ( s__geographicSubregion(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2184,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__resource(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2185,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__entails(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2186,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__son(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2187,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__ContentBearingPhysical)
        & s__instance(V__ROW1,s__ContentBearingPhysical) )
     => ( s__equivalentContentInstance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2188,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__fills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2189,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__independentProbability(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2190,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__MassMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__weight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2191,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SetOrClass)
        & s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__domainSubclass(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2192,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__RealNumber)
        & s__instance(V__ROW1,s__List) )
     => ( s__average(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2193,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__connected(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2194,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__representsInLanguage(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2195,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2196,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__patient(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2197,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Process) )
     => ( s__realization(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2198,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__relatedExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2199,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__CaseRole)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__capability(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2200,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__immediateSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2201,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsRight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2202,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Argument) )
     => ( s__premise(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2203,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePosition)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__time(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2204,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GraphArc)
        & s__instance(V__ROW2,s__GraphNode)
        & s__instance(V__ROW1,s__GraphNode) )
     => ( s__links(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2205,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__equivalenceRelationOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2206,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__lineMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2207,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CurrencyMeasure)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__monetaryValue(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2208,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Abstract) )
     => ( s__abstractCounterpart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2209,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__EngineeringComponent)
        & s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringConnection) )
     => ( s__connectsEngineeringComponents(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2210,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__before(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2211,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__pointOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2212,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__subProposition(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2213,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__hasSkill(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2214,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__eventLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2215,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__exploits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2216,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__termFormat(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2217,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__path(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2218,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__sibling(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2219,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__altitude(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2220,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__length(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2221,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__believes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2222,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__origin(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2223,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__earlier(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2224,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__wants(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2225,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__subList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2226,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__interiorPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2227,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__GeometricPoint)
        & s__instance(V__ROW1,s__GeometricPoint) )
     => ( s__geometricDistance(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2228,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Integer)
        & s__instance(V__ROW1,s__Integer) )
     => ( s__multiplicativeFactor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2229,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Object) )
     => ( s__uses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2230,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__linearExtent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2231,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__TimePoint)
        & s__instance(V__ROW2,s__TimePoint)
        & s__instance(V__ROW1,s__TimePoint) )
     => ( s__temporallyBetween(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2232,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( s__instance(V__ROW3,s__Agent)
     => ( s__representsForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2233,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__grasps(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2234,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Function) )
     => ( s__range(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2235,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Set)
        & s__instance(V__ROW1,s__Set) )
     => ( s__subset(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2236,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__refers(V__ROW1,V__ROW2)
     => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ).

fof(kb_SUMO_2237,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__ancestor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2238,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__exactlyLocated(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2239,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__larger(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2240,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__GeometricFigure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angleOfFigure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2241,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__subAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2242,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__top(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2243,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CorpuscularObject)
        & s__subclass(V__ROW1,s__Substance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__material(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2244,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__subrelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2245,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__subsumingExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2246,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__considers(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2247,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__mutualAcquaintance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2248,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2249,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__needs(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2250,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__increasesLikelihood(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2251,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__knows(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2252,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__confersNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2253,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( ( s__instance(V__ROW4,s__Object)
        & s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__betweenOnPath(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
       => s__ListLengthFn(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)) = "4" ) ) ).

fof(kb_SUMO_2254,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__LengthMeasure)
        & s__instance(V__ROW2,s__Physical)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__depth(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2255,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Process) )
     => ( s__instrument(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2256,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__BinaryRelation)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__inverse(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2257,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__traverses(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2258,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__SetOrClass)
     => ( s__instance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2259,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__experiencer(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2260,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Motion) )
     => ( s__moves(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2261,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Hole)
        & s__instance(V__ROW1,s__Object) )
     => ( s__partiallyFills(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2262,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__relative(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2263,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeDuration)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__frequency(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2264,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__GraphPath) )
     => ( s__pathLength(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2265,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__names(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2266,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__properPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2267,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SelfConnectedObject)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__side(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2268,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Nation)
        & s__instance(V__ROW1,s__Human) )
     => ( s__citizen(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2269,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Woman) )
     => ( s__sister(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2270,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__GeometricPoint)
        & s__instance(V__ROW2,s__OneDimensionalFigure)
        & s__instance(V__ROW1,s__OneDimensionalFigure) )
     => ( s__pointOfIntersection(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2271,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Process) )
     => ( s__direction(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2272,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW2,s__HumanLanguage) )
     => ( s__documentation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2273,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__List)
        & s__instance(V__ROW1,s__List) )
     => ( s__initialList(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2274,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttribute(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2275,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DevelopmentalAttribute)
        & s__instance(V__ROW1,s__OrganicObject) )
     => ( s__developmentalForm(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2276,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Attribute)
        & s__instance(V__ROW1,s__Attribute) )
     => ( s__successorAttributeClosure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2277,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greater(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2278,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__SelfConnectedObject) )
     => ( s__height(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2279,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Organism)
        & s__instance(V__ROW1,s__Organism) )
     => ( s__mother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2280,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Proposition)
        & s__instance(V__ROW1,s__Proposition) )
     => ( s__consistent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2281,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( greatereq(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2282,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__BinaryFunction)
     => ( s__identityElement(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2283,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW2,s__Attribute)
     => ( s__property(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2284,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Woman)
        & s__instance(V__ROW1,s__Man) )
     => ( s__husband(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2285,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsPartially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2286,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Object) )
     => ( s__width(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2287,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Plan)
        & s__instance(V__ROW1,s__Plan) )
     => ( s__subPlan(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2288,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__PositionalAttribute)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__orientation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2289,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TemperatureMeasure)
        & s__subclass(V__ROW1,s__PureSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__boilingPoint(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2290,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Graph)
        & s__instance(V__ROW1,s__GraphElement) )
     => ( s__graphPart(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2291,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__TimePosition) )
     => ( s__holdsDuring(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2292,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__overlapsSpatially(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2293,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__inhibits(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2294,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__located(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2295,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__Quantity) )
     => ( lesseq(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2296,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__starts(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2297,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Language)
        & s__instance(V__ROW1,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2298,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__reflexiveOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2299,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Object)
        & s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__between(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2300,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__DirectionalAttribute)
        & s__instance(V__ROW1,s__Object) )
     => ( s__faces(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2301,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__EngineeringComponent)
        & s__instance(V__ROW1,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2302,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Language)
        & s__instance(V__ROW1,s__SymbolicString) )
     => ( s__synonymousExternalConcept(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2303,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__Physical) )
     => ( s__hasPurposeForAgent(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2304,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Relation)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__disjointRelation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2305,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__SymbolicString)
        & s__instance(V__ROW1,s__Language) )
     => ( s__format(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2306,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__partialOrderingOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2307,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__relatedEvent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2308,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__instance(V__ROW1,s__Relation) )
     => ( s__valence(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2309,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__penetrates(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2310,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__Organization)
        & s__instance(V__ROW2,s__Position)
        & s__instance(V__ROW1,s__Human) )
     => ( s__occupiesPosition(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2311,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Substance)
        & s__instance(V__ROW1,s__Substance) )
     => ( s__piece(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2312,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__LengthMeasure)
        & s__instance(V__ROW1,s__Circle) )
     => ( s__diameter(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2313,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Quantity)
        & s__instance(V__ROW1,s__GraphArc) )
     => ( s__arcWeight(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2314,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__TimeInterval)
        & s__instance(V__ROW1,s__TimeInterval) )
     => ( s__finishes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2315,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Process)
        & s__instance(V__ROW1,s__Process) )
     => ( s__causes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2316,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Agent) )
     => ( s__editor(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2317,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Demonstrating) )
     => ( s__attends(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2318,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__WearableItem)
        & s__instance(V__ROW1,s__Animal) )
     => ( s__wears(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2319,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Man) )
     => ( s__brother(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2320,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__SymbolicString)
     => ( s__uniqueIdentifier(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2321,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PlaneAngleMeasure)
        & s__instance(V__ROW1,s__TwoDimensionalAngle) )
     => ( s__angularMeasure(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2322,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__BinaryRelation) )
     => ( s__irreflexiveOn(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2323,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Text)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__instance(V__ROW1,s__Organization) )
     => ( s__publishes(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2324,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__confersObligation(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2325,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Agent)
        & s__instance(V__ROW1,s__Process) )
     => ( s__agent(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2326,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Formula)
        & s__instance(V__ROW1,s__CognitiveAgent) )
     => ( s__desires(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2327,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Object)
        & s__instance(V__ROW1,s__Object) )
     => ( s__copy(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2328,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__CognitiveAgent)
        & s__instance(V__ROW1,s__Formula) )
     => ( s__holdsObligation(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2329,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__Human)
        & s__instance(V__ROW1,s__Human) )
     => ( s__acquaintance(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2330,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__subclass(V__ROW2,s__Process)
        & s__instance(V__ROW2,s__SetOrClass)
        & s__subclass(V__ROW1,s__Process)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__causesSubclass(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2331,axiom,
    ! [V__ROW1,V__ROW2] :
      ( ( s__instance(V__ROW2,s__PositiveInteger)
        & s__subclass(V__ROW1,s__ElementalSubstance)
        & s__instance(V__ROW1,s__SetOrClass) )
     => ( s__atomicNumber(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2332,axiom,
    ! [V__ROW1,V__ROW2] :
      ( s__instance(V__ROW1,s__Process)
     => ( s__destination(V__ROW1,V__ROW2)
       => s__ListLengthFn(s__ListFn_2(V__ROW1,V__ROW2)) = "2" ) ) ).

fof(kb_SUMO_2333,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3] :
      ( ( s__instance(V__ROW3,s__ObjectiveNorm)
        & s__instance(V__ROW2,s__Formula) )
     => ( s__deprivesNorm(V__ROW1,V__ROW2,V__ROW3)
       => s__ListLengthFn(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3)) = "3" ) ) ).

fof(kb_SUMO_2334,axiom,
    ! [V__NUMBER,V__LIST1,V__NUMBER1,V__LIST] :
      ( ( s__instance(V__LIST1,s__List)
        & s__instance(V__NUMBER,s__Integer) )
     => ( ( s__ListLengthFn(V__LIST1) = V__NUMBER
          & s__instance(V__LIST,s__List)
          & V__LIST != s__NullList__m
          & s__instance(V__NUMBER1,s__PositiveInteger) )
       => ? [V__LIST2,V__ITEM] :
            ( s__instance(V__LIST2,s__List)
            & s__initialList(V__LIST1,V__LIST2)
            & s__SuccessorFn(V__NUMBER) = s__ListLengthFn(V__LIST2)
            & s__ListOrderFn(V__LIST2,s__SuccessorFn(V__NUMBER)) = V__ITEM ) ) ) ).

fof(kb_SUMO_2335,axiom,
    s__instance(s__ListConcatenateFn__m,s__BinaryFunction) ).

fof(kb_SUMO_2336,axiom,
    s__instance(s__ListConcatenateFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_2337,axiom,
    s__domain(s__ListConcatenateFn__m,"1",s__List) ).

fof(kb_SUMO_2338,axiom,
    s__domain(s__ListConcatenateFn__m,"2",s__List) ).

fof(kb_SUMO_2339,axiom,
    s__range(s__ListConcatenateFn__m,s__List) ).

fof(kb_SUMO_2340,axiom,
    s__documentation(s__ListConcatenateFn__m,s__EnglishLanguage,'A &%Function that returns the concatenation of the two &%Lists that are given as arguments. For example, the value of (&%ListConcatenateFn (&%ListFn &%Monday &%Tuesday) (&%ListFn &%Wednesday &%Thursday)) would be (&%ListFn &%Monday &%Tuesday &%Wednesday &%Thursday).') ).

%----Commented out because it causes a contradiction
% fof(kb_SUMO_2341,axiom,(
%     ! [V__LIST3,V__LIST2,V__LIST1] :
%       ( ( V__LIST3 = s__ListConcatenateFn(V__LIST1,V__LIST2)
%         & ~ s__equals(V__LIST1,s__NullList__m)
%         & ~ s__equals(V__LIST2,s__NullList__m) )
%     <=> ! [V__NUMBER1,V__NUMBER2] :
%           ( ( s__instance(V__LIST1,s__List)
%             & s__instance(V__LIST2,s__List)
%             & s__instance(V__LIST3,s__List) )
%          => ( ( lesseq(V__NUMBER1,s__ListLengthFn(V__LIST1))
%               & lesseq(V__NUMBER2,s__ListLengthFn(V__LIST2))
%               & s__instance(V__NUMBER1,s__PositiveInteger)
%               & s__instance(V__NUMBER2,s__PositiveInteger) )
%            => ( s__ListOrderFn(V__LIST3,V__NUMBER1) = s__ListOrderFn(V__LIST1,V__NUMBER1)
%               & s__ListOrderFn(V__LIST3,plus(s__ListLengthFn(V__LIST1),V__NUMBER2)) = s__ListOrderFn(V__LIST2,V__NUMBER2) ) ) ) ) )).

fof(kb_SUMO_2342,axiom,
    s__instance(s__inList__m,s__BinaryPredicate) ).

fof(kb_SUMO_2343,axiom,
    s__instance(s__inList__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_2344,axiom,
    s__instance(s__inList__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2345,axiom,
    s__domain(s__inList__m,"1",s__Entity) ).

fof(kb_SUMO_2346,axiom,
    s__domain(s__inList__m,"2",s__List) ).

fof(kb_SUMO_2347,axiom,
    s__documentation(s__inList__m,s__EnglishLanguage,'The analog of &%element and &%instance for &%Lists. (&%inList ?OBJ ?LIST) means that ?OBJ is in the &%List ?LIST. For example, (&%inList &%Tuesday (&%ListFn &%Monday &%Tuesday &%Wednesday)) would be true.') ).

fof(kb_SUMO_2348,axiom,
    ! [V__ITEM,V__LIST] :
      ( s__instance(V__LIST,s__List)
     => ( s__inList(V__ITEM,V__LIST)
       => ? [V__NUMBER] :
            ( s__instance(V__NUMBER,s__PositiveInteger)
            & s__ListOrderFn(V__LIST,V__NUMBER) = V__ITEM ) ) ) ).

fof(kb_SUMO_2349,axiom,
    s__instance(s__subList__m,s__BinaryPredicate) ).

fof(kb_SUMO_2350,axiom,
    s__instance(s__subList__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_2351,axiom,
    s__domain(s__subList__m,"1",s__List) ).

fof(kb_SUMO_2352,axiom,
    s__domain(s__subList__m,"2",s__List) ).

fof(kb_SUMO_2353,axiom,
    s__documentation(s__subList__m,s__EnglishLanguage,'(&%subList ?LIST1 ?LIST2) means that ?LIST1 is a sublist of ?LIST2, i.e. every element of ?LIST1 is an element of ?LIST2 and the elements that are common to both &%Lists have the same order in both &%Lists. Elements that are common to both Lists and are consecutive in one list must also be consecutive in the other list. (Therefore - the list of prime numbers smaller than 10 [1 2 3 5 7] is not a subList of the natural numbers smaller than 10 [1 2 3 4 5 6 7 8 9]).') ).

fof(kb_SUMO_2354,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__subList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ! [V__ITEM] :
          ( ( s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( s__inList(V__ITEM,V__LIST1)
           => s__inList(V__ITEM,V__LIST2) ) ) ) ).

fof(kb_SUMO_2355,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__subList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ? [V__NUMBER3] :
        ! [V__ITEM] :
          ( ( s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( s__inList(V__ITEM,V__LIST1)
           => ? [V__NUMBER1,V__NUMBER2] :
                ( s__instance(V__NUMBER2,s__PositiveInteger)
                & s__instance(V__NUMBER1,s__PositiveInteger)
                & s__instance(V__NUMBER3,s__Quantity)
                & s__ListOrderFn(V__LIST1,V__NUMBER1) = V__ITEM
                & s__ListOrderFn(V__LIST2,V__NUMBER2) = V__ITEM
                & V__NUMBER2 = plus(V__NUMBER1,V__NUMBER3) ) ) ) ) ).

fof(kb_SUMO_2356,axiom,
    s__instance(s__initialList__m,s__BinaryPredicate) ).

fof(kb_SUMO_2357,axiom,
    s__instance(s__initialList__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_2358,axiom,
    s__subrelation(s__initialList__m,s__subList__m) ).

fof(kb_SUMO_2359,axiom,
    s__documentation(s__initialList__m,s__EnglishLanguage,'(&%initialList ?LIST1 ?LIST2) means that ?LIST1 is a &%subList of ?LIST2 and (&%ListOrderFn ?LIST1 ?NUMBER) returns the same value as (&%ListOrderFn ?LIST2 ?NUMBER) for all of the values of ?NUMBER over which (&%ListOrderFn ?LIST1 ?NUMBER) is defined.') ).

fof(kb_SUMO_2360,axiom,
    ! [V__LIST2,V__LIST1] :
      ( ( s__initialList(V__LIST1,V__LIST2)
        & ~ s__equals(V__LIST1,s__NullList__m)
        & ~ s__equals(V__LIST2,s__NullList__m) )
     => ! [V__NUMBER1,V__NUMBER2] :
          ( ( s__instance(V__NUMBER2,s__PositiveInteger)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__LIST1,s__List)
            & s__instance(V__LIST2,s__List) )
         => ( ( s__ListLengthFn(V__LIST1) = V__NUMBER1
              & lesseq(V__NUMBER2,V__NUMBER1) )
           => s__ListOrderFn(V__LIST1,V__NUMBER2) = s__ListOrderFn(V__LIST2,V__NUMBER2) ) ) ) ).

fof(kb_SUMO_2361,axiom,
    ! [V__ROW1,V__ITEM] : s__initialList(s__ListFn_1(V__ROW1),s__ListFn_2(V__ROW1,V__ITEM)) ).

fof(kb_SUMO_2362,axiom,
    ! [V__ROW1,V__ROW2,V__ITEM] : s__initialList(s__ListFn_2(V__ROW1,V__ROW2),s__ListFn_3(V__ROW1,V__ROW2,V__ITEM)) ).

fof(kb_SUMO_2363,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ITEM] : s__initialList(s__ListFn_3(V__ROW1,V__ROW2,V__ROW3),s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ITEM)) ).

fof(kb_SUMO_2364,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM] : s__initialList(s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4),s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ITEM)) ).

fof(kb_SUMO_2365,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM] : s__initialList(s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5),s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ITEM)) ).

fof(kb_SUMO_2366,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM] : s__initialList(s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6),s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ITEM)) ).

fof(kb_SUMO_2367,axiom,
    s__instance(s__identicalListItems__m,s__BinaryPredicate) ).

fof(kb_SUMO_2368,axiom,
    s__instance(s__identicalListItems__m,s__EquivalenceRelation) ).

fof(kb_SUMO_2369,axiom,
    s__domain(s__identicalListItems__m,"1",s__List) ).

fof(kb_SUMO_2370,axiom,
    s__domain(s__identicalListItems__m,"2",s__List) ).

fof(kb_SUMO_2371,axiom,
    s__documentation(s__identicalListItems__m,s__EnglishLanguage,'(&%identicalListItems ?LIST1 ?LIST2) means that ?LIST1 and ?LIST2 have exactly the same items in their respective lists. Although ?LIST1 and ?LIST2 are required to share exactly the same items, they may order these items differently.') ).

fof(kb_SUMO_2372,axiom,
    ! [V__ITEM,V__LIST2,V__LIST1] :
      ( ( s__instance(V__LIST1,s__List)
        & s__instance(V__LIST2,s__List) )
     => ( ( s__identicalListItems(V__LIST1,V__LIST2)
          & ~ s__equals(V__LIST1,s__NullList__m)
          & ~ s__equals(V__LIST2,s__NullList__m) )
       => ( s__inList(V__ITEM,V__LIST1)
        <=> s__inList(V__ITEM,V__LIST2) ) ) ) ).

fof(kb_SUMO_2373,axiom,
    s__subclass(s__Predicate,s__Relation) ).

fof(kb_SUMO_2374,axiom,
    s__subclass(s__Predicate,s__InheritableRelation) ).

fof(kb_SUMO_2375,axiom,
    s__instance(s__Predicate__t,s__SetOrClass) ).

fof(kb_SUMO_2376,axiom,
    s__instance(s__InheritableRelation__t,s__SetOrClass) ).

fof(kb_SUMO_2377,axiom,
    s__documentation(s__Predicate,s__EnglishLanguage,'A &%Predicate is a sentence-forming &%Relation. Each tuple in the &%Relation is a finite, ordered sequence of objects. The fact that a particular tuple is an element of a &%Predicate is denoted by (*predicate* arg_1 arg_2 .. arg_n), where the arg_i are the objects so related. In the case of &%BinaryPredicates, the fact can be read as `arg_1 is *predicate* arg_2 or `a *predicate* of arg_1 is arg_2.') ).

fof(kb_SUMO_2378,axiom,
    s__subclass(s__Function,s__SingleValuedRelation) ).

fof(kb_SUMO_2379,axiom,
    s__subclass(s__Function,s__InheritableRelation) ).

fof(kb_SUMO_2380,axiom,
    s__documentation(s__Function,s__EnglishLanguage,'A &%Function is a term-forming &%Relation that maps from a n-tuple of arguments to a range and that associates this n-tuple with at most one range element. Note that the range is a &%SetOrClass, and each element of the range is an instance of the &%SetOrClass.') ).

fof(kb_SUMO_2381,axiom,
    s__subclass(s__UnaryFunction,s__Function) ).

fof(kb_SUMO_2382,axiom,
    s__subclass(s__UnaryFunction,s__BinaryRelation) ).

fof(kb_SUMO_2383,axiom,
    s__subclass(s__UnaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_2384,axiom,
    s__documentation(s__UnaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require a single argument.') ).

fof(kb_SUMO_2385,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__UnaryFunction)
       => s__valence(V__FUNCTION,"1") ) ) ).

fof(kb_SUMO_2386,axiom,
    s__subclass(s__OneToOneFunction,s__UnaryFunction) ).

fof(kb_SUMO_2387,axiom,
    s__instance(s__OneToOneFunction__t,s__SetOrClass) ).

fof(kb_SUMO_2388,axiom,
    s__documentation(s__OneToOneFunction,s__EnglishLanguage,'The &%Class of &%UnaryFunctions which are one to one. A function F is one to one just in case for all X, Y in the domain of F, if X is not identical to Y, then F(X) is not identical to F(Y).') ).

fof(kb_SUMO_2389,axiom,
    ! [V__FUN,V__CLASS] :
      ( s__instance(V__FUN,s__OneToOneFunction)
     => ! [V__ARG1,V__ARG2] :
          ( ( s__instance(V__CLASS,s__SetOrClass)
            & s__instance(V__FUN,s__Function) )
         => ( ( s__domain(V__FUN,"1",V__CLASS)
              & s__instance(V__ARG1,V__CLASS)
              & s__instance(V__ARG2,V__CLASS)
              & V__ARG1 != V__ARG2 )
           => s__AssignmentFn_2(V__FUN,V__ARG1) != s__AssignmentFn_2(V__FUN,V__ARG2) ) ) ) ).

fof(kb_SUMO_2390,axiom,
    s__subclass(s__SequenceFunction,s__OneToOneFunction) ).

fof(kb_SUMO_2391,axiom,
    s__instance(s__SequenceFunction__t,s__SetOrClass) ).

fof(kb_SUMO_2392,axiom,
    s__documentation(s__SequenceFunction,s__EnglishLanguage,'The &%Class of &%OneToOneFunctions whose range is a subclass of the &%PositiveIntegers.') ).

fof(kb_SUMO_2393,axiom,
    ! [V__CLASS,V__SEQ] :
      ( ( s__instance(V__SEQ,s__Function)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__SEQ,s__SequenceFunction)
          & s__range(V__SEQ,V__CLASS) )
       => s__subclass(V__CLASS,s__Integer) ) ) ).

fof(kb_SUMO_2394,axiom,
    s__subclass(s__BinaryFunction,s__Function) ).

fof(kb_SUMO_2395,axiom,
    s__subclass(s__BinaryFunction,s__TernaryRelation) ).

fof(kb_SUMO_2396,axiom,
    s__subclass(s__BinaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_2397,axiom,
    s__documentation(s__BinaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require two arguments.') ).

fof(kb_SUMO_2398,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__BinaryFunction)
       => s__valence(V__FUNCTION,"2") ) ) ).

fof(kb_SUMO_2399,axiom,
    s__subclass(s__AssociativeFunction,s__BinaryFunction) ).

fof(kb_SUMO_2400,axiom,
    s__instance(s__AssociativeFunction__t,s__SetOrClass) ).

fof(kb_SUMO_2401,axiom,
    s__documentation(s__AssociativeFunction,s__EnglishLanguage,'A &%BinaryFunction is associative if bracketing has no effect on the value returned by the &%Function. More precisely, a &%Function ?FUNCTION is associative just in case (?FUNCTION ?INST1 (?FUNCTION ?INST2 ?INST3)) is equal to (?FUNCTION (?FUNCTION ?INST1 ?INST2) ?INST3), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_2402,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__AssociativeFunction)
     => ! [V__INST1,V__INST2,V__INST3] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS)
              & s__instance(V__INST3,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__INST1,s__AssignmentFn_3(V__FUNCTION,V__INST2,V__INST3)) = s__AssignmentFn_3(V__FUNCTION,s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2),V__INST3) ) ) ) ).

fof(kb_SUMO_2403,axiom,
    s__subclass(s__CommutativeFunction,s__BinaryFunction) ).

fof(kb_SUMO_2404,axiom,
    s__documentation(s__CommutativeFunction,s__EnglishLanguage,'A &%BinaryFunction is commutative if the ordering of the arguments of the function has no effect on the value returned by the function. More precisely, a function ?FUNCTION is commutative just in case (?FUNCTION ?INST1 ?INST2) is equal to (?FUNCTION ?INST2 ?INST1), for all ?INST1 and ?INST2.') ).

fof(kb_SUMO_2405,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__CommutativeFunction)
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2) = s__AssignmentFn_3(V__FUNCTION,V__INST2,V__INST1) ) ) ) ).

fof(kb_SUMO_2406,axiom,
    s__subclass(s__TernaryFunction,s__Function) ).

fof(kb_SUMO_2407,axiom,
    s__instance(s__TernaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_2408,axiom,
    s__instance(s__Function__t,s__SetOrClass) ).

fof(kb_SUMO_2409,axiom,
    s__subclass(s__TernaryFunction,s__QuaternaryRelation) ).

fof(kb_SUMO_2410,axiom,
    s__instance(s__QuaternaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_2411,axiom,
    s__subclass(s__TernaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_2412,axiom,
    s__documentation(s__TernaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require exactly three arguments.') ).

fof(kb_SUMO_2413,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__TernaryFunction)
       => s__valence(V__FUNCTION,"3") ) ) ).

fof(kb_SUMO_2414,axiom,
    s__subclass(s__QuaternaryFunction,s__Function) ).

fof(kb_SUMO_2415,axiom,
    s__subclass(s__QuaternaryFunction,s__QuintaryRelation) ).

fof(kb_SUMO_2416,axiom,
    s__subclass(s__QuaternaryFunction,s__InheritableRelation) ).

fof(kb_SUMO_2417,axiom,
    s__documentation(s__QuaternaryFunction,s__EnglishLanguage,'The &%Class of &%Functions that require exactly four arguments.') ).

fof(kb_SUMO_2418,axiom,
    ! [V__FUNCTION] :
      ( s__instance(V__FUNCTION,s__Relation)
     => ( s__instance(V__FUNCTION,s__QuaternaryFunction)
       => s__valence(V__FUNCTION,"4") ) ) ).

fof(kb_SUMO_2419,axiom,
    s__subclass(s__ContinuousFunction,s__Function) ).

fof(kb_SUMO_2420,axiom,
    s__instance(s__ContinuousFunction__t,s__SetOrClass) ).

fof(kb_SUMO_2421,axiom,
    s__documentation(s__ContinuousFunction,s__EnglishLanguage,'&%Functions which are continuous. This concept is taken as primitive until representations for limits are devised.') ).

fof(kb_SUMO_2422,axiom,
    s__subclass(s__BinaryPredicate,s__Predicate) ).

fof(kb_SUMO_2423,axiom,
    s__subclass(s__BinaryPredicate,s__BinaryRelation) ).

fof(kb_SUMO_2424,axiom,
    s__instance(s__BinaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_2425,axiom,
    s__subclass(s__BinaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_2426,axiom,
    s__documentation(s__BinaryPredicate,s__EnglishLanguage,'A &%Predicate relating two items - its valence is two.') ).

fof(kb_SUMO_2427,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__BinaryPredicate)
       => s__valence(V__REL,"2") ) ) ).

fof(kb_SUMO_2428,axiom,
    s__subclass(s__TernaryPredicate,s__Predicate) ).

fof(kb_SUMO_2429,axiom,
    s__subclass(s__TernaryPredicate,s__TernaryRelation) ).

fof(kb_SUMO_2430,axiom,
    s__instance(s__TernaryRelation__t,s__SetOrClass) ).

fof(kb_SUMO_2431,axiom,
    s__subclass(s__TernaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_2432,axiom,
    s__documentation(s__TernaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require exactly three arguments.') ).

fof(kb_SUMO_2433,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__TernaryPredicate)
       => s__valence(V__REL,"3") ) ) ).

fof(kb_SUMO_2434,axiom,
    s__subclass(s__QuaternaryPredicate,s__Predicate) ).

fof(kb_SUMO_2435,axiom,
    s__subclass(s__QuaternaryPredicate,s__QuaternaryRelation) ).

fof(kb_SUMO_2436,axiom,
    s__subclass(s__QuaternaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_2437,axiom,
    s__instance(s__QuaternaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_2438,axiom,
    s__documentation(s__QuaternaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require four arguments.') ).

fof(kb_SUMO_2439,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__QuaternaryPredicate)
       => s__valence(V__REL,"4") ) ) ).

fof(kb_SUMO_2440,axiom,
    s__subclass(s__QuintaryPredicate,s__Predicate) ).

fof(kb_SUMO_2441,axiom,
    s__subclass(s__QuintaryPredicate,s__QuintaryRelation) ).

fof(kb_SUMO_2442,axiom,
    s__subclass(s__QuintaryPredicate,s__InheritableRelation) ).

fof(kb_SUMO_2443,axiom,
    s__instance(s__QuintaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_2444,axiom,
    s__documentation(s__QuintaryPredicate,s__EnglishLanguage,'The &%Class of &%Predicates that require five arguments.') ).

fof(kb_SUMO_2445,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__QuintaryPredicate)
       => s__valence(V__REL,"5") ) ) ).

fof(kb_SUMO_2446,axiom,
    s__subclass(s__VariableArityRelation,s__Relation) ).

fof(kb_SUMO_2447,axiom,
    s__documentation(s__VariableArityRelation,s__EnglishLanguage,'The &%Class of &%Relations that do not have a fixed number of arguments.') ).

fof(kb_SUMO_2448,axiom,
    ! [V__REL] :
      ( s__instance(V__REL,s__Relation)
     => ( s__instance(V__REL,s__VariableArityRelation)
       => ~ ? [V__INT] :
              ( s__instance(V__INT,s__PositiveInteger)
              & s__valence(V__REL,V__INT) ) ) ) ).

fof(kb_SUMO_2449,axiom,
    s__subclass(s__RelationExtendedToQuantities,s__Relation) ).

fof(kb_SUMO_2450,axiom,
    s__subclass(s__RelationExtendedToQuantities,s__InheritableRelation) ).

fof(kb_SUMO_2451,axiom,
    s__documentation(s__RelationExtendedToQuantities,s__EnglishLanguage,'A &%RelationExtendedToQuantities is a &%Relation that, when it is true on a sequence of arguments that are &%RealNumbers, it is also true on a sequence of instances of &%ConstantQuantity with those magnitudes in some unit of measure. For example, the &%lessThan relation is extended to quantities. This means that for all pairs of quantities ?QUANTITY1 and ?QUANTITY2, (&%lessThan ?QUANTITY1 ?QUANTITY2) if and only if, for some ?NUMBER1, ?NUMBER2, and ?UNIT, ?QUANTITY1 = (&%MeasureFn ?NUMBER1 ?UNIT), ?QUANTITY2 = (&%MeasureFn ?NUMBER2 ?UNIT), and (&%lessThan ?NUMBER1 ?NUMBER2), for all units ?UNIT on which ?QUANTITY1 and ?QUANTITY2 can be measured. Note that, when a &%RelationExtendedToQuantities is extended from &%RealNumbers to instances of &%ConstantQuantity, the &%ConstantQuantity must be measured along the same physical dimension.') ).

fof(kb_SUMO_2452,axiom,
    s__subclass(s__LogicalOperator,s__Predicate) ).

fof(kb_SUMO_2453,axiom,
    s__instance(s__LogicalOperator__t,s__SetOrClass) ).

fof(kb_SUMO_2454,axiom,
    s__documentation(s__LogicalOperator,s__EnglishLanguage,'This &%Class comprises all of the logical operators (viz. and, or, not, =>, and <=>).') ).

fof(kb_SUMO_2455,axiom,
    s__subclass(s__Proposition,s__Abstract) ).

fof(kb_SUMO_2456,axiom,
    s__documentation(s__Proposition,s__EnglishLanguage,'&%Propositions are &%Abstract entities that express a complete thought or a set of such thoughts. As an example, the formula (instance Yojo Cat) expresses the &%Proposition that the entity named Yojo is an element of the &%Class of Cats. Note that propositions are not restricted to the content expressed by individual sentences of a &%Language. They may encompass the content expressed by theories, books, and even whole libraries. It is important to distinguish &%Propositions from the &%ContentBearingObjects that express them. A &%Proposition is a piece of information, e.g. that the cat is on the mat, but a &%ContentBearingObject is an &%Object that represents this information. A &%Proposition is an abstraction that may have multiple representations: strings, sounds, icons, etc. For example, the &%Proposition that the cat is on the mat is represented here as a string of graphical characters displayed on a monitor and/or printed on paper, but it can be represented by a sequence of sounds or by some non-latin alphabet or by some cryptographic form') ).

fof(kb_SUMO_2457,axiom,
    s__instance(s__closedOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2458,axiom,
    s__instance(s__closedOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2459,axiom,
    s__domain(s__closedOn__m,"1",s__Function) ).

fof(kb_SUMO_2460,axiom,
    s__domain(s__closedOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2461,axiom,
    s__documentation(s__closedOn__m,s__EnglishLanguage,'A &%BinaryFunction is closed on a &%SetOrClass if it is defined for all instances of the &%SetOrClass and its value is always an instance of the &%SetOrClass.') ).

fof(kb_SUMO_2462,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( ( s__closedOn(V__FUNCTION,V__CLASS)
        & s__instance(V__FUNCTION,s__UnaryFunction) )
     => ! [V__INST] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instance(s__AssignmentFn_2(V__FUNCTION,V__INST),V__CLASS) ) ) ) ).

fof(kb_SUMO_2463,axiom,
    ! [V__CLASS,V__FUNCTION] :
      ( ( s__closedOn(V__FUNCTION,V__CLASS)
        & s__instance(V__FUNCTION,s__BinaryFunction) )
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__FUNCTION,s__Function)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__CLASS) )
           => s__instance(s__AssignmentFn_3(V__FUNCTION,V__INST1,V__INST2),V__CLASS) ) ) ) ).

fof(kb_SUMO_2464,axiom,
    s__instance(s__reflexiveOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2465,axiom,
    s__instance(s__reflexiveOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2466,axiom,
    s__domain(s__reflexiveOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2467,axiom,
    s__domain(s__reflexiveOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2468,axiom,
    s__documentation(s__reflexiveOn__m,s__EnglishLanguage,'A &%BinaryRelation is reflexive on a &%SetOrClass only if every instance of the &%SetOrClass bears the relation to itself.') ).

fof(kb_SUMO_2469,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__distributes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__distributes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2470,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__manner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__manner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2471,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relatedEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__relatedEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2472,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__identicalListItems__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__identicalListItems(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2473,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__acquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__acquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2474,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__spouse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__spouse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2475,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__exploits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__exploits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2476,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__believes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__believes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2477,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__resource__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__resource(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2478,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__closedOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__closedOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2479,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__brother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__brother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2480,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__conclusion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__conclusion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2481,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subsumesContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subsumesContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2482,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__employs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__employs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2483,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__containsInformation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__containsInformation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2484,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__properlyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__properlyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2485,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__barometricPressure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__UnitOfAtmosphericPressure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__barometricPressure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2486,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__finishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__finishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2487,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__parent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__parent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2488,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__located__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__located(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2489,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partialOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partialOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2490,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__average__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__average(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2491,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__lineMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__lineMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2492,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__abstractCounterpart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Abstract)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__abstractCounterpart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2493,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__date__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__date(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2494,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__member__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__member(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2495,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meetsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meetsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2496,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__diameter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__diameter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2497,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(greater__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => greater(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2498,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__entails__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__entails(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2499,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subCollection__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subCollection(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2500,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__expressedInLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__expressedInLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2501,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sister__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sister(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2502,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__irreflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__irreflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2503,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__boilingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__boilingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2504,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__crosses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__crosses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2505,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__angularMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__INST,s__PlaneAngleMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__angularMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2506,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__precondition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__precondition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2507,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__trichotomizingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__trichotomizingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2508,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inScopeOfInterest__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inScopeOfInterest(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2509,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__disjointRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__disjointRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2510,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__atomicNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ElementalSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__atomicNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2511,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__origin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__origin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2512,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__ancestor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__ancestor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2513,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__angleOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__angleOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2514,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__uniqueIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__uniqueIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2515,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__valence__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__valence(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2516,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__temporalPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__temporalPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2517,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2518,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__attribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__attribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2519,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__destination__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__destination(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2520,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__mutualAcquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__mutualAcquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2521,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__arcWeight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphArc)
            & s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__arcWeight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2522,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__developmentalForm__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OrganicObject)
            & s__instance(V__INST,s__DevelopmentalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__developmentalForm(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2523,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__home__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__home(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2524,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__connected__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__connected(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2525,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relative__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__relative(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2526,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__sibling__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__sibling(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2527,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__top__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__top(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2528,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalentContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalentContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2529,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__patient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__patient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2530,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__agent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__agent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2531,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__totalOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__totalOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2532,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__beforeOrEqual__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__beforeOrEqual(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2533,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__material__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Substance)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__material(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2534,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__identityElement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__identityElement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2535,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__smaller__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__smaller(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2536,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2537,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__cooccur__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__cooccur(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2538,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2539,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__needs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__needs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2540,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__realization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__realization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2541,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geopoliticalSubdivision__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geopoliticalSubdivision(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2542,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__authors__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__authors(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2543,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__superficialPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__superficialPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2544,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__during__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__during(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2545,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__parallel__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__parallel(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2546,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__piece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__piece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2547,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inhibits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inhibits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2548,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causesSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causesSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2549,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__changesLocation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Translocation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__changesLocation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2550,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__bottom__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__bottom(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2551,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__time__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__time(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2552,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__considers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__considers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2553,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__independentProbability__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__independentProbability(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2554,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__eventPartlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__eventPartlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2555,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__path__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__path(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2556,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subPlan__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Plan)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subPlan(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2557,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__editor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__editor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2558,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__measure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__measure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2559,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__age__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__age(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2560,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__transactionAmount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__transactionAmount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2561,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__frequency__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__frequency(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2562,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalentContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalentContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2563,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wife__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wife(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2564,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__uses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__uses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2565,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__legalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__legalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2566,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__linearExtent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__linearExtent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2567,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__experiencer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__experiencer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2568,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__larger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__larger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2569,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__result__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__result(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2570,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(lesseq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => lesseq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2571,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__element__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__element(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2572,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__component__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__component(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2573,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__decreasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__decreasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2574,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__moves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__moves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2575,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__stays__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__TemporaryResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__stays(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2576,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__externalImage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__externalImage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2577,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2578,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__version__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Artifact)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__version(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2579,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__length__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__length(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2580,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__property__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__property(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2581,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wants__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wants(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2582,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__familyRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__familyRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2583,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2584,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2585,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2586,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__side__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__side(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2587,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__grasps__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__grasps(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2588,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__exactlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__exactlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2589,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meltingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meltingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2590,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__pathLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphPath)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__pathLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2591,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__possesses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__possesses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2592,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__premise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__premise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2593,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__successorAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__successorAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2594,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subGraph__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subGraph(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2595,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__leader__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__leader(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2596,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__properPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__properPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2597,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(greatereq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => greatereq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2598,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__represents__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__represents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2599,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__height__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__height(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2600,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__immediateInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__immediateInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2601,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__completelyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__completelyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2602,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__publishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__publishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2603,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subProcess__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subProcess(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2604,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__engineeringSubcomponent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__engineeringSubcomponent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2605,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__prevents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__prevents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2606,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__desires__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__desires(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2607,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__equivalenceRelationOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__equivalenceRelationOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2608,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__graphPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphElement)
            & s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__graphPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2609,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2610,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__direction__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__direction(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2611,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__involvedInEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__involvedInEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2612,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__son__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__son(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2613,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsObligation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsObligation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2614,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__instance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2615,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasSkill__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasSkill(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2616,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__immediateSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__immediateSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2617,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__daughter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__daughter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2618,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__traverses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__traverses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2619,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__attends__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Demonstrating)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__attends(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2620,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsPartially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsPartially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2621,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subsumesContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subsumesContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2622,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsDuring__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsDuring(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2623,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2624,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geometricPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geometricPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2625,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__meetsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__meetsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2626,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__before__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__before(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2627,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__initialList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__initialList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2628,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__consistent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__consistent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2629,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__contains__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__contains(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2630,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__overlapsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__overlapsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2631,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__weight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__MassMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__weight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2632,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__truth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Sentence)
            & s__instance(V__INST,s__TruthValue)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__truth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2633,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__radius__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__radius(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2634,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__monetaryValue__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__monetaryValue(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2635,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__names__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__names(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2636,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__starts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__starts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2637,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__instrument__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__instrument(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2638,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__multiplicativeFactor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__multiplicativeFactor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2639,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__faces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__faces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2640,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__father__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__father(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2641,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__surface__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__surface(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2642,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__knows__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__knows(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2643,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subSystem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subSystem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2644,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__citizen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Nation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__citizen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2645,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(less__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => less(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2646,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__successorAttributeClosure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__successorAttributeClosure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2647,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__increasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__increasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2648,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__modalAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__NormativeAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__modalAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2649,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__pointOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricPoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__pointOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2650,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causesProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causesProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2651,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__connectedEngineeringComponents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__connectedEngineeringComponents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2652,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__fills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__fills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2653,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__eventLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__eventLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2654,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__causes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__causes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2655,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__husband__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__husband(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2656,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hole__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hole(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2657,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__wears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__INST,s__WearableItem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__wears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2658,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__duration__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__duration(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2659,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__penetrates__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__penetrates(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2660,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__part__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__part(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2661,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__range__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__range(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2662,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__partiallyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__partiallyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2663,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2664,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__systemPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__systemPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2665,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__geographicSubregion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeographicArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__geographicSubregion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2666,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__rangeSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__SetOrClass)
            & s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__rangeSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2667,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__graphMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__INST,s__UnitOfMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__graphMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2668,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inverse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inverse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2669,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__relatedInternalConcept__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__relatedInternalConcept(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2670,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__earlier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__earlier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2671,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__hasPurpose__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__hasPurpose(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2672,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__reflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__reflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2673,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__subrelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__subrelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2674,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__interiorPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__interiorPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2675,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__copy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__copy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2676,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__disjoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__disjoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2677,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__holdsRight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__holdsRight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2678,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__inhabits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__inhabits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2679,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__refers__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => s__refers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2680,axiom,
    ! [V__CLASS] :
      ( s__reflexiveOn(s__width__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => s__width(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2681,axiom,
    s__instance(s__irreflexiveOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2682,axiom,
    s__instance(s__irreflexiveOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2683,axiom,
    s__domain(s__irreflexiveOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2684,axiom,
    s__domain(s__irreflexiveOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2685,axiom,
    s__documentation(s__irreflexiveOn__m,s__EnglishLanguage,'A &%BinaryRelation is irreflexive on a &%SetOrClass only if no instance of the &%SetOrClass bears the relation to itself.') ).

fof(kb_SUMO_2686,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__starts__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__starts(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2687,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__time__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__time(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2688,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geopoliticalSubdivision__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeopoliticalArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geopoliticalSubdivision(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2689,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__truth__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Sentence)
            & s__instance(V__INST,s__TruthValue)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__truth(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2690,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wife__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wife(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2691,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2692,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__weight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__MassMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__weight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2693,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meltingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meltingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2694,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__result__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__result(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2695,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subOrganization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subOrganization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2696,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2697,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__height__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__height(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2698,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relatedInternalConcept__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relatedInternalConcept(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2699,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__involvedInEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__involvedInEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2700,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__publishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__publishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2701,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__citizen__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__Nation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__citizen(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2702,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__measure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__PhysicalQuantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__measure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2703,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__width__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__width(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2704,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2705,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__experiencer__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__experiencer(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2706,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__range__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__range(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2707,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__legalRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__legalRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2708,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__multiplicativeFactor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Integer)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__multiplicativeFactor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2709,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__cooccur__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__cooccur(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2710,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__editor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__editor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2711,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__before__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__before(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2712,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasPurpose__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasPurpose(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2713,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causesSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causesSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2714,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__trichotomizingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__trichotomizingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2715,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__husband__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__husband(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2716,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__totalOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__totalOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2717,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__member__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__member(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2718,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__father__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__father(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2719,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__larger__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__larger(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2720,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2721,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsPartially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsPartially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2722,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__instrument__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__instrument(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2723,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sister__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Woman)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sister(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2724,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__boilingPoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__PureSubstance)
            & s__instance(V__INST,s__TemperatureMeasure)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__boilingPoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2725,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__material__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Substance)
            & s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__material(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2726,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__ancestor__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__ancestor(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2727,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__parent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__parent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2728,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__increasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__increasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2729,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partiallyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partiallyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2730,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__developmentalForm__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OrganicObject)
            & s__instance(V__INST,s__DevelopmentalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__developmentalForm(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2731,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__abstractCounterpart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Abstract)
            & s__instance(V__INST,s__Physical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__abstractCounterpart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2732,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__diameter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__diameter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2733,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(greater__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ greater(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2734,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subPlan__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Plan)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subPlan(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2735,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__prevents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__prevents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2736,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__radius__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Circle)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__radius(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2737,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__externalImage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__externalImage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2738,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__son__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__son(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2739,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__side__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__side(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2740,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2741,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__employs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organization)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__employs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2742,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(lesseq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ lesseq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2743,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__realization__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__realization(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2744,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__rangeSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__SetOrClass)
            & s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__rangeSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2745,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geographicSubregion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeographicArea)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geographicSubregion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2746,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__conclusion__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__conclusion(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2747,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__attends__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Demonstrating)
            & s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__attends(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2748,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__engineeringSubcomponent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__engineeringSubcomponent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2749,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__authors__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Text)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__authors(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2750,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__traverses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__traverses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2751,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subProcess__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subProcess(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2752,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__identityElement__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__identityElement(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2753,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__interiorPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__interiorPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2754,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__resource__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__resource(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2755,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__connectedEngineeringComponents__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__EngineeringComponent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__connectedEngineeringComponents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2756,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__pathLength__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphPath)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__pathLength(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2757,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wants__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wants(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2758,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__eventLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__eventLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2759,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__earlier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__earlier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2760,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subset__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subset(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2761,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subSystem__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subSystem(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2762,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subCollection__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Collection)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subCollection(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2763,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causesProposition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causesProposition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2764,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inScopeOfInterest__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inScopeOfInterest(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2765,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__successorAttributeClosure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__successorAttributeClosure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2766,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subGraph__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subGraph(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2767,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hole__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hole(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2768,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__independentProbability__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__independentProbability(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2769,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__connected__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__connected(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2770,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__linearExtent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__linearExtent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2771,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__reflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__reflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2772,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__identicalListItems__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__identicalListItems(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2773,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__disjointRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__disjointRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2774,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__disjoint__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__disjoint(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2775,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__bottom__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__bottom(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2776,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__consistent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__consistent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2777,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__superficialPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__superficialPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2778,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__destination__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__destination(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2779,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__penetrates__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__penetrates(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2780,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__moves__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__moves(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2781,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalentContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalentContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2782,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2783,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__stays__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__TemporaryResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__stays(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2784,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__believes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__believes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2785,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2786,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__initialList__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__initialList(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2787,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__direction__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__direction(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2788,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__barometricPressure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__UnitOfAtmosphericPressure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__barometricPressure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2789,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inhabits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inhabits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2790,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__needs__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__needs(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2791,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subsumesContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subsumesContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2792,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalentContentClass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalentContentClass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2793,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__knows__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__knows(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2794,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__entails__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__entails(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2795,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__wears__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__INST,s__WearableItem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__wears(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2796,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__hasSkill__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__hasSkill(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2797,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__names__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__names(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2798,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__valence__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__valence(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2799,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__origin__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__origin(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2800,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__average__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__List)
            & s__instance(V__INST,s__RealNumber)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__average(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2801,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__graphPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphElement)
            & s__instance(V__INST,s__Graph)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__graphPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2802,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__immediateSubclass__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__immediateSubclass(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2803,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__familyRelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__familyRelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2804,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__causes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__causes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2805,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__uniqueIdentifier__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SymbolicString)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__uniqueIdentifier(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2806,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__acquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__acquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2807,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__successorAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__successorAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2808,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__instance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__instance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2809,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__manner__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__manner(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2810,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2811,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meetsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meetsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2812,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__pointOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricPoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__pointOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2813,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__contains__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__contains(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2814,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__daughter__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__daughter(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2815,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__temporalPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__temporalPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2816,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__located__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__located(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2817,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__piece__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Substance)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__piece(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2818,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__mutualAcquaintance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__mutualAcquaintance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2819,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__exploits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__exploits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2820,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__properPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__properPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2821,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__version__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Artifact)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__version(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2822,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__date__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__Day)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__date(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2823,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__systemPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__PhysicalSystem)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__systemPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2824,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__attribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__attribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2825,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__brother__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Man)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__brother(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2826,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__graphMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Graph)
            & s__instance(V__INST,s__UnitOfMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__graphMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2827,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__properlyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__properlyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2828,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__age__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__age(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2829,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__copy__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__copy(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2830,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__surface__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__surface(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2831,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__crosses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__crosses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2832,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__transactionAmount__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__FinancialTransaction)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__transactionAmount(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2833,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__expressedInLanguage__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Language)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__expressedInLanguage(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2834,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__leader__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__leader(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2835,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__represents__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__represents(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2836,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__decreasesLikelihood__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__decreasesLikelihood(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2837,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__grasps__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Animal)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__grasps(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2838,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__meetsSpatially__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__meetsSpatially(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2839,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__overlapsTemporally__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__overlapsTemporally(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2840,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__smaller__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__smaller(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2841,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__monetaryValue__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Physical)
            & s__instance(V__INST,s__CurrencyMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__monetaryValue(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2842,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__irreflexiveOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__irreflexiveOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2843,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(less__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ less(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2844,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__equivalenceRelationOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__equivalenceRelationOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2845,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__closedOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Function)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__closedOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2846,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__angularMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__INST,s__PlaneAngleMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__angularMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2847,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inhibits__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inhibits(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2848,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__home__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__INST,s__PermanentResidence)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__home(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2849,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__modalAttribute__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__NormativeAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__modalAttribute(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2850,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__during__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__during(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2851,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__top__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SelfConnectedObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__top(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2852,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__fills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__fills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2853,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__desires__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__desires(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2854,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__faces__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__DirectionalAttribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__faces(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2855,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__distributes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__distributes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2856,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsRight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsRight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2857,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__sibling__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__sibling(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2858,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__spouse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Human)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__spouse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2859,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__angleOfFigure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TwoDimensionalAngle)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__angleOfFigure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2860,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsDuring__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePosition)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsDuring(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2861,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__holdsObligation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Formula)
            & s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__holdsObligation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2862,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__partialOrderingOn__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__partialOrderingOn(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2863,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subsumesContentInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subsumesContentInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2864,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__inverse__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__BinaryRelation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__inverse(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2865,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__containsInformation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__ContentBearingPhysical)
            & s__instance(V__INST,s__Proposition)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__containsInformation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2866,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__beforeOrEqual__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimePoint)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__beforeOrEqual(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2867,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__eventPartlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__eventPartlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2868,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__element__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Set)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__element(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2869,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__frequency__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__frequency(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2870,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__agent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__agent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2871,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__premise__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Argument)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__premise(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2872,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__considers__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CognitiveAgent)
            & s__instance(V__INST,s__Formula)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__considers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2873,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__precondition__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__Process)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__precondition(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2874,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relative__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Organism)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relative(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2875,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__component__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__CorpuscularObject)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__component(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2876,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(greatereq__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ greatereq(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2877,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__exactlyLocated__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__exactlyLocated(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2878,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__subrelation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Relation)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__subrelation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2879,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__property__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Attribute)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__property(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2880,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__duration__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__INST,s__TimeDuration)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__duration(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2881,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__uses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__uses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2882,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__finishes__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__TimeInterval)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__finishes(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2883,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__refers__m,V__CLASS)
     => ! [V__INST] :
          ( s__instance(V__CLASS,s__SetOrClass)
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__refers(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2884,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__parallel__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__parallel(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2885,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__geometricPart__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GeometricFigure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__geometricPart(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2886,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__arcWeight__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__GraphArc)
            & s__instance(V__INST,s__Quantity)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__arcWeight(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2887,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__possesses__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Agent)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__possesses(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2888,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__immediateInstance__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__immediateInstance(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2889,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__patient__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__patient(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2890,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__changesLocation__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Translocation)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__changesLocation(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2891,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__completelyFills__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Hole)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__completelyFills(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2892,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__length__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Object)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__length(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2893,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__lineMeasure__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__OneDimensionalFigure)
            & s__instance(V__INST,s__LengthMeasure)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__lineMeasure(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2894,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__path__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Motion)
            & s__instance(V__INST,s__Object)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__path(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2895,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__atomicNumber__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__subclass(V__INST,s__ElementalSubstance)
            & s__instance(V__INST,s__PositiveInteger)
            & s__instance(V__INST,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__atomicNumber(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2896,axiom,
    ! [V__CLASS] :
      ( s__irreflexiveOn(s__relatedEvent__m,V__CLASS)
     => ! [V__INST] :
          ( ( s__instance(V__INST,s__Process)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( s__instance(V__INST,V__CLASS)
           => ~ s__relatedEvent(V__INST,V__INST) ) ) ) ).

fof(kb_SUMO_2897,axiom,
    s__instance(s__partialOrderingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2898,axiom,
    s__instance(s__partialOrderingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2899,axiom,
    s__domain(s__partialOrderingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2900,axiom,
    s__domain(s__partialOrderingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2901,axiom,
    s__documentation(s__partialOrderingOn__m,s__EnglishLanguage,'A &%BinaryRelation is a partial ordering on a &%SetOrClass only if the relation is &%reflexiveOn the &%SetOrClass, and it is both an &%AntisymmetricRelation, and a &%TransitiveRelation.') ).

fof(kb_SUMO_2902,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__partialOrderingOn(V__RELATION,V__CLASS)
       => ( s__reflexiveOn(V__RELATION,V__CLASS)
          & s__instance(V__RELATION,s__TransitiveRelation)
          & s__instance(V__RELATION,s__AntisymmetricRelation) ) ) ) ).

fof(kb_SUMO_2903,axiom,
    s__instance(s__totalOrderingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2904,axiom,
    s__instance(s__totalOrderingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2905,axiom,
    s__domain(s__totalOrderingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2906,axiom,
    s__domain(s__totalOrderingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2907,axiom,
    s__documentation(s__totalOrderingOn__m,s__EnglishLanguage,'A &%BinaryRelation ?REL is a total ordering on a &%SetOrClass only if it is a partial ordering for which either (?REL ?INST1 ?INST2) or (?REL ?INST2 ?INST1) for every ?INST1 and ?INST2 in the &%SetOrClass.') ).

fof(kb_SUMO_2908,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__totalOrderingOn(V__RELATION,V__CLASS)
      <=> ( s__partialOrderingOn(V__RELATION,V__CLASS)
          & s__trichotomizingOn(V__RELATION,V__CLASS) ) ) ) ).

fof(kb_SUMO_2909,axiom,
    s__instance(s__trichotomizingOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2910,axiom,
    s__instance(s__trichotomizingOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2911,axiom,
    s__domain(s__trichotomizingOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2912,axiom,
    s__domain(s__trichotomizingOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2913,axiom,
    s__documentation(s__trichotomizingOn__m,s__EnglishLanguage,'A &%BinaryRelation ?REL is trichotomizing on a &%SetOrClass only if, for all instances ?INST1 and ?INST2 of the &%SetOrClass, at least one of the following holds: (?REL ?INST1 ?INST2), (?REL ?INST2 ?INST1) or (equal ?INST1 ?INST2).') ).

fof(kb_SUMO_2914,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( greatereq(V__INST1,V__INST2)
          | greatereq(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_2915,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( lesseq(V__INST1,V__INST2)
          | lesseq(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_2916,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( greater(V__INST1,V__INST2)
          | greater(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_2917,axiom,
    ! [V__INST1,V__INST2] :
      ( ( s__instance(V__INST2,s__Quantity)
        & s__instance(V__INST1,s__Quantity) )
     => ( ( s__instance(V__INST1,s__RealNumber)
          & s__instance(V__INST2,s__RealNumber) )
       => ( less(V__INST1,V__INST2)
          | less(V__INST2,V__INST1)
          | V__INST1 = V__INST2 ) ) ) ).

fof(kb_SUMO_2918,axiom,
    s__instance(s__equivalenceRelationOn__m,s__BinaryPredicate) ).

fof(kb_SUMO_2919,axiom,
    s__instance(s__equivalenceRelationOn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2920,axiom,
    s__domain(s__equivalenceRelationOn__m,"1",s__BinaryRelation) ).

fof(kb_SUMO_2921,axiom,
    s__domain(s__equivalenceRelationOn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_2922,axiom,
    s__documentation(s__equivalenceRelationOn__m,s__EnglishLanguage,'A &%BinaryRelation is an &%equivalenceRelationOn a &%SetOrClass only if the relation is &%reflexiveOn the &%SetOrClass and it is both a &%TransitiveRelation and a &%SymmetricRelation.') ).

fof(kb_SUMO_2923,axiom,
    ! [V__CLASS,V__RELATION] :
      ( ( s__instance(V__RELATION,s__BinaryRelation)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__equivalenceRelationOn(V__RELATION,V__CLASS)
       => ( s__instance(V__RELATION,s__TransitiveRelation)
          & s__instance(V__RELATION,s__SymmetricRelation)
          & s__reflexiveOn(V__RELATION,V__CLASS) ) ) ) ).

fof(kb_SUMO_2924,axiom,
    s__instance(s__distributes__m,s__BinaryPredicate) ).

fof(kb_SUMO_2925,axiom,
    s__instance(s__distributes__m,s__BinaryRelation) ).

fof(kb_SUMO_2926,axiom,
    s__domain(s__distributes__m,"1",s__BinaryFunction) ).

fof(kb_SUMO_2927,axiom,
    s__domain(s__distributes__m,"2",s__BinaryFunction) ).

fof(kb_SUMO_2928,axiom,
    s__documentation(s__distributes__m,s__EnglishLanguage,'A &%BinaryFunction ?FUNCTION1 is distributive over another &%BinaryFunction ?FUNCTION2 just in case (?FUNCTION1 ?INST1 (?FUNCTION2 ?INST2 ?INST3)) is equal to (?FUNCTION2 (?FUNCTION1 ?INST1 ?INST2) (?FUNCTION1 ?INST1 ?INST3)), for all ?INST1, ?INST2, and ?INST3.') ).

fof(kb_SUMO_2929,axiom,
    ! [V__FUNCTION1,V__FUNCTION2,V__CLASS1,V__CLASS2] :
      ( s__distributes(V__FUNCTION1,V__FUNCTION2)
     => ! [V__INST1,V__INST2,V__INST3] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass)
            & s__instance(V__FUNCTION2,s__BinaryFunction)
            & s__instance(V__FUNCTION1,s__BinaryFunction) )
         => ( ( s__domain(V__FUNCTION1,"1",V__CLASS1)
              & s__instance(V__INST1,V__CLASS1)
              & s__instance(V__INST2,V__CLASS1)
              & s__instance(V__INST3,V__CLASS1)
              & s__domain(V__FUNCTION2,"1",V__CLASS2)
              & s__instance(V__INST1,V__CLASS2)
              & s__instance(V__INST2,V__CLASS2)
              & s__instance(V__INST3,V__CLASS2) )
           => s__AssignmentFn_3(V__FUNCTION1,V__INST1,s__AssignmentFn_3(V__FUNCTION2,V__INST2,V__INST3)) = s__AssignmentFn_3(V__FUNCTION2,s__AssignmentFn_3(V__FUNCTION1,V__INST1,V__INST2),s__AssignmentFn_3(V__FUNCTION1,V__INST1,V__INST3)) ) ) ) ).

fof(kb_SUMO_2930,axiom,
    s__documentation(s__relatedEvent__m,s__EnglishLanguage,'(relatedEvent ?EVENT1 ?EVENT2) means that the &%Process ?EVENT1 is related to the Process ?EVENT2. The relationship is between separate individual events, not events and their subprocesses. On the other hand, two &%subProcesses of the same overarching event may be &%relatedEvents. The argument order does not imply temporal ordering.') ).

fof(kb_SUMO_2931,axiom,
    s__instance(s__relatedEvent__m,s__BinaryPredicate) ).

fof(kb_SUMO_2932,axiom,
    s__instance(s__relatedEvent__m,s__SymmetricRelation) ).

fof(kb_SUMO_2933,axiom,
    s__domain(s__relatedEvent__m,"1",s__Process) ).

fof(kb_SUMO_2934,axiom,
    s__domain(s__relatedEvent__m,"2",s__Process) ).

fof(kb_SUMO_2935,axiom,
    ! [V__P,V__S1,V__S2] :
      ( ( s__instance(V__S2,s__Process)
        & s__instance(V__S1,s__Process)
        & s__instance(V__P,s__Process) )
     => ( ( s__subProcess(V__S1,V__P)
          & s__subProcess(V__S2,V__P) )
       => s__relatedEvent(V__S1,V__S2) ) ) ).

fof(kb_SUMO_2936,axiom,
    s__instance(s__causes__m,s__BinaryPredicate) ).

fof(kb_SUMO_2937,axiom,
    s__instance(s__causes__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2938,axiom,
    s__domain(s__causes__m,"1",s__Process) ).

fof(kb_SUMO_2939,axiom,
    s__domain(s__causes__m,"2",s__Process) ).

fof(kb_SUMO_2940,axiom,
    s__relatedInternalConcept(s__causes__m,s__causesSubclass__m) ).

fof(kb_SUMO_2941,axiom,
    s__subrelation(s__causes__m,s__relatedEvent__m) ).

fof(kb_SUMO_2942,axiom,
    s__documentation(s__causes__m,s__EnglishLanguage,'The causation relation between instances of &%Process. (&%causes ?PROCESS1 ?PROCESS2) means that the instance of &%Process ?PROCESS1 brings about the instance of &%Process ?PROCESS2.') ).

fof(kb_SUMO_2943,axiom,
    ! [V__PROC1] :
      ( s__instance(V__PROC1,s__Process)
     => ? [V__PROC2] :
          ( s__instance(V__PROC2,s__Process)
          & s__causes(V__PROC2,V__PROC1) ) ) ).

fof(kb_SUMO_2944,axiom,
    ! [V__P2,V__P1] :
      ( ( s__instance(V__P1,s__Process)
        & s__instance(V__P2,s__Process) )
     => ( s__causes(V__P1,V__P2)
       => s__earlier(s__WhenFn(V__P1),s__WhenFn(V__P2)) ) ) ).

fof(kb_SUMO_2945,axiom,
    s__instance(s__causesSubclass__m,s__BinaryPredicate) ).

fof(kb_SUMO_2946,axiom,
    s__instance(s__causesSubclass__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2947,axiom,
    s__domainSubclass(s__causesSubclass__m,"1",s__Process) ).

fof(kb_SUMO_2948,axiom,
    s__domainSubclass(s__causesSubclass__m,"2",s__Process) ).

fof(kb_SUMO_2949,axiom,
    s__documentation(s__causesSubclass__m,s__EnglishLanguage,'The causation relation between subclasses of &%Process. (&%causesSubclass ?PROCESS1 ?PROCESS2) means that the subclass of &%Process ?PROCESS1 brings about the subclass of &%Process ?PROCESS2, e.g. (&%causesSubclass &%Killing &%Death).') ).

fof(kb_SUMO_2950,axiom,
    ! [V__PROC2,V__PROC1] :
      ( s__causesSubclass(V__PROC1,V__PROC2)
     => ! [V__INST2] :
          ( ( s__instance(V__INST2,s__Process)
            & s__subclass(V__PROC1,s__Process)
            & s__instance(V__PROC1,s__SetOrClass)
            & s__subclass(V__PROC2,s__Process)
            & s__instance(V__PROC2,s__SetOrClass) )
         => ( s__instance(V__INST2,V__PROC2)
           => ? [V__INST1] :
                ( s__instance(V__INST1,s__Process)
                & s__instance(V__INST1,V__PROC1)
                & s__causes(V__INST1,V__INST2) ) ) ) ) ).

fof(kb_SUMO_2951,axiom,
    s__instance(s__causesProposition__m,s__BinaryPredicate) ).

fof(kb_SUMO_2952,axiom,
    s__instance(s__causesProposition__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2953,axiom,
    s__domain(s__causesProposition__m,"1",s__Formula) ).

fof(kb_SUMO_2954,axiom,
    s__domain(s__causesProposition__m,"2",s__Formula) ).

fof(kb_SUMO_2955,axiom,
    s__documentation(s__causesProposition__m,s__EnglishLanguage,'(&%causesProposition ?FORMULA1 ?FORMULA2) means that the state of affairs described by ?FORMULA1 causes, or mechanistically brings about, the state of affairs described by ?FORMULA2. Note that unlike &%entails, the time during which ?FORMULA2 holds cannot precede the time during which ?FORMULA1 holds, although ?FORMULA1 and ?FORMULA2 can hold simultaneously. Note, also, that &%causesProposition is a predicate, not a truth function. The following rule (contraposition) does not hold: (=> (causesProp ?FORMULA1 ?FORMULA2) (causesProp (not ?FORMULA2) (not ?FORMULA1))).') ).

fof(kb_SUMO_2956,axiom,
    ! [V__T2,V__T1,V__SIT1,V__SIT2] :
      ( ( s__instance(V__SIT2,s__Formula)
        & s__instance(V__SIT1,s__Formula) )
     => ( ( s__holdsDuring(V__T2,V__SIT2)
          & s__holdsDuring(V__T1,V__SIT1)
          & s__instance(V__T1,s__TimeInterval)
          & s__instance(V__T2,s__TimeInterval)
          & s__causesProposition(V__SIT1,V__SIT2) )
       => s__beforeOrEqual(s__BeginFn(V__T1),s__BeginFn(V__T2)) ) ) ).

fof(kb_SUMO_2957,axiom,
    s__instance(s__copy__m,s__BinaryPredicate) ).

fof(kb_SUMO_2958,axiom,
    s__instance(s__copy__m,s__EquivalenceRelation) ).

fof(kb_SUMO_2959,axiom,
    s__domain(s__copy__m,"1",s__Object) ).

fof(kb_SUMO_2960,axiom,
    s__domain(s__copy__m,"2",s__Object) ).

fof(kb_SUMO_2961,axiom,
    s__documentation(s__copy__m,s__EnglishLanguage,'relates an &%Object to an exact copy of the &%Object, where an exact copy is indistinguishable from the original with regard to every property except (possibly) spatial and/or temporal location.') ).

fof(kb_SUMO_2962,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__copy(V__OBJ1,V__OBJ2)
     => ! [V__ATTR] :
          ( ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__attribute(V__OBJ1,V__ATTR)
           => s__attribute(V__OBJ2,V__ATTR) ) ) ) ).

fof(kb_SUMO_2963,axiom,
    s__instance(s__time__m,s__BinaryPredicate) ).

fof(kb_SUMO_2964,axiom,
    s__instance(s__time__m,s__TemporalRelation) ).

fof(kb_SUMO_2965,axiom,
    s__instance(s__time__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2966,axiom,
    s__domain(s__time__m,"1",s__Physical) ).

fof(kb_SUMO_2967,axiom,
    s__domain(s__time__m,"2",s__TimePosition) ).

fof(kb_SUMO_2968,axiom,
    s__relatedInternalConcept(s__time__m,s__located__m) ).

fof(kb_SUMO_2969,axiom,
    s__relatedInternalConcept(s__time__m,s__holdsDuring__m) ).

fof(kb_SUMO_2970,axiom,
    s__documentation(s__time__m,s__EnglishLanguage,'This relation holds between an instance of &%Physical and an instance of &%TimePosition just in case the temporal lifespan of the former includes the latter. In other words, (&%time ?THING ?TIME) means that ?THING existed or occurred at ?TIME. Note that &%time does for instances of &%Physical what &%holdsDuring does for instances of &%Formula. The constants &%located and &%time are the basic spatial and temporal predicates, respectively.') ).

fof(kb_SUMO_2971,axiom,
    s__instance(s__holdsDuring__m,s__BinaryPredicate) ).

fof(kb_SUMO_2972,axiom,
    s__instance(s__holdsDuring__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2973,axiom,
    s__domain(s__holdsDuring__m,"1",s__TimePosition) ).

fof(kb_SUMO_2974,axiom,
    s__domain(s__holdsDuring__m,"2",s__Formula) ).

fof(kb_SUMO_2975,axiom,
    s__documentation(s__holdsDuring__m,s__EnglishLanguage,'(&%holdsDuring ?TIME ?FORMULA) means that the proposition denoted by ?FORMULA is true in the time frame ?TIME. Note that this implies that ?FORMULA is true at every &%TimePoint which is a &%temporalPart of ?TIME.') ).

fof(kb_SUMO_2976,axiom,
    ! [V__SITUATION1,V__SITUATION2,V__TIME] :
      ( ( s__instance(V__TIME,s__TimePosition)
        & s__instance(V__SITUATION2,s__Formula)
        & s__instance(V__SITUATION1,s__Formula) )
     => ( ( s__holdsDuring(V__TIME,V__SITUATION1)
          & s__entails(V__SITUATION1,V__SITUATION2) )
       => s__holdsDuring(V__TIME,V__SITUATION2) ) ) ).

fof(kb_SUMO_2977,axiom,
    ! [V__TIME,V__SITUATION] :
      ( ( s__instance(V__SITUATION,s__Formula)
        & s__instance(V__TIME,s__TimePosition) )
     => ( s__holdsDuring(V__TIME,'(~ V__SITUATION)')
       => ~ s__holdsDuring(V__TIME,V__SITUATION) ) ) ).

fof(kb_SUMO_2978,axiom,
    s__instance(s__capability__m,s__TernaryPredicate) ).

fof(kb_SUMO_2979,axiom,
    s__domainSubclass(s__capability__m,"1",s__Process) ).

fof(kb_SUMO_2980,axiom,
    s__domain(s__capability__m,"2",s__CaseRole) ).

fof(kb_SUMO_2981,axiom,
    s__domain(s__capability__m,"3",s__Object) ).

fof(kb_SUMO_2982,axiom,
    s__documentation(s__capability__m,s__EnglishLanguage,'(&%capability ?PROCESS ?ROLE ?OBJ) means that ?OBJ has the ability to play the role of ?ROLE in &%Processes of type ?PROCESS.') ).

fof(kb_SUMO_2983,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__eventPartlyLocated(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__eventPartlyLocated__m,V__ARG2) ) ) ).

fof(kb_SUMO_2984,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__destination(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__destination__m,V__ARG2) ) ) ).

fof(kb_SUMO_2985,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__DirectionalAttribute)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__direction(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__direction__m,V__ARG2) ) ) ).

fof(kb_SUMO_2986,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Translocation) )
     => ( ( s__changesLocation(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__changesLocation__m,V__ARG2) ) ) ).

fof(kb_SUMO_2987,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__agent(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__agent__m,V__ARG2) ) ) ).

fof(kb_SUMO_2988,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Agent)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__experiencer(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__experiencer__m,V__ARG2) ) ) ).

fof(kb_SUMO_2989,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Motion) )
     => ( ( s__moves(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__moves__m,V__ARG2) ) ) ).

fof(kb_SUMO_2990,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__patient(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__patient__m,V__ARG2) ) ) ).

fof(kb_SUMO_2991,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Process) )
     => ( ( s__origin(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__origin__m,V__ARG2) ) ) ).

fof(kb_SUMO_2992,axiom,
    ! [V__ARG1,V__ARG2,V__PROC] :
      ( ( s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__ARG2,s__Object)
        & s__instance(V__ARG1,s__Motion) )
     => ( ( s__path(V__ARG1,V__ARG2)
          & s__instance(V__ARG1,V__PROC)
          & s__subclass(V__PROC,s__Process) )
       => s__capability(V__PROC,s__path__m,V__ARG2) ) ) ).

fof(kb_SUMO_2993,axiom,
    s__instance(s__exploits__m,s__BinaryPredicate) ).

fof(kb_SUMO_2994,axiom,
    s__instance(s__exploits__m,s__AsymmetricRelation) ).

fof(kb_SUMO_2995,axiom,
    s__domain(s__exploits__m,"1",s__Object) ).

fof(kb_SUMO_2996,axiom,
    s__domain(s__exploits__m,"2",s__Agent) ).

fof(kb_SUMO_2997,axiom,
    s__documentation(s__exploits__m,s__EnglishLanguage,'(&%exploits ?OBJ ?AGENT) means that ?OBJ is used by ?AGENT as a &%resource in an unspecified instance of &%Process. This &%Predicate, as its corresponding axiom indicates, is a composition of the relations &%agent and &%resource.') ).

fof(kb_SUMO_2998,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__exploits(V__OBJ,V__AGENT)
       => ? [V__PROCESS] :
            ( s__instance(V__PROCESS,s__Process)
            & s__agent(V__PROCESS,V__AGENT)
            & s__resource(V__PROCESS,V__OBJ) ) ) ) ).

fof(kb_SUMO_2999,axiom,
    s__instance(s__hasPurpose__m,s__BinaryPredicate) ).

fof(kb_SUMO_3000,axiom,
    s__instance(s__hasPurpose__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3001,axiom,
    s__domain(s__hasPurpose__m,"1",s__Physical) ).

fof(kb_SUMO_3002,axiom,
    s__domain(s__hasPurpose__m,"2",s__Formula) ).

fof(kb_SUMO_3003,axiom,
    s__documentation(s__hasPurpose__m,s__EnglishLanguage,'This &%Predicate expresses the concept of a conventional goal, i.e. a goal with a neutralized agents intention. Accordingly, (&%hasPurpose ?THING ?FORMULA) means that the instance of &%Physical ?THING has, as its purpose, the &%Proposition expressed by ?FORMULA. Note that there is an important difference in meaning between the &%Predicates &%hasPurpose and &%result. Although the second argument of the latter can satisfy the second argument of the former, a conventional goal is an expected and desired outcome, while a result may be neither expected nor desired. For example, a machine process may have outcomes but no goals, aimless wandering may have an outcome but no goal, a learning process may have goals with no outcomes, and so on.') ).

fof(kb_SUMO_3004,axiom,
    s__instance(s__hasPurposeForAgent__m,s__TernaryPredicate) ).

fof(kb_SUMO_3005,axiom,
    s__domain(s__hasPurposeForAgent__m,"1",s__Physical) ).

fof(kb_SUMO_3006,axiom,
    s__domain(s__hasPurposeForAgent__m,"2",s__Formula) ).

fof(kb_SUMO_3007,axiom,
    s__domain(s__hasPurposeForAgent__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_3008,axiom,
    s__documentation(s__hasPurposeForAgent__m,s__EnglishLanguage,'Expresses a cognitive attitude of an agent with respect to a particular instance of Physical. More precisely, (&%hasPurposeForAgent ?THING ?FORMULA ?AGENT) means that the purpose of ?THING for ?AGENT is the proposition expressed by ?FORMULA. Very complex issues are involved here. In particular, the rules of inference of the first order predicate calculus are not truth-preserving for the second argument position of this &%Predicate.') ).

fof(kb_SUMO_3009,axiom,
    ! [V__PURPOSE,V__THING] :
      ( ( s__instance(V__THING,s__Physical)
        & s__instance(V__PURPOSE,s__Formula) )
     => ( s__hasPurpose(V__THING,V__PURPOSE)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__CognitiveAgent)
            & s__hasPurposeForAgent(V__THING,V__PURPOSE,V__AGENT) ) ) ) ).

fof(kb_SUMO_3010,axiom,
    s__instance(s__hasSkill__m,s__BinaryPredicate) ).

fof(kb_SUMO_3011,axiom,
    s__instance(s__hasSkill__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3012,axiom,
    s__domainSubclass(s__hasSkill__m,"1",s__Process) ).

fof(kb_SUMO_3013,axiom,
    s__domain(s__hasSkill__m,"2",s__Agent) ).

fof(kb_SUMO_3014,axiom,
    s__documentation(s__hasSkill__m,s__EnglishLanguage,'Similar to the &%capability &%Predicate with the additional restriction that the ability be practised/ demonstrated to some measurable degree.') ).

fof(kb_SUMO_3015,axiom,
    ! [V__AGENT,V__PROC] :
      ( ( s__subclass(V__PROC,s__Process)
        & s__instance(V__PROC,s__SetOrClass)
        & s__instance(V__AGENT,s__Agent) )
     => ( s__hasSkill(V__PROC,V__AGENT)
       => s__capability(V__PROC,s__agent__m,V__AGENT) ) ) ).

fof(kb_SUMO_3016,axiom,
    s__instance(s__confersNorm__m,s__TernaryPredicate) ).

fof(kb_SUMO_3017,axiom,
    s__instance(s__TernaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_3018,axiom,
    s__domain(s__confersNorm__m,"1",s__Entity) ).

fof(kb_SUMO_3019,axiom,
    s__domain(s__confersNorm__m,"2",s__Formula) ).

fof(kb_SUMO_3020,axiom,
    s__domain(s__confersNorm__m,"3",s__ObjectiveNorm) ).

fof(kb_SUMO_3021,axiom,
    s__documentation(s__confersNorm__m,s__EnglishLanguage,'Expresses the relationship between a &%Formula, an &%Entity, and an &%ObjectiveNorm when the &%Entity brings it about that the &%Formula has the &%ObjectiveNorm.') ).

%FOL fof(kb_SUMO_3022,axiom,(( (! [V__TIME,V__FORMULA,V__ENTITY,V__NORM] : ((s__instance(V__NORM,s__ObjectiveNorm) & s__instance(V__FORMULA,s__Formula) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__confersNorm(V__ENTITY,V__FORMULA,V__NORM)') => (s__holdsDuring(s__ImmediatePastFn(V__TIME),'(~ s__modalAttribute(V__FORMULA,V__NORM))') & s__holdsDuring(s__ImmediateFutureFn(V__TIME),'s__modalAttribute(V__FORMULA,V__NORM)'))))) ))).

fof(kb_SUMO_3023,axiom,
    s__instance(s__deprivesNorm__m,s__TernaryPredicate) ).

fof(kb_SUMO_3024,axiom,
    s__disjointRelation(s__deprivesNorm__m,s__confersNorm__m) ).

fof(kb_SUMO_3025,axiom,
    s__domain(s__deprivesNorm__m,"1",s__Entity) ).

fof(kb_SUMO_3026,axiom,
    s__domain(s__deprivesNorm__m,"2",s__Formula) ).

fof(kb_SUMO_3027,axiom,
    s__domain(s__deprivesNorm__m,"3",s__ObjectiveNorm) ).

fof(kb_SUMO_3028,axiom,
    s__documentation(s__deprivesNorm__m,s__EnglishLanguage,'Expresses the relationship between an &%Entity, a &%Formula, and an &%ObjectiveNorm when the &%Entity brings it about that the &%Formula does not have the &%ObjectiveNorm.') ).

%FOL fof(kb_SUMO_3029,axiom,(( (! [V__TIME,V__FORMULA,V__ENTITY,V__NORM] : ((s__instance(V__NORM,s__ObjectiveNorm) & s__instance(V__FORMULA,s__Formula) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__deprivesNorm(V__ENTITY,V__FORMULA,V__NORM)') => (s__holdsDuring(s__ImmediatePastFn(V__TIME),'s__modalAttribute(V__FORMULA,V__NORM)') & s__holdsDuring(s__ImmediateFutureFn(V__TIME),'(~ s__modalAttribute(V__FORMULA,V__NORM))'))))) ))).

fof(kb_SUMO_3030,axiom,
    s__instance(s__partlyLocated__m,s__SpatialRelation) ).

fof(kb_SUMO_3031,axiom,
    s__instance(s__partlyLocated__m,s__BinaryPredicate) ).

fof(kb_SUMO_3032,axiom,
    s__domain(s__partlyLocated__m,"1",s__Physical) ).

fof(kb_SUMO_3033,axiom,
    s__domain(s__partlyLocated__m,"2",s__Object) ).

fof(kb_SUMO_3034,axiom,
    s__documentation(s__partlyLocated__m,s__EnglishLanguage,'(&%partlyLocated ?OBJ1 ?OBJ2) means that the instance of &%Physical ?OBJ1 is at least partially located at ?OBJ2. For example, Istanbul is partly located in &%Asia and partly located in &%Europe. Note that &%partlyLocated is the most basic localization relation: &%located is an immediate &%subrelation of &%partlyLocated and &%exactlyLocated is an immediate &%subrelation of &%located.') ).

fof(kb_SUMO_3035,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__instance(V__OBJ2,s__Object)
     => ( ( s__instance(V__OBJ1,s__Object)
          & s__partlyLocated(V__OBJ1,V__OBJ2) )
       => s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_3036,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__instance(V__OBJ2,s__Object)
     => ( ( s__instance(V__OBJ1,s__Object)
          & s__partlyLocated(V__OBJ1,V__OBJ2) )
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Object)
            & s__part(V__SUB,V__OBJ1)
            & s__located(V__SUB,V__OBJ2) ) ) ) ).

fof(kb_SUMO_3037,axiom,
    s__instance(s__located__m,s__AntisymmetricRelation) ).

fof(kb_SUMO_3038,axiom,
    s__instance(s__located__m,s__TransitiveRelation) ).

fof(kb_SUMO_3039,axiom,
    s__subrelation(s__located__m,s__partlyLocated__m) ).

fof(kb_SUMO_3040,axiom,
    s__documentation(s__located__m,s__EnglishLanguage,'(&%located ?OBJ1 ?OBJ2) means that ?OBJ1 is &%partlyLocated at ?OBJ2, and there is no &%part of ?OBJ1 that is not &%located at ?OBJ2.') ).

fof(kb_SUMO_3041,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__located(V__OBJ1,V__OBJ2)
     => ! [V__SUB] :
          ( ( s__instance(V__SUB,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__SUB,V__OBJ1)
           => s__located(V__SUB,V__OBJ2) ) ) ) ).

fof(kb_SUMO_3042,axiom,
    s__instance(s__eventPartlyLocated__m,s__CaseRole) ).

fof(kb_SUMO_3043,axiom,
    s__subrelation(s__eventPartlyLocated__m,s__partlyLocated__m) ).

fof(kb_SUMO_3044,axiom,
    s__domain(s__eventPartlyLocated__m,"1",s__Process) ).

fof(kb_SUMO_3045,axiom,
    s__domain(s__eventPartlyLocated__m,"2",s__Object) ).

fof(kb_SUMO_3046,axiom,
    s__documentation(s__eventPartlyLocated__m,s__EnglishLanguage,'(&%eventPartlyLocated ?PROC ?OBJ) means that some &%subProcess of &%Process ?PROC is located in &%Object ?OBJ.') ).

fof(kb_SUMO_3047,axiom,
    s__termFormat(s__EnglishLanguage,s__eventPartlyLocated__m,'event partly located') ).

fof(kb_SUMO_3048,axiom,
    ! [V__OBJ,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__eventPartlyLocated(V__PROC,V__OBJ)
       => ? [V__SUB] :
            ( s__instance(V__SUB,s__Process)
            & s__subProcess(V__SUB,V__PROC)
            & s__eventLocated(V__SUB,V__OBJ) ) ) ) ).

fof(kb_SUMO_3049,axiom,
    ! [V__PROCESS,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__origin(V__PROCESS,V__LOC)
       => s__eventPartlyLocated(V__PROCESS,V__LOC) ) ) ).

fof(kb_SUMO_3050,axiom,
    ! [V__PROCESS,V__LOC] :
      ( ( s__instance(V__LOC,s__Object)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__destination(V__PROCESS,V__LOC)
       => s__eventPartlyLocated(V__PROCESS,V__LOC) ) ) ).

fof(kb_SUMO_3051,axiom,
    s__subrelation(s__eventLocated__m,s__eventPartlyLocated__m) ).

fof(kb_SUMO_3052,axiom,
    s__documentation(s__eventLocated__m,s__EnglishLanguage,'(&%eventLocated ?PROC ?OBJ) means that the entire &%Process ?PROC is located on &%Object ?OBJ, meaning that all &%subProcess of ?PROC is located on ?OBJ') ).

fof(kb_SUMO_3053,axiom,
    s__termFormat(s__EnglishLanguage,s__eventLocated__m,'event located') ).

fof(kb_SUMO_3054,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__eventLocated(V__PROCESS,V__OBJ)
     => ! [V__SUB] :
          ( ( s__instance(V__SUB,s__Process)
            & s__instance(V__PROCESS,s__Process)
            & s__instance(V__OBJ,s__Object) )
         => ( s__subProcess(V__SUB,V__PROCESS)
           => s__eventLocated(V__SUB,V__OBJ) ) ) ) ).

fof(kb_SUMO_3055,axiom,
    s__subrelation(s__exactlyLocated__m,s__located__m) ).

fof(kb_SUMO_3056,axiom,
    s__documentation(s__exactlyLocated__m,s__EnglishLanguage,'The actual, minimal location of an Object. This is a subrelation of the more general &%Predicate &%located.') ).

fof(kb_SUMO_3057,axiom,
    ! [V__OBJ,V__REGION] :
      ( ( s__instance(V__REGION,s__Object)
        & s__instance(V__OBJ,s__Physical) )
     => ( s__exactlyLocated(V__OBJ,V__REGION)
       => ~ ? [V__OTHEROBJ] :
              ( s__instance(V__OTHEROBJ,s__Physical)
              & s__exactlyLocated(V__OTHEROBJ,V__REGION)
              & V__OTHEROBJ != V__OBJ ) ) ) ).

fof(kb_SUMO_3058,axiom,
    s__instance(s__between__m,s__SpatialRelation) ).

fof(kb_SUMO_3059,axiom,
    s__instance(s__between__m,s__TernaryPredicate) ).

fof(kb_SUMO_3060,axiom,
    s__domain(s__between__m,"1",s__Object) ).

fof(kb_SUMO_3061,axiom,
    s__domain(s__between__m,"2",s__Object) ).

fof(kb_SUMO_3062,axiom,
    s__domain(s__between__m,"3",s__Object) ).

fof(kb_SUMO_3063,axiom,
    s__documentation(s__between__m,s__EnglishLanguage,'(between ?OBJ1 ?OBJ2 ?OBJ3) means that ?OBJ2 is spatially located between ?OBJ1 and ?OBJ3. Note that this implies that ?OBJ2 is directly between ?OBJ1 and ?OBJ3, i.e. the projections of ?OBJ1 and ?OBJ3 overlap with ?OBJ2.') ).

fof(kb_SUMO_3064,axiom,
    ! [V__MID,V__END2,V__END1] :
      ( ( s__instance(V__END1,s__Object)
        & s__instance(V__END2,s__Object)
        & s__instance(V__MID,s__Object) )
     => ( s__between(V__END1,V__MID,V__END2)
       => s__between(V__END2,V__MID,V__END1) ) ) ).

fof(kb_SUMO_3065,axiom,
    s__documentation(s__betweenOnPath__m,s__EnglishLanguage,'(betweenOnPath ?OBJ1 ?OBJ2 ?OBJ3 ?PATH) means that ?OBJ2 is spatially located between ?OBJ1 and ?OBJ3 on the path ?PATH. Note that this is a more specialized relation of between since any object that is between others with respect to a particular path is also simply between them.') ).

fof(kb_SUMO_3066,axiom,
    s__instance(s__betweenOnPath__m,s__SpatialRelation) ).

fof(kb_SUMO_3067,axiom,
    s__instance(s__betweenOnPath__m,s__QuaternaryPredicate) ).

fof(kb_SUMO_3068,axiom,
    s__domain(s__betweenOnPath__m,"1",s__Object) ).

fof(kb_SUMO_3069,axiom,
    s__domain(s__betweenOnPath__m,"2",s__Object) ).

fof(kb_SUMO_3070,axiom,
    s__domain(s__betweenOnPath__m,"3",s__Object) ).

fof(kb_SUMO_3071,axiom,
    s__domain(s__betweenOnPath__m,"4",s__Object) ).

fof(kb_SUMO_3072,axiom,
    ! [V__PATH,V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__Object)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__PATH,s__Object) )
     => ( s__betweenOnPath(V__OBJ1,V__OBJ2,V__OBJ3,V__PATH)
       => s__between(V__OBJ1,V__OBJ2,V__OBJ3) ) ) ).

fof(kb_SUMO_3073,axiom,
    s__instance(s__traverses__m,s__BinaryPredicate) ).

fof(kb_SUMO_3074,axiom,
    s__instance(s__traverses__m,s__SpatialRelation) ).

fof(kb_SUMO_3075,axiom,
    s__domain(s__traverses__m,"1",s__Object) ).

fof(kb_SUMO_3076,axiom,
    s__domain(s__traverses__m,"2",s__Object) ).

fof(kb_SUMO_3077,axiom,
    s__documentation(s__traverses__m,s__EnglishLanguage,'(&%traverses ?OBJ1 ?OBJ2) means that ?OBJ1 crosses or extends across ?OBJ2. Note that &%crosses and &%penetrates are subrelations of &%traverses.') ).

fof(kb_SUMO_3078,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__traverses(V__OBJ1,V__OBJ2)
       => ( s__crosses(V__OBJ1,V__OBJ2)
          | s__penetrates(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_3079,axiom,
    s__subrelation(s__crosses__m,s__traverses__m) ).

fof(kb_SUMO_3080,axiom,
    s__instance(s__crosses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3081,axiom,
    s__instance(s__crosses__m,s__TransitiveRelation) ).

fof(kb_SUMO_3082,axiom,
    s__disjointRelation(s__crosses__m,s__connected__m) ).

fof(kb_SUMO_3083,axiom,
    s__documentation(s__crosses__m,s__EnglishLanguage,'(crosses ?OBJ1 ?OBJ2) means that &%Object ?OBJ1 &%traverses Object ?OBJ2, without being &%connected to it.') ).

fof(kb_SUMO_3084,axiom,
    s__subrelation(s__penetrates__m,s__traverses__m) ).

fof(kb_SUMO_3085,axiom,
    s__subrelation(s__penetrates__m,s__meetsSpatially__m) ).

fof(kb_SUMO_3086,axiom,
    s__instance(s__penetrates__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3087,axiom,
    s__instance(s__penetrates__m,s__IntransitiveRelation) ).

fof(kb_SUMO_3088,axiom,
    s__documentation(s__penetrates__m,s__EnglishLanguage,'(penetrates ?OBJ1 ?OBJ2) means that ?OBJ1 is &%connected to ?OBJ2 along at least one whole dimension (length, width or depth).') ).

fof(kb_SUMO_3089,axiom,
    s__instance(s__WhereFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3090,axiom,
    s__instance(s__WhereFn__m,s__SpatialRelation) ).

fof(kb_SUMO_3091,axiom,
    s__instance(s__WhereFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3092,axiom,
    s__domain(s__WhereFn__m,"1",s__Physical) ).

fof(kb_SUMO_3093,axiom,
    s__domain(s__WhereFn__m,"2",s__TimePoint) ).

fof(kb_SUMO_3094,axiom,
    s__range(s__WhereFn__m,s__Region) ).

fof(kb_SUMO_3095,axiom,
    s__relatedInternalConcept(s__WhereFn__m,s__WhenFn__m) ).

fof(kb_SUMO_3096,axiom,
    s__documentation(s__WhereFn__m,s__EnglishLanguage,'Maps an &%Object and a &%TimePoint at which the &%Object exists to the &%Region where the &%Object existed at that &%TimePoint.') ).

%FOL fof(kb_SUMO_3097,axiom,(( (! [V__REGION,V__TIME,V__THING] : ((s__instance(V__THING,s__Physical) & s__instance(V__TIME,s__TimePoint) & s__instance(V__REGION,s__Object)) => ((s__WhereFn(V__THING,V__TIME) = V__REGION) <=> s__holdsDuring(V__TIME,'s__exactlyLocated(V__THING,V__REGION)')))) ))).

fof(kb_SUMO_3098,axiom,
    s__instance(s__possesses__m,s__BinaryPredicate) ).

fof(kb_SUMO_3099,axiom,
    s__instance(s__possesses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3100,axiom,
    s__domain(s__possesses__m,"1",s__Agent) ).

fof(kb_SUMO_3101,axiom,
    s__domain(s__possesses__m,"2",s__Object) ).

fof(kb_SUMO_3102,axiom,
    s__documentation(s__possesses__m,s__EnglishLanguage,'&%Relation that holds between an &%Agent and an &%Object when the &%Agent has ownership of the &%Object.') ).

%FOL fof(kb_SUMO_3103,axiom,(( (! [V__OBJ,V__PERSON] : ((s__instance(V__PERSON,s__Agent) & s__instance(V__OBJ,s__Object)) => (s__possesses(V__PERSON,V__OBJ) => s__modalAttribute('s__uses(V__OBJ,V__PERSON)',s__Permission)))) ))).

%FOL fof(kb_SUMO_3104,axiom,(( (! [V__OBJ,V__TIME,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(V__TIME,'s__possesses(V__AGENT2,V__OBJ)')) => (V__AGENT1 = V__AGENT2)))) ))).

fof(kb_SUMO_3105,axiom,
    s__instance(s__PropertyFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3106,axiom,
    s__instance(s__PropertyFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3107,axiom,
    s__domain(s__PropertyFn__m,"1",s__Agent) ).

fof(kb_SUMO_3108,axiom,
    s__range(s__PropertyFn__m,s__Set) ).

fof(kb_SUMO_3109,axiom,
    s__documentation(s__PropertyFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Agent to the &%Set of &%Objects owned by the &%Agent.') ).

fof(kb_SUMO_3110,axiom,
    ! [V__OBJ,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__instance(V__OBJ,s__PropertyFn(V__PERSON))
      <=> s__possesses(V__PERSON,V__OBJ) ) ) ).

fof(kb_SUMO_3111,axiom,
    s__instance(s__precondition__m,s__BinaryPredicate) ).

fof(kb_SUMO_3112,axiom,
    s__instance(s__precondition__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3113,axiom,
    s__instance(s__precondition__m,s__TransitiveRelation) ).

fof(kb_SUMO_3114,axiom,
    s__domainSubclass(s__precondition__m,"1",s__Process) ).

fof(kb_SUMO_3115,axiom,
    s__domainSubclass(s__precondition__m,"2",s__Process) ).

fof(kb_SUMO_3116,axiom,
    s__documentation(s__precondition__m,s__EnglishLanguage,'A very general &%Predicate. (&%precondition ?PROC1 ?PROC2) means that an instance of ?PROC2 can exist only if an instance of ?PROC1 also exists.') ).

fof(kb_SUMO_3117,axiom,
    ! [V__PROC2,V__PROC1] :
      ( ( s__subclass(V__PROC1,s__Process)
        & s__instance(V__PROC1,s__SetOrClass)
        & s__subclass(V__PROC2,s__Process)
        & s__instance(V__PROC2,s__SetOrClass) )
     => ( s__precondition(V__PROC1,V__PROC2)
       => ( ? [V__INST2] : s__instance(V__INST2,V__PROC2)
         => ? [V__INST1] : s__instance(V__INST1,V__PROC1) ) ) ) ).

fof(kb_SUMO_3118,axiom,
    s__instance(s__inhibits__m,s__BinaryPredicate) ).

fof(kb_SUMO_3119,axiom,
    s__instance(s__inhibits__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3120,axiom,
    s__domainSubclass(s__inhibits__m,"1",s__Process) ).

fof(kb_SUMO_3121,axiom,
    s__domainSubclass(s__inhibits__m,"2",s__Process) ).

fof(kb_SUMO_3122,axiom,
    s__documentation(s__inhibits__m,s__EnglishLanguage,'A very general &%Predicate. (&%inhibits ?PROC1 ?PROC2) means that the &%Process ?PROC1 inhibits or hinders the occurrence of the &%Process ?PROC2. For example, obstructing an object inhibits moving it. Note that this is a relation between types of &%Processes, not between instances.') ).

%FOL fof(kb_SUMO_3123,axiom,(( (! [V__PROC2,V__PROC1] : (s__inhibits(V__PROC1,V__PROC2) => (! [V__TIME,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__TIME,s__TimePosition) & s__subclass(V__PROC1,s__Process) & s__instance(V__PROC1,s__SetOrClass) & s__subclass(V__PROC2,s__Process) & s__instance(V__PROC2,s__SetOrClass)) => s__decreasesLikelihood('s__holdsDuring(V__TIME,(? [V__INST1] : (s__instance(V__INST1,s__Process) & s__instance(V__INST1,V__PROC1) & s__eventLocated(V__INST1,V__PLACE))))','s__holdsDuring(V__TIME,(? [V__INST2] : (s__instance(V__INST2,s__Process) & s__instance(V__INST2,V__PROC2) & s__eventLocated(V__INST2,V__PLACE))))'))))) ))).

fof(kb_SUMO_3124,axiom,
    s__instance(s__prevents__m,s__BinaryPredicate) ).

fof(kb_SUMO_3125,axiom,
    s__instance(s__prevents__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3126,axiom,
    s__domainSubclass(s__prevents__m,"1",s__Process) ).

fof(kb_SUMO_3127,axiom,
    s__domainSubclass(s__prevents__m,"2",s__Process) ).

fof(kb_SUMO_3128,axiom,
    s__relatedInternalConcept(s__prevents__m,s__inhibits__m) ).

fof(kb_SUMO_3129,axiom,
    s__documentation(s__prevents__m,s__EnglishLanguage,'A very general &%Predicate. (&%prevents ?PROC1 ?PROC2) means that ?PROC1 prevents the occurrence of ?PROC2. In other words, if ?PROC1 is occurring in a particular time and place, ?PROC2 cannot occur at the same time and place. For example, innoculating prevents contracting disease. Note that this is a relation between types of &%Processes, not between instances.') ).

fof(kb_SUMO_3130,axiom,
    ! [V__PROC2,V__PROC1] :
      ( s__prevents(V__PROC1,V__PROC2)
     => ! [V__TIME,V__PLACE] :
          ( ( s__instance(V__PLACE,s__Object)
            & s__instance(V__TIME,s__TimePosition)
            & s__subclass(V__PROC1,s__Process)
            & s__instance(V__PROC1,s__SetOrClass)
            & s__subclass(V__PROC2,s__Process)
            & s__instance(V__PROC2,s__SetOrClass) )
         => ( s__holdsDuring(V__TIME,'(? [V__INST1] : (s__instance(V__INST1,s__Process) & s__instance(V__INST1,V__PROC1) & s__eventLocated(V__INST1,V__PLACE)))')
           => ~ s__holdsDuring(V__TIME,'(? [V__INST2] : (s__instance(V__INST2,s__Process) & s__instance(V__INST2,V__PROC2) & s__eventLocated(V__INST2,V__PLACE)))') ) ) ) ).

fof(kb_SUMO_3131,axiom,
    s__instance(s__refers__m,s__BinaryPredicate) ).

fof(kb_SUMO_3132,axiom,
    s__domain(s__refers__m,"1",s__Entity) ).

fof(kb_SUMO_3133,axiom,
    s__domain(s__refers__m,"2",s__Entity) ).

fof(kb_SUMO_3134,axiom,
    s__documentation(s__refers__m,s__EnglishLanguage,'(&%refers ?OBJ1 ?OBJ2) means that ?OBJ1 mentions or includes a reference to ?OBJ2. Note that &%refers is more general in meaning than &%represents, because presumably something can represent something else only if it refers to this other thing. For example, an article whose topic is a recent change in the price of oil may refer to many other things, e.g. the general state of the economy, the weather in California, the prospect of global warming, the options for alternative energy sources, the stock prices of various oil companies, etc.') ).

fof(kb_SUMO_3135,axiom,
    s__subrelation(s__names__m,s__refers__m) ).

fof(kb_SUMO_3136,axiom,
    s__domain(s__names__m,"1",s__SymbolicString) ).

fof(kb_SUMO_3137,axiom,
    s__documentation(s__names__m,s__EnglishLanguage,'(&%names ?STRING ?ENTITY) means that the thing ?ENTITY has the &%SymbolicString ?STRING as its name. Note that &%names and &%represents are the two immediate &%subrelations of &%refers. The predicate &%names is used when the referring item is merely a tag without connotative content, while the predicate &%represents is used for referring items that have such content.') ).

fof(kb_SUMO_3138,axiom,
    s__subrelation(s__uniqueIdentifier__m,s__names__m) ).

fof(kb_SUMO_3139,axiom,
    s__instance(s__uniqueIdentifier__m,s__SingleValuedRelation) ).

fof(kb_SUMO_3140,axiom,
    s__documentation(s__uniqueIdentifier__m,s__EnglishLanguage,'The class of &%names that uniquely identify an instance of &%Entity. Some examples of &%uniqueIdentifiers are the keys of tables in database applications and the ISBN (International Standard Book Number).') ).

fof(kb_SUMO_3141,axiom,
    s__subrelation(s__represents__m,s__refers__m) ).

fof(kb_SUMO_3142,axiom,
    s__documentation(s__represents__m,s__EnglishLanguage,'A very general semiotics &%Predicate. (&%represents ?THING ?ENTITY) means that ?THING in some way indicates, expresses, connotes, pictures, describes, etc. ?ENTITY. The &%Predicates &%containsInformation and &%realization are subrelations of &%represents. Note that &%represents is a subrelation of &%refers, since something can represent something else only if it refers to this other thing. See the documentation string for &%names.') ).

fof(kb_SUMO_3143,axiom,
    s__instance(s__representsForAgent__m,s__TernaryPredicate) ).

fof(kb_SUMO_3144,axiom,
    s__domain(s__representsForAgent__m,"1",s__Entity) ).

fof(kb_SUMO_3145,axiom,
    s__domain(s__representsForAgent__m,"2",s__Entity) ).

fof(kb_SUMO_3146,axiom,
    s__domain(s__representsForAgent__m,"3",s__Agent) ).

fof(kb_SUMO_3147,axiom,
    s__documentation(s__representsForAgent__m,s__EnglishLanguage,'A very general predicate. (&%representsForAgent ?ENTITY1 ?ENTITY2 ?AGENT) means that the ?AGENT chooses to use ?ENTITY1 to stand for ?ENTITY2.') ).

fof(kb_SUMO_3148,axiom,
    ! [V__AGENT,V__ENTITY,V__REP] :
      ( s__instance(V__AGENT,s__Agent)
     => ( s__representsForAgent(V__REP,V__ENTITY,V__AGENT)
       => s__represents(V__REP,V__ENTITY) ) ) ).

fof(kb_SUMO_3149,axiom,
    s__instance(s__representsInLanguage__m,s__TernaryPredicate) ).

fof(kb_SUMO_3150,axiom,
    s__domain(s__representsInLanguage__m,"1",s__LinguisticExpression) ).

fof(kb_SUMO_3151,axiom,
    s__domain(s__representsInLanguage__m,"2",s__Entity) ).

fof(kb_SUMO_3152,axiom,
    s__domain(s__representsInLanguage__m,"3",s__Language) ).

fof(kb_SUMO_3153,axiom,
    s__documentation(s__representsInLanguage__m,s__EnglishLanguage,'A very general predicate. (&%representsInLanguage ?THING ?ENTITY ?LANGUAGE) means that the &%LinguisticExpression ?THING stands for ?ENTITY in the &%Language ?LANGUAGE.') ).

fof(kb_SUMO_3154,axiom,
    ! [V__LANGUAGE,V__ENTITY,V__REP] :
      ( ( s__instance(V__REP,s__LinguisticExpression)
        & s__instance(V__LANGUAGE,s__Language) )
     => ( s__representsInLanguage(V__REP,V__ENTITY,V__LANGUAGE)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__representsForAgent(V__REP,V__ENTITY,V__AGENT) ) ) ) ).

fof(kb_SUMO_3155,axiom,
    s__subrelation(s__equivalentContentClass__m,s__subsumesContentClass__m) ).

fof(kb_SUMO_3156,axiom,
    s__instance(s__equivalentContentClass__m,s__EquivalenceRelation) ).

fof(kb_SUMO_3157,axiom,
    s__instance(s__EquivalenceRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3158,axiom,
    s__domainSubclass(s__equivalentContentClass__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_3159,axiom,
    s__domainSubclass(s__equivalentContentClass__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_3160,axiom,
    s__documentation(s__equivalentContentClass__m,s__EnglishLanguage,'A &%BinaryPredicate that relates two subclasses of &%ContentBearingPhysical. (&%equivalentContentClass ?CLASS1 ?CLASS2) means that the content expressed by each instance of ?CLASS1 is also expressed by each instance of ?CLASS2, and vice versa. An example would be the relationship between English and Russian editions of Agatha Christies Murder on the Orient Express. Note that (&%equivalentContentClass ?CLASS1 ?CLASS2) implies (&%subsumesContentClass ?CLASS1 ?CLASS2) and (&%subsumesContentClass ?CLASS2 ?CLASS1).') ).

fof(kb_SUMO_3161,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( ( s__subclass(V__CLASS2,s__ContentBearingPhysical)
        & s__instance(V__CLASS2,s__SetOrClass)
        & s__subclass(V__CLASS1,s__ContentBearingPhysical)
        & s__instance(V__CLASS1,s__SetOrClass) )
     => ( ( s__subsumesContentClass(V__CLASS1,V__CLASS2)
          & s__subsumesContentClass(V__CLASS2,V__CLASS1) )
      <=> s__equivalentContentClass(V__CLASS1,V__CLASS2) ) ) ).

fof(kb_SUMO_3162,axiom,
    s__instance(s__subsumesContentClass__m,s__BinaryPredicate) ).

fof(kb_SUMO_3163,axiom,
    s__instance(s__subsumesContentClass__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_3164,axiom,
    s__domainSubclass(s__subsumesContentClass__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_3165,axiom,
    s__domainSubclass(s__subsumesContentClass__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_3166,axiom,
    s__documentation(s__subsumesContentClass__m,s__EnglishLanguage,'A &%BinaryPredicate that relates two subclasses of &%ContentBearingPhysical. (&%subsumesContentClass ?CLASS1 ?CLASS2) means that the content expressed by each instance of ?CLASS2 is also expressed by each instance of ?CLASS1. Examples include the relationship between a poem and one of its stanzas or between a book and one of its chapters. Note that this is a relation between subclasses of &%ContentBearingObject, rather than instances. If one wants to relate instances, the &%Predicate &%subsumesContentInstance can be used. Note that &%subsumesContentClass is needed in many cases. Consider, for example, the relation between the King James edition of the Bible and its Book of Genesis. This relation holds for every copy of this edition and not just for a single instance.') ).

fof(kb_SUMO_3167,axiom,
    ! [V__CLASS1,V__CLASS2] :
      ( s__subsumesContentClass(V__CLASS1,V__CLASS2)
     => ! [V__OBJ2,V__INFO] :
          ( ( s__instance(V__INFO,s__Proposition)
            & s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__subclass(V__CLASS2,s__ContentBearingPhysical)
            & s__instance(V__CLASS2,s__SetOrClass)
            & s__subclass(V__CLASS1,s__ContentBearingPhysical)
            & s__instance(V__CLASS1,s__SetOrClass) )
         => ( ( s__instance(V__OBJ2,V__CLASS2)
              & s__containsInformation(V__OBJ2,V__INFO) )
           => ? [V__OBJ1] :
                ( s__instance(V__OBJ1,s__ContentBearingPhysical)
                & s__instance(V__OBJ1,V__CLASS1)
                & s__containsInformation(V__OBJ1,V__INFO) ) ) ) ) ).

fof(kb_SUMO_3168,axiom,
    s__subrelation(s__equivalentContentInstance__m,s__subsumesContentInstance__m) ).

fof(kb_SUMO_3169,axiom,
    s__instance(s__equivalentContentInstance__m,s__EquivalenceRelation) ).

fof(kb_SUMO_3170,axiom,
    s__domain(s__equivalentContentInstance__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_3171,axiom,
    s__domain(s__equivalentContentInstance__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_3172,axiom,
    s__relatedInternalConcept(s__equivalentContentInstance__m,s__equivalentContentClass__m) ).

fof(kb_SUMO_3173,axiom,
    s__documentation(s__equivalentContentInstance__m,s__EnglishLanguage,'A &%BinaryPredicate relating two instances of &%ContentBearingPhysical. (&%equivalentContentInstance ?OBJ1 ?OBJ2) means that the content expressed by ?OBJ1 is identical to the content expressed by ?OBJ2. An example would be the relationship between a handwritten draft of a letter to ones lawyer and a typed copy of the same letter. Note that (&%equivalentContentInstance ?OBJ1 ?OBJ2) implies (&%subsumesContentInstance ?OBJ1 ?OBJ2) and (&%subsumesContentInstance ?OBJ2 ?OBJ2).') ).

fof(kb_SUMO_3174,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__ContentBearingPhysical)
        & s__instance(V__OBJ1,s__ContentBearingPhysical) )
     => ( ( s__subsumesContentInstance(V__OBJ1,V__OBJ2)
          & s__subsumesContentInstance(V__OBJ2,V__OBJ1) )
      <=> s__equivalentContentInstance(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_3175,axiom,
    s__instance(s__subsumesContentInstance__m,s__BinaryPredicate) ).

fof(kb_SUMO_3176,axiom,
    s__instance(s__subsumesContentInstance__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_3177,axiom,
    s__domain(s__subsumesContentInstance__m,"1",s__ContentBearingPhysical) ).

fof(kb_SUMO_3178,axiom,
    s__domain(s__subsumesContentInstance__m,"2",s__ContentBearingPhysical) ).

fof(kb_SUMO_3179,axiom,
    s__relatedInternalConcept(s__subsumesContentInstance__m,s__subsumesContentClass__m) ).

fof(kb_SUMO_3180,axiom,
    s__documentation(s__subsumesContentInstance__m,s__EnglishLanguage,'A &%BinaryPredicate relating two instances of &%ContentBearingPhysical. (&%subsumesContentInstance ?OBJ1 ?OBJ2) means that the content expressed by ?OBJ2 is part of the content expressed by ?OBJ1. An example is the relationship between a handwritten poem and one of its stanzas. Note that this is a relation between instances, rather than &%Classes. If one wants to assert a content relationship between &%Classes, e.g. between the version of an intellectual work and a part of that work, the relation &%subsumesContentClass should be used.') ).

fof(kb_SUMO_3181,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__subsumesContentInstance(V__OBJ1,V__OBJ2)
     => ! [V__INFO] :
          ( ( s__instance(V__INFO,s__Proposition)
            & s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__instance(V__OBJ1,s__ContentBearingPhysical) )
         => ( s__containsInformation(V__OBJ2,V__INFO)
           => s__containsInformation(V__OBJ1,V__INFO) ) ) ) ).

fof(kb_SUMO_3182,axiom,
    s__subrelation(s__realization__m,s__represents__m) ).

fof(kb_SUMO_3183,axiom,
    s__instance(s__realization__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3184,axiom,
    s__domain(s__realization__m,"1",s__Process) ).

fof(kb_SUMO_3185,axiom,
    s__domain(s__realization__m,"2",s__Proposition) ).

fof(kb_SUMO_3186,axiom,
    s__relatedInternalConcept(s__realization__m,s__equivalentContentInstance__m) ).

fof(kb_SUMO_3187,axiom,
    s__relatedInternalConcept(s__realization__m,s__containsInformation__m) ).

fof(kb_SUMO_3188,axiom,
    s__documentation(s__realization__m,s__EnglishLanguage,'A subrelation of &%represents. (&%realization ?PROCESS ?PROP) means that ?PROCESS is a Process which expresses the content of ?PROP. Examples include a particular musical performance, which realizes the content of a musical score, or the reading of a poem.') ).

fof(kb_SUMO_3189,axiom,
    ! [V__PROCESS,V__PROP] :
      ( ( s__instance(V__PROP,s__Proposition)
        & s__instance(V__PROCESS,s__Process) )
     => ( s__realization(V__PROCESS,V__PROP)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__ContentBearingPhysical)
            & s__instance(V__OBJ,s__ContentBearingObject)
            & s__containsInformation(V__OBJ,V__PROP) ) ) ) ).

fof(kb_SUMO_3190,axiom,
    s__instance(s__expressedInLanguage__m,s__BinaryPredicate) ).

fof(kb_SUMO_3191,axiom,
    s__instance(s__expressedInLanguage__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3192,axiom,
    s__domain(s__expressedInLanguage__m,"1",s__LinguisticExpression) ).

fof(kb_SUMO_3193,axiom,
    s__domain(s__expressedInLanguage__m,"2",s__Language) ).

fof(kb_SUMO_3194,axiom,
    s__documentation(s__expressedInLanguage__m,s__EnglishLanguage,'(&%expressedInLanguage ?EXPRESS ?LANG) means that the &%LinguisticExpression ?EXPRESS is part of the &%Language ?LANG.') ).

fof(kb_SUMO_3195,axiom,
    ! [V__EXPRESS,V__LANGUAGE] :
      ( ( s__instance(V__LANGUAGE,s__Language)
        & s__instance(V__EXPRESS,s__LinguisticExpression) )
     => ( s__expressedInLanguage(V__EXPRESS,V__LANGUAGE)
      <=> ? [V__PROP] : s__representsInLanguage(V__EXPRESS,V__PROP,V__LANGUAGE) ) ) ).

fof(kb_SUMO_3196,axiom,
    s__instance(s__subProposition__m,s__BinaryPredicate) ).

fof(kb_SUMO_3197,axiom,
    s__instance(s__subProposition__m,s__TransitiveRelation) ).

fof(kb_SUMO_3198,axiom,
    s__instance(s__subProposition__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3199,axiom,
    s__domain(s__subProposition__m,"1",s__Proposition) ).

fof(kb_SUMO_3200,axiom,
    s__domain(s__subProposition__m,"2",s__Proposition) ).

fof(kb_SUMO_3201,axiom,
    s__documentation(s__subProposition__m,s__EnglishLanguage,'(&%subProposition ?PROP1 ?PROP2) means that ?PROP1 is a &%Proposition which is a proper part of the &%Proposition ?PROP2. In other words, &%subProposition is the analogue of &%properPart for chunks of abstract content.') ).

fof(kb_SUMO_3202,axiom,
    ! [V__PROP2,V__PROP1] :
      ( s__subProposition(V__PROP1,V__PROP2)
     => ! [V__OBJ1,V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__ContentBearingPhysical)
            & s__instance(V__OBJ1,s__ContentBearingPhysical)
            & s__instance(V__PROP1,s__Proposition)
            & s__instance(V__PROP2,s__Proposition) )
         => ( ( s__containsInformation(V__OBJ1,V__PROP1)
              & s__containsInformation(V__OBJ2,V__PROP2) )
           => s__subsumesContentInstance(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_3203,axiom,
    s__subrelation(s__subPlan__m,s__subProposition__m) ).

fof(kb_SUMO_3204,axiom,
    s__instance(s__subPlan__m,s__TransitiveRelation) ).

fof(kb_SUMO_3205,axiom,
    s__instance(s__subPlan__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3206,axiom,
    s__domain(s__subPlan__m,"1",s__Plan) ).

fof(kb_SUMO_3207,axiom,
    s__domain(s__subPlan__m,"2",s__Plan) ).

fof(kb_SUMO_3208,axiom,
    s__documentation(s__subPlan__m,s__EnglishLanguage,'(&%subPlan ?PLAN1 ?PLAN2) means that ?PLAN1 is a &%Plan which is a proper part of ?PLAN2. This relation is generally used to relate a supporting &%Plan to the overall &%Plan in a particular context.') ).

fof(kb_SUMO_3209,axiom,
    s__instance(s__uses__m,s__BinaryPredicate) ).

fof(kb_SUMO_3210,axiom,
    s__instance(s__BinaryPredicate__t,s__SetOrClass) ).

fof(kb_SUMO_3211,axiom,
    s__instance(s__uses__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3212,axiom,
    s__domain(s__uses__m,"1",s__Object) ).

fof(kb_SUMO_3213,axiom,
    s__domain(s__uses__m,"2",s__Agent) ).

fof(kb_SUMO_3214,axiom,
    s__documentation(s__uses__m,s__EnglishLanguage,'(&%uses ?OBJECT AGENT) means that ?OBJECT is used by ?AGENT as an instrument in an unspecified &%Process. This &%Predicate, as its corresponding axiom indicates, is a composition of the &%CaseRoles &%agent and &%instrument.') ).

fof(kb_SUMO_3215,axiom,
    ! [V__OBJ,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__OBJ,s__Object) )
     => ( s__uses(V__OBJ,V__AGENT)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__agent(V__PROC,V__AGENT)
            & s__instrument(V__PROC,V__OBJ) ) ) ) ).

fof(kb_SUMO_3216,axiom,
    s__instance(times__m,s__BinaryFunction) ).

fof(kb_SUMO_3217,axiom,
    s__instance(times__m,s__AssociativeFunction) ).

fof(kb_SUMO_3218,axiom,
    s__instance(times__m,s__CommutativeFunction) ).

fof(kb_SUMO_3219,axiom,
    s__instance(s__CommutativeFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3220,axiom,
    s__instance(times__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3221,axiom,
    s__instance(times__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3222,axiom,
    s__domain(times__m,"1",s__Quantity) ).

fof(kb_SUMO_3223,axiom,
    s__domain(times__m,"2",s__Quantity) ).

fof(kb_SUMO_3224,axiom,
    s__range(times__m,s__Quantity) ).

fof(kb_SUMO_3225,axiom,
    s__documentation(times__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%MultiplicationFn ?NUMBER1 ?NUMBER2) is the arithmetical product of these numbers.') ).

fof(kb_SUMO_3226,axiom,
    s__instance(plus__m,s__BinaryFunction) ).

fof(kb_SUMO_3227,axiom,
    s__instance(plus__m,s__AssociativeFunction) ).

fof(kb_SUMO_3228,axiom,
    s__instance(plus__m,s__CommutativeFunction) ).

fof(kb_SUMO_3229,axiom,
    s__instance(plus__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3230,axiom,
    s__instance(plus__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3231,axiom,
    s__domain(plus__m,"1",s__Quantity) ).

fof(kb_SUMO_3232,axiom,
    s__domain(plus__m,"2",s__Quantity) ).

fof(kb_SUMO_3233,axiom,
    s__range(plus__m,s__Quantity) ).

fof(kb_SUMO_3234,axiom,
    s__documentation(plus__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%AdditionFn ?NUMBER1 ?NUMBER2) is the arithmetical sum of these numbers.') ).

fof(kb_SUMO_3235,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => s__SuccessorFn(V__NUMBER) = plus(V__NUMBER,"1") ) ).

fof(kb_SUMO_3236,axiom,
    s__instance(minus__m,s__BinaryFunction) ).

fof(kb_SUMO_3237,axiom,
    s__instance(minus__m,s__AssociativeFunction) ).

fof(kb_SUMO_3238,axiom,
    s__instance(minus__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3239,axiom,
    s__instance(minus__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3240,axiom,
    s__domain(minus__m,"1",s__Quantity) ).

fof(kb_SUMO_3241,axiom,
    s__domain(minus__m,"2",s__Quantity) ).

fof(kb_SUMO_3242,axiom,
    s__range(minus__m,s__Quantity) ).

fof(kb_SUMO_3243,axiom,
    s__documentation(minus__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%SubtractionFn ?NUMBER1 ?NUMBER2) is the arithmetical difference between ?NUMBER1 and ?NUMBER2, i.e. ?NUMBER1 minus ?NUMBER2. An exception occurs when ?NUMBER1 is equal to 0, in which case (&%SubtractionFn ?NUMBER1 ?NUMBER2) is the negation of ?NUMBER2.') ).

fof(kb_SUMO_3244,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => s__PredecessorFn(V__NUMBER) = minus(V__NUMBER,"1") ) ).

fof(kb_SUMO_3245,axiom,
    s__instance(divide__m,s__BinaryFunction) ).

fof(kb_SUMO_3246,axiom,
    s__instance(divide__m,s__AssociativeFunction) ).

fof(kb_SUMO_3247,axiom,
    s__instance(divide__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3248,axiom,
    s__instance(divide__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3249,axiom,
    s__domain(divide__m,"1",s__Quantity) ).

fof(kb_SUMO_3250,axiom,
    s__domain(divide__m,"2",s__Quantity) ).

fof(kb_SUMO_3251,axiom,
    s__range(divide__m,s__Quantity) ).

fof(kb_SUMO_3252,axiom,
    s__documentation(divide__m,s__EnglishLanguage,'If ?NUMBER1 and ?NUMBER2 are &%Numbers, then (&%DivisionFn ?NUMBER1 ?NUMBER2) is the result of dividing ?NUMBER1 by ?NUMBER2. Note that when ?NUMBER1 = 1 (&%DivisionFn ?NUMBER1 ?NUMBER2) is the reciprocal of ?NUMBER2. Note too that (&%DivisionFn ?NUMBER1 ?NUMBER2) is undefined when ?NUMBER2 = 0.') ).

fof(kb_SUMO_3253,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RationalNumber)
     => ? [V__INT1,V__INT2] :
          ( s__instance(V__INT2,s__Quantity)
          & s__instance(V__INT1,s__Quantity)
          & s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer)
          & V__NUMBER = divide(V__INT1,V__INT2) ) ) ).

fof(kb_SUMO_3254,axiom,
    s__instance(s__AbsoluteValueFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3255,axiom,
    s__instance(s__AbsoluteValueFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3256,axiom,
    s__domain(s__AbsoluteValueFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3257,axiom,
    s__range(s__AbsoluteValueFn__m,s__NonnegativeRealNumber) ).

fof(kb_SUMO_3258,axiom,
    s__documentation(s__AbsoluteValueFn__m,s__EnglishLanguage,'The value of (&%AbsoluteValueFn ?NUMBER) is the absolute value of the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_3259,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__AbsoluteValueFn(V__NUMBER1) = V__NUMBER2
        & s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber) )
    <=> ( ( s__instance(V__NUMBER1,s__NonnegativeRealNumber)
          & V__NUMBER1 = V__NUMBER2 )
        | ( s__instance(V__NUMBER1,s__NegativeRealNumber)
          & V__NUMBER2 = minus("0",V__NUMBER1) ) ) ) ).

fof(kb_SUMO_3260,axiom,
    s__instance(s__CeilingFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3261,axiom,
    s__instance(s__UnaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3262,axiom,
    s__instance(s__CeilingFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3263,axiom,
    s__domain(s__CeilingFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3264,axiom,
    s__range(s__CeilingFn__m,s__Integer) ).

fof(kb_SUMO_3265,axiom,
    s__documentation(s__CeilingFn__m,s__EnglishLanguage,'(&%CeilingFn ?NUMBER) returns the smallest &%Integer greater than or equal to the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_3266,axiom,
    ! [V__NUMBER,V__INT] :
      ( ( s__instance(V__INT,s__Quantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__CeilingFn(V__NUMBER) = V__INT
       => ~ ? [V__OTHERINT] :
              ( s__instance(V__OTHERINT,s__Quantity)
              & s__instance(V__OTHERINT,s__Integer)
              & greatereq(V__OTHERINT,V__NUMBER)
              & less(V__OTHERINT,V__INT) ) ) ) ).

fof(kb_SUMO_3267,axiom,
    s__instance(s__CosineFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3268,axiom,
    s__instance(s__CosineFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3269,axiom,
    s__domain(s__CosineFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_3270,axiom,
    s__range(s__CosineFn__m,s__RealNumber) ).

fof(kb_SUMO_3271,axiom,
    s__documentation(s__CosineFn__m,s__EnglishLanguage,'(&%CosineFn ?DEGREE) returns the cosine of the &%PlaneAngleMeasure ?DEGREE. The cosine of ?DEGREE is the ratio of the side next to ?DEGREE to the hypotenuse in a right-angled triangle.') ).

fof(kb_SUMO_3272,axiom,
    s__instance(s__DenominatorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3273,axiom,
    s__instance(s__DenominatorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3274,axiom,
    s__domain(s__DenominatorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3275,axiom,
    s__range(s__DenominatorFn__m,s__Integer) ).

fof(kb_SUMO_3276,axiom,
    s__documentation(s__DenominatorFn__m,s__EnglishLanguage,'(&%DenominatorFn ?NUMBER) returns the denominator of the canonical reduced form of the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_3277,axiom,
    s__instance(s__ExponentiationFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3278,axiom,
    s__instance(s__ExponentiationFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3279,axiom,
    s__instance(s__RelationExtendedToQuantities__t,s__SetOrClass) ).

fof(kb_SUMO_3280,axiom,
    s__instance(s__ExponentiationFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3281,axiom,
    s__domain(s__ExponentiationFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3282,axiom,
    s__domain(s__ExponentiationFn__m,"2",s__Integer) ).

fof(kb_SUMO_3283,axiom,
    s__range(s__ExponentiationFn__m,s__Quantity) ).

fof(kb_SUMO_3284,axiom,
    s__documentation(s__ExponentiationFn__m,s__EnglishLanguage,'(&%ExponentiationFn ?NUMBER ?INT) returns the &%RealNumber ?NUMBER raised to the power of the &%Integer ?INT.') ).

fof(kb_SUMO_3285,axiom,
    s__instance(s__FloorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3286,axiom,
    s__instance(s__FloorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3287,axiom,
    s__domain(s__FloorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3288,axiom,
    s__range(s__FloorFn__m,s__Integer) ).

fof(kb_SUMO_3289,axiom,
    s__documentation(s__FloorFn__m,s__EnglishLanguage,'(&%FloorFn ?NUMBER) returns the largest &%Integer less than or equal to the &%RealNumber ?NUMBER.') ).

fof(kb_SUMO_3290,axiom,
    ! [V__NUMBER,V__INT] :
      ( ( s__instance(V__INT,s__Quantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__FloorFn(V__NUMBER) = V__INT
       => ~ ? [V__OTHERINT] :
              ( s__instance(V__OTHERINT,s__Quantity)
              & s__instance(V__OTHERINT,s__Integer)
              & lesseq(V__OTHERINT,V__NUMBER)
              & greater(V__OTHERINT,V__INT) ) ) ) ).

fof(kb_SUMO_3291,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__Function) ).

fof(kb_SUMO_3292,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_3293,axiom,
    s__instance(s__GreatestCommonDivisorFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3294,axiom,
    s__instance(s__PartialValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3295,axiom,
    s__range(s__GreatestCommonDivisorFn__m,s__Integer) ).

fof(kb_SUMO_3296,axiom,
    s__documentation(s__GreatestCommonDivisorFn__m,s__EnglishLanguage,'(&%GreatestCommonDivisorFn ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ).

fof(kb_SUMO_3297,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__GreatestCommonDivisorFn_1(V__ROW1) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3298,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__GreatestCommonDivisorFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3299,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__GreatestCommonDivisorFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3300,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__GreatestCommonDivisorFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3301,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__GreatestCommonDivisorFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3302,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__GreatestCommonDivisorFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3303,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__GreatestCommonDivisorFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__RemainderFn(V__ELEMENT,V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3304,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__GreatestCommonDivisorFn_1(V__ROW1) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3305,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__GreatestCommonDivisorFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3306,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__GreatestCommonDivisorFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3307,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__GreatestCommonDivisorFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3308,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__GreatestCommonDivisorFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3309,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__GreatestCommonDivisorFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3310,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__GreatestCommonDivisorFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ~ ? [V__GREATER] :
            ( s__instance(V__GREATER,s__Quantity)
            & greater(V__GREATER,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                 => s__RemainderFn(V__ELEMENT,V__GREATER) = "0" ) ) ) ) ).

fof(kb_SUMO_3311,axiom,
    s__documentation(s__multiplicativeFactor__m,s__EnglishLanguage,'(multiplicativeFactor ?NUMBER1 ?NUMBER2) means that ?NUMBER1 is a factor of ?NUMBER2, i.e. ?NUMBER1 can be multiplied by some &%Integer to give ?NUMBER2 as a result.') ).

fof(kb_SUMO_3312,axiom,
    s__instance(s__multiplicativeFactor__m,s__BinaryPredicate) ).

fof(kb_SUMO_3313,axiom,
    s__instance(s__multiplicativeFactor__m,s__TransitiveRelation) ).

fof(kb_SUMO_3314,axiom,
    s__domain(s__multiplicativeFactor__m,"1",s__Integer) ).

fof(kb_SUMO_3315,axiom,
    s__domain(s__multiplicativeFactor__m,"2",s__Integer) ).

fof(kb_SUMO_3316,axiom,
    ! [V__N2,V__N1] :
      ( ( s__instance(V__N1,s__Integer)
        & s__instance(V__N2,s__Integer) )
     => ( s__multiplicativeFactor(V__N1,V__N2)
       => ? [V__I] :
            ( s__instance(V__I,s__Quantity)
            & s__instance(V__I,s__Integer)
            & V__N2 = times(V__N1,V__I) ) ) ) ).

fof(kb_SUMO_3317,axiom,
    s__instance(s__ImaginaryPartFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3318,axiom,
    s__instance(s__ImaginaryPartFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3319,axiom,
    s__domain(s__ImaginaryPartFn__m,"1",s__ComplexNumber) ).

fof(kb_SUMO_3320,axiom,
    s__range(s__ImaginaryPartFn__m,s__ImaginaryNumber) ).

fof(kb_SUMO_3321,axiom,
    s__documentation(s__ImaginaryPartFn__m,s__EnglishLanguage,'(&%ImaginaryPartFn ?NUMBER) returns the part of ?NUMBER that has the square root of -1 as its factor.') ).

fof(kb_SUMO_3322,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__ComplexNumber)
     => ? [V__PART1,V__PART2] :
          ( V__PART1 = s__RealNumberFn(V__NUMBER)
          & V__PART2 = s__ImaginaryPartFn(V__NUMBER) ) ) ).

fof(kb_SUMO_3323,axiom,
    s__instance(s__IntegerSquareRootFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3324,axiom,
    s__instance(s__IntegerSquareRootFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3325,axiom,
    s__domain(s__IntegerSquareRootFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3326,axiom,
    s__range(s__IntegerSquareRootFn__m,s__NonnegativeInteger) ).

fof(kb_SUMO_3327,axiom,
    s__documentation(s__IntegerSquareRootFn__m,s__EnglishLanguage,'(&%IntegerSquareRootFn ?NUMBER) returns the integer square root of ?NUMBER.') ).

fof(kb_SUMO_3328,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__Function) ).

fof(kb_SUMO_3329,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3330,axiom,
    s__instance(s__LeastCommonMultipleFn__m,s__VariableArityRelation) ).

fof(kb_SUMO_3331,axiom,
    s__range(s__LeastCommonMultipleFn__m,s__Integer) ).

fof(kb_SUMO_3332,axiom,
    s__documentation(s__LeastCommonMultipleFn__m,s__EnglishLanguage,'(&%LeastCommonMultipleFn ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ).

fof(kb_SUMO_3333,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__LeastCommonMultipleFn_1(V__ROW1) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3334,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__LeastCommonMultipleFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3335,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__LeastCommonMultipleFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3336,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__LeastCommonMultipleFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3337,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__LeastCommonMultipleFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3338,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__LeastCommonMultipleFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3339,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__LeastCommonMultipleFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Quantity)
            & s__instance(V__NUMBER,s__Quantity) )
         => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
           => s__RemainderFn(V__NUMBER,V__ELEMENT) = "0" ) ) ) ).

fof(kb_SUMO_3340,axiom,
    ! [V__NUMBER,V__ROW1] :
      ( s__LeastCommonMultipleFn_1(V__ROW1) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_1(V__ROW1))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3341,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2] :
      ( s__LeastCommonMultipleFn_2(V__ROW1,V__ROW2) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_2(V__ROW1,V__ROW2))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3342,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3] :
      ( s__LeastCommonMultipleFn_3(V__ROW1,V__ROW2,V__ROW3) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3343,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4] :
      ( s__LeastCommonMultipleFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3344,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5] :
      ( s__LeastCommonMultipleFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3345,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6] :
      ( s__LeastCommonMultipleFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3346,axiom,
    ! [V__NUMBER,V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7] :
      ( s__LeastCommonMultipleFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7) = V__NUMBER
     => ~ ? [V__LESS] :
            ( s__instance(V__LESS,s__Quantity)
            & less(V__LESS,V__NUMBER)
            & ! [V__ELEMENT] :
                ( ( s__instance(V__ELEMENT,s__Quantity)
                  & s__instance(V__NUMBER,s__Quantity) )
               => ( s__inList(V__ELEMENT,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
                 => s__RemainderFn(V__LESS,V__ELEMENT) = "0" ) ) ) ) ).

fof(kb_SUMO_3347,axiom,
    s__instance(s__LogFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3348,axiom,
    s__domain(s__LogFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3349,axiom,
    s__domain(s__LogFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_3350,axiom,
    s__range(s__LogFn__m,s__RealNumber) ).

fof(kb_SUMO_3351,axiom,
    s__documentation(s__LogFn__m,s__EnglishLanguage,'(LogFn ?NUMBER ?INT) returns the logarithm of the &%RealNumber ?NUMBER in the base denoted by the &%Integer ?INT.') ).

fof(kb_SUMO_3352,axiom,
    s__instance(s__MaxFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3353,axiom,
    s__instance(s__MaxFn__m,s__AssociativeFunction) ).

fof(kb_SUMO_3354,axiom,
    s__instance(s__MaxFn__m,s__CommutativeFunction) ).

fof(kb_SUMO_3355,axiom,
    s__instance(s__MaxFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3356,axiom,
    s__instance(s__MaxFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3357,axiom,
    s__domain(s__MaxFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3358,axiom,
    s__domain(s__MaxFn__m,"2",s__Quantity) ).

fof(kb_SUMO_3359,axiom,
    s__range(s__MaxFn__m,s__Quantity) ).

fof(kb_SUMO_3360,axiom,
    s__documentation(s__MaxFn__m,s__EnglishLanguage,'(&%MaxFn ?NUMBER1 ?NUMBER2) is the largest of ?NUMBER1 and ?NUMBER2. In cases where ?NUMBER1 is equal to ?NUMBER2, &%MaxFn returns one of its arguments.') ).

fof(kb_SUMO_3361,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__MaxFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => ( ( V__NUMBER = V__NUMBER1
            & greater(V__NUMBER1,V__NUMBER2) )
          | ( V__NUMBER = V__NUMBER2
            & greater(V__NUMBER2,V__NUMBER1) )
          | ( V__NUMBER = V__NUMBER1
            & V__NUMBER = V__NUMBER2 ) ) ) ) ).

fof(kb_SUMO_3362,axiom,
    s__instance(s__MinFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3363,axiom,
    s__instance(s__MinFn__m,s__AssociativeFunction) ).

fof(kb_SUMO_3364,axiom,
    s__instance(s__MinFn__m,s__CommutativeFunction) ).

fof(kb_SUMO_3365,axiom,
    s__instance(s__MinFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3366,axiom,
    s__instance(s__MinFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3367,axiom,
    s__domain(s__MinFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3368,axiom,
    s__domain(s__MinFn__m,"2",s__Quantity) ).

fof(kb_SUMO_3369,axiom,
    s__range(s__MinFn__m,s__Quantity) ).

fof(kb_SUMO_3370,axiom,
    s__documentation(s__MinFn__m,s__EnglishLanguage,'(&%MinFn ?NUMBER1 ?NUMBER2) is the smallest of ?NUMBER1 and ?NUMBER2. In cases where ?NUMBER1 is equal to ?NUMBER2, &%MinFn returns one of its arguments.') ).

fof(kb_SUMO_3371,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__MinFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => ( ( V__NUMBER = V__NUMBER1
            & less(V__NUMBER1,V__NUMBER2) )
          | ( V__NUMBER = V__NUMBER2
            & less(V__NUMBER2,V__NUMBER1) )
          | ( V__NUMBER = V__NUMBER1
            & V__NUMBER = V__NUMBER2 ) ) ) ) ).

fof(kb_SUMO_3372,axiom,
    s__instance(s__NumeratorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3373,axiom,
    s__instance(s__NumeratorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3374,axiom,
    s__domain(s__NumeratorFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3375,axiom,
    s__range(s__NumeratorFn__m,s__Integer) ).

fof(kb_SUMO_3376,axiom,
    s__documentation(s__NumeratorFn__m,s__EnglishLanguage,'(&%NumeratorFn ?NUMBER) returns the numerator of the canonical reduced form ?NUMBER.') ).

fof(kb_SUMO_3377,axiom,
    s__instance(s__Pi,s__PositiveRealNumber) ).

fof(kb_SUMO_3378,axiom,
    s__instance(s__PositiveRealNumber__t,s__SetOrClass) ).

fof(kb_SUMO_3379,axiom,
    s__documentation(s__Pi,s__EnglishLanguage,'&%Pi is the &%RealNumber that is the ratio of the perimeter of a circle to its diameter. It is approximately equal to 3.141592653589793.') ).

fof(kb_SUMO_3380,axiom,
    s__instance(s__NumberE,s__PositiveRealNumber) ).

fof(kb_SUMO_3381,axiom,
    s__documentation(s__NumberE,s__EnglishLanguage,'&%NumberE is the &%RealNumber that is the base for natural logarithms. It is approximately equal to 2.718282.') ).

fof(kb_SUMO_3382,axiom,
    s__instance(s__RationalNumberFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3383,axiom,
    s__domain(s__RationalNumberFn__m,"1",s__Number) ).

fof(kb_SUMO_3384,axiom,
    s__range(s__RationalNumberFn__m,s__RationalNumber) ).

fof(kb_SUMO_3385,axiom,
    s__documentation(s__RationalNumberFn__m,s__EnglishLanguage,'(&%RationalNumberFn ?NUMBER) returns the rational representation of ?NUMBER.') ).

fof(kb_SUMO_3386,axiom,
    s__instance(s__RealNumberFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3387,axiom,
    s__domain(s__RealNumberFn__m,"1",s__Number) ).

fof(kb_SUMO_3388,axiom,
    s__range(s__RealNumberFn__m,s__RealNumber) ).

fof(kb_SUMO_3389,axiom,
    s__documentation(s__RealNumberFn__m,s__EnglishLanguage,'(RealNumberFn ?NUMBER) returns the part of ?NUMBER that is a &%RealNumber.') ).

fof(kb_SUMO_3390,axiom,
    s__instance(s__ReciprocalFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3391,axiom,
    s__instance(s__ReciprocalFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3392,axiom,
    s__instance(s__ReciprocalFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3393,axiom,
    s__domain(s__ReciprocalFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3394,axiom,
    s__range(s__ReciprocalFn__m,s__Quantity) ).

fof(kb_SUMO_3395,axiom,
    s__documentation(s__ReciprocalFn__m,s__EnglishLanguage,'(ReciprocalFn ?NUMBER) is the reciprocal element of ?NUMBER with respect to the multiplication operator (&%MultiplicationFn), i.e. 1/?NUMBER. Not all numbers have a reciprocal element. For example the number 0 does not. If a number ?NUMBER has a reciprocal ?RECIP, then the product of ?NUMBER and ?RECIP will be 1, e.g. 3*1/3 = 1. The reciprocal of an element is &%equal to applying the &%ExponentiationFn function to the element to the power -1.') ).

fof(kb_SUMO_3396,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => s__ReciprocalFn(V__NUMBER) = s__ExponentiationFn(V__NUMBER,"-1") ) ).

fof(kb_SUMO_3397,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => "1" = times(V__NUMBER,s__ReciprocalFn(V__NUMBER)) ) ).

fof(kb_SUMO_3398,axiom,
    s__instance(s__RemainderFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3399,axiom,
    s__instance(s__RemainderFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3400,axiom,
    s__instance(s__RemainderFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3401,axiom,
    s__domain(s__RemainderFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3402,axiom,
    s__domain(s__RemainderFn__m,"2",s__Quantity) ).

fof(kb_SUMO_3403,axiom,
    s__range(s__RemainderFn__m,s__Quantity) ).

fof(kb_SUMO_3404,axiom,
    s__documentation(s__RemainderFn__m,s__EnglishLanguage,'(RemainderFn ?NUMBER ?DIVISOR) is the remainder of the number ?NUMBER divided by the number ?DIVISOR. The result has the same sign as ?DIVISOR.') ).

fof(kb_SUMO_3405,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__Quantity)
        & s__instance(V__NUMBER,s__Quantity) )
     => ( s__RemainderFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
      <=> plus(times(s__FloorFn(divide(V__NUMBER1,V__NUMBER2)),V__NUMBER2),V__NUMBER) = V__NUMBER1 ) ) ).

fof(kb_SUMO_3406,axiom,
    ! [V__NUMBER,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__Quantity)
        & s__instance(V__NUMBER2,s__RealNumber)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__RemainderFn(V__NUMBER1,V__NUMBER2) = V__NUMBER
       => s__SignumFn(V__NUMBER2) = s__SignumFn(V__NUMBER) ) ) ).

fof(kb_SUMO_3407,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__EvenInteger)
       => s__RemainderFn(V__NUMBER,"2") = "0" ) ) ).

fof(kb_SUMO_3408,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__Quantity)
     => ( s__instance(V__NUMBER,s__OddInteger)
       => s__RemainderFn(V__NUMBER,"2") = "1" ) ) ).

fof(kb_SUMO_3409,axiom,
    ! [V__PRIME] :
      ( s__instance(V__PRIME,s__PrimeNumber)
     => ! [V__NUMBER] :
          ( ( s__instance(V__NUMBER,s__Quantity)
            & s__instance(V__PRIME,s__Quantity) )
         => ( s__RemainderFn(V__PRIME,V__NUMBER) = "0"
           => ( V__NUMBER = "1"
              | V__NUMBER = V__PRIME ) ) ) ) ).

fof(kb_SUMO_3410,axiom,
    s__instance(s__RoundFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3411,axiom,
    s__instance(s__RoundFn__m,s__RelationExtendedToQuantities) ).

fof(kb_SUMO_3412,axiom,
    s__instance(s__RoundFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3413,axiom,
    s__domain(s__RoundFn__m,"1",s__Quantity) ).

fof(kb_SUMO_3414,axiom,
    s__range(s__RoundFn__m,s__Quantity) ).

fof(kb_SUMO_3415,axiom,
    s__documentation(s__RoundFn__m,s__EnglishLanguage,'(&%RoundFn ?NUMBER) is the &%Integer closest to ?NUMBER on the number line. If ?NUMBER is halfway between two &%Integers (for example 3.5), it denotes the larger &%Integer.') ).

fof(kb_SUMO_3416,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( s__instance(V__NUMBER1,s__RealNumber)
     => ( s__RoundFn(V__NUMBER1) = V__NUMBER2
       => ( ( less(minus(V__NUMBER1,s__FloorFn(V__NUMBER1)),"0.5")
           => V__NUMBER2 = s__FloorFn(V__NUMBER1) )
          | ( greatereq(minus(V__NUMBER1,s__FloorFn(V__NUMBER1)),"0.5")
           => V__NUMBER2 = s__CeilingFn(V__NUMBER1) ) ) ) ) ).

fof(kb_SUMO_3417,axiom,
    s__instance(s__SignumFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3418,axiom,
    s__instance(s__SignumFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3419,axiom,
    s__domain(s__SignumFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3420,axiom,
    s__range(s__SignumFn__m,s__Integer) ).

fof(kb_SUMO_3421,axiom,
    s__documentation(s__SignumFn__m,s__EnglishLanguage,'(SignumFn ?NUMBER) denotes the sign of ?NUMBER. This is one of the following values: -1, 1, or 0.') ).

fof(kb_SUMO_3422,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__NonnegativeRealNumber)
       => ( s__SignumFn(V__NUMBER) = "1"
          | s__SignumFn(V__NUMBER) = "0" ) ) ) ).

fof(kb_SUMO_3423,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__PositiveRealNumber)
       => s__SignumFn(V__NUMBER) = "1" ) ) ).

fof(kb_SUMO_3424,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( s__instance(V__NUMBER,s__NegativeRealNumber)
       => s__SignumFn(V__NUMBER) = "-1" ) ) ).

fof(kb_SUMO_3425,axiom,
    s__instance(s__SineFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3426,axiom,
    s__instance(s__SineFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3427,axiom,
    s__domain(s__SineFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_3428,axiom,
    s__range(s__SineFn__m,s__RealNumber) ).

fof(kb_SUMO_3429,axiom,
    s__documentation(s__SineFn__m,s__EnglishLanguage,'(&%SineFn ?DEGREE) is the sine of the &%PlaneAngleMeasure ?DEGREE. The sine of ?DEGREE is the ratio of the side opposite ?DEGREE to the hypotenuse in a right-angled triangle.') ).

fof(kb_SUMO_3430,axiom,
    s__instance(s__SquareRootFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3431,axiom,
    s__domain(s__SquareRootFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3432,axiom,
    s__range(s__SquareRootFn__m,s__Number) ).

fof(kb_SUMO_3433,axiom,
    s__documentation(s__SquareRootFn__m,s__EnglishLanguage,'(SquareRootFn ?NUMBER) is the principal square root of ?NUMBER.') ).

fof(kb_SUMO_3434,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__Quantity) )
     => ( s__SquareRootFn(V__NUMBER1) = V__NUMBER2
       => times(V__NUMBER2,V__NUMBER2) = V__NUMBER1 ) ) ).

fof(kb_SUMO_3435,axiom,
    s__instance(s__TangentFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3436,axiom,
    s__instance(s__TangentFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3437,axiom,
    s__domain(s__TangentFn__m,"1",s__PlaneAngleMeasure) ).

fof(kb_SUMO_3438,axiom,
    s__range(s__TangentFn__m,s__RealNumber) ).

fof(kb_SUMO_3439,axiom,
    s__documentation(s__TangentFn__m,s__EnglishLanguage,'(&%TangentFn ?DEGREE) is the tangent of the &%PlaneAngleMeasure ?DEGREE. The tangent of ?DEGREE is the ratio of the side opposite ?DEGREE to the side next to ?DEGREE in a right-angled triangle.') ).

fof(kb_SUMO_3440,axiom,
    ! [V__DEGREE] :
      ( s__instance(V__DEGREE,s__PlaneAngleMeasure)
     => s__TangentFn(V__DEGREE) = divide(s__SineFn(V__DEGREE),s__CosineFn(V__DEGREE)) ) ).

fof(kb_SUMO_3441,axiom,
    s__instance(s__identityElement__m,s__BinaryPredicate) ).

fof(kb_SUMO_3442,axiom,
    s__instance(s__identityElement__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3443,axiom,
    s__domain(s__identityElement__m,"1",s__BinaryFunction) ).

fof(kb_SUMO_3444,axiom,
    s__domain(s__identityElement__m,"2",s__Entity) ).

fof(kb_SUMO_3445,axiom,
    s__documentation(s__identityElement__m,s__EnglishLanguage,'An object ?ID is the identity element for BinaryFunction ?FUNCTION just in case, for every instance ?INST, applying ?FUNCTION to ?INST and ?ID results in ?INST.') ).

fof(kb_SUMO_3446,axiom,
    ! [V__CLASS,V__ID,V__FUNCTION] :
      ( s__identityElement(V__FUNCTION,V__ID)
     => ! [V__INST] :
          ( ( s__instance(V__FUNCTION,s__BinaryFunction)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__domain(V__FUNCTION,"1",V__CLASS)
              & s__instance(V__INST,V__CLASS) )
           => s__AssignmentFn_3(V__FUNCTION,V__ID,V__INST) = V__INST ) ) ) ).

fof(kb_SUMO_3447,axiom,
    s__identityElement(times__m,"1") ).

fof(kb_SUMO_3448,axiom,
    s__identityElement(plus__m,"0") ).

fof(kb_SUMO_3449,axiom,
    s__identityElement(minus__m,"0") ).

fof(kb_SUMO_3450,axiom,
    s__identityElement(divide__m,"1") ).

fof(kb_SUMO_3451,axiom,
    s__instance(s__SuccessorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3452,axiom,
    s__instance(s__SuccessorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3453,axiom,
    s__instance(s__TotalValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_3454,axiom,
    s__domain(s__SuccessorFn__m,"1",s__Integer) ).

fof(kb_SUMO_3455,axiom,
    s__range(s__SuccessorFn__m,s__Integer) ).

fof(kb_SUMO_3456,axiom,
    s__documentation(s__SuccessorFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Integer to its successor, e.g. the successor of 5 is 6.') ).

fof(kb_SUMO_3457,axiom,
    ! [V__INT2,V__INT1] :
      ( ( s__instance(V__INT1,s__Integer)
        & s__instance(V__INT2,s__Integer) )
     => ( s__SuccessorFn(V__INT1) = s__SuccessorFn(V__INT2)
       => V__INT1 = V__INT2 ) ) ).

fof(kb_SUMO_3458,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => less(V__INT,s__SuccessorFn(V__INT)) ) ).

fof(kb_SUMO_3459,axiom,
    ! [V__INT2,V__INT1] :
      ( s__instance(V__INT2,s__Quantity)
     => ( ( s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer) )
       => ~ ( less(V__INT1,V__INT2)
            & less(V__INT2,s__SuccessorFn(V__INT1)) ) ) ) ).

fof(kb_SUMO_3460,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => V__INT = s__SuccessorFn(s__PredecessorFn(V__INT)) ) ).

fof(kb_SUMO_3461,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => V__INT = s__PredecessorFn(s__SuccessorFn(V__INT)) ) ).

fof(kb_SUMO_3462,axiom,
    s__instance(s__PredecessorFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3463,axiom,
    s__instance(s__PredecessorFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3464,axiom,
    s__domain(s__PredecessorFn__m,"1",s__Integer) ).

fof(kb_SUMO_3465,axiom,
    s__range(s__PredecessorFn__m,s__Integer) ).

fof(kb_SUMO_3466,axiom,
    s__documentation(s__PredecessorFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Integer to its predecessor, e.g. the predecessor of 5 is 4.') ).

fof(kb_SUMO_3467,axiom,
    ! [V__INT2,V__INT1] :
      ( ( s__instance(V__INT1,s__Integer)
        & s__instance(V__INT2,s__Integer) )
     => ( s__PredecessorFn(V__INT1) = s__PredecessorFn(V__INT2)
       => V__INT1 = V__INT2 ) ) ).

fof(kb_SUMO_3468,axiom,
    ! [V__INT] :
      ( s__instance(V__INT,s__Integer)
     => greater(V__INT,s__PredecessorFn(V__INT)) ) ).

fof(kb_SUMO_3469,axiom,
    ! [V__INT2,V__INT1] :
      ( s__instance(V__INT2,s__Quantity)
     => ( ( s__instance(V__INT1,s__Integer)
          & s__instance(V__INT2,s__Integer) )
       => ~ ( less(V__INT2,V__INT1)
            & less(s__PredecessorFn(V__INT1),V__INT2) ) ) ) ).

fof(kb_SUMO_3470,axiom,
    s__instance(s__average__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3471,axiom,
    s__instance(s__average__m,s__BinaryPredicate) ).

fof(kb_SUMO_3472,axiom,
    s__instance(s__average__m,s__SingleValuedRelation) ).

fof(kb_SUMO_3473,axiom,
    s__domain(s__average__m,"1",s__List) ).

fof(kb_SUMO_3474,axiom,
    s__domain(s__average__m,"2",s__RealNumber) ).

fof(kb_SUMO_3475,axiom,
    s__synonymousExternalConcept(average,s__average__m,s__EnglishLanguage) ).

fof(kb_SUMO_3476,axiom,
    s__documentation(s__average__m,s__EnglishLanguage,'A partial function that relates a &%List to a &%RealNumber, provided that the &%List only has list elements that are &%RealNumbers. The &%RealNumber associated with the &%List is equal to the mathematical average of the &%RealNumbers in the &%List divided by the total number of list elements.') ).

fof(kb_SUMO_3477,axiom,
    ! [V__AVERAGE,V__LIST] :
      ( s__average(V__LIST,V__AVERAGE)
     => ! [V__LISTITEM] :
          ( ( s__instance(V__LIST,s__List)
            & s__instance(V__AVERAGE,s__RealNumber) )
         => ( s__inList(V__LISTITEM,V__LIST)
           => s__instance(V__LISTITEM,s__RealNumber) ) ) ) ).

fof(kb_SUMO_3478,axiom,
    s__subrelation(s__subset__m,s__subclass__m) ).

fof(kb_SUMO_3479,axiom,
    s__domain(s__subset__m,"1",s__Set) ).

fof(kb_SUMO_3480,axiom,
    s__domain(s__subset__m,"2",s__Set) ).

fof(kb_SUMO_3481,axiom,
    s__documentation(s__subset__m,s__EnglishLanguage,'(subset ?SET1 ?SET2) is true just in case the &%elements of the &%Set ?SET1 are also &%elements of the &%Set ?SET2.') ).

fof(kb_SUMO_3482,axiom,
    ! [V__SUBSET,V__SET] :
      ( s__subset(V__SUBSET,V__SET)
     => ! [V__ELEMENT] :
          ( ( s__instance(V__SET,s__Set)
            & s__instance(V__SUBSET,s__Set) )
         => ( s__element(V__ELEMENT,V__SUBSET)
           => s__element(V__ELEMENT,V__SET) ) ) ) ).

fof(kb_SUMO_3483,axiom,
    s__instance(s__element__m,s__BinaryPredicate) ).

fof(kb_SUMO_3484,axiom,
    s__instance(s__element__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3485,axiom,
    s__subrelation(s__element__m,s__instance__m) ).

fof(kb_SUMO_3486,axiom,
    s__domain(s__element__m,"1",s__Entity) ).

fof(kb_SUMO_3487,axiom,
    s__domain(s__element__m,"2",s__Set) ).

fof(kb_SUMO_3488,axiom,
    s__documentation(s__element__m,s__EnglishLanguage,'(element ?ENTITY ?SET) is true just in case ?ENTITY is contained in the &%Set ?SET. An &%Entity can be an &%element of another &%Entity only if the latter is a &%Set.') ).

fof(kb_SUMO_3489,axiom,
    ! [V__SET2,V__SET1] :
      ( ! [V__ELEMENT] :
          ( ( s__instance(V__SET1,s__Set)
            & s__instance(V__SET2,s__Set) )
         => ( s__element(V__ELEMENT,V__SET1)
          <=> s__element(V__ELEMENT,V__SET2) ) )
     => V__SET1 = V__SET2 ) ).

fof(kb_SUMO_3490,axiom,
    s__instance(s__UnionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3491,axiom,
    s__instance(s__UnionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3492,axiom,
    s__domain(s__UnionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3493,axiom,
    s__domain(s__UnionFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3494,axiom,
    s__range(s__UnionFn__m,s__SetOrClass) ).

fof(kb_SUMO_3495,axiom,
    s__documentation(s__UnionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the union of these &%SetOrClasses. An object is an &%element of the union of two &%SetOrClasses just in case it is an &%instance of either &%SetOrClass.') ).

fof(kb_SUMO_3496,axiom,
    ! [V__C2,V__U,V__C1] :
      ( V__U = s__UnionFn(V__C1,V__C2)
    <=> ! [V__I1,V__I2,V__I3] :
          ( ( s__instance(V__C1,s__SetOrClass)
            & s__instance(V__U,s__SetOrClass)
            & s__instance(V__C2,s__SetOrClass) )
         => ( ( s__instance(V__I1,V__C1)
              & s__instance(V__I2,V__C2)
              & s__instance(V__I3,V__U) )
           => ( s__instance(V__I1,V__U)
              & s__instance(V__I2,V__U)
              & ( s__instance(V__I3,V__C1)
                | s__instance(V__I3,V__C2) ) ) ) ) ) ).

fof(kb_SUMO_3497,axiom,
    s__instance(s__IntersectionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3498,axiom,
    s__instance(s__IntersectionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3499,axiom,
    s__domain(s__IntersectionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3500,axiom,
    s__domain(s__IntersectionFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3501,axiom,
    s__range(s__IntersectionFn__m,s__SetOrClass) ).

fof(kb_SUMO_3502,axiom,
    s__documentation(s__IntersectionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the intersection of these &%SetOrClasses. An object is an instance of the intersection of two &%SetOrClasses just in case it is an instance of both of those &%SetOrClasses.') ).

fof(kb_SUMO_3503,axiom,
    s__instance(s__RelativeComplementFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3504,axiom,
    s__instance(s__RelativeComplementFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3505,axiom,
    s__domain(s__RelativeComplementFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3506,axiom,
    s__domain(s__RelativeComplementFn__m,"2",s__SetOrClass) ).

fof(kb_SUMO_3507,axiom,
    s__range(s__RelativeComplementFn__m,s__SetOrClass) ).

fof(kb_SUMO_3508,axiom,
    s__documentation(s__RelativeComplementFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%SetOrClasses to the difference between these &%SetOrClasses. More precisely, (&%RelativeComplementFn ?CLASS1 ?CLASS2) denotes the instances of ?CLASS1 that are not also instances of ?CLASS2.') ).

fof(kb_SUMO_3509,axiom,
    s__instance(s__ComplementFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3510,axiom,
    s__instance(s__ComplementFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3511,axiom,
    s__domain(s__ComplementFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3512,axiom,
    s__range(s__ComplementFn__m,s__SetOrClass) ).

fof(kb_SUMO_3513,axiom,
    s__documentation(s__ComplementFn__m,s__EnglishLanguage,'The complement of a given &%SetOrClass C is the &%SetOrClass of all things that are not instances of C. In other words, an object is an instance of the complement of a &%SetOrClass C just in case it is not an instance of C.') ).

fof(kb_SUMO_3514,axiom,
    s__instance(s__GeneralizedUnionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3515,axiom,
    s__instance(s__GeneralizedUnionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3516,axiom,
    s__domainSubclass(s__GeneralizedUnionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3517,axiom,
    s__range(s__GeneralizedUnionFn__m,s__SetOrClass) ).

fof(kb_SUMO_3518,axiom,
    s__documentation(s__GeneralizedUnionFn__m,s__EnglishLanguage,'A &%UnaryFunction that takes a &%SetOrClass of &%Classes as its single argument and returns a &%SetOrClass which is the merge of all of the &%Classes in the original &%SetOrClass, i.e. the &%SetOrClass containing just those instances which are instances of an instance of the original &%SetOrClass.') ).

fof(kb_SUMO_3519,axiom,
    s__instance(s__GeneralizedIntersectionFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3520,axiom,
    s__instance(s__GeneralizedIntersectionFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3521,axiom,
    s__domainSubclass(s__GeneralizedIntersectionFn__m,"1",s__SetOrClass) ).

fof(kb_SUMO_3522,axiom,
    s__range(s__GeneralizedIntersectionFn__m,s__SetOrClass) ).

fof(kb_SUMO_3523,axiom,
    s__documentation(s__GeneralizedIntersectionFn__m,s__EnglishLanguage,'A &%UnaryFunction that takes a &%SetOrClass of &%Classes as its single argument and returns a &%SetOrClass which is the intersection of all of the &%Classes in the original &%SetOrClass, i.e. the &%SetOrClass containing just those instances which are instances of all instances of the original &%SetOrClass.') ).

fof(kb_SUMO_3524,axiom,
    s__instance(s__CardinalityFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3525,axiom,
    s__instance(s__CardinalityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3526,axiom,
    s__instance(s__CardinalityFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3527,axiom,
    s__domain(s__CardinalityFn__m,"1",s__UnionFn(s__SetOrClass,s__Collection)) ).

fof(kb_SUMO_3528,axiom,
    s__range(s__CardinalityFn__m,s__Number) ).

fof(kb_SUMO_3529,axiom,
    s__documentation(s__CardinalityFn__m,s__EnglishLanguage,'(CardinalityFn ?CLASS) returns the number of instances in the &%SetOrClass ?CLASS or the number of members in the ?CLASS &%Collection.') ).

%----BUG found 18 June 2012
% fof(kb_SUMO_3530,axiom,(
%     s__subclass(s__NullSet,s__SetOrClass) )).

fof(kb_SUMO_3531,axiom,
    s__instance(s__NullSet__t,s__SetOrClass) ).

fof(kb_SUMO_3532,axiom,
    s__documentation(s__NullSet,s__EnglishLanguage,'Any &%SetOrClass that contains no instances.') ).

fof(kb_SUMO_3533,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__SetOrClass)
     => ( s__instance(V__SET,s__NullSet)
       => ~ ? [V__INST] : s__instance(V__INST,V__SET) ) ) ).

fof(kb_SUMO_3534,axiom,
    s__subclass(s__NonNullSet,s__SetOrClass) ).

fof(kb_SUMO_3535,axiom,
    s__instance(s__NonNullSet__t,s__SetOrClass) ).

fof(kb_SUMO_3536,axiom,
    s__documentation(s__NonNullSet,s__EnglishLanguage,'Any &%SetOrClass that contains at least one instance.') ).

fof(kb_SUMO_3537,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__SetOrClass)
     => ( s__instance(V__SET,s__NonNullSet)
       => ? [V__INST] : s__instance(V__INST,V__SET) ) ) ).

fof(kb_SUMO_3538,axiom,
    s__subclass(s__FiniteSet,s__Set) ).

fof(kb_SUMO_3539,axiom,
    s__instance(s__FiniteSet__t,s__SetOrClass) ).

fof(kb_SUMO_3540,axiom,
    s__documentation(s__FiniteSet,s__EnglishLanguage,'A &%Set containing a finite number of elements.') ).

fof(kb_SUMO_3541,axiom,
    ! [V__SET] :
      ( s__instance(V__SET,s__UnionFn(s__SetOrClass,s__Collection))
     => ( s__instance(V__SET,s__FiniteSet)
       => ? [V__NUMBER] :
            ( s__instance(V__NUMBER,s__NonnegativeInteger)
            & V__NUMBER = s__CardinalityFn(V__SET) ) ) ) ).

fof(kb_SUMO_3542,axiom,
    s__subclass(s__PairwiseDisjointClass,s__SetOrClass) ).

fof(kb_SUMO_3543,axiom,
    s__instance(s__PairwiseDisjointClass__t,s__SetOrClass) ).

fof(kb_SUMO_3544,axiom,
    s__documentation(s__PairwiseDisjointClass,s__EnglishLanguage,'A &%SetOrClass is a &%PairwiseDisjointClass just in case every instance of the &%SetOrClass is either &%equal to or &%disjoint from every other instance of the &%SetOrClass.') ).

fof(kb_SUMO_3545,axiom,
    ! [V__SUPERCLASS] :
      ( s__instance(V__SUPERCLASS,s__PairwiseDisjointClass)
     => ! [V__CLASS1,V__CLASS2] :
          ( ( s__instance(V__CLASS2,s__SetOrClass)
            & s__instance(V__CLASS1,s__SetOrClass)
            & s__instance(V__SUPERCLASS,s__SetOrClass) )
         => ( ( s__instance(V__CLASS1,V__SUPERCLASS)
              & s__instance(V__CLASS2,V__SUPERCLASS) )
           => ( V__CLASS1 = V__CLASS2
              | s__disjoint(V__CLASS1,V__CLASS2) ) ) ) ) ).

fof(kb_SUMO_3546,axiom,
    s__subclass(s__MutuallyDisjointClass,s__SetOrClass) ).

fof(kb_SUMO_3547,axiom,
    s__instance(s__MutuallyDisjointClass__t,s__SetOrClass) ).

fof(kb_SUMO_3548,axiom,
    s__documentation(s__MutuallyDisjointClass,s__EnglishLanguage,'A &%SetOrClass is a &%MutuallyDisjointClass just in case there exists nothing which is an instance of all of the instances of the original &%SetOrClass.') ).

fof(kb_SUMO_3549,axiom,
    ! [V__CLASS] :
      ( s__instance(V__CLASS,s__MutuallyDisjointClass)
     => ! [V__INST1,V__INST2] :
          ( ( s__instance(V__INST1,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__INST1,V__CLASS)
              & s__instance(V__INST2,V__INST1) )
           => ? [V__INST3] :
                ( s__instance(V__INST3,s__SetOrClass)
                & s__instance(V__INST3,V__CLASS)
                & ~ s__instance(V__INST2,V__INST3) ) ) ) ) ).

fof(kb_SUMO_3550,axiom,
    s__instance(s__KappaFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3551,axiom,
    s__domain(s__KappaFn__m,"1",s__SymbolicString) ).

fof(kb_SUMO_3552,axiom,
    s__domain(s__KappaFn__m,"2",s__Formula) ).

fof(kb_SUMO_3553,axiom,
    s__range(s__KappaFn__m,s__Class) ).

fof(kb_SUMO_3554,axiom,
    s__documentation(s__KappaFn__m,s__EnglishLanguage,'A class-forming operator that takes two arguments: a variable and a formula containing at least one unbound occurrence of the variable. The result of applying &%KappaFn to a variable and a formula is the &%SetOrClass of things that satisfy the formula. For example, we can denote the &%SetOrClass of prime numbers that are less than 100 with the following expression: (KappaFn ?NUMBER (and (instance ?NUMBER PrimeNumber) (lessThan ?NUMBER 100))). Note that the use of this function is discouraged, since there is currently no axiomatic support for it.') ).

fof(kb_SUMO_3555,axiom,
    s__subclass(s__Graph,s__Abstract) ).

fof(kb_SUMO_3556,axiom,
    s__documentation(s__Graph,s__EnglishLanguage,'The &%Class of graphs, where a graph is understood to be a set of &%GraphNodes connected by &%GraphArcs. Note that this &%Class includes only connected graphs, i.e. graphs in which there is a &%GraphPath between any two &%GraphNodes. Note too that every &%Graph is required to contain at least two &%GraphArcs and three &%GraphNodes.') ).

fof(kb_SUMO_3557,axiom,
    ! [V__GRAPH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__GRAPH,s__Graph)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__NODE2,s__GraphNode)
        & s__graphPart(V__NODE1,V__GRAPH)
        & s__graphPart(V__NODE2,V__GRAPH)
        & V__NODE1 != V__NODE2 )
     => ? [V__ARC,V__PATH] :
          ( s__instance(V__ARC,s__GraphArc)
          & ( s__links(V__NODE1,V__NODE2,V__ARC)
            | ( s__subGraph(V__PATH,V__GRAPH)
              & s__instance(V__PATH,s__GraphPath)
              & ( ( s__BeginNodeFn(V__PATH) = V__NODE1
                  & s__EndNodeFn(V__PATH) = V__NODE2 )
                | ( s__BeginNodeFn(V__PATH) = V__NODE2
                  & s__EndNodeFn(V__PATH) = V__NODE1 ) ) ) ) ) ) ).

fof(kb_SUMO_3558,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ? [V__NODE1,V__NODE2,V__NODE3,V__ARC1,V__ARC2] :
          ( s__instance(V__ARC2,s__GraphArc)
          & s__instance(V__ARC1,s__GraphArc)
          & s__instance(V__NODE3,s__GraphNode)
          & s__instance(V__NODE2,s__GraphNode)
          & s__instance(V__NODE1,s__GraphNode)
          & s__graphPart(V__NODE1,V__GRAPH)
          & s__graphPart(V__NODE2,V__GRAPH)
          & s__graphPart(V__NODE3,V__GRAPH)
          & s__graphPart(V__ARC1,V__GRAPH)
          & s__graphPart(V__ARC2,V__GRAPH)
          & s__links(V__NODE1,V__NODE2,V__ARC1)
          & s__links(V__NODE2,V__NODE3,V__ARC2)
          & V__NODE1 != V__NODE2
          & V__NODE2 != V__NODE3
          & V__NODE1 != V__NODE3
          & V__ARC1 != V__ARC2 ) ) ).

fof(kb_SUMO_3559,axiom,
    s__subclass(s__DirectedGraph,s__Graph) ).

fof(kb_SUMO_3560,axiom,
    s__documentation(s__DirectedGraph,s__EnglishLanguage,'The &%Class of directed graphs. A directed graph is a &%Graph in which all &%GraphArcs have direction, i.e. every &%GraphArc has an initial node (see &%InitialNodeFn) and a terminal node (see &%TerminalNodeFn).') ).

fof(kb_SUMO_3561,axiom,
    ! [V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__DirectedGraph)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ? [V__NODE1,V__NODE2] :
            ( s__InitialNodeFn(V__ARC) = V__NODE1
            & s__TerminalNodeFn(V__ARC) = V__NODE2 ) ) ) ).

fof(kb_SUMO_3562,axiom,
    s__subclass(s__Tree,s__DirectedGraph) ).

fof(kb_SUMO_3563,axiom,
    s__instance(s__Tree__t,s__SetOrClass) ).

fof(kb_SUMO_3564,axiom,
    s__instance(s__DirectedGraph__t,s__SetOrClass) ).

fof(kb_SUMO_3565,axiom,
    s__documentation(s__Tree,s__EnglishLanguage,'A Tree is a &%DirectedGraph that has no &%GraphLoops.') ).

fof(kb_SUMO_3566,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__LOOP] :
              ( s__instance(V__LOOP,s__GraphElement)
              & s__instance(V__LOOP,s__GraphLoop)
              & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_3567,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__LOOP] :
              ( s__instance(V__LOOP,s__GraphElement)
              & s__instance(V__LOOP,s__GraphCircuit)
              & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_3568,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__Tree)
       => ~ ? [V__ARC1,V__ARC2,V__NODE] :
              ( s__instance(V__NODE,s__GraphElement)
              & s__instance(V__ARC2,s__GraphArc)
              & s__instance(V__ARC1,s__GraphArc)
              & s__graphPart(V__ARC1,V__GRAPH)
              & s__graphPart(V__ARC2,V__GRAPH)
              & s__graphPart(V__NODE,V__GRAPH)
              & s__TerminalNodeFn(V__ARC1) = V__NODE
              & s__TerminalNodeFn(V__ARC2) = V__NODE
              & V__ARC1 != V__ARC2 ) ) ) ).

fof(kb_SUMO_3569,axiom,
    s__subclass(s__GraphPath,s__DirectedGraph) ).

fof(kb_SUMO_3570,axiom,
    s__documentation(s__GraphPath,s__EnglishLanguage,'Informally, a single, directed route between two &%GraphNodes in a &%Graph. Formally, a &%DirectedGraph that is a &%subGraph of the original &%Graph and such that no two &%GraphArcs in the &%DirectedGraph have the same intial node (see &%InitialNodeFn) or the same terminal node (see &%TerminalNodeFn).') ).

fof(kb_SUMO_3571,axiom,
    ! [V__NODE,V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__GraphPath)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ( s__InitialNodeFn(V__ARC) = V__NODE
         => ~ ? [V__OTHER] :
                ( s__instance(V__OTHER,s__GraphArc)
                & s__InitialNodeFn(V__OTHER) = V__NODE
                & V__OTHER != V__ARC ) ) ) ) ).

fof(kb_SUMO_3572,axiom,
    ! [V__NODE,V__GRAPH,V__ARC] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( ( s__instance(V__GRAPH,s__GraphPath)
          & s__instance(V__ARC,s__GraphArc)
          & s__graphPart(V__ARC,V__GRAPH) )
       => ( s__TerminalNodeFn(V__ARC) = V__NODE
         => ~ ? [V__OTHER] :
                ( s__instance(V__OTHER,s__GraphArc)
                & s__TerminalNodeFn(V__OTHER) = V__NODE
                & V__OTHER != V__ARC ) ) ) ) ).

fof(kb_SUMO_3573,axiom,
    s__subclass(s__GraphCircuit,s__GraphPath) ).

fof(kb_SUMO_3574,axiom,
    s__instance(s__GraphCircuit__t,s__SetOrClass) ).

fof(kb_SUMO_3575,axiom,
    s__instance(s__GraphPath__t,s__SetOrClass) ).

fof(kb_SUMO_3576,axiom,
    s__documentation(s__GraphCircuit,s__EnglishLanguage,'A &%GraphPath that begins (see &%BeginNodeFn) and ends (see &%EndNodeFn) at the same &%GraphNode.') ).

fof(kb_SUMO_3577,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__GraphPath)
     => ( s__instance(V__GRAPH,s__GraphCircuit)
      <=> ? [V__NODE] :
            ( s__BeginNodeFn(V__GRAPH) = V__NODE
            & s__EndNodeFn(V__GRAPH) = V__NODE ) ) ) ).

fof(kb_SUMO_3578,axiom,
    s__subclass(s__MultiGraph,s__Graph) ).

fof(kb_SUMO_3579,axiom,
    s__instance(s__MultiGraph__t,s__SetOrClass) ).

fof(kb_SUMO_3580,axiom,
    s__documentation(s__MultiGraph,s__EnglishLanguage,'The &%Class of multigraphs. A multigraph is a &%Graph containing at least one pair of &%GraphNodes that are connected by more than one &%GraphArc.') ).

fof(kb_SUMO_3581,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__MultiGraph)
      <=> ? [V__ARC1,V__ARC2,V__NODE1,V__NODE2] :
            ( s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__ARC2,s__GraphArc)
            & s__instance(V__ARC1,s__GraphArc)
            & s__graphPart(V__ARC1,V__GRAPH)
            & s__graphPart(V__ARC2,V__GRAPH)
            & s__graphPart(V__NODE1,V__GRAPH)
            & s__graphPart(V__NODE2,V__GRAPH)
            & s__links(V__NODE1,V__NODE2,V__ARC1)
            & s__links(V__NODE1,V__NODE2,V__ARC2)
            & V__ARC1 != V__ARC2 ) ) ) ).

fof(kb_SUMO_3582,axiom,
    s__subclass(s__PseudoGraph,s__Graph) ).

fof(kb_SUMO_3583,axiom,
    s__instance(s__PseudoGraph__t,s__SetOrClass) ).

fof(kb_SUMO_3584,axiom,
    s__instance(s__Graph__t,s__SetOrClass) ).

fof(kb_SUMO_3585,axiom,
    s__documentation(s__PseudoGraph,s__EnglishLanguage,'The &%Class of pseudographs. A pseudograph is a &%Graph containing at least one &%GraphLoop.') ).

fof(kb_SUMO_3586,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => ( s__instance(V__GRAPH,s__PseudoGraph)
      <=> ? [V__LOOP] :
            ( s__instance(V__LOOP,s__GraphElement)
            & s__instance(V__LOOP,s__GraphLoop)
            & s__graphPart(V__LOOP,V__GRAPH) ) ) ) ).

fof(kb_SUMO_3587,axiom,
    s__subclass(s__GraphElement,s__Abstract) ).

fof(kb_SUMO_3588,axiom,
    s__instance(s__GraphElement__t,s__SetOrClass) ).

fof(kb_SUMO_3589,axiom,
    s__partition_3(s__GraphElement,s__GraphNode,s__GraphArc) ).

fof(kb_SUMO_3590,axiom,
    s__documentation(s__GraphElement,s__EnglishLanguage,'Noncompositional parts of &%Graphs. These parts are restricted to &%GraphNodes and &%GraphArcs.') ).

fof(kb_SUMO_3591,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__GraphElement)
     => ? [V__GRAPH] :
          ( s__instance(V__GRAPH,s__Graph)
          & s__graphPart(V__PART,V__GRAPH) ) ) ).

fof(kb_SUMO_3592,axiom,
    s__subclass(s__GraphNode,s__GraphElement) ).

fof(kb_SUMO_3593,axiom,
    s__instance(s__GraphNode__t,s__SetOrClass) ).

fof(kb_SUMO_3594,axiom,
    s__documentation(s__GraphNode,s__EnglishLanguage,'&%Graphs are comprised of &%GraphNodes and &%GraphArcs. Every &%GraphNode is linked by a &%GraphArc.') ).

fof(kb_SUMO_3595,axiom,
    ! [V__NODE] :
      ( s__instance(V__NODE,s__GraphNode)
     => ? [V__OTHER,V__ARC] :
          ( s__instance(V__ARC,s__GraphArc)
          & s__instance(V__OTHER,s__GraphNode)
          & s__links(V__NODE,V__OTHER,V__ARC) ) ) ).

fof(kb_SUMO_3596,axiom,
    s__subclass(s__GraphArc,s__GraphElement) ).

fof(kb_SUMO_3597,axiom,
    s__instance(s__GraphArc__t,s__SetOrClass) ).

fof(kb_SUMO_3598,axiom,
    s__documentation(s__GraphArc,s__EnglishLanguage,'&%Graphs are comprised of &%GraphNodes and &%GraphArcs. Every &%GraphArc links two &%GraphNodes.') ).

fof(kb_SUMO_3599,axiom,
    ! [V__ARC] :
      ( s__instance(V__ARC,s__GraphArc)
     => ? [V__NODE1,V__NODE2] :
          ( s__instance(V__NODE2,s__GraphNode)
          & s__instance(V__NODE1,s__GraphNode)
          & s__links(V__NODE1,V__NODE2,V__ARC) ) ) ).

fof(kb_SUMO_3600,axiom,
    s__subclass(s__GraphLoop,s__GraphArc) ).

fof(kb_SUMO_3601,axiom,
    s__instance(s__GraphLoop__t,s__SetOrClass) ).

fof(kb_SUMO_3602,axiom,
    s__documentation(s__GraphLoop,s__EnglishLanguage,'A &%GraphArc in which a &%GraphNode is linked to itself.') ).

fof(kb_SUMO_3603,axiom,
    ! [V__LOOP] :
      ( s__instance(V__LOOP,s__GraphArc)
     => ( s__instance(V__LOOP,s__GraphLoop)
      <=> ? [V__NODE] :
            ( s__instance(V__NODE,s__GraphNode)
            & s__links(V__NODE,V__NODE,V__LOOP) ) ) ) ).

fof(kb_SUMO_3604,axiom,
    ! [V__NODE,V__ARC] :
      ( s__instance(V__ARC,s__GraphArc)
     => ( ( s__InitialNodeFn(V__ARC) = V__NODE
          & s__TerminalNodeFn(V__ARC) = V__NODE )
       => s__instance(V__ARC,s__GraphLoop) ) ) ).

fof(kb_SUMO_3605,axiom,
    s__instance(s__links__m,s__TernaryPredicate) ).

fof(kb_SUMO_3606,axiom,
    s__domain(s__links__m,"1",s__GraphNode) ).

fof(kb_SUMO_3607,axiom,
    s__domain(s__links__m,"2",s__GraphNode) ).

fof(kb_SUMO_3608,axiom,
    s__domain(s__links__m,"3",s__GraphArc) ).

fof(kb_SUMO_3609,axiom,
    s__documentation(s__links__m,s__EnglishLanguage,'a &%TernaryPredicate that specifies the &%GraphArc connecting two &%GraphNodes.') ).

fof(kb_SUMO_3610,axiom,
    ! [V__ARC,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__ARC,s__GraphArc) )
     => ( s__links(V__NODE1,V__NODE2,V__ARC)
       => s__links(V__NODE2,V__NODE1,V__ARC) ) ) ).

fof(kb_SUMO_3611,axiom,
    s__instance(s__graphPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_3612,axiom,
    s__instance(s__graphPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3613,axiom,
    s__instance(s__graphPart__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3614,axiom,
    s__domain(s__graphPart__m,"1",s__GraphElement) ).

fof(kb_SUMO_3615,axiom,
    s__domain(s__graphPart__m,"2",s__Graph) ).

fof(kb_SUMO_3616,axiom,
    s__documentation(s__graphPart__m,s__EnglishLanguage,'A basic relation for &%Graphs and their parts. (&%graphPart ?PART ?GRAPH) means that ?PART is a &%GraphArc or &%GraphNode of the &%Graph ?GRAPH.') ).

fof(kb_SUMO_3617,axiom,
    s__instance(s__subGraph__m,s__BinaryPredicate) ).

fof(kb_SUMO_3618,axiom,
    s__instance(s__subGraph__m,s__ReflexiveRelation) ).

fof(kb_SUMO_3619,axiom,
    s__instance(s__subGraph__m,s__TransitiveRelation) ).

fof(kb_SUMO_3620,axiom,
    s__domain(s__subGraph__m,"1",s__Graph) ).

fof(kb_SUMO_3621,axiom,
    s__domain(s__subGraph__m,"2",s__Graph) ).

fof(kb_SUMO_3622,axiom,
    s__documentation(s__subGraph__m,s__EnglishLanguage,'The relation between two &%Graphs when one &%Graph is a part of the other. (&%subGraph ?GRAPH1 ?GRAPH2) means that ?GRAPH1 is a part of ?GRAPH2.') ).

fof(kb_SUMO_3623,axiom,
    ! [V__GRAPH2,V__GRAPH1,V__ELEMENT] :
      ( ( s__instance(V__ELEMENT,s__GraphElement)
        & s__instance(V__GRAPH1,s__Graph)
        & s__instance(V__GRAPH2,s__Graph) )
     => ( ( s__subGraph(V__GRAPH1,V__GRAPH2)
          & s__graphPart(V__ELEMENT,V__GRAPH1) )
       => s__graphPart(V__ELEMENT,V__GRAPH2) ) ) ).

fof(kb_SUMO_3624,axiom,
    s__instance(s__pathLength__m,s__BinaryPredicate) ).

fof(kb_SUMO_3625,axiom,
    s__instance(s__pathLength__m,s__AsymmetricRelation) ).

fof(kb_SUMO_3626,axiom,
    s__instance(s__pathLength__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_3627,axiom,
    s__domain(s__pathLength__m,"1",s__GraphPath) ).

fof(kb_SUMO_3628,axiom,
    s__domain(s__pathLength__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_3629,axiom,
    s__documentation(s__pathLength__m,s__EnglishLanguage,'A &%BinaryPredicate that specifies the length (in number of &%GraphNodes) of a &%GraphPath. (&%pathLength ?PATH ?NUMBER) means that there are ?NUMBER nodes in the &%GraphPath ?PATH.') ).

fof(kb_SUMO_3630,axiom,
    s__instance(s__InitialNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3631,axiom,
    s__instance(s__InitialNodeFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3632,axiom,
    s__domain(s__InitialNodeFn__m,"1",s__GraphArc) ).

fof(kb_SUMO_3633,axiom,
    s__range(s__InitialNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_3634,axiom,
    s__documentation(s__InitialNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphArc to the initial node of the &%GraphArc. Note that this is a partial function. In particular, the function is undefined for &%GraphArcs that are not part of a &%DirectedGraph.') ).

fof(kb_SUMO_3635,axiom,
    s__instance(s__TerminalNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3636,axiom,
    s__instance(s__TerminalNodeFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_3637,axiom,
    s__domain(s__TerminalNodeFn__m,"1",s__GraphArc) ).

fof(kb_SUMO_3638,axiom,
    s__range(s__TerminalNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_3639,axiom,
    s__documentation(s__TerminalNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphArc to the terminal node of the &%GraphArc. Note that this is a partial function. In particular, the function is undefined for &%GraphArcs that are not part of a &%DirectedGraph.') ).

fof(kb_SUMO_3640,axiom,
    s__instance(s__BeginNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3641,axiom,
    s__instance(s__BeginNodeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3642,axiom,
    s__domain(s__BeginNodeFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_3643,axiom,
    s__range(s__BeginNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_3644,axiom,
    s__relatedInternalConcept(s__BeginNodeFn__m,s__InitialNodeFn__m) ).

fof(kb_SUMO_3645,axiom,
    s__documentation(s__BeginNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the &%GraphNode that is the beginning of the &%GraphPath. Note that, unlike &%InitialNodeFn (which relates a &%GraphArc to a &%GraphNode), &%BeginNodeFn is a total function - every &%GraphPath has a beginning.') ).

fof(kb_SUMO_3646,axiom,
    s__instance(s__EndNodeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3647,axiom,
    s__instance(s__EndNodeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3648,axiom,
    s__domain(s__EndNodeFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_3649,axiom,
    s__range(s__EndNodeFn__m,s__GraphNode) ).

fof(kb_SUMO_3650,axiom,
    s__relatedInternalConcept(s__EndNodeFn__m,s__TerminalNodeFn__m) ).

fof(kb_SUMO_3651,axiom,
    s__documentation(s__EndNodeFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the &%GraphNode that is the end of the &%GraphPath. Note that, unlike &%TerminalNodeFn (which relates a &%GraphArc to a &%GraphNode), &%EndNodeFn is a total function - every &%GraphPath has a end.') ).

fof(kb_SUMO_3652,axiom,
    s__instance(s__arcWeight__m,s__BinaryPredicate) ).

fof(kb_SUMO_3653,axiom,
    s__instance(s__arcWeight__m,s__SingleValuedRelation) ).

fof(kb_SUMO_3654,axiom,
    s__domain(s__arcWeight__m,"1",s__GraphArc) ).

fof(kb_SUMO_3655,axiom,
    s__domain(s__arcWeight__m,"2",s__Quantity) ).

fof(kb_SUMO_3656,axiom,
    s__documentation(s__arcWeight__m,s__EnglishLanguage,'This predicate indicates the value of a &%GraphArc in a &%Graph. This could map to the length of a road in a road network or the flow rate of a pipe in a plumbing system.') ).

fof(kb_SUMO_3657,axiom,
    s__instance(s__PathWeightFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3658,axiom,
    s__domain(s__PathWeightFn__m,"1",s__GraphPath) ).

fof(kb_SUMO_3659,axiom,
    s__range(s__PathWeightFn__m,s__Quantity) ).

fof(kb_SUMO_3660,axiom,
    s__documentation(s__PathWeightFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%GraphPath to the sum of the &%arcWeights on the &%GraphArcs in the &%GraphPath.') ).

fof(kb_SUMO_3661,axiom,
    ! [V__PATH,V__ARC1,V__SUBPATH,V__SUM,V__NUMBER1] :
      ( s__instance(V__SUBPATH,s__GraphPath)
     => ( ( s__PathWeightFn(V__PATH) = V__SUM
          & s__subGraph(V__SUBPATH,V__PATH)
          & s__graphPart(V__ARC1,V__PATH)
          & s__arcWeight(V__ARC1,V__NUMBER1)
          & ! [V__ARC2] :
              ( ( s__instance(V__ARC2,s__GraphElement)
                & s__instance(V__NUMBER1,s__Quantity)
                & s__instance(V__SUBPATH,s__Graph)
                & s__instance(V__ARC1,s__GraphArc)
                & s__instance(V__PATH,s__GraphPath) )
             => ( s__graphPart(V__ARC2,V__PATH)
               => ( s__graphPart(V__ARC2,V__SUBPATH)
                  | V__ARC2 = V__ARC1 ) ) ) )
       => V__SUM = plus(s__PathWeightFn(V__SUBPATH),V__NUMBER1) ) ) ).

fof(kb_SUMO_3662,axiom,
    ! [V__PATH,V__ARC2,V__ARC1,V__NUMBER2,V__SUM,V__NUMBER1] :
      ( ( s__PathWeightFn(V__PATH) = V__SUM
        & s__graphPart(V__ARC1,V__PATH)
        & s__graphPart(V__ARC2,V__PATH)
        & s__arcWeight(V__ARC1,V__NUMBER1)
        & s__arcWeight(V__ARC2,V__NUMBER2)
        & ! [V__ARC3] :
            ( ( s__instance(V__ARC3,s__GraphElement)
              & s__instance(V__NUMBER1,s__Quantity)
              & s__instance(V__NUMBER2,s__Quantity)
              & s__instance(V__ARC1,s__GraphArc)
              & s__instance(V__ARC2,s__GraphArc)
              & s__instance(V__PATH,s__GraphPath) )
           => ( s__graphPart(V__ARC3,V__PATH)
             => ( V__ARC3 = V__ARC1
                | V__ARC3 = V__ARC2 ) ) ) )
     => s__PathWeightFn(V__PATH) = plus(V__NUMBER1,V__NUMBER2) ) ).

fof(kb_SUMO_3663,axiom,
    s__instance(s__MinimalWeightedPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3664,axiom,
    s__domain(s__MinimalWeightedPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_3665,axiom,
    s__domain(s__MinimalWeightedPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_3666,axiom,
    s__range(s__MinimalWeightedPathFn__m,s__GraphPath) ).

fof(kb_SUMO_3667,axiom,
    s__documentation(s__MinimalWeightedPathFn__m,s__EnglishLanguage,'This &%BinaryFunction assigns two &%GraphNodes to the &%GraphPath with the smallest sum of weighted arcs between the two &%GraphNodes.') ).

fof(kb_SUMO_3668,axiom,
    ! [V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode) )
     => ( s__MinimalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
       => s__instance(V__PATH,s__GraphPathFn(V__NODE1,V__NODE2)) ) ) ).

fof(kb_SUMO_3669,axiom,
    ! [V__NUMBER,V__PATH,V__NUMBER2,V__NODE1,V__NUMBER1,V__NODE2] :
      ( ( s__MinimalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
        & s__PathWeightFn(V__PATH) = V__NUMBER )
     => ! [V__PATH2] :
          ( ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__NUMBER2,s__Quantity)
            & s__instance(V__PATH,s__GraphPath) )
         => ( ( s__instance(V__PATH2,s__GraphPathFn(V__NODE1,V__NODE2))
              & s__PathWeightFn(V__PATH2) = V__NUMBER2 )
           => greatereq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_3670,axiom,
    s__instance(s__MaximalWeightedPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3671,axiom,
    s__domain(s__MaximalWeightedPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_3672,axiom,
    s__domain(s__MaximalWeightedPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_3673,axiom,
    s__range(s__MaximalWeightedPathFn__m,s__GraphPath) ).

fof(kb_SUMO_3674,axiom,
    s__documentation(s__MaximalWeightedPathFn__m,s__EnglishLanguage,'This &%BinaryFunction assigns two &%GraphNodes to the &%GraphPath with the largest sum of weighted arcs between the two &%GraphNodes.') ).

fof(kb_SUMO_3675,axiom,
    ! [V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode) )
     => ( s__MaximalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
       => s__instance(V__PATH,s__GraphPathFn(V__NODE1,V__NODE2)) ) ) ).

fof(kb_SUMO_3676,axiom,
    ! [V__NUMBER,V__PATH,V__NUMBER2,V__NODE1,V__NUMBER1,V__NODE2] :
      ( ( s__MaximalWeightedPathFn(V__NODE1,V__NODE2) = V__PATH
        & s__PathWeightFn(V__PATH) = V__NUMBER )
     => ! [V__PATH2] :
          ( ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__NODE2,s__GraphNode)
            & s__instance(V__NUMBER1,s__Quantity)
            & s__instance(V__NODE1,s__GraphNode)
            & s__instance(V__NUMBER2,s__Quantity)
            & s__instance(V__PATH,s__GraphPath) )
         => ( ( s__instance(V__PATH2,s__GraphPathFn(V__NODE1,V__NODE2))
              & s__PathWeightFn(V__PATH2) = V__NUMBER2 )
           => lesseq(V__NUMBER2,V__NUMBER1) ) ) ) ).

fof(kb_SUMO_3677,axiom,
    s__instance(s__GraphPathFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3678,axiom,
    s__instance(s__GraphPathFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3679,axiom,
    s__domain(s__GraphPathFn__m,"1",s__GraphNode) ).

fof(kb_SUMO_3680,axiom,
    s__domain(s__GraphPathFn__m,"2",s__GraphNode) ).

fof(kb_SUMO_3681,axiom,
    s__rangeSubclass(s__GraphPathFn__m,s__GraphPath) ).

fof(kb_SUMO_3682,axiom,
    s__documentation(s__GraphPathFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two &%GraphNodes to the &%Class of &%GraphPaths between those two nodes. Note that the two &%GraphNodes must belong to the same &%Graph.') ).

fof(kb_SUMO_3683,axiom,
    ! [V__GRAPH,V__PATH,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__GraphNode)
        & s__instance(V__NODE1,s__GraphNode)
        & s__instance(V__PATH,s__GraphElement)
        & s__instance(V__GRAPH,s__Graph) )
     => ( ( s__graphPart(V__PATH,V__GRAPH)
          & ~ s__instance(V__GRAPH,s__DirectedGraph) )
       => ( s__GraphPathFn(V__NODE1,V__NODE2) = V__PATH
        <=> s__GraphPathFn(V__NODE2,V__NODE1) = V__PATH ) ) ) ).

fof(kb_SUMO_3684,axiom,
    s__instance(s__CutSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3685,axiom,
    s__domain(s__CutSetFn__m,"1",s__Graph) ).

fof(kb_SUMO_3686,axiom,
    s__rangeSubclass(s__CutSetFn__m,s__GraphPath) ).

fof(kb_SUMO_3687,axiom,
    s__documentation(s__CutSetFn__m,s__EnglishLanguage,'A &%UnaryFunction that assigns a &%Graph the &%Class of &%GraphPaths that partition the graph into two separate graphs if cut. There may be more than one cutset for a given graph.') ).

fof(kb_SUMO_3688,axiom,
    s__instance(s__MinimalCutSetFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3689,axiom,
    s__domain(s__MinimalCutSetFn__m,"1",s__Graph) ).

fof(kb_SUMO_3690,axiom,
    s__rangeSubclass(s__MinimalCutSetFn__m,s__GraphPath) ).

fof(kb_SUMO_3691,axiom,
    s__relatedInternalConcept(s__MinimalCutSetFn__m,s__CutSetFn__m) ).

fof(kb_SUMO_3692,axiom,
    s__documentation(s__MinimalCutSetFn__m,s__EnglishLanguage,'A &%UnaryFunction that assigns a &%Graph the &%Class of &%GraphPaths which comprise cutsets for the &%Graph and which have the least number of &%GraphArcs.') ).

fof(kb_SUMO_3693,axiom,
    ! [V__GRAPH] :
      ( s__instance(V__GRAPH,s__Graph)
     => s__subclass(s__MinimalCutSetFn(V__GRAPH),s__CutSetFn(V__GRAPH)) ) ).

fof(kb_SUMO_3694,axiom,
    ! [V__PATHCLASS,V__GRAPH] :
      ( s__MinimalCutSetFn(V__GRAPH) = V__PATHCLASS
     => ? [V__NUMBER] :
          ( s__instance(V__NUMBER,s__PositiveInteger)
          & ! [V__PATH] :
              ( ( s__instance(V__PATH,s__GraphPath)
                & s__instance(V__GRAPH,s__Graph)
                & s__instance(V__PATHCLASS,s__SetOrClass) )
             => ( s__instance(V__PATH,V__PATHCLASS)
               => s__pathLength(V__PATH,V__NUMBER) ) ) ) ) ).

fof(kb_SUMO_3695,axiom,
    ! [V__GRAPH,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveInteger)
        & s__instance(V__NUMBER2,s__PositiveInteger)
        & s__instance(V__GRAPH,s__Graph) )
     => ~ ? [V__PATH1,V__PATH2] :
            ( s__instance(V__PATH2,s__GraphPath)
            & s__instance(V__PATH1,s__GraphPath)
            & s__instance(V__PATH1,s__CutSetFn(V__GRAPH))
            & s__instance(V__PATH2,s__MinimalCutSetFn(V__GRAPH))
            & s__pathLength(V__PATH1,V__NUMBER1)
            & s__pathLength(V__PATH2,V__NUMBER2)
            & less(V__NUMBER1,V__NUMBER2) ) ) ).

fof(kb_SUMO_3696,axiom,
    s__instance(s__abstractCounterpart__m,s__BinaryPredicate) ).

fof(kb_SUMO_3697,axiom,
    s__domain(s__abstractCounterpart__m,"1",s__Abstract) ).

fof(kb_SUMO_3698,axiom,
    s__domain(s__abstractCounterpart__m,"2",s__Physical) ).

fof(kb_SUMO_3699,axiom,
    s__subrelation(s__abstractCounterpart__m,s__represents__m) ).

fof(kb_SUMO_3700,axiom,
    s__documentation(s__abstractCounterpart__m,s__EnglishLanguage,'(abstractCounterpart ?AB ?PHYS relates a &%Physical entity to an &%Abstract one which is an idealized model in some dimension of the &%Physical entity. For example, an &%Abstract &%GraphNode could be stated to be the counterpart of an actual &%Computer in a &%ComputerNetwork.') ).

fof(kb_SUMO_3701,axiom,
    s__subclass(s__PhysicalSystem,s__Physical) ).

fof(kb_SUMO_3702,axiom,
    s__instance(s__PhysicalSystem__t,s__SetOrClass) ).

fof(kb_SUMO_3703,axiom,
    s__documentation(s__PhysicalSystem,s__EnglishLanguage,'&%PhysicalSystem is the class of complex &%Physical things. A &%PhysicalSystem may have one or more corresponding abstract &%Graph representations.') ).

fof(kb_SUMO_3704,axiom,
    s__instance(s__subSystem__m,s__BinaryPredicate) ).

fof(kb_SUMO_3705,axiom,
    s__domain(s__subSystem__m,"1",s__PhysicalSystem) ).

fof(kb_SUMO_3706,axiom,
    s__domain(s__subSystem__m,"2",s__PhysicalSystem) ).

fof(kb_SUMO_3707,axiom,
    s__documentation(s__subSystem__m,s__EnglishLanguage,'(&%subSystem ?SUB ?SYSTEM) means that the &%PhysicalSystem ?SUB is a part of the &%PhysicalSystem ?SYSTEM.') ).

fof(kb_SUMO_3708,axiom,
    s__instance(s__systemPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_3709,axiom,
    s__domain(s__systemPart__m,"1",s__Physical) ).

fof(kb_SUMO_3710,axiom,
    s__domain(s__systemPart__m,"2",s__PhysicalSystem) ).

fof(kb_SUMO_3711,axiom,
    s__documentation(s__systemPart__m,s__EnglishLanguage,'(&%systemPart ?PART ?SYSTEM) means that the &%Physical thing ?PART is a &%SystemElement in the &%PhysicalSystem ?SYSTEM.') ).

fof(kb_SUMO_3712,axiom,
    ! [V__SUB,V__PART,V__SYSTEM] :
      ( ( s__instance(V__SYSTEM,s__PhysicalSystem)
        & s__instance(V__PART,s__Physical)
        & s__instance(V__SUB,s__PhysicalSystem) )
     => ( ( s__subSystem(V__SUB,V__SYSTEM)
          & s__systemPart(V__PART,V__SUB) )
       => s__systemPart(V__PART,V__SYSTEM) ) ) ).

fof(kb_SUMO_3713,axiom,
    s__instance(s__graphMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_3714,axiom,
    s__domain(s__graphMeasure__m,"1",s__Graph) ).

fof(kb_SUMO_3715,axiom,
    s__domain(s__graphMeasure__m,"2",s__UnitOfMeasure) ).

fof(kb_SUMO_3716,axiom,
    s__documentation(s__graphMeasure__m,s__EnglishLanguage,'(graphMeasure ?GRAPH ?MEAS) fixes a &%UnitOfMeasure that is used for the &%arcWeight of a given &%Graph. Stating such a relationship entails that the components of given graph are the &%abstractCounterparts of sets of &%Physical &%Entity(ies).') ).

fof(kb_SUMO_3717,axiom,
    ! [V__G,V__M] :
      ( s__graphMeasure(V__G,V__M)
     => ! [V__AC] :
          ( ( s__instance(V__AC,s__GraphElement)
            & s__instance(V__M,s__UnitOfMeasure)
            & s__instance(V__G,s__Graph) )
         => ( s__graphPart(V__AC,V__G)
            & ? [V__PC] :
                ( s__instance(V__PC,s__Physical)
                & s__abstractCounterpart(V__AC,V__PC) ) ) ) ) ).

fof(kb_SUMO_3718,axiom,
    ! [V__AA,V__AN,V__PA,V__PN,V__G,V__N,V__M] :
      ( ( s__instance(V__M,s__UnitOfMeasure)
        & s__instance(V__N,s__RealNumber)
        & s__instance(V__G,s__Graph)
        & s__instance(V__PN,s__Physical)
        & s__instance(V__PA,s__Object)
        & s__instance(V__AN,s__Abstract) )
     => ( ( s__graphMeasure(V__G,V__M)
          & s__instance(V__AN,s__GraphNode)
          & s__instance(V__AA,s__GraphArc)
          & s__abstractCounterpart(V__AN,V__PN)
          & s__abstractCounterpart(V__AA,V__PA)
          & s__arcWeight(V__AA,s__MeasureFn(V__N,V__M)) )
       => s__measure(V__PA,s__MeasureFn(V__N,V__M)) ) ) ).

fof(kb_SUMO_3719,axiom,
    s__subclass(s__UnitOfMeasure,s__PhysicalQuantity) ).

fof(kb_SUMO_3720,axiom,
    s__documentation(s__UnitOfMeasure,s__EnglishLanguage,'A standard of measurement for some dimension. For example, the &%Meter is a &%UnitOfMeasure for the dimension of length, as is the &%Inch. There is no intrinsic property of a &%UnitOfMeasure that makes it primitive or fundamental, rather, a system of units (e.g. &%SystemeInternationalUnit) defines a set of orthogonal dimensions and assigns units for each.') ).

fof(kb_SUMO_3721,axiom,
    s__subclass(s__CompositeUnitOfMeasure,s__UnitOfMeasure) ).

fof(kb_SUMO_3722,axiom,
    s__documentation(s__CompositeUnitOfMeasure,s__EnglishLanguage,'Instances of this &%Class are &%UnitsOfMeasure defined by the functional composition of other units, each of which might be a &%CompositeUnitOfMeasure or a &%NonCompositeUnitOfMeasure.') ).

fof(kb_SUMO_3723,axiom,
    s__subclass(s__NonCompositeUnitOfMeasure,s__UnitOfMeasure) ).

fof(kb_SUMO_3724,axiom,
    s__instance(s__UnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3725,axiom,
    s__documentation(s__NonCompositeUnitOfMeasure,s__EnglishLanguage,'Instances of this &%Class are &%UnitsOfMeasure that are applied to a single dimension, and so are not intrinsically defined by the functional composition of other units.') ).

fof(kb_SUMO_3726,axiom,
    s__partition_3(s__UnitOfMeasure,s__CompositeUnitOfMeasure,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3727,axiom,
    ! [V__QUANT,V__UNIT,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__UNIT,s__UnitOfMeasure) )
     => ( ( s__instance(V__QUANT,s__MeasureFn(V__N,V__UNIT))
          & s__instance(V__UNIT,s__CompositeUnitOfMeasure) )
       => s__instance(V__QUANT,s__FunctionQuantity) ) ) ).

fof(kb_SUMO_3728,axiom,
    ! [V__QUANT,V__UNIT,V__N] :
      ( ( s__instance(V__N,s__RealNumber)
        & s__instance(V__UNIT,s__UnitOfMeasure) )
     => ( ( s__instance(V__QUANT,s__MeasureFn(V__N,V__UNIT))
          & s__instance(V__UNIT,s__NonCompositeUnitOfMeasure) )
       => s__instance(V__QUANT,s__ConstantQuantity) ) ) ).

fof(kb_SUMO_3729,axiom,
    s__subclass(s__SystemeInternationalUnit,s__UnitOfMeasure) ).

fof(kb_SUMO_3730,axiom,
    s__documentation(s__SystemeInternationalUnit,s__EnglishLanguage,'The &%Class of Systeme International (SI) units.') ).

fof(kb_SUMO_3731,axiom,
    s__subclass(s__LengthMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_3732,axiom,
    s__instance(s__LengthMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3733,axiom,
    s__instance(s__ConstantQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_3734,axiom,
    s__documentation(s__LengthMeasure,s__EnglishLanguage,'A &%subclass of &%ConstantQuantity, instances of which are measures of length.') ).

fof(kb_SUMO_3735,axiom,
    s__subclass(s__UnitOfLength,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3736,axiom,
    s__instance(s__UnitOfLength__t,s__SetOrClass) ).

fof(kb_SUMO_3737,axiom,
    s__documentation(s__UnitOfLength,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%LengthMeasure.') ).

fof(kb_SUMO_3738,axiom,
    s__subclass(s__MassMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_3739,axiom,
    s__instance(s__MassMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3740,axiom,
    s__documentation(s__MassMeasure,s__EnglishLanguage,'A &%subclass of &%ConstantQuantity, instances of which are measures of the amount of matter in an &%Object.') ).

fof(kb_SUMO_3741,axiom,
    s__subclass(s__UnitOfMass,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3742,axiom,
    s__documentation(s__UnitOfMass,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%MassMeasure, which denote the amount of matter in &%PhysicalObjects.') ).

fof(kb_SUMO_3743,axiom,
    s__subclass(s__AreaMeasure,s__FunctionQuantity) ).

fof(kb_SUMO_3744,axiom,
    s__instance(s__AreaMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3745,axiom,
    s__documentation(s__AreaMeasure,s__EnglishLanguage,'Measures of the amount of space in two dimensions.') ).

fof(kb_SUMO_3746,axiom,
    s__subclass(s__UnitOfArea,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3747,axiom,
    s__instance(s__UnitOfArea__t,s__SetOrClass) ).

fof(kb_SUMO_3748,axiom,
    s__documentation(s__UnitOfArea,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%AreaMeasure.') ).

fof(kb_SUMO_3749,axiom,
    s__subclass(s__VolumeMeasure,s__FunctionQuantity) ).

fof(kb_SUMO_3750,axiom,
    s__instance(s__VolumeMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3751,axiom,
    s__instance(s__FunctionQuantity__t,s__SetOrClass) ).

fof(kb_SUMO_3752,axiom,
    s__documentation(s__VolumeMeasure,s__EnglishLanguage,'Measures of the amount of space in three dimensions.') ).

fof(kb_SUMO_3753,axiom,
    s__subclass(s__UnitOfVolume,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3754,axiom,
    s__documentation(s__UnitOfVolume,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%VolumeMeasure.') ).

fof(kb_SUMO_3755,axiom,
    s__subclass(s__TemperatureMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_3756,axiom,
    s__instance(s__TemperatureMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3757,axiom,
    s__documentation(s__TemperatureMeasure,s__EnglishLanguage,'Measures of temperature. In scientific circles, the temperature of something is understood as the average velocity of the atoms or molecules that make up the thing.') ).

fof(kb_SUMO_3758,axiom,
    s__subclass(s__UnitOfTemperature,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3759,axiom,
    s__documentation(s__UnitOfTemperature,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%TemperatureMeasure.') ).

fof(kb_SUMO_3760,axiom,
    s__subclass(s__CurrencyMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_3761,axiom,
    s__instance(s__CurrencyMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3762,axiom,
    s__documentation(s__CurrencyMeasure,s__EnglishLanguage,'Instances of this &%subclass of &%ConstantQuantity are measures of &%monetaryValue stated in terms of some &%UnitOfCurrency such as &%UnitedStatesDollar, &%UnitedStatesCent, Lire, Yen, etc.') ).

fof(kb_SUMO_3763,axiom,
    s__subclass(s__UnitOfCurrency,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3764,axiom,
    s__documentation(s__UnitOfCurrency,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%CurrencyMeasure.') ).

fof(kb_SUMO_3765,axiom,
    s__subclass(s__AngleMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_3766,axiom,
    s__documentation(s__AngleMeasure,s__EnglishLanguage,'The value of an angle in a plane or in a solid.') ).

fof(kb_SUMO_3767,axiom,
    s__subclass(s__UnitOfAngularMeasure,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3768,axiom,
    s__instance(s__UnitOfAngularMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3769,axiom,
    s__documentation(s__UnitOfAngularMeasure,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%AngleMeasure.') ).

fof(kb_SUMO_3770,axiom,
    s__subclass(s__PlaneAngleMeasure,s__AngleMeasure) ).

fof(kb_SUMO_3771,axiom,
    s__instance(s__PlaneAngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3772,axiom,
    s__instance(s__AngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3773,axiom,
    s__documentation(s__PlaneAngleMeasure,s__EnglishLanguage,'The value of an angle in a plane.') ).

fof(kb_SUMO_3774,axiom,
    s__subclass(s__SolidAngleMeasure,s__AngleMeasure) ).

fof(kb_SUMO_3775,axiom,
    s__instance(s__SolidAngleMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3776,axiom,
    s__disjoint(s__SolidAngleMeasure,s__PlaneAngleMeasure) ).

fof(kb_SUMO_3777,axiom,
    s__documentation(s__SolidAngleMeasure,s__EnglishLanguage,'The value of an angle in a solid.') ).

fof(kb_SUMO_3778,axiom,
    s__subclass(s__UnitOfInformation,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3779,axiom,
    s__instance(s__UnitOfInformation__t,s__SetOrClass) ).

fof(kb_SUMO_3780,axiom,
    s__instance(s__NonCompositeUnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3781,axiom,
    s__documentation(s__UnitOfInformation,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%InformationMeasure.') ).

fof(kb_SUMO_3782,axiom,
    s__subclass(s__UnitOfDuration,s__NonCompositeUnitOfMeasure) ).

fof(kb_SUMO_3783,axiom,
    s__instance(s__UnitOfDuration__t,s__SetOrClass) ).

fof(kb_SUMO_3784,axiom,
    s__documentation(s__UnitOfDuration,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%TimeDuration. Note that &%TimeDuration is a &%subclass of &%TimeMeasure.') ).

fof(kb_SUMO_3785,axiom,
    s__instance(s__MeasureFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3786,axiom,
    s__instance(s__MeasureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3787,axiom,
    s__domain(s__MeasureFn__m,"1",s__RealNumber) ).

fof(kb_SUMO_3788,axiom,
    s__domain(s__MeasureFn__m,"2",s__UnitOfMeasure) ).

fof(kb_SUMO_3789,axiom,
    s__range(s__MeasureFn__m,s__PhysicalQuantity) ).

fof(kb_SUMO_3790,axiom,
    s__documentation(s__MeasureFn__m,s__EnglishLanguage,'This &%BinaryFunction maps a &%RealNumber and a &%UnitOfMeasure to that &%Number of units. It is used to express `measured instances of &%PhysicalQuantity. Example: the concept of three meters is represented as (&%MeasureFn 3 &%Meter).') ).

fof(kb_SUMO_3791,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfLength) )
       => s__instance(V__QUANT,s__LengthMeasure) ) ) ).

fof(kb_SUMO_3792,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfMass) )
       => s__instance(V__QUANT,s__MassMeasure) ) ) ).

fof(kb_SUMO_3793,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfArea) )
       => s__instance(V__QUANT,s__AreaMeasure) ) ) ).

fof(kb_SUMO_3794,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfVolume) )
       => s__instance(V__QUANT,s__VolumeMeasure) ) ) ).

fof(kb_SUMO_3795,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfTemperature) )
       => s__instance(V__QUANT,s__TemperatureMeasure) ) ) ).

fof(kb_SUMO_3796,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfCurrency) )
       => s__instance(V__QUANT,s__CurrencyMeasure) ) ) ).

fof(kb_SUMO_3797,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfAngularMeasure) )
       => s__instance(V__QUANT,s__AngleMeasure) ) ) ).

fof(kb_SUMO_3798,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfDuration) )
       => s__instance(V__QUANT,s__TimeDuration) ) ) ).

fof(kb_SUMO_3799,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfInformation) )
       => s__instance(V__QUANT,s__InformationMeasure) ) ) ).

fof(kb_SUMO_3800,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & V__NUMBER1 = V__NUMBER2 )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => s__MeasureFn(V__NUMBER1,V__UNIT) = s__MeasureFn(V__NUMBER2,V__UNIT) ) ) ) ).

fof(kb_SUMO_3801,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & greatereq(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => greatereq(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_3802,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & lesseq(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => lesseq(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_3803,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & less(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => less(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_3804,axiom,
    ! [V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__RealNumber)
        & s__instance(V__NUMBER2,s__RealNumber)
        & greater(V__NUMBER1,V__NUMBER2) )
     => ! [V__UNIT] :
          ( ( s__instance(V__NUMBER1,s__RealNumber)
            & s__instance(V__NUMBER2,s__RealNumber) )
         => ( s__instance(V__UNIT,s__UnitOfMeasure)
           => greater(s__MeasureFn(V__NUMBER1,V__UNIT),s__MeasureFn(V__NUMBER2,V__UNIT)) ) ) ) ).

fof(kb_SUMO_3805,axiom,
    s__subclass(s__UnitOfMeasureMultiplier,s__UnaryFunction) ).

fof(kb_SUMO_3806,axiom,
    s__subclass(s__UnitOfMeasureMultiplier,s__TotalValuedRelation) ).

fof(kb_SUMO_3807,axiom,
    s__documentation(s__UnitOfMeasureMultiplier,s__EnglishLanguage,'Each &%instance of this &%Class is a &%UnaryFunction that, when evaluated on its single argument, a &%UnitOfMeasure, produces another &%UnitOfMeasure that is a numeric multiple of the argument.') ).

fof(kb_SUMO_3808,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__KiloFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3809,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__GigaFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3810,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__NanoFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3811,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MegaFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3812,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MilliFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3813,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__MicroFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3814,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__TeraFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3815,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__CompositeUnitOfMeasure)
       => s__instance(s__PicoFn(V__UNIT),s__CompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3816,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__GigaFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3817,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MilliFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3818,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__KiloFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3819,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__PicoFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3820,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MegaFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3821,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__MicroFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3822,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__TeraFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3823,axiom,
    ! [V__UNIT] :
      ( s__instance(V__UNIT,s__UnitOfMeasure)
     => ( s__instance(V__UNIT,s__NonCompositeUnitOfMeasure)
       => s__instance(s__NanoFn(V__UNIT),s__NonCompositeUnitOfMeasure) ) ) ).

fof(kb_SUMO_3824,axiom,
    s__instance(s__KiloFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3825,axiom,
    s__domain(s__KiloFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3826,axiom,
    s__range(s__KiloFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3827,axiom,
    s__documentation(s__KiloFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000 units of the original &%UnitOfMeasure. For example, (&%KiloFn &%Gram) is 1,000 &%Grams.') ).

fof(kb_SUMO_3828,axiom,
    ! [V__KILOUNIT,V__UNIT] :
      ( s__instance(V__KILOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__KILOUNIT = s__KiloFn(V__UNIT) )
       => s__MeasureFn("1",V__KILOUNIT) = s__MeasureFn("1000",V__UNIT) ) ) ).

fof(kb_SUMO_3829,axiom,
    s__instance(s__MegaFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3830,axiom,
    s__domain(s__MegaFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3831,axiom,
    s__range(s__MegaFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3832,axiom,
    s__documentation(s__MegaFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000 units of the original &%UnitOfMeasure. For example, (&%MegaFn &%Hertz) is 1,000,000 &%Hertz.') ).

fof(kb_SUMO_3833,axiom,
    ! [V__UNIT,V__MEGAUNIT] :
      ( s__instance(V__MEGAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MEGAUNIT = s__MegaFn(V__UNIT) )
       => s__MeasureFn("1",V__MEGAUNIT) = s__MeasureFn("1000000",V__UNIT) ) ) ).

fof(kb_SUMO_3834,axiom,
    s__instance(s__GigaFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3835,axiom,
    s__domain(s__GigaFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3836,axiom,
    s__range(s__GigaFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3837,axiom,
    s__documentation(s__GigaFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000,000 units of the original &%UnitOfMeasure. For example, (&%GigaFn &%Hertz) is 1,000,000,000 &%Hertz.') ).

fof(kb_SUMO_3838,axiom,
    ! [V__GIGAUNIT,V__UNIT] :
      ( s__instance(V__GIGAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__GIGAUNIT = s__GigaFn(V__UNIT) )
       => s__MeasureFn("1",V__GIGAUNIT) = s__MeasureFn("1000000000",V__UNIT) ) ) ).

fof(kb_SUMO_3839,axiom,
    s__instance(s__TeraFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3840,axiom,
    s__domain(s__TeraFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3841,axiom,
    s__range(s__TeraFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3842,axiom,
    s__documentation(s__TeraFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to 1,000,000,000,000 units of the original &%UnitOfMeasure. For example, (&%TeraFn &%Hertz) is 1,000,000,000,000 &%Hertz.') ).

fof(kb_SUMO_3843,axiom,
    ! [V__UNIT,V__TERAUNIT] :
      ( s__instance(V__TERAUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__TERAUNIT = s__TeraFn(V__UNIT) )
       => s__MeasureFn("1",V__TERAUNIT) = s__MeasureFn("1000000000000",V__UNIT) ) ) ).

fof(kb_SUMO_3844,axiom,
    s__instance(s__MilliFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3845,axiom,
    s__instance(s__UnitOfMeasureMultiplier__t,s__SetOrClass) ).

fof(kb_SUMO_3846,axiom,
    s__domain(s__MilliFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3847,axiom,
    s__range(s__MilliFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3848,axiom,
    s__documentation(s__MilliFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .001 units of the original &%UnitOfMeasure. For example, (&%MilliFn &%Gram) is .001 &%Grams.') ).

fof(kb_SUMO_3849,axiom,
    ! [V__MILLIUNIT,V__UNIT] :
      ( s__instance(V__MILLIUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MILLIUNIT = s__MilliFn(V__UNIT) )
       => s__MeasureFn("1",V__MILLIUNIT) = s__MeasureFn("0.001",V__UNIT) ) ) ).

fof(kb_SUMO_3850,axiom,
    s__instance(s__MicroFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3851,axiom,
    s__domain(s__MicroFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3852,axiom,
    s__range(s__MicroFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3853,axiom,
    s__documentation(s__MicroFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000001 units of the original &%UnitOfMeasure. For example, (&%MicroFn &%Meter) is .000001 &%Meters.') ).

fof(kb_SUMO_3854,axiom,
    ! [V__UNIT,V__MICROUNIT] :
      ( s__instance(V__MICROUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__MICROUNIT = s__MicroFn(V__UNIT) )
       => s__MeasureFn("1",V__MICROUNIT) = s__MeasureFn("0.000001",V__UNIT) ) ) ).

fof(kb_SUMO_3855,axiom,
    s__instance(s__NanoFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3856,axiom,
    s__domain(s__NanoFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3857,axiom,
    s__range(s__NanoFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3858,axiom,
    s__documentation(s__NanoFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000000001 units of the original &%UnitOfMeasure. For example, (&%MicroFn &%SecondDuration) is .000000001 &%SecondDurations.') ).

fof(kb_SUMO_3859,axiom,
    ! [V__NANOUNIT,V__UNIT] :
      ( s__instance(V__NANOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__NANOUNIT = s__NanoFn(V__UNIT) )
       => s__MeasureFn("1",V__NANOUNIT) = s__MeasureFn("0.000000001",V__UNIT) ) ) ).

fof(kb_SUMO_3860,axiom,
    s__instance(s__PicoFn__m,s__UnitOfMeasureMultiplier) ).

fof(kb_SUMO_3861,axiom,
    s__domain(s__PicoFn__m,"1",s__UnitOfMeasure) ).

fof(kb_SUMO_3862,axiom,
    s__range(s__PicoFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3863,axiom,
    s__documentation(s__PicoFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%UnitOfMeasure into a &%UnitOfMeasure that is equal to .000000000001 units of the original &%UnitOfMeasure. For example, (&%PicoFn &%SecondDuration) is .000000000001 &%SecondDurations.') ).

fof(kb_SUMO_3864,axiom,
    ! [V__PICOUNIT,V__UNIT] :
      ( s__instance(V__PICOUNIT,s__UnitOfMeasure)
     => ( ( s__instance(V__UNIT,s__UnitOfMeasure)
          & V__PICOUNIT = s__PicoFn(V__UNIT) )
       => s__MeasureFn("1",V__PICOUNIT) = s__MeasureFn("0.000000000001",V__UNIT) ) ) ).

fof(kb_SUMO_3865,axiom,
    s__instance(s__IntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3866,axiom,
    s__domain(s__IntervalFn__m,"1",s__ConstantQuantity) ).

fof(kb_SUMO_3867,axiom,
    s__domain(s__IntervalFn__m,"2",s__ConstantQuantity) ).

fof(kb_SUMO_3868,axiom,
    s__rangeSubclass(s__IntervalFn__m,s__ConstantQuantity) ).

fof(kb_SUMO_3869,axiom,
    s__relatedInternalConcept(s__IntervalFn__m,s__RecurrentTimeIntervalFn__m) ).

fof(kb_SUMO_3870,axiom,
    s__documentation(s__IntervalFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps two instances of &%ConstantQuantity to the &%subclass of &%ConstantQuantity that comprises the interval from the first &%ConstantQuantity to the second &%ConstantQuantity. For example, (&%IntervalFn (&%MeasureFn 8 &%Meter) (&%MeasureFn 14 &%Meter)) would return the &%subclass of &%ConstantQuantity comprising quantities between 8 and 14 meters in length.') ).

fof(kb_SUMO_3871,axiom,
    ! [V__FROM,V__QUANTITY,V__CLASS,V__TO] :
      ( ( s__instance(V__TO,s__ConstantQuantity)
        & s__instance(V__CLASS,s__SetOrClass)
        & s__instance(V__FROM,s__ConstantQuantity) )
     => ( ( s__instance(V__QUANTITY,s__IntervalFn(V__FROM,V__TO))
          & s__instance(V__FROM,V__CLASS)
          & s__instance(V__TO,V__CLASS) )
       => s__instance(V__QUANTITY,V__CLASS) ) ) ).

fof(kb_SUMO_3872,axiom,
    ! [V__FROM,V__QUANTITY,V__TO] :
      ( ( s__instance(V__TO,s__ConstantQuantity)
        & s__instance(V__QUANTITY,s__Quantity)
        & s__instance(V__FROM,s__ConstantQuantity) )
     => ( s__instance(V__QUANTITY,s__IntervalFn(V__FROM,V__TO))
      <=> ( greatereq(V__QUANTITY,V__FROM)
          & lesseq(V__QUANTITY,V__TO) ) ) ) ).

fof(kb_SUMO_3873,axiom,
    s__instance(s__MagnitudeFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3874,axiom,
    s__domain(s__MagnitudeFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_3875,axiom,
    s__range(s__MagnitudeFn__m,s__RealNumber) ).

fof(kb_SUMO_3876,axiom,
    s__documentation(s__MagnitudeFn__m,s__EnglishLanguage,'The magnitude of a &%PhysicalQuantity is the numeric value for the quantity. In other words, &%MagnitudeFn converts a &%PhysicalQuantity with an associated &%UnitOfMeasure into an ordinary &%RealNumber. For example, the magnitude of the &%ConstantQuantity 2 &%Kilometers is the &%RealNumber 2. Note that the magnitude of a quantity in a given unit times that unit is equal to the original quantity.') ).

fof(kb_SUMO_3877,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__QUANT,s__PhysicalQuantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( V__NUMBER = times("1",V__NUMBER)
          & s__instance(V__UNIT,s__UnitOfMeasure)
          & V__QUANT = s__MeasureFn(V__NUMBER,V__UNIT) )
       => s__MagnitudeFn(V__QUANT) = V__NUMBER ) ) ).

fof(kb_SUMO_3878,axiom,
    s__instance(s__UnitFn__m,s__UnaryFunction) ).

fof(kb_SUMO_3879,axiom,
    s__domain(s__UnitFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_3880,axiom,
    s__range(s__UnitFn__m,s__UnitOfMeasure) ).

fof(kb_SUMO_3881,axiom,
    s__documentation(s__UnitFn__m,s__EnglishLanguage,'&%UnitFn returns just the &%UnitOfMeasure of a &%PhysicalQuantity with an associated &%UnitOfMeasure and &%RealNumber magnitude. For example, the unit of the &%ConstantQuantity (&%MeasureFn 2 &%Kilometer) is the &%UnitOfMeasure &%Kilometer.') ).

fof(kb_SUMO_3882,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__QUANT,s__PhysicalQuantity)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( V__NUMBER = times("1",V__NUMBER)
          & s__instance(V__UNIT,s__UnitOfMeasure)
          & V__QUANT = s__MeasureFn(V__NUMBER,V__UNIT) )
       => s__UnitFn(V__QUANT) = V__UNIT ) ) ).

fof(kb_SUMO_3883,axiom,
    s__instance(s__PerFn__m,s__BinaryFunction) ).

fof(kb_SUMO_3884,axiom,
    s__instance(s__PerFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3885,axiom,
    s__domain(s__PerFn__m,"1",s__PhysicalQuantity) ).

fof(kb_SUMO_3886,axiom,
    s__domain(s__PerFn__m,"2",s__PhysicalQuantity) ).

fof(kb_SUMO_3887,axiom,
    s__range(s__PerFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_3888,axiom,
    s__documentation(s__PerFn__m,s__EnglishLanguage,'&%PerFn maps two instances of &%PhysicalQuantity to the &%FunctionQuantity composed of these two instances. For example, (&%PerFn (&%MeasureFn 2 (&%MicroFn &%Gram)) (&%MeasureFn 1 (&%KiloFn &%Gram))) denotes the &%FunctionQuantity of 2 micrograms per kiogram. This function is useful, because it allows the knowledge engineer to dynamically generate instances of &%FunctionQuantity.') ).

fof(kb_SUMO_3889,axiom,
    s__subrelation(s__DensityFn__m,s__PerFn__m) ).

fof(kb_SUMO_3890,axiom,
    s__instance(s__DensityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3891,axiom,
    s__domain(s__DensityFn__m,"1",s__MassMeasure) ).

fof(kb_SUMO_3892,axiom,
    s__domain(s__DensityFn__m,"2",s__VolumeMeasure) ).

fof(kb_SUMO_3893,axiom,
    s__range(s__DensityFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_3894,axiom,
    s__documentation(s__DensityFn__m,s__EnglishLanguage,'&%DensityFn maps an instance of &%MassMeasure and an instance of &%VolumeMeasure to the density represented by this proportion of mass and volume. For example, (&%DensityFn (&%MeasureFn 3 &%Gram) (&%MeasureFn 1 &%Liter)) represents the density of 3 grams per liter.') ).

fof(kb_SUMO_3895,axiom,
    s__subrelation(s__SpeedFn__m,s__PerFn__m) ).

fof(kb_SUMO_3896,axiom,
    s__instance(s__SpeedFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3897,axiom,
    s__domain(s__SpeedFn__m,"1",s__LengthMeasure) ).

fof(kb_SUMO_3898,axiom,
    s__domain(s__SpeedFn__m,"2",s__TimeDuration) ).

fof(kb_SUMO_3899,axiom,
    s__range(s__SpeedFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_3900,axiom,
    s__documentation(s__SpeedFn__m,s__EnglishLanguage,'Maps an instance of &%LengthMeasure and an instance of &%TimeDuration to the speed represented by this proportion of distance and time. For example, (&%SpeedFn (&%MeasureFn 55 &%Mile)(&%MeasureFn 1 &%HourDuration)) represents the velocity of 55 miles per hour.') ).

fof(kb_SUMO_3901,axiom,
    s__instance(s__VelocityFn__m,s__QuaternaryFunction) ).

fof(kb_SUMO_3902,axiom,
    s__instance(s__QuaternaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_3903,axiom,
    s__instance(s__VelocityFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_3904,axiom,
    s__domain(s__VelocityFn__m,"1",s__LengthMeasure) ).

fof(kb_SUMO_3905,axiom,
    s__domain(s__VelocityFn__m,"2",s__TimeDuration) ).

fof(kb_SUMO_3906,axiom,
    s__domain(s__VelocityFn__m,"3",s__Region) ).

fof(kb_SUMO_3907,axiom,
    s__domain(s__VelocityFn__m,"4",s__DirectionalAttribute) ).

fof(kb_SUMO_3908,axiom,
    s__range(s__VelocityFn__m,s__FunctionQuantity) ).

fof(kb_SUMO_3909,axiom,
    s__documentation(s__VelocityFn__m,s__EnglishLanguage,'Specifies the velocity of an object, i.e. the speed and the direction of the speed. For example (&%VelocityFn (&%MeasureFn 55 &%Mile) (&%MeasureFn 2 &%HourDuration) ?REFERENCE &%North) denotes the velocity of 55 miles per hour North of the given reference point ?REFERENCE.') ).

fof(kb_SUMO_3910,axiom,
    ! [V__OBJECT,V__REF,V__TIME,V__DIRECTION,V__DISTANCE] :
      ( ( s__instance(V__DISTANCE,s__LengthMeasure)
        & s__instance(V__DIRECTION,s__DirectionalAttribute)
        & s__instance(V__TIME,s__TimeDuration)
        & s__instance(V__REF,s__Region)
        & s__instance(V__OBJECT,s__Object) )
     => ( s__measure(V__OBJECT,s__VelocityFn(V__DISTANCE,V__TIME,V__REF,V__DIRECTION))
       => s__measure(V__OBJECT,s__SpeedFn(V__DISTANCE,V__TIME)) ) ) ).

fof(kb_SUMO_3911,axiom,
    s__instance(s__Meter,s__UnitOfLength) ).

fof(kb_SUMO_3912,axiom,
    s__instance(s__Meter,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3913,axiom,
    s__documentation(s__Meter,s__EnglishLanguage,'SI &%UnitOfLength. Symbol: m. It is one of the base units in SI, and it is currently defined as follows: the &%Meter is the length of the path traveled by light in a vacuum during a time interval of 1/299792458 of a &%SecondDuration.') ).

fof(kb_SUMO_3914,axiom,
    s__instance(s__Gram,s__UnitOfMass) ).

fof(kb_SUMO_3915,axiom,
    s__instance(s__Gram,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3916,axiom,
    s__documentation(s__Gram,s__EnglishLanguage,'Submultiple of kilogram. Symbol: g. 1 kilogram = 1000 &%Grams.') ).

fof(kb_SUMO_3917,axiom,
    s__instance(s__SecondDuration,s__UnitOfDuration) ).

fof(kb_SUMO_3918,axiom,
    s__instance(s__SecondDuration,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3919,axiom,
    s__documentation(s__SecondDuration,s__EnglishLanguage,'SI &%UnitOfDuration. Symbol: s. It is one of the base units in SI, and it is currently defined as follows: the &%SecondDuration is the duration of 9192631770 periods of the radiation corresponding to the transition between the two hyperfine levels of the ground state of the cesium 133 atom.') ).

fof(kb_SUMO_3920,axiom,
    s__instance(s__Ampere,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3921,axiom,
    s__instance(s__Ampere,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3922,axiom,
    s__documentation(s__Ampere,s__EnglishLanguage,'SI electric current measure. Symbol: A. It is one of the base units in SI. It is defined as follows: the &%Ampere is that constant current which, if maintained in two straight parallel conductors of infinite length, of negligible circular cross-section, and placed 1 &%Meter apart in a vacuum, would produce between these conductors a force equal to 2*10^(-7) &%Newton per &%Meter of length.') ).

fof(kb_SUMO_3923,axiom,
    s__instance(s__KelvinDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_3924,axiom,
    s__instance(s__KelvinDegree,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3925,axiom,
    s__instance(s__SystemeInternationalUnit__t,s__SetOrClass) ).

fof(kb_SUMO_3926,axiom,
    s__documentation(s__KelvinDegree,s__EnglishLanguage,'SI &%UnitOfMeasure used with &%MeasureFn to produce terms denoting instances of &%TemperatureMeasure. Symbol: K. It is one of the base units in SI (it is also a unit in the ITS system). Kelvin differs from the Celsius scale in that the triple point of water is defined to be 273.16 &%KelvinDegrees while it is 0 &%CelsiusDegrees. The magnitudes of intervals in the two scales are the same. By definition the conversion constant is 273.15.') ).

fof(kb_SUMO_3927,axiom,
    s__instance(s__Mole,s__UnitOfMass) ).

fof(kb_SUMO_3928,axiom,
    s__instance(s__Mole,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3929,axiom,
    s__documentation(s__Mole,s__EnglishLanguage,'SI amount of substance unit. symbol: mol. It is one of the base units in SI. It is defined as follows: the &%Mole is the amount of substance of a system which contains as many elementary entities as there are atoms in 0.012 &%Kilograms of carbon 12. Note that, when this &%UnitOfMeasure is used, the elementary entities must be specified - they may be atoms, molecules, ions, electrons, etc. or groups of such particles.') ).

fof(kb_SUMO_3930,axiom,
    s__instance(s__Candela,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3931,axiom,
    s__instance(s__Candela,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3932,axiom,
    s__documentation(s__Candela,s__EnglishLanguage,'SI luminosity intensity measure. Symbol: cd. It is one of the base units in SI, and it is currently defined as follows: the &%Candela is the luminous intensity, in a given direction, of a source that emits monochromatic radiation of frequency 540*10^12 &%Hertz and that has a radiant intensity in that direction of 1/683 &%Watt per &%Steradian.') ).

fof(kb_SUMO_3933,axiom,
    s__instance(s__Liter,s__UnitOfVolume) ).

fof(kb_SUMO_3934,axiom,
    s__documentation(s__Liter,s__EnglishLanguage,'Unit of volume in the metric system. It is currently defined to be equal to one cubic decimeter (0.001 cubic meter). Symbol: l.') ).

fof(kb_SUMO_3935,axiom,
    s__instance(s__Centimeter,s__UnitOfLength) ).

fof(kb_SUMO_3936,axiom,
    s__documentation(s__Centimeter,s__EnglishLanguage,'Submultiple of &%Meter. Symbol: cm. It is the 100th part of a &%Meter') ).

fof(kb_SUMO_3937,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Centimeter) = s__MeasureFn(times(V__NUMBER,"0.01"),s__Meter) ) ) ).

fof(kb_SUMO_3938,axiom,
    s__documentation(s__Millimeter,s__EnglishLanguage,'Submultiple of Meter. Symbol: mm. A millimeter is the 1000th part of a meter') ).

fof(kb_SUMO_3939,axiom,
    s__instance(s__Millimeter,s__UnitOfLength) ).

fof(kb_SUMO_3940,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Millimeter) = s__MeasureFn(times(V__NUMBER,"0.001"),s__Meter) ) ) ).

fof(kb_SUMO_3941,axiom,
    s__instance(s__Kilometer,s__UnitOfLength) ).

fof(kb_SUMO_3942,axiom,
    s__documentation(s__Kilometer,s__EnglishLanguage,'Supermultiple of &%Meter. Symbol: km. A &%Meter is the 1000th part of a &%Kilometer') ).

fof(kb_SUMO_3943,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Kilometer) = s__MeasureFn(times(V__NUMBER,"1000"),s__Meter) ) ) ).

fof(kb_SUMO_3944,axiom,
    s__instance(s__Radian,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_3945,axiom,
    s__instance(s__Radian,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3946,axiom,
    s__documentation(s__Radian,s__EnglishLanguage,'SI plane angle measure. Symbol: rad. It is the angle of a circle subtended by an arc equal in length to the circles radius. Another definition is: the plane angle between two radii of a circle which cut off on the circumference an arc equal in length to the radius. &%Radian = m/m = 1.') ).

fof(kb_SUMO_3947,axiom,
    s__instance(s__Steradian,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_3948,axiom,
    s__instance(s__Steradian,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3949,axiom,
    s__documentation(s__Steradian,s__EnglishLanguage,'SI solid angle measure. Symbol: sr. It is the solid angle of a sphere subtended by a portion of the surface whose area is equal to the square of the spheres radius. Another definition is: the solid angle which, having its vertex in the center of the sphere, cuts off an area of the surface of the sphere equal to that of a square with sides of length equal to the radius of the sphere. &%Steradian = m^2/m^2 = 1.') ).

fof(kb_SUMO_3950,axiom,
    s__subclass(s__FrequencyMeasure,s__TimeDependentQuantity) ).

fof(kb_SUMO_3951,axiom,
    s__instance(s__FrequencyMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_3952,axiom,
    s__documentation(s__FrequencyMeasure,s__EnglishLanguage,'A &%subclass of &%TimeDependentQuantity, instances of which are measures of the frequency with which some &%Process occurs.') ).

fof(kb_SUMO_3953,axiom,
    s__subclass(s__UnitOfFrequency,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3954,axiom,
    s__instance(s__UnitOfFrequency__t,s__SetOrClass) ).

fof(kb_SUMO_3955,axiom,
    s__documentation(s__UnitOfFrequency,s__EnglishLanguage,'Every instance of this &%Class is a &%UnitOfMeasure that can be used with &%MeasureFn to form instances of &%FrequencyMeasure.') ).

fof(kb_SUMO_3956,axiom,
    ! [V__NUMBER,V__QUANT,V__UNIT] :
      ( ( s__instance(V__UNIT,s__UnitOfMeasure)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__MeasureFn(V__NUMBER,V__UNIT) = V__QUANT
          & s__instance(V__UNIT,s__UnitOfFrequency) )
       => s__instance(V__QUANT,s__FrequencyMeasure) ) ) ).

fof(kb_SUMO_3957,axiom,
    s__instance(s__Hertz,s__UnitOfFrequency) ).

fof(kb_SUMO_3958,axiom,
    s__instance(s__Hertz,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3959,axiom,
    s__documentation(s__Hertz,s__EnglishLanguage,'SI frequency measure. Symbol: Hz. It is the number of cycles per second. &%Hertz = s^(-1). Note that &%Hertz does not have a conversion function.') ).

fof(kb_SUMO_3960,axiom,
    s__instance(s__Newton,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3961,axiom,
    s__instance(s__Newton,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3962,axiom,
    s__documentation(s__Newton,s__EnglishLanguage,'SI force measure. Symbol: N. It is that force which gives to a mass of 1 kilogram an acceleration of 1 &%Meter per &%SecondDuration. &%Newton = m*kg*s^(-2).') ).

fof(kb_SUMO_3963,axiom,
    s__instance(s__Pascal,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3964,axiom,
    s__instance(s__Pascal,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3965,axiom,
    s__documentation(s__Pascal,s__EnglishLanguage,'SI pressure measure. Symbol:Pa. It is the pressure of one &%Newton per square &%Meter. &%Pascal = N/m^2 = m^(-1)*kg*s^(-2).') ).

fof(kb_SUMO_3966,axiom,
    s__instance(s__Joule,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3967,axiom,
    s__instance(s__Joule,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3968,axiom,
    s__documentation(s__Joule,s__EnglishLanguage,'SI energy measure. Symbol: J. It is the work done when the point of application of 1 &%Newton is displaced a distance of 1 &%Meter in the direction of the force. &%Joule = N*m = m^2*kg*s^(-2).') ).

fof(kb_SUMO_3969,axiom,
    s__instance(s__Watt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3970,axiom,
    s__instance(s__Watt,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3971,axiom,
    s__documentation(s__Watt,s__EnglishLanguage,'SI power measure. Symbol: W. A &%UnitOfMeasure that measures power, i.e. energy produced or expended divided by &%TimeDuration. It is the power which gives rise to the production of energy (or work) at the rate of one &%Joule per &%SecondDuration. &%Watt = J/s = m^2*kg*s^(-3).') ).

fof(kb_SUMO_3972,axiom,
    s__instance(s__Horsepower,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3973,axiom,
    s__documentation(s__Horsepower,s__EnglishLanguage,'A power measure that is equal to 746 &%Watts.') ).

fof(kb_SUMO_3974,axiom,
    ! [V__N] :
      ( s__instance(V__N,s__RealNumber)
     => s__MeasureFn(V__N,s__Horsepower) = s__MeasureFn(times(V__N,"746"),s__Watt) ) ).

fof(kb_SUMO_3975,axiom,
    s__instance(s__Coulomb,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3976,axiom,
    s__instance(s__Coulomb,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3977,axiom,
    s__documentation(s__Coulomb,s__EnglishLanguage,'SI electric charge measure. Symbol: C. It is the quantity of electric charge transported through a cross section of a conductor in an electric circuit during each &%SecondDuration by a current of 1 &%Ampere. Coulomb = s*A.') ).

fof(kb_SUMO_3978,axiom,
    ! [V__NUMBER,V__QUANTITY] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__QUANTITY = s__MeasureFn(V__NUMBER,s__Coulomb)
       => s__instance(V__QUANTITY,s__TimeDependentQuantity) ) ) ).

fof(kb_SUMO_3979,axiom,
    s__instance(s__Volt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3980,axiom,
    s__instance(s__Volt,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3981,axiom,
    s__documentation(s__Volt,s__EnglishLanguage,'SI electric potential measure. Symbol: V. It is the difference of electric potential between two points of a conducting wire carrying a constant current of 1 &%Ampere, when the power dissipated between these points is equal to 1 &%Watt. &%Volt = W/A = m^2*kg*s^(-3)*A^(-1).') ).

fof(kb_SUMO_3982,axiom,
    s__instance(s__Farad,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3983,axiom,
    s__instance(s__Farad,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3984,axiom,
    s__documentation(s__Farad,s__EnglishLanguage,'SI capacitance measure. Symbol: F. It is the capacitance of a capacitator between the plates of which there appears a difference of potential of 1 &%Volt when it is charged by a quantity of electricity equal to 1 Coulomb. &%Farad = C/V = m^(-2)*kg(-1)*s^4*A^2.') ).

fof(kb_SUMO_3985,axiom,
    s__instance(s__Ohm,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3986,axiom,
    s__instance(s__Ohm,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3987,axiom,
    s__documentation(s__Ohm,s__EnglishLanguage,'SI electric resistance measure. It is the electric resistance between two points of a conductor when a constant difference of potential of 1 &%Volt, applied between these two points, produces in this conductor a current of 1 &%Ampere, this conductor not being the force of any electromotive force. &%Ohm = V/A = m^2*kg*s^(-3)*A^(-2).') ).

fof(kb_SUMO_3988,axiom,
    s__instance(s__Siemens,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3989,axiom,
    s__instance(s__Siemens,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3990,axiom,
    s__documentation(s__Siemens,s__EnglishLanguage,'SI electric conductance measure. Symbol: S. In the case of direct current, the conductance in &%Siemens is the reciprocal of the resistance in &%Ohms, in the case of alternating current, it is the reciprocal of the impedance in ohms. siemens = A/V = m^(-2)*kg(-1)*s^(3)*A^2.') ).

fof(kb_SUMO_3991,axiom,
    s__instance(s__Weber,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3992,axiom,
    s__instance(s__Weber,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3993,axiom,
    s__documentation(s__Weber,s__EnglishLanguage,'SI magnetic flux measure. Symbol: Wb. It is the magnetic flux which, linking a circuit of one turn, produces in it an electromotive force of 1 &%Volt as it is reduced to zero at a uniform rate in 1 &%SecondDuration. &%Weber = V*s = m^2*kg*s^(-2)*A^(-1).') ).

fof(kb_SUMO_3994,axiom,
    s__instance(s__Tesla,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3995,axiom,
    s__instance(s__Tesla,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3996,axiom,
    s__documentation(s__Tesla,s__EnglishLanguage,'SI magnetic flux density measure. Symbol: T. One &%Tesla equals one &%Weber per square &%Meter. &%Tesla = Wb/m^2 = kg*s^(-2)*A^(-1).') ).

fof(kb_SUMO_3997,axiom,
    s__instance(s__Henry,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_3998,axiom,
    s__instance(s__Henry,s__SystemeInternationalUnit) ).

fof(kb_SUMO_3999,axiom,
    s__documentation(s__Henry,s__EnglishLanguage,'SI inductance measure. Symbol: H. One &%Henry is equivalent to one &%Volt divided by one &%Ampere per &%SecondDuration. If a current changing at the rate of one &%Ampere per &%SecondDuration induces an electromotive force of one &%Volt, the circuit has an inductance of one &%Henry. &%Henry = Wb/A = m^2*kg*s^(-2)*A^(-2).') ).

fof(kb_SUMO_4000,axiom,
    s__subclass(s__CelsiusDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_4001,axiom,
    s__instance(s__CelsiusDegree__t,s__SetOrClass) ).

fof(kb_SUMO_4002,axiom,
    s__instance(s__UnitOfTemperature__t,s__SetOrClass) ).

fof(kb_SUMO_4003,axiom,
    s__instance(s__CelsiusDegree,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4004,axiom,
    s__documentation(s__CelsiusDegree,s__EnglishLanguage,'A &%TemperatureMeasure. The freezing point and the boiling point of water are, respectively, 0 &%CelsiusDegrees and 100 &%CelsiusDegrees.') ).

fof(kb_SUMO_4005,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__CelsiusDegree) = s__MeasureFn(minus(V__NUMBER,"273.15"),s__KelvinDegree) ) ) ).

fof(kb_SUMO_4006,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__CelsiusDegree) = s__MeasureFn(divide(minus(V__NUMBER,"32"),"1.8"),s__FahrenheitDegree) ) ) ).

fof(kb_SUMO_4007,axiom,
    s__instance(s__Lumen,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4008,axiom,
    s__instance(s__Lumen,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4009,axiom,
    s__documentation(s__Lumen,s__EnglishLanguage,'SI luminous flux measure. Symbol: lm. It is the amount streaming outward through one solid angle of 1 &%Steradian from a uniform point source having an intensity of one &%Candela. &%Lumen = cd*sr = cd * 1.') ).

fof(kb_SUMO_4010,axiom,
    s__instance(s__Lux,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4011,axiom,
    s__instance(s__Lux,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4012,axiom,
    s__documentation(s__Lux,s__EnglishLanguage,'SI illuminance measure. Symbol: lx. It is the amount of illumination provided when one &%Lumen is evenly distributed over an area of 1 square &%Meter. This is also equivalent to the illumination that would exist on a surface all points of which are one &%Meter from a point source of one &%Candela. &%Lux = lm/m^2 = m^(-2)*cd.') ).

fof(kb_SUMO_4013,axiom,
    s__instance(s__Becquerel,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4014,axiom,
    s__instance(s__Becquerel,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4015,axiom,
    s__documentation(s__Becquerel,s__EnglishLanguage,'SI activity measure. Symbol: Bq. It measures the amount of radioactivity contained in a given sample of matter. It is that quantity of a radioactive element in which there is one atomic disintegration per &%SecondDuration. &%Becquerel = s^(-1).') ).

fof(kb_SUMO_4016,axiom,
    ! [V__NUMBER,V__QUANTITY] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__QUANTITY = s__MeasureFn(V__NUMBER,s__Becquerel)
       => s__instance(V__QUANTITY,s__TimeDependentQuantity) ) ) ).

fof(kb_SUMO_4017,axiom,
    s__instance(s__Gray,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4018,axiom,
    s__instance(s__Gray,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4019,axiom,
    s__documentation(s__Gray,s__EnglishLanguage,'SI absorbed dose measure. Symbol: Gy. It measures the dose of radiation absorbed in living tissue. It is equal approximately to the absorbed dose delivered when the energy per unit mass imparted to matter by ionizing radiation is 1 &%Joule per kilogram. &%Gray = J/kg = m^2*s^(-2).') ).

fof(kb_SUMO_4020,axiom,
    s__instance(s__Sievert,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4021,axiom,
    s__instance(s__Sievert,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4022,axiom,
    s__documentation(s__Sievert,s__EnglishLanguage,'SI dose equivalent measure. Symbol: Sv. It is a unit of biologic dose of ionizing radiation. The &%Sievert makes it possible to normalize doses of different types of radiation. It takes into account the relative biologic effectiveness of ionizing radiation, since each form of such radiation--e.g., X rays, gamma rays, neutrons-- has a slightly different effect on living tissue for a given absorbed dose. The dose equivalent of a given type of radiation (in &%Sievert) is the dose of the radiation in &%Gray multiplied by a quality factor that is based on the relative biologic effectiveness of the radiation. Accordingly, one &%Sievert is generally defined as the amount of radiation roughly equivalent in biologic effectiveness to one &%Gray of gamma radiation. &%Sievert = J/kg = m^2*s^(-2)') ).

fof(kb_SUMO_4023,axiom,
    s__instance(s__DayDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4024,axiom,
    s__documentation(s__DayDuration,s__EnglishLanguage,'Time unit. 1 day = 24 hours.') ).

fof(kb_SUMO_4025,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__DayDuration) = s__MeasureFn(times(V__NUMBER,"24"),s__HourDuration) ) ) ).

fof(kb_SUMO_4026,axiom,
    s__instance(s__HourDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4027,axiom,
    s__documentation(s__HourDuration,s__EnglishLanguage,'Time unit. 1 hour = 60 minutes.') ).

fof(kb_SUMO_4028,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__HourDuration) = s__MeasureFn(times(V__NUMBER,"60"),s__MinuteDuration) ) ) ).

fof(kb_SUMO_4029,axiom,
    s__instance(s__MinuteDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4030,axiom,
    s__documentation(s__MinuteDuration,s__EnglishLanguage,'Time unit. 1 minute = 60 seconds. ') ).

fof(kb_SUMO_4031,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__MinuteDuration) = s__MeasureFn(times(V__NUMBER,"60"),s__SecondDuration) ) ) ).

fof(kb_SUMO_4032,axiom,
    s__instance(s__WeekDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4033,axiom,
    s__documentation(s__WeekDuration,s__EnglishLanguage,'Time unit. A weeks duration is seven days.') ).

fof(kb_SUMO_4034,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__WeekDuration) = s__MeasureFn(times(V__NUMBER,"7"),s__DayDuration) ) ) ).

fof(kb_SUMO_4035,axiom,
    s__instance(s__MonthDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4036,axiom,
    s__documentation(s__MonthDuration,s__EnglishLanguage,'Time unit. A months duration is at least 28 days, and no more than 31 days. Note that this unit is a range, rather than an exact amount, unlike most other units.') ).

fof(kb_SUMO_4037,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => greatereq(s__MeasureFn(V__NUMBER,s__MonthDuration),s__MeasureFn(times(V__NUMBER,"28"),s__DayDuration)) ) ) ).

fof(kb_SUMO_4038,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => lesseq(s__MeasureFn(V__NUMBER,s__MonthDuration),s__MeasureFn(times(V__NUMBER,"31"),s__DayDuration)) ) ) ).

fof(kb_SUMO_4039,axiom,
    s__instance(s__YearDuration,s__UnitOfDuration) ).

fof(kb_SUMO_4040,axiom,
    s__documentation(s__YearDuration,s__EnglishLanguage,'Time unit. one calendar year. 1 year = 365 days = 31536000 seconds.') ).

fof(kb_SUMO_4041,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__YearDuration) = s__MeasureFn(times(V__NUMBER,"365"),s__DayDuration) ) ) ).

fof(kb_SUMO_4042,axiom,
    s__instance(s__Amu,s__UnitOfMass) ).

fof(kb_SUMO_4043,axiom,
    s__documentation(s__Amu,s__EnglishLanguage,'Atomic mass unit. Symbol: u. It is the mass of the twelfth part of an atom of the Carbon 12 isotope.') ).

fof(kb_SUMO_4044,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Amu) = s__MeasureFn(times(V__NUMBER,"1.6605402E-24"),s__Gram) ) ) ).

fof(kb_SUMO_4045,axiom,
    s__instance(s__ElectronVolt,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4046,axiom,
    s__documentation(s__ElectronVolt,s__EnglishLanguage,'The &%ElectronVolt is an energy measure. Symbol: eV. It is the kinetic energy acquired by an electron in passing through a potential difference of 1 &%Volt in a vacuum.') ).

fof(kb_SUMO_4047,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__ElectronVolt) = s__MeasureFn(times(V__NUMBER,"1.60217733E-19"),s__Joule) ) ) ).

fof(kb_SUMO_4048,axiom,
    s__instance(s__Angstrom,s__UnitOfLength) ).

fof(kb_SUMO_4049,axiom,
    s__documentation(s__Angstrom,s__EnglishLanguage,'The &%Angstrom is a &%LengthMeasure. 1 &%Angstrom = 10^(-10) m') ).

fof(kb_SUMO_4050,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Angstrom) = s__MeasureFn(times(V__NUMBER,"1.0E-10"),s__Meter) ) ) ).

fof(kb_SUMO_4051,axiom,
    s__instance(s__FootLength,s__UnitOfLength) ).

fof(kb_SUMO_4052,axiom,
    s__documentation(s__FootLength,s__EnglishLanguage,'English length unit of feet.') ).

fof(kb_SUMO_4053,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__FootLength) = s__MeasureFn(times(V__NUMBER,"0.3048"),s__Meter) ) ) ).

fof(kb_SUMO_4054,axiom,
    s__instance(s__Inch,s__UnitOfLength) ).

fof(kb_SUMO_4055,axiom,
    s__documentation(s__Inch,s__EnglishLanguage,'English length unit of inches.') ).

fof(kb_SUMO_4056,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Inch) = s__MeasureFn(times(V__NUMBER,"0.0254"),s__Meter) ) ) ).

fof(kb_SUMO_4057,axiom,
    s__instance(s__Mile,s__UnitOfLength) ).

fof(kb_SUMO_4058,axiom,
    s__documentation(s__Mile,s__EnglishLanguage,'English length unit of miles.') ).

fof(kb_SUMO_4059,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Mile) = s__MeasureFn(times(V__NUMBER,"1609.344"),s__Meter) ) ) ).

fof(kb_SUMO_4060,axiom,
    s__instance(s__UnitedStatesGallon,s__UnitOfVolume) ).

fof(kb_SUMO_4061,axiom,
    s__relatedInternalConcept(s__UnitedStatesGallon,s__UnitedKingdomGallon) ).

fof(kb_SUMO_4062,axiom,
    s__documentation(s__UnitedStatesGallon,s__EnglishLanguage,'Unit of volume commonly used in the United States.') ).

fof(kb_SUMO_4063,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedStatesGallon) = s__MeasureFn(times(V__NUMBER,"3.785411784"),s__Liter) ) ) ).

fof(kb_SUMO_4064,axiom,
    s__instance(s__Quart,s__UnitOfVolume) ).

fof(kb_SUMO_4065,axiom,
    s__documentation(s__Quart,s__EnglishLanguage,'English unit of volume equal to 1/4 of a &%UnitedStatesGallon.') ).

fof(kb_SUMO_4066,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Quart) = s__MeasureFn(divide(V__NUMBER,"4"),s__UnitedStatesGallon) ) ) ).

fof(kb_SUMO_4067,axiom,
    s__instance(s__Pint,s__UnitOfVolume) ).

fof(kb_SUMO_4068,axiom,
    s__documentation(s__Pint,s__EnglishLanguage,'English unit of volume equal to 1/2 of a &%Quart.') ).

fof(kb_SUMO_4069,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Pint) = s__MeasureFn(divide(V__NUMBER,"2"),s__Quart) ) ) ).

fof(kb_SUMO_4070,axiom,
    s__instance(s__Cup,s__UnitOfVolume) ).

fof(kb_SUMO_4071,axiom,
    s__documentation(s__Cup,s__EnglishLanguage,'English unit of volume equal to 1/2 of a &%Pint.') ).

fof(kb_SUMO_4072,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Cup) = s__MeasureFn(divide(V__NUMBER,"2"),s__Pint) ) ) ).

fof(kb_SUMO_4073,axiom,
    s__instance(s__Ounce,s__UnitOfVolume) ).

fof(kb_SUMO_4074,axiom,
    s__documentation(s__Ounce,s__EnglishLanguage,'English unit of volume equal to 1/8 of a &%Cup.') ).

fof(kb_SUMO_4075,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Ounce) = s__MeasureFn(divide(V__NUMBER,"8"),s__Cup) ) ) ).

fof(kb_SUMO_4076,axiom,
    s__instance(s__UnitedKingdomGallon,s__UnitOfVolume) ).

fof(kb_SUMO_4077,axiom,
    s__instance(s__UnitOfVolume__t,s__SetOrClass) ).

fof(kb_SUMO_4078,axiom,
    s__documentation(s__UnitedKingdomGallon,s__EnglishLanguage,'Unit of volume commonly used in the United Kingdom.') ).

fof(kb_SUMO_4079,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedKingdomGallon) = s__MeasureFn(times(V__NUMBER,"4.54609"),s__Liter) ) ) ).

fof(kb_SUMO_4080,axiom,
    s__instance(s__AtomGram,s__UnitOfMass) ).

fof(kb_SUMO_4081,axiom,
    s__instance(s__UnitOfMass__t,s__SetOrClass) ).

fof(kb_SUMO_4082,axiom,
    s__documentation(s__AtomGram,s__EnglishLanguage,'&%MassMeasure that is also known as the gram-atom. Defined as the mass in grams of 1 &%Mole of pure substance. For example, 1 &%AtomGram of Carbon 12 will be 12 &%Grams of pure Carbon 12. 2 &%AtomGrams of the same substance will be 24 &%Grams of it. This is an unusual unit in that it is essentially 1 &%Mole of stuff measured in grams, so that the actual value (i.e. mass) depends on the type of substance.') ).

fof(kb_SUMO_4083,axiom,
    s__documentation(s__Kilogram,s__EnglishLanguage,'Supermultiple of &%Gramm. Symbol: kg. 1 &%Kilogram = 1000 Grams.') ).

fof(kb_SUMO_4084,axiom,
    s__instance(s__Kilogram,s__SystemeInternationalUnit) ).

fof(kb_SUMO_4085,axiom,
    s__instance(s__Kilogram,s__UnitOfMass) ).

fof(kb_SUMO_4086,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Kilogram) = s__MeasureFn(times(V__NUMBER,"1000"),s__Gram) ) ) ).

fof(kb_SUMO_4087,axiom,
    s__domain(s__weight__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4088,axiom,
    s__domain(s__weight__m,"2",s__MassMeasure) ).

fof(kb_SUMO_4089,axiom,
    s__instance(s__weight__m,s__BinaryPredicate) ).

fof(kb_SUMO_4090,axiom,
    s__subrelation(s__weight__m,s__measure__m) ).

fof(kb_SUMO_4091,axiom,
    s__documentation(s__weight__m,s__EnglishLanguage,'(&%weight ?O ?MM) means that on planet earth the &%SelfConnectedObject ?O has the weight ?MM.') ).

fof(kb_SUMO_4092,axiom,
    s__instance(s__PoundMass,s__UnitOfMass) ).

fof(kb_SUMO_4093,axiom,
    s__documentation(s__PoundMass,s__EnglishLanguage,'English mass unit of pounds.') ).

fof(kb_SUMO_4094,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__PoundMass) = s__MeasureFn(times(V__NUMBER,"453.59237"),s__Gram) ) ) ).

fof(kb_SUMO_4095,axiom,
    s__instance(s__Slug,s__UnitOfMass) ).

fof(kb_SUMO_4096,axiom,
    s__documentation(s__Slug,s__EnglishLanguage,'English mass unit of slugs.') ).

fof(kb_SUMO_4097,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Slug) = s__MeasureFn(times(V__NUMBER,"14593.90"),s__Gram) ) ) ).

fof(kb_SUMO_4098,axiom,
    s__instance(s__RankineDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_4099,axiom,
    s__documentation(s__RankineDegree,s__EnglishLanguage,'A &%TemperatureMeasure. Note that 0 &%RankineDegrees is the same as the absolute zero (i.e. 0 &%KelvinDegrees).') ).

fof(kb_SUMO_4100,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__RankineDegree) = s__MeasureFn(times(V__NUMBER,"1.8"),s__KelvinDegree) ) ) ).

fof(kb_SUMO_4101,axiom,
    s__instance(s__FahrenheitDegree,s__UnitOfTemperature) ).

fof(kb_SUMO_4102,axiom,
    s__documentation(s__FahrenheitDegree,s__EnglishLanguage,'A &%UnitOfTemperature that is commonly used in the United States. On the Fahrenheit scale, the freezing point of water is 32 &%FahrenheitDegrees, and the boiling point of water is 212 &%FahrenheitDegrees.') ).

fof(kb_SUMO_4103,axiom,
    s__instance(s__PoundForce,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4104,axiom,
    s__documentation(s__PoundForce,s__EnglishLanguage,'English pound of force. The conversion factor depends on the local value of the acceleration of free fall. A mean value is used in the conversion axiom associated with this constant.') ).

fof(kb_SUMO_4105,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__PoundForce) = s__MeasureFn(times(V__NUMBER,"4.448222"),s__Newton) ) ) ).

fof(kb_SUMO_4106,axiom,
    s__instance(s__Calorie,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4107,axiom,
    s__instance(s__CompositeUnitOfMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4108,axiom,
    s__documentation(s__Calorie,s__EnglishLanguage,'A &%Calorie is an energy measure.') ).

fof(kb_SUMO_4109,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Calorie) = s__MeasureFn(times(V__NUMBER,"4.1868"),s__Joule) ) ) ).

fof(kb_SUMO_4110,axiom,
    s__instance(s__BritishThermalUnit,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4111,axiom,
    s__documentation(s__BritishThermalUnit,s__EnglishLanguage,'An energy measure.') ).

fof(kb_SUMO_4112,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__BritishThermalUnit) = s__MeasureFn(times(V__NUMBER,"1055.05585262"),s__Joule) ) ) ).

fof(kb_SUMO_4113,axiom,
    s__instance(s__AngularDegree,s__UnitOfAngularMeasure) ).

fof(kb_SUMO_4114,axiom,
    s__documentation(s__AngularDegree,s__EnglishLanguage,'A plane angle measure.') ).

fof(kb_SUMO_4115,axiom,
    ! [V__QUANT,V__N] :
      ( s__instance(V__N,s__RealNumber)
     => ( V__QUANT = s__MeasureFn(V__N,s__AngularDegree)
       => s__instance(V__QUANT,s__PlaneAngleMeasure) ) ) ).

fof(kb_SUMO_4116,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__AngularDegree) = s__MeasureFn(times(V__NUMBER,divide(s__Pi,"180")),s__Radian) ) ) ).

fof(kb_SUMO_4117,axiom,
    ! [V__NUMBER,V__ANGLE] :
      ( ( s__instance(V__ANGLE,s__Object)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( s__measure(V__ANGLE,s__MeasureFn(V__NUMBER,s__AngularDegree))
       => ( greatereq(V__NUMBER,"0")
          & lesseq(V__NUMBER,"360") ) ) ) ).

fof(kb_SUMO_4118,axiom,
    s__MeasureFn("0",s__AngularDegree) = s__MeasureFn("360",s__AngularDegree) ).

fof(kb_SUMO_4119,axiom,
    s__instance(s__UnitedStatesDollar,s__UnitOfCurrency) ).

fof(kb_SUMO_4120,axiom,
    s__documentation(s__UnitedStatesDollar,s__EnglishLanguage,'A currency measure.') ).

fof(kb_SUMO_4121,axiom,
    s__instance(s__UnitedStatesCent,s__UnitOfCurrency) ).

fof(kb_SUMO_4122,axiom,
    s__documentation(s__UnitedStatesCent,s__EnglishLanguage,'A currency measure. 1 &%UnitedStatesCent is equal to .01 &%UnitedStatesDollars.') ).

fof(kb_SUMO_4123,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__UnitedStatesCent) = s__MeasureFn(times(V__NUMBER,"0.01"),s__UnitedStatesDollar) ) ) ).

fof(kb_SUMO_4124,axiom,
    s__instance(s__EuroDollar,s__UnitOfCurrency) ).

fof(kb_SUMO_4125,axiom,
    s__instance(s__UnitOfCurrency__t,s__SetOrClass) ).

fof(kb_SUMO_4126,axiom,
    s__documentation(s__EuroDollar,s__EnglishLanguage,'A currency measure of most European Union countries.') ).

fof(kb_SUMO_4127,axiom,
    s__instance(s__EuroCent,s__UnitOfCurrency) ).

fof(kb_SUMO_4128,axiom,
    s__documentation(s__EuroCent,s__EnglishLanguage,'A currency measure. 1 &%EuroCent is equal to .01 &%EuroDollars.') ).

fof(kb_SUMO_4129,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__EuroCent) = s__MeasureFn(times(V__NUMBER,"0.01"),s__EuroDollar) ) ) ).

fof(kb_SUMO_4130,axiom,
    s__subclass(s__InformationMeasure,s__ConstantQuantity) ).

fof(kb_SUMO_4131,axiom,
    s__instance(s__InformationMeasure__t,s__SetOrClass) ).

fof(kb_SUMO_4132,axiom,
    s__documentation(s__InformationMeasure,s__EnglishLanguage,'Measures of the amount of information. Includes &%Bit, &%Byte, and multiples of these, e.g. &%KiloByte and &%MegaByte.') ).

fof(kb_SUMO_4133,axiom,
    s__instance(s__Bit,s__UnitOfInformation) ).

fof(kb_SUMO_4134,axiom,
    s__documentation(s__Bit,s__EnglishLanguage,'One &%Bit of information. A one or a zero.') ).

fof(kb_SUMO_4135,axiom,
    s__instance(s__Byte,s__UnitOfInformation) ).

fof(kb_SUMO_4136,axiom,
    s__documentation(s__Byte,s__EnglishLanguage,'One &%Byte of information. A &%Byte is eight &%Bits.') ).

fof(kb_SUMO_4137,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__Byte) = s__MeasureFn(times(V__NUMBER,"8"),s__Bit) ) ) ).

fof(kb_SUMO_4138,axiom,
    s__instance(s__KiloByte,s__UnitOfInformation) ).

fof(kb_SUMO_4139,axiom,
    s__documentation(s__KiloByte,s__EnglishLanguage,'One &%KiloByte (KB) of information. One &%KiloByte is 1024 &%Bytes. Note that this sense of kilo is different from the one accepted in the SI system.') ).

fof(kb_SUMO_4140,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__KiloByte) = s__MeasureFn(times(V__NUMBER,"1024"),s__Byte) ) ) ).

fof(kb_SUMO_4141,axiom,
    s__instance(s__MegaByte,s__UnitOfInformation) ).

fof(kb_SUMO_4142,axiom,
    s__documentation(s__MegaByte,s__EnglishLanguage,'One &%MegaByte (MB) of information. One &%MegaByte is 1024 &%KiloBytes. Note that this sense of mega is different from the one accepted in the SI system.') ).

fof(kb_SUMO_4143,axiom,
    ! [V__NUMBER] :
      ( s__instance(V__NUMBER,s__RealNumber)
     => ( V__NUMBER = times("1",V__NUMBER)
       => s__MeasureFn(V__NUMBER,s__MegaByte) = s__MeasureFn(times(V__NUMBER,"1024"),s__KiloByte) ) ) ).

fof(kb_SUMO_4144,axiom,
    s__instance(s__measure__m,s__BinaryPredicate) ).

fof(kb_SUMO_4145,axiom,
    s__instance(s__measure__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4146,axiom,
    s__domain(s__measure__m,"1",s__Object) ).

fof(kb_SUMO_4147,axiom,
    s__domain(s__measure__m,"2",s__PhysicalQuantity) ).

fof(kb_SUMO_4148,axiom,
    s__documentation(s__measure__m,s__EnglishLanguage,'A very general &%Predicate for asserting that a particular &%Object is measured by a particular &%PhysicalQuantity. In general, the second argument of this &%Predicate will be a term produced with the &%Function &%MeasureFn.') ).

fof(kb_SUMO_4149,axiom,
    s__instance(s__age__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4150,axiom,
    s__subrelation(s__age__m,s__measure__m) ).

fof(kb_SUMO_4151,axiom,
    s__domain(s__age__m,"2",s__TimeDuration) ).

fof(kb_SUMO_4152,axiom,
    s__documentation(s__age__m,s__EnglishLanguage,'Simply relates an &%Object to a &%ConstantQuantity specifying the age of the &%Object.') ).

%FOL fof(kb_SUMO_4153,axiom,(( (! [V__OBJ,V__TIME,V__DURATION] : ((s__instance(V__DURATION,s__TimeDuration) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__TIME,s__TimePoint) & s__holdsDuring(V__TIME,'s__age(V__OBJ,V__DURATION)')) => s__duration(s__TimeIntervalFn(s__BeginFn(s__WhenFn(V__OBJ)),V__TIME),V__DURATION)))) ))).

fof(kb_SUMO_4154,axiom,
    s__subrelation(s__linearExtent__m,s__measure__m) ).

fof(kb_SUMO_4155,axiom,
    s__domain(s__linearExtent__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_4156,axiom,
    s__documentation(s__linearExtent__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object from one point to another point along its surface. Note that the difference between the predicates &%length and &%distance is that the &%length is used to state the &%LengthMeasure of one of the dimensions of a single object, while &%distance is used to state the &%LengthMeasure that separates two distinct objects.') ).

fof(kb_SUMO_4157,axiom,
    s__instance(s__width__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4158,axiom,
    s__subrelation(s__width__m,s__linearExtent__m) ).

fof(kb_SUMO_4159,axiom,
    s__documentation(s__width__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object from side to side at its widest span.') ).

fof(kb_SUMO_4160,axiom,
    s__subrelation(s__height__m,s__linearExtent__m) ).

fof(kb_SUMO_4161,axiom,
    s__domain(s__height__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4162,axiom,
    s__domain(s__height__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_4163,axiom,
    s__documentation(s__height__m,s__EnglishLanguage,'The height of an &%Object is the distance between its &%top and its &%bottom.') ).

fof(kb_SUMO_4164,axiom,
    s__instance(s__length__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4165,axiom,
    s__subrelation(s__length__m,s__linearExtent__m) ).

fof(kb_SUMO_4166,axiom,
    s__documentation(s__length__m,s__EnglishLanguage,'&%BinaryPredicate that is used to state the measure of an &%Object along its longest span.') ).

fof(kb_SUMO_4167,axiom,
    ! [V__O,V__M] :
      ( ( s__instance(V__M,s__LengthMeasure)
        & s__instance(V__O,s__Object) )
     => ( s__length(V__O,V__M)
       => ~ ? [V__M2] :
              ( s__instance(V__M2,s__LengthMeasure)
              & s__linearExtent(V__O,V__M2)
              & greater(V__M2,V__M) ) ) ) ).

fof(kb_SUMO_4168,axiom,
    s__subclass(s__Oval,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_4169,axiom,
    s__instance(s__Oval__t,s__SetOrClass) ).

fof(kb_SUMO_4170,axiom,
    s__documentation(s__Oval,s__EnglishLanguage,'The class of &%ClosedTwoDimensionalFigures that are produced by the intersection of a &%Cone with a &%ClosedTwoDimensionalFigure.') ).

fof(kb_SUMO_4171,axiom,
    s__subclass(s__Circle,s__Oval) ).

fof(kb_SUMO_4172,axiom,
    s__instance(s__Circle__t,s__SetOrClass) ).

fof(kb_SUMO_4173,axiom,
    s__documentation(s__Circle,s__EnglishLanguage,'The class of &%Ovals such that all &%GeometricPoints that make up the &%Circle are equidistant from a single &%GeometricPoint, known as the center of the &%Circle.') ).

fof(kb_SUMO_4174,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Circle)
     => ? [V__R] :
          ( s__instance(V__R,s__LengthMeasure)
          & s__radius(V__C,V__R) ) ) ).

fof(kb_SUMO_4175,axiom,
    ! [V__C] :
      ( s__instance(V__C,s__Circle)
     => ? [V__P] : s__CenterOfCircleFn(V__C) = V__P ) ).

fof(kb_SUMO_4176,axiom,
    s__documentation(s__CenterOfCircleFn__m,s__EnglishLanguage,'(CenterOfCircleFn ?CIRCLE) denotes the &%GeometricPoint that is the center of the &%Circle ?CIRCLE.') ).

fof(kb_SUMO_4177,axiom,
    s__instance(s__CenterOfCircleFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4178,axiom,
    s__instance(s__CenterOfCircleFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4179,axiom,
    s__domain(s__CenterOfCircleFn__m,"1",s__Circle) ).

fof(kb_SUMO_4180,axiom,
    s__range(s__CenterOfCircleFn__m,s__GeometricPoint) ).

fof(kb_SUMO_4181,axiom,
    s__instance(s__radius__m,s__BinaryPredicate) ).

fof(kb_SUMO_4182,axiom,
    s__instance(s__radius__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4183,axiom,
    s__instance(s__radius__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4184,axiom,
    s__domain(s__radius__m,"1",s__Circle) ).

fof(kb_SUMO_4185,axiom,
    s__domain(s__radius__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_4186,axiom,
    s__documentation(s__radius__m,s__EnglishLanguage,'(&%radius ?CIRCLE ?LENGTH) means that the radius of the &%Circle ?CIRCLE has a length of ?LENGTH.') ).

fof(kb_SUMO_4187,axiom,
    ! [V__CIRCLE,V__RADIUS] :
      ( s__radius(V__CIRCLE,V__RADIUS)
     => ? [V__POINT] :
          ( s__instance(V__POINT,s__GeometricPoint)
          & ! [V__PART] :
              ( ( s__instance(V__PART,s__GeometricPoint)
                & s__instance(V__RADIUS,s__LengthMeasure)
                & s__instance(V__CIRCLE,s__Circle) )
             => ( s__pointOfFigure(V__PART,V__CIRCLE)
               => s__geometricDistance(V__PART,V__POINT,V__RADIUS) ) ) ) ) ).

fof(kb_SUMO_4188,axiom,
    s__subrelation(s__diameter__m,s__width__m) ).

fof(kb_SUMO_4189,axiom,
    s__instance(s__diameter__m,s__BinaryPredicate) ).

fof(kb_SUMO_4190,axiom,
    s__instance(s__diameter__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4191,axiom,
    s__instance(s__diameter__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4192,axiom,
    s__domain(s__diameter__m,"1",s__Circle) ).

fof(kb_SUMO_4193,axiom,
    s__domain(s__diameter__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_4194,axiom,
    s__documentation(s__diameter__m,s__EnglishLanguage,'(&%diameter ?CIRCLE ?LENGTH) means that the diameter of the &%Circle ?CIRCLE has a length of ?LENGTH.') ).

fof(kb_SUMO_4195,axiom,
    ! [V__CIRCLE,V__LENGTH] :
      ( ( s__instance(V__LENGTH,s__LengthMeasure)
        & s__instance(V__CIRCLE,s__Circle) )
     => ( s__diameter(V__CIRCLE,V__LENGTH)
       => ? [V__HALF] :
            ( s__instance(V__HALF,s__LengthMeasure)
            & s__radius(V__CIRCLE,V__HALF)
            & times(V__HALF,"2") = V__LENGTH ) ) ) ).

fof(kb_SUMO_4196,axiom,
    s__instance(s__distance__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4197,axiom,
    s__instance(s__distance__m,s__SpatialRelation) ).

fof(kb_SUMO_4198,axiom,
    s__instance(s__distance__m,s__TernaryPredicate) ).

fof(kb_SUMO_4199,axiom,
    s__domain(s__distance__m,"1",s__Physical) ).

fof(kb_SUMO_4200,axiom,
    s__domain(s__distance__m,"2",s__Physical) ).

fof(kb_SUMO_4201,axiom,
    s__domain(s__distance__m,"3",s__LengthMeasure) ).

fof(kb_SUMO_4202,axiom,
    s__documentation(s__distance__m,s__EnglishLanguage,'(&%distance ?OBJ1 ?OBJ2 ?QUANT) means that the shortest distance between the two objects ?OBJ1 and ?OBJ2 is ?QUANT. Note that the difference between the predicates &%length and &%distance is that the &%length is used to state the &%LengthMeasure of one of the dimensions of a single object, while &%distance is used to state the &%LengthMeasure that separates two distinct objects.') ).

fof(kb_SUMO_4203,axiom,
    ! [V__QUANT,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__Physical)
        & s__instance(V__QUANT,s__LengthMeasure) )
     => ( s__distance(V__OBJ1,V__OBJ2,V__QUANT)
       => s__distance(V__OBJ2,V__OBJ1,V__QUANT) ) ) ).

fof(kb_SUMO_4204,axiom,
    s__subrelation(s__altitude__m,s__distance__m) ).

fof(kb_SUMO_4205,axiom,
    s__instance(s__altitude__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4206,axiom,
    s__documentation(s__altitude__m,s__EnglishLanguage,'A &%TernaryPredicate that is used to state the &%distance between the &%top of an &%Object and another point that is below the &%top of the &%Object (often this other point will be sea level). Note that this &%Predicate can be used to specify, for example, the height of geographic features, e.g. mountains, the altitude of aircraft, and the orbit of satellites around the Earth.') ).

fof(kb_SUMO_4207,axiom,
    ! [V__OBJ1,V__OBJ2,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__altitude(V__OBJ1,V__OBJ2,V__HEIGHT)
       => s__orientation(V__OBJ1,V__OBJ2,s__Above) ) ) ).

fof(kb_SUMO_4208,axiom,
    ! [V__OBJ1,V__OBJ2,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__altitude(V__OBJ1,V__OBJ2,V__HEIGHT)
       => ? [V__TOP] :
            ( s__instance(V__TOP,s__SelfConnectedObject)
            & s__top(V__TOP,V__OBJ1)
            & s__distance(V__TOP,V__OBJ2,V__HEIGHT) ) ) ) ).

fof(kb_SUMO_4209,axiom,
    s__subrelation(s__depth__m,s__distance__m) ).

fof(kb_SUMO_4210,axiom,
    s__instance(s__depth__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4211,axiom,
    s__instance(s__SingleValuedRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4212,axiom,
    s__documentation(s__depth__m,s__EnglishLanguage,'A &%TernaryPredicate that is used to state the &%distance between the &%top of an &%Object and another point that is above the &%top of the &%Object (often this other point will be sea level). Note that this &%Predicate can be used to specify, for example, the depth of marine life or submarines, for example.') ).

fof(kb_SUMO_4213,axiom,
    ! [V__DEPTH,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__DEPTH,s__LengthMeasure) )
     => ( s__depth(V__OBJ1,V__OBJ2,V__DEPTH)
       => s__orientation(V__OBJ1,V__OBJ2,s__Below) ) ) ).

fof(kb_SUMO_4214,axiom,
    ! [V__DEPTH,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Physical)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__DEPTH,s__LengthMeasure) )
     => ( s__depth(V__OBJ1,V__OBJ2,V__DEPTH)
       => ? [V__BOTTOM] :
            ( s__instance(V__BOTTOM,s__SelfConnectedObject)
            & s__bottom(V__BOTTOM,V__OBJ1)
            & s__distance(V__BOTTOM,V__OBJ2,V__DEPTH) ) ) ) ).

fof(kb_SUMO_4215,axiom,
    s__instance(s__larger__m,s__BinaryPredicate) ).

fof(kb_SUMO_4216,axiom,
    s__instance(s__larger__m,s__SpatialRelation) ).

fof(kb_SUMO_4217,axiom,
    s__instance(s__larger__m,s__TransitiveRelation) ).

fof(kb_SUMO_4218,axiom,
    s__instance(s__larger__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4219,axiom,
    s__domain(s__larger__m,"1",s__Object) ).

fof(kb_SUMO_4220,axiom,
    s__domain(s__larger__m,"2",s__Object) ).

fof(kb_SUMO_4221,axiom,
    s__documentation(s__larger__m,s__EnglishLanguage,'(&%larger ?OBJ1 ?OBJ2) means that ?OBJ1 is larger, with respect to all &%LengthMeasures, than ?OBJ2.') ).

fof(kb_SUMO_4222,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__larger(V__OBJ1,V__OBJ2)
    <=> ! [V__QUANT1,V__QUANT2,V__UNIT] :
          ( ( s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__QUANT2,s__RealNumber)
            & s__instance(V__QUANT1,s__RealNumber)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( ( s__measure(V__OBJ1,s__MeasureFn(V__QUANT1,V__UNIT))
              & s__measure(V__OBJ2,s__MeasureFn(V__QUANT2,V__UNIT))
              & s__instance(V__UNIT,s__UnitOfLength) )
           => greater(V__QUANT1,V__QUANT2) ) ) ) ).

fof(kb_SUMO_4223,axiom,
    s__instance(s__smaller__m,s__BinaryPredicate) ).

fof(kb_SUMO_4224,axiom,
    s__instance(s__smaller__m,s__SpatialRelation) ).

fof(kb_SUMO_4225,axiom,
    s__instance(s__smaller__m,s__TransitiveRelation) ).

fof(kb_SUMO_4226,axiom,
    s__instance(s__smaller__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4227,axiom,
    s__domain(s__smaller__m,"1",s__Object) ).

fof(kb_SUMO_4228,axiom,
    s__domain(s__smaller__m,"2",s__Object) ).

fof(kb_SUMO_4229,axiom,
    s__inverse(s__smaller__m,s__larger__m) ).

fof(kb_SUMO_4230,axiom,
    s__documentation(s__smaller__m,s__EnglishLanguage,'(&%smaller ?OBJ1 ?OBJ2) means that ?OBJ1 is smaller, with respect to all &%LengthMeasures, than ?OBJ2.') ).

fof(kb_SUMO_4231,axiom,
    s__instance(s__monetaryValue__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4232,axiom,
    s__subrelation(s__monetaryValue__m,s__measure__m) ).

fof(kb_SUMO_4233,axiom,
    s__domain(s__monetaryValue__m,"1",s__Physical) ).

fof(kb_SUMO_4234,axiom,
    s__domain(s__monetaryValue__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_4235,axiom,
    s__documentation(s__monetaryValue__m,s__EnglishLanguage,'A &%BinaryPredicate that associates an &%Object or &%Process with its value expressed as an instance of &%CurrencyMeasure.') ).

fof(kb_SUMO_4236,axiom,
    s__instance(s__WealthFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4237,axiom,
    s__domain(s__WealthFn__m,"1",s__Agent) ).

fof(kb_SUMO_4238,axiom,
    s__range(s__WealthFn__m,s__CurrencyMeasure) ).

fof(kb_SUMO_4239,axiom,
    s__documentation(s__WealthFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Agent to a &%CurrencyMeasure specifying the value of the property owned by the &%Agent. Note that this &%Function is generally used in conjunction with the &%Function &%PropertyFn, e.g. (&%WealthFn (&%PropertyFn BillGates)) would return the monetary value of the sum of Bill Gates holdings.') ).

fof(kb_SUMO_4240,axiom,
    ! [V__AMOUNT,V__PERSON] :
      ( ( s__instance(V__PERSON,s__Agent)
        & s__instance(V__AMOUNT,s__CurrencyMeasure) )
     => ( s__WealthFn(V__PERSON) = V__AMOUNT
      <=> s__monetaryValue(s__PropertyFn(V__PERSON),V__AMOUNT) ) ) ).

fof(kb_SUMO_4241,axiom,
    s__instance(s__barometricPressure__m,s__BinaryPredicate) ).

fof(kb_SUMO_4242,axiom,
    s__instance(s__barometricPressure__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4243,axiom,
    s__subrelation(s__barometricPressure__m,s__measure__m) ).

fof(kb_SUMO_4244,axiom,
    s__domain(s__barometricPressure__m,"1",s__Object) ).

fof(kb_SUMO_4245,axiom,
    s__domain(s__barometricPressure__m,"2",s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_4246,axiom,
    s__documentation(s__barometricPressure__m,s__EnglishLanguage,'(&%barometricPressure ?AREA ?PRESSURE) means that the atmospheric pressure measured at ?AREA is ?PRESSURE. Barometric pressure is typically expressed in units of &%InchMercury or &%MmMercury. For example, standard sea level pressure is 29.92 inches (760 mm) of mercury: (&%barometricPressure &%SeaLevel (&%MeasureFn 29.92 &%InchMercury)).') ).

fof(kb_SUMO_4247,axiom,
    s__subclass(s__UnitOfAtmosphericPressure,s__CompositeUnitOfMeasure) ).

fof(kb_SUMO_4248,axiom,
    s__instance(s__UnitOfAtmosphericPressure__t,s__SetOrClass) ).

fof(kb_SUMO_4249,axiom,
    s__documentation(s__UnitOfAtmosphericPressure,s__EnglishLanguage,'&%UnitOfAtmosphericPressure includes those instances of &%UnitOfMeasure used to measure atmospheric pressure (&%barometricPressure), e.g., &%InchMercury.') ).

fof(kb_SUMO_4250,axiom,
    s__instance(s__InchMercury,s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_4251,axiom,
    s__documentation(s__InchMercury,s__EnglishLanguage,'&%InchMercury is a &%UnitOfMeasure for &%barometricPressure. It is used to express the number of inches of mercury supported in a mercurial barometer by the surrounding air pressure.') ).

fof(kb_SUMO_4252,axiom,
    s__instance(s__MmMercury,s__UnitOfAtmosphericPressure) ).

fof(kb_SUMO_4253,axiom,
    s__documentation(s__MmMercury,s__EnglishLanguage,'&%MmMercury is a &%UnitOfMeasure for &%barometricPressure. It is used to express the number of millimeters of mercury supported in a mercurial barometer by the surrounding air pressure.') ).

fof(kb_SUMO_4254,axiom,
    s__instance(s__PositiveInfinity,s__TimePoint) ).

fof(kb_SUMO_4255,axiom,
    s__instance(s__TimePoint__t,s__SetOrClass) ).

fof(kb_SUMO_4256,axiom,
    s__documentation(s__PositiveInfinity,s__EnglishLanguage,'The &%TimePoint that is after all other &%TimePoints.') ).

fof(kb_SUMO_4257,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__PositiveInfinity )
     => s__before(V__POINT,s__PositiveInfinity) ) ).

fof(kb_SUMO_4258,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__PositiveInfinity )
     => ? [V__OTHERPOINT] :
          ( s__instance(V__OTHERPOINT,s__TimePoint)
          & s__temporallyBetween(V__POINT,V__OTHERPOINT,s__PositiveInfinity) ) ) ).

fof(kb_SUMO_4259,axiom,
    s__instance(s__NegativeInfinity,s__TimePoint) ).

fof(kb_SUMO_4260,axiom,
    s__documentation(s__NegativeInfinity,s__EnglishLanguage,'The &%TimePoint that is before all other &%TimePoints.') ).

fof(kb_SUMO_4261,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__NegativeInfinity )
     => s__before(s__NegativeInfinity,V__POINT) ) ).

fof(kb_SUMO_4262,axiom,
    ! [V__POINT] :
      ( ( s__instance(V__POINT,s__TimePoint)
        & V__POINT != s__NegativeInfinity )
     => ? [V__OTHERPOINT] :
          ( s__instance(V__OTHERPOINT,s__TimePoint)
          & s__temporallyBetween(s__NegativeInfinity,V__OTHERPOINT,V__POINT) ) ) ).

fof(kb_SUMO_4263,axiom,
    s__instance(s__duration__m,s__BinaryPredicate) ).

fof(kb_SUMO_4264,axiom,
    s__instance(s__duration__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4265,axiom,
    s__instance(s__duration__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4266,axiom,
    s__domain(s__duration__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4267,axiom,
    s__domain(s__duration__m,"2",s__TimeDuration) ).

fof(kb_SUMO_4268,axiom,
    s__documentation(s__duration__m,s__EnglishLanguage,'(&%duration ?POS ?TIME) means that the duration of the &%TimePosition ?POS is ?TIME. Note that this &%Predicate can be used in conjunction with the &%Function &%WhenFn to specify the duration of any instance of &%Physical.') ).

fof(kb_SUMO_4269,axiom,
    s__instance(s__frequency__m,s__BinaryPredicate) ).

fof(kb_SUMO_4270,axiom,
    s__instance(s__frequency__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4271,axiom,
    s__domainSubclass(s__frequency__m,"1",s__Process) ).

fof(kb_SUMO_4272,axiom,
    s__domain(s__frequency__m,"2",s__TimeDuration) ).

fof(kb_SUMO_4273,axiom,
    s__documentation(s__frequency__m,s__EnglishLanguage,'(&%frequency ?PROC ?TIME) means that the &%Process type of ?PROC recurs after every interval of ?TIME.') ).

fof(kb_SUMO_4274,axiom,
    ! [V__PROC,V__TIME1] :
      ( s__frequency(V__PROC,V__TIME1)
     => ! [V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeDuration)
            & s__subclass(V__PROC,s__Process)
            & s__instance(V__PROC,s__SetOrClass) )
         => ( s__duration(V__TIME2,V__TIME1)
           => ? [V__POSITION] :
                ( s__temporalPart(V__POSITION,V__TIME2)
                & s__holdsDuring(V__POSITION,'(? [V__INST] : (s__instance(V__POSITION,s__TimePosition) & s__instance(V__INST,V__PROC)))') ) ) ) ) ).

fof(kb_SUMO_4275,axiom,
    s__instance(s__temporalPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_4276,axiom,
    s__instance(s__temporalPart__m,s__TemporalRelation) ).

fof(kb_SUMO_4277,axiom,
    s__instance(s__temporalPart__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_4278,axiom,
    s__instance(s__PartialOrderingRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4279,axiom,
    s__domain(s__temporalPart__m,"1",s__TimePosition) ).

fof(kb_SUMO_4280,axiom,
    s__domain(s__temporalPart__m,"2",s__TimePosition) ).

fof(kb_SUMO_4281,axiom,
    s__documentation(s__temporalPart__m,s__EnglishLanguage,'The temporal analogue of the spatial &%part predicate. (&%temporalPart ?POS1 ?POS2) means that &%TimePosition ?POS1 is part of &%TimePosition ?POS2. Note that since &%temporalPart is a &%ReflexiveRelation every &%TimePostion is a &%temporalPart of itself.') ).

fof(kb_SUMO_4282,axiom,
    ! [V__POINT] :
      ( s__instance(V__POINT,s__TimePosition)
     => ( s__instance(V__POINT,s__TimePoint)
       => ? [V__INTERVAL] :
            ( s__instance(V__INTERVAL,s__TimePosition)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4283,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => ? [V__POINT] :
            ( s__instance(V__POINT,s__TimePosition)
            & s__instance(V__POINT,s__TimePoint)
            & s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4284,axiom,
    ! [V__SITUATION,V__TIME2,V__TIME1] :
      ( ( s__instance(V__TIME1,s__TimePosition)
        & s__instance(V__TIME2,s__TimePosition)
        & s__instance(V__SITUATION,s__Formula) )
     => ( ( s__holdsDuring(V__TIME1,V__SITUATION)
          & s__temporalPart(V__TIME2,V__TIME1) )
       => s__holdsDuring(V__TIME2,V__SITUATION) ) ) ).

fof(kb_SUMO_4285,axiom,
    ! [V__THING,V__POS] :
      ( ( s__instance(V__POS,s__TimePosition)
        & s__instance(V__THING,s__Physical) )
     => ( s__temporalPart(V__POS,s__WhenFn(V__THING))
      <=> s__time(V__THING,V__POS) ) ) ).

fof(kb_SUMO_4286,axiom,
    s__instance(s__BeginFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4287,axiom,
    s__instance(s__BeginFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4288,axiom,
    s__instance(s__BeginFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4289,axiom,
    s__domain(s__BeginFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4290,axiom,
    s__range(s__BeginFn__m,s__TimePoint) ).

fof(kb_SUMO_4291,axiom,
    s__documentation(s__BeginFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimeInterval to the &%TimePoint at which the interval begins.') ).

fof(kb_SUMO_4292,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( s__origin(V__PROCESS,V__OBJ)
       => s__eventLocated(s__WhereFn(V__PROCESS,s__BeginFn(s__WhenFn(V__PROCESS))),s__WhereFn(V__OBJ,s__BeginFn(s__WhenFn(V__OBJ)))) ) ) ).

fof(kb_SUMO_4293,axiom,
    ! [V__POINT,V__INTERVAL] :
      ( s__BeginFn(V__INTERVAL) = V__POINT
     => ! [V__OTHERPOINT] :
          ( ( s__instance(V__OTHERPOINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__instance(V__POINT,s__TimePoint) )
         => ( ( s__temporalPart(V__OTHERPOINT,V__INTERVAL)
              & V__OTHERPOINT != V__POINT )
           => s__before(V__POINT,V__OTHERPOINT) ) ) ) ).

fof(kb_SUMO_4294,axiom,
    s__instance(s__EndFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4295,axiom,
    s__instance(s__EndFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4296,axiom,
    s__instance(s__EndFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4297,axiom,
    s__domain(s__EndFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4298,axiom,
    s__range(s__EndFn__m,s__TimePoint) ).

fof(kb_SUMO_4299,axiom,
    s__documentation(s__EndFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimeInterval to the &%TimePoint at which the interval ends.') ).

fof(kb_SUMO_4300,axiom,
    ! [V__POINT,V__INTERVAL] :
      ( s__EndFn(V__INTERVAL) = V__POINT
     => ! [V__OTHERPOINT] :
          ( ( s__instance(V__OTHERPOINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__instance(V__POINT,s__TimePoint) )
         => ( ( s__temporalPart(V__OTHERPOINT,V__INTERVAL)
              & V__OTHERPOINT != V__POINT )
           => s__before(V__OTHERPOINT,V__POINT) ) ) ) ).

%FOL fof(kb_SUMO_4301,axiom,(( (! [V__QUANT2,V__OBJ,V__QUANT1,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__QUANT1,s__PhysicalQuantity) & s__instance(V__OBJ,s__Object) & s__instance(V__QUANT2,s__PhysicalQuantity)) => ((s__resource(V__PROC,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'s__measure(V__OBJ,V__QUANT1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'s__measure(V__OBJ,V__QUANT2)')) => greater(V__QUANT1,V__QUANT2)))) ))).

fof(kb_SUMO_4302,axiom,
    s__subrelation(s__starts__m,s__temporalPart__m) ).

fof(kb_SUMO_4303,axiom,
    s__instance(s__starts__m,s__TemporalRelation) ).

fof(kb_SUMO_4304,axiom,
    s__instance(s__starts__m,s__TransitiveRelation) ).

fof(kb_SUMO_4305,axiom,
    s__instance(s__starts__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4306,axiom,
    s__domain(s__starts__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4307,axiom,
    s__domain(s__starts__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4308,axiom,
    s__documentation(s__starts__m,s__EnglishLanguage,'(&%starts ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 and ?INTERVAL2 are both &%TimeIntervals that have the same initial &%TimePoint and that ?INTERVAL1 ends before ?INTERVAL2.') ).

fof(kb_SUMO_4309,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__starts(V__INTERVAL1,V__INTERVAL2)
      <=> ( s__BeginFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2)
          & s__before(s__EndFn(V__INTERVAL1),s__EndFn(V__INTERVAL2)) ) ) ) ).

fof(kb_SUMO_4310,axiom,
    s__subrelation(s__finishes__m,s__temporalPart__m) ).

fof(kb_SUMO_4311,axiom,
    s__instance(s__finishes__m,s__TemporalRelation) ).

fof(kb_SUMO_4312,axiom,
    s__instance(s__finishes__m,s__TransitiveRelation) ).

fof(kb_SUMO_4313,axiom,
    s__instance(s__finishes__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4314,axiom,
    s__domain(s__finishes__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4315,axiom,
    s__domain(s__finishes__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4316,axiom,
    s__documentation(s__finishes__m,s__EnglishLanguage,'(&%finishes ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 and ?INTERVAL2 are both &%TimeIntervals that have the same ending &%TimePoint and that ?INTERVAL2 begins before ?INTERVAL1.') ).

fof(kb_SUMO_4317,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__finishes(V__INTERVAL1,V__INTERVAL2)
      <=> ( s__before(s__BeginFn(V__INTERVAL2),s__BeginFn(V__INTERVAL1))
          & s__EndFn(V__INTERVAL2) = s__EndFn(V__INTERVAL1) ) ) ) ).

fof(kb_SUMO_4318,axiom,
    s__instance(s__before__m,s__TemporalRelation) ).

fof(kb_SUMO_4319,axiom,
    s__instance(s__before__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4320,axiom,
    s__instance(s__before__m,s__TransitiveRelation) ).

fof(kb_SUMO_4321,axiom,
    s__subrelation(s__before__m,s__beforeOrEqual__m) ).

fof(kb_SUMO_4322,axiom,
    s__relatedInternalConcept(s__before__m,s__earlier__m) ).

fof(kb_SUMO_4323,axiom,
    s__domain(s__before__m,"1",s__TimePoint) ).

fof(kb_SUMO_4324,axiom,
    s__domain(s__before__m,"2",s__TimePoint) ).

fof(kb_SUMO_4325,axiom,
    s__documentation(s__before__m,s__EnglishLanguage,'(&%before ?POINT1 ?POINT2) means that ?POINT1 precedes ?POINT2 on the universal timeline.') ).

fof(kb_SUMO_4326,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ? [V__TIME1,V__TIME2] :
          ( s__instance(V__TIME1,s__TimePoint)
          & s__instance(V__TIME2,s__TimePoint)
          & s__before(V__TIME1,V__TIME2)
          & ! [V__TIME] :
              ( ( s__instance(V__TIME,s__TimePoint)
                & s__instance(V__OBJ,s__Physical) )
             => ( ( s__beforeOrEqual(V__TIME1,V__TIME)
                  & s__beforeOrEqual(V__TIME,V__TIME2) )
               => s__time(V__OBJ,V__TIME) ) ) ) ) ).

fof(kb_SUMO_4327,axiom,
    ! [V__OBJ,V__PROC] :
      ( s__result(V__PROC,V__OBJ)
     => ! [V__TIME] :
          ( ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__PROC,s__Process)
            & s__instance(V__OBJ,s__Physical) )
         => ( s__before(V__TIME,s__BeginFn(s__WhenFn(V__PROC)))
           => ~ s__time(V__OBJ,V__TIME) ) ) ) ).

fof(kb_SUMO_4328,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__before(s__BeginFn(V__INTERVAL),s__EndFn(V__INTERVAL)) ) ).

fof(kb_SUMO_4329,axiom,
    s__instance(s__beforeOrEqual__m,s__BinaryPredicate) ).

fof(kb_SUMO_4330,axiom,
    s__instance(s__beforeOrEqual__m,s__TemporalRelation) ).

fof(kb_SUMO_4331,axiom,
    s__instance(s__beforeOrEqual__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_4332,axiom,
    s__domain(s__beforeOrEqual__m,"1",s__TimePoint) ).

fof(kb_SUMO_4333,axiom,
    s__domain(s__beforeOrEqual__m,"2",s__TimePoint) ).

fof(kb_SUMO_4334,axiom,
    s__documentation(s__beforeOrEqual__m,s__EnglishLanguage,'(&%beforeOrEqual ?POINT1 ?POINT2) means that ?POINT1 is identical with ?POINT2 or occurs before it on the universal timeline.') ).

fof(kb_SUMO_4335,axiom,
    ! [V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint) )
     => ( s__beforeOrEqual(V__POINT1,V__POINT2)
       => ( s__before(V__POINT1,V__POINT2)
          | V__POINT1 = V__POINT2 ) ) ) ).

fof(kb_SUMO_4336,axiom,
    s__instance(s__temporallyBetween__m,s__TemporalRelation) ).

fof(kb_SUMO_4337,axiom,
    s__instance(s__temporallyBetween__m,s__TernaryPredicate) ).

fof(kb_SUMO_4338,axiom,
    s__subrelation(s__temporallyBetween__m,s__temporallyBetweenOrEqual__m) ).

fof(kb_SUMO_4339,axiom,
    s__domain(s__temporallyBetween__m,"1",s__TimePoint) ).

fof(kb_SUMO_4340,axiom,
    s__domain(s__temporallyBetween__m,"2",s__TimePoint) ).

fof(kb_SUMO_4341,axiom,
    s__domain(s__temporallyBetween__m,"3",s__TimePoint) ).

fof(kb_SUMO_4342,axiom,
    s__documentation(s__temporallyBetween__m,s__EnglishLanguage,'(&%temporallyBetween ?POINT1 ?POINT2 ?POINT3) means that the &%TimePoint ?POINT2 is between the &%TimePoints ?POINT1 and ?POINT3, i.e. ?POINT1 is before ?POINT2 and ?POINT2 is before ?POINT3.') ).

fof(kb_SUMO_4343,axiom,
    ! [V__POINT3,V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__POINT3,s__TimePoint) )
     => ( s__temporallyBetween(V__POINT1,V__POINT2,V__POINT3)
      <=> ( s__before(V__POINT1,V__POINT2)
          & s__before(V__POINT2,V__POINT3) ) ) ) ).

fof(kb_SUMO_4344,axiom,
    s__instance(s__temporallyBetweenOrEqual__m,s__TemporalRelation) ).

fof(kb_SUMO_4345,axiom,
    s__instance(s__temporallyBetweenOrEqual__m,s__TernaryPredicate) ).

fof(kb_SUMO_4346,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"1",s__TimePoint) ).

fof(kb_SUMO_4347,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"2",s__TimePoint) ).

fof(kb_SUMO_4348,axiom,
    s__domain(s__temporallyBetweenOrEqual__m,"3",s__TimePoint) ).

fof(kb_SUMO_4349,axiom,
    s__documentation(s__temporallyBetweenOrEqual__m,s__EnglishLanguage,'(&%temporallyBetweenOrEqual ?POINT1 ?POINT2 ?POINT3) means that the &%TimePoint ?POINT1 is before or equal to the &%TimePoint ?POINT2 and ?POINT2 is before or equal to the &%TimePoint ?POINT3.') ).

fof(kb_SUMO_4350,axiom,
    ! [V__POINT3,V__POINT2,V__POINT1] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__POINT3,s__TimePoint) )
     => ( s__temporallyBetweenOrEqual(V__POINT1,V__POINT2,V__POINT3)
      <=> ( s__beforeOrEqual(V__POINT1,V__POINT2)
          & s__beforeOrEqual(V__POINT2,V__POINT3) ) ) ) ).

fof(kb_SUMO_4351,axiom,
    ! [V__TIME,V__PHYS] :
      ( s__instance(V__PHYS,s__Physical)
     => ( ( s__time(V__PHYS,V__TIME)
          & s__instance(V__TIME,s__TimePoint) )
      <=> s__temporallyBetweenOrEqual(s__BeginFn(s__WhenFn(V__PHYS)),V__TIME,s__EndFn(s__WhenFn(V__PHYS))) ) ) ).

fof(kb_SUMO_4352,axiom,
    s__instance(s__overlapsTemporally__m,s__BinaryPredicate) ).

fof(kb_SUMO_4353,axiom,
    s__instance(s__overlapsTemporally__m,s__TemporalRelation) ).

fof(kb_SUMO_4354,axiom,
    s__instance(s__overlapsTemporally__m,s__ReflexiveRelation) ).

fof(kb_SUMO_4355,axiom,
    s__instance(s__overlapsTemporally__m,s__SymmetricRelation) ).

fof(kb_SUMO_4356,axiom,
    s__domain(s__overlapsTemporally__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4357,axiom,
    s__domain(s__overlapsTemporally__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4358,axiom,
    s__documentation(s__overlapsTemporally__m,s__EnglishLanguage,'(&%overlapsTemporally ?INTERVAL1 ?INTERVAL2) means that the &%TimeIntervals ?INTERVAL1 and ?INTERVAL2 have a &%TimeInterval as a common part.') ).

fof(kb_SUMO_4359,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__overlapsTemporally(V__INTERVAL1,V__INTERVAL2)
      <=> ? [V__INTERVAL3] :
            ( s__instance(V__INTERVAL3,s__TimePosition)
            & s__instance(V__INTERVAL3,s__TimeInterval)
            & s__temporalPart(V__INTERVAL3,V__INTERVAL1)
            & s__temporalPart(V__INTERVAL3,V__INTERVAL2) ) ) ) ).

fof(kb_SUMO_4360,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__larger(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4361,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__Hole) )
     => ( s__hole(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4362,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Physical) )
     => ( s__partlyLocated(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4363,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__connected(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4364,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__smaller(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4365,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__traverses(V__OBJ1,V__OBJ2)
       => s__overlapsTemporally(s__WhenFn(V__OBJ1),s__WhenFn(V__OBJ2)) ) ) ).

fof(kb_SUMO_4366,axiom,
    s__subrelation(s__during__m,s__temporalPart__m) ).

fof(kb_SUMO_4367,axiom,
    s__instance(s__during__m,s__TransitiveRelation) ).

fof(kb_SUMO_4368,axiom,
    s__instance(s__during__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4369,axiom,
    s__subrelation(s__during__m,s__overlapsTemporally__m) ).

fof(kb_SUMO_4370,axiom,
    s__domain(s__during__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4371,axiom,
    s__domain(s__during__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4372,axiom,
    s__documentation(s__during__m,s__EnglishLanguage,'(&%during ?INTERVAL1 ?INTERVAL2) means that ?INTERVAL1 starts after and ends before ?INTERVAL2.') ).

fof(kb_SUMO_4373,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__during(V__INTERVAL1,V__INTERVAL2)
       => ( s__before(s__EndFn(V__INTERVAL1),s__EndFn(V__INTERVAL2))
          & s__before(s__BeginFn(V__INTERVAL2),s__BeginFn(V__INTERVAL1)) ) ) ) ).

fof(kb_SUMO_4374,axiom,
    s__instance(s__meetsTemporally__m,s__BinaryPredicate) ).

fof(kb_SUMO_4375,axiom,
    s__instance(s__meetsTemporally__m,s__TemporalRelation) ).

fof(kb_SUMO_4376,axiom,
    s__instance(s__meetsTemporally__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4377,axiom,
    s__instance(s__meetsTemporally__m,s__IntransitiveRelation) ).

fof(kb_SUMO_4378,axiom,
    s__domain(s__meetsTemporally__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4379,axiom,
    s__domain(s__meetsTemporally__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4380,axiom,
    s__documentation(s__meetsTemporally__m,s__EnglishLanguage,'(&%meetsTemporally ?INTERVAL1 ?INTERVAL2) means that the terminal point of the &%TimeInterval ?INTERVAL1 is the initial point of the &%TimeInterval ?INTERVAL2.') ).

fof(kb_SUMO_4381,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__meetsTemporally(V__INTERVAL1,V__INTERVAL2)
      <=> s__EndFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2) ) ) ).

fof(kb_SUMO_4382,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( ( s__BeginFn(V__INTERVAL1) = s__BeginFn(V__INTERVAL2)
          & s__EndFn(V__INTERVAL1) = s__EndFn(V__INTERVAL2) )
       => V__INTERVAL1 = V__INTERVAL2 ) ) ).

fof(kb_SUMO_4383,axiom,
    s__instance(s__earlier__m,s__BinaryPredicate) ).

fof(kb_SUMO_4384,axiom,
    s__instance(s__earlier__m,s__TemporalRelation) ).

fof(kb_SUMO_4385,axiom,
    s__instance(s__TemporalRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4386,axiom,
    s__instance(s__earlier__m,s__TransitiveRelation) ).

fof(kb_SUMO_4387,axiom,
    s__instance(s__earlier__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4388,axiom,
    s__domain(s__earlier__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4389,axiom,
    s__domain(s__earlier__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4390,axiom,
    s__documentation(s__earlier__m,s__EnglishLanguage,'(&%earlier ?INTERVAL1 ?INTERVAL2) means that the &%TimeInterval ?INTERVAL1 ends before the &%TimeInterval ?INTERVAL2 begins.') ).

fof(kb_SUMO_4391,axiom,
    ! [V__INTERVAL1,V__INTERVAL2] :
      ( ( s__instance(V__INTERVAL2,s__TimeInterval)
        & s__instance(V__INTERVAL1,s__TimeInterval) )
     => ( s__earlier(V__INTERVAL1,V__INTERVAL2)
      <=> s__before(s__EndFn(V__INTERVAL1),s__BeginFn(V__INTERVAL2)) ) ) ).

fof(kb_SUMO_4392,axiom,
    s__instance(s__cooccur__m,s__BinaryPredicate) ).

fof(kb_SUMO_4393,axiom,
    s__instance(s__cooccur__m,s__TemporalRelation) ).

fof(kb_SUMO_4394,axiom,
    s__instance(s__cooccur__m,s__EquivalenceRelation) ).

fof(kb_SUMO_4395,axiom,
    s__domain(s__cooccur__m,"1",s__Physical) ).

fof(kb_SUMO_4396,axiom,
    s__domain(s__cooccur__m,"2",s__Physical) ).

fof(kb_SUMO_4397,axiom,
    s__documentation(s__cooccur__m,s__EnglishLanguage,'(&%cooccur ?THING1 ?THING2) means that the &%Object or &%Process ?THING1 occurs at the same time as, together with, or jointly with the &%Object or &%Process ?THING2. This covers the following temporal relations: is co-incident with, is concurrent with, is contemporaneous with, and is concomitant with.') ).

fof(kb_SUMO_4398,axiom,
    ! [V__PHYS2,V__PHYS1] :
      ( ( s__instance(V__PHYS1,s__Physical)
        & s__instance(V__PHYS2,s__Physical) )
     => ( s__cooccur(V__PHYS1,V__PHYS2)
      <=> s__WhenFn(V__PHYS1) = s__WhenFn(V__PHYS2) ) ) ).

fof(kb_SUMO_4399,axiom,
    s__instance(s__TimeIntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4400,axiom,
    s__instance(s__TimeIntervalFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4401,axiom,
    s__domain(s__TimeIntervalFn__m,"1",s__TimePoint) ).

fof(kb_SUMO_4402,axiom,
    s__domain(s__TimeIntervalFn__m,"2",s__TimePoint) ).

fof(kb_SUMO_4403,axiom,
    s__range(s__TimeIntervalFn__m,s__TimeInterval) ).

fof(kb_SUMO_4404,axiom,
    s__documentation(s__TimeIntervalFn__m,s__EnglishLanguage,'A &%BinaryFunction that takes two &%TimePoints as arguments and returns the &%TimeInterval defined by these two &%TimePoints. Note that the first &%TimePoint must occur earlier than the second &%TimePoint.') ).

fof(kb_SUMO_4405,axiom,
    ! [V__POINT2,V__POINT1,V__INTERVAL] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__INTERVAL,s__TimeInterval)
        & s__TimeIntervalFn(V__POINT1,V__POINT2) = V__INTERVAL )
     => ( s__BeginFn(V__INTERVAL) = V__POINT1
        & s__EndFn(V__INTERVAL) = V__POINT2 ) ) ).

fof(kb_SUMO_4406,axiom,
    ! [V__POINT2,V__POINT1,V__INTERVAL] :
      ( ( s__instance(V__POINT1,s__TimePoint)
        & s__instance(V__POINT2,s__TimePoint)
        & s__instance(V__INTERVAL,s__TimeInterval)
        & s__TimeIntervalFn(V__POINT1,V__POINT2) = V__INTERVAL )
     => ! [V__POINT] :
          ( ( s__instance(V__POINT,s__TimePoint)
            & s__instance(V__INTERVAL,s__TimePosition)
            & s__instance(V__POINT1,s__TimePoint)
            & s__instance(V__POINT2,s__TimePoint) )
         => ( s__temporallyBetweenOrEqual(V__POINT1,V__POINT,V__POINT2)
          <=> s__temporalPart(V__POINT,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4407,axiom,
    s__instance(s__RecurrentTimeIntervalFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4408,axiom,
    s__instance(s__RecurrentTimeIntervalFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4409,axiom,
    s__domainSubclass(s__RecurrentTimeIntervalFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4410,axiom,
    s__domainSubclass(s__RecurrentTimeIntervalFn__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4411,axiom,
    s__rangeSubclass(s__RecurrentTimeIntervalFn__m,s__TimeInterval) ).

fof(kb_SUMO_4412,axiom,
    s__documentation(s__RecurrentTimeIntervalFn__m,s__EnglishLanguage,'A function that is useful for generating recurring time intervals. For example, (&%RecurrentTimeIntervalFn (&%HourFn 6 &%Day) (&%HourFn 12 &%Day)) returns the &%Class of &%TimeIntervals beginning at 6 in the morning and ending at 12 noon. For another example, (&%RecurrentTimeInterval &%Saturday &%Sunday) returns the &%Class of all weekends. For still another example, (&%RecurrentTimeInterval &%June &%August) returns the &%Class containing the academic summer period.') ).

fof(kb_SUMO_4413,axiom,
    ! [V__TIMECLASS1,V__TIMECLASS2,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__TIMECLASS2,s__TimeInterval)
        & s__instance(V__TIMECLASS2,s__SetOrClass)
        & s__subclass(V__TIMECLASS1,s__TimeInterval)
        & s__instance(V__TIMECLASS1,s__SetOrClass) )
     => ( s__instance(V__INTERVAL,s__RecurrentTimeIntervalFn(V__TIMECLASS1,V__TIMECLASS2))
       => ? [V__TIME1,V__TIME2] :
            ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__TIME1,V__TIMECLASS1)
            & s__instance(V__TIME2,V__TIMECLASS2)
            & s__starts(V__TIME1,V__INTERVAL)
            & s__finishes(V__TIME2,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4414,axiom,
    s__instance(s__WhenFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4415,axiom,
    s__instance(s__WhenFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4416,axiom,
    s__instance(s__WhenFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4417,axiom,
    s__domain(s__WhenFn__m,"1",s__Physical) ).

fof(kb_SUMO_4418,axiom,
    s__range(s__WhenFn__m,s__TimeInterval) ).

fof(kb_SUMO_4419,axiom,
    s__documentation(s__WhenFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps an &%Object or &%Process to the exact &%TimeInterval during which it exists. Note that, for every &%TimePoint ?TIME outside of the &%TimeInterval (WhenFn ?THING), (time ?THING ?TIME) does not hold.') ).

fof(kb_SUMO_4420,axiom,
    s__instance(s__PastFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4421,axiom,
    s__instance(s__PastFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4422,axiom,
    s__instance(s__PastFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4423,axiom,
    s__domain(s__PastFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_4424,axiom,
    s__range(s__PastFn__m,s__TimeInterval) ).

fof(kb_SUMO_4425,axiom,
    s__documentation(s__PastFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to the &%TimeInterval that meets it and that begins at &%NegativeInfinity.') ).

fof(kb_SUMO_4426,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__meetsTemporally(s__PastFn(V__INTERVAL),V__INTERVAL) ) ).

fof(kb_SUMO_4427,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__PastFn(V__INTERVAL) = s__TimeIntervalFn(s__NegativeInfinity,s__BeginFn(V__INTERVAL)) ) ).

fof(kb_SUMO_4428,axiom,
    s__instance(s__ImmediatePastFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4429,axiom,
    s__instance(s__ImmediatePastFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4430,axiom,
    s__instance(s__ImmediatePastFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4431,axiom,
    s__domain(s__ImmediatePastFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_4432,axiom,
    s__range(s__ImmediatePastFn__m,s__TimeInterval) ).

fof(kb_SUMO_4433,axiom,
    s__documentation(s__ImmediatePastFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to a short, indeterminate &%TimeInterval that immediately precedes the &%TimePosition.') ).

fof(kb_SUMO_4434,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => s__finishes(s__ImmediatePastFn(V__INTERVAL),s__PastFn(V__INTERVAL)) ) ) ).

fof(kb_SUMO_4435,axiom,
    s__instance(s__FutureFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4436,axiom,
    s__instance(s__FutureFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4437,axiom,
    s__instance(s__FutureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4438,axiom,
    s__domain(s__FutureFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_4439,axiom,
    s__range(s__FutureFn__m,s__TimeInterval) ).

fof(kb_SUMO_4440,axiom,
    s__documentation(s__FutureFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to the &%TimeInterval which it meets and which ends at &%PositiveInfinity.') ).

fof(kb_SUMO_4441,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__meetsTemporally(V__INTERVAL,s__FutureFn(V__INTERVAL)) ) ).

fof(kb_SUMO_4442,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimeInterval)
     => s__FutureFn(V__INTERVAL) = s__TimeIntervalFn(s__EndFn(V__INTERVAL),s__PositiveInfinity) ) ).

fof(kb_SUMO_4443,axiom,
    s__instance(s__ImmediateFutureFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4444,axiom,
    s__instance(s__ImmediateFutureFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4445,axiom,
    s__instance(s__ImmediateFutureFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4446,axiom,
    s__domain(s__ImmediateFutureFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_4447,axiom,
    s__range(s__ImmediateFutureFn__m,s__TimeInterval) ).

fof(kb_SUMO_4448,axiom,
    s__documentation(s__ImmediateFutureFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%TimePosition to a short, indeterminate &%TimeInterval that immediately follows the &%TimePosition.') ).

fof(kb_SUMO_4449,axiom,
    ! [V__INTERVAL] :
      ( s__instance(V__INTERVAL,s__TimePosition)
     => ( s__instance(V__INTERVAL,s__TimeInterval)
       => s__starts(s__ImmediateFutureFn(V__INTERVAL),s__FutureFn(V__INTERVAL)) ) ) ).

fof(kb_SUMO_4450,axiom,
    s__instance(s__date__m,s__BinaryPredicate) ).

fof(kb_SUMO_4451,axiom,
    s__instance(s__date__m,s__SingleValuedRelation) ).

fof(kb_SUMO_4452,axiom,
    s__instance(s__date__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4453,axiom,
    s__domain(s__date__m,"1",s__Physical) ).

fof(kb_SUMO_4454,axiom,
    s__domain(s__date__m,"2",s__Day) ).

fof(kb_SUMO_4455,axiom,
    s__subrelation(s__date__m,s__time__m) ).

fof(kb_SUMO_4456,axiom,
    s__documentation(s__date__m,s__EnglishLanguage,'A &%BinaryPredicate that specifies a &%TimePosition in absolute calendar time, at the resolution of one day, for a particular &%Object or &%Process.') ).

fof(kb_SUMO_4457,axiom,
    s__instance(s__YearFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4458,axiom,
    s__instance(s__YearFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4459,axiom,
    s__domain(s__YearFn__m,"1",s__Integer) ).

fof(kb_SUMO_4460,axiom,
    s__rangeSubclass(s__YearFn__m,s__Year) ).

fof(kb_SUMO_4461,axiom,
    s__documentation(s__YearFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a number to the corresponding calendar &%Year. For example, (&%YearFn 1912) returns the &%Class containing just one instance, the year of 1912. As might be expected, positive integers return years in the Common Era, while negative integers return years in B.C.E. Note that this function returns a &%Class as a value. The reason for this is that the related functions, viz. &%MonthFn, &%DayFn, &%HourFn, &%MinuteFn, and &%SecondFn, are used to generate both specific &%TimeIntervals and recurrent intervals, and the only way to do this is to make the domains and ranges of these functions classes rather than individuals.') ).

fof(kb_SUMO_4462,axiom,
    s__instance(s__MonthFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4463,axiom,
    s__instance(s__MonthFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4464,axiom,
    s__domainSubclass(s__MonthFn__m,"1",s__Month) ).

fof(kb_SUMO_4465,axiom,
    s__domainSubclass(s__MonthFn__m,"2",s__Year) ).

fof(kb_SUMO_4466,axiom,
    s__rangeSubclass(s__MonthFn__m,s__Month) ).

fof(kb_SUMO_4467,axiom,
    s__documentation(s__MonthFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a subclass of &%Month and a subclass of &%Year to the class containing the &%Months corresponding to thos &%Years. For example (&%MonthFn &%January (&%YearFn 1912)) is the class containing the eighth &%Month, i.e. August, of the &%Year 1912. For another example, (&%MonthFn &%August &%Year) is equal to &%August, the class of all months of August. Note that this function returns a &%Class as a value. The reason for this is that the related functions, viz. DayFn, HourFn, MinuteFn, and SecondFn, are used to generate both specific &%TimeIntervals and recurrent intervals, and the only way to do this is to make the domains and ranges of these functions classes rather than individuals.') ).

fof(kb_SUMO_4468,axiom,
    s__instance(s__DayFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4469,axiom,
    s__instance(s__DayFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4470,axiom,
    s__domain(s__DayFn__m,"1",s__PositiveInteger) ).

fof(kb_SUMO_4471,axiom,
    s__domainSubclass(s__DayFn__m,"2",s__Month) ).

fof(kb_SUMO_4472,axiom,
    s__rangeSubclass(s__DayFn__m,s__Day) ).

fof(kb_SUMO_4473,axiom,
    s__documentation(s__DayFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Months to the &%Days within each &%Month corresponding to that &%PositiveRealNumber. For example, (&%DayFn 16 &%August) is the &%Class of all sixteenth days of August. For another example, (&%DayFn 9 &%Month) would return the class of all ninth days of any month. For still another example, (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912))) denotes the 18th day of August 1912.') ).

fof(kb_SUMO_4474,axiom,
    ! [V__DAY,V__NUMBER,V__MONTH] :
      ( ( s__subclass(V__MONTH,s__Month)
        & s__instance(V__MONTH,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__instance(V__DAY,s__DayFn(V__NUMBER,V__MONTH))
       => lesseq(V__NUMBER,"31") ) ) ).

fof(kb_SUMO_4475,axiom,
    ! [V__NUMBER2,V__MONTH,V__DAY1,V__DAY2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveInteger)
        & s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__subclass(V__MONTH,s__Month)
        & s__instance(V__MONTH,s__SetOrClass)
        & s__instance(V__NUMBER2,s__PositiveInteger) )
     => ( ( s__instance(V__DAY1,s__DayFn(V__NUMBER1,V__MONTH))
          & s__instance(V__DAY2,s__DayFn(V__NUMBER2,V__MONTH))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4476,axiom,
    s__instance(s__HourFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4477,axiom,
    s__instance(s__HourFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4478,axiom,
    s__domain(s__HourFn__m,"1",s__NonnegativeInteger) ).

fof(kb_SUMO_4479,axiom,
    s__domainSubclass(s__HourFn__m,"2",s__Day) ).

fof(kb_SUMO_4480,axiom,
    s__rangeSubclass(s__HourFn__m,s__Hour) ).

fof(kb_SUMO_4481,axiom,
    s__documentation(s__HourFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Days to the &%Hours within each &%Day corresponding to that &%NonnegativeInteger. For example, (&%HourFn 12 &%Thursday) is the &%Class of all instances of noon Thursday. For another example, (&%HourFn 0 &%Day) would return the class of all instances of midnight. For still another example, (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))) denotes 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_4482,axiom,
    ! [V__DAY,V__NUMBER,V__HOUR] :
      ( ( s__instance(V__NUMBER,s__NonnegativeInteger)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( s__instance(V__HOUR,s__HourFn(V__NUMBER,V__DAY))
       => less(V__NUMBER,"24") ) ) ).

fof(kb_SUMO_4483,axiom,
    ! [V__DAY,V__NUMBER2,V__HOUR2,V__NUMBER1,V__HOUR1] :
      ( ( s__instance(V__HOUR1,s__TimeInterval)
        & s__instance(V__NUMBER1,s__NonnegativeInteger)
        & s__instance(V__HOUR2,s__TimeInterval)
        & s__instance(V__NUMBER2,s__NonnegativeInteger)
        & s__subclass(V__DAY,s__Day)
        & s__instance(V__DAY,s__SetOrClass) )
     => ( ( s__instance(V__HOUR1,s__HourFn(V__NUMBER1,V__DAY))
          & s__instance(V__HOUR2,s__HourFn(V__NUMBER2,V__DAY))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__HOUR1,V__HOUR2) ) ) ).

fof(kb_SUMO_4484,axiom,
    s__instance(s__MinuteFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4485,axiom,
    s__instance(s__MinuteFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4486,axiom,
    s__domain(s__MinuteFn__m,"1",s__NonnegativeInteger) ).

fof(kb_SUMO_4487,axiom,
    s__domainSubclass(s__MinuteFn__m,"2",s__Hour) ).

fof(kb_SUMO_4488,axiom,
    s__rangeSubclass(s__MinuteFn__m,s__Minute) ).

fof(kb_SUMO_4489,axiom,
    s__documentation(s__MinuteFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Hours to the &%Minutes within each &%Hour corresponding to that &%NonnegativeInteger. For example, (&%MinuteFn 30 (&%HourFn 17 &%Day)) is the &%Class of all 5:30s in the afternoon. For another example, (&%MinuteFn 15 &%Hour) would return the class of all instances of quarter past the hour. For still another example, (&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912))))) denotes 15 minutes after 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_4490,axiom,
    ! [V__MINUTE,V__NUMBER,V__HOUR] :
      ( ( s__subclass(V__HOUR,s__Hour)
        & s__instance(V__HOUR,s__SetOrClass)
        & s__instance(V__NUMBER,s__NonnegativeInteger) )
     => ( s__instance(V__MINUTE,s__MinuteFn(V__NUMBER,V__HOUR))
       => less(V__NUMBER,"60") ) ) ).

fof(kb_SUMO_4491,axiom,
    ! [V__MINUTE1,V__MINUTE2,V__NUMBER2,V__HOUR,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__NonnegativeInteger)
        & s__subclass(V__HOUR,s__Hour)
        & s__instance(V__HOUR,s__SetOrClass)
        & s__instance(V__NUMBER2,s__NonnegativeInteger)
        & s__instance(V__MINUTE2,s__TimeInterval)
        & s__instance(V__MINUTE1,s__TimeInterval) )
     => ( ( s__instance(V__MINUTE1,s__MinuteFn(V__NUMBER1,V__HOUR))
          & s__instance(V__MINUTE2,s__MinuteFn(V__NUMBER2,V__HOUR))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__MINUTE1,V__MINUTE2) ) ) ).

fof(kb_SUMO_4492,axiom,
    s__instance(s__SecondFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4493,axiom,
    s__instance(s__SecondFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4494,axiom,
    s__domain(s__SecondFn__m,"1",s__PositiveRealNumber) ).

fof(kb_SUMO_4495,axiom,
    s__domainSubclass(s__SecondFn__m,"2",s__Minute) ).

fof(kb_SUMO_4496,axiom,
    s__rangeSubclass(s__SecondFn__m,s__Second) ).

fof(kb_SUMO_4497,axiom,
    s__documentation(s__SecondFn__m,s__EnglishLanguage,'A &%BinaryFunction that assigns a &%PositiveRealNumber and a subclass of &%Minutes to the &%Seconds within each &%Minute corresponding to that &%PositiveRealNumber. For example, (&%SecondFn 4 (&%MinuteFn 5 &%Hour)) is the &%Class of all fourth &%Seconds of every fifth &%Minute of every hour. For another example, (&%SecondFn 8 &%Minute) would return the eighth second of every minute. For still another example, (&%SecondFn 9 (&%MinuteFn 15 (&%HourFn 14 (&%DayFn 18 (&%MonthFn &%August (&%YearFn 1912)))))) denotes 9 seconds and 15 minutes after 2 PM on the 18th day of August 1912.') ).

fof(kb_SUMO_4498,axiom,
    ! [V__MINUTE,V__NUMBER,V__SECOND] :
      ( ( s__instance(V__NUMBER,s__PositiveRealNumber)
        & s__subclass(V__MINUTE,s__Minute)
        & s__instance(V__MINUTE,s__SetOrClass) )
     => ( s__instance(V__SECOND,s__SecondFn(V__NUMBER,V__MINUTE))
       => less(V__NUMBER,"60") ) ) ).

fof(kb_SUMO_4499,axiom,
    ! [V__MINUTE,V__SECOND2,V__SECOND1,V__NUMBER2,V__NUMBER1] :
      ( ( s__instance(V__NUMBER1,s__PositiveRealNumber)
        & s__instance(V__NUMBER2,s__PositiveRealNumber)
        & s__instance(V__SECOND1,s__TimeInterval)
        & s__instance(V__SECOND2,s__TimeInterval)
        & s__subclass(V__MINUTE,s__Minute)
        & s__instance(V__MINUTE,s__SetOrClass) )
     => ( ( s__instance(V__SECOND1,s__SecondFn(V__NUMBER1,V__MINUTE))
          & s__instance(V__SECOND2,s__SecondFn(V__NUMBER2,V__MINUTE))
          & minus(V__NUMBER2,V__NUMBER1) = "1" )
       => s__meetsTemporally(V__SECOND1,V__SECOND2) ) ) ).

fof(kb_SUMO_4500,axiom,
    s__subclass(s__Year,s__TimeInterval) ).

fof(kb_SUMO_4501,axiom,
    s__instance(s__Year__t,s__SetOrClass) ).

fof(kb_SUMO_4502,axiom,
    s__relatedInternalConcept(s__Year,s__YearFn__m) ).

fof(kb_SUMO_4503,axiom,
    s__relatedInternalConcept(s__Year,s__YearDuration) ).

fof(kb_SUMO_4504,axiom,
    s__documentation(s__Year,s__EnglishLanguage,'The &%Class of all calendar &%Years.') ).

fof(kb_SUMO_4505,axiom,
    ! [V__YEAR] :
      ( s__instance(V__YEAR,s__TimeInterval)
     => ( s__instance(V__YEAR,s__Year)
       => s__duration(V__YEAR,s__MeasureFn("1",s__YearDuration)) ) ) ).

fof(kb_SUMO_4506,axiom,
    ! [V__YEAR2,V__YEAR1] :
      ( ( s__instance(V__YEAR1,s__TimeInterval)
        & s__instance(V__YEAR2,s__TimeInterval) )
     => ( ( s__instance(V__YEAR1,s__Year)
          & s__instance(V__YEAR2,s__Year)
          & minus(V__YEAR2,V__YEAR1) = "1" )
       => s__meetsTemporally(V__YEAR1,V__YEAR2) ) ) ).

fof(kb_SUMO_4507,axiom,
    s__subclass(s__LeapYear,s__Year) ).

fof(kb_SUMO_4508,axiom,
    s__instance(s__LeapYear__t,s__SetOrClass) ).

fof(kb_SUMO_4509,axiom,
    s__documentation(s__LeapYear,s__EnglishLanguage,'The &%Class of all leap years. These are years which are either (i.) evenly divisible by 4 and not by 100 or (ii.) evenly divisible by 400 (this latter case is known as a leap century).') ).

fof(kb_SUMO_4510,axiom,
    ! [V__LEAP,V__NUMBER] :
      ( s__instance(V__NUMBER,s__Integer)
     => ( ( s__instance(V__LEAP,s__LeapYear)
          & s__instance(V__LEAP,s__YearFn(V__NUMBER)) )
       => ( ( s__RemainderFn(V__NUMBER,"4") = "0"
            & s__RemainderFn(V__NUMBER,"100") != "0" )
          | s__RemainderFn(V__NUMBER,"400") = "0" ) ) ) ).

fof(kb_SUMO_4511,axiom,
    s__subclass(s__Month,s__TimeInterval) ).

fof(kb_SUMO_4512,axiom,
    s__relatedInternalConcept(s__Month,s__MonthFn__m) ).

fof(kb_SUMO_4513,axiom,
    s__documentation(s__Month,s__EnglishLanguage,'The &%Class of all calendar &%Months.') ).

fof(kb_SUMO_4514,axiom,
    s__subclass(s__January,s__Month) ).

fof(kb_SUMO_4515,axiom,
    s__instance(s__January__t,s__SetOrClass) ).

fof(kb_SUMO_4516,axiom,
    s__documentation(s__January,s__EnglishLanguage,'The &%Class of all &%Months which are January.') ).

fof(kb_SUMO_4517,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__January)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4518,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__January,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__February,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4519,axiom,
    s__subclass(s__February,s__Month) ).

fof(kb_SUMO_4520,axiom,
    s__instance(s__February__t,s__SetOrClass) ).

fof(kb_SUMO_4521,axiom,
    s__documentation(s__February,s__EnglishLanguage,'The &%Class of all &%Months which are February.') ).

fof(kb_SUMO_4522,axiom,
    ! [V__Y,V__YEAR,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass) )
     => ( ( s__instance(V__MONTH,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__Y,V__YEAR)
          & ~ s__instance(V__Y,s__LeapYear) )
       => s__duration(V__MONTH,s__MeasureFn("28",s__DayDuration)) ) ) ).

fof(kb_SUMO_4523,axiom,
    ! [V__Y,V__YEAR,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass) )
     => ( ( s__instance(V__MONTH,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__Y,V__YEAR)
          & s__instance(V__Y,s__LeapYear) )
       => s__duration(V__MONTH,s__MeasureFn("29",s__DayDuration)) ) ) ).

fof(kb_SUMO_4524,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__February,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__March,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4525,axiom,
    s__subclass(s__March,s__Month) ).

fof(kb_SUMO_4526,axiom,
    s__instance(s__March__t,s__SetOrClass) ).

fof(kb_SUMO_4527,axiom,
    s__documentation(s__March,s__EnglishLanguage,'The &%Class of all &%Months which are March.') ).

fof(kb_SUMO_4528,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__March)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4529,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__March,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__April,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4530,axiom,
    s__subclass(s__April,s__Month) ).

fof(kb_SUMO_4531,axiom,
    s__instance(s__April__t,s__SetOrClass) ).

fof(kb_SUMO_4532,axiom,
    s__documentation(s__April,s__EnglishLanguage,'The &%Class of all &%Months which are April.') ).

fof(kb_SUMO_4533,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__April)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_4534,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( V__MONTH1 = s__MonthFn(s__April,V__YEAR)
          & V__MONTH2 = s__MonthFn(s__May,V__YEAR) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4535,axiom,
    s__subclass(s__May,s__Month) ).

fof(kb_SUMO_4536,axiom,
    s__instance(s__May__t,s__SetOrClass) ).

fof(kb_SUMO_4537,axiom,
    s__documentation(s__May,s__EnglishLanguage,'The &%Class of all &%Months which are May.') ).

fof(kb_SUMO_4538,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__May)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4539,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__May,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__June,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4540,axiom,
    s__subclass(s__June,s__Month) ).

fof(kb_SUMO_4541,axiom,
    s__instance(s__June__t,s__SetOrClass) ).

fof(kb_SUMO_4542,axiom,
    s__instance(s__Month__t,s__SetOrClass) ).

fof(kb_SUMO_4543,axiom,
    s__documentation(s__June,s__EnglishLanguage,'The &%Class of all &%Months which are June.') ).

fof(kb_SUMO_4544,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__June)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_4545,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__June,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__July,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4546,axiom,
    s__subclass(s__July,s__Month) ).

fof(kb_SUMO_4547,axiom,
    s__instance(s__July__t,s__SetOrClass) ).

fof(kb_SUMO_4548,axiom,
    s__documentation(s__July,s__EnglishLanguage,'The &%Class of all &%Months which are July.') ).

fof(kb_SUMO_4549,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__July)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4550,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__July,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__August,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4551,axiom,
    s__subclass(s__August,s__Month) ).

fof(kb_SUMO_4552,axiom,
    s__instance(s__August__t,s__SetOrClass) ).

fof(kb_SUMO_4553,axiom,
    s__documentation(s__August,s__EnglishLanguage,'The &%Class of all &%Months which are August.') ).

fof(kb_SUMO_4554,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__August)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4555,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__August,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__September,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4556,axiom,
    s__subclass(s__September,s__Month) ).

fof(kb_SUMO_4557,axiom,
    s__instance(s__September__t,s__SetOrClass) ).

fof(kb_SUMO_4558,axiom,
    s__documentation(s__September,s__EnglishLanguage,'The &%Class of all &%Months which are September.') ).

fof(kb_SUMO_4559,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__September)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_4560,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__September,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__October,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4561,axiom,
    s__subclass(s__October,s__Month) ).

fof(kb_SUMO_4562,axiom,
    s__instance(s__October__t,s__SetOrClass) ).

fof(kb_SUMO_4563,axiom,
    s__documentation(s__October,s__EnglishLanguage,'The &%Class of all &%Months which are October.') ).

fof(kb_SUMO_4564,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__October)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4565,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__October,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__November,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4566,axiom,
    s__subclass(s__November,s__Month) ).

fof(kb_SUMO_4567,axiom,
    s__instance(s__November__t,s__SetOrClass) ).

fof(kb_SUMO_4568,axiom,
    s__documentation(s__November,s__EnglishLanguage,'The &%Class of all &%Months which are November.') ).

fof(kb_SUMO_4569,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__November)
       => s__duration(V__MONTH,s__MeasureFn("30",s__DayDuration)) ) ) ).

fof(kb_SUMO_4570,axiom,
    ! [V__MONTH1,V__MONTH2,V__YEAR] :
      ( ( s__subclass(V__YEAR,s__Year)
        & s__instance(V__YEAR,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__November,V__YEAR))
          & s__instance(V__MONTH2,s__MonthFn(s__December,V__YEAR)) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4571,axiom,
    s__subclass(s__December,s__Month) ).

fof(kb_SUMO_4572,axiom,
    s__instance(s__December__t,s__SetOrClass) ).

fof(kb_SUMO_4573,axiom,
    s__documentation(s__December,s__EnglishLanguage,'The &%Class of all &%Months which are December.') ).

fof(kb_SUMO_4574,axiom,
    ! [V__MONTH] :
      ( s__instance(V__MONTH,s__TimeInterval)
     => ( s__instance(V__MONTH,s__December)
       => s__duration(V__MONTH,s__MeasureFn("31",s__DayDuration)) ) ) ).

fof(kb_SUMO_4575,axiom,
    ! [V__Y1,V__MONTH1,V__MONTH2,V__YEAR2,V__Y2,V__YEAR1] :
      ( ( s__subclass(V__YEAR1,s__Year)
        & s__instance(V__YEAR1,s__SetOrClass)
        & s__instance(V__Y2,s__TimeInterval)
        & s__subclass(V__YEAR2,s__Year)
        & s__instance(V__YEAR2,s__SetOrClass)
        & s__instance(V__MONTH2,s__TimeInterval)
        & s__instance(V__MONTH1,s__TimeInterval)
        & s__instance(V__Y1,s__TimeInterval) )
     => ( ( s__instance(V__MONTH1,s__MonthFn(s__December,V__YEAR1))
          & s__instance(V__MONTH2,s__MonthFn(s__January,V__YEAR2))
          & s__instance(V__Y1,V__YEAR1)
          & s__instance(V__Y2,V__YEAR2)
          & s__meetsTemporally(V__Y1,V__Y2) )
       => s__meetsTemporally(V__MONTH1,V__MONTH2) ) ) ).

fof(kb_SUMO_4576,axiom,
    s__subclass(s__Day,s__TimeInterval) ).

fof(kb_SUMO_4577,axiom,
    s__relatedInternalConcept(s__Day,s__DayFn__m) ).

fof(kb_SUMO_4578,axiom,
    s__relatedInternalConcept(s__Day,s__DayDuration) ).

fof(kb_SUMO_4579,axiom,
    s__documentation(s__Day,s__EnglishLanguage,'The &%Class of all calendar &%Days.') ).

fof(kb_SUMO_4580,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__Day)
       => s__duration(V__DAY,s__MeasureFn("1",s__DayDuration)) ) ) ).

fof(kb_SUMO_4581,axiom,
    s__subclass(s__Monday,s__Day) ).

fof(kb_SUMO_4582,axiom,
    s__instance(s__Monday__t,s__SetOrClass) ).

fof(kb_SUMO_4583,axiom,
    s__documentation(s__Monday,s__EnglishLanguage,'The &%Class of all calendar Mondays.') ).

fof(kb_SUMO_4584,axiom,
    s__subclass(s__Tuesday,s__Day) ).

fof(kb_SUMO_4585,axiom,
    s__instance(s__Tuesday__t,s__SetOrClass) ).

fof(kb_SUMO_4586,axiom,
    s__documentation(s__Tuesday,s__EnglishLanguage,'The &%Class of all calendar Tuesdays.') ).

fof(kb_SUMO_4587,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Monday)
          & s__instance(V__DAY2,s__Tuesday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4588,axiom,
    s__subclass(s__Wednesday,s__Day) ).

fof(kb_SUMO_4589,axiom,
    s__instance(s__Wednesday__t,s__SetOrClass) ).

fof(kb_SUMO_4590,axiom,
    s__documentation(s__Wednesday,s__EnglishLanguage,'The &%Class of all calendar Wednesdays.') ).

fof(kb_SUMO_4591,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Tuesday)
          & s__instance(V__DAY2,s__Wednesday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4592,axiom,
    s__subclass(s__Thursday,s__Day) ).

fof(kb_SUMO_4593,axiom,
    s__instance(s__Thursday__t,s__SetOrClass) ).

fof(kb_SUMO_4594,axiom,
    s__documentation(s__Thursday,s__EnglishLanguage,'The &%Class of all calendar Thursdays.') ).

fof(kb_SUMO_4595,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Wednesday)
          & s__instance(V__DAY2,s__Thursday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4596,axiom,
    s__subclass(s__Friday,s__Day) ).

fof(kb_SUMO_4597,axiom,
    s__instance(s__Friday__t,s__SetOrClass) ).

fof(kb_SUMO_4598,axiom,
    s__documentation(s__Friday,s__EnglishLanguage,'The &%Class of all calendar Fridays.') ).

fof(kb_SUMO_4599,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Thursday)
          & s__instance(V__DAY2,s__Friday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4600,axiom,
    s__subclass(s__Saturday,s__Day) ).

fof(kb_SUMO_4601,axiom,
    s__instance(s__Saturday__t,s__SetOrClass) ).

fof(kb_SUMO_4602,axiom,
    s__documentation(s__Saturday,s__EnglishLanguage,'The &%Class of all calendar Saturdays.') ).

fof(kb_SUMO_4603,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Friday)
          & s__instance(V__DAY2,s__Saturday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4604,axiom,
    s__subclass(s__Sunday,s__Day) ).

fof(kb_SUMO_4605,axiom,
    s__instance(s__Sunday__t,s__SetOrClass) ).

fof(kb_SUMO_4606,axiom,
    s__instance(s__Day__t,s__SetOrClass) ).

fof(kb_SUMO_4607,axiom,
    s__documentation(s__Sunday,s__EnglishLanguage,'The &%Class of all calendar Sundays.') ).

fof(kb_SUMO_4608,axiom,
    ! [V__WEEK,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK,s__TimePosition) )
     => ( ( s__instance(V__DAY1,s__Saturday)
          & s__instance(V__DAY2,s__Sunday)
          & s__instance(V__WEEK,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK)
          & s__temporalPart(V__DAY2,V__WEEK) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4609,axiom,
    ! [V__WEEK2,V__WEEK1,V__DAY1,V__DAY2] :
      ( ( s__instance(V__DAY2,s__TimeInterval)
        & s__instance(V__DAY1,s__TimeInterval)
        & s__instance(V__WEEK1,s__TimeInterval)
        & s__instance(V__WEEK2,s__TimeInterval) )
     => ( ( s__instance(V__DAY1,s__Sunday)
          & s__instance(V__DAY2,s__Monday)
          & s__instance(V__WEEK1,s__Week)
          & s__instance(V__WEEK2,s__Week)
          & s__temporalPart(V__DAY1,V__WEEK1)
          & s__temporalPart(V__DAY2,V__WEEK2)
          & s__meetsTemporally(V__WEEK1,V__WEEK2) )
       => s__meetsTemporally(V__DAY1,V__DAY2) ) ) ).

fof(kb_SUMO_4610,axiom,
    s__subclass(s__Week,s__TimeInterval) ).

fof(kb_SUMO_4611,axiom,
    s__instance(s__Week__t,s__SetOrClass) ).

fof(kb_SUMO_4612,axiom,
    s__documentation(s__Week,s__EnglishLanguage,'The &%Class of all calendar weeks.') ).

fof(kb_SUMO_4613,axiom,
    ! [V__WEEK] :
      ( s__instance(V__WEEK,s__TimeInterval)
     => ( s__instance(V__WEEK,s__Week)
       => s__duration(V__WEEK,s__MeasureFn("1",s__WeekDuration)) ) ) ).

fof(kb_SUMO_4614,axiom,
    s__subclass(s__Hour,s__TimeInterval) ).

fof(kb_SUMO_4615,axiom,
    s__instance(s__Hour__t,s__SetOrClass) ).

fof(kb_SUMO_4616,axiom,
    s__relatedInternalConcept(s__Hour,s__HourFn__m) ).

fof(kb_SUMO_4617,axiom,
    s__relatedInternalConcept(s__Hour,s__HourDuration) ).

fof(kb_SUMO_4618,axiom,
    s__documentation(s__Hour,s__EnglishLanguage,'The &%Class of all clock &%Hours.') ).

fof(kb_SUMO_4619,axiom,
    ! [V__HOUR] :
      ( s__instance(V__HOUR,s__TimeInterval)
     => ( s__instance(V__HOUR,s__Hour)
       => s__duration(V__HOUR,s__MeasureFn("1",s__HourDuration)) ) ) ).

fof(kb_SUMO_4620,axiom,
    s__subclass(s__Minute,s__TimeInterval) ).

fof(kb_SUMO_4621,axiom,
    s__instance(s__Minute__t,s__SetOrClass) ).

fof(kb_SUMO_4622,axiom,
    s__relatedInternalConcept(s__Minute,s__MinuteFn__m) ).

fof(kb_SUMO_4623,axiom,
    s__relatedInternalConcept(s__Minute,s__MinuteDuration) ).

fof(kb_SUMO_4624,axiom,
    s__documentation(s__Minute,s__EnglishLanguage,'The &%Class of all clock &%Minutes.') ).

fof(kb_SUMO_4625,axiom,
    ! [V__MINUTE] :
      ( s__instance(V__MINUTE,s__TimeInterval)
     => ( s__instance(V__MINUTE,s__Minute)
       => s__duration(V__MINUTE,s__MeasureFn("1",s__MinuteDuration)) ) ) ).

fof(kb_SUMO_4626,axiom,
    s__subclass(s__Second,s__TimeInterval) ).

fof(kb_SUMO_4627,axiom,
    s__instance(s__Second__t,s__SetOrClass) ).

fof(kb_SUMO_4628,axiom,
    s__relatedInternalConcept(s__Second,s__SecondDuration) ).

fof(kb_SUMO_4629,axiom,
    s__relatedInternalConcept(s__Second,s__SecondFn__m) ).

fof(kb_SUMO_4630,axiom,
    s__documentation(s__Second,s__EnglishLanguage,'The &%Class of all clock &%Seconds.') ).

fof(kb_SUMO_4631,axiom,
    ! [V__SECOND] :
      ( s__instance(V__SECOND,s__TimeInterval)
     => ( s__instance(V__SECOND,s__Second)
       => s__duration(V__SECOND,s__MeasureFn("1",s__SecondDuration)) ) ) ).

fof(kb_SUMO_4632,axiom,
    s__instance(s__TemporalCompositionFn__m,s__TemporalRelation) ).

fof(kb_SUMO_4633,axiom,
    s__instance(s__TemporalCompositionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4634,axiom,
    s__domain(s__TemporalCompositionFn__m,"1",s__TimeInterval) ).

fof(kb_SUMO_4635,axiom,
    s__domainSubclass(s__TemporalCompositionFn__m,"2",s__TimeInterval) ).

fof(kb_SUMO_4636,axiom,
    s__rangeSubclass(s__TemporalCompositionFn__m,s__TimeInterval) ).

fof(kb_SUMO_4637,axiom,
    s__documentation(s__TemporalCompositionFn__m,s__EnglishLanguage,'The basic &%Function for expressing the composition of larger &%TimeIntervals out of smaller &%TimeIntervals. For example, if &%ThisSeptember is an &%instance of &%September, (&%TemporalCompositionFn &%ThisSeptember &%Day) denotes the &%Class of consecutive days that make up &%ThisSeptember. Note that one can obtain the number of instances of this &%Class by using the function &%CardinalityFn.') ).

fof(kb_SUMO_4638,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1,V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__INTERVAL_TYPE)
              & s__instance(V__TIME2,V__CLASS) )
           => ? [V__DURATION] :
                ( s__instance(V__DURATION,s__TimeDuration)
                & s__duration(V__TIME1,V__DURATION)
                & s__duration(V__TIME2,V__DURATION) ) ) ) ) ).

fof(kb_SUMO_4639,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1,V__TIME2] :
          ( ( s__instance(V__TIME2,s__TimeInterval)
            & s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & s__instance(V__TIME2,V__CLASS)
              & V__TIME1 != V__TIME2 )
           => ( s__meetsTemporally(V__TIME1,V__TIME2)
              | s__meetsTemporally(V__TIME2,V__TIME1)
              | s__earlier(V__TIME1,V__TIME2)
              | s__earlier(V__TIME2,V__TIME1) ) ) ) ) ).

fof(kb_SUMO_4640,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
        & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimeInterval)
            & s__instance(V__TIME,V__CLASS)
            & s__starts(V__TIME,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4641,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( ( s__instance(V__INTERVAL,s__TimeInterval)
        & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
        & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimeInterval)
            & s__instance(V__TIME,V__CLASS)
            & s__finishes(V__TIME,V__INTERVAL) ) ) ) ).

fof(kb_SUMO_4642,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1] :
          ( ( s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & ~ s__finishes(V__TIME1,V__INTERVAL) )
           => ? [V__TIME2] :
                ( s__instance(V__TIME2,s__TimeInterval)
                & s__instance(V__TIME2,V__CLASS)
                & s__meetsTemporally(V__TIME1,V__TIME2) ) ) ) ) ).

fof(kb_SUMO_4643,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME1] :
          ( ( s__instance(V__TIME1,s__TimeInterval)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME1,V__CLASS)
              & ~ s__starts(V__TIME1,V__INTERVAL) )
           => ? [V__TIME2] :
                ( s__instance(V__TIME2,s__TimeInterval)
                & s__instance(V__TIME2,V__CLASS)
                & s__meetsTemporally(V__TIME2,V__TIME1) ) ) ) ) ).

fof(kb_SUMO_4644,axiom,
    ! [V__CLASS,V__INTERVAL_TYPE,V__INTERVAL] :
      ( s__TemporalCompositionFn(V__INTERVAL,V__INTERVAL_TYPE) = V__CLASS
     => ! [V__TIME] :
          ( ( s__instance(V__TIME,s__TimePosition)
            & s__instance(V__INTERVAL,s__TimeInterval)
            & s__subclass(V__INTERVAL_TYPE,s__TimeInterval)
            & s__instance(V__INTERVAL_TYPE,s__SetOrClass)
            & s__instance(V__CLASS,s__SetOrClass) )
         => ( ( s__instance(V__TIME,s__TimePoint)
              & s__temporalPart(V__TIME,V__INTERVAL) )
           => ? [V__INSTANCE] :
                ( s__instance(V__INSTANCE,s__TimePosition)
                & s__instance(V__INSTANCE,V__CLASS)
                & s__temporalPart(V__TIME,V__INSTANCE) ) ) ) ) ).

fof(kb_SUMO_4645,axiom,
    ! [V__YEAR] :
      ( s__instance(V__YEAR,s__TimeInterval)
     => ( s__instance(V__YEAR,s__Year)
       => s__CardinalityFn(s__TemporalCompositionFn(V__YEAR,s__Month)) = "12" ) ) ).

fof(kb_SUMO_4646,axiom,
    ! [V__NUMBER,V__MONTH] :
      ( ( s__instance(V__MONTH,s__TimeInterval)
        & s__instance(V__NUMBER,s__RealNumber) )
     => ( ( s__instance(V__MONTH,s__Month)
          & s__duration(V__MONTH,s__MeasureFn(V__NUMBER,s__DayDuration)) )
       => s__CardinalityFn(s__TemporalCompositionFn(V__MONTH,s__Day)) = V__NUMBER ) ) ).

fof(kb_SUMO_4647,axiom,
    ! [V__WEEK] :
      ( s__instance(V__WEEK,s__TimeInterval)
     => ( s__instance(V__WEEK,s__Week)
       => s__CardinalityFn(s__TemporalCompositionFn(V__WEEK,s__Day)) = "7" ) ) ).

fof(kb_SUMO_4648,axiom,
    ! [V__DAY] :
      ( s__instance(V__DAY,s__TimeInterval)
     => ( s__instance(V__DAY,s__Day)
       => s__CardinalityFn(s__TemporalCompositionFn(V__DAY,s__Hour)) = "24" ) ) ).

fof(kb_SUMO_4649,axiom,
    ! [V__HOUR] :
      ( s__instance(V__HOUR,s__TimeInterval)
     => ( s__instance(V__HOUR,s__Hour)
       => s__CardinalityFn(s__TemporalCompositionFn(V__HOUR,s__Minute)) = "60" ) ) ).

fof(kb_SUMO_4650,axiom,
    ! [V__MINUTE] :
      ( s__instance(V__MINUTE,s__TimeInterval)
     => ( s__instance(V__MINUTE,s__Minute)
       => s__CardinalityFn(s__TemporalCompositionFn(V__MINUTE,s__Second)) = "60" ) ) ).

fof(kb_SUMO_4651,axiom,
    s__instance(s__connected__m,s__BinaryPredicate) ).

fof(kb_SUMO_4652,axiom,
    s__instance(s__connected__m,s__SpatialRelation) ).

fof(kb_SUMO_4653,axiom,
    s__instance(s__connected__m,s__ReflexiveRelation) ).

fof(kb_SUMO_4654,axiom,
    s__instance(s__connected__m,s__SymmetricRelation) ).

fof(kb_SUMO_4655,axiom,
    s__domain(s__connected__m,"1",s__Object) ).

fof(kb_SUMO_4656,axiom,
    s__domain(s__connected__m,"2",s__Object) ).

fof(kb_SUMO_4657,axiom,
    s__documentation(s__connected__m,s__EnglishLanguage,'(connected ?OBJ1 ?OBJ2) means that ?OBJ1 &%meetsSpatially ?OBJ2 or that ?OBJ1 &%overlapsSpatially ?OBJ2.') ).

fof(kb_SUMO_4658,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__connected(V__OBJ1,V__OBJ2)
       => ( s__meetsSpatially(V__OBJ1,V__OBJ2)
          | s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4659,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__SelfConnectedObject)
    <=> ! [V__PART1,V__PART2] :
          ( ( s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object) )
         => ( V__OBJ = s__MereologicalSumFn(V__PART1,V__PART2)
           => s__connected(V__PART1,V__PART2) ) ) ) ).

fof(kb_SUMO_4660,axiom,
    s__instance(s__connects__m,s__SpatialRelation) ).

fof(kb_SUMO_4661,axiom,
    s__instance(s__connects__m,s__TernaryPredicate) ).

fof(kb_SUMO_4662,axiom,
    s__domain(s__connects__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4663,axiom,
    s__domain(s__connects__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4664,axiom,
    s__domain(s__connects__m,"3",s__SelfConnectedObject) ).

fof(kb_SUMO_4665,axiom,
    s__documentation(s__connects__m,s__EnglishLanguage,'The relationship between three things, when one of the three things connects the other two. More formally, (&%connects ?OBJ1 ?OBJ2 ?OBJ3) means that (&%connected ?OBJ1 ?OBJ2) and (&%connected ?OBJ1 ?OBJ3) and not (&%connected ?OBJ2 ?OBJ3).') ).

fof(kb_SUMO_4666,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__SelfConnectedObject)
        & s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__connects(V__OBJ1,V__OBJ2,V__OBJ3)
      <=> s__between(V__OBJ2,V__OBJ1,V__OBJ3) ) ) ).

fof(kb_SUMO_4667,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__SelfConnectedObject)
        & s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject) )
     => ( s__connects(V__OBJ1,V__OBJ2,V__OBJ3)
      <=> ( s__connected(V__OBJ1,V__OBJ2)
          & s__connected(V__OBJ1,V__OBJ3)
          & ~ s__connected(V__OBJ2,V__OBJ3) ) ) ) ).

fof(kb_SUMO_4668,axiom,
    ! [V__ARC,V__NODE1,V__NODE2] :
      ( ( s__instance(V__NODE2,s__SelfConnectedObject)
        & s__instance(V__NODE1,s__SelfConnectedObject)
        & s__instance(V__ARC,s__SelfConnectedObject) )
     => ( s__connects(V__ARC,V__NODE1,V__NODE2)
       => s__connects(V__ARC,V__NODE2,V__NODE1) ) ) ).

fof(kb_SUMO_4669,axiom,
    s__subrelation(s__meetsSpatially__m,s__connected__m) ).

fof(kb_SUMO_4670,axiom,
    s__instance(s__meetsSpatially__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4671,axiom,
    s__instance(s__meetsSpatially__m,s__SymmetricRelation) ).

fof(kb_SUMO_4672,axiom,
    s__disjointRelation(s__meetsSpatially__m,s__overlapsSpatially__m) ).

fof(kb_SUMO_4673,axiom,
    s__documentation(s__meetsSpatially__m,s__EnglishLanguage,'(&%meetsSpatially ?OBJ1 ?OBJ2) means that ?OBJ1 and ?OBJ2 are &%connected but that neither ?OBJ1 nor ?OBJ2 &%overlapsSpatially the other.') ).

fof(kb_SUMO_4674,axiom,
    s__subrelation(s__overlapsSpatially__m,s__connected__m) ).

fof(kb_SUMO_4675,axiom,
    s__instance(s__overlapsSpatially__m,s__ReflexiveRelation) ).

fof(kb_SUMO_4676,axiom,
    s__instance(s__ReflexiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4677,axiom,
    s__instance(s__overlapsSpatially__m,s__SymmetricRelation) ).

fof(kb_SUMO_4678,axiom,
    s__documentation(s__overlapsSpatially__m,s__EnglishLanguage,'(&%overlapsSpatially ?OBJ1 ?OBJ2) means that the &%Objects ?OBJ1 and ?OBJ2 have some parts in common. This is a reflexive and symmetric (but not transitive) relation.') ).

fof(kb_SUMO_4679,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__overlapsSpatially(V__OBJ1,V__OBJ2)
      <=> ? [V__OBJ3] :
            ( s__instance(V__OBJ3,s__Object)
            & s__part(V__OBJ3,V__OBJ1)
            & s__part(V__OBJ3,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4680,axiom,
    ! [V__COLL,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__COLL,s__Collection) )
     => ( ( s__member(V__OBJ1,V__COLL)
          & s__member(V__OBJ2,V__COLL)
          & V__OBJ1 != V__OBJ2 )
       => ~ s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_4681,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Motion)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__path(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4682,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__DirectionalAttribute) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__direction(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4683,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__eventPartlyLocated(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4684,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__agent(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4685,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__destination(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4686,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Translocation)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__changesLocation(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4687,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__origin(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4688,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__patient(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4689,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( s__instance(V__PROCESS,s__Motion)
     => ( ( s__instance(V__OBJ,s__Object)
          & s__moves(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4690,axiom,
    ! [V__OBJ,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__OBJ,s__Object)
          & s__experiencer(V__PROCESS,V__OBJ) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__overlapsSpatially(s__WhereFn(V__PROCESS,V__TIME),V__OBJ) ) ) ) ).

fof(kb_SUMO_4691,axiom,
    s__instance(s__overlapsPartially__m,s__SymmetricRelation) ).

fof(kb_SUMO_4692,axiom,
    s__instance(s__overlapsPartially__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4693,axiom,
    s__subrelation(s__overlapsPartially__m,s__overlapsSpatially__m) ).

fof(kb_SUMO_4694,axiom,
    s__documentation(s__overlapsPartially__m,s__EnglishLanguage,'(&%overlapsPartially ?OBJ1 ?OBJ2) means that ?OBJ1 and ?OBJ2 have part(s) in common, but neither ?OBJ1 nor ?OBJ2 is a &%part of the other.') ).

fof(kb_SUMO_4695,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__overlapsPartially(V__OBJ1,V__OBJ2)
      <=> ( ~ s__part(V__OBJ1,V__OBJ2)
          & ~ s__part(V__OBJ2,V__OBJ1)
          & ? [V__OBJ3] :
              ( s__instance(V__OBJ3,s__Object)
              & s__part(V__OBJ3,V__OBJ1)
              & s__part(V__OBJ3,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_4696,axiom,
    s__subrelation(s__superficialPart__m,s__part__m) ).

fof(kb_SUMO_4697,axiom,
    s__instance(s__superficialPart__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_4698,axiom,
    s__instance(s__superficialPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_4699,axiom,
    s__documentation(s__superficialPart__m,s__EnglishLanguage,'(&%superficialPart ?OBJ1 ?OBJ2) means that ?OBJ1 is a part of ?OBJ2 that has no interior parts of its own (or, intuitively, that only overlaps those parts of ?OBJ2 that are externally connected with the mereological complement of ?OBJ2). This too is a transitive relation closed under &%MereologicalSumFn and &%MereologicalProductFn.') ).

fof(kb_SUMO_4700,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__superficialPart(V__OBJ1,V__OBJ2)
       => ( ~ s__interiorPart(V__OBJ1,V__OBJ2)
          & ~ ? [V__OBJ3] :
                ( s__instance(V__OBJ3,s__Object)
                & s__interiorPart(V__OBJ3,V__OBJ1) ) ) ) ) ).

fof(kb_SUMO_4701,axiom,
    s__instance(s__surface__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4702,axiom,
    s__subrelation(s__surface__m,s__superficialPart__m) ).

fof(kb_SUMO_4703,axiom,
    s__domain(s__surface__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4704,axiom,
    s__domain(s__surface__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4705,axiom,
    s__documentation(s__surface__m,s__EnglishLanguage,'(&%surface ?OBJ1 ?OBJ2) means that ?OBJ1 is a maximally connected &%superficialPart of ?OBJ2. Note that some &%SelfConnectedObjects have more than one surface, e.g. a hollow object like a tennis ball has both an inner and an outer surface.') ).

fof(kb_SUMO_4706,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__surface(V__OBJ1,V__OBJ2)
     => ! [V__OBJ3] :
          ( ( s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__SelfConnectedObject) )
         => ( s__superficialPart(V__OBJ3,V__OBJ2)
           => s__part(V__OBJ3,V__OBJ1) ) ) ) ).

fof(kb_SUMO_4707,axiom,
    s__subrelation(s__interiorPart__m,s__part__m) ).

fof(kb_SUMO_4708,axiom,
    s__instance(s__interiorPart__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4709,axiom,
    s__instance(s__interiorPart__m,s__TransitiveRelation) ).

fof(kb_SUMO_4710,axiom,
    s__documentation(s__interiorPart__m,s__EnglishLanguage,'(&%interiorPart ?OBJ1 ?OBJ2) means that ?OBJ1 is part ?OBJ2 and there is no overlap between ?OBJ1 and any &%superficialPart ?OBJ2.') ).

fof(kb_SUMO_4711,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( s__interiorPart(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__superficialPart(V__PART,V__OBJ2)
           => ~ s__overlapsSpatially(V__OBJ1,V__PART) ) ) ) ).

fof(kb_SUMO_4712,axiom,
    s__subrelation(s__bottom__m,s__superficialPart__m) ).

fof(kb_SUMO_4713,axiom,
    s__domain(s__bottom__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4714,axiom,
    s__domain(s__bottom__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4715,axiom,
    s__documentation(s__bottom__m,s__EnglishLanguage,'(&%bottom ?BOTTOM ?OBJECT) holds if ?BOTTOM is the lowest or deepest maximal superficial part of ?OBJECT.') ).

fof(kb_SUMO_4716,axiom,
    ! [V__OBJECT,V__PART,V__BOTTOM] :
      ( ( s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__bottom(V__BOTTOM,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__BOTTOM) )
       => s__orientation(V__PART,V__BOTTOM,s__Above) ) ) ).

fof(kb_SUMO_4717,axiom,
    s__subrelation(s__top__m,s__superficialPart__m) ).

fof(kb_SUMO_4718,axiom,
    s__domain(s__top__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4719,axiom,
    s__domain(s__top__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4720,axiom,
    s__documentation(s__top__m,s__EnglishLanguage,'(&%top ?TOP ?OBJECT) means that ?TOP is the highest maximal superficial part of ?OBJECT.') ).

fof(kb_SUMO_4721,axiom,
    ! [V__OBJECT,V__PART,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__PART,s__Object)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__top(V__TOP,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__TOP) )
       => s__orientation(V__PART,V__TOP,s__Below) ) ) ).

fof(kb_SUMO_4722,axiom,
    s__subrelation(s__side__m,s__superficialPart__m) ).

fof(kb_SUMO_4723,axiom,
    s__domain(s__side__m,"1",s__SelfConnectedObject) ).

fof(kb_SUMO_4724,axiom,
    s__domain(s__side__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4725,axiom,
    s__documentation(s__side__m,s__EnglishLanguage,'(&%side ?SIDE ?OBJECT) means that ?SIDE is a side of the object, as opposed to the &%top or &%bottom.') ).

fof(kb_SUMO_4726,axiom,
    ! [V__OBJECT,V__SIDE,V__PART] :
      ( ( s__instance(V__PART,s__Object)
        & s__instance(V__SIDE,s__SelfConnectedObject)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__side(V__SIDE,V__OBJECT)
          & s__part(V__PART,V__OBJECT)
          & ~ s__connected(V__PART,V__SIDE) )
       => ? [V__DIRECT] :
            ( s__instance(V__DIRECT,s__PositionalAttribute)
            & s__orientation(V__SIDE,V__PART,V__DIRECT) ) ) ) ).

fof(kb_SUMO_4727,axiom,
    ! [V__O,V__S,V__TOP] :
      ( ( s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__S,s__SelfConnectedObject)
        & s__instance(V__O,s__SelfConnectedObject) )
     => ( ( s__top(V__TOP,V__O)
          & s__side(V__S,V__O) )
       => V__TOP != V__S ) ) ).

fof(kb_SUMO_4728,axiom,
    ! [V__OBJECT,V__WIDTH] :
      ( ( s__instance(V__WIDTH,s__LengthMeasure)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( s__width(V__OBJECT,V__WIDTH)
      <=> ? [V__SIDE1,V__SIDE2] :
            ( s__instance(V__SIDE2,s__SelfConnectedObject)
            & s__instance(V__SIDE1,s__SelfConnectedObject)
            & s__side(V__SIDE1,V__OBJECT)
            & s__side(V__SIDE2,V__OBJECT)
            & s__distance(V__SIDE1,V__SIDE2,V__WIDTH) ) ) ) ).

fof(kb_SUMO_4729,axiom,
    ! [V__OBJECT,V__BOTTOM,V__TOP,V__HEIGHT] :
      ( ( s__instance(V__HEIGHT,s__LengthMeasure)
        & s__instance(V__TOP,s__SelfConnectedObject)
        & s__instance(V__BOTTOM,s__SelfConnectedObject)
        & s__instance(V__OBJECT,s__SelfConnectedObject) )
     => ( ( s__height(V__OBJECT,V__HEIGHT)
          & s__top(V__TOP,V__OBJECT)
          & s__bottom(V__BOTTOM,V__OBJECT) )
       => s__distance(V__TOP,V__BOTTOM,V__HEIGHT) ) ) ).

fof(kb_SUMO_4730,axiom,
    s__instance(s__MereologicalSumFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4731,axiom,
    s__instance(s__MereologicalSumFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4732,axiom,
    s__instance(s__MereologicalSumFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4733,axiom,
    s__domain(s__MereologicalSumFn__m,"1",s__Object) ).

fof(kb_SUMO_4734,axiom,
    s__domain(s__MereologicalSumFn__m,"2",s__Object) ).

fof(kb_SUMO_4735,axiom,
    s__range(s__MereologicalSumFn__m,s__Object) ).

fof(kb_SUMO_4736,axiom,
    s__relatedInternalConcept(s__MereologicalSumFn__m,s__MereologicalProductFn__m) ).

fof(kb_SUMO_4737,axiom,
    s__relatedInternalConcept(s__MereologicalSumFn__m,s__MereologicalDifferenceFn__m) ).

fof(kb_SUMO_4738,axiom,
    s__documentation(s__MereologicalSumFn__m,s__EnglishLanguage,'(&%MereologicalSumFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to either ?OBJ1 or ?OBJ2.') ).

fof(kb_SUMO_4739,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalSumFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__PART,V__OBJ3)
          <=> ( s__part(V__PART,V__OBJ1)
              | s__part(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_4740,axiom,
    s__instance(s__MereologicalProductFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4741,axiom,
    s__instance(s__MereologicalProductFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4742,axiom,
    s__instance(s__BinaryFunction__t,s__SetOrClass) ).

fof(kb_SUMO_4743,axiom,
    s__instance(s__MereologicalProductFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4744,axiom,
    s__domain(s__MereologicalProductFn__m,"1",s__Object) ).

fof(kb_SUMO_4745,axiom,
    s__domain(s__MereologicalProductFn__m,"2",s__Object) ).

fof(kb_SUMO_4746,axiom,
    s__range(s__MereologicalProductFn__m,s__Object) ).

fof(kb_SUMO_4747,axiom,
    s__relatedInternalConcept(s__MereologicalProductFn__m,s__MereologicalDifferenceFn__m) ).

fof(kb_SUMO_4748,axiom,
    s__documentation(s__MereologicalProductFn__m,s__EnglishLanguage,'(&%MereologicalProductFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to both ?OBJ1 and ?OBJ2.') ).

fof(kb_SUMO_4749,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalProductFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__part(V__PART,V__OBJ3)
          <=> ( s__part(V__PART,V__OBJ1)
              & s__part(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_4750,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4751,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__BinaryFunction) ).

fof(kb_SUMO_4752,axiom,
    s__instance(s__MereologicalDifferenceFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4753,axiom,
    s__domain(s__MereologicalDifferenceFn__m,"1",s__Object) ).

fof(kb_SUMO_4754,axiom,
    s__domain(s__MereologicalDifferenceFn__m,"2",s__Object) ).

fof(kb_SUMO_4755,axiom,
    s__range(s__MereologicalDifferenceFn__m,s__Object) ).

fof(kb_SUMO_4756,axiom,
    s__documentation(s__MereologicalDifferenceFn__m,s__EnglishLanguage,'(&%MereologicalDifferenceFn ?OBJ1 ?OBJ2) denotes the &%Object consisting of the parts which belong to ?OBJ1 and not to ?OBJ2.') ).

fof(kb_SUMO_4757,axiom,
    ! [V__OBJ1,V__OBJ2,V__OBJ3] :
      ( V__OBJ3 = s__MereologicalDifferenceFn(V__OBJ1,V__OBJ2)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ3,s__Object)
            & s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object) )
         => ( s__properPart(V__PART,V__OBJ3)
          <=> ( s__properPart(V__PART,V__OBJ1)
              & ~ s__properPart(V__PART,V__OBJ2) ) ) ) ) ).

fof(kb_SUMO_4758,axiom,
    s__instance(s__hole__m,s__BinaryPredicate) ).

fof(kb_SUMO_4759,axiom,
    s__instance(s__hole__m,s__SpatialRelation) ).

fof(kb_SUMO_4760,axiom,
    s__instance(s__hole__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4761,axiom,
    s__domain(s__hole__m,"1",s__Hole) ).

fof(kb_SUMO_4762,axiom,
    s__domain(s__hole__m,"2",s__SelfConnectedObject) ).

fof(kb_SUMO_4763,axiom,
    s__documentation(s__hole__m,s__EnglishLanguage,'(&%hole ?HOLE ?OBJ) means that ?HOLE is a &%Hole in ?OBJ. A &%Hole is a fillable body located at the &%surface an &%Object.') ).

fof(kb_SUMO_4764,axiom,
    s__subclass(s__Hole,s__Region) ).

fof(kb_SUMO_4765,axiom,
    s__instance(s__Hole__t,s__SetOrClass) ).

fof(kb_SUMO_4766,axiom,
    s__documentation(s__Hole,s__EnglishLanguage,'A hole is an immaterial body located at the surface of an &%Object. Since every &%Hole is ontologically dependent on its host (i.e., the object in which it is a hole), being a &%Hole is defined as being a &%hole in something. Note that two &%Holes may occupy the same region, or part of the same region, without sharing any parts. Any two hosts of a hole have a common proper part that entirely hosts the hole. A common host of two holes hosts all parts of the sum of those holes. Any object that includes the host of a hole is a host of that hole, unless its parts also include parts of that very hole. Overlapping holes have overlapping hosts. No hole is atomic. Holes are connected with their hosts. No hole can have a proper part that is externally connected with exactly the same things as the hole itself.') ).

fof(kb_SUMO_4767,axiom,
    ! [V__HOLE] :
      ( s__instance(V__HOLE,s__Hole)
    <=> ? [V__OBJ] :
          ( s__instance(V__OBJ,s__SelfConnectedObject)
          & s__hole(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_4768,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => ~ s__instance(V__OBJ,s__Hole) ) ) ).

fof(kb_SUMO_4769,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => ~ s__overlapsSpatially(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_4770,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__hole(V__HOLE,V__OBJ1)
          & s__hole(V__HOLE,V__OBJ2) )
       => ? [V__OBJ3] :
            ( s__instance(V__OBJ3,s__SelfConnectedObject)
            & s__properPart(V__OBJ3,s__MereologicalProductFn(V__OBJ1,V__OBJ2))
            & s__hole(V__HOLE,V__OBJ3) ) ) ) ).

fof(kb_SUMO_4771,axiom,
    ! [V__OBJ,V__HOLE2,V__HOLE1] :
      ( ( s__hole(V__HOLE1,V__OBJ)
        & s__hole(V__HOLE2,V__OBJ) )
     => ! [V__HOLE3] :
          ( ( s__instance(V__HOLE3,s__Hole)
            & s__instance(V__HOLE1,s__Hole)
            & s__instance(V__HOLE2,s__Hole)
            & s__instance(V__OBJ,s__SelfConnectedObject) )
         => ( s__part(V__HOLE3,s__MereologicalSumFn(V__HOLE1,V__HOLE2))
           => s__hole(V__HOLE3,V__OBJ) ) ) ) ).

fof(kb_SUMO_4772,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__hole(V__HOLE,V__OBJ1)
          & s__part(V__OBJ1,V__OBJ2) )
       => ( s__overlapsSpatially(V__HOLE,V__OBJ2)
          | s__hole(V__HOLE,V__OBJ2) ) ) ) ).

fof(kb_SUMO_4773,axiom,
    ! [V__HOLE2,V__HOLE1,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__SelfConnectedObject)
        & s__instance(V__OBJ1,s__SelfConnectedObject)
        & s__instance(V__HOLE1,s__Hole)
        & s__instance(V__HOLE2,s__Hole) )
     => ( ( s__hole(V__HOLE1,V__OBJ1)
          & s__hole(V__HOLE2,V__OBJ2)
          & s__overlapsSpatially(V__HOLE1,V__HOLE2) )
       => s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_4774,axiom,
    ! [V__HOLE1] :
      ( s__instance(V__HOLE1,s__Object)
     => ( s__instance(V__HOLE1,s__Hole)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Object)
            & s__properPart(V__HOLE2,V__HOLE1) ) ) ) ).

fof(kb_SUMO_4775,axiom,
    s__instance(s__HoleHostFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4776,axiom,
    s__instance(s__HoleHostFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4777,axiom,
    s__instance(s__HoleHostFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4778,axiom,
    s__instance(s__HoleHostFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4779,axiom,
    s__domain(s__HoleHostFn__m,"1",s__Hole) ).

fof(kb_SUMO_4780,axiom,
    s__range(s__HoleHostFn__m,s__Object) ).

fof(kb_SUMO_4781,axiom,
    s__documentation(s__HoleHostFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%Hole to the &%Object which is its principal host. The principle host of a &%Hole is its maximally connected host (a notion taken here to be defined only when the argument is a hole).') ).

fof(kb_SUMO_4782,axiom,
    ! [V__OBJ,V__HOLE] :
      ( ( s__instance(V__HOLE,s__Hole)
        & s__instance(V__OBJ,s__SelfConnectedObject) )
     => ( s__hole(V__HOLE,V__OBJ)
       => s__connected(V__HOLE,V__OBJ) ) ) ).

fof(kb_SUMO_4783,axiom,
    ! [V__HOLE2,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Object)
        & s__instance(V__HOLE2,s__Object) )
     => ( ( s__instance(V__HOLE1,s__Hole)
          & s__properPart(V__HOLE2,V__HOLE1) )
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__meetsSpatially(V__HOLE1,V__OBJ)
            & ~ s__meetsSpatially(V__HOLE2,V__OBJ) ) ) ) ).

fof(kb_SUMO_4784,axiom,
    s__instance(s__Fillable,s__ShapeAttribute) ).

fof(kb_SUMO_4785,axiom,
    s__documentation(s__Fillable,s__EnglishLanguage,'Something is &%Fillable if it can be filled by something else. Note that filled here means perfectly filled. Something is fillable just in case it is part of a hole, i.e., fillability is an exclusive property of holes and their parts.') ).

%FOL fof(kb_SUMO_4786,axiom,(( (! [V__OBJ,V__HOLE] : ((s__instance(V__HOLE,s__Hole) & s__instance(V__OBJ,s__Object)) => ((? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__holdsDuring(V__TIME,'s__fills(V__OBJ,V__HOLE)'))) => s__attribute(V__HOLE,s__Fillable)))) ))).

fof(kb_SUMO_4787,axiom,
    ! [V__HOLE1] :
      ( s__instance(V__HOLE1,s__Object)
     => ( s__attribute(V__HOLE1,s__Fillable)
      <=> ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Object)
            & s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE1,V__HOLE2) ) ) ) ).

fof(kb_SUMO_4788,axiom,
    s__subrelation(s__partiallyFills__m,s__located__m) ).

fof(kb_SUMO_4789,axiom,
    s__instance(s__partiallyFills__m,s__SpatialRelation) ).

fof(kb_SUMO_4790,axiom,
    s__instance(s__partiallyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4791,axiom,
    s__instance(s__AsymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_4792,axiom,
    s__domain(s__partiallyFills__m,"1",s__Object) ).

fof(kb_SUMO_4793,axiom,
    s__domain(s__partiallyFills__m,"2",s__Hole) ).

fof(kb_SUMO_4794,axiom,
    s__documentation(s__partiallyFills__m,s__EnglishLanguage,'(&%partiallyFills ?OBJ ?HOLE) means that ?OBJ &%completelyFills some part of ?HOLE. Note that if (&%partiallyFills ?OBJ1 ?HOLE) and (&%part ?OBJ1 ?OBJ2), then (&%partiallyFills ?OBJ2 ?HOLE). Note too that a partial filler need not be wholly inside a hole (it may stick out), which means that every complete filler also qualifies as (is a limit case of) a partial one.') ).

fof(kb_SUMO_4795,axiom,
    ! [V__OBJ,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( s__partiallyFills(V__OBJ,V__HOLE1)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE2,V__HOLE1)
            & s__completelyFills(V__OBJ,V__HOLE2) ) ) ) ).

fof(kb_SUMO_4796,axiom,
    s__instance(s__properlyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4797,axiom,
    s__subrelation(s__properlyFills__m,s__partiallyFills__m) ).

fof(kb_SUMO_4798,axiom,
    s__domain(s__properlyFills__m,"1",s__Object) ).

fof(kb_SUMO_4799,axiom,
    s__domain(s__properlyFills__m,"2",s__Hole) ).

fof(kb_SUMO_4800,axiom,
    s__documentation(s__properlyFills__m,s__EnglishLanguage,'(&%properlyFills ?OBJ ?HOLE) means that ?HOLE is properly (though perhaps incompletely) filled by ?OBJ, i.e. some part of ?HOLE is perfectly filled by ?OBJ. Note that &%properlyFills is the dual of &%completelyFills, and is so related to &%partiallyFills that ?OBJ &%properlyFills ?HOLE just in case ?OBJ &%partiallyFills every part of ?HOLE. (Thus, every perfect filler is both complete and proper in this sense). Every hole is connected with everything with which a proper filler of the hole is connected. Every proper part of a perfect filler of (a part of) a hole properly fills (that part of) that hole.') ).

fof(kb_SUMO_4801,axiom,
    ! [V__OBJ,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( s__properlyFills(V__OBJ,V__HOLE1)
       => ? [V__HOLE2] :
            ( s__instance(V__HOLE2,s__Hole)
            & s__part(V__HOLE2,V__HOLE1)
            & s__fills(V__OBJ,V__HOLE2) ) ) ) ).

fof(kb_SUMO_4802,axiom,
    s__instance(s__completelyFills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4803,axiom,
    s__subrelation(s__completelyFills__m,s__partiallyFills__m) ).

fof(kb_SUMO_4804,axiom,
    s__documentation(s__completelyFills__m,s__EnglishLanguage,'(&%completelyFills ?OBJ ?HOLE) means that some &%part of the &%Object ?OBJ fills the &%Hole ?HOLE. Note that if (&%completelyFills ?OBJ1 ?HOLE) and (&%part ?OBJ1 ?OBJ2), then (&%completelyFills ?OBJ2 ?HOLE). A complete filler of (a part of) a hole is connected with everything with which (that part of) the hole itself is connected. A perfect filler of (a part of) a hole completely fills every proper part of (that part of) that hole.') ).

fof(kb_SUMO_4805,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( ( s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( s__completelyFills(V__OBJ1,V__HOLE)
       => ? [V__OBJ2] :
            ( s__instance(V__OBJ2,s__Object)
            & s__part(V__OBJ2,V__OBJ1)
            & s__fills(V__OBJ2,V__HOLE) ) ) ) ).

fof(kb_SUMO_4806,axiom,
    s__instance(s__fills__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4807,axiom,
    s__subrelation(s__fills__m,s__completelyFills__m) ).

fof(kb_SUMO_4808,axiom,
    s__subrelation(s__fills__m,s__properlyFills__m) ).

fof(kb_SUMO_4809,axiom,
    s__domain(s__fills__m,"1",s__Object) ).

fof(kb_SUMO_4810,axiom,
    s__domain(s__fills__m,"2",s__Hole) ).

fof(kb_SUMO_4811,axiom,
    s__relatedInternalConcept(s__fills__m,s__Fillable) ).

fof(kb_SUMO_4812,axiom,
    s__documentation(s__fills__m,s__EnglishLanguage,'Holes can be filled. (&%fills ?OBJ ?HOLE) means that the &%Object ?OBJ fills the &%Hole ?HOLE. Note that &%fills here means perfectly filled. Perfect fillers and fillable entities have no parts in common (rather, they may occupy the same spatial region).') ).

fof(kb_SUMO_4813,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__fills(V__OBJ1,V__HOLE)
          & s__attribute(V__OBJ2,s__Fillable) )
       => ~ s__overlapsSpatially(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_4814,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( s__completelyFills(V__OBJ1,V__HOLE)
     => ! [V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object)
            & s__instance(V__HOLE,s__Hole) )
         => ( s__connected(V__OBJ2,V__HOLE)
           => s__connected(V__OBJ2,V__OBJ1) ) ) ) ).

fof(kb_SUMO_4815,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__properlyFills(V__OBJ1,V__HOLE)
          & s__connected(V__OBJ2,V__OBJ1) )
       => s__connected(V__HOLE,V__OBJ2) ) ) ).

fof(kb_SUMO_4816,axiom,
    ! [V__OBJ,V__HOLE2,V__HOLE1] :
      ( ( s__instance(V__HOLE1,s__Hole)
        & s__instance(V__HOLE2,s__Hole)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__fills(V__OBJ,V__HOLE1)
          & s__properPart(V__HOLE2,V__HOLE1) )
       => s__completelyFills(V__OBJ,V__HOLE2) ) ) ).

fof(kb_SUMO_4817,axiom,
    ! [V__HOLE,V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__HOLE,s__Hole) )
     => ( ( s__fills(V__OBJ1,V__HOLE)
          & s__properPart(V__OBJ2,V__OBJ1) )
       => s__properlyFills(V__OBJ2,V__HOLE) ) ) ).

fof(kb_SUMO_4818,axiom,
    s__instance(s__HoleSkinFn__m,s__SpatialRelation) ).

fof(kb_SUMO_4819,axiom,
    s__instance(s__HoleSkinFn__m,s__UnaryFunction) ).

fof(kb_SUMO_4820,axiom,
    s__instance(s__HoleSkinFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_4821,axiom,
    s__instance(s__HoleSkinFn__m,s__AsymmetricRelation) ).

fof(kb_SUMO_4822,axiom,
    s__domain(s__HoleSkinFn__m,"1",s__Hole) ).

fof(kb_SUMO_4823,axiom,
    s__range(s__HoleSkinFn__m,s__Object) ).

fof(kb_SUMO_4824,axiom,
    s__documentation(s__HoleSkinFn__m,s__EnglishLanguage,'A &%UnaryFunction that maps a &%Hole to the skin of the &%Hole. The skin of a &%Hole is the fusion of those superficial parts (see &%superficialPart) of the &%Holes principal host (see &%HoleHostFn) with which the &%Hole is externally connected.') ).

fof(kb_SUMO_4825,axiom,
    ! [V__HOLE,V__OBJ1] :
      ( V__OBJ1 = s__HoleSkinFn(V__HOLE)
     => ! [V__OBJ2] :
          ( ( s__instance(V__OBJ2,s__Object)
            & s__instance(V__OBJ1,s__Object)
            & s__instance(V__HOLE,s__Hole) )
         => ( s__overlapsSpatially(V__OBJ2,V__OBJ1)
          <=> ? [V__OBJ3] :
                ( s__instance(V__OBJ3,s__Object)
                & s__superficialPart(V__OBJ3,s__HoleHostFn(V__HOLE))
                & s__meetsSpatially(V__HOLE,V__OBJ3)
                & s__overlapsSpatially(V__OBJ2,V__OBJ3) ) ) ) ) ).

fof(kb_SUMO_4826,axiom,
    s__instance(s__subProcess__m,s__BinaryPredicate) ).

fof(kb_SUMO_4827,axiom,
    s__instance(s__subProcess__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_4828,axiom,
    s__domain(s__subProcess__m,"1",s__Process) ).

fof(kb_SUMO_4829,axiom,
    s__domain(s__subProcess__m,"2",s__Process) ).

fof(kb_SUMO_4830,axiom,
    s__documentation(s__subProcess__m,s__EnglishLanguage,'(&%subProcess ?SUBPROC ?PROC) means that ?SUBPROC is a subprocess of ?PROC. A subprocess is here understood as a temporally distinguished part (proper or not) of a &%Process.') ).

fof(kb_SUMO_4831,axiom,
    ! [V__SUBPROC,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBPROC,s__Process) )
     => ( s__subProcess(V__SUBPROC,V__PROC)
       => s__temporalPart(s__WhenFn(V__SUBPROC),s__WhenFn(V__PROC)) ) ) ).

fof(kb_SUMO_4832,axiom,
    s__subclass(s__BiologicalProcess,s__InternalChange) ).

fof(kb_SUMO_4833,axiom,
    s__documentation(s__BiologicalProcess,s__EnglishLanguage,'A &%Process embodied in an &%Organism.') ).

fof(kb_SUMO_4834,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__BiologicalProcess)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__instance(V__OBJ,s__Organism)
            & s__eventLocated(V__PROC,V__OBJ) ) ) ) ).

fof(kb_SUMO_4835,axiom,
    ! [V__ORG,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__PROC,s__BiologicalProcess)
          & s__experiencer(V__PROC,V__ORG) )
       => s__instance(V__ORG,s__Organism) ) ) ).

fof(kb_SUMO_4836,axiom,
    s__subclass(s__PhysiologicProcess,s__BiologicalProcess) ).

fof(kb_SUMO_4837,axiom,
    s__instance(s__PhysiologicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4838,axiom,
    s__documentation(s__PhysiologicProcess,s__EnglishLanguage,'A normal process of an &%Organism or part of an &%Organism.') ).

fof(kb_SUMO_4839,axiom,
    s__subclass(s__AutonomicProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_4840,axiom,
    s__disjoint(s__AutonomicProcess,s__IntentionalProcess) ).

fof(kb_SUMO_4841,axiom,
    s__documentation(s__AutonomicProcess,s__EnglishLanguage,'The class of &%PhysiologicProcesses of which there is not conscious awareness and control.') ).

fof(kb_SUMO_4842,axiom,
    s__subclass(s__OrganOrTissueProcess,s__AutonomicProcess) ).

fof(kb_SUMO_4843,axiom,
    s__instance(s__OrganOrTissueProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4844,axiom,
    s__disjoint(s__OrganOrTissueProcess,s__OrganismProcess) ).

fof(kb_SUMO_4845,axiom,
    s__documentation(s__OrganOrTissueProcess,s__EnglishLanguage,'A &%PhysiologicProcess of a particular &%Organ or &%Tissue.') ).

fof(kb_SUMO_4846,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__OrganOrTissueProcess)
       => ? [V__THING] :
            ( s__instance(V__THING,s__Object)
            & s__eventLocated(V__PROC,V__THING)
            & ( s__instance(V__THING,s__Organ)
              | s__instance(V__THING,s__Tissue) ) ) ) ) ).

fof(kb_SUMO_4847,axiom,
    s__subclass(s__OrganismProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_4848,axiom,
    s__documentation(s__OrganismProcess,s__EnglishLanguage,'A physiologic function of the &%Organism as a whole, of multiple organ systems or of multiple &%Organs or &%Tissues.') ).

fof(kb_SUMO_4849,axiom,
    s__subclass(s__Birth,s__OrganismProcess) ).

fof(kb_SUMO_4850,axiom,
    s__instance(s__Birth__t,s__SetOrClass) ).

fof(kb_SUMO_4851,axiom,
    s__instance(s__OrganismProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4852,axiom,
    s__documentation(s__Birth,s__EnglishLanguage,'The &%Process of being born.') ).

fof(kb_SUMO_4853,axiom,
    ! [V__AGENT,V__BIRTH] :
      ( ( s__instance(V__BIRTH,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__BIRTH,s__Birth)
          & s__experiencer(V__BIRTH,V__AGENT) )
       => ? [V__DEATH] :
            ( s__instance(V__DEATH,s__Process)
            & s__instance(V__DEATH,s__Death)
            & s__experiencer(V__DEATH,V__AGENT) ) ) ) ).

fof(kb_SUMO_4854,axiom,
    s__subclass(s__Death,s__OrganismProcess) ).

fof(kb_SUMO_4855,axiom,
    s__instance(s__Death__t,s__SetOrClass) ).

fof(kb_SUMO_4856,axiom,
    s__documentation(s__Death,s__EnglishLanguage,'The &%Process of dying.') ).

%FOL fof(kb_SUMO_4857,axiom,(( (! [V__OBJ,V__ORG,V__DEATH] : ((s__instance(V__DEATH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DEATH,s__Death) & s__instance(V__ORG,s__Organism) & s__experiencer(V__DEATH,V__ORG)) => (? [V__REM] : (s__instance(V__REM,s__Object) & s__result(V__DEATH,V__REM) & s__instance(V__REM,s__OrganicObject) & s__holdsDuring(s__FutureFn(s__WhenFn(V__DEATH)),'s__attribute(V__REM,s__Dead)') & (s__holdsDuring(s__ImmediateFutureFn(s__WhenFn(V__DEATH)),'s__part(V__OBJ,V__REM)') => s__holdsDuring(s__ImmediatePastFn(s__WhenFn(V__DEATH)),'s__part(V__OBJ,V__ORG)'))))))) ))).

fof(kb_SUMO_4858,axiom,
    s__subclass(s__Breathing,s__OrganismProcess) ).

fof(kb_SUMO_4859,axiom,
    s__subclass(s__Breathing,s__AutonomicProcess) ).

fof(kb_SUMO_4860,axiom,
    s__instance(s__Breathing__t,s__SetOrClass) ).

fof(kb_SUMO_4861,axiom,
    s__documentation(s__Breathing,s__EnglishLanguage,'The &%Process of respiration, by which oxygen is made available to an &%Animal. This covers processes of inhalation, exhalation, and alternations between the two.') ).

fof(kb_SUMO_4862,axiom,
    s__subclass(s__Ingesting,s__OrganismProcess) ).

fof(kb_SUMO_4863,axiom,
    s__documentation(s__Ingesting,s__EnglishLanguage,'The &%Process by which food is taken into an &%Animal.') ).

fof(kb_SUMO_4864,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Ingesting)
          & s__resource(V__ACT,V__FOOD) )
       => s__instance(V__FOOD,s__FoodForFn(s__Organism)) ) ) ).

fof(kb_SUMO_4865,axiom,
    s__subclass(s__Eating,s__Ingesting) ).

fof(kb_SUMO_4866,axiom,
    s__instance(s__Eating__t,s__SetOrClass) ).

fof(kb_SUMO_4867,axiom,
    s__documentation(s__Eating,s__EnglishLanguage,'The &%Process by which solid food is incorporated into an &%Animal.') ).

fof(kb_SUMO_4868,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Eating)
          & s__resource(V__ACT,V__FOOD) )
       => s__attribute(V__FOOD,s__Solid) ) ) ).

fof(kb_SUMO_4869,axiom,
    s__subclass(s__Drinking,s__Ingesting) ).

fof(kb_SUMO_4870,axiom,
    s__instance(s__Drinking__t,s__SetOrClass) ).

fof(kb_SUMO_4871,axiom,
    s__instance(s__Ingesting__t,s__SetOrClass) ).

fof(kb_SUMO_4872,axiom,
    s__documentation(s__Drinking,s__EnglishLanguage,'The &%Process by which liquid food, i.e. &%Beverages, are incorporated into an &%Animal.') ).

fof(kb_SUMO_4873,axiom,
    ! [V__ACT,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__Drinking)
          & s__resource(V__ACT,V__FOOD) )
       => s__attribute(V__FOOD,s__Liquid) ) ) ).

fof(kb_SUMO_4874,axiom,
    s__subclass(s__Digesting,s__OrganismProcess) ).

fof(kb_SUMO_4875,axiom,
    s__instance(s__Digesting__t,s__SetOrClass) ).

fof(kb_SUMO_4876,axiom,
    s__subclass(s__Digesting,s__AutonomicProcess) ).

fof(kb_SUMO_4877,axiom,
    s__documentation(s__Digesting,s__EnglishLanguage,'The &%Process by which &%Food that has been ingested is broken down into simpler chemical compounds and absorbed by the &%Organism.') ).

fof(kb_SUMO_4878,axiom,
    ! [V__ORGANISM,V__DIGEST] :
      ( ( s__instance(V__DIGEST,s__Process)
        & s__instance(V__ORGANISM,s__Agent) )
     => ( ( s__instance(V__DIGEST,s__Digesting)
          & s__agent(V__DIGEST,V__ORGANISM) )
       => ? [V__INGEST] :
            ( s__instance(V__INGEST,s__Process)
            & s__instance(V__INGEST,s__Ingesting)
            & s__agent(V__INGEST,V__ORGANISM)
            & s__overlapsTemporally(s__WhenFn(V__INGEST),s__WhenFn(V__DIGEST)) ) ) ) ).

fof(kb_SUMO_4879,axiom,
    ! [V__DIGEST] :
      ( s__instance(V__DIGEST,s__Process)
     => ( s__instance(V__DIGEST,s__Digesting)
       => ? [V__DECOMP] :
            ( s__instance(V__DECOMP,s__Process)
            & s__instance(V__DECOMP,s__ChemicalDecomposition)
            & s__subProcess(V__DECOMP,V__DIGEST) ) ) ) ).

fof(kb_SUMO_4880,axiom,
    s__subclass(s__Growth,s__AutonomicProcess) ).

fof(kb_SUMO_4881,axiom,
    s__instance(s__Growth__t,s__SetOrClass) ).

fof(kb_SUMO_4882,axiom,
    s__instance(s__AutonomicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4883,axiom,
    s__documentation(s__Growth,s__EnglishLanguage,'The &%Process of biological development in which an &%Organism or part of an &%Organism changes its form or its size.') ).

fof(kb_SUMO_4884,axiom,
    s__subclass(s__Replication,s__OrganismProcess) ).

fof(kb_SUMO_4885,axiom,
    s__documentation(s__Replication,s__EnglishLanguage,'The &%Process of biological reproduction. This can be either a sexual or an asexual process.') ).

fof(kb_SUMO_4886,axiom,
    ! [V__CHILD,V__REP,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__REP,s__Process)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__instance(V__REP,s__Replication)
          & s__agent(V__REP,V__PARENT)
          & s__result(V__REP,V__CHILD) )
       => s__parent(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_4887,axiom,
    ! [V__REP] :
      ( s__instance(V__REP,s__Process)
     => ( s__instance(V__REP,s__Replication)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__ReproductiveBody)
            & s__result(V__REP,V__BODY) ) ) ) ).

fof(kb_SUMO_4888,axiom,
    s__subclass(s__SexualReproduction,s__Replication) ).

fof(kb_SUMO_4889,axiom,
    s__instance(s__SexualReproduction__t,s__SetOrClass) ).

fof(kb_SUMO_4890,axiom,
    s__instance(s__Replication__t,s__SetOrClass) ).

fof(kb_SUMO_4891,axiom,
    s__disjoint(s__SexualReproduction,s__AsexualReproduction) ).

fof(kb_SUMO_4892,axiom,
    s__documentation(s__SexualReproduction,s__EnglishLanguage,'Sexual &%Processes of biological reproduction.') ).

fof(kb_SUMO_4893,axiom,
    ! [V__ORGANISM,V__REP] :
      ( ( s__instance(V__REP,s__Process)
        & s__instance(V__ORGANISM,s__Organism) )
     => ( ( s__instance(V__REP,s__SexualReproduction)
          & s__result(V__REP,V__ORGANISM) )
       => ? [V__MOTHER,V__FATHER] :
            ( s__instance(V__FATHER,s__Organism)
            & s__instance(V__MOTHER,s__Organism)
            & s__mother(V__ORGANISM,V__MOTHER)
            & s__father(V__ORGANISM,V__FATHER) ) ) ) ).

fof(kb_SUMO_4894,axiom,
    s__subclass(s__AsexualReproduction,s__Replication) ).

fof(kb_SUMO_4895,axiom,
    s__instance(s__AsexualReproduction__t,s__SetOrClass) ).

fof(kb_SUMO_4896,axiom,
    s__documentation(s__AsexualReproduction,s__EnglishLanguage,'Asexual &%Processes of biological reproduction.') ).

fof(kb_SUMO_4897,axiom,
    ! [V__PARENT2,V__ORGANISM,V__PARENT1,V__REP] :
      ( ( s__instance(V__REP,s__Process)
        & s__instance(V__PARENT1,s__Organism)
        & s__instance(V__ORGANISM,s__Organism)
        & s__instance(V__PARENT2,s__Organism) )
     => ( ( s__instance(V__REP,s__AsexualReproduction)
          & s__result(V__REP,V__ORGANISM)
          & s__parent(V__ORGANISM,V__PARENT1)
          & s__parent(V__ORGANISM,V__PARENT2) )
       => V__PARENT1 = V__PARENT2 ) ) ).

fof(kb_SUMO_4898,axiom,
    s__subclass(s__PsychologicalProcess,s__BiologicalProcess) ).

fof(kb_SUMO_4899,axiom,
    s__documentation(s__PsychologicalProcess,s__EnglishLanguage,'A &%BiologicalProcess which takes place in the mind or brain of an &%Organism and which may be manifested in the behavior of the &%Organism.') ).

fof(kb_SUMO_4900,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__PsychologicalProcess)
       => ? [V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__Agent)
            & s__instance(V__ANIMAL,s__Animal)
            & s__experiencer(V__PROCESS,V__ANIMAL) ) ) ) ).

fof(kb_SUMO_4901,axiom,
    s__subclass(s__PathologicProcess,s__BiologicalProcess) ).

fof(kb_SUMO_4902,axiom,
    s__instance(s__PathologicProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4903,axiom,
    s__instance(s__BiologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4904,axiom,
    s__disjoint(s__PathologicProcess,s__PhysiologicProcess) ).

fof(kb_SUMO_4905,axiom,
    s__documentation(s__PathologicProcess,s__EnglishLanguage,'A disordered process, activity, or state of the &%Organism as a whole, of a body system or systems, or of multiple &%Organs or &%Tissues. Included here are normal responses to a negative stimulus as well as patholologic conditions or states that are less specific than a disease. Pathologic functions frequently have systemic effects.') ).

fof(kb_SUMO_4906,axiom,
    ! [V__PATH,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__PATH,s__Process) )
     => ( ( s__instance(V__PATH,s__PathologicProcess)
          & s__experiencer(V__PATH,V__ORG) )
       => ? [V__PART,V__DISEASE] :
            ( s__instance(V__DISEASE,s__Attribute)
            & s__instance(V__PART,s__Object)
            & s__part(V__PART,V__ORG)
            & s__instance(V__DISEASE,s__DiseaseOrSyndrome)
            & s__attribute(V__PART,V__DISEASE) ) ) ) ).

fof(kb_SUMO_4907,axiom,
    s__subclass(s__Injuring,s__PathologicProcess) ).

fof(kb_SUMO_4908,axiom,
    s__subclass(s__Injuring,s__Damaging) ).

fof(kb_SUMO_4909,axiom,
    s__instance(s__Injuring__t,s__SetOrClass) ).

fof(kb_SUMO_4910,axiom,
    s__instance(s__Damaging__t,s__SetOrClass) ).

fof(kb_SUMO_4911,axiom,
    s__documentation(s__Injuring,s__EnglishLanguage,'The process of creating a traumatic wound or injury. Since &%Injuring is not possible without some biologic function of the organism being injured, it is a subclass of &%BiologicalProcess.') ).

fof(kb_SUMO_4912,axiom,
    ! [V__INJ] :
      ( s__instance(V__INJ,s__Process)
     => ( s__instance(V__INJ,s__Injuring)
       => ? [V__STRUCT] :
            ( s__instance(V__STRUCT,s__AnatomicalStructure)
            & s__patient(V__INJ,V__STRUCT) ) ) ) ).

fof(kb_SUMO_4913,axiom,
    ! [V__INJ] :
      ( s__instance(V__INJ,s__Process)
     => ( s__instance(V__INJ,s__Injuring)
      <=> ( s__instance(V__INJ,s__Damaging)
          & ? [V__ORGANISM] :
              ( s__instance(V__ORGANISM,s__Organism)
              & s__patient(V__INJ,V__ORGANISM) ) ) ) ) ).

fof(kb_SUMO_4914,axiom,
    s__subclass(s__Poisoning,s__Injuring) ).

fof(kb_SUMO_4915,axiom,
    s__instance(s__Poisoning__t,s__SetOrClass) ).

fof(kb_SUMO_4916,axiom,
    s__documentation(s__Poisoning,s__EnglishLanguage,'A &%Poisoning is caused by an external substance. Since &%Poisoning is not possible without some biologic function which affects the &%Organism being injured, it is a subclass of &%BiologicalProcess.') ).

fof(kb_SUMO_4917,axiom,
    ! [V__POISON] :
      ( s__instance(V__POISON,s__Process)
     => ( s__instance(V__POISON,s__Poisoning)
       => ? [V__THING] :
            ( s__patient(V__POISON,V__THING)
            & ( s__instance(V__THING,s__Organism)
              | s__instance(V__THING,s__AnatomicalStructure) ) ) ) ) ).

fof(kb_SUMO_4918,axiom,
    ! [V__POISON] :
      ( s__instance(V__POISON,s__Process)
     => ( s__instance(V__POISON,s__Poisoning)
       => ? [V__SUBSTANCE] :
            ( s__instance(V__SUBSTANCE,s__Object)
            & s__instance(V__SUBSTANCE,s__BiologicallyActiveSubstance)
            & s__instrument(V__POISON,V__SUBSTANCE) ) ) ) ).

fof(kb_SUMO_4919,axiom,
    s__documentation(s__NaturalProcess,s__EnglishLanguage,'A &%Process that take place in nature spontanously.') ).

fof(kb_SUMO_4920,axiom,
    s__subclass(s__NaturalProcess,s__Process) ).

fof(kb_SUMO_4921,axiom,
    s__instance(s__NaturalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4922,axiom,
    s__disjoint(s__NaturalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_4923,axiom,
    s__subclass(s__IntentionalProcess,s__Process) ).

fof(kb_SUMO_4924,axiom,
    s__documentation(s__IntentionalProcess,s__EnglishLanguage,'A &%Process that has a specific purpose for the &%CognitiveAgent who performs it.') ).

fof(kb_SUMO_4925,axiom,
    ! [V__AGENT,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__PROC,s__IntentionalProcess)
          & s__agent(V__PROC,V__AGENT) )
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurposeForAgent(V__PROC,V__PURP,V__AGENT) ) ) ) ).

fof(kb_SUMO_4926,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__IntentionalProcess)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__CognitiveAgent)
            & s__agent(V__PROC,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_4927,axiom,(( (! [V__HUMAN,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__HUMAN,s__Agent)) => ((s__instance(V__PROC,s__IntentionalProcess) & s__agent(V__PROC,V__HUMAN) & s__instance(V__HUMAN,s__Animal)) => s__holdsDuring(s__WhenFn(V__PROC),'s__attribute(V__HUMAN,s__Awake)')))) ))).

fof(kb_SUMO_4928,axiom,
    s__subclass(s__IntentionalPsychologicalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_4929,axiom,
    s__subclass(s__IntentionalPsychologicalProcess,s__PsychologicalProcess) ).

fof(kb_SUMO_4930,axiom,
    s__instance(s__PsychologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4931,axiom,
    s__documentation(s__IntentionalPsychologicalProcess,s__EnglishLanguage,'An &%IntentionalProcess that can be realized entirely within the mind or brain of an &%Organism. Thus, for example, &%Reasoning is a subclass of &%IntentionalPsychologicalProcess, because one can reason simply by exercising ones mind/brain. On the other hand, &%RecreationOrExercise is not a subclass of &%IntentionalPsychologicalProcess, because many instances of &%RecreationOrExercise necessarily have &%subProcesses of &%BodyMotion.') ).

fof(kb_SUMO_4932,axiom,
    s__subclass(s__RecreationOrExercise,s__IntentionalProcess) ).

fof(kb_SUMO_4933,axiom,
    s__instance(s__RecreationOrExercise__t,s__SetOrClass) ).

fof(kb_SUMO_4934,axiom,
    s__documentation(s__RecreationOrExercise,s__EnglishLanguage,'A &%Process that is carried out for the purpose of recreation or exercise. Since &%RecreationOrExercise is a subclass of &%IntentionalProcess, the intent of a process determines whether or not it is an instance of the class. Hence, if John and Bill watch the same program on television, and John watches it to relax while Bill watches it solely to satisfy an educational requirement, then Johns watching the movie is an instance of &%RecreationOrExercise, while Bills is not (both cases of watching the television program would however be in the class of &%Seeing, since being an instance of this latter class is not determined by intention).') ).

fof(kb_SUMO_4935,axiom,
    s__subclass(s__OrganizationalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_4936,axiom,
    s__documentation(s__OrganizationalProcess,s__EnglishLanguage,'An &%IntentionalProcess that involves an &%Organization.') ).

fof(kb_SUMO_4937,axiom,
    ! [V__ACT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__OrganizationalProcess)
          & s__agent(V__ACT,V__AGENT) )
       => ( s__instance(V__AGENT,s__Organization)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Collection)
              & s__instance(V__ORG,s__Organization)
              & s__member(V__AGENT,V__ORG) ) ) ) ) ).

fof(kb_SUMO_4938,axiom,
    s__subclass(s__Election,s__OrganizationalProcess) ).

fof(kb_SUMO_4939,axiom,
    s__instance(s__Election__t,s__SetOrClass) ).

fof(kb_SUMO_4940,axiom,
    s__documentation(s__Election,s__EnglishLanguage,'&%Election is the class of events conducted by an organization, in which qualified participants vote for officers, adopt resolutions, or settle other issues in that &%Organization.') ).

fof(kb_SUMO_4941,axiom,
    s__subclass(s__ReligiousProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_4942,axiom,
    s__instance(s__ReligiousProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4943,axiom,
    s__documentation(s__ReligiousProcess,s__EnglishLanguage,'An &%OrganizationalProcess that is carried out within or by a &%ReligiousOrganization.') ).

fof(kb_SUMO_4944,axiom,
    ! [V__ACT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ACT,s__Process) )
     => ( ( s__instance(V__ACT,s__ReligiousProcess)
          & s__agent(V__ACT,V__AGENT) )
       => ( s__instance(V__AGENT,s__ReligiousOrganization)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Collection)
              & s__member(V__AGENT,V__ORG)
              & s__instance(V__ORG,s__ReligiousOrganization) ) ) ) ) ).

fof(kb_SUMO_4945,axiom,
    s__subclass(s__JoiningAnOrganization,s__OrganizationalProcess) ).

fof(kb_SUMO_4946,axiom,
    s__instance(s__JoiningAnOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_4947,axiom,
    s__documentation(s__JoiningAnOrganization,s__EnglishLanguage,'The &%OrganizationalProcess of becoming a &%member of an &%Organization.') ).

%FOL fof(kb_SUMO_4948,axiom,(( (! [V__PERSON,V__JOIN,V__ORG] : ((s__instance(V__ORG,s__Collection) & s__instance(V__JOIN,s__Process) & s__instance(V__PERSON,s__Agent) & s__instance(V__PERSON,s__SelfConnectedObject)) => ((s__instance(V__JOIN,s__JoiningAnOrganization) & s__instance(V__ORG,s__Organization) & s__agent(V__JOIN,V__PERSON) & s__patient(V__JOIN,V__ORG)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__JOIN)),'(~ s__member(V__PERSON,V__ORG))') & s__holdsDuring(s__EndFn(s__WhenFn(V__JOIN)),'s__member(V__PERSON,V__ORG)'))))) ))).

fof(kb_SUMO_4949,axiom,
    s__subclass(s__LeavingAnOrganization,s__OrganizationalProcess) ).

fof(kb_SUMO_4950,axiom,
    s__disjoint(s__LeavingAnOrganization,s__JoiningAnOrganization) ).

fof(kb_SUMO_4951,axiom,
    s__documentation(s__LeavingAnOrganization,s__EnglishLanguage,'The &%OrganizationalProcess of leaving an &%Organization, whether voluntarily or involuntarily.') ).

%FOL fof(kb_SUMO_4952,axiom,(( (! [V__PERSON,V__LEAVE,V__ORG] : ((s__instance(V__ORG,s__Collection) & s__instance(V__LEAVE,s__Process) & s__instance(V__PERSON,s__Agent) & s__instance(V__PERSON,s__SelfConnectedObject)) => ((s__instance(V__LEAVE,s__LeavingAnOrganization) & s__instance(V__ORG,s__Organization) & s__agent(V__LEAVE,V__PERSON) & s__patient(V__LEAVE,V__ORG)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__LEAVE)),'s__member(V__PERSON,V__ORG)') & s__holdsDuring(s__EndFn(s__WhenFn(V__LEAVE)),'(~ s__member(V__PERSON,V__ORG))'))))) ))).

fof(kb_SUMO_4953,axiom,
    s__subclass(s__Graduation,s__LeavingAnOrganization) ).

fof(kb_SUMO_4954,axiom,
    s__instance(s__Graduation__t,s__SetOrClass) ).

fof(kb_SUMO_4955,axiom,
    s__instance(s__LeavingAnOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_4956,axiom,
    s__documentation(s__Graduation,s__EnglishLanguage,'The &%OrganizationalProcess of graduating from an &%EducationalOrganization.') ).

fof(kb_SUMO_4957,axiom,
    ! [V__ORG,V__GRAD] :
      ( ( s__instance(V__GRAD,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__GRAD,s__Graduation)
          & s__agent(V__GRAD,V__ORG) )
       => s__instance(V__ORG,s__EducationalOrganization) ) ) ).

fof(kb_SUMO_4958,axiom,
    s__subclass(s__Matriculation,s__JoiningAnOrganization) ).

fof(kb_SUMO_4959,axiom,
    s__instance(s__Matriculation__t,s__SetOrClass) ).

fof(kb_SUMO_4960,axiom,
    s__documentation(s__Matriculation,s__EnglishLanguage,'The &%OrganizationalProcess of joining an &%EducationalOrganization as a student.') ).

fof(kb_SUMO_4961,axiom,
    ! [V__MAT,V__ORG] :
      ( ( s__instance(V__ORG,s__Agent)
        & s__instance(V__MAT,s__Process) )
     => ( ( s__instance(V__MAT,s__Matriculation)
          & s__agent(V__MAT,V__ORG) )
       => s__instance(V__ORG,s__EducationalOrganization) ) ) ).

fof(kb_SUMO_4962,axiom,
    s__subclass(s__Hiring,s__JoiningAnOrganization) ).

fof(kb_SUMO_4963,axiom,
    s__instance(s__Hiring__t,s__SetOrClass) ).

fof(kb_SUMO_4964,axiom,
    s__documentation(s__Hiring,s__EnglishLanguage,'&%OrganizationalProcesses where someone is made an employee of an &%Organization.') ).

%FOL fof(kb_SUMO_4965,axiom,(( (! [V__PERSON,V__ORG,V__HIRE] : ((s__instance(V__HIRE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__HIRE,s__Hiring) & s__instance(V__ORG,s__Organization) & s__agent(V__HIRE,V__ORG) & s__patient(V__HIRE,V__PERSON)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__HIRE)),'(~ s__employs(V__ORG,V__PERSON))') & s__holdsDuring(s__EndFn(s__WhenFn(V__HIRE)),'s__employs(V__ORG,V__PERSON)'))))) ))).

fof(kb_SUMO_4966,axiom,
    s__subclass(s__TerminatingEmployment,s__LeavingAnOrganization) ).

fof(kb_SUMO_4967,axiom,
    s__instance(s__TerminatingEmployment__t,s__SetOrClass) ).

fof(kb_SUMO_4968,axiom,
    s__documentation(s__TerminatingEmployment,s__EnglishLanguage,'&%OrganizationalProcesses where someone ceases to be an employee of an &%Organization. Note that this covers being laid off, being fired, and voluntarily leaving a job.') ).

%FOL fof(kb_SUMO_4969,axiom,(( (! [V__PERSON,V__ORG,V__FIRE] : ((s__instance(V__FIRE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__FIRE,s__TerminatingEmployment) & s__instance(V__ORG,s__Organization) & s__agent(V__FIRE,V__ORG) & s__patient(V__FIRE,V__PERSON)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__FIRE)),'s__employs(V__ORG,V__PERSON)') & s__holdsDuring(s__EndFn(s__WhenFn(V__FIRE)),'(~ s__employs(V__ORG,V__PERSON))'))))) ))).

fof(kb_SUMO_4970,axiom,
    s__subclass(s__PoliticalProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_4971,axiom,
    s__instance(s__PoliticalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4972,axiom,
    s__instance(s__OrganizationalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4973,axiom,
    s__documentation(s__PoliticalProcess,s__EnglishLanguage,'An &%OrganizationalProcess carried out by, for or against officially constituted governments. Some examples would be voting on proposed legislation, electing a government representative, or even overthrowing a government in a revolution.') ).

fof(kb_SUMO_4974,axiom,
    ! [V__PROC] :
      ( s__instance(V__PROC,s__Process)
     => ( s__instance(V__PROC,s__PoliticalProcess)
       => ? [V__POL] :
            ( s__instance(V__POL,s__Agent)
            & ( s__instance(V__POL,s__Government)
              | ? [V__GOV] :
                  ( s__instance(V__GOV,s__Collection)
                  & s__instance(V__POL,s__SelfConnectedObject)
                  & s__instance(V__GOV,s__Government)
                  & s__member(V__POL,V__GOV) ) )
            & ( s__agent(V__PROC,V__POL)
              | s__patient(V__PROC,V__POL) ) ) ) ) ).

fof(kb_SUMO_4975,axiom,
    s__subclass(s__JudicialProcess,s__PoliticalProcess) ).

fof(kb_SUMO_4976,axiom,
    s__documentation(s__JudicialProcess,s__EnglishLanguage,'Any legal proceeding which is conducted by a &%JudicialOrganization. Note that there is an important difference between the concepts &%LegalAction and &%JudicialProcess. The former refers to legal claims that are brought by a plaintiff, e.g. law suits, while the second refers to trials and other sorts of judicial hearings where the merits of a &%LegalAction are decided.') ).

fof(kb_SUMO_4977,axiom,
    ! [V__ORG,V__PROCESS] :
      ( ( s__instance(V__PROCESS,s__Process)
        & s__instance(V__ORG,s__Agent) )
     => ( ( s__instance(V__PROCESS,s__JudicialProcess)
          & s__agent(V__PROCESS,V__ORG)
          & s__instance(V__ORG,s__Organization) )
       => s__instance(V__ORG,s__JudicialOrganization) ) ) ).

fof(kb_SUMO_4978,axiom,
    s__subclass(s__LegalDecision,s__JudicialProcess) ).

fof(kb_SUMO_4979,axiom,
    s__instance(s__LegalDecision__t,s__SetOrClass) ).

fof(kb_SUMO_4980,axiom,
    s__instance(s__JudicialProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4981,axiom,
    s__subclass(s__LegalDecision,s__Declaring) ).

fof(kb_SUMO_4982,axiom,
    s__documentation(s__LegalDecision,s__EnglishLanguage,'A decision issued by a court with respect to a &%LegalAction. Note that a &%LegalDecision is the act of &%Declaring a decision of a court, it is not the act of judge or jury &%Deciding the merits of a particular &%LegalAction.') ).

fof(kb_SUMO_4983,axiom,
    ! [V__DECISION] :
      ( s__instance(V__DECISION,s__LegalDecision)
     => ? [V__ACTION] :
          ( s__instance(V__ACTION,s__LegalAction)
          & s__refers(V__DECISION,V__ACTION) ) ) ).

fof(kb_SUMO_4984,axiom,
    ! [V__DECISION] :
      ( s__instance(V__DECISION,s__Physical)
     => ( s__instance(V__DECISION,s__LegalDecision)
       => ? [V__DECIDE] :
            ( s__instance(V__DECIDE,s__Physical)
            & s__instance(V__DECIDE,s__Deciding)
            & s__earlier(s__WhenFn(V__DECIDE),s__WhenFn(V__DECISION)) ) ) ) ).

fof(kb_SUMO_4985,axiom,
    s__subclass(s__MilitaryProcess,s__PoliticalProcess) ).

fof(kb_SUMO_4986,axiom,
    s__instance(s__MilitaryProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4987,axiom,
    s__subclass(s__MilitaryProcess,s__OrganizationalProcess) ).

fof(kb_SUMO_4988,axiom,
    s__documentation(s__MilitaryProcess,s__EnglishLanguage,'Any &%Process that is carried out by a military organization. Note that this class covers &%Processes, e.g. military operations, that are the result of careful planning, as well as those which are unscripted.') ).

fof(kb_SUMO_4989,axiom,
    s__subclass(s__RegulatoryProcess,s__Guiding) ).

fof(kb_SUMO_4990,axiom,
    s__instance(s__RegulatoryProcess__t,s__SetOrClass) ).

fof(kb_SUMO_4991,axiom,
    s__documentation(s__RegulatoryProcess,s__EnglishLanguage,'an &%Guiding whose aim is the enforcement of rules or regulations. Note the key differences between &%RegulatoryProcess and the related concept &%Managing. The latter implies a long-term relationship between a single manager and limited number of agents who are managed, while the former implies a normative standard to which the activities of the regulated are referred.') ).

fof(kb_SUMO_4992,axiom,
    s__subclass(s__Managing,s__OrganizationalProcess) ).

fof(kb_SUMO_4993,axiom,
    s__subclass(s__Managing,s__Guiding) ).

fof(kb_SUMO_4994,axiom,
    s__instance(s__Managing__t,s__SetOrClass) ).

fof(kb_SUMO_4995,axiom,
    s__documentation(s__Managing,s__EnglishLanguage,'&%OrganizationalProcesses that involve overseeing the activities of others. Note the key differences between &%RegulatoryProcess and its sibling &%Managing. The latter implies a long-term relationship between the manager and the managed, while the former implies a normative standard to which the activities of the regulated are referred.') ).

fof(kb_SUMO_4996,axiom,
    s__subclass(s__Planning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_4997,axiom,
    s__instance(s__Planning__t,s__SetOrClass) ).

fof(kb_SUMO_4998,axiom,
    s__documentation(s__Planning,s__EnglishLanguage,'Specifying a set of actions in order to meet a set of goals or objectives.') ).

fof(kb_SUMO_4999,axiom,
    ! [V__EVENT,V__CBO] :
      ( ( s__instance(V__CBO,s__ContentBearingPhysical)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Planning)
          & s__result(V__EVENT,V__CBO)
          & s__instance(V__CBO,s__ContentBearingObject) )
       => ? [V__PLAN] :
            ( s__instance(V__PLAN,s__Proposition)
            & s__instance(V__PLAN,s__Plan)
            & s__containsInformation(V__CBO,V__PLAN) ) ) ) ).

fof(kb_SUMO_5000,axiom,
    s__subclass(s__Designing,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5001,axiom,
    s__instance(s__Designing__t,s__SetOrClass) ).

fof(kb_SUMO_5002,axiom,
    s__documentation(s__Designing,s__EnglishLanguage,'The spatial analogue of &%Planning. &%Designing a &%Collection of &%Objects involves determining a placement of the &%Objects with respect to one another and perhaps other &%Objects as well, in order to satisfy a particular purpose.') ).

fof(kb_SUMO_5003,axiom,
    s__subclass(s__Interpreting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5004,axiom,
    s__instance(s__Interpreting__t,s__SetOrClass) ).

fof(kb_SUMO_5005,axiom,
    s__documentation(s__Interpreting,s__EnglishLanguage,'Any &%Process of assigning a &%Proposition to a &%Text, i.e. understanding the &%Text.') ).

%FOL fof(kb_SUMO_5006,axiom,(( (! [V__CONTENT,V__INTERPRET,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__INTERPRET,s__Process) & s__instance(V__CONTENT,s__ContentBearingPhysical)) => ((s__instance(V__INTERPRET,s__Interpreting) & s__agent(V__INTERPRET,V__AGENT) & s__patient(V__INTERPRET,V__CONTENT) & s__instance(V__CONTENT,s__ContentBearingObject)) => (? [V__PROP] : (s__instance(V__PROP,s__Proposition) & s__holdsDuring(s__EndFn(s__WhenFn(V__INTERPRET)),'s__believes(V__AGENT,s__containsInformation(V__CONTENT,V__PROP))')))))) ))).

fof(kb_SUMO_5007,axiom,
    s__subclass(s__QuantityChange,s__InternalChange) ).

fof(kb_SUMO_5008,axiom,
    s__partition_3(s__QuantityChange,s__Increasing,s__Decreasing) ).

fof(kb_SUMO_5009,axiom,
    s__documentation(s__QuantityChange,s__EnglishLanguage,'Any &%InternalChange where a &%PhysicalQuantity associated with the &%patient is altered.') ).

fof(kb_SUMO_5010,axiom,
    s__subclass(s__Increasing,s__QuantityChange) ).

fof(kb_SUMO_5011,axiom,
    s__relatedInternalConcept(s__Increasing,s__Putting) ).

fof(kb_SUMO_5012,axiom,
    s__documentation(s__Increasing,s__EnglishLanguage,'Any &%QuantityChange where the &%PhysicalQuantity is increased.') ).

fof(kb_SUMO_5013,axiom,
    ! [V__OBJ,V__INCREASE] :
      ( ( s__instance(V__INCREASE,s__Process)
        & s__instance(V__OBJ,s__RealNumber) )
     => ( ( s__instance(V__INCREASE,s__Increasing)
          & s__patient(V__INCREASE,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__INCREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__INCREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & greater(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_5014,axiom,
    s__subclass(s__Heating,s__Increasing) ).

fof(kb_SUMO_5015,axiom,
    s__instance(s__Heating__t,s__SetOrClass) ).

fof(kb_SUMO_5016,axiom,
    s__instance(s__Increasing__t,s__SetOrClass) ).

fof(kb_SUMO_5017,axiom,
    s__disjoint(s__Heating,s__Cooling) ).

fof(kb_SUMO_5018,axiom,
    s__documentation(s__Heating,s__EnglishLanguage,'Any &%Increasing &%Process where the &%PhysicalQuantity increased is a &%TemperatureMeasure.') ).

fof(kb_SUMO_5019,axiom,
    ! [V__HEAT,V__OBJ] :
      ( ( s__instance(V__OBJ,s__RealNumber)
        & s__instance(V__HEAT,s__Process) )
     => ( ( s__instance(V__HEAT,s__Heating)
          & s__patient(V__HEAT,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__UNIT,s__TemperatureMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__HEAT)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__HEAT)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & greater(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_5020,axiom,
    s__subclass(s__Decreasing,s__QuantityChange) ).

fof(kb_SUMO_5021,axiom,
    s__instance(s__QuantityChange__t,s__SetOrClass) ).

fof(kb_SUMO_5022,axiom,
    s__relatedInternalConcept(s__Decreasing,s__Removing) ).

fof(kb_SUMO_5023,axiom,
    s__documentation(s__Decreasing,s__EnglishLanguage,'Any &%QuantityChange where the &%PhysicalQuantity is decreased.') ).

fof(kb_SUMO_5024,axiom,
    ! [V__OBJ,V__DECREASE] :
      ( ( s__instance(V__DECREASE,s__Process)
        & s__instance(V__OBJ,s__RealNumber) )
     => ( ( s__instance(V__DECREASE,s__Decreasing)
          & s__patient(V__DECREASE,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__DECREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__DECREASE)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & less(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_5025,axiom,
    s__subclass(s__Cooling,s__Decreasing) ).

fof(kb_SUMO_5026,axiom,
    s__instance(s__Cooling__t,s__SetOrClass) ).

fof(kb_SUMO_5027,axiom,
    s__instance(s__Decreasing__t,s__SetOrClass) ).

fof(kb_SUMO_5028,axiom,
    s__documentation(s__Cooling,s__EnglishLanguage,'Any &%Decreasing &%Process where the &%PhysicalQuantity decreased is a &%TemperatureMeasure.') ).

fof(kb_SUMO_5029,axiom,
    ! [V__COOL,V__OBJ] :
      ( ( s__instance(V__OBJ,s__RealNumber)
        & s__instance(V__COOL,s__Process) )
     => ( ( s__instance(V__COOL,s__Cooling)
          & s__patient(V__COOL,V__OBJ) )
       => ? [V__UNIT,V__QUANT1,V__QUANT2] :
            ( s__instance(V__QUANT2,s__Quantity)
            & s__instance(V__QUANT1,s__Quantity)
            & s__instance(V__UNIT,s__UnitOfMeasure)
            & s__instance(V__UNIT,s__TemperatureMeasure)
            & s__holdsDuring(s__BeginFn(s__WhenFn(V__COOL)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT1)')
            & s__holdsDuring(s__EndFn(s__WhenFn(V__COOL)),'(s__MeasureFn(V__OBJ,V__UNIT) = V__QUANT2)')
            & less(V__QUANT2,V__QUANT1) ) ) ) ).

fof(kb_SUMO_5030,axiom,
    s__instance(s__moves__m,s__CaseRole) ).

fof(kb_SUMO_5031,axiom,
    s__domain(s__moves__m,"1",s__Motion) ).

fof(kb_SUMO_5032,axiom,
    s__domain(s__moves__m,"2",s__Object) ).

fof(kb_SUMO_5033,axiom,
    s__documentation(s__moves__m,s__EnglishLanguage,'(&%moves ?MOTION ?OBJECT) means that during the &%Motion event ?MOTION, ?OBJECT moves. This does not necessarily imply that the location of ?OBJECT changes during ?MOTION. See also &%changesLocation and &%Translocation.') ).

fof(kb_SUMO_5034,axiom,
    s__subrelation(s__moves__m,s__involvedInEvent__m) ).

fof(kb_SUMO_5035,axiom,
    s__instance(s__changesLocation__m,s__CaseRole) ).

fof(kb_SUMO_5036,axiom,
    s__domain(s__changesLocation__m,"1",s__Translocation) ).

fof(kb_SUMO_5037,axiom,
    s__domain(s__changesLocation__m,"2",s__Object) ).

fof(kb_SUMO_5038,axiom,
    s__documentation(s__changesLocation__m,s__EnglishLanguage,'(&%changesLocation ?EVENT ?OBJECT) means that during the &%Translocation event ?EVENT, ?OBJECTs location changes. ?OBJECT might also be the &%agent, &%patient, or &%experiencer of ?EVENT.') ).

fof(kb_SUMO_5039,axiom,
    s__subrelation(s__changesLocation__m,s__moves__m) ).

fof(kb_SUMO_5040,axiom,
    s__subclass(s__Motion,s__Process) ).

fof(kb_SUMO_5041,axiom,
    s__instance(s__Motion__t,s__SetOrClass) ).

fof(kb_SUMO_5042,axiom,
    s__instance(s__Process__t,s__SetOrClass) ).

fof(kb_SUMO_5043,axiom,
    s__documentation(s__Motion,s__EnglishLanguage,'Any &%Process of movement.') ).

fof(kb_SUMO_5044,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Motion)
     => ? [V__OBJ] :
          ( s__instance(V__OBJ,s__Object)
          & s__moves(V__MOTION,V__OBJ) ) ) ).

%FOL fof(kb_SUMO_5045,axiom,(( (! [V__OBJ,V__MOTION,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MOTION,s__Motion) & s__moves(V__MOTION,V__OBJ) & s__origin(V__MOTION,V__PLACE)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOTION)),'s__located(V__OBJ,V__PLACE)')))) ))).

%FOL fof(kb_SUMO_5046,axiom,(( (! [V__OBJ,V__MOTION,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MOTION,s__Motion) & s__moves(V__MOTION,V__OBJ) & s__destination(V__MOTION,V__PLACE)) => s__holdsDuring(s__EndFn(s__WhenFn(V__MOTION)),'s__located(V__OBJ,V__PLACE)')))) ))).

fof(kb_SUMO_5047,axiom,
    s__subclass(s__MotionUpward,s__Motion) ).

fof(kb_SUMO_5048,axiom,
    s__instance(s__MotionUpward__t,s__SetOrClass) ).

fof(kb_SUMO_5049,axiom,
    s__disjoint(s__MotionUpward,s__MotionDownward) ).

fof(kb_SUMO_5050,axiom,
    s__documentation(s__MotionUpward,s__EnglishLanguage,'&%Motion where an &%Object is moving away from the ground.') ).

fof(kb_SUMO_5051,axiom,
    s__subclass(s__MotionDownward,s__Motion) ).

fof(kb_SUMO_5052,axiom,
    s__instance(s__MotionDownward__t,s__SetOrClass) ).

fof(kb_SUMO_5053,axiom,
    s__documentation(s__MotionDownward,s__EnglishLanguage,'&%Motion where an &%Object is moving toward the ground.') ).

fof(kb_SUMO_5054,axiom,
    s__instance(s__path__m,s__CaseRole) ).

fof(kb_SUMO_5055,axiom,
    s__subrelation(s__path__m,s__eventPartlyLocated__m) ).

fof(kb_SUMO_5056,axiom,
    s__domain(s__path__m,"1",s__Motion) ).

fof(kb_SUMO_5057,axiom,
    s__domain(s__path__m,"2",s__Object) ).

fof(kb_SUMO_5058,axiom,
    s__documentation(s__path__m,s__EnglishLanguage,'(&%path ?MOTION ?PATH) means that ?PATH is a route along which ?MOTION occurs. For example, Highway 101 is the path in the following proposition: the car drove up Highway 101.') ).

fof(kb_SUMO_5059,axiom,
    ! [V__PATH1,V__MEASURE1,V__PROCESS,V__DISTANCE,V__SOURCE,V__DEST] :
      ( ( s__path(V__PROCESS,V__PATH1)
        & s__origin(V__PROCESS,V__SOURCE)
        & s__destination(V__PROCESS,V__DEST)
        & s__length(V__PATH1,V__MEASURE1)
        & s__distance(V__SOURCE,V__DEST,V__DISTANCE)
        & ~ greater(V__MEASURE1,V__DISTANCE) )
     => ! [V__OBJ] :
          ( ( s__instance(V__OBJ,s__Object)
            & s__instance(V__DEST,s__Object)
            & s__instance(V__SOURCE,s__Object)
            & s__instance(V__DISTANCE,s__LengthMeasure)
            & s__instance(V__PROCESS,s__Motion)
            & s__instance(V__MEASURE1,s__LengthMeasure)
            & s__instance(V__PATH1,s__Object) )
         => ( s__part(V__OBJ,V__PATH1)
           => s__between(V__SOURCE,V__OBJ,V__DEST) ) ) ) ).

fof(kb_SUMO_5060,axiom,
    s__subclass(s__BodyMotion,s__Motion) ).

fof(kb_SUMO_5061,axiom,
    s__documentation(s__BodyMotion,s__EnglishLanguage,'Any &%Motion where the &%agent is an &%Organism and the &%patient is a &%BodyPart.') ).

fof(kb_SUMO_5062,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Motion)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__BodyMotion)
          & s__moves(V__MOTION,V__OBJ) )
       => ( s__instance(V__OBJ,s__BodyPart)
          & s__patient(V__MOTION,V__OBJ) ) ) ) ).

fof(kb_SUMO_5063,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Process)
     => ( s__instance(V__MOTION,s__BodyMotion)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__Organism)
            & s__agent(V__MOTION,V__AGENT) ) ) ) ).

fof(kb_SUMO_5064,axiom,
    s__subclass(s__VocalCords,s__Organ) ).

fof(kb_SUMO_5065,axiom,
    s__instance(s__VocalCords__t,s__SetOrClass) ).

fof(kb_SUMO_5066,axiom,
    s__documentation(s__VocalCords,s__EnglishLanguage,'The vocal cords, are composed of two folds of mucous membrane stretched horizontally across the larynx. They vibrate, modulating the flow of air being expelled from the lungs during &%Vocalizing. ') ).

fof(kb_SUMO_5067,axiom,
    s__typicalPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_5068,axiom,
    s__typicallyContainsPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_5069,axiom,
    s__initialPart(s__VocalCords,s__Human) ).

fof(kb_SUMO_5070,axiom,
    s__subclass(s__Vocalizing,s__RadiatingSound) ).

fof(kb_SUMO_5071,axiom,
    s__instance(s__Vocalizing__t,s__SetOrClass) ).

fof(kb_SUMO_5072,axiom,
    s__documentation(s__Vocalizing,s__EnglishLanguage,'Any instance of &%RadiatingSound where the instrument is the vocal cord. This covers grunts, screams, raors, as well as &%Speaking.') ).

fof(kb_SUMO_5073,axiom,
    ! [V__VOCAL] :
      ( ( s__instance(V__VOCAL,s__Process)
        & s__instance(V__VOCAL,s__Object) )
     => ( s__instance(V__VOCAL,s__Vocalizing)
       => ? [V__CORD,V__ORGANISM] :
            ( s__instance(V__ORGANISM,s__Object)
            & s__instance(V__CORD,s__Object)
            & s__instance(V__CORD,s__VocalCords)
            & s__instrument(V__VOCAL,V__CORD)
            & s__part(V__VOCAL,V__ORGANISM)
            & s__instance(V__ORGANISM,s__Organism) ) ) ) ).

fof(kb_SUMO_5074,axiom,
    s__subclass(s__Speaking,s__LinguisticCommunication) ).

fof(kb_SUMO_5075,axiom,
    s__instance(s__Speaking__t,s__SetOrClass) ).

fof(kb_SUMO_5076,axiom,
    s__subclass(s__Speaking,s__Vocalizing) ).

fof(kb_SUMO_5077,axiom,
    s__documentation(s__Speaking,s__EnglishLanguage,'Any &%LinguisticCommunication by a &%Human which involves his/her vocal cords.') ).

fof(kb_SUMO_5078,axiom,
    s__subclass(s__Ambulating,s__BodyMotion) ).

fof(kb_SUMO_5079,axiom,
    s__instance(s__BodyMotion__t,s__SetOrClass) ).

fof(kb_SUMO_5080,axiom,
    s__subclass(s__Ambulating,s__Translocation) ).

fof(kb_SUMO_5081,axiom,
    s__partition_3(s__Ambulating,s__Walking,s__Running) ).

fof(kb_SUMO_5082,axiom,
    s__documentation(s__Ambulating,s__EnglishLanguage,'Any &%BodyMotion which is accomplished by means of the legs of an &%Animal for the purpose of moving from one point to another.') ).

fof(kb_SUMO_5083,axiom,
    s__subclass(s__Walking,s__Ambulating) ).

fof(kb_SUMO_5084,axiom,
    s__instance(s__Walking__t,s__SetOrClass) ).

fof(kb_SUMO_5085,axiom,
    s__documentation(s__Walking,s__EnglishLanguage,'&%Ambulating relatively slowly, i.e. moving in such a way that at least one foot is always in contact with the ground.') ).

fof(kb_SUMO_5086,axiom,
    s__subclass(s__Running,s__Ambulating) ).

fof(kb_SUMO_5087,axiom,
    s__instance(s__Running__t,s__SetOrClass) ).

fof(kb_SUMO_5088,axiom,
    s__instance(s__Ambulating__t,s__SetOrClass) ).

fof(kb_SUMO_5089,axiom,
    s__documentation(s__Running,s__EnglishLanguage,'&%Ambulating relatively quickly, i.e. moving in such a way that, with each step, neither foot is in contact with the ground for a period of time.') ).

%FOL fof(kb_SUMO_5090,axiom,(( (! [V__RUN,V__TIME,V__AGENT,V__LENGTH1,V__LENGTH2,V__WALK] : ((s__instance(V__WALK,s__Process) & s__instance(V__LENGTH2,s__LengthMeasure) & s__instance(V__LENGTH1,s__LengthMeasure) & s__instance(V__AGENT,s__Agent) & s__instance(V__TIME,s__TimeDuration) & s__instance(V__RUN,s__Process)) => ((s__instance(V__WALK,s__Walking) & s__instance(V__RUN,s__Running) & s__agent(V__WALK,V__AGENT) & s__agent(V__RUN,V__AGENT) & s__holdsDuring(s__WhenFn(V__WALK),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH1,V__TIME))') & s__holdsDuring(s__WhenFn(V__RUN),'s__measure(V__AGENT,s__SpeedFn(V__LENGTH2,V__TIME))')) => greater(V__LENGTH2,V__LENGTH1)))) ))).

fof(kb_SUMO_5091,axiom,
    s__subclass(s__Swimming,s__BodyMotion) ).

fof(kb_SUMO_5092,axiom,
    s__instance(s__Swimming__t,s__SetOrClass) ).

fof(kb_SUMO_5093,axiom,
    s__documentation(s__Swimming,s__EnglishLanguage,'Any deliberate and controlled &%BodyMotion through water that is accomplished by an &%Organism.') ).

fof(kb_SUMO_5094,axiom,
    ! [V__AGENT,V__SWIM] :
      ( ( s__instance(V__SWIM,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__SWIM,s__Swimming)
          & s__agent(V__SWIM,V__AGENT) )
       => ? [V__AREA] :
            ( s__instance(V__AREA,s__Object)
            & s__instance(V__AREA,s__WaterArea)
            & s__located(V__AGENT,V__AREA) ) ) ) ).

fof(kb_SUMO_5095,axiom,
    s__subclass(s__Dancing,s__BodyMotion) ).

fof(kb_SUMO_5096,axiom,
    s__instance(s__Dancing__t,s__SetOrClass) ).

fof(kb_SUMO_5097,axiom,
    s__documentation(s__Dancing,s__EnglishLanguage,'Any &%BodyMotion of &%Humans which is deliberately coordinated with music.') ).

fof(kb_SUMO_5098,axiom,
    s__subclass(s__GeologicalProcess,s__Motion) ).

fof(kb_SUMO_5099,axiom,
    s__instance(s__GeologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5100,axiom,
    s__subclass(s__GeologicalProcess,s__InternalChange) ).

fof(kb_SUMO_5101,axiom,
    s__disjoint(s__GeologicalProcess,s__IntentionalProcess) ).

fof(kb_SUMO_5102,axiom,
    s__documentation(s__GeologicalProcess,s__EnglishLanguage,'The class of activities that are caused by geological forces and affect geological features, and which may affect the biosphere as well.') ).

fof(kb_SUMO_5103,axiom,
    s__subclass(s__WeatherProcess,s__Motion) ).

fof(kb_SUMO_5104,axiom,
    s__disjoint(s__WeatherProcess,s__IntentionalProcess) ).

fof(kb_SUMO_5105,axiom,
    s__documentation(s__WeatherProcess,s__EnglishLanguage,'&%WeatherProcess is the broadest class of processes that involve weather, including weather seasons (not to be confused with instances of &%SeasonOfYear), weather systems, and short-term weather events.') ).

fof(kb_SUMO_5106,axiom,
    s__subclass(s__Precipitation,s__WeatherProcess) ).

fof(kb_SUMO_5107,axiom,
    s__instance(s__Precipitation__t,s__SetOrClass) ).

fof(kb_SUMO_5108,axiom,
    s__instance(s__WeatherProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5109,axiom,
    s__subclass(s__Precipitation,s__WaterMotion) ).

fof(kb_SUMO_5110,axiom,
    s__subclass(s__Precipitation,s__Falling) ).

fof(kb_SUMO_5111,axiom,
    s__documentation(s__Precipitation,s__EnglishLanguage,'&%Precipitation is the process of water molecules falling from the air to the ground, in either a liquid or frozen state.') ).

fof(kb_SUMO_5112,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Precipitation)
       => ? [V__STUFF] :
            ( s__instance(V__STUFF,s__Water)
            & s__patient(V__PROCESS,V__STUFF) ) ) ) ).

fof(kb_SUMO_5113,axiom,
    s__subclass(s__LiquidMotion,s__Motion) ).

fof(kb_SUMO_5114,axiom,
    s__documentation(s__LiquidMotion,s__EnglishLanguage,'Any &%Motion where the &%patient is a &%Liquid. This class would cover, in particular, the flow of &%Water.') ).

fof(kb_SUMO_5115,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__LiquidMotion)
          & s__patient(V__MOTION,V__OBJ) )
       => s__attribute(V__OBJ,s__Liquid) ) ) ).

fof(kb_SUMO_5116,axiom,
    s__subclass(s__WaterMotion,s__LiquidMotion) ).

fof(kb_SUMO_5117,axiom,
    s__instance(s__WaterMotion__t,s__SetOrClass) ).

fof(kb_SUMO_5118,axiom,
    s__instance(s__LiquidMotion__t,s__SetOrClass) ).

fof(kb_SUMO_5119,axiom,
    s__documentation(s__WaterMotion,s__EnglishLanguage,'Any &%LiquidMotion where the &%Liquid is &%Water.') ).

fof(kb_SUMO_5120,axiom,
    ! [V__MOTION] :
      ( s__instance(V__MOTION,s__Process)
     => ( s__instance(V__MOTION,s__WaterMotion)
       => ? [V__WATER] :
            ( s__patient(V__MOTION,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_5121,axiom,
    s__subclass(s__GasMotion,s__Motion) ).

fof(kb_SUMO_5122,axiom,
    s__instance(s__GasMotion__t,s__SetOrClass) ).

fof(kb_SUMO_5123,axiom,
    s__documentation(s__GasMotion,s__EnglishLanguage,'Any &%Motion where the &%patient is a &%Gas. This class would cover, in particular, the motion of &%Air, e.g. a breeze or wind.') ).

fof(kb_SUMO_5124,axiom,
    ! [V__OBJ,V__MOTION] :
      ( ( s__instance(V__MOTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__MOTION,s__GasMotion)
          & s__patient(V__MOTION,V__OBJ) )
       => s__attribute(V__OBJ,s__Gas) ) ) ).

fof(kb_SUMO_5125,axiom,
    s__subclass(s__Wind,s__GasMotion) ).

fof(kb_SUMO_5126,axiom,
    s__instance(s__Wind__t,s__SetOrClass) ).

fof(kb_SUMO_5127,axiom,
    s__documentation(s__Wind,s__EnglishLanguage,'Any &%Motion of &%Air.') ).

fof(kb_SUMO_5128,axiom,
    s__subclass(s__DirectionChange,s__Motion) ).

fof(kb_SUMO_5129,axiom,
    s__instance(s__DirectionChange__t,s__SetOrClass) ).

fof(kb_SUMO_5130,axiom,
    s__documentation(s__DirectionChange,s__EnglishLanguage,'The act of changing the direction in which the &%patient of the act is oriented.') ).

%FOL fof(kb_SUMO_5131,axiom,(( (! [V__PROC] : (s__instance(V__PROC,s__Process) => (s__instance(V__PROC,s__DirectionChange) => (? [V__ATTR] : (s__instance(V__ATTR,s__Attribute) & s__instance(V__ATTR,s__DirectionalAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'s__manner(V__PROC,V__ATTR)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'(~ s__manner(V__PROC,V__ATTR))')) | (s__holdsDuring(s__EndFn(s__WhenFn(V__PROC)),'s__manner(V__PROC,V__ATTR)') & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROC)),'(~ s__manner(V__PROC,V__ATTR))')))))))) ))).

fof(kb_SUMO_5132,axiom,
    s__subclass(s__Transfer,s__Translocation) ).

fof(kb_SUMO_5133,axiom,
    s__instance(s__Translocation__t,s__SetOrClass) ).

fof(kb_SUMO_5134,axiom,
    s__documentation(s__Transfer,s__EnglishLanguage,'Any &%instance of &%Translocation where the &%agent and the &%patient are not the same thing.') ).

fof(kb_SUMO_5135,axiom,
    ! [V__PATIENT,V__AGENT,V__TRANSFER] :
      ( ( s__instance(V__TRANSFER,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__TRANSFER,s__Transfer)
          & s__agent(V__TRANSFER,V__AGENT)
          & s__patient(V__TRANSFER,V__PATIENT) )
       => V__AGENT != V__PATIENT ) ) ).

fof(kb_SUMO_5136,axiom,
    ! [V__P,V__T2,V__T1,V__D1,V__D2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__D1,s__Object)
        & s__instance(V__T1,s__Process)
        & s__instance(V__T2,s__Process)
        & s__instance(V__P,s__Agent) )
     => ( ( s__instance(V__T1,s__Translocation)
          & s__instance(V__T2,s__Translocation)
          & s__origin(V__T1,V__O1)
          & s__origin(V__T2,V__D1)
          & s__destination(V__T1,V__D1)
          & s__destination(V__T2,V__D2)
          & s__experiencer(V__T1,V__P)
          & s__experiencer(V__T2,V__P) )
       => ? [V__T] :
            ( s__instance(V__T,s__Process)
            & s__instance(V__T,s__Translocation)
            & s__origin(V__T,V__O1)
            & s__destination(V__T,V__D2)
            & s__subProcess(V__T1,V__T)
            & s__subProcess(V__T2,V__T)
            & s__experiencer(V__T,V__P)
            & s__starts(s__WhenFn(V__T1),s__WhenFn(V__T))
            & s__finishes(s__WhenFn(V__T2),s__WhenFn(V__T)) ) ) ) ).

fof(kb_SUMO_5137,axiom,
    s__subclass(s__Carrying,s__Transfer) ).

fof(kb_SUMO_5138,axiom,
    s__instance(s__Carrying__t,s__SetOrClass) ).

fof(kb_SUMO_5139,axiom,
    s__instance(s__Transfer__t,s__SetOrClass) ).

fof(kb_SUMO_5140,axiom,
    s__documentation(s__Carrying,s__EnglishLanguage,'&%Transfer from one point to another by means of an &%Animal or &%Human.') ).

fof(kb_SUMO_5141,axiom,
    ! [V__CARRY] :
      ( s__instance(V__CARRY,s__Process)
     => ( s__instance(V__CARRY,s__Carrying)
       => ? [V__ANIMAL] :
            ( s__instance(V__ANIMAL,s__Object)
            & s__instance(V__ANIMAL,s__Animal)
            & s__instrument(V__CARRY,V__ANIMAL) ) ) ) ).

fof(kb_SUMO_5142,axiom,
    s__subclass(s__Removing,s__Transfer) ).

fof(kb_SUMO_5143,axiom,
    s__documentation(s__Removing,s__EnglishLanguage,'The &%Class of &%Processes where something is taken away from a location. Note that the thing removed and the location are specified with the &%CaseRoles &%patient and &%origin, respectively.') ).

%FOL fof(kb_SUMO_5144,axiom,(( (! [V__OBJ,V__PLACE,V__REMOVE] : ((s__instance(V__REMOVE,s__Process) & s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__REMOVE,s__Removing) & s__origin(V__REMOVE,V__PLACE) & s__patient(V__REMOVE,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__REMOVE)),'s__located(V__OBJ,V__PLACE)') & s__holdsDuring(s__EndFn(s__WhenFn(V__REMOVE)),'(~ s__located(V__OBJ,V__PLACE))'))))) ))).

fof(kb_SUMO_5145,axiom,
    s__subclass(s__Uncovering,s__Removing) ).

fof(kb_SUMO_5146,axiom,
    s__instance(s__Uncovering__t,s__SetOrClass) ).

fof(kb_SUMO_5147,axiom,
    s__disjoint(s__Uncovering,s__Covering) ).

fof(kb_SUMO_5148,axiom,
    s__documentation(s__Uncovering,s__EnglishLanguage,'The &%Class of &%Removing processes where the &%agent uncovers the &%patient, either completely or only partially.') ).

fof(kb_SUMO_5149,axiom,
    s__subclass(s__Putting,s__Transfer) ).

fof(kb_SUMO_5150,axiom,
    s__instance(s__Putting__t,s__SetOrClass) ).

fof(kb_SUMO_5151,axiom,
    s__documentation(s__Putting,s__EnglishLanguage,'The &%Class of &%Processes where something is put in a location. Note that the location is specified with the &%CaseRole &%destination.') ).

%FOL fof(kb_SUMO_5152,axiom,(( (! [V__OBJ,V__PUT,V__PLACE] : ((s__instance(V__PLACE,s__Object) & s__instance(V__PUT,s__Process) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__PUT,s__Putting) & s__destination(V__PUT,V__PLACE) & s__patient(V__PUT,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__PUT)),'(~ s__located(V__OBJ,V__PLACE))') & s__holdsDuring(s__EndFn(s__WhenFn(V__PUT)),'s__located(V__OBJ,V__PLACE)'))))) ))).

fof(kb_SUMO_5153,axiom,
    s__subclass(s__Covering,s__Putting) ).

fof(kb_SUMO_5154,axiom,
    s__instance(s__Covering__t,s__SetOrClass) ).

fof(kb_SUMO_5155,axiom,
    s__documentation(s__Covering,s__EnglishLanguage,'The &%Class of &%Putting processes where the &%agent covers the &%patient, either completely or only partially, with something else.') ).

fof(kb_SUMO_5156,axiom,
    s__subclass(s__Inserting,s__Putting) ).

fof(kb_SUMO_5157,axiom,
    s__instance(s__Inserting__t,s__SetOrClass) ).

fof(kb_SUMO_5158,axiom,
    s__documentation(s__Inserting,s__EnglishLanguage,'&%Putting one thing inside of another thing.') ).

%FOL fof(kb_SUMO_5159,axiom,(( (! [V__INSERT,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__SelfConnectedObject) & s__instance(V__OBJ1,s__Object) & s__instance(V__INSERT,s__Process)) => ((s__instance(V__INSERT,s__Inserting) & s__patient(V__INSERT,V__OBJ1) & s__destination(V__INSERT,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__INSERT)),'(~ s__contains(V__OBJ2,V__OBJ1))') & s__holdsDuring(s__EndFn(s__WhenFn(V__INSERT)),'s__contains(V__OBJ2,V__OBJ1)'))))) ))).

fof(kb_SUMO_5160,axiom,
    s__subclass(s__Injecting,s__Inserting) ).

fof(kb_SUMO_5161,axiom,
    s__instance(s__Injecting__t,s__SetOrClass) ).

fof(kb_SUMO_5162,axiom,
    s__documentation(s__Injecting,s__EnglishLanguage,'&%Inserting a &%BiologicallyActiveSubstance into an &%Animal or a &%Human with a syringe.') ).

fof(kb_SUMO_5163,axiom,
    ! [V__INJECT] :
      ( s__instance(V__INJECT,s__Process)
     => ( s__instance(V__INJECT,s__Injecting)
       => ? [V__SUBSTANCE,V__ANIMAL] :
            ( s__instance(V__SUBSTANCE,s__Object)
            & s__patient(V__INJECT,V__SUBSTANCE)
            & s__instance(V__SUBSTANCE,s__BiologicallyActiveSubstance)
            & s__attribute(V__SUBSTANCE,s__Liquid)
            & s__destination(V__INJECT,V__ANIMAL)
            & s__instance(V__ANIMAL,s__Animal) ) ) ) ).

fof(kb_SUMO_5164,axiom,
    s__subclass(s__Substituting,s__Transfer) ).

fof(kb_SUMO_5165,axiom,
    s__subclass(s__Substituting,s__DualObjectProcess) ).

fof(kb_SUMO_5166,axiom,
    s__instance(s__Substituting__t,s__SetOrClass) ).

fof(kb_SUMO_5167,axiom,
    s__instance(s__DualObjectProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5168,axiom,
    s__documentation(s__Substituting,s__EnglishLanguage,'The &%Class of &%Transfers where one thing is replaced with something else.') ).

fof(kb_SUMO_5169,axiom,
    ! [V__SUB] :
      ( s__instance(V__SUB,s__Process)
     => ( s__instance(V__SUB,s__Substituting)
       => ? [V__PUT,V__REMOVE,V__OBJ1,V__OBJ2,V__PLACE] :
            ( s__instance(V__PLACE,s__Object)
            & s__instance(V__REMOVE,s__Process)
            & s__instance(V__PUT,s__Process)
            & s__instance(V__PUT,s__Putting)
            & s__instance(V__REMOVE,s__Removing)
            & s__subProcess(V__PUT,V__SUB)
            & s__subProcess(V__REMOVE,V__SUB)
            & s__patient(V__REMOVE,V__OBJ1)
            & s__origin(V__REMOVE,V__PLACE)
            & s__patient(V__PUT,V__OBJ2)
            & s__destination(V__PUT,V__PLACE)
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_5170,axiom,
    s__subclass(s__Impelling,s__Transfer) ).

fof(kb_SUMO_5171,axiom,
    s__instance(s__Impelling__t,s__SetOrClass) ).

fof(kb_SUMO_5172,axiom,
    s__documentation(s__Impelling,s__EnglishLanguage,'The &%subclass of &%Transfer where the &%patient travels through space by means of a sudden, forceful event. Some examples would be shooting, throwing, tossing, etc.') ).

fof(kb_SUMO_5173,axiom,
    s__subclass(s__Shooting,s__Impelling) ).

fof(kb_SUMO_5174,axiom,
    s__instance(s__Shooting__t,s__SetOrClass) ).

fof(kb_SUMO_5175,axiom,
    s__documentation(s__Shooting,s__EnglishLanguage,'The &%subclass of &%Impelling where the &%patient is a projectile that is fired through the air by means of some sort of &%Device.') ).

fof(kb_SUMO_5176,axiom,
    s__subclass(s__Touching,s__Transfer) ).

fof(kb_SUMO_5177,axiom,
    s__instance(s__Touching__t,s__SetOrClass) ).

fof(kb_SUMO_5178,axiom,
    s__documentation(s__Touching,s__EnglishLanguage,'Any &%Transfer where two &%Objects are brought into immediate physical contact with one another.') ).

%FOL fof(kb_SUMO_5179,axiom,(( (! [V__OBJ1,V__OBJ2,V__TOUCH] : ((s__instance(V__TOUCH,s__Process) & s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Agent)) => ((s__instance(V__TOUCH,s__Touching) & s__agent(V__TOUCH,V__OBJ1) & s__patient(V__TOUCH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__TOUCH)),'(~ s__connected(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__TOUCH)),'s__connected(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_5180,axiom,
    s__subrelation(s__grasps__m,s__meetsSpatially__m) ).

fof(kb_SUMO_5181,axiom,
    s__domain(s__grasps__m,"1",s__Animal) ).

fof(kb_SUMO_5182,axiom,
    s__domain(s__grasps__m,"2",s__Object) ).

fof(kb_SUMO_5183,axiom,
    s__documentation(s__grasps__m,s__EnglishLanguage,'The state of grasping an &%Object. (&%grasps ?ANIMAL ?OBJ) means that the &%Animal ?ANIMAL is intentionally holding on to the &%Object ?OBJ.') ).

fof(kb_SUMO_5184,axiom,
    s__subclass(s__Grabbing,s__Touching) ).

fof(kb_SUMO_5185,axiom,
    s__subclass(s__Grabbing,s__Attaching) ).

fof(kb_SUMO_5186,axiom,
    s__instance(s__Grabbing__t,s__SetOrClass) ).

fof(kb_SUMO_5187,axiom,
    s__documentation(s__Grabbing,s__EnglishLanguage,'Any instance of &%Touching which results in a situation where the &%agent &%grasps the &%patient of the &%Touching.') ).

%FOL fof(kb_SUMO_5188,axiom,(( (! [V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process)) => ((s__instance(V__GRAB,s__Grabbing) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__GRAB)),'(~ s__grasps(V__AGENT,V__THING))') & s__holdsDuring(s__EndFn(s__WhenFn(V__GRAB)),'s__grasps(V__AGENT,V__THING)'))))) ))).

fof(kb_SUMO_5189,axiom,
    s__subclass(s__Releasing,s__Transfer) ).

fof(kb_SUMO_5190,axiom,
    s__instance(s__Releasing__t,s__SetOrClass) ).

fof(kb_SUMO_5191,axiom,
    s__documentation(s__Releasing,s__EnglishLanguage,'Any instance of &%Transfer which results in a situation where it is not the case that the &%agent &%grasps something which he/she &%grasps previously.') ).

%FOL fof(kb_SUMO_5192,axiom,(( (! [V__RELEASE,V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process) & s__instance(V__RELEASE,s__Physical)) => ((s__instance(V__RELEASE,s__Releasing) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__RELEASE)),'s__grasps(V__AGENT,V__THING)') & s__holdsDuring(s__EndFn(s__WhenFn(V__RELEASE)),'(~ s__grasps(V__AGENT,V__THING))'))))) ))).

fof(kb_SUMO_5193,axiom,
    s__subclass(s__Impacting,s__Touching) ).

fof(kb_SUMO_5194,axiom,
    s__instance(s__Impacting__t,s__SetOrClass) ).

fof(kb_SUMO_5195,axiom,
    s__documentation(s__Impacting,s__EnglishLanguage,'Any &%Touching where something comes into sudden, forceful, physical contact with something else. Some examples would be striking, knocking, whipping etc.') ).

fof(kb_SUMO_5196,axiom,
    ! [V__OBJ,V__IMPACT] :
      ( s__instance(V__IMPACT,s__Process)
     => ( ( s__instance(V__IMPACT,s__Impacting)
          & s__patient(V__IMPACT,V__OBJ) )
       => ? [V__IMPEL] :
            ( s__instance(V__IMPEL,s__Process)
            & s__instance(V__IMPEL,s__Impelling)
            & s__patient(V__IMPEL,V__OBJ)
            & s__earlier(s__WhenFn(V__IMPEL),s__WhenFn(V__IMPACT)) ) ) ) ).

fof(kb_SUMO_5197,axiom,
    s__subclass(s__Translocation,s__Motion) ).

fof(kb_SUMO_5198,axiom,
    s__documentation(s__Translocation,s__EnglishLanguage,'&%Translocation is that class of &%Motions in which an object moves from one place to another. In the case of round trips, the &%origin and &%destination are the same, but the intervening motion passes through other locations. &%Translocation represents linear motion, in contrast to rotation or other movement in place. A vehicle is not necessary, &%Ambulating is a kind of &%Translocation.') ).

fof(kb_SUMO_5199,axiom,
    ! [V__MOVEMENT,V__PLACE1] :
      ( ( s__instance(V__PLACE1,s__Object)
        & s__instance(V__MOVEMENT,s__Process) )
     => ( ( s__instance(V__MOVEMENT,s__Translocation)
          & s__origin(V__MOVEMENT,V__PLACE1) )
       => ? [V__PLACE2,V__STAGE] :
            ( s__instance(V__STAGE,s__Process)
            & s__instance(V__PLACE2,s__Object)
            & s__instance(V__PLACE2,s__Region)
            & V__PLACE1 != V__PLACE2
            & s__subProcess(V__STAGE,V__MOVEMENT)
            & s__located(V__STAGE,V__PLACE2) ) ) ) ).

fof(kb_SUMO_5200,axiom,
    ! [V__T] :
      ( s__instance(V__T,s__Motion)
     => ( s__instance(V__T,s__Translocation)
       => ? [V__O,V__D,V__P] :
            ( s__instance(V__O,s__Object)
            & s__instance(V__D,s__Object)
            & s__instance(V__P,s__Object)
            & s__path(V__T,V__P)
            & s__origin(V__T,V__O)
            & s__destination(V__T,V__D) ) ) ) ).

fof(kb_SUMO_5201,axiom,
    s__subclass(s__Falling,s__Translocation) ).

fof(kb_SUMO_5202,axiom,
    s__subclass(s__Falling,s__MotionDownward) ).

fof(kb_SUMO_5203,axiom,
    s__instance(s__Falling__t,s__SetOrClass) ).

fof(kb_SUMO_5204,axiom,
    s__documentation(s__Falling,s__EnglishLanguage,'&%Falling is the class of events in which something moves from a higher location to a lower location under the force of gravity.') ).

fof(kb_SUMO_5205,axiom,
    ! [V__START,V__FINISH,V__DROP] :
      ( ( s__instance(V__DROP,s__Process)
        & s__instance(V__FINISH,s__Object)
        & s__instance(V__START,s__Object) )
     => ( ( s__instance(V__DROP,s__Falling)
          & s__origin(V__DROP,V__START)
          & s__destination(V__DROP,V__FINISH) )
       => s__orientation(V__FINISH,V__START,s__Below) ) ) ).

fof(kb_SUMO_5206,axiom,
    s__subclass(s__Transportation,s__Translocation) ).

fof(kb_SUMO_5207,axiom,
    s__instance(s__Transportation__t,s__SetOrClass) ).

fof(kb_SUMO_5208,axiom,
    s__relatedInternalConcept(s__Transportation,s__TransportationDevice) ).

fof(kb_SUMO_5209,axiom,
    s__documentation(s__Transportation,s__EnglishLanguage,'&%Motion from one point to another by means of a &%TransportationDevice.') ).

fof(kb_SUMO_5210,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__Transportation)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__Object)
            & s__instance(V__DEVICE,s__TransportationDevice)
            & s__instrument(V__TRANS,V__DEVICE) ) ) ) ).

fof(kb_SUMO_5211,axiom,
    s__subclass(s__Guiding,s__IntentionalProcess) ).

fof(kb_SUMO_5212,axiom,
    s__instance(s__Guiding__t,s__SetOrClass) ).

fof(kb_SUMO_5213,axiom,
    s__instance(s__IntentionalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5214,axiom,
    s__documentation(s__Guiding,s__EnglishLanguage,'Any &%IntentionalProcess where the &%agent tries to direct the behavior of another &%Object, whether an &%Agent or not.') ).

fof(kb_SUMO_5215,axiom,
    s__subclass(s__Driving,s__Guiding) ).

fof(kb_SUMO_5216,axiom,
    s__instance(s__Driving__t,s__SetOrClass) ).

fof(kb_SUMO_5217,axiom,
    s__documentation(s__Driving,s__EnglishLanguage,'Controlling the direction and/or speed of a &%Vehicle. This includes navigating a ship, driving a car or truck, operating a train, etc.') ).

fof(kb_SUMO_5218,axiom,
    ! [V__DRIVE] :
      ( s__instance(V__DRIVE,s__Process)
     => ( s__instance(V__DRIVE,s__Driving)
       => ? [V__VEHICLE] :
            ( s__instance(V__VEHICLE,s__Vehicle)
            & s__patient(V__DRIVE,V__VEHICLE) ) ) ) ).

fof(kb_SUMO_5219,axiom,
    s__subclass(s__EducationalProcess,s__Guiding) ).

fof(kb_SUMO_5220,axiom,
    s__instance(s__EducationalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5221,axiom,
    s__documentation(s__EducationalProcess,s__EnglishLanguage,'Any &%Process which is intended to result in &%Learning.') ).

fof(kb_SUMO_5222,axiom,
    ! [V__PERSON,V__EDUCATION] :
      ( s__instance(V__EDUCATION,s__Process)
     => ( ( s__instance(V__EDUCATION,s__EducationalProcess)
          & s__patient(V__EDUCATION,V__PERSON) )
       => s__hasPurpose(V__EDUCATION,'(? [V__LEARN] : (s__instance(V__LEARN,s__Process) & s__instance(V__LEARN,s__Learning) & s__patient(V__LEARN,V__PERSON)))') ) ) ).

fof(kb_SUMO_5223,axiom,
    s__subclass(s__ChangeOfPossession,s__SocialInteraction) ).

fof(kb_SUMO_5224,axiom,
    s__relatedInternalConcept(s__ChangeOfPossession,s__possesses__m) ).

fof(kb_SUMO_5225,axiom,
    s__documentation(s__ChangeOfPossession,s__EnglishLanguage,'The &%Class of &%Processes where ownership of something is transferred from one &%Agent to another.') ).

%FOL fof(kb_SUMO_5226,axiom,(( (! [V__CHANGE,V__OBJ,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__ChangeOfPossession) & s__patient(V__CHANGE,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT2,V__OBJ)')) => (~ (V__AGENT1 = V__AGENT2))))) ))).

%FOL fof(kb_SUMO_5227,axiom,(( (! [V__CHANGE,V__OBJ,V__AGENT2,V__AGENT1] : ((s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__ChangeOfPossession) & s__origin(V__CHANGE,V__AGENT1) & s__destination(V__CHANGE,V__AGENT2) & s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__patient(V__CHANGE,V__OBJ)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT1,V__OBJ)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__possesses(V__AGENT2,V__OBJ)'))))) ))).

fof(kb_SUMO_5228,axiom,
    s__subclass(s__Giving,s__ChangeOfPossession) ).

fof(kb_SUMO_5229,axiom,
    s__documentation(s__Giving,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where the &%agent gives the &%destination something.') ).

fof(kb_SUMO_5230,axiom,
    ! [V__OBJ,V__GIVE,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__GIVE,s__Process) )
     => ( ( s__instance(V__GIVE,s__Giving)
          & s__agent(V__GIVE,V__AGENT1)
          & s__destination(V__GIVE,V__AGENT2)
          & s__instance(V__AGENT2,s__Agent)
          & s__patient(V__GIVE,V__OBJ) )
       => ? [V__GET] :
            ( s__instance(V__GET,s__Process)
            & s__instance(V__GET,s__Getting)
            & s__agent(V__GET,V__AGENT2)
            & s__origin(V__GET,V__AGENT1)
            & s__patient(V__GET,V__OBJ) ) ) ) ).

fof(kb_SUMO_5231,axiom,
    ! [V__GIVE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__GIVE,s__Process) )
     => ( ( s__instance(V__GIVE,s__Giving)
          & s__agent(V__GIVE,V__AGENT) )
       => s__origin(V__GIVE,V__AGENT) ) ) ).

fof(kb_SUMO_5232,axiom,
    s__subclass(s__Funding,s__Giving) ).

fof(kb_SUMO_5233,axiom,
    s__instance(s__Funding__t,s__SetOrClass) ).

fof(kb_SUMO_5234,axiom,
    s__documentation(s__Funding,s__EnglishLanguage,'Any instance of &%Giving where the &%patient is an instance of &%Currency. Note that this class covers both financing, e.g. where a firm funds a software company with venture capital with the agreement that a certain percentage of the profits on the investment will be returned to the firm, and instances of &%UnilateralGiving, e.g. providing a tuition waiver and/or a stipend to a student as part of scholarship or fellowship.') ).

fof(kb_SUMO_5235,axiom,
    ! [V__FUND] :
      ( s__instance(V__FUND,s__Process)
     => ( s__instance(V__FUND,s__Funding)
       => ? [V__MONEY] :
            ( s__instance(V__MONEY,s__Currency)
            & s__patient(V__FUND,V__MONEY) ) ) ) ).

fof(kb_SUMO_5236,axiom,
    s__subclass(s__UnilateralGiving,s__Giving) ).

fof(kb_SUMO_5237,axiom,
    s__instance(s__UnilateralGiving__t,s__SetOrClass) ).

fof(kb_SUMO_5238,axiom,
    s__documentation(s__UnilateralGiving,s__EnglishLanguage,'Any instance of &%Giving that is not part of a &%Transaction. In other words, any instance of &%Giving where nothing is received in return. Some examples of &%UnilateralGiving are: honorary awards, gifts, and financial grants.') ).

fof(kb_SUMO_5239,axiom,
    ! [V__GIVE] :
      ( s__instance(V__GIVE,s__Process)
     => ( s__instance(V__GIVE,s__UnilateralGiving)
       => ~ ? [V__TRANS] :
              ( s__instance(V__TRANS,s__Process)
              & s__instance(V__TRANS,s__Transaction)
              & s__subProcess(V__GIVE,V__TRANS) ) ) ) ).

fof(kb_SUMO_5240,axiom,
    s__subclass(s__Lending,s__Giving) ).

fof(kb_SUMO_5241,axiom,
    s__instance(s__Lending__t,s__SetOrClass) ).

fof(kb_SUMO_5242,axiom,
    s__instance(s__Giving__t,s__SetOrClass) ).

fof(kb_SUMO_5243,axiom,
    s__documentation(s__Lending,s__EnglishLanguage,'The &%subclass of &%Giving &%Processes where the &%agent gives the &%destination something for a limited period of time with the expectation that it will be returned later (perhaps with interest).') ).

fof(kb_SUMO_5244,axiom,
    ! [V__OBJECT,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__AGENT2,s__Agent) )
     => ( ? [V__BORROW] :
            ( s__instance(V__BORROW,s__Process)
            & s__instance(V__BORROW,s__Borrowing)
            & s__agent(V__BORROW,V__AGENT1)
            & s__origin(V__BORROW,V__AGENT2)
            & s__patient(V__BORROW,V__OBJECT) )
      <=> ? [V__LEND] :
            ( s__instance(V__LEND,s__Process)
            & s__instance(V__LEND,s__Lending)
            & s__agent(V__LEND,V__AGENT2)
            & s__destination(V__LEND,V__AGENT1)
            & s__patient(V__LEND,V__OBJECT) ) ) ) ).

fof(kb_SUMO_5245,axiom,
    s__subclass(s__GivingBack,s__Giving) ).

fof(kb_SUMO_5246,axiom,
    s__instance(s__GivingBack__t,s__SetOrClass) ).

fof(kb_SUMO_5247,axiom,
    s__documentation(s__GivingBack,s__EnglishLanguage,'Any instance of &%Giving where the &%agent gives something to the &%destination which was previously given to the &%agent by the &%destination, e.g. returing a book that was borrowed from someone.') ).

fof(kb_SUMO_5248,axiom,
    ! [V__AGENT,V__RETURN,V__DEST] :
      ( ( s__instance(V__DEST,s__Agent)
        & s__instance(V__RETURN,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__RETURN,s__GivingBack)
          & s__agent(V__RETURN,V__AGENT)
          & s__destination(V__RETURN,V__DEST) )
       => ? [V__GIVE] :
            ( s__instance(V__GIVE,s__Process)
            & s__instance(V__GIVE,s__Giving)
            & s__agent(V__GIVE,V__DEST)
            & s__destination(V__GIVE,V__AGENT)
            & s__earlier(s__WhenFn(V__GIVE),s__WhenFn(V__RETURN)) ) ) ) ).

fof(kb_SUMO_5249,axiom,
    s__subclass(s__Getting,s__ChangeOfPossession) ).

fof(kb_SUMO_5250,axiom,
    s__instance(s__Getting__t,s__SetOrClass) ).

fof(kb_SUMO_5251,axiom,
    s__instance(s__ChangeOfPossession__t,s__SetOrClass) ).

fof(kb_SUMO_5252,axiom,
    s__documentation(s__Getting,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where the &%agent gets something. Note that the source from which something is obtained is specified with the &%origin &%CaseRole.') ).

fof(kb_SUMO_5253,axiom,
    ! [V__GET,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__GET,s__Process) )
     => ( ( s__instance(V__GET,s__Getting)
          & s__agent(V__GET,V__AGENT) )
       => s__destination(V__GET,V__AGENT) ) ) ).

fof(kb_SUMO_5254,axiom,
    s__subclass(s__UnilateralGetting,s__Getting) ).

fof(kb_SUMO_5255,axiom,
    s__instance(s__UnilateralGetting__t,s__SetOrClass) ).

fof(kb_SUMO_5256,axiom,
    s__relatedInternalConcept(s__UnilateralGetting,s__UnilateralGiving) ).

fof(kb_SUMO_5257,axiom,
    s__documentation(s__UnilateralGetting,s__EnglishLanguage,'Any instance of &%Getting that is not part of a &%Transaction. In other words, any instance of &%Getting where nothing is given in return. Some examples of &%UnilateralGetting are: appropriating, commandeering, stealing, etc.') ).

fof(kb_SUMO_5258,axiom,
    ! [V__GET] :
      ( s__instance(V__GET,s__Process)
     => ( s__instance(V__GET,s__UnilateralGetting)
       => ~ ? [V__TRANS] :
              ( s__instance(V__TRANS,s__Process)
              & s__instance(V__TRANS,s__Transaction)
              & s__subProcess(V__GET,V__TRANS) ) ) ) ).

fof(kb_SUMO_5259,axiom,
    s__subclass(s__Borrowing,s__Getting) ).

fof(kb_SUMO_5260,axiom,
    s__instance(s__Borrowing__t,s__SetOrClass) ).

fof(kb_SUMO_5261,axiom,
    s__documentation(s__Borrowing,s__EnglishLanguage,'The &%subclass of &%Getting &%Processes where the &%agent gets something for a limited period of time with the expectation that it will be returned later (perhaps with interest).') ).

fof(kb_SUMO_5262,axiom,
    s__subclass(s__Transaction,s__ChangeOfPossession) ).

fof(kb_SUMO_5263,axiom,
    s__subclass(s__Transaction,s__DualObjectProcess) ).

fof(kb_SUMO_5264,axiom,
    s__instance(s__Transaction__t,s__SetOrClass) ).

fof(kb_SUMO_5265,axiom,
    s__documentation(s__Transaction,s__EnglishLanguage,'The &%subclass of &%ChangeOfPossession where something is exchanged for something else.') ).

fof(kb_SUMO_5266,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__Transaction)
       => ? [V__AGENT1,V__AGENT2,V__GIVE1,V__GIVE2,V__OBJ1,V__OBJ2] :
            ( s__instance(V__GIVE2,s__Process)
            & s__instance(V__GIVE1,s__Process)
            & s__instance(V__AGENT2,s__Agent)
            & s__instance(V__AGENT1,s__Agent)
            & s__instance(V__GIVE1,s__Giving)
            & s__instance(V__GIVE2,s__Giving)
            & s__subProcess(V__GIVE1,V__TRANS)
            & s__subProcess(V__GIVE2,V__TRANS)
            & s__agent(V__GIVE1,V__AGENT1)
            & s__agent(V__GIVE2,V__AGENT2)
            & s__patient(V__GIVE1,V__OBJ1)
            & s__patient(V__GIVE2,V__OBJ2)
            & s__destination(V__GIVE1,V__AGENT2)
            & s__destination(V__GIVE2,V__AGENT1)
            & V__AGENT1 != V__AGENT2
            & V__OBJ1 != V__OBJ2 ) ) ) ).

fof(kb_SUMO_5267,axiom,
    s__subclass(s__FinancialTransaction,s__Transaction) ).

fof(kb_SUMO_5268,axiom,
    s__documentation(s__FinancialTransaction,s__EnglishLanguage,'A &%Transaction where an instance of &%FinancialInstrument is the subject of the action, and often is exchanged for something else.') ).

fof(kb_SUMO_5269,axiom,
    ! [V__TRANS] :
      ( s__instance(V__TRANS,s__Process)
     => ( s__instance(V__TRANS,s__FinancialTransaction)
       => ? [V__OBJ] :
            ( s__patient(V__TRANS,V__OBJ)
            & s__instance(V__OBJ,s__FinancialInstrument) ) ) ) ).

fof(kb_SUMO_5270,axiom,
    s__instance(s__transactionAmount__m,s__BinaryPredicate) ).

fof(kb_SUMO_5271,axiom,
    s__instance(s__transactionAmount__m,s__SingleValuedRelation) ).

fof(kb_SUMO_5272,axiom,
    s__instance(s__transactionAmount__m,s__TotalValuedRelation) ).

fof(kb_SUMO_5273,axiom,
    s__domain(s__transactionAmount__m,"1",s__FinancialTransaction) ).

fof(kb_SUMO_5274,axiom,
    s__domain(s__transactionAmount__m,"2",s__CurrencyMeasure) ).

fof(kb_SUMO_5275,axiom,
    s__documentation(s__transactionAmount__m,s__EnglishLanguage,'(&%transactionAmount ?TRANSACTION ?AMOUNT) means that ?AMOUNT is an instance of &%CurrencyMeasure being exhanged in the &%FinancialTransaction ?TRANSACTION.') ).

fof(kb_SUMO_5276,axiom,
    ! [V__AMOUNT,V__TRANS] :
      ( ( s__instance(V__TRANS,s__FinancialTransaction)
        & s__instance(V__AMOUNT,s__CurrencyMeasure) )
     => ( s__transactionAmount(V__TRANS,V__AMOUNT)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Physical)
            & s__patient(V__TRANS,V__OBJ)
            & s__monetaryValue(V__OBJ,V__AMOUNT) ) ) ) ).

fof(kb_SUMO_5277,axiom,
    s__subclass(s__ServiceProcess,s__SocialInteraction) ).

fof(kb_SUMO_5278,axiom,
    s__documentation(s__ServiceProcess,s__EnglishLanguage,'&%ServiceProcess denotes the class of events in which one agent performs a service for another. The service need not be commercial, and it need not be the case that the &%serviceRecipient pays or recompenses the &%serviceProvider for the service.') ).

fof(kb_SUMO_5279,axiom,
    s__subclass(s__CommercialService,s__FinancialTransaction) ).

fof(kb_SUMO_5280,axiom,
    s__instance(s__CommercialService__t,s__SetOrClass) ).

fof(kb_SUMO_5281,axiom,
    s__instance(s__FinancialTransaction__t,s__SetOrClass) ).

fof(kb_SUMO_5282,axiom,
    s__documentation(s__CommercialService,s__EnglishLanguage,'Any &%FinancialTransaction by a &%CommercialAgent where the aim is to produce a profit.') ).

fof(kb_SUMO_5283,axiom,
    s__subclass(s__CommercialService,s__ServiceProcess) ).

fof(kb_SUMO_5284,axiom,
    s__instance(s__ServiceProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5285,axiom,
    ! [V__BUSINESS] :
      ( s__instance(V__BUSINESS,s__Process)
     => ( s__instance(V__BUSINESS,s__CommercialService)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Agent)
            & s__instance(V__AGENT,s__CommercialAgent)
            & s__agent(V__BUSINESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_5286,axiom,
    s__subclass(s__Betting,s__FinancialTransaction) ).

fof(kb_SUMO_5287,axiom,
    s__instance(s__Betting__t,s__SetOrClass) ).

fof(kb_SUMO_5288,axiom,
    s__documentation(s__Betting,s__EnglishLanguage,'A &%FinancialTransaction where an instance of &%CurrencyMeasure is exchanged for the possibility of winning a larger instance of &%CurrencyMeasure within the context of some sort of &%Game.') ).

fof(kb_SUMO_5289,axiom,
    s__subclass(s__Buying,s__FinancialTransaction) ).

fof(kb_SUMO_5290,axiom,
    s__instance(s__Buying__t,s__SetOrClass) ).

fof(kb_SUMO_5291,axiom,
    s__relatedInternalConcept(s__Buying,s__Selling) ).

fof(kb_SUMO_5292,axiom,
    s__documentation(s__Buying,s__EnglishLanguage,'A &%FinancialTransaction in which an instance of &%CurrencyMeasure is exchanged for an instance of &%Physical.') ).

fof(kb_SUMO_5293,axiom,
    ! [V__BUY,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__BUY,s__Process) )
     => ( ( s__instance(V__BUY,s__Buying)
          & s__agent(V__BUY,V__AGENT) )
       => s__destination(V__BUY,V__AGENT) ) ) ).

fof(kb_SUMO_5294,axiom,
    s__subclass(s__Selling,s__FinancialTransaction) ).

fof(kb_SUMO_5295,axiom,
    s__instance(s__Selling__t,s__SetOrClass) ).

fof(kb_SUMO_5296,axiom,
    s__documentation(s__Selling,s__EnglishLanguage,'A &%FinancialTransaction in which an instance of &%Physical is exchanged for an instance of &%CurrencyMeasure.') ).

fof(kb_SUMO_5297,axiom,
    ! [V__OBJECT,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Agent)
        & s__instance(V__AGENT2,s__Agent) )
     => ( ? [V__BUY] :
            ( s__instance(V__BUY,s__Process)
            & s__instance(V__BUY,s__Buying)
            & s__agent(V__BUY,V__AGENT1)
            & s__origin(V__BUY,V__AGENT2)
            & s__patient(V__BUY,V__OBJECT) )
      <=> ? [V__SELL] :
            ( s__instance(V__SELL,s__Process)
            & s__instance(V__SELL,s__Selling)
            & s__agent(V__SELL,V__AGENT2)
            & s__destination(V__SELL,V__AGENT1)
            & s__patient(V__SELL,V__OBJECT) ) ) ) ).

fof(kb_SUMO_5298,axiom,
    ! [V__AGENT,V__SELL] :
      ( ( s__instance(V__SELL,s__Process)
        & s__instance(V__AGENT,s__Agent) )
     => ( ( s__instance(V__SELL,s__Selling)
          & s__agent(V__SELL,V__AGENT) )
       => s__origin(V__SELL,V__AGENT) ) ) ).

fof(kb_SUMO_5299,axiom,
    s__subclass(s__Learning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5300,axiom,
    s__instance(s__Learning__t,s__SetOrClass) ).

fof(kb_SUMO_5301,axiom,
    s__documentation(s__Learning,s__EnglishLanguage,'The &%Class of &%Processes which relate to the acquisition of information.') ).

fof(kb_SUMO_5302,axiom,
    ! [V__LEARN,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__LEARN,s__Process) )
     => ( ( s__instance(V__LEARN,s__Learning)
          & s__agent(V__LEARN,V__AGENT) )
       => s__instance(V__AGENT,s__CognitiveAgent) ) ) ).

%FOL fof(kb_SUMO_5303,axiom,(( (! [V__LEARN,V__PROP,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PROP,s__Formula) & s__instance(V__LEARN,s__Process)) => ((s__instance(V__LEARN,s__Learning) & s__agent(V__LEARN,V__AGENT) & s__patient(V__LEARN,V__PROP)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__LEARN)),'(~ s__knows(V__AGENT,V__PROP))') & s__holdsDuring(s__EndFn(s__WhenFn(V__LEARN)),'s__knows(V__AGENT,V__PROP)'))))) ))).

fof(kb_SUMO_5304,axiom,
    s__subclass(s__Discovering,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5305,axiom,
    s__instance(s__Discovering__t,s__SetOrClass) ).

fof(kb_SUMO_5306,axiom,
    s__documentation(s__Discovering,s__EnglishLanguage,'Finding something that was sought. Note that this class is restricted to cases of discovering something &%Physical. For cases involving the acquisition of knowledge, the class &%Learning should be used.') ).

fof(kb_SUMO_5307,axiom,
    ! [V__OBJ,V__DISCOVER] :
      ( s__instance(V__DISCOVER,s__Process)
     => ( ( s__instance(V__DISCOVER,s__Discovering)
          & s__patient(V__DISCOVER,V__OBJ) )
       => ? [V__PURSUE] :
            ( s__instance(V__PURSUE,s__Physical)
            & s__instance(V__PURSUE,s__Pursuing)
            & s__meetsTemporally(s__WhenFn(V__PURSUE),s__WhenFn(V__DISCOVER)) ) ) ) ).

%FOL fof(kb_SUMO_5308,axiom,(( (! [V__OBJ,V__PLACE,V__DISCOVER] : ((s__instance(V__DISCOVER,s__Process) & s__instance(V__PLACE,s__Object) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__DISCOVER,s__Discovering) & s__patient(V__DISCOVER,V__OBJ) & s__holdsDuring(s__WhenFn(V__DISCOVER),'s__located(V__OBJ,V__PLACE)')) => (? [V__LEARN] : (s__instance(V__LEARN,s__Process) & s__instance(V__LEARN,s__Learning) & s__subProcess(V__LEARN,V__DISCOVER) & s__patient(V__LEARN,'s__located(V__OBJ,V__PLACE)')))))) ))).

fof(kb_SUMO_5309,axiom,
    s__subclass(s__Classifying,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5310,axiom,
    s__instance(s__Classifying__t,s__SetOrClass) ).

fof(kb_SUMO_5311,axiom,
    s__documentation(s__Classifying,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve attaching a name or category to a thing or set of things. Note that &%Classifying is distinguished from &%Learning by the fact that the latter covers the acquisition by a &%CognitiveAgent of any &%Proposition, while the former involves the assignment of a label or category.') ).

fof(kb_SUMO_5312,axiom,
    s__subclass(s__Reasoning,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5313,axiom,
    s__instance(s__Reasoning__t,s__SetOrClass) ).

fof(kb_SUMO_5314,axiom,
    s__documentation(s__Reasoning,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve concluding, on the basis of either deductive or inductive evidence, that a particular &%Proposition or &%Sentence is true.') ).

fof(kb_SUMO_5315,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( s__instance(V__AGENT,s__CognitiveAgent)
       => s__capability(s__Reasoning,s__agent__m,V__AGENT) ) ) ).

fof(kb_SUMO_5316,axiom,
    s__subclass(s__Selecting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5317,axiom,
    s__documentation(s__Selecting,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve opting for one or more &%Entity out of a larger set of &%Entities. Note that this covers all cases of judging or evaluating.') ).

fof(kb_SUMO_5318,axiom,
    s__subclass(s__Deciding,s__Selecting) ).

fof(kb_SUMO_5319,axiom,
    s__instance(s__Selecting__t,s__SetOrClass) ).

fof(kb_SUMO_5320,axiom,
    s__documentation(s__Deciding,s__EnglishLanguage,'The subclass of &%Selecting where the &%agent opts for one course of action out of a set of multiple possibilities that are open to him/her.') ).

fof(kb_SUMO_5321,axiom,
    ! [V__PROCESS,V__AGENT,V__DECIDE] :
      ( ( s__instance(V__DECIDE,s__Process)
        & s__instance(V__AGENT,s__Agent)
        & s__instance(V__PROCESS,s__Process) )
     => ( ( s__instance(V__DECIDE,s__Deciding)
          & s__agent(V__DECIDE,V__AGENT)
          & s__patient(V__DECIDE,V__PROCESS) )
       => ( s__instance(V__PROCESS,s__IntentionalProcess)
          & s__agent(V__PROCESS,V__AGENT) ) ) ) ).

fof(kb_SUMO_5322,axiom,
    s__subclass(s__Voting,s__Deciding) ).

fof(kb_SUMO_5323,axiom,
    s__instance(s__Voting__t,s__SetOrClass) ).

fof(kb_SUMO_5324,axiom,
    s__instance(s__Deciding__t,s__SetOrClass) ).

fof(kb_SUMO_5325,axiom,
    s__documentation(s__Voting,s__EnglishLanguage,'&%Voting is the activity of voting in an &%Election. Voting is typically done by individuals, while &%Elections are conducted by &%Organizations. The voting process by an individual voter is part of an &%Election process.') ).

fof(kb_SUMO_5326,axiom,
    ! [V__VOTE] :
      ( s__instance(V__VOTE,s__Process)
     => ( s__instance(V__VOTE,s__Voting)
       => ? [V__ELECT] :
            ( s__instance(V__ELECT,s__Process)
            & s__instance(V__ELECT,s__Election)
            & s__subProcess(V__VOTE,V__ELECT) ) ) ) ).

fof(kb_SUMO_5327,axiom,
    s__subclass(s__Judging,s__Selecting) ).

fof(kb_SUMO_5328,axiom,
    s__instance(s__Judging__t,s__SetOrClass) ).

fof(kb_SUMO_5329,axiom,
    s__documentation(s__Judging,s__EnglishLanguage,'The subclass of &%Selecting where the &%agent opts for one belief out of a set of multiple possibilities that are available to him/her.') ).

%FOL fof(kb_SUMO_5330,axiom,(( (! [V__PROPOSITION,V__AGENT,V__JUDGE] : ((s__instance(V__JUDGE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PROPOSITION,s__Formula)) => ((s__instance(V__JUDGE,s__Judging) & s__agent(V__JUDGE,V__AGENT) & s__patient(V__JUDGE,V__PROPOSITION)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__JUDGE)),'(~ s__believes(V__AGENT,V__PROPOSITION))') & s__holdsDuring(s__EndFn(s__WhenFn(V__JUDGE)),'s__believes(V__AGENT,V__PROPOSITION)'))))) ))).

fof(kb_SUMO_5331,axiom,
    s__subclass(s__Comparing,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5332,axiom,
    s__subclass(s__Comparing,s__DualObjectProcess) ).

fof(kb_SUMO_5333,axiom,
    s__instance(s__Comparing__t,s__SetOrClass) ).

fof(kb_SUMO_5334,axiom,
    s__documentation(s__Comparing,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve comparing, relating, contrasting, etc. the properties of two or more &%Entities.') ).

fof(kb_SUMO_5335,axiom,
    s__subclass(s__Calculating,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5336,axiom,
    s__instance(s__Calculating__t,s__SetOrClass) ).

fof(kb_SUMO_5337,axiom,
    s__documentation(s__Calculating,s__EnglishLanguage,'&%IntentionalPsychologicalProcesses which involve the consideration and/or manipulation of instances of &%Quantity.') ).

fof(kb_SUMO_5338,axiom,
    s__subclass(s__Measuring,s__Calculating) ).

fof(kb_SUMO_5339,axiom,
    s__instance(s__Measuring__t,s__SetOrClass) ).

fof(kb_SUMO_5340,axiom,
    s__documentation(s__Measuring,s__EnglishLanguage,'The &%Class of &%Calculating &%Processes where the aim is to determine the &%PhysicalQuantity of some aspect of the &%patient.') ).

%FOL fof(kb_SUMO_5341,axiom,(( (! [V__OBJ,V__MEAS,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__MEAS,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MEAS,s__Measuring) & s__agent(V__MEAS,V__AGENT) & s__patient(V__MEAS,V__OBJ)) => (? [V__QUANT,V__UNIT] : (s__instance(V__UNIT,s__UnitOfMeasure) & s__instance(V__QUANT,s__RealNumber) & s__holdsDuring(s__EndFn(s__WhenFn(V__MEAS)),'s__knows(V__AGENT,s__measure(V__OBJ,s__MeasureFn(V__QUANT,V__UNIT)))')))))) ))).

fof(kb_SUMO_5342,axiom,
    s__subclass(s__Counting,s__Calculating) ).

fof(kb_SUMO_5343,axiom,
    s__instance(s__Counting__t,s__SetOrClass) ).

fof(kb_SUMO_5344,axiom,
    s__documentation(s__Counting,s__EnglishLanguage,'Enumerating something. The &%Class of &%Calculating &%Processes where the aim is to determine the &%Number corresponding to the &%patient.') ).

fof(kb_SUMO_5345,axiom,
    ! [V__COUNT,V__AGENT,V__ENTITY] :
      ( ( s__instance(V__ENTITY,s__UnionFn(s__SetOrClass,s__Collection))
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__COUNT,s__Process) )
     => ( ( s__instance(V__COUNT,s__Counting)
          & s__agent(V__COUNT,V__AGENT)
          & s__patient(V__COUNT,V__ENTITY) )
       => ? [V__NUMBER] : s__knows(V__AGENT,'(s__CardinalityFn(V__ENTITY) = V__NUMBER)') ) ) ).

fof(kb_SUMO_5346,axiom,
    s__subclass(s__Predicting,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5347,axiom,
    s__instance(s__Predicting__t,s__SetOrClass) ).

fof(kb_SUMO_5348,axiom,
    s__documentation(s__Predicting,s__EnglishLanguage,'The &%Class of &%IntentionalPsychologicalProcesses which involve the formulation of a &%Proposition about a state of affairs which might be realized in the future.') ).

fof(kb_SUMO_5349,axiom,
    ! [V__FORMULA,V__PREDICT] :
      ( ( s__instance(V__PREDICT,s__Process)
        & s__instance(V__FORMULA,s__Formula) )
     => ( ( s__instance(V__PREDICT,s__Predicting)
          & s__patient(V__PREDICT,V__FORMULA) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__TIME,s__TimeInterval)
            & s__holdsDuring(V__TIME,V__FORMULA)
            & ( s__before(V__TIME,s__WhenFn(V__PREDICT))
              | s__earlier(V__TIME,s__WhenFn(V__PREDICT)) ) ) ) ) ).

fof(kb_SUMO_5350,axiom,
    s__subclass(s__Remembering,s__PsychologicalProcess) ).

fof(kb_SUMO_5351,axiom,
    s__instance(s__Remembering__t,s__SetOrClass) ).

fof(kb_SUMO_5352,axiom,
    s__documentation(s__Remembering,s__EnglishLanguage,'The &%Class of &%PsychologicalProcesses which involve the recollection of prior experiences and/or of knowledge which was previously acquired.') ).

fof(kb_SUMO_5353,axiom,
    ! [V__REMEMBER,V__FORMULA] :
      ( ( s__instance(V__FORMULA,s__Formula)
        & s__instance(V__REMEMBER,s__Process) )
     => ( ( s__instance(V__REMEMBER,s__Remembering)
          & s__patient(V__REMEMBER,V__FORMULA) )
       => ? [V__TIME] :
            ( s__instance(V__TIME,s__TimePoint)
            & s__instance(V__TIME,s__TimeInterval)
            & s__holdsDuring(V__TIME,V__FORMULA)
            & ( s__before(V__TIME,s__WhenFn(V__REMEMBER))
              | s__earlier(V__TIME,s__WhenFn(V__REMEMBER)) ) ) ) ) ).

fof(kb_SUMO_5354,axiom,
    s__subclass(s__Keeping,s__IntentionalProcess) ).

fof(kb_SUMO_5355,axiom,
    s__instance(s__Keeping__t,s__SetOrClass) ).

fof(kb_SUMO_5356,axiom,
    s__documentation(s__Keeping,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent keeps something in a particular location for an extended period of time.') ).

fof(kb_SUMO_5357,axiom,
    ! [V__OBJ,V__KEEP,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__KEEP,s__Process) )
     => ( ( s__instance(V__KEEP,s__Keeping)
          & s__agent(V__KEEP,V__AGENT)
          & s__patient(V__KEEP,V__OBJ) )
       => ? [V__PUT] :
            ( s__instance(V__PUT,s__Process)
            & s__instance(V__PUT,s__Putting)
            & s__agent(V__PUT,V__AGENT)
            & s__patient(V__PUT,V__OBJ)
            & s__earlier(s__WhenFn(V__PUT),s__WhenFn(V__KEEP)) ) ) ) ).

%FOL fof(kb_SUMO_5358,axiom,(( (! [V__OBJ,V__KEEP] : ((s__instance(V__KEEP,s__Keeping) & s__patient(V__KEEP,V__OBJ)) => (? [V__PLACE] : (s__instance(V__PLACE,s__Object) & (! [V__TIME] : ((s__instance(V__TIME,s__TimePosition) & s__instance(V__KEEP,s__Process) & s__instance(V__OBJ,s__Physical)) => (s__temporalPart(V__TIME,s__WhenFn(V__KEEP)) => s__holdsDuring(V__TIME,'s__located(V__OBJ,V__PLACE)')))))))) ))).

fof(kb_SUMO_5359,axiom,
    s__subclass(s__Confining,s__Keeping) ).

fof(kb_SUMO_5360,axiom,
    s__instance(s__Confining__t,s__SetOrClass) ).

fof(kb_SUMO_5361,axiom,
    s__documentation(s__Confining,s__EnglishLanguage,'The &%Class of &%Keeping &%Processes where the &%patient is a &%Human or an &%Animal and is kept involuntarily. This covers caging, imprisonment, jailing, etc.') ).

fof(kb_SUMO_5362,axiom,
    ! [V__CONFINE] :
      ( s__instance(V__CONFINE,s__Process)
     => ( s__instance(V__CONFINE,s__Confining)
       => ? [V__AGENT] :
            ( s__instance(V__AGENT,s__Animal)
            & s__patient(V__CONFINE,V__AGENT) ) ) ) ).

%FOL fof(kb_SUMO_5363,axiom,(( (! [V__PERSON,V__CONFINE] : ((s__instance(V__CONFINE,s__Process) & s__instance(V__PERSON,s__CognitiveAgent)) => ((s__instance(V__CONFINE,s__Confining) & s__patient(V__CONFINE,V__PERSON) & s__instance(V__PERSON,s__Human)) => (~ s__desires(V__PERSON,'s__patient(V__CONFINE,V__PERSON)'))))) ))).

fof(kb_SUMO_5364,axiom,
    s__subclass(s__Maintaining,s__IntentionalProcess) ).

fof(kb_SUMO_5365,axiom,
    s__instance(s__Maintaining__t,s__SetOrClass) ).

fof(kb_SUMO_5366,axiom,
    s__documentation(s__Maintaining,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent cares for or maintains the &%Object.') ).

fof(kb_SUMO_5367,axiom,
    s__subclass(s__Repairing,s__IntentionalProcess) ).

fof(kb_SUMO_5368,axiom,
    s__instance(s__Repairing__t,s__SetOrClass) ).

fof(kb_SUMO_5369,axiom,
    s__relatedInternalConcept(s__Repairing,s__Maintaining) ).

fof(kb_SUMO_5370,axiom,
    s__documentation(s__Repairing,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent makes a modification or series of modifications to an &%Object that is not functioning as intended so that it works properly.') ).

fof(kb_SUMO_5371,axiom,
    ! [V__OBJ,V__REPAIR] :
      ( s__instance(V__REPAIR,s__Process)
     => ( ( s__instance(V__REPAIR,s__Repairing)
          & s__patient(V__REPAIR,V__OBJ) )
       => ? [V__DAMAGE] :
            ( s__instance(V__DAMAGE,s__Process)
            & s__instance(V__DAMAGE,s__Damaging)
            & s__patient(V__DAMAGE,V__OBJ)
            & s__earlier(s__WhenFn(V__DAMAGE),s__WhenFn(V__REPAIR)) ) ) ) ).

fof(kb_SUMO_5372,axiom,
    s__subclass(s__TherapeuticProcess,s__Repairing) ).

fof(kb_SUMO_5373,axiom,
    s__documentation(s__TherapeuticProcess,s__EnglishLanguage,'A &%Process that is carried out for the purpose of curing, improving or reducing the pain associated with a &%DiseaseOrSyndrome.') ).

fof(kb_SUMO_5374,axiom,
    ! [V__BIO,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__BIO,s__Object) )
     => ( ( s__instance(V__PROC,s__TherapeuticProcess)
          & s__patient(V__PROC,V__BIO) )
       => ( s__instance(V__BIO,s__Organism)
          | ? [V__ORG] :
              ( s__instance(V__ORG,s__Object)
              & s__instance(V__ORG,s__Organism)
              & s__part(V__BIO,V__ORG) ) ) ) ) ).

fof(kb_SUMO_5375,axiom,
    s__subclass(s__Surgery,s__TherapeuticProcess) ).

fof(kb_SUMO_5376,axiom,
    s__instance(s__Surgery__t,s__SetOrClass) ).

fof(kb_SUMO_5377,axiom,
    s__instance(s__TherapeuticProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5378,axiom,
    s__documentation(s__Surgery,s__EnglishLanguage,'Any &%TherapeuticProcess that involves making an incision in the &%Animal that is the &%patient of the &%TherapeuticProcess.') ).

fof(kb_SUMO_5379,axiom,
    ! [V__ACT,V__ANIMAL] :
      ( s__instance(V__ACT,s__Process)
     => ( ( s__instance(V__ACT,s__Surgery)
          & s__patient(V__ACT,V__ANIMAL) )
       => ? [V__SUBACT] :
            ( s__instance(V__SUBACT,s__Process)
            & s__instance(V__SUBACT,s__Cutting)
            & s__instance(V__ANIMAL,s__Animal)
            & s__patient(V__SUBACT,V__ANIMAL)
            & s__subProcess(V__SUBACT,V__ACT) ) ) ) ).

fof(kb_SUMO_5380,axiom,
    s__subclass(s__Damaging,s__InternalChange) ).

fof(kb_SUMO_5381,axiom,
    s__disjoint(s__Damaging,s__Repairing) ).

fof(kb_SUMO_5382,axiom,
    s__documentation(s__Damaging,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent brings about a situation where the &%patient no longer functions normally or as intended.') ).

fof(kb_SUMO_5383,axiom,
    s__subclass(s__Destruction,s__Damaging) ).

fof(kb_SUMO_5384,axiom,
    s__documentation(s__Destruction,s__EnglishLanguage,'The &%subclass of &%Damagings in which the &%patient (or an essential element of the &%patient) is destroyed. Note that the difference between this concept and its superclass is solely one of extent.') ).

fof(kb_SUMO_5385,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Destruction)
      <=> ? [V__PATIENT] :
            ( s__instance(V__PATIENT,s__Physical)
            & s__patient(V__PROCESS,V__PATIENT)
            & s__time(V__PATIENT,s__BeginFn(s__WhenFn(V__PROCESS)))
            & ~ s__time(V__PATIENT,s__EndFn(s__WhenFn(V__PROCESS))) ) ) ) ).

fof(kb_SUMO_5386,axiom,
    s__subclass(s__Killing,s__Destruction) ).

fof(kb_SUMO_5387,axiom,
    s__instance(s__Killing__t,s__SetOrClass) ).

fof(kb_SUMO_5388,axiom,
    s__instance(s__Destruction__t,s__SetOrClass) ).

fof(kb_SUMO_5389,axiom,
    s__documentation(s__Killing,s__EnglishLanguage,'The &%subclass of &%Destruction in which the death of an &%Organism is caused by an &%Organism. Note that in cases of suicide the &%Organism would be the same in both cases.') ).

fof(kb_SUMO_5390,axiom,
    ! [V__PATIENT,V__KILL,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__KILL,s__Process) )
     => ( ( s__instance(V__KILL,s__Killing)
          & s__agent(V__KILL,V__AGENT)
          & s__patient(V__KILL,V__PATIENT) )
       => ( s__instance(V__AGENT,s__Organism)
          & s__instance(V__PATIENT,s__Organism) ) ) ) ).

%FOL fof(kb_SUMO_5391,axiom,(( (! [V__PATIENT,V__KILL] : ((s__instance(V__KILL,s__Process) & s__instance(V__PATIENT,s__Object)) => ((s__instance(V__KILL,s__Killing) & s__patient(V__KILL,V__PATIENT)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__KILL)),'s__attribute(V__PATIENT,s__Living)') & s__holdsDuring(s__FutureFn(s__WhenFn(V__KILL)),'s__attribute(V__PATIENT,s__Dead)'))))) ))).

fof(kb_SUMO_5392,axiom,
    ! [V__OBJ,V__KILL] :
      ( ( s__instance(V__KILL,s__Process)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__KILL,s__Killing)
          & s__patient(V__KILL,V__OBJ) )
       => ? [V__DEATH] :
            ( s__instance(V__DEATH,s__Process)
            & s__instance(V__DEATH,s__Death)
            & s__experiencer(V__DEATH,V__OBJ)
            & s__causes(V__KILL,V__DEATH) ) ) ) ).

fof(kb_SUMO_5393,axiom,
    s__subclass(s__Poking,s__IntentionalProcess) ).

fof(kb_SUMO_5394,axiom,
    s__instance(s__Poking__t,s__SetOrClass) ).

fof(kb_SUMO_5395,axiom,
    s__documentation(s__Poking,s__EnglishLanguage,'The &%Class of &%Processes where the &%agent pierces the surface of the &%Object with an &%instrument.') ).

%FOL fof(kb_SUMO_5396,axiom,(( (! [V__OBJ,V__INST,V__AGENT,V__POKE] : ((s__instance(V__POKE,s__Process) & s__instance(V__AGENT,s__Agent) & s__instance(V__AGENT,s__SelfConnectedObject) & s__instance(V__INST,s__SelfConnectedObject) & s__instance(V__OBJ,s__SelfConnectedObject)) => ((s__instance(V__POKE,s__Poking) & s__agent(V__POKE,V__AGENT) & s__patient(V__POKE,V__OBJ) & s__instrument(V__POKE,V__INST)) => s__holdsDuring(s__WhenFn(V__POKE),'s__connects(V__INST,V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_5397,axiom,
    s__subclass(s__Cutting,s__Poking) ).

fof(kb_SUMO_5398,axiom,
    s__instance(s__Cutting__t,s__SetOrClass) ).

fof(kb_SUMO_5399,axiom,
    s__documentation(s__Cutting,s__EnglishLanguage,'The &%subclass of &%Poking &%Processes which involve a sharp &%instrument.') ).

fof(kb_SUMO_5400,axiom,
    s__subclass(s__Attaching,s__DualObjectProcess) ).

fof(kb_SUMO_5401,axiom,
    s__instance(s__Attaching__t,s__SetOrClass) ).

fof(kb_SUMO_5402,axiom,
    s__disjoint(s__Attaching,s__Detaching) ).

fof(kb_SUMO_5403,axiom,
    s__relatedInternalConcept(s__Attaching,s__Putting) ).

fof(kb_SUMO_5404,axiom,
    s__documentation(s__Attaching,s__EnglishLanguage,'A &%Process where one &%Object becomes attached to another &%Object. Note that this differs from &%Putting in that two things which are attached may already be in the same location. Note that &%Combining is different from &%Attaching in that the former applies to &%Substances, while the latter applies to &%CorpuscularObjects. Note too that &%Attaching is different from &%Putting in that one or both of the two things which are attached may or may not be moved from the location where they were combined.') ).

%FOL fof(kb_SUMO_5405,axiom,(( (! [V__ATTACH,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Object) & s__instance(V__ATTACH,s__Process)) => ((s__instance(V__ATTACH,s__Attaching) & s__patient(V__ATTACH,V__OBJ1) & s__patient(V__ATTACH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__ATTACH)),'(~ s__connected(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ATTACH)),'s__connected(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_5406,axiom,
    ! [V__ATTACH] :
      ( s__instance(V__ATTACH,s__Process)
     => ( s__instance(V__ATTACH,s__Attaching)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__CorpuscularObject)
            & s__patient(V__ATTACH,V__OBJ) ) ) ) ).

fof(kb_SUMO_5407,axiom,
    s__subclass(s__Detaching,s__DualObjectProcess) ).

fof(kb_SUMO_5408,axiom,
    s__instance(s__Detaching__t,s__SetOrClass) ).

fof(kb_SUMO_5409,axiom,
    s__documentation(s__Detaching,s__EnglishLanguage,'A &%Process where the &%agent detaches one thing from something else. Note that &%Detaching is different from &%Separating in that the latter applies to &%Substances, while the former applies to &%CorpuscularObjects. Note too that &%Detaching is different from &%Removing in that one or both of the two things which are detached may or may not be moved from the location where they were attached.') ).

%FOL fof(kb_SUMO_5410,axiom,(( (! [V__DETACH,V__OBJ1,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__OBJ1,s__Object) & s__instance(V__DETACH,s__Process)) => ((s__instance(V__DETACH,s__Detaching) & s__patient(V__DETACH,V__OBJ1) & s__patient(V__DETACH,V__OBJ2)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__DETACH)),'s__connected(V__OBJ1,V__OBJ2)') & s__holdsDuring(s__EndFn(s__WhenFn(V__DETACH)),'(~ s__connected(V__OBJ1,V__OBJ2))'))))) ))).

fof(kb_SUMO_5411,axiom,
    ! [V__DETACH] :
      ( s__instance(V__DETACH,s__Process)
     => ( s__instance(V__DETACH,s__Detaching)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__CorpuscularObject)
            & s__patient(V__DETACH,V__OBJ) ) ) ) ).

fof(kb_SUMO_5412,axiom,
    s__subclass(s__Ungrasping,s__Detaching) ).

fof(kb_SUMO_5413,axiom,
    s__instance(s__Ungrasping__t,s__SetOrClass) ).

fof(kb_SUMO_5414,axiom,
    s__documentation(s__Ungrasping,s__EnglishLanguage,'Any instance of &%Detaching which results in a situation where it is not the case that the &%agent &%grasps something which he/she &%grasps previously.') ).

%FOL fof(kb_SUMO_5415,axiom,(( (! [V__RELEASE,V__GRAB,V__AGENT,V__THING] : ((s__instance(V__THING,s__Object) & s__instance(V__AGENT,s__Animal) & s__instance(V__GRAB,s__Process) & s__instance(V__RELEASE,s__Physical)) => ((s__instance(V__RELEASE,s__Ungrasping) & s__agent(V__GRAB,V__AGENT) & s__patient(V__GRAB,V__THING)) => (s__holdsDuring(s__BeginFn(s__WhenFn(V__RELEASE)),'s__grasps(V__AGENT,V__THING)') & s__holdsDuring(s__EndFn(s__WhenFn(V__RELEASE)),'(~ s__grasps(V__AGENT,V__THING))'))))) ))).

fof(kb_SUMO_5416,axiom,
    s__subclass(s__Combining,s__DualObjectProcess) ).

fof(kb_SUMO_5417,axiom,
    s__instance(s__Combining__t,s__SetOrClass) ).

fof(kb_SUMO_5418,axiom,
    s__documentation(s__Combining,s__EnglishLanguage,'A &%Process where two or more &%SelfConnectedObjects are incorporated into a single &%SelfConnectedObject. Note that &%Combining is different from &%Attaching in that the former results in one of the objects being &%part of the other, while &%Attaching only results in the two objects being &%connected with one another. Note too that &%Combining is different from &%Putting in that one or both of the two things which are combined may or may not be moved from the location where they were combined.') ).

%FOL fof(kb_SUMO_5419,axiom,(( (! [V__OBJ1,V__COMBINE,V__OBJ2] : ((s__instance(V__OBJ2,s__Object) & s__instance(V__COMBINE,s__Process) & s__instance(V__OBJ1,s__Object)) => ((s__instance(V__COMBINE,s__Combining) & s__resource(V__COMBINE,V__OBJ1) & s__result(V__COMBINE,V__OBJ2)) <=> (s__holdsDuring(s__BeginFn(s__WhenFn(V__COMBINE)),'(~ s__part(V__OBJ1,V__OBJ2))') & s__holdsDuring(s__EndFn(s__WhenFn(V__COMBINE)),'s__part(V__OBJ1,V__OBJ2)'))))) ))).

fof(kb_SUMO_5420,axiom,
    ! [V__COMBINE] :
      ( s__instance(V__COMBINE,s__Process)
     => ( s__instance(V__COMBINE,s__Combining)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__SelfConnectedObject)
            & s__patient(V__COMBINE,V__OBJ) ) ) ) ).

fof(kb_SUMO_5421,axiom,
    s__subclass(s__Separating,s__DualObjectProcess) ).

fof(kb_SUMO_5422,axiom,
    s__disjoint(s__Separating,s__Combining) ).

fof(kb_SUMO_5423,axiom,
    s__documentation(s__Separating,s__EnglishLanguage,'A &%Process where a &%SelfConnectedObject is separated into (some of) its &%parts. Note that &%Separating is different from &%Detaching in that the latter only results in the two objects not being &%connected. Note too that &%Separating is different from &%Removing in that one or both of the two things which are separated may or may not be moved from the location where they were separated.') ).

fof(kb_SUMO_5424,axiom,
    ! [V__SEPARATE] :
      ( s__instance(V__SEPARATE,s__Process)
     => ( s__instance(V__SEPARATE,s__Separating)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__SelfConnectedObject)
            & s__patient(V__SEPARATE,V__OBJ) ) ) ) ).

fof(kb_SUMO_5425,axiom,
    s__subclass(s__ChemicalProcess,s__InternalChange) ).

fof(kb_SUMO_5426,axiom,
    s__partition_3(s__ChemicalProcess,s__ChemicalSynthesis,s__ChemicalDecomposition) ).

fof(kb_SUMO_5427,axiom,
    s__documentation(s__ChemicalProcess,s__EnglishLanguage,'A &%ChemicalProcess occurs whenever chemical compounds (&%CompoundSubstances) are formed or decomposed. For example, reactants disappear as chemical change occurs, and products appear as chemical change occurs. In a chemical change a chemical reaction takes place. Catalysts in a &%ChemicalProcess may speed up the reaction, but arent themselves produced or consumed. Examples: rusting of iron and the decomposition of water, induced by an electric current, to gaseous hydrogen and gaseous oxygen.') ).

fof(kb_SUMO_5428,axiom,
    ! [V__STUFF,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__STUFF,s__Object) )
     => ( ( s__instance(V__PROC,s__ChemicalProcess)
          & ( s__resource(V__PROC,V__STUFF)
            | s__result(V__PROC,V__STUFF) ) )
       => s__instance(V__STUFF,s__PureSubstance) ) ) ).

fof(kb_SUMO_5429,axiom,
    s__subclass(s__ChemicalSynthesis,s__ChemicalProcess) ).

fof(kb_SUMO_5430,axiom,
    s__instance(s__ChemicalSynthesis__t,s__SetOrClass) ).

fof(kb_SUMO_5431,axiom,
    s__subclass(s__ChemicalSynthesis,s__Combining) ).

fof(kb_SUMO_5432,axiom,
    s__documentation(s__ChemicalSynthesis,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which a &%CompoundSubstance is formed from simpler reactants.') ).

fof(kb_SUMO_5433,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBSTANCE1,s__Object) )
     => ( ( s__resource(V__PROC,V__SUBSTANCE1)
          & s__result(V__PROC,V__SUBSTANCE2)
          & s__instance(V__SUBSTANCE1,s__ElementalSubstance)
          & s__instance(V__SUBSTANCE2,s__CompoundSubstance) )
       => s__instance(V__PROC,s__ChemicalSynthesis) ) ) ).

fof(kb_SUMO_5434,axiom,
    ! [V__COMPOUND] :
      ( s__instance(V__COMPOUND,s__CompoundSubstance)
    <=> ? [V__ELEMENT1,V__ELEMENT2,V__PROCESS] :
          ( s__instance(V__PROCESS,s__Process)
          & s__instance(V__ELEMENT2,s__Object)
          & s__instance(V__ELEMENT1,s__Object)
          & s__instance(V__ELEMENT1,s__ElementalSubstance)
          & s__instance(V__ELEMENT2,s__ElementalSubstance)
          & V__ELEMENT1 != V__ELEMENT2
          & s__instance(V__PROCESS,s__ChemicalSynthesis)
          & s__resource(V__PROCESS,V__ELEMENT1)
          & s__resource(V__PROCESS,V__ELEMENT2)
          & s__result(V__PROCESS,V__COMPOUND) ) ) ).

fof(kb_SUMO_5435,axiom,
    s__subclass(s__ChemicalDecomposition,s__ChemicalProcess) ).

fof(kb_SUMO_5436,axiom,
    s__instance(s__ChemicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5437,axiom,
    s__subclass(s__ChemicalDecomposition,s__Separating) ).

fof(kb_SUMO_5438,axiom,
    s__instance(s__ChemicalDecomposition__t,s__SetOrClass) ).

fof(kb_SUMO_5439,axiom,
    s__instance(s__Separating__t,s__SetOrClass) ).

fof(kb_SUMO_5440,axiom,
    s__documentation(s__ChemicalDecomposition,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which a &%CompoundSubstance breaks down into simpler products.') ).

fof(kb_SUMO_5441,axiom,
    ! [V__SUBSTANCE1,V__SUBSTANCE2,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__SUBSTANCE1,s__Object) )
     => ( ( s__resource(V__PROC,V__SUBSTANCE1)
          & s__result(V__PROC,V__SUBSTANCE2)
          & s__instance(V__SUBSTANCE1,s__CompoundSubstance)
          & s__instance(V__SUBSTANCE2,s__ElementalSubstance) )
       => s__instance(V__PROC,s__ChemicalDecomposition) ) ) ).

fof(kb_SUMO_5442,axiom,
    s__subclass(s__Combustion,s__ChemicalDecomposition) ).

fof(kb_SUMO_5443,axiom,
    s__instance(s__Combustion__t,s__SetOrClass) ).

fof(kb_SUMO_5444,axiom,
    s__documentation(s__Combustion,s__EnglishLanguage,'The &%Class of &%ChemicalProcesses in which an &%Object reacts with oxygen and gives off heat. This includes all &%Processes in which something is burning.') ).

fof(kb_SUMO_5445,axiom,
    ! [V__COMBUSTION] :
      ( s__instance(V__COMBUSTION,s__Process)
     => ( s__instance(V__COMBUSTION,s__Combustion)
       => ? [V__HEAT,V__LIGHT] :
            ( s__instance(V__LIGHT,s__Process)
            & s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__instance(V__LIGHT,s__RadiatingLight)
            & s__subProcess(V__HEAT,V__COMBUSTION)
            & s__subProcess(V__LIGHT,V__COMBUSTION) ) ) ) ).

fof(kb_SUMO_5446,axiom,
    s__instance(s__Flammable,s__PhysicalAttribute) ).

fof(kb_SUMO_5447,axiom,
    s__documentation(s__Flammable,s__EnglishLanguage,'The &%Attribute of being flammable at normal temperatures (i.e. not while a &%Plasma).') ).

fof(kb_SUMO_5448,axiom,
    ! [V__X] :
      ( s__instance(V__X,s__Object)
     => ( s__attribute(V__X,s__Flammable)
       => s__capability(s__Combustion,s__patient__m,V__X) ) ) ).

fof(kb_SUMO_5449,axiom,
    s__subclass(s__InternalChange,s__Process) ).

fof(kb_SUMO_5450,axiom,
    s__documentation(s__InternalChange,s__EnglishLanguage,'&%Processes which involve altering an internal property of an &%Object, e.g. the shape of the &%Object, its coloring, its structure, etc. &%Processes that are not instances of this class include changes that only affect the relationship to other objects, e.g. changes in spatial or temporal location.') ).

%FOL fof(kb_SUMO_5451,axiom,(( (! [V__CHANGE,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__CHANGE,s__Process)) => ((s__instance(V__CHANGE,s__InternalChange) & s__patient(V__CHANGE,V__OBJ)) => (? [V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'s__attribute(V__OBJ,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'(~ s__attribute(V__OBJ,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__CHANGE)),'(~ s__attribute(V__OBJ,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__CHANGE)),'s__attribute(V__OBJ,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_5452,axiom,
    s__subclass(s__SurfaceChange,s__InternalChange) ).

fof(kb_SUMO_5453,axiom,
    s__instance(s__SurfaceChange__t,s__SetOrClass) ).

fof(kb_SUMO_5454,axiom,
    s__instance(s__InternalChange__t,s__SetOrClass) ).

fof(kb_SUMO_5455,axiom,
    s__documentation(s__SurfaceChange,s__EnglishLanguage,'&%Processes which involve altering the properties that apply to the surface of an &%Object.') ).

%FOL fof(kb_SUMO_5456,axiom,(( (! [V__ALT,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__ALT,s__Process)) => ((s__instance(V__ALT,s__SurfaceChange) & s__patient(V__ALT,V__OBJ)) => (? [V__PART,V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & s__instance(V__PART,s__Object) & s__superficialPart(V__PART,V__OBJ) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'s__attribute(V__PART,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__PART,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__PART,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'s__attribute(V__PART,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_5457,axiom,
    s__subclass(s__Coloring,s__SurfaceChange) ).

fof(kb_SUMO_5458,axiom,
    s__instance(s__Coloring__t,s__SetOrClass) ).

fof(kb_SUMO_5459,axiom,
    s__documentation(s__Coloring,s__EnglishLanguage,'The &%subclass of &%SurfaceChange where a &%ColorAttribute of the &%patient is altered. Note that the change in color may apply to just part of the object.') ).

%FOL fof(kb_SUMO_5460,axiom,(( (! [V__OBJ,V__COLORING] : ((s__instance(V__COLORING,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__COLORING,s__Coloring) & s__patient(V__COLORING,V__OBJ)) => (? [V__PROPERTY,V__PART] : (s__instance(V__PART,s__Object) & s__instance(V__PROPERTY,s__Attribute) & s__part(V__PART,V__OBJ) & s__instance(V__PROPERTY,s__ColorAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__COLORING)),'s__attribute(V__PART,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__COLORING)),'(~ s__attribute(V__PART,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__COLORING)),'(~ s__attribute(V__PART,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__COLORING)),'s__attribute(V__PART,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_5461,axiom,
    s__subclass(s__ShapeChange,s__InternalChange) ).

fof(kb_SUMO_5462,axiom,
    s__instance(s__ShapeChange__t,s__SetOrClass) ).

fof(kb_SUMO_5463,axiom,
    s__documentation(s__ShapeChange,s__EnglishLanguage,'The &%Process of changing the shape of an &%Object.') ).

%FOL fof(kb_SUMO_5464,axiom,(( (! [V__ALT,V__OBJ] : ((s__instance(V__OBJ,s__Object) & s__instance(V__ALT,s__Process)) => ((s__instance(V__ALT,s__ShapeChange) & s__patient(V__ALT,V__OBJ)) => (? [V__PROPERTY] : (s__instance(V__PROPERTY,s__Attribute) & s__instance(V__PROPERTY,s__ShapeAttribute) & ((s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'s__attribute(V__OBJ,V__PROPERTY)') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__OBJ,V__PROPERTY))')) | (s__holdsDuring(s__BeginFn(s__WhenFn(V__ALT)),'(~ s__attribute(V__OBJ,V__PROPERTY))') & s__holdsDuring(s__EndFn(s__WhenFn(V__ALT)),'s__attribute(V__OBJ,V__PROPERTY)')))))))) ))).

fof(kb_SUMO_5465,axiom,
    s__subclass(s__ContentDevelopment,s__IntentionalProcess) ).

fof(kb_SUMO_5466,axiom,
    s__documentation(s__ContentDevelopment,s__EnglishLanguage,'A &%subclass of &%IntentionalProcess in which content is modified, its form is altered or it is created anew.') ).

fof(kb_SUMO_5467,axiom,
    ! [V__DEVELOP] :
      ( s__instance(V__DEVELOP,s__Process)
     => ( s__instance(V__DEVELOP,s__ContentDevelopment)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__ContentBearingObject)
            & s__result(V__DEVELOP,V__OBJ) ) ) ) ).

fof(kb_SUMO_5468,axiom,
    s__subclass(s__Reading,s__ContentDevelopment) ).

fof(kb_SUMO_5469,axiom,
    s__instance(s__Reading__t,s__SetOrClass) ).

fof(kb_SUMO_5470,axiom,
    s__relatedInternalConcept(s__Reading,s__Interpreting) ).

fof(kb_SUMO_5471,axiom,
    s__documentation(s__Reading,s__EnglishLanguage,'A &%subclass of &%ContentDevelopment in which content is converted from a written form into a spoken representation. Note that the class &%Interpreting should be used in cases where a &%Text is read silently.') ).

fof(kb_SUMO_5472,axiom,
    ! [V__READ] :
      ( s__instance(V__READ,s__Process)
     => ( s__instance(V__READ,s__Reading)
       => ? [V__TEXT,V__PROP] :
            ( s__instance(V__PROP,s__Proposition)
            & s__instance(V__TEXT,s__ContentBearingPhysical)
            & s__instance(V__TEXT,s__Text)
            & s__containsInformation(V__TEXT,V__PROP)
            & s__realization(V__READ,V__PROP) ) ) ) ).

fof(kb_SUMO_5473,axiom,
    s__subclass(s__Writing,s__ContentDevelopment) ).

fof(kb_SUMO_5474,axiom,
    s__instance(s__Writing__t,s__SetOrClass) ).

fof(kb_SUMO_5475,axiom,
    s__instance(s__ContentDevelopment__t,s__SetOrClass) ).

fof(kb_SUMO_5476,axiom,
    s__documentation(s__Writing,s__EnglishLanguage,'A &%subclass of &%ContentDevelopment in which content is converted from one form (e.g. uttered, written or represented mentally) into a written form. Note that this class covers both transcription and original creation of written &%Texts.') ).

fof(kb_SUMO_5477,axiom,
    s__subclass(s__Encoding,s__Writing) ).

fof(kb_SUMO_5478,axiom,
    s__instance(s__Encoding__t,s__SetOrClass) ).

fof(kb_SUMO_5479,axiom,
    s__documentation(s__Encoding,s__EnglishLanguage,'Converting a document or message into a formal language or into a code that can be understood only by a relatively small body of &%Agents. Generally speaking, this hinders wide dissemination of the content in the original document or message.') ).

fof(kb_SUMO_5480,axiom,
    s__subclass(s__Decoding,s__Writing) ).

fof(kb_SUMO_5481,axiom,
    s__instance(s__Decoding__t,s__SetOrClass) ).

fof(kb_SUMO_5482,axiom,
    s__disjoint(s__Decoding,s__Encoding) ).

fof(kb_SUMO_5483,axiom,
    s__documentation(s__Decoding,s__EnglishLanguage,'Converting a document or message that has previously been encoded (see &%Encoding) into a &%Language that can be understood by a relatively large number of speakers.') ).

fof(kb_SUMO_5484,axiom,
    ! [V__DECODE,V__DOC1,V__PROP] :
      ( ( s__instance(V__PROP,s__Proposition)
        & s__instance(V__DOC1,s__ContentBearingPhysical)
        & s__instance(V__DECODE,s__Process) )
     => ( ( s__instance(V__DECODE,s__Decoding)
          & s__patient(V__DECODE,V__DOC1) )
       => ? [V__ENCODE,V__DOC2,V__TIME] :
            ( s__instance(V__TIME,s__TimePosition)
            & s__instance(V__DOC2,s__ContentBearingPhysical)
            & s__instance(V__ENCODE,s__Process)
            & s__containsInformation(V__DOC2,V__PROP)
            & s__containsInformation(V__DOC1,V__PROP)
            & s__temporalPart(V__TIME,s__PastFn(s__WhenFn(V__DECODE)))
            & s__holdsDuring(V__TIME,'(s__instance(V__ENCODE,s__Encoding) & s__patient(V__ENCODE,V__DOC2))') ) ) ) ).

fof(kb_SUMO_5485,axiom,
    s__subclass(s__Translating,s__ContentDevelopment) ).

fof(kb_SUMO_5486,axiom,
    s__subclass(s__Translating,s__DualObjectProcess) ).

fof(kb_SUMO_5487,axiom,
    s__instance(s__Translating__t,s__SetOrClass) ).

fof(kb_SUMO_5488,axiom,
    s__documentation(s__Translating,s__EnglishLanguage,'Converting content from one &%Language into another. This covers oral translation (i.e. interpreting) as well as written translation.') ).

fof(kb_SUMO_5489,axiom,
    ! [V__EXPRESSION1,V__EXPRESSION2,V__TRANSLATE] :
      ( ( s__instance(V__TRANSLATE,s__Process)
        & s__instance(V__EXPRESSION2,s__LinguisticExpression)
        & s__instance(V__EXPRESSION1,s__LinguisticExpression) )
     => ( ( s__instance(V__TRANSLATE,s__Translating)
          & s__patient(V__TRANSLATE,V__EXPRESSION1)
          & s__result(V__TRANSLATE,V__EXPRESSION2) )
       => ? [V__LANGUAGE1,V__LANGUAGE2,V__ENTITY] :
            ( s__instance(V__LANGUAGE2,s__Language)
            & s__instance(V__LANGUAGE1,s__Language)
            & s__representsInLanguage(V__EXPRESSION1,V__ENTITY,V__LANGUAGE1)
            & s__representsInLanguage(V__EXPRESSION2,V__ENTITY,V__LANGUAGE2)
            & V__LANGUAGE1 != V__LANGUAGE2 ) ) ) ).

fof(kb_SUMO_5490,axiom,
    s__subclass(s__Wetting,s__Putting) ).

fof(kb_SUMO_5491,axiom,
    s__instance(s__Wetting__t,s__SetOrClass) ).

fof(kb_SUMO_5492,axiom,
    s__documentation(s__Wetting,s__EnglishLanguage,'The &%Class of &%Processes where a &%Liquid is added to an &%Object.') ).

%FOL fof(kb_SUMO_5493,axiom,(( (! [V__WET] : (s__instance(V__WET,s__Process) => (s__instance(V__WET,s__Wetting) => (? [V__OBJ] : (s__instance(V__OBJ,s__Object) & s__patient(V__WET,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__WET)),'(~ s__attribute(V__OBJ,s__Damp))') & s__holdsDuring(s__EndFn(s__WhenFn(V__WET)),'s__attribute(V__OBJ,s__Damp)')))))) ))).

fof(kb_SUMO_5494,axiom,
    ! [V__WET] :
      ( s__instance(V__WET,s__Process)
     => ( s__instance(V__WET,s__Wetting)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__attribute(V__OBJ,s__Liquid)
            & s__patient(V__WET,V__OBJ) ) ) ) ).

fof(kb_SUMO_5495,axiom,
    s__subclass(s__Drying,s__Removing) ).

fof(kb_SUMO_5496,axiom,
    s__instance(s__Drying__t,s__SetOrClass) ).

fof(kb_SUMO_5497,axiom,
    s__instance(s__Removing__t,s__SetOrClass) ).

fof(kb_SUMO_5498,axiom,
    s__documentation(s__Drying,s__EnglishLanguage,'The &%Class of &%Processes where a &%Liquid is removed from an &%Object.') ).

%FOL fof(kb_SUMO_5499,axiom,(( (! [V__OBJ,V__DRY] : ((s__instance(V__DRY,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__DRY,s__Drying) & s__patient(V__DRY,V__OBJ)) => s__holdsDuring(s__EndFn(s__WhenFn(V__DRY)),'s__attribute(V__OBJ,s__Dry)')))) ))).

fof(kb_SUMO_5500,axiom,
    s__subclass(s__Creation,s__InternalChange) ).

fof(kb_SUMO_5501,axiom,
    s__relatedInternalConcept(s__Creation,s__Destruction) ).

fof(kb_SUMO_5502,axiom,
    s__documentation(s__Creation,s__EnglishLanguage,'The &%subclass of &%Process in which something is created. Note that the thing created is specified with the &%result &%CaseRole.') ).

fof(kb_SUMO_5503,axiom,
    ! [V__ACTION] :
      ( s__instance(V__ACTION,s__Process)
     => ( s__instance(V__ACTION,s__Creation)
       => ? [V__RESULT] : s__result(V__ACTION,V__RESULT) ) ) ).

fof(kb_SUMO_5504,axiom,
    ! [V__PROCESS] :
      ( s__instance(V__PROCESS,s__Process)
     => ( s__instance(V__PROCESS,s__Creation)
      <=> ? [V__PATIENT] :
            ( s__instance(V__PATIENT,s__Physical)
            & s__patient(V__PROCESS,V__PATIENT)
            & s__time(V__PATIENT,s__EndFn(s__WhenFn(V__PROCESS)))
            & ~ s__time(V__PATIENT,s__BeginFn(s__WhenFn(V__PROCESS))) ) ) ) ).

fof(kb_SUMO_5505,axiom,
    s__subclass(s__Making,s__Creation) ).

fof(kb_SUMO_5506,axiom,
    s__instance(s__Creation__t,s__SetOrClass) ).

fof(kb_SUMO_5507,axiom,
    s__subclass(s__Making,s__IntentionalProcess) ).

fof(kb_SUMO_5508,axiom,
    s__documentation(s__Making,s__EnglishLanguage,'The &%subclass of &%Creation in which an individual &%Artifact or a type of &%Artifact is made.') ).

fof(kb_SUMO_5509,axiom,
    s__subclass(s__Constructing,s__Making) ).

fof(kb_SUMO_5510,axiom,
    s__instance(s__Constructing__t,s__SetOrClass) ).

fof(kb_SUMO_5511,axiom,
    s__documentation(s__Constructing,s__EnglishLanguage,'The &%subclass of &%Making in which a &%StationaryArtifact is built.') ).

fof(kb_SUMO_5512,axiom,
    ! [V__ARTIFACT] :
      ( ? [V__BUILD] :
          ( s__instance(V__BUILD,s__Process)
          & s__instance(V__BUILD,s__Constructing)
          & s__result(V__BUILD,V__ARTIFACT) )
    <=> s__instance(V__ARTIFACT,s__StationaryArtifact) ) ).

fof(kb_SUMO_5513,axiom,
    s__subclass(s__Manufacture,s__Making) ).

fof(kb_SUMO_5514,axiom,
    s__instance(s__Manufacture__t,s__SetOrClass) ).

fof(kb_SUMO_5515,axiom,
    s__documentation(s__Manufacture,s__EnglishLanguage,'The &%Making of &%Artifacts on a mass scale.') ).

fof(kb_SUMO_5516,axiom,
    s__subclass(s__Publication,s__Manufacture) ).

fof(kb_SUMO_5517,axiom,
    s__instance(s__Publication__t,s__SetOrClass) ).

fof(kb_SUMO_5518,axiom,
    s__subclass(s__Publication,s__ContentDevelopment) ).

fof(kb_SUMO_5519,axiom,
    s__documentation(s__Publication,s__EnglishLanguage,'The &%Manufacture of &%Texts. Note that there is no implication that the &%Texts are distributed. Such distribution, when it occurs, is an instance of &%Dissemination.') ).

fof(kb_SUMO_5520,axiom,
    ! [V__PUB,V__TEXT] :
      ( ( s__instance(V__TEXT,s__SetOrClass)
        & s__instance(V__PUB,s__Process) )
     => ( ( s__instance(V__PUB,s__Publication)
          & s__patient(V__PUB,V__TEXT) )
       => s__subclass(V__TEXT,s__Text) ) ) ).

fof(kb_SUMO_5521,axiom,
    s__subclass(s__Cooking,s__Making) ).

fof(kb_SUMO_5522,axiom,
    s__instance(s__Cooking__t,s__SetOrClass) ).

fof(kb_SUMO_5523,axiom,
    s__instance(s__Making__t,s__SetOrClass) ).

fof(kb_SUMO_5524,axiom,
    s__documentation(s__Cooking,s__EnglishLanguage,'The &%Making of an &%instance of &%Food. Note that this can cover any preparation of &%Food, e.g. making a salad, cutting up fruit, etc. It does not necessarily involve the application of heat.') ).

fof(kb_SUMO_5525,axiom,
    ! [V__COOK] :
      ( s__instance(V__COOK,s__Process)
     => ( s__instance(V__COOK,s__Cooking)
       => ? [V__FOOD] :
            ( s__instance(V__FOOD,s__FoodForFn(s__Organism))
            & s__result(V__COOK,V__FOOD) ) ) ) ).

fof(kb_SUMO_5526,axiom,
    s__subclass(s__Pursuing,s__IntentionalProcess) ).

fof(kb_SUMO_5527,axiom,
    s__instance(s__Pursuing__t,s__SetOrClass) ).

fof(kb_SUMO_5528,axiom,
    s__documentation(s__Pursuing,s__EnglishLanguage,'The class of &%IntentionalProcesses where something is sought. Some examples would be hunting, shopping, trawling, and stalking.') ).

fof(kb_SUMO_5529,axiom,
    ! [V__PURSUE] :
      ( s__instance(V__PURSUE,s__Process)
     => ( s__instance(V__PURSUE,s__Pursuing)
       => ? [V__OBJ] :
            ( s__instance(V__OBJ,s__Object)
            & s__patient(V__PURSUE,V__OBJ) ) ) ) ).

%FOL fof(kb_SUMO_5530,axiom,(( (! [V__OBJ,V__PURSUE,V__AGENT] : ((s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__PURSUE,s__Process) & s__instance(V__PURSUE,s__TimePosition) & s__instance(V__OBJ,s__Physical)) => ((s__instance(V__PURSUE,s__Pursuing) & s__agent(V__PURSUE,V__AGENT) & s__patient(V__PURSUE,V__OBJ)) => s__holdsDuring(V__PURSUE,'s__wants(V__AGENT,V__OBJ)')))) ))).

fof(kb_SUMO_5531,axiom,
    ! [V__OBJ,V__PURSUE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__PURSUE,s__Process)
        & s__instance(V__PURSUE,s__TimePosition)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__PURSUE,s__Pursuing)
          & s__agent(V__PURSUE,V__AGENT)
          & s__patient(V__PURSUE,V__OBJ) )
       => s__holdsDuring(V__PURSUE,'(~ s__possesses(V__AGENT,V__OBJ))') ) ) ).

fof(kb_SUMO_5532,axiom,
    s__subclass(s__Hunting,s__Pursuing) ).

fof(kb_SUMO_5533,axiom,
    s__instance(s__Hunting__t,s__SetOrClass) ).

fof(kb_SUMO_5534,axiom,
    s__documentation(s__Hunting,s__EnglishLanguage,'Hunting is the class of &%Processes in which an animal or animals are pursued and sometimes captured and/or killed.') ).

fof(kb_SUMO_5535,axiom,
    ! [V__H] :
      ( s__instance(V__H,s__Process)
     => ( s__instance(V__H,s__Hunting)
       => ? [V__T] :
            ( s__instance(V__T,s__Animal)
            & s__patient(V__H,V__T) ) ) ) ).

fof(kb_SUMO_5536,axiom,
    ! [V__P,V__H] :
      ( s__instance(V__H,s__Process)
     => ( ( s__instance(V__H,s__Hunting)
          & s__patient(V__H,V__P) )
       => s__hasPurpose(V__H,'(? [V__PROC] : (s__instance(V__PROC,s__Process) & s__patient(V__PROC,V__P) & (s__instance(V__PROC,s__Confining) | s__instance(V__PROC,s__Killing))))') ) ) ).

fof(kb_SUMO_5537,axiom,
    s__subclass(s__Investigating,s__IntentionalPsychologicalProcess) ).

fof(kb_SUMO_5538,axiom,
    s__instance(s__Investigating__t,s__SetOrClass) ).

fof(kb_SUMO_5539,axiom,
    s__instance(s__IntentionalPsychologicalProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5540,axiom,
    s__documentation(s__Investigating,s__EnglishLanguage,'The class of &%IntentionalPsychologicalProcesses where the &%agent attempts to obtaina information (i.e. a &%Proposition denoted by a &%Formula).') ).

fof(kb_SUMO_5541,axiom,
    ! [V__INVESTIGATE,V__PROP] :
      ( s__instance(V__INVESTIGATE,s__Process)
     => ( ( s__instance(V__INVESTIGATE,s__Investigating)
          & s__patient(V__INVESTIGATE,V__PROP) )
       => s__instance(V__PROP,s__Formula) ) ) ).

fof(kb_SUMO_5542,axiom,
    ! [V__INVESTIGATE,V__PROP,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__PROP,s__Formula)
        & s__instance(V__INVESTIGATE,s__Process) )
     => ( ( s__instance(V__INVESTIGATE,s__Investigating)
          & s__agent(V__INVESTIGATE,V__AGENT)
          & s__patient(V__INVESTIGATE,V__PROP) )
       => s__holdsDuring(s__WhenFn(V__INVESTIGATE),'(~ s__knows(V__AGENT,V__PROP))') ) ) ).

fof(kb_SUMO_5543,axiom,
    s__subclass(s__Experimenting,s__Investigating) ).

fof(kb_SUMO_5544,axiom,
    s__instance(s__Experimenting__t,s__SetOrClass) ).

fof(kb_SUMO_5545,axiom,
    s__documentation(s__Experimenting,s__EnglishLanguage,'&%Investigating the truth of a &%Proposition by constructing and observing a trial. Note that the trial may be either controlled or uncontrolled, blind or not blind.') ).

fof(kb_SUMO_5546,axiom,
    s__subclass(s__DiagnosticProcess,s__Investigating) ).

fof(kb_SUMO_5547,axiom,
    s__instance(s__DiagnosticProcess__t,s__SetOrClass) ).

fof(kb_SUMO_5548,axiom,
    s__documentation(s__DiagnosticProcess,s__EnglishLanguage,'A &%Process that is carried out for the purpose of determining the nature of a &%DiseaseOrSyndrome.') ).

%FOL fof(kb_SUMO_5549,axiom,(( (! [V__AGENT,V__PROC] : ((s__instance(V__PROC,s__Process) & s__instance(V__AGENT,s__CognitiveAgent)) => ((s__instance(V__PROC,s__DiagnosticProcess) & s__agent(V__PROC,V__AGENT)) => (? [V__CAUSE] : (s__instance(V__CAUSE,s__Process) & s__hasPurposeForAgent(V__PROC,'s__knows(V__AGENT,s__causes(V__CAUSE,V__PROC))',V__AGENT)))))) ))).

fof(kb_SUMO_5550,axiom,
    s__subclass(s__SocialInteraction,s__IntentionalProcess) ).

fof(kb_SUMO_5551,axiom,
    s__documentation(s__SocialInteraction,s__EnglishLanguage,'The &%subclass of &%IntentionalProcess that involves interactions between &%CognitiveAgents.') ).

fof(kb_SUMO_5552,axiom,
    ! [V__INTERACTION] :
      ( s__instance(V__INTERACTION,s__Process)
     => ( s__instance(V__INTERACTION,s__SocialInteraction)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__involvedInEvent(V__INTERACTION,V__AGENT1)
            & s__involvedInEvent(V__INTERACTION,V__AGENT2)
            & s__instance(V__AGENT1,s__Agent)
            & s__instance(V__AGENT2,s__Agent)
            & V__AGENT1 != V__AGENT2 ) ) ) ).

fof(kb_SUMO_5553,axiom,
    s__subclass(s__Pretending,s__SocialInteraction) ).

fof(kb_SUMO_5554,axiom,
    s__instance(s__Pretending__t,s__SetOrClass) ).

fof(kb_SUMO_5555,axiom,
    s__documentation(s__Pretending,s__EnglishLanguage,'Any &%SocialInteraction where a &%CognitiveAgent or &%Group of &%CognitiveAgents attempts to make another &%CognitiveAgent or &%Group of &%CognitiveAgents believe something that is false. This covers deceit, affectation, impersonation, and entertainment productions, to give just a few examples.') ).

%FOL fof(kb_SUMO_5556,axiom,(( (! [V__PRETEND] : (s__instance(V__PRETEND,s__Physical) => (s__instance(V__PRETEND,s__Pretending) => (? [V__PERSON,V__PROP] : (s__instance(V__PROP,s__Formula) & s__instance(V__PERSON,s__CognitiveAgent) & s__hasPurpose(V__PRETEND,'s__believes(V__PERSON,V__PROP)') & s__truth(V__PROP,'$false__m')))))) ))).

fof(kb_SUMO_5557,axiom,
    s__subclass(s__Communication,s__SocialInteraction) ).

fof(kb_SUMO_5558,axiom,
    s__subclass(s__Communication,s__ContentBearingProcess) ).

fof(kb_SUMO_5559,axiom,
    s__partition_7(s__Communication,s__Stating,s__Supposing,s__Directing,s__Committing,s__Expressing,s__Declaring) ).

fof(kb_SUMO_5560,axiom,
    s__relatedInternalConcept(s__Communication,s__ContentDevelopment) ).

fof(kb_SUMO_5561,axiom,
    s__documentation(s__Communication,s__EnglishLanguage,'A &%SocialInteraction that involves the transfer of information between two or more &%CognitiveAgents. Note that &%Communication is closely related to, but essentially different from, &%ContentDevelopment. The latter involves the creation or modification of a &%ContentBearingObject, while &%Communication is the transfer of information for the purpose of conveying a message.') ).

fof(kb_SUMO_5562,axiom,
    ! [V__COMMUNICATE] :
      ( s__instance(V__COMMUNICATE,s__Process)
     => ( s__instance(V__COMMUNICATE,s__Communication)
       => ? [V__PHYS,V__ENTITY,V__AGENT1,V__AGENT2] :
            ( s__instance(V__AGENT1,s__Agent)
            & s__refers(V__PHYS,V__ENTITY)
            & s__patient(V__COMMUNICATE,V__PHYS)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__agent(V__COMMUNICATE,V__AGENT1)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & s__destination(V__COMMUNICATE,V__AGENT2) ) ) ) ).

fof(kb_SUMO_5563,axiom,
    s__subclass(s__Disseminating,s__Communication) ).

fof(kb_SUMO_5564,axiom,
    s__instance(s__Disseminating__t,s__SetOrClass) ).

fof(kb_SUMO_5565,axiom,
    s__documentation(s__Disseminating,s__EnglishLanguage,'Any &%Communication that involves a single &%agent and many &%destinations. This covers the release of a published book, broadcasting, a theatrical performance, giving orders to assembled troops, delivering a public lecture, etc.') ).

fof(kb_SUMO_5566,axiom,
    ! [V__DISSEMINATE] :
      ( s__instance(V__DISSEMINATE,s__Process)
     => ( s__instance(V__DISSEMINATE,s__Disseminating)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__destination(V__DISSEMINATE,V__AGENT1)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__destination(V__DISSEMINATE,V__AGENT2)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & V__AGENT1 != V__AGENT2 ) ) ) ).

fof(kb_SUMO_5567,axiom,
    s__subclass(s__Demonstrating,s__Disseminating) ).

fof(kb_SUMO_5568,axiom,
    s__instance(s__Demonstrating__t,s__SetOrClass) ).

fof(kb_SUMO_5569,axiom,
    s__documentation(s__Demonstrating,s__EnglishLanguage,'Exhibiting something or a range of things before the public in a particular location. This would cover software demos, theatrical plays, lectures, dance and music recitals, museum exhibitions, etc.') ).

fof(kb_SUMO_5570,axiom,
    ! [V__DEMO] :
      ( s__instance(V__DEMO,s__Demonstrating)
     => ? [V__PERSON] :
          ( s__instance(V__PERSON,s__Human)
          & s__attends(V__DEMO,V__PERSON) ) ) ).

fof(kb_SUMO_5571,axiom,
    s__subrelation(s__attends__m,s__experiencer__m) ).

fof(kb_SUMO_5572,axiom,
    s__domain(s__attends__m,"1",s__Demonstrating) ).

fof(kb_SUMO_5573,axiom,
    s__domain(s__attends__m,"2",s__Human) ).

fof(kb_SUMO_5574,axiom,
    s__documentation(s__attends__m,s__EnglishLanguage,'(&%attends ?DEMO ?PERSON) means that ?PERSON attends, i.e. is a member of the audience, of the performance event ?DEMO.') ).

fof(kb_SUMO_5575,axiom,
    s__subclass(s__Gesture,s__Communication) ).

fof(kb_SUMO_5576,axiom,
    s__subclass(s__Gesture,s__BodyMotion) ).

fof(kb_SUMO_5577,axiom,
    s__instance(s__Gesture__t,s__SetOrClass) ).

fof(kb_SUMO_5578,axiom,
    s__documentation(s__Gesture,s__EnglishLanguage,'Any &%BodyMotion, e.g. a hand wave, a nod of the head, a smile, which is also an instance of &%Communication.') ).

fof(kb_SUMO_5579,axiom,
    s__subclass(s__Advertising,s__Disseminating) ).

fof(kb_SUMO_5580,axiom,
    s__instance(s__Advertising__t,s__SetOrClass) ).

fof(kb_SUMO_5581,axiom,
    s__documentation(s__Advertising,s__EnglishLanguage,'A &%Disseminating whose purpose is to promote the sale of an &%Object represented in a &%Text or &%Icon (the advertisement).') ).

fof(kb_SUMO_5582,axiom,
    ! [V__ADVERT] :
      ( s__instance(V__ADVERT,s__Physical)
     => ( s__instance(V__ADVERT,s__Advertising)
       => ? [V__OBJ] :
            ( s__refers(V__ADVERT,V__OBJ)
            & s__hasPurpose(V__ADVERT,'(? [V__SALE] : (s__instance(V__SALE,s__Process) & s__instance(V__SALE,s__Selling) & s__patient(V__SALE,V__OBJ)))') ) ) ) ).

fof(kb_SUMO_5583,axiom,
    s__subclass(s__Expressing,s__Communication) ).

fof(kb_SUMO_5584,axiom,
    s__instance(s__Expressing__t,s__SetOrClass) ).

fof(kb_SUMO_5585,axiom,
    s__documentation(s__Expressing,s__EnglishLanguage,'Instances of this &%Class express a state of the &%agent. For example, Jane thanked Barbara for the present she had given her. The thanking in this case expresses the gratitude of Jane towards Barbara. Note that &%Expressing, unlike the other speech act types, is not a subclass of &%LinguisticCommunication. This is because emotions, for example, can be expressed without language, e.g. by smiling.') ).

fof(kb_SUMO_5586,axiom,
    ! [V__EXPRESS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EXPRESS,s__Process) )
     => ( ( s__instance(V__EXPRESS,s__Expressing)
          & s__agent(V__EXPRESS,V__AGENT) )
       => ? [V__STATE] :
            ( s__instance(V__STATE,s__Attribute)
            & s__instance(V__STATE,s__StateOfMind)
            & s__attribute(V__AGENT,V__STATE)
            & s__represents(V__EXPRESS,V__STATE) ) ) ) ).

fof(kb_SUMO_5587,axiom,
    s__subclass(s__LinguisticCommunication,s__Communication) ).

fof(kb_SUMO_5588,axiom,
    s__instance(s__LinguisticCommunication__t,s__SetOrClass) ).

fof(kb_SUMO_5589,axiom,
    s__instance(s__Communication__t,s__SetOrClass) ).

fof(kb_SUMO_5590,axiom,
    s__documentation(s__LinguisticCommunication,s__EnglishLanguage,'A &%Communication that involves the transfer of information via a &%LinguisticExpression.') ).

fof(kb_SUMO_5591,axiom,
    ! [V__COMMUNICATE] :
      ( s__instance(V__COMMUNICATE,s__Process)
     => ( s__instance(V__COMMUNICATE,s__LinguisticCommunication)
       => ? [V__OBJ] :
            ( s__represents(V__COMMUNICATE,V__OBJ)
            & s__instance(V__OBJ,s__LinguisticExpression)
            & s__patient(V__COMMUNICATE,V__OBJ) ) ) ) ).

fof(kb_SUMO_5592,axiom,
    s__subclass(s__Stating,s__LinguisticCommunication) ).

fof(kb_SUMO_5593,axiom,
    s__instance(s__Stating__t,s__SetOrClass) ).

fof(kb_SUMO_5594,axiom,
    s__documentation(s__Stating,s__EnglishLanguage,'Instances of this &%Class commit the &%agent to some truth. For example, John claimed that the moon is made of green cheese.') ).

%FOL fof(kb_SUMO_5595,axiom,(( (! [V__FORMULA,V__AGENT,V__STATE] : ((s__instance(V__STATE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent)) => ((s__instance(V__STATE,s__Stating) & s__agent(V__STATE,V__AGENT) & s__patient(V__STATE,V__FORMULA) & s__instance(V__FORMULA,s__Formula)) => s__holdsDuring(s__WhenFn(V__STATE),'s__believes(V__AGENT,V__FORMULA)')))) ))).

fof(kb_SUMO_5596,axiom,
    s__subclass(s__Disagreeing,s__Stating) ).

fof(kb_SUMO_5597,axiom,
    s__instance(s__Disagreeing__t,s__SetOrClass) ).

fof(kb_SUMO_5598,axiom,
    s__documentation(s__Disagreeing,s__EnglishLanguage,'A &%Stating in which two &%Agents have contradictory statements. This is distinguished from &%Arguing in that the statement in dispute may be a simple assertion, rather than a chain of deduction, and that two entities must be disagreeing with each other, whereas a single entity may craft an argument for a given point of view, without the need for another agent to disagree with.') ).

fof(kb_SUMO_5599,axiom,
    ! [V__DIS] :
      ( s__instance(V__DIS,s__Process)
     => ( s__instance(V__DIS,s__Disagreeing)
       => ? [V__A1,V__A2,V__STATE1,V__STATE2,V__STMT1,V__STMT2] :
            ( s__instance(V__STMT2,s__Proposition)
            & s__instance(V__STMT1,s__Proposition)
            & s__instance(V__STATE2,s__Process)
            & s__instance(V__STATE2,s__ContentBearingPhysical)
            & s__instance(V__STATE1,s__Process)
            & s__instance(V__STATE1,s__ContentBearingPhysical)
            & s__instance(V__A2,s__Agent)
            & s__instance(V__A1,s__Agent)
            & s__subProcess(V__STATE1,V__DIS)
            & s__subProcess(V__STATE2,V__DIS)
            & s__agent(V__STATE1,V__A1)
            & s__agent(V__STATE2,V__A2)
            & s__containsInformation(V__STATE1,V__STMT1)
            & s__containsInformation(V__STATE2,V__STMT2)
            & ~ s__consistent(V__STMT1,V__STMT2) ) ) ) ).

fof(kb_SUMO_5600,axiom,
    s__subclass(s__Supposing,s__LinguisticCommunication) ).

fof(kb_SUMO_5601,axiom,
    s__instance(s__Supposing__t,s__SetOrClass) ).

fof(kb_SUMO_5602,axiom,
    s__documentation(s__Supposing,s__EnglishLanguage,'Instances of this &%Class suppose, for the sake of argument, that a proposition is true. For example, John considered what he would do if he won the lottery.') ).

fof(kb_SUMO_5603,axiom,
    s__subclass(s__Directing,s__LinguisticCommunication) ).

fof(kb_SUMO_5604,axiom,
    s__instance(s__Directing__t,s__SetOrClass) ).

fof(kb_SUMO_5605,axiom,
    s__documentation(s__Directing,s__EnglishLanguage,'Instances of this &%Class urge some further action among the receivers. A &%Directing can be an &%Ordering, a &%Requesting or a &%Questioning.') ).

fof(kb_SUMO_5606,axiom,
    s__subclass(s__Ordering,s__Directing) ).

fof(kb_SUMO_5607,axiom,
    s__instance(s__Ordering__t,s__SetOrClass) ).

fof(kb_SUMO_5608,axiom,
    s__documentation(s__Ordering,s__EnglishLanguage,'A &%Directing in which the receiver is commanded to realize the content of a &%ContentBearingObject. Orders are injunctions, the disobedience of which involves sanctions, or which express an obligation upon the part of the orderee.') ).

fof(kb_SUMO_5609,axiom,
    ! [V__ORDER,V__FORMULA] :
      ( ( s__instance(V__FORMULA,s__Formula)
        & s__instance(V__ORDER,s__Process) )
     => ( ( s__instance(V__ORDER,s__Ordering)
          & s__patient(V__ORDER,V__FORMULA) )
       => s__modalAttribute(V__FORMULA,s__Obligation) ) ) ).

fof(kb_SUMO_5610,axiom,
    s__subclass(s__Requesting,s__Directing) ).

fof(kb_SUMO_5611,axiom,
    s__instance(s__Requesting__t,s__SetOrClass) ).

fof(kb_SUMO_5612,axiom,
    s__documentation(s__Requesting,s__EnglishLanguage,'A request expresses a desire that some future action be performed. For example, the 5th Battalion requested air support from the 3rd Bomber Group. Note that this class covers proposals, recommendations, suggestions, etc.') ).

fof(kb_SUMO_5613,axiom,
    ! [V__REQUEST,V__FORMULA,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__REQUEST,s__Process) )
     => ( ( s__instance(V__REQUEST,s__Requesting)
          & s__agent(V__REQUEST,V__AGENT)
          & s__patient(V__REQUEST,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__desires(V__AGENT,V__FORMULA) ) ) ).

fof(kb_SUMO_5614,axiom,
    s__subclass(s__Questioning,s__Directing) ).

fof(kb_SUMO_5615,axiom,
    s__instance(s__Questioning__t,s__SetOrClass) ).

fof(kb_SUMO_5616,axiom,
    s__documentation(s__Questioning,s__EnglishLanguage,'A request for information. For example, John asked Bill if the President had said anything about taxes in his State of the Union address.') ).

fof(kb_SUMO_5617,axiom,
    ! [V__FORMULA,V__AGENT,V__QUESTION] :
      ( ( s__instance(V__QUESTION,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__QUESTION,s__Questioning)
          & s__agent(V__QUESTION,V__AGENT)
          & s__patient(V__QUESTION,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__holdsDuring(s__WhenFn(V__QUESTION),'(~ s__knows(V__AGENT,V__FORMULA))') ) ) ).

fof(kb_SUMO_5618,axiom,
    s__subclass(s__Committing,s__LinguisticCommunication) ).

fof(kb_SUMO_5619,axiom,
    s__documentation(s__Committing,s__EnglishLanguage,'Instances of this &%Class commit the &%agent to some future course. For example, Bob promised Susan that he would be home by 11pm.') ).

fof(kb_SUMO_5620,axiom,
    ! [V__FORMULA,V__COMMIT] :
      ( s__instance(V__COMMIT,s__Process)
     => ( ( s__instance(V__COMMIT,s__Committing)
          & s__patient(V__COMMIT,V__FORMULA)
          & s__instance(V__FORMULA,s__Formula) )
       => s__modalAttribute(V__FORMULA,s__Promise) ) ) ).

fof(kb_SUMO_5621,axiom,
    s__subclass(s__Offering,s__Committing) ).

fof(kb_SUMO_5622,axiom,
    s__instance(s__Offering__t,s__SetOrClass) ).

fof(kb_SUMO_5623,axiom,
    s__instance(s__Committing__t,s__SetOrClass) ).

fof(kb_SUMO_5624,axiom,
    s__documentation(s__Offering,s__EnglishLanguage,'The subclass of &%Committing in which a &%CognitiveAgent offers something &%Physical to another agent. Offerings may be unconditional (in which case they are a promise to effect a &%UnilateralGiving) or conditional (in which case they are a promise to effect a &%Transaction of some sort).') ).

fof(kb_SUMO_5625,axiom,
    s__subclass(s__Declaring,s__LinguisticCommunication) ).

fof(kb_SUMO_5626,axiom,
    s__instance(s__Declaring__t,s__SetOrClass) ).

fof(kb_SUMO_5627,axiom,
    s__documentation(s__Declaring,s__EnglishLanguage,'The &%Class of &%LinguisticCommunications that effect an institutional alteration when performed by competent authority. Some examples are nominating, marrying, and excommunicating.') ).

fof(kb_SUMO_5628,axiom,
    ! [V__DECLARE] :
      ( s__instance(V__DECLARE,s__Declaring)
     => ? [V__PROP,V__NORM] :
          ( s__instance(V__NORM,s__ObjectiveNorm)
          & s__instance(V__PROP,s__Formula)
          & ( s__confersNorm(V__DECLARE,V__PROP,V__NORM)
            | s__deprivesNorm(V__DECLARE,V__PROP,V__NORM) ) ) ) ).

fof(kb_SUMO_5629,axiom,
    s__subclass(s__Naming,s__Declaring) ).

fof(kb_SUMO_5630,axiom,
    s__instance(s__Naming__t,s__SetOrClass) ).

fof(kb_SUMO_5631,axiom,
    s__documentation(s__Naming,s__EnglishLanguage,'The &%Process of assigning a name to someone or something.') ).

%FOL fof(kb_SUMO_5632,axiom,(( (! [V__PROCESS,V__THING,V__NAME] : ((s__instance(V__NAME,s__SymbolicString) & s__instance(V__PROCESS,s__Process)) => ((s__instance(V__PROCESS,s__Naming) & s__patient(V__PROCESS,V__THING) & s__destination(V__PROCESS,V__NAME)) => s__holdsDuring(s__FutureFn(s__WhenFn(V__PROCESS)),'s__names(V__NAME,V__THING)')))) ))).

fof(kb_SUMO_5633,axiom,
    s__subclass(s__Cooperation,s__SocialInteraction) ).

fof(kb_SUMO_5634,axiom,
    s__instance(s__Cooperation__t,s__SetOrClass) ).

fof(kb_SUMO_5635,axiom,
    s__documentation(s__Cooperation,s__EnglishLanguage,'The &%subclass of &%SocialInteraction where the participants involved work together for the achievement of a common goal.') ).

fof(kb_SUMO_5636,axiom,
    ! [V__COOPERATE] :
      ( s__instance(V__COOPERATE,s__Cooperation)
     => ? [V__PURP] :
          ( s__instance(V__PURP,s__Formula)
          & ! [V__AGENT] :
              ( ( s__instance(V__AGENT,s__CognitiveAgent)
                & s__instance(V__COOPERATE,s__Process) )
             => ( s__agent(V__COOPERATE,V__AGENT)
               => s__hasPurposeForAgent(V__COOPERATE,V__PURP,V__AGENT) ) ) ) ) ).

fof(kb_SUMO_5637,axiom,
    s__subclass(s__Meeting,s__SocialInteraction) ).

fof(kb_SUMO_5638,axiom,
    s__instance(s__Meeting__t,s__SetOrClass) ).

fof(kb_SUMO_5639,axiom,
    s__instance(s__SocialInteraction__t,s__SetOrClass) ).

fof(kb_SUMO_5640,axiom,
    s__documentation(s__Meeting,s__EnglishLanguage,'The coming together of two or more &%CognitiveAgents for the purpose of &%Communication. This covers informal meetings, e.g. visits with family members, and formal meetings, e.g. a board of directors meeting.') ).

%FOL fof(kb_SUMO_5641,axiom,(( (! [V__MEET,V__AGENT2,V__AGENT1] : ((s__instance(V__AGENT1,s__Agent) & s__instance(V__AGENT2,s__Agent) & s__instance(V__MEET,s__Process)) => ((s__instance(V__MEET,s__Meeting) & s__agent(V__MEET,V__AGENT1) & s__agent(V__MEET,V__AGENT2)) => s__holdsDuring(s__WhenFn(V__MEET),'s__orientation(V__AGENT1,V__AGENT2,s__Near)')))) ))).

fof(kb_SUMO_5642,axiom,
    ! [V__MEET] :
      ( s__instance(V__MEET,s__Process)
     => ( s__instance(V__MEET,s__Meeting)
       => ? [V__AGENT1,V__AGENT2] :
            ( s__agent(V__MEET,V__AGENT1)
            & s__agent(V__MEET,V__AGENT2)
            & s__hasPurpose(V__MEET,'(? [V__COMM] : (s__instance(V__COMM,s__Process) & s__instance(V__AGENT2,s__Agent) & s__instance(V__AGENT1,s__Agent) & s__instance(V__COMM,s__Communication) & s__agent(V__COMM,V__AGENT1) & s__agent(V__COMM,V__AGENT2)))') ) ) ) ).

fof(kb_SUMO_5643,axiom,
    s__subclass(s__Contest,s__SocialInteraction) ).

fof(kb_SUMO_5644,axiom,
    s__documentation(s__Contest,s__EnglishLanguage,'A &%SocialInteraction where the &%agent and &%patient are &%CognitiveAgents who are trying to defeat one another. Note that this concept is often applied in a metaphorical sense in natural language, when we speak, e.g., of the struggle of plants for space or sunlight, or of bacteria for food resources in some environment.') ).

fof(kb_SUMO_5645,axiom,
    ! [V__CONTEST] :
      ( s__instance(V__CONTEST,s__Process)
     => ( s__instance(V__CONTEST,s__Contest)
       => ? [V__AGENT1,V__AGENT2,V__PURP1,V__PURP2] :
            ( s__instance(V__PURP2,s__Formula)
            & s__instance(V__PURP1,s__Formula)
            & s__instance(V__AGENT2,s__CognitiveAgent)
            & s__instance(V__AGENT1,s__CognitiveAgent)
            & s__agent(V__CONTEST,V__AGENT1)
            & s__agent(V__CONTEST,V__AGENT2)
            & s__hasPurposeForAgent(V__CONTEST,V__PURP1,V__AGENT1)
            & s__hasPurposeForAgent(V__CONTEST,V__PURP2,V__AGENT2)
            & V__AGENT1 != V__AGENT2
            & V__PURP1 != V__PURP2 ) ) ) ).

fof(kb_SUMO_5646,axiom,
    s__subclass(s__ViolentContest,s__Contest) ).

fof(kb_SUMO_5647,axiom,
    s__instance(s__Contest__t,s__SetOrClass) ).

fof(kb_SUMO_5648,axiom,
    s__documentation(s__ViolentContest,s__EnglishLanguage,'A &%Contest where one participant attempts to physically injure another participant.') ).

fof(kb_SUMO_5649,axiom,
    s__subclass(s__War,s__ViolentContest) ).

fof(kb_SUMO_5650,axiom,
    s__instance(s__War__t,s__SetOrClass) ).

fof(kb_SUMO_5651,axiom,
    s__instance(s__ViolentContest__t,s__SetOrClass) ).

fof(kb_SUMO_5652,axiom,
    s__documentation(s__War,s__EnglishLanguage,'A military confrontation between two or more &%GeopoliticalAreas or &%Organizations whose members are &%GeopoliticalAreas. As the corresponding axiom specifies, a &%War is made up of &%Battles.') ).

fof(kb_SUMO_5653,axiom,
    ! [V__WAR] :
      ( s__instance(V__WAR,s__Process)
     => ( s__instance(V__WAR,s__War)
       => ? [V__BATTLE] :
            ( s__instance(V__BATTLE,s__Process)
            & s__instance(V__BATTLE,s__Battle)
            & s__subProcess(V__BATTLE,V__WAR) ) ) ) ).

fof(kb_SUMO_5654,axiom,
    ! [V__AGENT,V__WAR] :
      ( ( s__instance(V__WAR,s__War)
        & s__agent(V__WAR,V__AGENT) )
     => ( s__instance(V__AGENT,s__GeopoliticalArea)
        | ( s__instance(V__AGENT,s__Organization)
          & ! [V__MEMBER] :
              ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
                & s__instance(V__WAR,s__Process)
                & s__instance(V__AGENT,s__Agent)
                & s__instance(V__AGENT,s__Collection) )
             => ( s__member(V__MEMBER,V__AGENT)
               => s__instance(V__MEMBER,s__GeopoliticalArea) ) ) ) ) ) ).

fof(kb_SUMO_5655,axiom,
    s__subclass(s__Battle,s__ViolentContest) ).

fof(kb_SUMO_5656,axiom,
    s__instance(s__Battle__t,s__SetOrClass) ).

fof(kb_SUMO_5657,axiom,
    s__documentation(s__Battle,s__EnglishLanguage,'A &%ViolentContest between two or more military units within the context of a war. Note that this does not cover the metaphorical sense of battle, which simply means a struggle of some sort. This sense should be represented with the more general concept of &%Contest.') ).

fof(kb_SUMO_5658,axiom,
    ! [V__BATTLE] :
      ( s__instance(V__BATTLE,s__Process)
     => ( s__instance(V__BATTLE,s__Battle)
       => ? [V__WAR] :
            ( s__instance(V__WAR,s__Process)
            & s__instance(V__WAR,s__War)
            & s__subProcess(V__BATTLE,V__WAR) ) ) ) ).

fof(kb_SUMO_5659,axiom,
    ! [V__BATTLE] :
      ( s__instance(V__BATTLE,s__Process)
     => ( s__instance(V__BATTLE,s__Battle)
       => ? [V__ATTACK] :
            ( s__instance(V__ATTACK,s__Process)
            & s__instance(V__ATTACK,s__ViolentContest)
            & s__subProcess(V__ATTACK,V__BATTLE) ) ) ) ).

fof(kb_SUMO_5660,axiom,
    s__subclass(s__Game,s__Contest) ).

fof(kb_SUMO_5661,axiom,
    s__instance(s__Game__t,s__SetOrClass) ).

fof(kb_SUMO_5662,axiom,
    s__subclass(s__Game,s__RecreationOrExercise) ).

fof(kb_SUMO_5663,axiom,
    s__documentation(s__Game,s__EnglishLanguage,'A &%Contest whose purpose is the enjoyment/stimulation of the participants or spectators of the &%Game.') ).

fof(kb_SUMO_5664,axiom,
    s__subclass(s__Sport,s__Game) ).

fof(kb_SUMO_5665,axiom,
    s__instance(s__Sport__t,s__SetOrClass) ).

fof(kb_SUMO_5666,axiom,
    s__documentation(s__Sport,s__EnglishLanguage,'A &%Game which requires some degree of physical exercion from the participants of the game.') ).

fof(kb_SUMO_5667,axiom,
    s__subclass(s__LegalAction,s__Contest) ).

fof(kb_SUMO_5668,axiom,
    s__instance(s__LegalAction__t,s__SetOrClass) ).

fof(kb_SUMO_5669,axiom,
    s__documentation(s__LegalAction,s__EnglishLanguage,'Any &%Process where a &%CognitiveAgent seeks to obtain something through a court of law.') ).

fof(kb_SUMO_5670,axiom,
    s__subclass(s__Maneuver,s__IntentionalProcess) ).

fof(kb_SUMO_5671,axiom,
    s__documentation(s__Maneuver,s__EnglishLanguage,'An intentional move or play within a &%Contest. In many cases, a &%Maneuver is a realization of part of a strategy for winning the &%Contest, but it also may be just an arbitrary or semi-arbitrary division of the overarching &%Contest, e.g. innings in a baseball game.') ).

fof(kb_SUMO_5672,axiom,
    ! [V__MOVE] :
      ( s__instance(V__MOVE,s__Process)
     => ( s__instance(V__MOVE,s__Maneuver)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__Contest)
            & s__subProcess(V__MOVE,V__CONTEST) ) ) ) ).

fof(kb_SUMO_5673,axiom,
    s__subclass(s__Attack,s__Maneuver) ).

fof(kb_SUMO_5674,axiom,
    s__instance(s__Attack__t,s__SetOrClass) ).

fof(kb_SUMO_5675,axiom,
    s__documentation(s__Attack,s__EnglishLanguage,'A &%Maneuver in a &%ViolentContest where the &%agent attempts to inflict damage on the &%patient.') ).

fof(kb_SUMO_5676,axiom,
    ! [V__ATTACK] :
      ( s__instance(V__ATTACK,s__Process)
     => ( s__instance(V__ATTACK,s__Attack)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__ViolentContest)
            & s__subProcess(V__ATTACK,V__CONTEST) ) ) ) ).

fof(kb_SUMO_5677,axiom,
    ! [V__OBJ,V__ATTACK,V__AGENT] :
      ( ( s__instance(V__AGENT,s__CognitiveAgent)
        & s__instance(V__ATTACK,s__Process) )
     => ( ( s__instance(V__ATTACK,s__Attack)
          & s__agent(V__ATTACK,V__AGENT)
          & s__patient(V__ATTACK,V__OBJ) )
       => s__hasPurposeForAgent(V__ATTACK,'(? [V__DAMAGE] : (s__instance(V__DAMAGE,s__Process) & s__instance(V__DAMAGE,s__Damaging) & s__patient(V__DAMAGE,V__OBJ)))',V__AGENT) ) ) ).

fof(kb_SUMO_5678,axiom,
    s__subclass(s__DefensiveManeuver,s__Maneuver) ).

fof(kb_SUMO_5679,axiom,
    s__instance(s__DefensiveManeuver__t,s__SetOrClass) ).

fof(kb_SUMO_5680,axiom,
    s__instance(s__Maneuver__t,s__SetOrClass) ).

fof(kb_SUMO_5681,axiom,
    s__documentation(s__DefensiveManeuver,s__EnglishLanguage,'A &%Maneuver in a &%ViolentContest where the &%agent attempts to avoid being damaged.') ).

fof(kb_SUMO_5682,axiom,
    ! [V__DEFENSE] :
      ( s__instance(V__DEFENSE,s__Process)
     => ( s__instance(V__DEFENSE,s__DefensiveManeuver)
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__ViolentContest)
            & s__subProcess(V__DEFENSE,V__CONTEST) ) ) ) ).

fof(kb_SUMO_5683,axiom,
    ! [V__AGENT,V__DEFENSE] :
      ( ( s__instance(V__DEFENSE,s__Process)
        & s__instance(V__AGENT,s__CognitiveAgent) )
     => ( ( s__instance(V__DEFENSE,s__DefensiveManeuver)
          & s__agent(V__DEFENSE,V__AGENT) )
       => s__hasPurposeForAgent(V__DEFENSE,'(~ (? [V__DAMAGE] : (s__instance(V__DAMAGE,s__Process) & s__instance(V__DAMAGE,s__Damaging) & s__patient(V__DAMAGE,V__AGENT))))',V__AGENT) ) ) ).

fof(kb_SUMO_5684,axiom,
    ! [V__CONTEST,V__MANEUVER] :
      ( ( s__instance(V__MANEUVER,s__Process)
        & s__instance(V__CONTEST,s__Process) )
     => ( ( s__instance(V__MANEUVER,s__Maneuver)
          & s__instance(V__CONTEST,s__ViolentContest)
          & s__subProcess(V__MANEUVER,V__CONTEST) )
       => ( s__instance(V__MANEUVER,s__Attack)
          | s__instance(V__MANEUVER,s__DefensiveManeuver) ) ) ) ).

fof(kb_SUMO_5685,axiom,
    s__subclass(s__Perception,s__PsychologicalProcess) ).

fof(kb_SUMO_5686,axiom,
    s__documentation(s__Perception,s__EnglishLanguage,'Sensing some aspect of the material world. Note that the &%agent of this sensing is assumed to be an &%Animal.') ).

fof(kb_SUMO_5687,axiom,
    ! [V__PERCEPT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__PERCEPT,s__Process) )
     => ( ( s__instance(V__PERCEPT,s__Perception)
          & s__agent(V__PERCEPT,V__AGENT) )
       => s__instance(V__AGENT,s__Animal) ) ) ).

fof(kb_SUMO_5688,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( s__instance(V__AGENT,s__SentientAgent)
       => s__capability(s__Perception,s__experiencer__m,V__AGENT) ) ) ).

fof(kb_SUMO_5689,axiom,
    s__subclass(s__Seeing,s__Perception) ).

fof(kb_SUMO_5690,axiom,
    s__documentation(s__Seeing,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an ocular &%Organ.') ).

%FOL fof(kb_SUMO_5691,axiom,(( (! [V__OBJ,V__AGENT,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__AGENT,s__CognitiveAgent) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__agent(V__SEE,V__AGENT) & s__patient(V__SEE,V__OBJ)) => (? [V__PROP] : (s__instance(V__PROP,s__Attribute) & s__instance(V__PROP,s__ColorAttribute) & s__knows(V__AGENT,'s__attribute(V__OBJ,V__PROP)')))))) ))).

%FOL fof(kb_SUMO_5692,axiom,(( (! [V__OBJ,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__patient(V__SEE,V__OBJ)) => s__holdsDuring(s__WhenFn(V__SEE),'s__attribute(V__OBJ,s__Illuminated)')))) ))).

%FOL fof(kb_SUMO_5693,axiom,(( (! [V__OBJ,V__SEE] : ((s__instance(V__SEE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__SEE,s__Seeing) & s__patient(V__SEE,V__OBJ)) => (? [V__ATTR] : (s__instance(V__ATTR,s__Attribute) & s__instance(V__ATTR,s__ColorAttribute) & s__holdsDuring(s__WhenFn(V__SEE),'s__attribute(V__OBJ,V__ATTR)')))))) ))).

fof(kb_SUMO_5694,axiom,
    s__subclass(s__Looking,s__Seeing) ).

fof(kb_SUMO_5695,axiom,
    s__instance(s__Looking__t,s__SetOrClass) ).

fof(kb_SUMO_5696,axiom,
    s__instance(s__Seeing__t,s__SetOrClass) ).

fof(kb_SUMO_5697,axiom,
    s__subclass(s__Looking,s__IntentionalProcess) ).

fof(kb_SUMO_5698,axiom,
    s__documentation(s__Looking,s__EnglishLanguage,'Any instance of &%Seeing which is intentional.') ).

fof(kb_SUMO_5699,axiom,
    s__subclass(s__Smelling,s__Perception) ).

fof(kb_SUMO_5700,axiom,
    s__instance(s__Smelling__t,s__SetOrClass) ).

fof(kb_SUMO_5701,axiom,
    s__instance(s__Perception__t,s__SetOrClass) ).

fof(kb_SUMO_5702,axiom,
    s__documentation(s__Smelling,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an olefactory &%Organ.') ).

fof(kb_SUMO_5703,axiom,
    ! [V__OBJ,V__SMELL] :
      ( ( s__instance(V__SMELL,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__SMELL,s__Smelling)
          & s__patient(V__SMELL,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__OlfactoryAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_5704,axiom,
    s__subclass(s__Tasting,s__Perception) ).

fof(kb_SUMO_5705,axiom,
    s__instance(s__Tasting__t,s__SetOrClass) ).

fof(kb_SUMO_5706,axiom,
    s__documentation(s__Tasting,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by of an &%Organ which can discriminate various tastes.') ).

fof(kb_SUMO_5707,axiom,
    ! [V__OBJ,V__TASTE] :
      ( ( s__instance(V__TASTE,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__TASTE,s__Tasting)
          & s__patient(V__TASTE,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__TasteAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_5708,axiom,
    s__subclass(s__Hearing,s__Perception) ).

fof(kb_SUMO_5709,axiom,
    s__documentation(s__Hearing,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by an auditory &%Organ.') ).

fof(kb_SUMO_5710,axiom,
    ! [V__OBJ,V__HEAR] :
      ( ( s__instance(V__HEAR,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__HEAR,s__Hearing)
          & s__patient(V__HEAR,V__OBJ) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SoundAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_5711,axiom,
    s__subclass(s__SoundAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_5712,axiom,
    s__instance(s__SoundAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_5713,axiom,
    s__instance(s__PerceptualAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_5714,axiom,
    s__subclass(s__SoundAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_5715,axiom,
    s__documentation(s__SoundAttribute,s__EnglishLanguage,'The volume of sound relative to a listener.') ).

fof(kb_SUMO_5716,axiom,
    s__instance(s__Audible,s__SoundAttribute) ).

fof(kb_SUMO_5717,axiom,
    s__documentation(s__Audible,s__EnglishLanguage,'A sound level capable of being heard by a &%Human.') ).

fof(kb_SUMO_5718,axiom,
    ! [V__HEAR,V__OBJ,V__SOUND] :
      ( ( s__instance(V__SOUND,s__Process)
        & s__instance(V__SOUND,s__Object)
        & s__instance(V__OBJ,s__Agent) )
     => ( ( s__instance(V__SOUND,s__RadiatingSound)
          & s__agent(V__SOUND,V__OBJ)
          & s__attribute(V__SOUND,s__Audible) )
       => ? [V__HUMAN] :
            ( s__instance(V__HUMAN,s__Agent)
            & s__instance(V__HUMAN,s__Human)
            & s__capability(s__KappaFn(V__HEAR,'(s__instance(V__HEAR,s__Hearing) & s__agent(V__HEAR,V__HUMAN) & s__destination(V__HEAR,V__HUMAN) & s__origin(V__HEAR,V__OBJ))'),s__agent__m,V__HUMAN) ) ) ) ).

fof(kb_SUMO_5719,axiom,
    s__subclass(s__Listening,s__Hearing) ).

fof(kb_SUMO_5720,axiom,
    s__instance(s__Hearing__t,s__SetOrClass) ).

fof(kb_SUMO_5721,axiom,
    s__subclass(s__Listening,s__IntentionalProcess) ).

fof(kb_SUMO_5722,axiom,
    s__instance(s__Listening__t,s__SetOrClass) ).

fof(kb_SUMO_5723,axiom,
    s__documentation(s__Listening,s__EnglishLanguage,'Any instance of &%Hearing which is intentional.') ).

fof(kb_SUMO_5724,axiom,
    s__subclass(s__TactilePerception,s__Perception) ).

fof(kb_SUMO_5725,axiom,
    s__instance(s__TactilePerception__t,s__SetOrClass) ).

fof(kb_SUMO_5726,axiom,
    s__documentation(s__TactilePerception,s__EnglishLanguage,'The &%subclass of &%Perception in which the sensing is done by &%Touching. Note that &%Touching need not involve &%TactilePerception. For example, a person who has lost all sensation in both of his legs would have no &%TactilePerception of anything his legs were &%Touching.') ).

fof(kb_SUMO_5727,axiom,
    ! [V__TACTILE] :
      ( s__instance(V__TACTILE,s__Process)
     => ( s__instance(V__TACTILE,s__TactilePerception)
       => ? [V__TOUCH] :
            ( s__instance(V__TOUCH,s__Process)
            & s__instance(V__TOUCH,s__Touching)
            & s__subProcess(V__TOUCH,V__TACTILE) ) ) ) ).

fof(kb_SUMO_5728,axiom,
    s__subclass(s__Radiating,s__Motion) ).

fof(kb_SUMO_5729,axiom,
    s__documentation(s__Radiating,s__EnglishLanguage,'Processes in which some form of electromagnetic radiation, e.g. radio waves, light waves, electrical energy, etc., is given off or absorbed by something else.') ).

fof(kb_SUMO_5730,axiom,
    s__subclass(s__RadiatingLight,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_5731,axiom,
    s__instance(s__RadiatingLight__t,s__SetOrClass) ).

fof(kb_SUMO_5732,axiom,
    s__documentation(s__RadiatingLight,s__EnglishLanguage,'The &%subclass of &%Radiating in which light is given off or absorbed. Some examples include blinking, flashing, and glittering.') ).

fof(kb_SUMO_5733,axiom,
    ! [V__REGION] :
      ( s__instance(V__REGION,s__Object)
     => ( ? [V__EMIT] :
            ( s__instance(V__EMIT,s__Process)
            & s__instance(V__EMIT,s__RadiatingLight)
            & s__patient(V__EMIT,V__REGION)
            & s__instance(V__REGION,s__Region) )
      <=> s__attribute(V__REGION,s__Illuminated) ) ) ).

fof(kb_SUMO_5734,axiom,
    s__subclass(s__RadiatingInfrared,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_5735,axiom,
    s__instance(s__RadiatingInfrared__t,s__SetOrClass) ).

fof(kb_SUMO_5736,axiom,
    s__instance(s__RadiatingElectromagnetic__t,s__SetOrClass) ).

fof(kb_SUMO_5737,axiom,
    s__subclass(s__RadiatingXRay,s__RadiatingElectromagnetic) ).

fof(kb_SUMO_5738,axiom,
    s__instance(s__RadiatingXRay__t,s__SetOrClass) ).

fof(kb_SUMO_5739,axiom,
    s__subclass(s__RadiatingSound,s__Radiating) ).

fof(kb_SUMO_5740,axiom,
    s__documentation(s__RadiatingSound,s__EnglishLanguage,'The &%subclass of &%Radiating in which sound waves are given off or absorbed. Some examples include creaking, roaring, and whistling.') ).

fof(kb_SUMO_5741,axiom,
    ! [V__SOUND,V__EMIT] :
      ( ( s__instance(V__EMIT,s__Process)
        & s__instance(V__SOUND,s__Agent) )
     => ( ( s__instance(V__EMIT,s__RadiatingSound)
          & s__agent(V__EMIT,V__SOUND) )
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SoundAttribute)
            & s__attribute(V__SOUND,V__ATTR) ) ) ) ).

fof(kb_SUMO_5742,axiom,
    s__subclass(s__MakingMusic,s__RadiatingSound) ).

fof(kb_SUMO_5743,axiom,
    s__instance(s__RadiatingSound__t,s__SetOrClass) ).

fof(kb_SUMO_5744,axiom,
    s__documentation(s__MakingMusic,s__EnglishLanguage,'&%MakingMusic is a type of &%RadiatingSound where the &%result is intended to be melodic and is produced delibrately') ).

fof(kb_SUMO_5745,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingMusic,'making music') ).

fof(kb_SUMO_5746,axiom,
    s__comment(s__MakingMusic,'Changing the old Music to &%MakingMusic to be more consistent with the verb-form that &%Process seem to take. (09-14-2011)','KJN') ).

fof(kb_SUMO_5747,axiom,
    s__partition_3(s__MakingMusic,s__MakingInstrumentalMusic,s__MakingVocalMusic) ).

fof(kb_SUMO_5748,axiom,
    s__subclass(s__MakingInstrumentalMusic,s__MakingMusic) ).

fof(kb_SUMO_5749,axiom,
    s__instance(s__MakingInstrumentalMusic__t,s__SetOrClass) ).

fof(kb_SUMO_5750,axiom,
    s__instance(s__MakingMusic__t,s__SetOrClass) ).

fof(kb_SUMO_5751,axiom,
    s__documentation(s__MakingInstrumentalMusic,s__EnglishLanguage,'&%MakingInstrumentalMusic is a type of &%MakingMusic which is produced using some kind of &%MusicalInstrument') ).

fof(kb_SUMO_5752,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingInstrumentalMusic,'instrumental music') ).

fof(kb_SUMO_5753,axiom,
    ! [V__M] :
      ( s__instance(V__M,s__Process)
     => ( s__instance(V__M,s__MakingInstrumentalMusic)
       => ? [V__I] :
            ( s__instance(V__I,s__Object)
            & s__instance(V__I,s__MusicalInstrument)
            & s__instrument(V__M,V__I) ) ) ) ).

fof(kb_SUMO_5754,axiom,
    s__subclass(s__MakingVocalMusic,s__MakingMusic) ).

fof(kb_SUMO_5755,axiom,
    s__instance(s__MakingVocalMusic__t,s__SetOrClass) ).

fof(kb_SUMO_5756,axiom,
    s__subclass(s__MakingVocalMusic,s__Vocalizing) ).

fof(kb_SUMO_5757,axiom,
    s__documentation(s__MakingVocalMusic,s__EnglishLanguage,'&%MakingVocalMusic is a type of &%MakingMusic which is produced by using the vocal cords') ).

fof(kb_SUMO_5758,axiom,
    s__termFormat(s__EnglishLanguage,s__MakingVocalMusic,singing) ).

fof(kb_SUMO_5759,axiom,
    s__comment(s__MakingVocalMusic,'Currently, &%VocalMusic also inherits from &%Speaking. Changing this to more general &%Vocalizing. Acapella groups today use their &%VocalCord to create music in ways that are more than just speaking. (09-14-2011)','KJN') ).

fof(kb_SUMO_5760,axiom,
    s__subclass(s__Singing,s__MakingVocalMusic) ).

fof(kb_SUMO_5761,axiom,
    s__instance(s__Singing__t,s__SetOrClass) ).

fof(kb_SUMO_5762,axiom,
    s__documentation(s__Singing,s__EnglishLanguage,'&%Singing is a type of &%MakingVocalMusic wherein words are produced by the singer. This is different from other forms of &%MakingVocalMusic such as humming or scatting or beatboxing , where the vocal cords are used to create the music but no words are formed.') ).

fof(kb_SUMO_5763,axiom,
    ! [V__S] :
      ( s__instance(V__S,s__Process)
     => ( s__instance(V__S,s__Singing)
       => ? [V__W] :
            ( s__patient(V__S,V__W)
            & s__instance(V__W,s__Word) ) ) ) ).

fof(kb_SUMO_5764,axiom,
    s__subclass(s__RadiatingElectromagnetic,s__Radiating) ).

fof(kb_SUMO_5765,axiom,
    s__documentation(s__RadiatingElectromagnetic,s__EnglishLanguage,'&%RadiatingElectromagnetic is the subclass of &%Radiating processes in which electromagnetic radiation is transmitted or absorbed.') ).

fof(kb_SUMO_5766,axiom,
    s__subclass(s__RadiatingNuclear,s__Radiating) ).

fof(kb_SUMO_5767,axiom,
    s__instance(s__RadiatingNuclear__t,s__SetOrClass) ).

fof(kb_SUMO_5768,axiom,
    s__instance(s__Radiating__t,s__SetOrClass) ).

fof(kb_SUMO_5769,axiom,
    s__documentation(s__RadiatingNuclear,s__EnglishLanguage,'Releasing atomic energy, i.e. energy from a nuclear reaction.') ).

fof(kb_SUMO_5770,axiom,
    s__subclass(s__StateChange,s__InternalChange) ).

fof(kb_SUMO_5771,axiom,
    s__documentation(s__StateChange,s__EnglishLanguage,'Any &%Process where the &%PhysicalState of &%part of the &%patient of the &%Process changes.') ).

%FOL fof(kb_SUMO_5772,axiom,(( (! [V__OBJ,V__PROCESS] : ((s__instance(V__PROCESS,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__PROCESS,s__StateChange) & s__patient(V__PROCESS,V__OBJ)) => (? [V__PART,V__STATE1,V__STATE2] : (s__instance(V__STATE2,s__Attribute) & s__instance(V__STATE1,s__Attribute) & s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__instance(V__STATE1,s__PhysicalState) & s__instance(V__STATE2,s__PhysicalState) & (~ (V__STATE1 = V__STATE2)) & s__holdsDuring(s__BeginFn(s__WhenFn(V__PROCESS)),'s__attribute(V__PART,V__STATE1)') & s__holdsDuring(s__EndFn(s__WhenFn(V__PROCESS)),'s__attribute(V__PART,V__STATE2)')))))) ))).

fof(kb_SUMO_5773,axiom,
    s__instance(s__atomicNumber__m,s__BinaryPredicate) ).

fof(kb_SUMO_5774,axiom,
    s__instance(s__atomicNumber__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5775,axiom,
    s__domainSubclass(s__atomicNumber__m,"1",s__ElementalSubstance) ).

fof(kb_SUMO_5776,axiom,
    s__domain(s__atomicNumber__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_5777,axiom,
    s__documentation(s__atomicNumber__m,s__EnglishLanguage,'(&%atomicNumber ?ELEMENT ?NUMBER) means that the &%ElementalSubstance ?ELEMENT has the atomic number ?NUMBER. The atomic number is the number of &%Protons in the nucleus of an &%Atom.') ).

fof(kb_SUMO_5778,axiom,
    ! [V__PROTON,V__ATOM,V__NUMBER,V__SUBSTANCE,V__TYPE] :
      ( ( s__subclass(V__TYPE,s__ElementalSubstance)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__SUBSTANCE,s__Object)
        & s__instance(V__NUMBER,s__PositiveInteger)
        & s__instance(V__ATOM,s__Object) )
     => ( s__atomicNumber(V__TYPE,V__NUMBER)
       => ( ( s__instance(V__SUBSTANCE,V__TYPE)
            & s__part(V__ATOM,V__SUBSTANCE)
            & s__instance(V__ATOM,s__Atom) )
         => V__NUMBER = s__CardinalityFn(s__KappaFn(V__PROTON,'(s__part(V__PROTON,V__ATOM) & s__instance(V__PROTON,s__Proton))')) ) ) ) ).

fof(kb_SUMO_5779,axiom,
    s__instance(s__boilingPoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_5780,axiom,
    s__domainSubclass(s__boilingPoint__m,"1",s__PureSubstance) ).

fof(kb_SUMO_5781,axiom,
    s__domain(s__boilingPoint__m,"2",s__TemperatureMeasure) ).

fof(kb_SUMO_5782,axiom,
    s__documentation(s__boilingPoint__m,s__EnglishLanguage,'The temperature at which a &%PureSubstance changes state from a &%Liquid to a &%Gas.') ).

fof(kb_SUMO_5783,axiom,
    ! [V__TEMP,V__BOIL,V__PRES,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__PRES,s__RealNumber)
        & s__instance(V__BOIL,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__barometricPressure(V__X,s__MeasureFn(V__PRES,s__InchMercury))
          & greater("29.92",V__PRES)
          & s__boilingPoint(V__Y,s__MeasureFn(V__BOIL,s__KelvinDegree))
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & greater(V__TEMP,V__BOIL) )
       => s__attribute(V__X,s__Gas) ) ) ).

fof(kb_SUMO_5784,axiom,
    ! [V__TEMP,V__BOIL,V__MELT,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__MELT,s__RealNumber)
        & s__instance(V__BOIL,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__boilingPoint(V__Y,s__MeasureFn(V__BOIL,s__KelvinDegree))
          & s__meltingPoint(V__Y,s__MeasureFn(V__MELT,s__KelvinDegree))
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & greater(V__TEMP,V__MELT)
          & less(V__TEMP,V__BOIL) )
       => s__attribute(V__X,s__Liquid) ) ) ).

fof(kb_SUMO_5785,axiom,
    ! [V__TEMP,V__PRES,V__MELT,V__X,V__Y] :
      ( ( s__instance(V__Y,s__SetOrClass)
        & s__instance(V__X,s__Object)
        & s__instance(V__MELT,s__RealNumber)
        & s__instance(V__PRES,s__RealNumber)
        & s__instance(V__TEMP,s__RealNumber) )
     => ( ( s__instance(V__X,V__Y)
          & s__subclass(V__Y,s__PureSubstance)
          & s__meltingPoint(V__Y,s__MeasureFn(V__MELT,s__KelvinDegree))
          & s__barometricPressure(V__X,s__MeasureFn(V__PRES,s__InchMercury))
          & greater(V__PRES,"29.92")
          & s__measure(V__X,s__MeasureFn(V__TEMP,s__KelvinDegree))
          & less(V__TEMP,V__MELT) )
       => s__attribute(V__X,s__Solid) ) ) ).

%FOL fof(kb_SUMO_5786,axiom,(( (! [V__TEMP2,V__TEMP1,V__BOILING,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__BOILING,s__Process) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__BOILING,s__Boiling) & s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__instance(V__SUBSTANCE,V__TYPE) & s__patient(V__BOILING,V__SUBSTANCE) & s__holdsDuring(s__WhenFn(V__BOILING),'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature)) => greatereq(V__TEMP2,V__TEMP1)))) ))).

%FOL fof(kb_SUMO_5787,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__instance(V__SUBSTANCE,V__TYPE) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature) & greatereq(V__TEMP2,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Gas)') | (? [V__BOIL] : (s__instance(V__BOIL,s__Process) & s__overlapsTemporally(s__WhenFn(V__BOIL),V__TIME) & s__instance(V__BOIL,s__Boiling) & s__patient(V__BOIL,V__SUBSTANCE))))))) ))).

fof(kb_SUMO_5788,axiom,
    s__instance(s__meltingPoint__m,s__BinaryPredicate) ).

fof(kb_SUMO_5789,axiom,
    s__domainSubclass(s__meltingPoint__m,"1",s__PureSubstance) ).

fof(kb_SUMO_5790,axiom,
    s__domain(s__meltingPoint__m,"2",s__TemperatureMeasure) ).

fof(kb_SUMO_5791,axiom,
    s__documentation(s__meltingPoint__m,s__EnglishLanguage,'The temperature at which a &%PureSubstance changes state from a &%Solid to a &%Liquid. Note that &%Arsenic can sublimate directly from &%Solid to &%Gas which means that its melting and boiling points are equal.') ).

%FOL fof(kb_SUMO_5792,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__BOIL,V__TEMP3,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TEMP3,s__RealNumber) & s__instance(V__BOIL,s__Process) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__SUBSTANCE,V__TYPE) & s__boilingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__meltingPoint(V__TYPE,s__MeasureFn(V__TEMP2,V__MEASURE)) & s__instance(V__MEASURE,s__UnitOfTemperature) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP3,V__MEASURE))') & greater(V__TEMP3,V__TEMP2) & less(V__TEMP3,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Liquid)') | (? [V__MELT] : (s__instance(V__MELT,s__Physical) & s__overlapsTemporally(s__WhenFn(V__MELT),V__TIME) & s__instance(V__MELT,s__Melting) & s__patient(V__BOIL,V__SUBSTANCE))))))) ))).

%FOL fof(kb_SUMO_5793,axiom,(( (! [V__TEMP2,V__TEMP1,V__TIME,V__SUBSTANCE,V__TYPE,V__MEASURE] : ((s__instance(V__MEASURE,s__UnitOfMeasure) & s__subclass(V__TYPE,s__PureSubstance) & s__instance(V__TYPE,s__SetOrClass) & s__instance(V__SUBSTANCE,s__Object) & s__instance(V__TIME,s__TimeInterval) & s__instance(V__TEMP1,s__RealNumber) & s__instance(V__TEMP2,s__RealNumber)) => ((s__instance(V__SUBSTANCE,V__TYPE) & s__meltingPoint(V__TYPE,s__MeasureFn(V__TEMP1,V__MEASURE)) & s__holdsDuring(V__TIME,'s__measure(V__SUBSTANCE,s__MeasureFn(V__TEMP2,V__MEASURE))') & s__instance(V__MEASURE,s__UnitOfTemperature) & less(V__TEMP2,V__TEMP1)) => (s__holdsDuring(V__TIME,'s__attribute(V__SUBSTANCE,s__Solid)') | (? [V__FREEZE] : (s__instance(V__FREEZE,s__Process) & s__overlapsTemporally(s__WhenFn(V__FREEZE),V__TIME) & s__instance(V__FREEZE,s__Freezing) & s__patient(V__FREEZE,V__SUBSTANCE))))))) ))).

fof(kb_SUMO_5794,axiom,
    ! [V__BOIL,V__MELT,V__TYPE] :
      ( ( s__subclass(V__TYPE,s__PureSubstance)
        & s__instance(V__TYPE,s__SetOrClass)
        & s__instance(V__MELT,s__TemperatureMeasure)
        & s__instance(V__BOIL,s__TemperatureMeasure) )
     => ( ( s__meltingPoint(V__TYPE,V__MELT)
          & s__boilingPoint(V__TYPE,V__BOIL) )
       => greatereq(V__BOIL,V__MELT) ) ) ).

fof(kb_SUMO_5795,axiom,
    s__subclass(s__Melting,s__StateChange) ).

fof(kb_SUMO_5796,axiom,
    s__instance(s__Melting__t,s__SetOrClass) ).

fof(kb_SUMO_5797,axiom,
    s__documentation(s__Melting,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is heated and converted from a &%Solid to a &%Liquid.') ).

fof(kb_SUMO_5798,axiom,
    ! [V__MELT] :
      ( s__instance(V__MELT,s__Process)
     => ( s__instance(V__MELT,s__Melting)
       => ? [V__HEAT] :
            ( s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__subProcess(V__HEAT,V__MELT) ) ) ) ).

%FOL fof(kb_SUMO_5799,axiom,(( (! [V__OBJ,V__MELT] : ((s__instance(V__MELT,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__MELT,s__Melting) & s__patient(V__MELT,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__MELT)),'s__attribute(V__PART,s__Solid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__MELT)),'s__attribute(V__PART,s__Liquid)')))))) ))).

fof(kb_SUMO_5800,axiom,
    s__subclass(s__Boiling,s__StateChange) ).

fof(kb_SUMO_5801,axiom,
    s__instance(s__Boiling__t,s__SetOrClass) ).

fof(kb_SUMO_5802,axiom,
    s__documentation(s__Boiling,s__EnglishLanguage,'The &%Class of &%Processes where a &%Substance is heated and converted from a &%Liquid to a &%Gas.') ).

fof(kb_SUMO_5803,axiom,
    ! [V__BOIL] :
      ( s__instance(V__BOIL,s__Process)
     => ( s__instance(V__BOIL,s__Boiling)
       => ? [V__HEAT] :
            ( s__instance(V__HEAT,s__Process)
            & s__instance(V__HEAT,s__Heating)
            & s__subProcess(V__HEAT,V__BOIL) ) ) ) ).

%FOL fof(kb_SUMO_5804,axiom,(( (! [V__OBJ,V__BOIL] : ((s__instance(V__BOIL,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__BOIL,s__Boiling) & s__patient(V__BOIL,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__BOIL)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__BOIL)),'s__attribute(V__PART,s__Gas)')))))) ))).

fof(kb_SUMO_5805,axiom,
    s__subclass(s__Evaporating,s__StateChange) ).

fof(kb_SUMO_5806,axiom,
    s__instance(s__Evaporating__t,s__SetOrClass) ).

fof(kb_SUMO_5807,axiom,
    s__documentation(s__Evaporating,s__EnglishLanguage,'The &%Class of &%Processes where a &%Substance is converted from a &%Liquid to a &%Gas at a temperature below its &%Boiling point.') ).

%FOL fof(kb_SUMO_5808,axiom,(( (! [V__BOILVAL,V__OBJ,V__MEAS,V__VAL,V__EVAP] : ((s__instance(V__EVAP,s__Process) & s__instance(V__VAL,s__RealNumber) & s__instance(V__MEAS,s__UnitOfMeasure) & s__subclass(V__OBJ,s__PureSubstance) & s__instance(V__OBJ,s__Object) & s__instance(V__OBJ,s__SetOrClass) & s__instance(V__BOILVAL,s__RealNumber)) => ((s__instance(V__EVAP,s__Evaporating) & s__boilingPoint(V__OBJ,s__MeasureFn(V__BOILVAL,V__MEAS)) & s__measure(V__OBJ,s__MeasureFn(V__VAL,V__MEAS)) & s__instance(V__MEAS,s__UnitOfTemperature) & s__patient(V__EVAP,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & greater(V__BOILVAL,V__VAL) & s__holdsDuring(s__BeginFn(s__WhenFn(V__EVAP)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__EVAP)),'s__attribute(V__PART,s__Gas)')))))) ))).

fof(kb_SUMO_5809,axiom,
    s__subclass(s__Condensing,s__StateChange) ).

fof(kb_SUMO_5810,axiom,
    s__instance(s__Condensing__t,s__SetOrClass) ).

fof(kb_SUMO_5811,axiom,
    s__instance(s__StateChange__t,s__SetOrClass) ).

fof(kb_SUMO_5812,axiom,
    s__documentation(s__Condensing,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is cooled and converted from a &%Gas to a &%Liquid.') ).

fof(kb_SUMO_5813,axiom,
    ! [V__COND] :
      ( s__instance(V__COND,s__Process)
     => ( s__instance(V__COND,s__Condensing)
       => ? [V__COOL] :
            ( s__instance(V__COOL,s__Process)
            & s__instance(V__COOL,s__Cooling)
            & s__subProcess(V__COOL,V__COND) ) ) ) ).

%FOL fof(kb_SUMO_5814,axiom,(( (! [V__OBJ,V__COND] : ((s__instance(V__COND,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__COND,s__Condensing) & s__patient(V__COND,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__COND)),'s__attribute(V__PART,s__Gas)') & s__holdsDuring(s__EndFn(s__WhenFn(V__COND)),'s__attribute(V__PART,s__Liquid)')))))) ))).

fof(kb_SUMO_5815,axiom,
    s__subclass(s__Freezing,s__StateChange) ).

fof(kb_SUMO_5816,axiom,
    s__instance(s__Freezing__t,s__SetOrClass) ).

fof(kb_SUMO_5817,axiom,
    s__documentation(s__Freezing,s__EnglishLanguage,'The &%Class of &%Processes where an &%Object is cooled and converted from a &%Liquid to a &%Solid.') ).

fof(kb_SUMO_5818,axiom,
    ! [V__FREEZE] :
      ( s__instance(V__FREEZE,s__Process)
     => ( s__instance(V__FREEZE,s__Freezing)
       => ? [V__COOL] :
            ( s__instance(V__COOL,s__Process)
            & s__instance(V__COOL,s__Cooling)
            & s__subProcess(V__COOL,V__FREEZE) ) ) ) ).

%FOL fof(kb_SUMO_5819,axiom,(( (! [V__OBJ,V__FREEZE] : ((s__instance(V__FREEZE,s__Process) & s__instance(V__OBJ,s__Object)) => ((s__instance(V__FREEZE,s__Freezing) & s__patient(V__FREEZE,V__OBJ)) => (? [V__PART] : (s__instance(V__PART,s__Object) & s__part(V__PART,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__FREEZE)),'s__attribute(V__PART,s__Liquid)') & s__holdsDuring(s__EndFn(s__WhenFn(V__FREEZE)),'s__attribute(V__PART,s__Solid)')))))) ))).

fof(kb_SUMO_5820,axiom,
    s__subclass(s__AstronomicalBody,s__Object) ).

fof(kb_SUMO_5821,axiom,
    s__instance(s__AstronomicalBody__t,s__SetOrClass) ).

fof(kb_SUMO_5822,axiom,
    s__disjoint(s__AstronomicalBody,s__GeographicArea) ).

fof(kb_SUMO_5823,axiom,
    s__documentation(s__AstronomicalBody,s__EnglishLanguage,'The &%Class of all astronomical objects of significant size. It includes &%SelfConnectedObjects like planets, stars, and asteroids, as well as &%Collections like nebulae, galaxies, and constellations. Note that the planet Earth is an &%AstronomicalBody, but every &%Region of Earth is a &%GeographicArea.') ).

fof(kb_SUMO_5824,axiom,
    s__subclass(s__GeographicArea,s__Region) ).

fof(kb_SUMO_5825,axiom,
    s__instance(s__GeographicArea__t,s__SetOrClass) ).

fof(kb_SUMO_5826,axiom,
    s__instance(s__Region__t,s__SetOrClass) ).

fof(kb_SUMO_5827,axiom,
    s__partition_3(s__GeographicArea,s__WaterArea,s__LandArea) ).

fof(kb_SUMO_5828,axiom,
    s__documentation(s__GeographicArea,s__EnglishLanguage,'A geographic location, generally having definite boundaries. Note that this differs from its immediate superclass &%Region in that a &%GeographicArea is a three-dimensional &%Region of the earth. Accordingly, all astronomical objects other than earth and all one-dimensional and two-dimensional &%Regions are not classed under &%GeographicArea.') ).

fof(kb_SUMO_5829,axiom,
    s__subclass(s__LocalizablePlace,s__GeographicArea) ).

fof(kb_SUMO_5830,axiom,
    s__instance(s__LocalizablePlace__t,s__SetOrClass) ).

fof(kb_SUMO_5831,axiom,
    s__instance(s__geographicSubregion__m,s__BinaryPredicate) ).

fof(kb_SUMO_5832,axiom,
    s__instance(s__geographicSubregion__m,s__TransitiveRelation) ).

fof(kb_SUMO_5833,axiom,
    s__instance(s__geographicSubregion__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5834,axiom,
    s__subrelation(s__geographicSubregion__m,s__properPart__m) ).

fof(kb_SUMO_5835,axiom,
    s__subrelation(s__geographicSubregion__m,s__located__m) ).

fof(kb_SUMO_5836,axiom,
    s__domain(s__geographicSubregion__m,"1",s__GeographicArea) ).

fof(kb_SUMO_5837,axiom,
    s__domain(s__geographicSubregion__m,"2",s__GeographicArea) ).

fof(kb_SUMO_5838,axiom,
    s__documentation(s__geographicSubregion__m,s__EnglishLanguage,'(&%geographicSubregion ?PART ?WHOLE) means that the &%GeographicArea ?PART is part of the &%GeographicArea ?WHOLE.') ).

fof(kb_SUMO_5839,axiom,
    s__subclass(s__GeopoliticalArea,s__GeographicArea) ).

fof(kb_SUMO_5840,axiom,
    s__subclass(s__GeopoliticalArea,s__Agent) ).

fof(kb_SUMO_5841,axiom,
    s__documentation(s__GeopoliticalArea,s__EnglishLanguage,'Any &%GeographicArea which is associated with some sort of political structure. This class includes &%Lands, &%Cities, districts of cities, counties, etc. Note that the identity of a &%GeopoliticalArea may remain constant after a change in borders.') ).

fof(kb_SUMO_5842,axiom,
    ! [V__PERSON,V__AREA] :
      ( s__instance(V__PERSON,s__Human)
     => ( ( s__instance(V__AREA,s__GeopoliticalArea)
          & s__leader(s__GovernmentFn(V__AREA),V__PERSON) )
       => s__leader(V__AREA,V__PERSON) ) ) ).

fof(kb_SUMO_5843,axiom,
    ! [V__PERSON,V__AREA] :
      ( s__instance(V__PERSON,s__Human)
     => ( ( s__instance(V__AREA,s__GeopoliticalArea)
          & s__leader(V__AREA,V__PERSON) )
       => s__leader(s__GovernmentFn(V__AREA),V__PERSON) ) ) ).

fof(kb_SUMO_5844,axiom,
    ! [V__EVENT,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Election)
          & s__agent(V__EVENT,V__AGENT)
          & s__instance(V__AGENT,s__GeopoliticalArea) )
       => s__instance(V__EVENT,s__PoliticalProcess) ) ) ).

fof(kb_SUMO_5845,axiom,
    ! [V__EVENT,V__AGENT,V__AREA] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__EVENT,s__Process) )
     => ( ( s__instance(V__EVENT,s__Election)
          & s__agent(V__EVENT,V__AGENT)
          & s__instance(V__AREA,s__GeopoliticalArea)
          & s__instance(V__AGENT,s__GovernmentFn(V__AREA)) )
       => s__instance(V__EVENT,s__PoliticalProcess) ) ) ).

fof(kb_SUMO_5846,axiom,
    s__instance(s__geopoliticalSubdivision__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5847,axiom,
    s__instance(s__geopoliticalSubdivision__m,s__TransitiveRelation) ).

fof(kb_SUMO_5848,axiom,
    s__subrelation(s__geopoliticalSubdivision__m,s__geographicSubregion__m) ).

fof(kb_SUMO_5849,axiom,
    s__domain(s__geopoliticalSubdivision__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_5850,axiom,
    s__domain(s__geopoliticalSubdivision__m,"2",s__GeopoliticalArea) ).

fof(kb_SUMO_5851,axiom,
    s__documentation(s__geopoliticalSubdivision__m,s__EnglishLanguage,'(&%geopoliticalSubdivision ?AREA1 ?AREA2) means that ?AREA1 is any geopolitical part of ?AREA2, that is, ?AREA1 is an integral &%geographicSubregion of ?AREA2 (not a &%DependencyOrSpecialSovereigntyArea), having its own associated &%GovernmentOrganization which is subordinated to or constrained by the government of ?AREA2. Cf. &%dependentGeopoliticalArea.') ).

fof(kb_SUMO_5852,axiom,
    s__subclass(s__WaterArea,s__GeographicArea) ).

fof(kb_SUMO_5853,axiom,
    s__documentation(s__WaterArea,s__EnglishLanguage,'A body which is made up predominantly of water, e.g. rivers, lakes, oceans, etc.') ).

fof(kb_SUMO_5854,axiom,
    ! [V__AREA] :
      ( s__instance(V__AREA,s__WaterArea)
     => ? [V__BED,V__HOLE,V__WATER] :
          ( s__instance(V__WATER,s__Object)
          & s__instance(V__HOLE,s__Hole)
          & s__instance(V__BED,s__Object)
          & s__HoleHostFn(V__HOLE) = V__BED
          & s__instance(V__WATER,s__Water)
          & s__properlyFills(V__WATER,V__HOLE)
          & s__MereologicalSumFn(V__BED,V__WATER) = V__AREA ) ) ).

fof(kb_SUMO_5855,axiom,
    s__subclass(s__SaltWaterArea,s__WaterArea) ).

fof(kb_SUMO_5856,axiom,
    s__instance(s__SaltWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_5857,axiom,
    s__instance(s__WaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_5858,axiom,
    s__disjoint(s__SaltWaterArea,s__FreshWaterArea) ).

fof(kb_SUMO_5859,axiom,
    s__documentation(s__SaltWaterArea,s__EnglishLanguage,'A &%WaterArea whose &%Water is saline, e.g. oceans and seas.') ).

fof(kb_SUMO_5860,axiom,
    s__subclass(s__FreshWaterArea,s__WaterArea) ).

fof(kb_SUMO_5861,axiom,
    s__instance(s__FreshWaterArea__t,s__SetOrClass) ).

fof(kb_SUMO_5862,axiom,
    s__documentation(s__FreshWaterArea,s__EnglishLanguage,'A &%WaterArea whose &%Water is not saline, e.g. most rivers and lakes.') ).

fof(kb_SUMO_5863,axiom,
    s__subclass(s__LandArea,s__GeographicArea) ).

fof(kb_SUMO_5864,axiom,
    s__documentation(s__LandArea,s__EnglishLanguage,'An area which is predominantly solid ground, e.g. a &%Nation, a mountain, a desert, etc. Note that a &%LandArea may contain some relatively small &%WaterAreas. For example, Australia is a &%LandArea even though it contains various rivers and lakes.') ).

fof(kb_SUMO_5865,axiom,
    ! [V__LAND1] :
      ( s__instance(V__LAND1,s__Object)
     => ( s__instance(V__LAND1,s__LandArea)
       => ? [V__LAND2] :
            ( s__instance(V__LAND2,s__Object)
            & s__part(V__LAND1,V__LAND2)
            & ( s__instance(V__LAND2,s__Continent)
              | s__instance(V__LAND2,s__Island) ) ) ) ) ).

fof(kb_SUMO_5866,axiom,
    s__subclass(s__ShoreArea,s__LandArea) ).

fof(kb_SUMO_5867,axiom,
    s__instance(s__ShoreArea__t,s__SetOrClass) ).

fof(kb_SUMO_5868,axiom,
    s__documentation(s__ShoreArea,s__EnglishLanguage,'A &%ShoreArea is a &%LandArea approximately 1-3 km wide bordering a body of water, such as an ocean, bay, river, or lake. A &%ShoreArea may comprise a variety of &%LandForms, such as dunes, sloughs, and marshes.') ).

fof(kb_SUMO_5869,axiom,
    ! [V__BANK] :
      ( s__instance(V__BANK,s__Object)
     => ( s__instance(V__BANK,s__ShoreArea)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__meetsSpatially(V__BANK,V__WATER) ) ) ) ).

fof(kb_SUMO_5870,axiom,
    s__subclass(s__Continent,s__LandArea) ).

fof(kb_SUMO_5871,axiom,
    s__instance(s__Continent__t,s__SetOrClass) ).

fof(kb_SUMO_5872,axiom,
    s__CardinalityFn(s__Continent) = "7" ).

fof(kb_SUMO_5873,axiom,
    s__documentation(s__Continent,s__EnglishLanguage,'As defined in the CIA World Fact Book, &%Continent covers seven land masses: &%Africa, &%NorthAmerica, &%SouthAmerica, &%Antarctica, &%Europe, &%Asia, and &%Oceania. Note that &%Australia, counted as a continent in some other systems, is included in &%Oceania in the Fact Book. As a consequence, there is no &%Nation which is also a &%Continent.') ).

fof(kb_SUMO_5874,axiom,
    s__subclass(s__Island,s__LandArea) ).

fof(kb_SUMO_5875,axiom,
    s__instance(s__Island__t,s__SetOrClass) ).

fof(kb_SUMO_5876,axiom,
    s__documentation(s__Island,s__EnglishLanguage,'A &%LandArea that is completely surrounded by a &%WaterArea.') ).

fof(kb_SUMO_5877,axiom,
    ! [V__ISLAND] :
      ( s__instance(V__ISLAND,s__Object)
     => ( s__instance(V__ISLAND,s__Island)
       => ~ ? [V__AREA,V__PART1,V__PART2] :
              ( s__instance(V__PART2,s__Object)
              & s__instance(V__PART1,s__Object)
              & s__instance(V__AREA,s__Object)
              & s__instance(V__AREA,s__LandArea)
              & s__part(V__PART1,V__ISLAND)
              & s__part(V__PART2,V__AREA)
              & ~ s__part(V__ISLAND,V__AREA)
              & ~ s__part(V__AREA,V__ISLAND)
              & s__meetsSpatially(V__PART1,V__PART2) ) ) ) ).

fof(kb_SUMO_5878,axiom,
    ! [V__AREA,V__ISLE] :
      ( ( s__instance(V__ISLE,s__Object)
        & s__instance(V__AREA,s__Object) )
     => ( ( s__instance(V__ISLE,s__Island)
          & s__instance(V__AREA,s__GeographicArea)
          & s__meetsSpatially(V__ISLE,V__AREA) )
       => ~ s__instance(V__AREA,s__LandArea) ) ) ).

fof(kb_SUMO_5879,axiom,
    ! [V__ISLE] :
      ( s__instance(V__ISLE,s__Object)
     => ( s__instance(V__ISLE,s__Island)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__WaterArea)
            & s__meetsSpatially(V__ISLE,V__WATER) ) ) ) ).

fof(kb_SUMO_5880,axiom,
    s__subclass(s__Nation,s__GeopoliticalArea) ).

fof(kb_SUMO_5881,axiom,
    s__instance(s__Nation__t,s__SetOrClass) ).

fof(kb_SUMO_5882,axiom,
    s__subclass(s__Nation,s__LandArea) ).

fof(kb_SUMO_5883,axiom,
    s__documentation(s__Nation,s__EnglishLanguage,'The broadest &%GeopoliticalArea, i.e. &%Nations are &%GeopoliticalAreas that are not part of any other overarching and comprehensive governance structure (excepting commonwealths and other sorts of loose international organizations).') ).

fof(kb_SUMO_5884,axiom,
    s__subclass(s__StateOrProvince,s__GeopoliticalArea) ).

fof(kb_SUMO_5885,axiom,
    s__instance(s__StateOrProvince__t,s__SetOrClass) ).

fof(kb_SUMO_5886,axiom,
    s__subclass(s__StateOrProvince,s__LandArea) ).

fof(kb_SUMO_5887,axiom,
    s__documentation(s__StateOrProvince,s__EnglishLanguage,'Administrative subdivisions of a &%Nation that are broader than any other political subdivisions that may exist. This &%Class includes the states of the United States, as well as the provinces of Canada and European countries.') ).

fof(kb_SUMO_5888,axiom,
    ! [V__STATE] :
      ( s__instance(V__STATE,s__Object)
     => ( s__instance(V__STATE,s__StateOrProvince)
       => ? [V__LAND] :
            ( s__instance(V__LAND,s__Object)
            & s__instance(V__LAND,s__Nation)
            & s__properPart(V__STATE,V__LAND) ) ) ) ).

fof(kb_SUMO_5889,axiom,
    s__subclass(s__City,s__GeopoliticalArea) ).

fof(kb_SUMO_5890,axiom,
    s__subclass(s__City,s__LandArea) ).

fof(kb_SUMO_5891,axiom,
    s__instance(s__City__t,s__SetOrClass) ).

fof(kb_SUMO_5892,axiom,
    s__documentation(s__City,s__EnglishLanguage,'A &%LandArea of relatively small size, inhabited by a community of people, and having some sort of political structure. Note that this class includes both large cities and small settlements like towns, villages, hamlets, etc.') ).

fof(kb_SUMO_5893,axiom,
    s__subclass(s__County,s__GeopoliticalArea) ).

fof(kb_SUMO_5894,axiom,
    s__instance(s__County__t,s__SetOrClass) ).

fof(kb_SUMO_5895,axiom,
    s__instance(s__GeopoliticalArea__t,s__SetOrClass) ).

fof(kb_SUMO_5896,axiom,
    s__subclass(s__County,s__LandArea) ).

fof(kb_SUMO_5897,axiom,
    s__instance(s__LandArea__t,s__SetOrClass) ).

fof(kb_SUMO_5898,axiom,
    s__documentation(s__County,s__EnglishLanguage,'A &%GeopoliticalArea that is larger than a city, usually encompassing several cities, and smaller than a &%StateOrProvince. Aside from City, this is the smallest geopolitical subdivision, and it is known by various names in various counties, e.g. parrish, commune, etc.') ).

fof(kb_SUMO_5899,axiom,
    ! [V__STATE] :
      ( s__instance(V__STATE,s__Object)
     => ( s__instance(V__STATE,s__County)
       => ? [V__LAND] :
            ( s__instance(V__LAND,s__Object)
            & s__instance(V__LAND,s__StateOrProvince)
            & s__properPart(V__STATE,V__LAND) ) ) ) ).

fof(kb_SUMO_5900,axiom,
    s__subclass(s__Transitway,s__Region) ).

fof(kb_SUMO_5901,axiom,
    s__subclass(s__Transitway,s__SelfConnectedObject) ).

fof(kb_SUMO_5902,axiom,
    s__documentation(s__Transitway,s__EnglishLanguage,'&%Transitway is the broadest class of regions which may be passed through as a &%path in instances of &%Translocation. &%Transitway includes land, air, and sea regions, and it includes both natural and artificial transitways.') ).

fof(kb_SUMO_5903,axiom,
    s__subclass(s__LandTransitway,s__Transitway) ).

fof(kb_SUMO_5904,axiom,
    s__instance(s__LandTransitway__t,s__SetOrClass) ).

fof(kb_SUMO_5905,axiom,
    s__instance(s__Transitway__t,s__SetOrClass) ).

fof(kb_SUMO_5906,axiom,
    s__subclass(s__LandTransitway,s__LandArea) ).

fof(kb_SUMO_5907,axiom,
    s__documentation(s__LandTransitway,s__EnglishLanguage,'&%LandTransitway is the subclass of &%Transitway that represents areas intended for motion over the ground.') ).

fof(kb_SUMO_5908,axiom,
    ! [V__WAY] :
      ( s__instance(V__WAY,s__Object)
     => ( s__instance(V__WAY,s__Transitway)
       => s__hasPurpose(V__WAY,'(? [V__TRANSPORT] : (s__instance(V__TRANSPORT,s__Motion) & s__instance(V__TRANSPORT,s__Transportation) & s__path(V__TRANSPORT,V__WAY)))') ) ) ).

fof(kb_SUMO_5909,axiom,
    s__subclass(s__Roadway,s__LandTransitway) ).

fof(kb_SUMO_5910,axiom,
    s__instance(s__Roadway__t,s__SetOrClass) ).

fof(kb_SUMO_5911,axiom,
    s__documentation(s__Roadway,s__EnglishLanguage,'&%Roadway is the subclass of &%LandTransitways that are areas intended for surface travel by self-powered, wheeled vehicles, excluding those that travel on tracks. &%Roadways have been at least minimally improved to enable the passage of vehicles. &%Roadways include dirt and gravelled roads, paved streets, and expressways.') ).

fof(kb_SUMO_5912,axiom,
    s__subclass(s__Water,s__CompoundSubstance) ).

fof(kb_SUMO_5913,axiom,
    s__instance(s__Water__t,s__SetOrClass) ).

fof(kb_SUMO_5914,axiom,
    s__documentation(s__Water,s__EnglishLanguage,'The &%Class of samples of the compound H20. Note that this &%Class covers both pure and impure &%Water.') ).

fof(kb_SUMO_5915,axiom,
    s__subclass(s__Mineral,s__Substance) ).

fof(kb_SUMO_5916,axiom,
    s__instance(s__Mineral__t,s__SetOrClass) ).

fof(kb_SUMO_5917,axiom,
    s__instance(s__Substance__t,s__SetOrClass) ).

fof(kb_SUMO_5918,axiom,
    s__documentation(s__Mineral,s__EnglishLanguage,'Any of various naturally occurring homogeneous substances (such as stone, coal, salt, sulfur, sand, petroleum), or synthetic substances having the chemical composition and crystalline form and properties of a naturally occurring mineral.') ).

fof(kb_SUMO_5919,axiom,
    s__instance(s__developmentalForm__m,s__BinaryPredicate) ).

fof(kb_SUMO_5920,axiom,
    s__instance(s__developmentalForm__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5921,axiom,
    s__instance(s__developmentalForm__m,s__TransitiveRelation) ).

fof(kb_SUMO_5922,axiom,
    s__subrelation(s__developmentalForm__m,s__attribute__m) ).

fof(kb_SUMO_5923,axiom,
    s__domain(s__developmentalForm__m,"1",s__OrganicObject) ).

fof(kb_SUMO_5924,axiom,
    s__domain(s__developmentalForm__m,"2",s__DevelopmentalAttribute) ).

fof(kb_SUMO_5925,axiom,
    s__documentation(s__developmentalForm__m,s__EnglishLanguage,'(&%developmentalForm ?OBJECT ?FORM) means that ?FORM describes a stage in the individual maturation of ?OBJECT. For example, tadpole and caterpillar are &%developmentalForms of frogs and butterflies, respectively.') ).

%FOL fof(kb_SUMO_5926,axiom,(( (! [V__OBJ,V__ATTR2,V__ATTR1,V__TIME1] : ((s__instance(V__TIME1,s__TimeInterval) & s__instance(V__ATTR1,s__DevelopmentalAttribute) & s__instance(V__ATTR2,s__DevelopmentalAttribute) & s__instance(V__OBJ,s__OrganicObject)) => ((s__holdsDuring(V__TIME1,'s__developmentalForm(V__OBJ,V__ATTR1)') & s__successorAttributeClosure(V__ATTR2,V__ATTR1)) => (? [V__TIME2] : (s__instance(V__TIME2,s__TimeInterval) & s__earlier(V__TIME2,V__TIME1) & s__holdsDuring(V__TIME2,'s__developmentalForm(V__OBJ,V__ATTR2)')))))) ))).

fof(kb_SUMO_5927,axiom,
    s__subclass(s__OrganicObject,s__CorpuscularObject) ).

fof(kb_SUMO_5928,axiom,
    s__instance(s__OrganicObject__t,s__SetOrClass) ).

fof(kb_SUMO_5929,axiom,
    s__instance(s__CorpuscularObject__t,s__SetOrClass) ).

fof(kb_SUMO_5930,axiom,
    s__subclass(s__OrganicObject,s__OrganicThing) ).

fof(kb_SUMO_5931,axiom,
    s__instance(s__OrganicThing__t,s__SetOrClass) ).

fof(kb_SUMO_5932,axiom,
    s__partition_3(s__OrganicObject,s__Organism,s__AnatomicalStructure) ).

fof(kb_SUMO_5933,axiom,
    s__documentation(s__OrganicObject,s__EnglishLanguage,'This class encompasses &%Organisms, &%CorpuscularObjects that are parts of &%Organisms, i.e. &%BodyParts, and &%CorpuscularObjects that are nonintentionally produced by &%Organisms, e.g. &%ReproductiveBodies.') ).

fof(kb_SUMO_5934,axiom,
    s__subclass(s__Organism,s__OrganicObject) ).

fof(kb_SUMO_5935,axiom,
    s__subclass(s__Organism,s__Agent) ).

fof(kb_SUMO_5936,axiom,
    s__disjoint(s__Organism,s__Artifact) ).

fof(kb_SUMO_5937,axiom,
    s__partition_4(s__Organism,s__Animal,s__Plant,s__Microorganism) ).

fof(kb_SUMO_5938,axiom,
    s__documentation(s__Organism,s__EnglishLanguage,'Generally, a living individual, including all &%Plants and &%Animals.') ).

fof(kb_SUMO_5939,axiom,
    ! [V__ORGANISM] :
      ( s__instance(V__ORGANISM,s__Agent)
     => ( s__instance(V__ORGANISM,s__Organism)
       => ? [V__BIRTH] :
            ( s__instance(V__BIRTH,s__Process)
            & s__instance(V__BIRTH,s__Birth)
            & s__experiencer(V__BIRTH,V__ORGANISM) ) ) ) ).

fof(kb_SUMO_5940,axiom,
    s__instance(s__inhabits__m,s__BinaryPredicate) ).

fof(kb_SUMO_5941,axiom,
    s__instance(s__inhabits__m,s__AsymmetricRelation) ).

fof(kb_SUMO_5942,axiom,
    s__domain(s__inhabits__m,"1",s__Organism) ).

fof(kb_SUMO_5943,axiom,
    s__domain(s__inhabits__m,"2",s__Object) ).

fof(kb_SUMO_5944,axiom,
    s__documentation(s__inhabits__m,s__EnglishLanguage,'A very basic notion of living within something else. (&%inhabits ?ORGANISM ?OBJECT) means that ?OBJECT is the residence (either permanent or temporary), nest, etc. of ?ORGANISM.') ).

%FOL fof(kb_SUMO_5945,axiom,(( (! [V__OBJ,V__T1,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Organism) & s__instance(V__T1,s__TimePosition) & s__instance(V__OBJ,s__Object)) => (s__holdsDuring(V__T1,'s__inhabits(V__ORGANISM,V__OBJ)') => (? [V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__TIME,s__TimeInterval) & s__temporalPart(V__TIME,V__T1) & s__holdsDuring(V__TIME,'s__located(V__ORGANISM,V__OBJ)')))))) ))).

fof(kb_SUMO_5946,axiom,
    s__subrelation(s__home__m,s__inhabits__m) ).

fof(kb_SUMO_5947,axiom,
    s__domain(s__home__m,"1",s__Human) ).

fof(kb_SUMO_5948,axiom,
    s__domain(s__home__m,"2",s__PermanentResidence) ).

fof(kb_SUMO_5949,axiom,
    s__documentation(s__home__m,s__EnglishLanguage,'The relation between a &%Human and a &%PermanentResidence of the &%Human.') ).

fof(kb_SUMO_5950,axiom,
    s__subrelation(s__stays__m,s__inhabits__m) ).

fof(kb_SUMO_5951,axiom,
    s__disjointRelation(s__stays__m,s__home__m) ).

fof(kb_SUMO_5952,axiom,
    s__domain(s__stays__m,"1",s__Human) ).

fof(kb_SUMO_5953,axiom,
    s__domain(s__stays__m,"2",s__TemporaryResidence) ).

fof(kb_SUMO_5954,axiom,
    s__documentation(s__stays__m,s__EnglishLanguage,'The relation between a &%Human and a &%TemporaryResidence of the &%Human.') ).

fof(kb_SUMO_5955,axiom,
    s__subclass(s__Plant,s__Organism) ).

fof(kb_SUMO_5956,axiom,
    s__documentation(s__Plant,s__EnglishLanguage,'An &%Organism having cellulose cell walls, growing by synthesis of &%Substances, generally distinguished by the presence of chlorophyll, and lacking the power of locomotion.') ).

fof(kb_SUMO_5957,axiom,
    s__subclass(s__FloweringPlant,s__Plant) ).

fof(kb_SUMO_5958,axiom,
    s__instance(s__FloweringPlant__t,s__SetOrClass) ).

fof(kb_SUMO_5959,axiom,
    s__documentation(s__FloweringPlant,s__EnglishLanguage,'A &%Plant that produces seeds and flowers. This class includes trees, shrubs, herbs, and flowers.') ).

fof(kb_SUMO_5960,axiom,
    s__subclass(s__NonFloweringPlant,s__Plant) ).

fof(kb_SUMO_5961,axiom,
    s__instance(s__NonFloweringPlant__t,s__SetOrClass) ).

fof(kb_SUMO_5962,axiom,
    s__instance(s__Plant__t,s__SetOrClass) ).

fof(kb_SUMO_5963,axiom,
    s__disjoint(s__NonFloweringPlant,s__FloweringPlant) ).

fof(kb_SUMO_5964,axiom,
    s__disjointDecomposition_4(s__NonFloweringPlant,s__Alga,s__Fern,s__Moss) ).

fof(kb_SUMO_5965,axiom,
    s__documentation(s__NonFloweringPlant,s__EnglishLanguage,'A &%Plant that reproduces with spores and does not produce flowers.') ).

fof(kb_SUMO_5966,axiom,
    s__subclass(s__Alga,s__NonFloweringPlant) ).

fof(kb_SUMO_5967,axiom,
    s__instance(s__Alga__t,s__SetOrClass) ).

fof(kb_SUMO_5968,axiom,
    s__documentation(s__Alga,s__EnglishLanguage,'A chiefly aquatic plant that contains chlorophyll, but does not form embryos during development and lacks vascular tissue.') ).

fof(kb_SUMO_5969,axiom,
    ! [V__ALGA] :
      ( s__instance(V__ALGA,s__Organism)
     => ( s__instance(V__ALGA,s__Alga)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__inhabits(V__ALGA,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_5970,axiom,
    s__subclass(s__Fungus,s__Organism) ).

fof(kb_SUMO_5971,axiom,
    s__instance(s__Fungus__t,s__SetOrClass) ).

fof(kb_SUMO_5972,axiom,
    s__documentation(s__Fungus,s__EnglishLanguage,'A eukaryotic &%Organism characterized by the absence of chlorophyll and the presence of rigid cell walls. Included here are both slime molds and true fungi such as yeasts, molds, mildews, and mushrooms.') ).

fof(kb_SUMO_5973,axiom,
    ! [V__OBJ,V__FUNGUS] :
      ( ( s__instance(V__FUNGUS,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__FUNGUS,s__Fungus)
          & s__inhabits(V__FUNGUS,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_5974,axiom,
    s__subclass(s__Moss,s__NonFloweringPlant) ).

fof(kb_SUMO_5975,axiom,
    s__instance(s__Moss__t,s__SetOrClass) ).

fof(kb_SUMO_5976,axiom,
    s__documentation(s__Moss,s__EnglishLanguage,'A &%NonFloweringPlant without true roots and little if any vascular tissue.') ).

fof(kb_SUMO_5977,axiom,
    s__subclass(s__Fern,s__NonFloweringPlant) ).

fof(kb_SUMO_5978,axiom,
    s__instance(s__Fern__t,s__SetOrClass) ).

fof(kb_SUMO_5979,axiom,
    s__documentation(s__Fern,s__EnglishLanguage,'A &%NonFloweringPlant that contains vascular tissue. This class includes true ferns, as well as horsetails, club mosses, and whisk ferns.') ).

fof(kb_SUMO_5980,axiom,
    s__subclass(s__Animal,s__Organism) ).

fof(kb_SUMO_5981,axiom,
    s__partition_3(s__Animal,s__Vertebrate,s__Invertebrate) ).

fof(kb_SUMO_5982,axiom,
    s__documentation(s__Animal,s__EnglishLanguage,'An &%Organism with eukaryotic &%Cells, and lacking stiff cell walls, plastids, and photosynthetic pigments.') ).

fof(kb_SUMO_5983,axiom,
    s__subclass(s__Microorganism,s__Organism) ).

fof(kb_SUMO_5984,axiom,
    s__instance(s__Microorganism__t,s__SetOrClass) ).

fof(kb_SUMO_5985,axiom,
    s__instance(s__Organism__t,s__SetOrClass) ).

fof(kb_SUMO_5986,axiom,
    s__documentation(s__Microorganism,s__EnglishLanguage,'An &%Organism that can be seen only with the aid of a microscope.') ).

fof(kb_SUMO_5987,axiom,
    s__subclass(s__Bacterium,s__Microorganism) ).

fof(kb_SUMO_5988,axiom,
    s__instance(s__Bacterium__t,s__SetOrClass) ).

fof(kb_SUMO_5989,axiom,
    s__documentation(s__Bacterium,s__EnglishLanguage,'A small, typically one-celled, prokaryotic &%Microorganism.') ).

fof(kb_SUMO_5990,axiom,
    ! [V__BACTERIUM] :
      ( s__instance(V__BACTERIUM,s__Bacterium)
     => ? [V__CELL1] :
          ( s__instance(V__CELL1,s__CorpuscularObject)
          & s__component(V__CELL1,V__BACTERIUM)
          & s__instance(V__CELL1,s__Cell)
          & ! [V__CELL2] :
              ( ( s__instance(V__CELL2,s__CorpuscularObject)
                & s__instance(V__BACTERIUM,s__CorpuscularObject) )
             => ( ( s__component(V__CELL2,V__BACTERIUM)
                  & s__instance(V__CELL2,s__Cell) )
               => V__CELL1 = V__CELL2 ) ) ) ) ).

fof(kb_SUMO_5991,axiom,
    ! [V__OBJ,V__BACTERIUM] :
      ( ( s__instance(V__BACTERIUM,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__BACTERIUM,s__Bacterium)
          & s__inhabits(V__BACTERIUM,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_5992,axiom,
    s__subclass(s__Virus,s__Microorganism) ).

fof(kb_SUMO_5993,axiom,
    s__instance(s__Virus__t,s__SetOrClass) ).

fof(kb_SUMO_5994,axiom,
    s__documentation(s__Virus,s__EnglishLanguage,'An &%Organism consisting of a core of a single nucleic acid enclosed in a protective coat of protein. A virus may replicate only inside a host living cell. A virus exhibits some but not all of the usual characteristics of living things.') ).

fof(kb_SUMO_5995,axiom,
    ! [V__OBJ,V__VIRUS] :
      ( ( s__instance(V__VIRUS,s__Organism)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__VIRUS,s__Virus)
          & s__inhabits(V__VIRUS,V__OBJ) )
       => s__instance(V__OBJ,s__Organism) ) ) ).

fof(kb_SUMO_5996,axiom,
    ! [V__VIRUS,V__PROC] :
      ( ( s__instance(V__PROC,s__Process)
        & s__instance(V__VIRUS,s__Agent) )
     => ( ( s__instance(V__VIRUS,s__Virus)
          & s__instance(V__PROC,s__Replication)
          & s__agent(V__PROC,V__VIRUS) )
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__located(V__PROC,V__CELL)
            & s__instance(V__CELL,s__Cell) ) ) ) ).

fof(kb_SUMO_5997,axiom,
    s__subclass(s__Vertebrate,s__Animal) ).

fof(kb_SUMO_5998,axiom,
    s__documentation(s__Vertebrate,s__EnglishLanguage,'An &%Animal which has a spinal column.') ).

fof(kb_SUMO_5999,axiom,
    s__subclass(s__Invertebrate,s__Animal) ).

fof(kb_SUMO_6000,axiom,
    s__instance(s__Invertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_6001,axiom,
    s__instance(s__Animal__t,s__SetOrClass) ).

fof(kb_SUMO_6002,axiom,
    s__disjointDecomposition_4(s__Invertebrate,s__Worm,s__Mollusk,s__Arthropod) ).

fof(kb_SUMO_6003,axiom,
    s__documentation(s__Invertebrate,s__EnglishLanguage,'An &%Animal which has no spinal column.') ).

fof(kb_SUMO_6004,axiom,
    s__subclass(s__Worm,s__Invertebrate) ).

fof(kb_SUMO_6005,axiom,
    s__instance(s__Worm__t,s__SetOrClass) ).

fof(kb_SUMO_6006,axiom,
    s__documentation(s__Worm,s__EnglishLanguage,'Long, narrow, soft-bodied &%Invertebrates.') ).

fof(kb_SUMO_6007,axiom,
    s__subclass(s__Mollusk,s__Invertebrate) ).

fof(kb_SUMO_6008,axiom,
    s__instance(s__Mollusk__t,s__SetOrClass) ).

fof(kb_SUMO_6009,axiom,
    s__documentation(s__Mollusk,s__EnglishLanguage,'Soft-bodied &%Invertebrate that is usually contained in a shell. Includes oysters, clams, mussels, snails, slugs, octopi, and squid.') ).

fof(kb_SUMO_6010,axiom,
    s__subclass(s__Arthropod,s__Invertebrate) ).

fof(kb_SUMO_6011,axiom,
    s__disjointDecomposition_5(s__Arthropod,s__Arachnid,s__Myriapod,s__Insect,s__Crustacean) ).

fof(kb_SUMO_6012,axiom,
    s__documentation(s__Arthropod,s__EnglishLanguage,'A &%Class of &%Invertebrate that includes &%Arachnids and &%Insects.') ).

fof(kb_SUMO_6013,axiom,
    s__subclass(s__Arachnid,s__Arthropod) ).

fof(kb_SUMO_6014,axiom,
    s__instance(s__Arachnid__t,s__SetOrClass) ).

fof(kb_SUMO_6015,axiom,
    s__instance(s__Arthropod__t,s__SetOrClass) ).

fof(kb_SUMO_6016,axiom,
    s__documentation(s__Arachnid,s__EnglishLanguage,'A &%Class of &%Arthropods that includes ticks and spiders.') ).

fof(kb_SUMO_6017,axiom,
    s__subclass(s__Myriapod,s__Arthropod) ).

fof(kb_SUMO_6018,axiom,
    s__instance(s__Myriapod__t,s__SetOrClass) ).

fof(kb_SUMO_6019,axiom,
    s__documentation(s__Myriapod,s__EnglishLanguage,'A &%Class of &%Arthropods that includes centipedes and millipedes.') ).

fof(kb_SUMO_6020,axiom,
    s__subclass(s__Insect,s__Arthropod) ).

fof(kb_SUMO_6021,axiom,
    s__instance(s__Insect__t,s__SetOrClass) ).

fof(kb_SUMO_6022,axiom,
    s__documentation(s__Insect,s__EnglishLanguage,'A &%Class of small &%Arthropods that are air-breathing and that are distinguished by appearance.') ).

fof(kb_SUMO_6023,axiom,
    s__subclass(s__Crustacean,s__Arthropod) ).

fof(kb_SUMO_6024,axiom,
    s__instance(s__Crustacean__t,s__SetOrClass) ).

fof(kb_SUMO_6025,axiom,
    s__documentation(s__Crustacean,s__EnglishLanguage,'A &%Class of &%Arthropods that mainly dwells in water and has a segmented body and a chitinous exoskeleton. Includes lobsters, crabs, shrimp, and barnacles.') ).

fof(kb_SUMO_6026,axiom,
    s__subclass(s__ColdBloodedVertebrate,s__Vertebrate) ).

fof(kb_SUMO_6027,axiom,
    s__instance(s__Vertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_6028,axiom,
    s__disjointDecomposition_4(s__ColdBloodedVertebrate,s__Amphibian,s__Fish,s__Reptile) ).

fof(kb_SUMO_6029,axiom,
    s__documentation(s__ColdBloodedVertebrate,s__EnglishLanguage,'&%Vertebrates whose body temperature is not internally regulated.') ).

fof(kb_SUMO_6030,axiom,
    s__subclass(s__WarmBloodedVertebrate,s__Vertebrate) ).

fof(kb_SUMO_6031,axiom,
    s__disjoint(s__WarmBloodedVertebrate,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_6032,axiom,
    s__documentation(s__WarmBloodedVertebrate,s__EnglishLanguage,'&%Vertebrates whose body temperature is internally regulated.') ).

fof(kb_SUMO_6033,axiom,
    s__subclass(s__Amphibian,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_6034,axiom,
    s__instance(s__Amphibian__t,s__SetOrClass) ).

fof(kb_SUMO_6035,axiom,
    s__instance(s__ColdBloodedVertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_6036,axiom,
    s__documentation(s__Amphibian,s__EnglishLanguage,'A cold-blooded, smooth-skinned &%Vertebrate which characteristically hatches as an aquatic larva, breathing by gills. When mature, the &%Amphibian breathes with &%Lungs.') ).

fof(kb_SUMO_6037,axiom,
    s__subclass(s__Bird,s__WarmBloodedVertebrate) ).

fof(kb_SUMO_6038,axiom,
    s__instance(s__Bird__t,s__SetOrClass) ).

fof(kb_SUMO_6039,axiom,
    s__instance(s__WarmBloodedVertebrate__t,s__SetOrClass) ).

fof(kb_SUMO_6040,axiom,
    s__disjoint(s__Bird,s__Mammal) ).

fof(kb_SUMO_6041,axiom,
    s__documentation(s__Bird,s__EnglishLanguage,'A &%Vertebrate having a constant body temperature and characterized by the presence of feathers.') ).

fof(kb_SUMO_6042,axiom,
    s__subclass(s__Fish,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_6043,axiom,
    s__instance(s__Fish__t,s__SetOrClass) ).

fof(kb_SUMO_6044,axiom,
    s__documentation(s__Fish,s__EnglishLanguage,'A cold-blooded aquatic &%Vertebrate characterized by fins and breathing by gills. Included here are &%Fish having either a bony skeleton, such as a perch, or a cartilaginous skeleton, such as a shark. Also included are those &%Fish lacking a jaw, such as a lamprey or hagfish.') ).

fof(kb_SUMO_6045,axiom,
    ! [V__FISH] :
      ( s__instance(V__FISH,s__Organism)
     => ( s__instance(V__FISH,s__Fish)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__inhabits(V__FISH,V__WATER)
            & s__instance(V__WATER,s__Water) ) ) ) ).

fof(kb_SUMO_6046,axiom,
    s__subclass(s__Mammal,s__WarmBloodedVertebrate) ).

fof(kb_SUMO_6047,axiom,
    s__disjointDecomposition_6(s__Mammal,s__AquaticMammal,s__HoofedMammal,s__Marsupial,s__Rodent,s__Primate) ).

fof(kb_SUMO_6048,axiom,
    s__documentation(s__Mammal,s__EnglishLanguage,'A &%Vertebrate having a constant body temperature and characterized by the presence of hair, mammary glands, and sweat glands.') ).

fof(kb_SUMO_6049,axiom,
    s__subclass(s__AquaticMammal,s__Mammal) ).

fof(kb_SUMO_6050,axiom,
    s__instance(s__AquaticMammal__t,s__SetOrClass) ).

fof(kb_SUMO_6051,axiom,
    s__documentation(s__AquaticMammal,s__EnglishLanguage,'The &%Class of &%Mammals that dwell chiefly in the water. Includes whales, dolphins, manatees, seals, and walruses.') ).

fof(kb_SUMO_6052,axiom,
    s__subclass(s__HoofedMammal,s__Mammal) ).

fof(kb_SUMO_6053,axiom,
    s__instance(s__HoofedMammal__t,s__SetOrClass) ).

fof(kb_SUMO_6054,axiom,
    s__documentation(s__HoofedMammal,s__EnglishLanguage,'The &%Class of quadruped &%Mammals with hooves. Includes horses, cows, sheep, pigs, antelope, etc.') ).

fof(kb_SUMO_6055,axiom,
    s__subclass(s__Marsupial,s__Mammal) ).

fof(kb_SUMO_6056,axiom,
    s__instance(s__Marsupial__t,s__SetOrClass) ).

fof(kb_SUMO_6057,axiom,
    s__instance(s__Mammal__t,s__SetOrClass) ).

fof(kb_SUMO_6058,axiom,
    s__documentation(s__Marsupial,s__EnglishLanguage,'The &%Class of &%Mammals which have a pouch for their young.') ).

fof(kb_SUMO_6059,axiom,
    s__subclass(s__Carnivore,s__Mammal) ).

fof(kb_SUMO_6060,axiom,
    s__documentation(s__Carnivore,s__EnglishLanguage,'The &%Class of flesh-eating &%Mammals. Members of this &%Class typically have four or five claws on each paw. Includes cats, dogs, bears, racoons, and skunks.') ).

fof(kb_SUMO_6061,axiom,
    ! [V__EAT,V__CARNIVORE,V__PREY] :
      ( ( s__instance(V__CARNIVORE,s__Agent)
        & s__instance(V__EAT,s__Process) )
     => ( ( s__instance(V__CARNIVORE,s__Carnivore)
          & s__instance(V__EAT,s__Eating)
          & s__agent(V__EAT,V__CARNIVORE)
          & s__patient(V__EAT,V__PREY) )
       => s__instance(V__PREY,s__Animal) ) ) ).

fof(kb_SUMO_6062,axiom,
    s__subclass(s__Canine,s__Carnivore) ).

fof(kb_SUMO_6063,axiom,
    s__instance(s__Canine__t,s__SetOrClass) ).

fof(kb_SUMO_6064,axiom,
    s__instance(s__Carnivore__t,s__SetOrClass) ).

fof(kb_SUMO_6065,axiom,
    s__disjoint(s__Canine,s__Feline) ).

fof(kb_SUMO_6066,axiom,
    s__documentation(s__Canine,s__EnglishLanguage,'The &%Class of &%Carnivores with completely separable toes, nonretractable claws, and long muzzles.') ).

fof(kb_SUMO_6067,axiom,
    s__subclass(s__Feline,s__Carnivore) ).

fof(kb_SUMO_6068,axiom,
    s__instance(s__Feline__t,s__SetOrClass) ).

fof(kb_SUMO_6069,axiom,
    s__documentation(s__Feline,s__EnglishLanguage,'The &%Class of &%Carnivores with completely separable toes, slim bodies, and rounded heads. All felines other than the cheetah have retractable claws.') ).

fof(kb_SUMO_6070,axiom,
    s__subclass(s__Rodent,s__Mammal) ).

fof(kb_SUMO_6071,axiom,
    s__instance(s__Rodent__t,s__SetOrClass) ).

fof(kb_SUMO_6072,axiom,
    s__documentation(s__Rodent,s__EnglishLanguage,'The &%Class of &%Mammals with one or two pairs of incisors for gnawing. Includes rats, mice, guinea pigs, and rabbits.') ).

fof(kb_SUMO_6073,axiom,
    s__subclass(s__Primate,s__Mammal) ).

fof(kb_SUMO_6074,axiom,
    s__disjointDecomposition_4(s__Primate,s__Ape,s__Monkey,s__Hominid) ).

fof(kb_SUMO_6075,axiom,
    s__documentation(s__Primate,s__EnglishLanguage,'The &%Class of &%Mammals which are &%Primates.') ).

fof(kb_SUMO_6076,axiom,
    s__subclass(s__Ape,s__Primate) ).

fof(kb_SUMO_6077,axiom,
    s__instance(s__Ape__t,s__SetOrClass) ).

fof(kb_SUMO_6078,axiom,
    s__documentation(s__Ape,s__EnglishLanguage,'Various &%Primates with no tails or only short tails.') ).

fof(kb_SUMO_6079,axiom,
    s__subclass(s__Monkey,s__Primate) ).

fof(kb_SUMO_6080,axiom,
    s__instance(s__Monkey__t,s__SetOrClass) ).

fof(kb_SUMO_6081,axiom,
    s__instance(s__Primate__t,s__SetOrClass) ).

fof(kb_SUMO_6082,axiom,
    s__documentation(s__Monkey,s__EnglishLanguage,'Various &%Primates with relatively long tails.') ).

fof(kb_SUMO_6083,axiom,
    s__subclass(s__Hominid,s__Primate) ).

fof(kb_SUMO_6084,axiom,
    s__instance(s__Hominid__t,s__SetOrClass) ).

fof(kb_SUMO_6085,axiom,
    s__documentation(s__Hominid,s__EnglishLanguage,'Includes &%Humans and relatively recent ancestors of &%Humans.') ).

fof(kb_SUMO_6086,axiom,
    s__subclass(s__Human,s__Hominid) ).

fof(kb_SUMO_6087,axiom,
    s__subclass(s__Human,s__CognitiveAgent) ).

fof(kb_SUMO_6088,axiom,
    s__instance(s__CognitiveAgent__t,s__SetOrClass) ).

fof(kb_SUMO_6089,axiom,
    s__partition_3(s__Human,s__Man,s__Woman) ).

fof(kb_SUMO_6090,axiom,
    s__documentation(s__Human,s__EnglishLanguage,'Modern man, the only remaining species of the Homo genus.') ).

fof(kb_SUMO_6091,axiom,
    s__subclass(s__Man,s__Human) ).

fof(kb_SUMO_6092,axiom,
    s__instance(s__Man__t,s__SetOrClass) ).

fof(kb_SUMO_6093,axiom,
    s__documentation(s__Man,s__EnglishLanguage,'The class of &%Male &%Humans.') ).

fof(kb_SUMO_6094,axiom,
    ! [V__MAN] :
      ( s__instance(V__MAN,s__Object)
     => ( s__instance(V__MAN,s__Man)
       => s__attribute(V__MAN,s__Male) ) ) ).

fof(kb_SUMO_6095,axiom,
    s__subclass(s__Woman,s__Human) ).

fof(kb_SUMO_6096,axiom,
    s__instance(s__Woman__t,s__SetOrClass) ).

fof(kb_SUMO_6097,axiom,
    s__instance(s__Human__t,s__SetOrClass) ).

fof(kb_SUMO_6098,axiom,
    s__documentation(s__Woman,s__EnglishLanguage,'The class of &%Female &%Humans.') ).

fof(kb_SUMO_6099,axiom,
    ! [V__WOMAN] :
      ( s__instance(V__WOMAN,s__Object)
     => ( s__instance(V__WOMAN,s__Woman)
       => s__attribute(V__WOMAN,s__Female) ) ) ).

fof(kb_SUMO_6100,axiom,
    s__subclass(s__Reptile,s__ColdBloodedVertebrate) ).

fof(kb_SUMO_6101,axiom,
    s__instance(s__Reptile__t,s__SetOrClass) ).

fof(kb_SUMO_6102,axiom,
    s__documentation(s__Reptile,s__EnglishLanguage,'A &%ColdBloodedVertebrate having an external covering of scales or horny plates. &%Reptiles breathe by means of &%Lungs and generally lay eggs.') ).

fof(kb_SUMO_6103,axiom,
    s__subclass(s__BiologicallyActiveSubstance,s__Substance) ).

fof(kb_SUMO_6104,axiom,
    s__instance(s__BiologicallyActiveSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_6105,axiom,
    s__documentation(s__BiologicallyActiveSubstance,s__EnglishLanguage,'A &%Substance that is capable of inducing a change in the structure or functioning of an &%Organism. This &%Class includes &%Substances used in the treatment, diagnosis, prevention or analysis of normal and abnormal body function. This &%Class also includes &%Substances that occur naturally in the body and are administered therapeutically. Finally, &%BiologicallyActiveSubstance includes &%Nutrients, most drugs of abuse, and agents that require special handling because of their toxicity.') ).

fof(kb_SUMO_6106,axiom,
    s__subclass(s__Nutrient,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_6107,axiom,
    s__disjointDecomposition_4(s__Nutrient,s__Protein,s__Carbohydrate,s__Vitamin) ).

fof(kb_SUMO_6108,axiom,
    s__documentation(s__Nutrient,s__EnglishLanguage,'A &%BiologicallyActiveSubstance required by an &%Organism. It is generally ingested as &%Food, and it is of primary interest because of its role in the biologic functioning of the &%Organism.') ).

fof(kb_SUMO_6109,axiom,
    s__subclass(s__Protein,s__Nutrient) ).

fof(kb_SUMO_6110,axiom,
    s__instance(s__Protein__t,s__SetOrClass) ).

fof(kb_SUMO_6111,axiom,
    s__instance(s__Nutrient__t,s__SetOrClass) ).

fof(kb_SUMO_6112,axiom,
    s__documentation(s__Protein,s__EnglishLanguage,'A &%Nutrient made up of amino acids joined by peptide bonds.') ).

fof(kb_SUMO_6113,axiom,
    s__subclass(s__Enzyme,s__Protein) ).

fof(kb_SUMO_6114,axiom,
    s__instance(s__Enzyme__t,s__SetOrClass) ).

fof(kb_SUMO_6115,axiom,
    s__documentation(s__Enzyme,s__EnglishLanguage,'A complex &%Protein that is produced by living cells and which catalyzes specific biochemical reactions. There are six main types of enzymes: oxidoreductases, transferases, hydrolases, lyases, isomerases, and ligases.') ).

fof(kb_SUMO_6116,axiom,
    s__subclass(s__Carbohydrate,s__Nutrient) ).

fof(kb_SUMO_6117,axiom,
    s__instance(s__Carbohydrate__t,s__SetOrClass) ).

fof(kb_SUMO_6118,axiom,
    s__documentation(s__Carbohydrate,s__EnglishLanguage,'An element of living cells and a source of energy for &%Animals. This class includes both simple &%Carbohydrates, i.e. sugars, and complex &%Carbohydrates, i.e. starches.') ).

fof(kb_SUMO_6119,axiom,
    s__subclass(s__Vitamin,s__Nutrient) ).

fof(kb_SUMO_6120,axiom,
    s__instance(s__Vitamin__t,s__SetOrClass) ).

fof(kb_SUMO_6121,axiom,
    s__documentation(s__Vitamin,s__EnglishLanguage,'A &%Nutrient present in natural products or made synthetically, which is essential in the diet of &%Humans and other higher &%Animals. Included here are &%Vitamin precursors and provitamins.') ).

fof(kb_SUMO_6122,axiom,
    s__subclass(s__LiquidMixture,s__Mixture) ).

fof(kb_SUMO_6123,axiom,
    s__partition_3(s__LiquidMixture,s__Solution,s__Suspension) ).

fof(kb_SUMO_6124,axiom,
    s__documentation(s__LiquidMixture,s__EnglishLanguage,'Any &%Mixture that satisfies two conditions, viz. it is made up predominantly of things which are a &%Liquid and any component other than &%Liquid in the &%Mixture is in the form of fine particles which are suspended in the &%Liquid.') ).

fof(kb_SUMO_6125,axiom,
    ! [V__MIX] :
      ( s__instance(V__MIX,s__Object)
     => ( s__instance(V__MIX,s__LiquidMixture)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__MIX)
            & s__attribute(V__PART,s__Liquid) ) ) ) ).

fof(kb_SUMO_6126,axiom,
    s__subclass(s__Solution,s__LiquidMixture) ).

fof(kb_SUMO_6127,axiom,
    s__instance(s__Solution__t,s__SetOrClass) ).

fof(kb_SUMO_6128,axiom,
    s__instance(s__LiquidMixture__t,s__SetOrClass) ).

fof(kb_SUMO_6129,axiom,
    s__documentation(s__Solution,s__EnglishLanguage,'A liquid mixture. The most abundant component in a solution is called the solvent. Other components are called solutes. A solution, though homogeneous, may nonetheless have variable composition. Any amount of salt, up to a maximum limit, can be dissolved in a given amount of water.') ).

fof(kb_SUMO_6130,axiom,
    s__subclass(s__Suspension,s__LiquidMixture) ).

fof(kb_SUMO_6131,axiom,
    s__instance(s__Suspension__t,s__SetOrClass) ).

fof(kb_SUMO_6132,axiom,
    s__documentation(s__Suspension,s__EnglishLanguage,'A &%LiquidMixture where at least one of the components of the &%Mixture is equally distributed throughout the &%Mixture but is not dissolved in it.') ).

fof(kb_SUMO_6133,axiom,
    s__subclass(s__GasMixture,s__Mixture) ).

fof(kb_SUMO_6134,axiom,
    s__instance(s__Mixture__t,s__SetOrClass) ).

fof(kb_SUMO_6135,axiom,
    s__disjoint(s__GasMixture,s__LiquidMixture) ).

fof(kb_SUMO_6136,axiom,
    s__documentation(s__GasMixture,s__EnglishLanguage,'Any &%Mixture that satisfies two conditions, viz. it is made up predominantly of things which are a &%Gas and any component other than &%Gas in the &%Mixture is in the form of fine particles which are suspended in the &%Gas.') ).

fof(kb_SUMO_6137,axiom,
    ! [V__MIX] :
      ( s__instance(V__MIX,s__Object)
     => ( s__instance(V__MIX,s__GasMixture)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__MIX)
            & s__attribute(V__PART,s__Gas) ) ) ) ).

fof(kb_SUMO_6138,axiom,
    s__subclass(s__Cloud,s__GasMixture) ).

fof(kb_SUMO_6139,axiom,
    s__instance(s__Cloud__t,s__SetOrClass) ).

fof(kb_SUMO_6140,axiom,
    s__instance(s__GasMixture__t,s__SetOrClass) ).

fof(kb_SUMO_6141,axiom,
    s__documentation(s__Cloud,s__EnglishLanguage,'Any &%GasMixture that is visible, e.g. &%Smoke produced by a fire or clouds of water vapor in the sky.') ).

fof(kb_SUMO_6142,axiom,
    ! [V__CLOUD] :
      ( s__instance(V__CLOUD,s__Object)
     => ( s__instance(V__CLOUD,s__Cloud)
       => s__capability(s__Seeing,s__patient__m,V__CLOUD) ) ) ).

fof(kb_SUMO_6143,axiom,
    s__subclass(s__Smoke,s__Cloud) ).

fof(kb_SUMO_6144,axiom,
    s__instance(s__Smoke__t,s__SetOrClass) ).

fof(kb_SUMO_6145,axiom,
    s__documentation(s__Smoke,s__EnglishLanguage,'A mixture of fine particles suspended in a gas that is produced by &%Combustion.') ).

fof(kb_SUMO_6146,axiom,
    ! [V__SMOKE] :
      ( s__instance(V__SMOKE,s__Smoke)
     => ? [V__BURNING] :
          ( s__instance(V__BURNING,s__Process)
          & s__instance(V__BURNING,s__Combustion)
          & s__result(V__BURNING,V__SMOKE) ) ) ).

fof(kb_SUMO_6147,axiom,
    s__subclass(s__WaterCloud,s__Cloud) ).

fof(kb_SUMO_6148,axiom,
    s__instance(s__WaterCloud__t,s__SetOrClass) ).

fof(kb_SUMO_6149,axiom,
    s__documentation(s__WaterCloud,s__EnglishLanguage,'Any &%Cloud that is composed primarily of water vapor.') ).

fof(kb_SUMO_6150,axiom,
    ! [V__CLOUD] :
      ( s__instance(V__CLOUD,s__Object)
     => ( s__instance(V__CLOUD,s__WaterCloud)
       => ? [V__WATER] :
            ( s__instance(V__WATER,s__Object)
            & s__instance(V__WATER,s__Water)
            & s__part(V__WATER,V__CLOUD) ) ) ) ).

fof(kb_SUMO_6151,axiom,
    ! [V__MEASURE2,V__MEASURE1,V__CLOUD] :
      ( s__instance(V__CLOUD,s__WaterCloud)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__CLOUD,s__Object)
            & s__instance(V__MEASURE1,s__PhysicalQuantity)
            & s__instance(V__MEASURE2,s__PhysicalQuantity) )
         => ( ( s__part(V__PART,V__CLOUD)
              & ~ s__instance(V__PART,s__Water) )
           => ? [V__WATER] :
                ( s__instance(V__WATER,s__Object)
                & s__instance(V__WATER,s__Water)
                & s__part(V__WATER,V__CLOUD)
                & s__measure(V__WATER,V__MEASURE1)
                & s__measure(V__PART,V__MEASURE2)
                & greater(V__MEASURE1,V__MEASURE2) ) ) ) ) ).

fof(kb_SUMO_6152,axiom,
    s__subclass(s__Air,s__GasMixture) ).

fof(kb_SUMO_6153,axiom,
    s__instance(s__Air__t,s__SetOrClass) ).

fof(kb_SUMO_6154,axiom,
    s__documentation(s__Air,s__EnglishLanguage,'&%Air is the gaseous stuff that makes up the atmosphere surrounding Earth.') ).

fof(kb_SUMO_6155,axiom,
    ! [V__WIND] :
      ( s__instance(V__WIND,s__Process)
     => ( s__instance(V__WIND,s__Wind)
       => ? [V__AIR] :
            ( s__patient(V__WIND,V__AIR)
            & s__instance(V__AIR,s__Air) ) ) ) ).

fof(kb_SUMO_6156,axiom,
    s__subclass(s__BodySubstance,s__Substance) ).

fof(kb_SUMO_6157,axiom,
    s__instance(s__BodySubstance__t,s__SetOrClass) ).

fof(kb_SUMO_6158,axiom,
    s__documentation(s__BodySubstance,s__EnglishLanguage,'Extracellular material and mixtures of cells and extracellular material that are produced, excreted or accreted by an &%Organism. Included here are &%Substances such as saliva, dental enamel, sweat, hormones, and gastric acid.') ).

fof(kb_SUMO_6159,axiom,
    s__subclass(s__AnimalSubstance,s__BodySubstance) ).

fof(kb_SUMO_6160,axiom,
    s__documentation(s__AnimalSubstance,s__EnglishLanguage,'&%BodySubstances that are produced exclusively by &%Animals.') ).

fof(kb_SUMO_6161,axiom,
    ! [V__SUBSTANCE,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__SUBSTANCE,s__Object) )
     => ( ( s__instance(V__SUBSTANCE,s__AnimalSubstance)
          & s__instance(V__ANIMAL,s__Organism)
          & s__part(V__SUBSTANCE,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Animal) ) ) ).

fof(kb_SUMO_6162,axiom,
    s__subclass(s__PlantSubstance,s__BodySubstance) ).

fof(kb_SUMO_6163,axiom,
    s__instance(s__PlantSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_6164,axiom,
    s__documentation(s__PlantSubstance,s__EnglishLanguage,'&%BodySubstances that are produced exclusively by &%Plants.') ).

fof(kb_SUMO_6165,axiom,
    ! [V__PLANT,V__SUBSTANCE] :
      ( ( s__instance(V__SUBSTANCE,s__Object)
        & s__instance(V__PLANT,s__Object) )
     => ( ( s__instance(V__SUBSTANCE,s__PlantSubstance)
          & s__instance(V__PLANT,s__Organism)
          & s__part(V__SUBSTANCE,V__PLANT) )
       => s__instance(V__PLANT,s__Plant) ) ) ).

fof(kb_SUMO_6166,axiom,
    s__subclass(s__Hormone,s__BodySubstance) ).

fof(kb_SUMO_6167,axiom,
    s__instance(s__Hormone__t,s__SetOrClass) ).

fof(kb_SUMO_6168,axiom,
    s__subclass(s__Hormone,s__BiologicallyActiveSubstance) ).

fof(kb_SUMO_6169,axiom,
    s__documentation(s__Hormone,s__EnglishLanguage,'In &%Animals, a chemical secreted by an endocrine gland whose products are released into the circulating fluid. &%Plant hormones or synthetic hormones which are used only to alter or control various physiologic processes, e.g., reproductive control agents, are assigned to the &%Class &%BiologicallyActiveSubstance. &%Hormones act as chemical messengers and regulate various physiologic processes such as growth, reproduction, metabolism, etc. They usually fall into two broad categories, viz. steroid hormones and peptide hormones.') ).

fof(kb_SUMO_6170,axiom,
    ! [V__HORMONE] :
      ( s__instance(V__HORMONE,s__Hormone)
     => ? [V__PROCESS,V__GLAND] :
          ( s__instance(V__GLAND,s__Object)
          & s__instance(V__PROCESS,s__Process)
          & s__instance(V__GLAND,s__Gland)
          & s__instrument(V__PROCESS,V__GLAND)
          & s__result(V__PROCESS,V__HORMONE) ) ) ).

fof(kb_SUMO_6171,axiom,
    s__subclass(s__Blood,s__BodySubstance) ).

fof(kb_SUMO_6172,axiom,
    s__instance(s__Blood__t,s__SetOrClass) ).

fof(kb_SUMO_6173,axiom,
    s__documentation(s__Blood,s__EnglishLanguage,'A fluid present in &%Animals that transports &%Nutrients to and waste products away from various &%BodyParts.') ).

fof(kb_SUMO_6174,axiom,
    s__instance(s__FoodForFn__m,s__UnaryFunction) ).

fof(kb_SUMO_6175,axiom,
    s__domainSubclass(s__FoodForFn__m,"1",s__Organism) ).

fof(kb_SUMO_6176,axiom,
    s__rangeSubclass(s__FoodForFn__m,s__SelfConnectedObject) ).

fof(kb_SUMO_6177,axiom,
    s__documentation(s__FoodForFn__m,s__EnglishLanguage,'A &%Function that denotes &%SelfConnectedObject containing &%Nutrients, such as carbohydrates, proteins, and fats, that can be ingested by a the given class of living &%Animal and metabolized into energy and body tissue.') ).

fof(kb_SUMO_6178,axiom,
    ! [V__A,V__FOOD] :
      ( ( s__instance(V__FOOD,s__Object)
        & s__subclass(V__A,s__Organism)
        & s__instance(V__A,s__SetOrClass) )
     => ( s__instance(V__FOOD,s__FoodForFn(V__A))
       => ? [V__NUTRIENT] :
            ( s__instance(V__NUTRIENT,s__Object)
            & s__instance(V__NUTRIENT,s__Nutrient)
            & s__part(V__NUTRIENT,V__FOOD) ) ) ) ).

fof(kb_SUMO_6179,axiom,
    s__subclass(s__Meat,s__SelfConnectedObject) ).

fof(kb_SUMO_6180,axiom,
    s__instance(s__Meat__t,s__SetOrClass) ).

fof(kb_SUMO_6181,axiom,
    s__documentation(s__Meat,s__EnglishLanguage,'Any food which was originally part of an &%Animal and is not ingested by drinking, including eggs and animal blood that is eaten as food. Note that this class covers both raw meat and meat that has been prepared in some way, e.g. by cooking. Note too that preparations involving &%Meat and &%FruitOrVegetable are classed directly under &%Food.') ).

fof(kb_SUMO_6182,axiom,
    ! [V__MEAT] :
      ( s__instance(V__MEAT,s__Meat)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__MEAT,s__Object) )
         => ( s__part(V__PART,V__MEAT)
           => ? [V__SUBPART,V__TIME,V__ANIMAL] :
                ( s__instance(V__ANIMAL,s__Object)
                & s__instance(V__TIME,s__TimePosition)
                & s__instance(V__SUBPART,s__Object)
                & s__part(V__SUBPART,V__PART)
                & s__holdsDuring(V__TIME,'(s__instance(V__ANIMAL,s__Animal) & s__part(V__SUBPART,V__ANIMAL))') ) ) ) ) ).

fof(kb_SUMO_6183,axiom,
    s__subclass(s__AnatomicalStructure,s__OrganicObject) ).

fof(kb_SUMO_6184,axiom,
    s__partition_3(s__AnatomicalStructure,s__BodyPart,s__AbnormalAnatomicalStructure) ).

fof(kb_SUMO_6185,axiom,
    s__partition_3(s__AnatomicalStructure,s__AnimalAnatomicalStructure,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_6186,axiom,
    s__documentation(s__AnatomicalStructure,s__EnglishLanguage,'A normal or pathological part of the anatomy or structural organization of an &%Organism. This class covers &%BodyParts, as well as structures that are given off by &%Organisms, e.g. &%ReproductiveBodies.') ).

%FOL fof(kb_SUMO_6187,axiom,(( (! [V__ANAT] : (s__instance(V__ANAT,s__Object) => (s__instance(V__ANAT,s__AnatomicalStructure) => (? [V__ORGANISM,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__ORGANISM,s__Object) & s__instance(V__ORGANISM,s__Organism) & s__temporalPart(V__TIME,s__WhenFn(V__ORGANISM)) & s__holdsDuring(V__TIME,'s__part(V__ANAT,V__ORGANISM)')))))) ))).

fof(kb_SUMO_6188,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__Object)
     => ( s__instance(V__PART,s__AnatomicalStructure)
       => ? [V__CELL] :
            ( s__instance(V__CELL,s__Object)
            & s__instance(V__CELL,s__Cell)
            & s__part(V__CELL,V__PART) ) ) ) ).

fof(kb_SUMO_6189,axiom,
    s__subclass(s__AbnormalAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_6190,axiom,
    s__instance(s__AbnormalAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_6191,axiom,
    s__instance(s__AnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_6192,axiom,
    s__documentation(s__AbnormalAnatomicalStructure,s__EnglishLanguage,'Any &%AnatomicalStructure which is not normally found in the &%Organism of which it is a part, i.e. it is the result of a &%PathologicProcess. This class covers tumors, birth marks, goiters, etc.') ).

fof(kb_SUMO_6193,axiom,
    ! [V__STRUCTURE] :
      ( s__instance(V__STRUCTURE,s__AbnormalAnatomicalStructure)
     => ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__PathologicProcess)
          & s__result(V__PROC,V__STRUCTURE) ) ) ).

fof(kb_SUMO_6194,axiom,
    s__subclass(s__BodyPart,s__AnatomicalStructure) ).

fof(kb_SUMO_6195,axiom,
    s__documentation(s__BodyPart,s__EnglishLanguage,'A collection of &%Cells and &%Tissues which are localized to a specific area of an &%Organism and which are not pathological. The instances of this &%Class range from gross structures to small components of complex &%Organs.') ).

%FOL fof(kb_SUMO_6196,axiom,(( (! [V__PART] : (s__instance(V__PART,s__CorpuscularObject) => (s__instance(V__PART,s__BodyPart) => (? [V__ORGANISM,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__ORGANISM,s__CorpuscularObject) & s__instance(V__ORGANISM,s__Organism) & s__temporalPart(V__TIME,s__WhenFn(V__ORGANISM)) & s__holdsDuring(V__TIME,'s__component(V__PART,V__ORGANISM)')))))) ))).

fof(kb_SUMO_6197,axiom,
    ! [V__PART] :
      ( s__instance(V__PART,s__BodyPart)
     => ? [V__PROC] :
          ( s__instance(V__PROC,s__Process)
          & s__instance(V__PROC,s__PhysiologicProcess)
          & s__result(V__PROC,V__PART) ) ) ).

fof(kb_SUMO_6198,axiom,
    s__subclass(s__AnimalAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_6199,axiom,
    s__instance(s__AnimalAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_6200,axiom,
    s__documentation(s__AnimalAnatomicalStructure,s__EnglishLanguage,'&%AnatomicalStructures that are possessed exclusively by &%Animals.') ).

fof(kb_SUMO_6201,axiom,
    ! [V__STRUCTURE,V__ANIMAL] :
      ( ( s__instance(V__ANIMAL,s__Object)
        & s__instance(V__STRUCTURE,s__Object) )
     => ( ( s__instance(V__STRUCTURE,s__AnimalAnatomicalStructure)
          & s__instance(V__ANIMAL,s__Organism)
          & s__part(V__STRUCTURE,V__ANIMAL) )
       => s__instance(V__ANIMAL,s__Animal) ) ) ).

fof(kb_SUMO_6202,axiom,
    s__subclass(s__PlantAnatomicalStructure,s__AnatomicalStructure) ).

fof(kb_SUMO_6203,axiom,
    s__documentation(s__PlantAnatomicalStructure,s__EnglishLanguage,'&%AnatomicalStructures that are possessed exclusively by &%Plants.') ).

fof(kb_SUMO_6204,axiom,
    ! [V__STRUCTURE,V__PLANT] :
      ( ( s__instance(V__PLANT,s__Object)
        & s__instance(V__STRUCTURE,s__Object) )
     => ( ( s__instance(V__STRUCTURE,s__PlantAnatomicalStructure)
          & s__instance(V__PLANT,s__Organism)
          & s__part(V__STRUCTURE,V__PLANT) )
       => s__instance(V__PLANT,s__Plant) ) ) ).

fof(kb_SUMO_6205,axiom,
    s__subclass(s__ReproductiveBody,s__BodyPart) ).

fof(kb_SUMO_6206,axiom,
    s__documentation(s__ReproductiveBody,s__EnglishLanguage,'Reproductive structure of &%Organisms. Consists of an &%Embryonic &%Object and a nutritive/protective envelope. Note that this class includes seeds, spores, and &%FruitOrVegetables, as well as the eggs produced by &%Animals.') ).

fof(kb_SUMO_6207,axiom,
    s__subclass(s__Egg,s__ReproductiveBody) ).

fof(kb_SUMO_6208,axiom,
    s__instance(s__Egg__t,s__SetOrClass) ).

fof(kb_SUMO_6209,axiom,
    s__subclass(s__Egg,s__AnimalAnatomicalStructure) ).

fof(kb_SUMO_6210,axiom,
    s__documentation(s__Egg,s__EnglishLanguage,'The fertilized or unfertilized female &%ReproductiveBody of an &%Animal. This includes &%Bird and &%Reptile eggs, as well as mammalian ova.') ).

fof(kb_SUMO_6211,axiom,
    s__subclass(s__Seed,s__ReproductiveBody) ).

fof(kb_SUMO_6212,axiom,
    s__instance(s__Seed__t,s__SetOrClass) ).

fof(kb_SUMO_6213,axiom,
    s__instance(s__ReproductiveBody__t,s__SetOrClass) ).

fof(kb_SUMO_6214,axiom,
    s__subclass(s__Seed,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_6215,axiom,
    s__instance(s__PlantAnatomicalStructure__t,s__SetOrClass) ).

fof(kb_SUMO_6216,axiom,
    s__documentation(s__Seed,s__EnglishLanguage,'The fertilized or unfertilized female &%ReproductiveBody of a &%FloweringPlant.') ).

%FOL fof(kb_SUMO_6217,axiom,(( (! [V__SEED] : (s__instance(V__SEED,s__Object) => (s__instance(V__SEED,s__Seed) => (? [V__PLANT,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PLANT,s__Object) & s__instance(V__PLANT,s__FloweringPlant) & s__holdsDuring(V__TIME,'s__part(V__SEED,V__PLANT)')))))) ))).

fof(kb_SUMO_6218,axiom,
    s__subclass(s__Pollen,s__ReproductiveBody) ).

fof(kb_SUMO_6219,axiom,
    s__instance(s__Pollen__t,s__SetOrClass) ).

fof(kb_SUMO_6220,axiom,
    s__subclass(s__Pollen,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_6221,axiom,
    s__documentation(s__Pollen,s__EnglishLanguage,'A powder produced by &%FloweringPlants that contains male gametes and is capable of fertilizing the seeds of &%FloweringPlants of the same species.') ).

fof(kb_SUMO_6222,axiom,
    s__subclass(s__FruitOrVegetable,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_6223,axiom,
    s__instance(s__FruitOrVegetable__t,s__SetOrClass) ).

fof(kb_SUMO_6224,axiom,
    s__subclass(s__FruitOrVegetable,s__ReproductiveBody) ).

fof(kb_SUMO_6225,axiom,
    s__documentation(s__FruitOrVegetable,s__EnglishLanguage,'Any fruit or vegetable, i.e. a ripened &%ReproductiveBody of a &%Plant. Note that &%FruitOrVegetable is not a subclass of &%Food, because some fruits, e.g. poisonous berries, are not edible.') ).

fof(kb_SUMO_6226,axiom,
    s__subclass(s__Spore,s__ReproductiveBody) ).

fof(kb_SUMO_6227,axiom,
    s__instance(s__Spore__t,s__SetOrClass) ).

fof(kb_SUMO_6228,axiom,
    s__subclass(s__Spore,s__PlantAnatomicalStructure) ).

fof(kb_SUMO_6229,axiom,
    s__documentation(s__Spore,s__EnglishLanguage,'Any &%ReproductiveBody of a &%NonFloweringPlant.') ).

%FOL fof(kb_SUMO_6230,axiom,(( (! [V__SPORE] : (s__instance(V__SPORE,s__Object) => (s__instance(V__SPORE,s__Spore) => (? [V__PLANT,V__TIME] : (s__instance(V__TIME,s__TimePosition) & s__instance(V__PLANT,s__Object) & s__instance(V__PLANT,s__NonFloweringPlant) & s__holdsDuring(V__TIME,'s__part(V__SPORE,V__PLANT)')))))) ))).

fof(kb_SUMO_6231,axiom,
    s__subclass(s__BodyCovering,s__BodyPart) ).

fof(kb_SUMO_6232,axiom,
    s__instance(s__BodyCovering__t,s__SetOrClass) ).

fof(kb_SUMO_6233,axiom,
    s__documentation(s__BodyCovering,s__EnglishLanguage,'Any &%BodyPart which is a covering of another &%BodyPart or of an entire &%Organism. This would include the rinds of &%FruitOrVegetables and the skins of &%Animals.') ).

fof(kb_SUMO_6234,axiom,
    ! [V__COVER] :
      ( s__instance(V__COVER,s__Object)
     => ( s__instance(V__COVER,s__BodyCovering)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__Object)
            & s__superficialPart(V__COVER,V__BODY)
            & ( s__instance(V__BODY,s__Organism)
              | s__instance(V__BODY,s__BodyPart) ) ) ) ) ).

fof(kb_SUMO_6235,axiom,
    s__subclass(s__BodyJunction,s__BodyPart) ).

fof(kb_SUMO_6236,axiom,
    s__instance(s__BodyJunction__t,s__SetOrClass) ).

fof(kb_SUMO_6237,axiom,
    s__documentation(s__BodyJunction,s__EnglishLanguage,'The place where two &%BodyParts meet or connect.') ).

fof(kb_SUMO_6238,axiom,
    ! [V__JUNCT] :
      ( s__instance(V__JUNCT,s__SelfConnectedObject)
     => ( s__instance(V__JUNCT,s__BodyJunction)
       => ? [V__OBJ1,V__OBJ2] :
            ( s__instance(V__OBJ2,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__SelfConnectedObject)
            & s__instance(V__OBJ1,s__BodyPart)
            & s__instance(V__OBJ2,s__BodyPart)
            & s__connects(V__JUNCT,V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_6239,axiom,
    s__subclass(s__BodyCavity,s__BodyPart) ).

fof(kb_SUMO_6240,axiom,
    s__instance(s__BodyCavity__t,s__SetOrClass) ).

fof(kb_SUMO_6241,axiom,
    s__instance(s__BodyPart__t,s__SetOrClass) ).

fof(kb_SUMO_6242,axiom,
    s__documentation(s__BodyCavity,s__EnglishLanguage,'Any &%BodyPart which contains an unfilled space, e.g. &%BodyVessels, the atria and ventricles of the heart, the lungs, etc.') ).

fof(kb_SUMO_6243,axiom,
    s__subclass(s__BodyVessel,s__BodyCavity) ).

fof(kb_SUMO_6244,axiom,
    s__instance(s__BodyVessel__t,s__SetOrClass) ).

fof(kb_SUMO_6245,axiom,
    s__documentation(s__BodyVessel,s__EnglishLanguage,'Any tube-like structure which occurs naturally in an &%Organism and through which a &%BodySubstance can circulate.') ).

fof(kb_SUMO_6246,axiom,
    s__subclass(s__Cell,s__BodyPart) ).

fof(kb_SUMO_6247,axiom,
    s__instance(s__Cell__t,s__SetOrClass) ).

fof(kb_SUMO_6248,axiom,
    s__documentation(s__Cell,s__EnglishLanguage,'The fundamental structural and functional unit of living &%Organisms.') ).

fof(kb_SUMO_6249,axiom,
    s__subclass(s__Organ,s__BodyPart) ).

fof(kb_SUMO_6250,axiom,
    s__instance(s__Organ__t,s__SetOrClass) ).

fof(kb_SUMO_6251,axiom,
    s__documentation(s__Organ,s__EnglishLanguage,'A somewhat independent &%BodyPart that performs a specialized function. Note that this functional definition covers bodily systems, e.g. the digestive system or the central nervous system.') ).

fof(kb_SUMO_6252,axiom,
    ! [V__ORGAN] :
      ( s__instance(V__ORGAN,s__Physical)
     => ( s__instance(V__ORGAN,s__Organ)
       => ? [V__PURP] :
            ( s__instance(V__PURP,s__Formula)
            & s__hasPurpose(V__ORGAN,V__PURP) ) ) ) ).

fof(kb_SUMO_6253,axiom,
    s__subclass(s__Gland,s__Organ) ).

fof(kb_SUMO_6254,axiom,
    s__instance(s__Gland__t,s__SetOrClass) ).

fof(kb_SUMO_6255,axiom,
    s__documentation(s__Gland,s__EnglishLanguage,'An &%Organ that removes &%Substances from the &%Blood, alters them in some way, and then releases them.') ).

fof(kb_SUMO_6256,axiom,
    s__subclass(s__Tissue,s__BodySubstance) ).

fof(kb_SUMO_6257,axiom,
    s__disjointDecomposition_4(s__Tissue,s__Bone,s__Muscle,s__FatTissue) ).

fof(kb_SUMO_6258,axiom,
    s__documentation(s__Tissue,s__EnglishLanguage,'An aggregation of similarly specialized &%Cells and the associated intercellular substance. &%Tissues are relatively non-localized in comparison to &%BodyParts, &%Organs or &%Organ components. The main features of &%Tissues are self-connectivity (see &%SelfConnectedObject) and being a homogeneous mass (all parts in the same granularity are instances of &%Tissue as well).') ).

fof(kb_SUMO_6259,axiom,
    ! [V__STUFF] :
      ( s__instance(V__STUFF,s__Object)
     => ( s__instance(V__STUFF,s__Tissue)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__instance(V__PART,s__Cell)
            & s__part(V__PART,V__STUFF) ) ) ) ).

fof(kb_SUMO_6260,axiom,
    ! [V__STUFF] :
      ( s__instance(V__STUFF,s__Object)
     => ( s__instance(V__STUFF,s__Tissue)
       => ? [V__ORGANISM] :
            ( s__instance(V__ORGANISM,s__Object)
            & s__instance(V__ORGANISM,s__Organism)
            & s__part(V__STUFF,V__ORGANISM) ) ) ) ).

fof(kb_SUMO_6261,axiom,
    s__subclass(s__Bone,s__Tissue) ).

fof(kb_SUMO_6262,axiom,
    s__instance(s__Tissue__t,s__SetOrClass) ).

fof(kb_SUMO_6263,axiom,
    s__subclass(s__Bone,s__AnimalSubstance) ).

fof(kb_SUMO_6264,axiom,
    s__instance(s__Bone__t,s__SetOrClass) ).

fof(kb_SUMO_6265,axiom,
    s__instance(s__AnimalSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_6266,axiom,
    s__documentation(s__Bone,s__EnglishLanguage,'Rigid &%Tissue composed largely of calcium that makes up the skeleton of &%Vertebrates. Note that this &%Class also includes teeth.') ).

fof(kb_SUMO_6267,axiom,
    ! [V__BONE] :
      ( s__instance(V__BONE,s__Object)
     => ( s__instance(V__BONE,s__Bone)
       => ? [V__VERT] :
            ( s__instance(V__VERT,s__Object)
            & s__instance(V__VERT,s__Vertebrate)
            & s__part(V__BONE,V__VERT) ) ) ) ).

fof(kb_SUMO_6268,axiom,
    s__subclass(s__Muscle,s__Tissue) ).

fof(kb_SUMO_6269,axiom,
    s__instance(s__Muscle__t,s__SetOrClass) ).

fof(kb_SUMO_6270,axiom,
    s__subclass(s__Muscle,s__AnimalSubstance) ).

fof(kb_SUMO_6271,axiom,
    s__documentation(s__Muscle,s__EnglishLanguage,'Nonrigid &%Tissue appearing only in &%Animals and composed largely of contractile cells.') ).

fof(kb_SUMO_6272,axiom,
    s__subclass(s__FatTissue,s__Tissue) ).

fof(kb_SUMO_6273,axiom,
    s__instance(s__FatTissue__t,s__SetOrClass) ).

fof(kb_SUMO_6274,axiom,
    s__documentation(s__FatTissue,s__EnglishLanguage,'Nonrigid &%Tissue that is composed largely of fat cells.') ).

fof(kb_SUMO_6275,axiom,
    s__subclass(s__Noun,s__Word) ).

fof(kb_SUMO_6276,axiom,
    s__instance(s__Noun__t,s__SetOrClass) ).

fof(kb_SUMO_6277,axiom,
    s__partition_6(s__Word,s__Noun,s__Verb,s__Adjective,s__Adverb,s__ParticleWord) ).

fof(kb_SUMO_6278,axiom,
    s__documentation(s__Noun,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Objects.') ).

fof(kb_SUMO_6279,axiom,
    s__subclass(s__Verb,s__Word) ).

fof(kb_SUMO_6280,axiom,
    s__instance(s__Verb__t,s__SetOrClass) ).

fof(kb_SUMO_6281,axiom,
    s__instance(s__Word__t,s__SetOrClass) ).

fof(kb_SUMO_6282,axiom,
    s__documentation(s__Verb,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Processes.') ).

fof(kb_SUMO_6283,axiom,
    s__subclass(s__Adjective,s__Word) ).

fof(kb_SUMO_6284,axiom,
    s__instance(s__Adjective__t,s__SetOrClass) ).

fof(kb_SUMO_6285,axiom,
    s__documentation(s__Adjective,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Attributes of &%Objects.') ).

fof(kb_SUMO_6286,axiom,
    s__subclass(s__Adverb,s__Word) ).

fof(kb_SUMO_6287,axiom,
    s__instance(s__Adverb__t,s__SetOrClass) ).

fof(kb_SUMO_6288,axiom,
    s__documentation(s__Adverb,s__EnglishLanguage,'One of the parts of speech. The &%Class of &%Words that conventionally denote &%Attributes of &%Processes.') ).

fof(kb_SUMO_6289,axiom,
    s__subclass(s__ParticleWord,s__Word) ).

fof(kb_SUMO_6290,axiom,
    s__instance(s__ParticleWord__t,s__SetOrClass) ).

fof(kb_SUMO_6291,axiom,
    s__documentation(s__ParticleWord,s__EnglishLanguage,'An umbrella &%Class for any &%Word that does not fit into the other subclasses of &%Word. A &%ParticleWord is generally a small term that serves a grammatical or logical function, e.g. and, of, since, etc. At some point, this class might be broken up into the subclasses Connective, Preposition, etc. Note that the class &%ParticleWord includes both personal and possessive pronouns, e.g. she, hers, it, its, etc.') ).

fof(kb_SUMO_6292,axiom,
    s__subclass(s__Morpheme,s__LinguisticExpression) ).

fof(kb_SUMO_6293,axiom,
    s__instance(s__Morpheme__t,s__SetOrClass) ).

fof(kb_SUMO_6294,axiom,
    s__documentation(s__Morpheme,s__EnglishLanguage,'Part of a &%Word which cannot be subdivided and which expresses a meaning.') ).

fof(kb_SUMO_6295,axiom,
    ! [V__MORPH] :
      ( s__instance(V__MORPH,s__Object)
     => ( s__instance(V__MORPH,s__Morpheme)
       => ~ ? [V__OTHERMORPH] :
              ( s__instance(V__OTHERMORPH,s__Object)
              & s__instance(V__OTHERMORPH,s__Morpheme)
              & s__part(V__OTHERMORPH,V__MORPH)
              & V__OTHERMORPH != V__MORPH ) ) ) ).

fof(kb_SUMO_6296,axiom,
    ! [V__MORPH] :
      ( s__instance(V__MORPH,s__Object)
     => ( s__instance(V__MORPH,s__Morpheme)
       => ? [V__WORD] :
            ( s__instance(V__WORD,s__Object)
            & s__instance(V__WORD,s__Word)
            & s__part(V__MORPH,V__WORD) ) ) ) ).

fof(kb_SUMO_6297,axiom,
    ! [V__WORD] :
      ( s__instance(V__WORD,s__Object)
     => ( s__instance(V__WORD,s__Word)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__WORD)
            & s__instance(V__PART,s__Morpheme) ) ) ) ).

fof(kb_SUMO_6298,axiom,
    s__subclass(s__Phrase,s__LinguisticExpression) ).

fof(kb_SUMO_6299,axiom,
    s__disjointDecomposition_4(s__Phrase,s__VerbPhrase,s__NounPhrase,s__PrepositionalPhrase) ).

fof(kb_SUMO_6300,axiom,
    s__documentation(s__Phrase,s__EnglishLanguage,'A set of &%Words in a &%Language which form a unit, i.e. express a meaning in the &%Language.') ).

fof(kb_SUMO_6301,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__Phrase)
       => ? [V__PART1,V__PART2] :
            ( s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object)
            & s__part(V__PART1,V__PHRASE)
            & s__part(V__PART2,V__PHRASE)
            & s__instance(V__PART1,s__Word)
            & s__instance(V__PART2,s__Word)
            & V__PART1 != V__PART2 ) ) ) ).

fof(kb_SUMO_6302,axiom,
    s__subclass(s__VerbPhrase,s__Phrase) ).

fof(kb_SUMO_6303,axiom,
    s__instance(s__VerbPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_6304,axiom,
    s__documentation(s__VerbPhrase,s__EnglishLanguage,'A &%Phrase that has the same function as a &%Verb.') ).

fof(kb_SUMO_6305,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__VerbPhrase)
       => ? [V__VERB] :
            ( s__instance(V__VERB,s__Object)
            & s__instance(V__VERB,s__Verb)
            & s__part(V__VERB,V__PHRASE) ) ) ) ).

fof(kb_SUMO_6306,axiom,
    s__subclass(s__NounPhrase,s__Phrase) ).

fof(kb_SUMO_6307,axiom,
    s__instance(s__NounPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_6308,axiom,
    s__instance(s__Phrase__t,s__SetOrClass) ).

fof(kb_SUMO_6309,axiom,
    s__disjoint(s__NounPhrase,s__VerbPhrase) ).

fof(kb_SUMO_6310,axiom,
    s__documentation(s__NounPhrase,s__EnglishLanguage,'A &%Phrase that has the same function as a &%Noun.') ).

fof(kb_SUMO_6311,axiom,
    ! [V__SENTENCE] :
      ( s__instance(V__SENTENCE,s__Object)
     => ( s__instance(V__SENTENCE,s__Sentence)
       => ? [V__PHRASE1,V__PHRASE2] :
            ( s__instance(V__PHRASE2,s__Object)
            & s__instance(V__PHRASE1,s__Object)
            & s__instance(V__PHRASE1,s__NounPhrase)
            & s__instance(V__PHRASE2,s__VerbPhrase)
            & s__part(V__PHRASE1,V__SENTENCE)
            & s__part(V__PHRASE2,V__SENTENCE) ) ) ) ).

fof(kb_SUMO_6312,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__NounPhrase)
       => ? [V__NOUN] :
            ( s__instance(V__NOUN,s__Object)
            & s__instance(V__NOUN,s__Noun)
            & s__part(V__NOUN,V__PHRASE) ) ) ) ).

fof(kb_SUMO_6313,axiom,
    s__subclass(s__PrepositionalPhrase,s__Phrase) ).

fof(kb_SUMO_6314,axiom,
    s__instance(s__PrepositionalPhrase__t,s__SetOrClass) ).

fof(kb_SUMO_6315,axiom,
    s__documentation(s__PrepositionalPhrase,s__EnglishLanguage,'A &%Phrase that begins with a preposition and that functions as an &%Adjective or an &%Adverb.') ).

fof(kb_SUMO_6316,axiom,
    ! [V__PHRASE] :
      ( s__instance(V__PHRASE,s__Object)
     => ( s__instance(V__PHRASE,s__PrepositionalPhrase)
       => ? [V__PREP] :
            ( s__instance(V__PREP,s__Object)
            & s__instance(V__PREP,s__ParticleWord)
            & s__part(V__PREP,V__PHRASE) ) ) ) ).

fof(kb_SUMO_6317,axiom,
    s__subclass(s__Text,s__LinguisticExpression) ).

fof(kb_SUMO_6318,axiom,
    s__instance(s__LinguisticExpression__t,s__SetOrClass) ).

fof(kb_SUMO_6319,axiom,
    s__subclass(s__Text,s__ContentBearingObject) ).

fof(kb_SUMO_6320,axiom,
    s__instance(s__ContentBearingObject__t,s__SetOrClass) ).

fof(kb_SUMO_6321,axiom,
    s__subclass(s__Text,s__Artifact) ).

fof(kb_SUMO_6322,axiom,
    s__instance(s__Artifact__t,s__SetOrClass) ).

fof(kb_SUMO_6323,axiom,
    s__documentation(s__Text,s__EnglishLanguage,'A &%LinguisticExpression or set of &%LinguisticExpressions that perform a specific function related to &%Communication, e.g. express a discourse about a particular topic, and that are inscribed in a &%CorpuscularObject by &%Humans.') ).

fof(kb_SUMO_6324,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__Object)
     => ( s__instance(V__TEXT,s__Text)
       => ? [V__PART] :
            ( s__instance(V__PART,s__Object)
            & s__part(V__PART,V__TEXT)
            & s__instance(V__PART,s__LinguisticExpression) ) ) ) ).

fof(kb_SUMO_6325,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__Text)
     => ? [V__WRITE] :
          ( s__instance(V__WRITE,s__Process)
          & s__instance(V__WRITE,s__Writing)
          & s__result(V__WRITE,V__TEXT) ) ) ).

fof(kb_SUMO_6326,axiom,
    s__subclass(s__FactualText,s__Text) ).

fof(kb_SUMO_6327,axiom,
    s__instance(s__FactualText__t,s__SetOrClass) ).

fof(kb_SUMO_6328,axiom,
    s__instance(s__Text__t,s__SetOrClass) ).

fof(kb_SUMO_6329,axiom,
    s__disjoint(s__FactualText,s__FictionalText) ).

fof(kb_SUMO_6330,axiom,
    s__documentation(s__FactualText,s__EnglishLanguage,'The class of &%Texts that purport to reveal facts about the world. Such texts are often known as information or as non-fiction. Note that something can be an instance of &%FactualText, even if it is wholly inaccurate. Whether something is a &%FactualText is determined by the beliefs of the agent creating the text.') ).

fof(kb_SUMO_6331,axiom,
    ! [V__CONTENT,V__CLASS,V__AGENT,V__TEXT] :
      ( ( s__instance(V__TEXT,s__ContentBearingPhysical)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__subclass(V__CLASS,s__Text)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__TEXT,V__CLASS)
          & s__subclass(V__CLASS,s__FactualText)
          & s__authors(V__AGENT,V__CLASS)
          & s__subsumesContentInstance(V__TEXT,V__CONTENT)
          & s__instance(V__CONTENT,s__Formula) )
       => s__believes(V__AGENT,V__CONTENT) ) ) ).

fof(kb_SUMO_6332,axiom,
    s__subclass(s__FictionalText,s__Text) ).

fof(kb_SUMO_6333,axiom,
    s__instance(s__FictionalText__t,s__SetOrClass) ).

fof(kb_SUMO_6334,axiom,
    s__documentation(s__FictionalText,s__EnglishLanguage,'The class of &%Texts that purport to be largely a product of the authors imagination, i.e. the author does not believe that most of the content conveyed by the text is an accurate depiction of the real world. Note that something can be an instance of &%FictionalText, even if it is completely true. Whether something is a &%FictionalText is determined by the beliefs of the agent creating the text.') ).

fof(kb_SUMO_6335,axiom,
    ! [V__CLASS,V__AGENT,V__TEXT] :
      ( ( s__instance(V__TEXT,s__ContentBearingPhysical)
        & s__instance(V__AGENT,s__CognitiveAgent)
        & s__subclass(V__CLASS,s__Text)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__instance(V__TEXT,V__CLASS)
          & s__subclass(V__CLASS,s__FictionalText)
          & s__authors(V__AGENT,V__CLASS) )
       => ? [V__CONTENT] :
            ( s__subsumesContentInstance(V__TEXT,V__CONTENT)
            & s__instance(V__CONTENT,s__Formula)
            & ~ s__believes(V__AGENT,V__CONTENT) ) ) ) ).

fof(kb_SUMO_6336,axiom,
    s__subclass(s__Sentence,s__LinguisticExpression) ).

fof(kb_SUMO_6337,axiom,
    s__instance(s__Sentence__t,s__SetOrClass) ).

fof(kb_SUMO_6338,axiom,
    s__documentation(s__Sentence,s__EnglishLanguage,'A syntactically well-formed formula of a &%Language. It includes, at minimum, a predicate and a subject (which may be explicit or implicit), and it expresses a &%Proposition.') ).

fof(kb_SUMO_6339,axiom,
    ! [V__SENT] :
      ( s__instance(V__SENT,s__ContentBearingPhysical)
     => ( s__instance(V__SENT,s__Sentence)
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Proposition)
            & s__containsInformation(V__SENT,V__PROP) ) ) ) ).

fof(kb_SUMO_6340,axiom,
    s__instance(s__authors__m,s__BinaryPredicate) ).

fof(kb_SUMO_6341,axiom,
    s__instance(s__authors__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6342,axiom,
    s__domain(s__authors__m,"1",s__Agent) ).

fof(kb_SUMO_6343,axiom,
    s__domainSubclass(s__authors__m,"2",s__Text) ).

fof(kb_SUMO_6344,axiom,
    s__documentation(s__authors__m,s__EnglishLanguage,'(&%authors ?AGENT ?TEXTCLASS) means that ?AGENT is creatively responsible for the content of all instances of ?TEXTCLASS. For example, Agatha Christie is author of Murder_on_the_Orient_Express.') ).

fof(kb_SUMO_6345,axiom,
    ! [V__TEXTCLASS,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__subclass(V__TEXTCLASS,s__Text)
        & s__instance(V__TEXTCLASS,s__SetOrClass) )
     => ( s__authors(V__AGENT,V__TEXTCLASS)
       => ? [V__PROCESS,V__INSTANCE] :
            ( s__instance(V__PROCESS,s__Process)
            & s__agent(V__PROCESS,V__AGENT)
            & s__instance(V__INSTANCE,V__TEXTCLASS)
            & s__result(V__PROCESS,V__INSTANCE) ) ) ) ).

fof(kb_SUMO_6346,axiom,
    s__instance(s__editor__m,s__BinaryPredicate) ).

fof(kb_SUMO_6347,axiom,
    s__instance(s__editor__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6348,axiom,
    s__domain(s__editor__m,"1",s__Agent) ).

fof(kb_SUMO_6349,axiom,
    s__domainSubclass(s__editor__m,"2",s__Text) ).

fof(kb_SUMO_6350,axiom,
    s__documentation(s__editor__m,s__EnglishLanguage,'(&%editor ?AGENT ?TEXTCLASS) means that ?AGENT is an editor of the content contained (or realized) in all instances of ?TEXTCLASS.') ).

fof(kb_SUMO_6351,axiom,
    s__instance(s__publishes__m,s__BinaryPredicate) ).

fof(kb_SUMO_6352,axiom,
    s__instance(s__publishes__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6353,axiom,
    s__domain(s__publishes__m,"1",s__Organization) ).

fof(kb_SUMO_6354,axiom,
    s__domainSubclass(s__publishes__m,"2",s__Text) ).

fof(kb_SUMO_6355,axiom,
    s__documentation(s__publishes__m,s__EnglishLanguage,'(&%publishes ?ORG ?TEXTCLASS) means that ?ORG publishes all instances of ?TEXTCLASS. For example, Bantam Books publishes Agatha Christies Murder_on_the_Orient_Express.') ).

fof(kb_SUMO_6356,axiom,
    ! [V__TEXTCLASS,V__ORG,V__INST] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__subclass(V__TEXTCLASS,s__Text)
        & s__instance(V__TEXTCLASS,s__SetOrClass) )
     => ( ( s__publishes(V__ORG,V__TEXTCLASS)
          & s__instance(V__INST,V__TEXTCLASS) )
       => ? [V__PUB] :
            ( s__instance(V__PUB,s__Process)
            & s__instance(V__PUB,s__Publication)
            & s__agent(V__PUB,V__ORG)
            & s__patient(V__PUB,V__INST) ) ) ) ).

fof(kb_SUMO_6357,axiom,
    s__instance(s__EditionFn__m,s__BinaryFunction) ).

fof(kb_SUMO_6358,axiom,
    s__instance(s__EditionFn__m,s__PartialValuedRelation) ).

fof(kb_SUMO_6359,axiom,
    s__domainSubclass(s__EditionFn__m,"1",s__ContentBearingObject) ).

fof(kb_SUMO_6360,axiom,
    s__domain(s__EditionFn__m,"2",s__PositiveInteger) ).

fof(kb_SUMO_6361,axiom,
    s__rangeSubclass(s__EditionFn__m,s__ContentBearingObject) ).

fof(kb_SUMO_6362,axiom,
    s__documentation(s__EditionFn__m,s__EnglishLanguage,'A &%BinaryFunction that maps a type of text (e.g. Agatha Christies Murder_on_the_Orient_Express) and a number to the edition of the text type corresponding to the number.') ).

fof(kb_SUMO_6363,axiom,
    ! [V__CBO1,V__CBO2,V__PUB1,V__EDITION1,V__EDITION2,V__PUB2,V__INT2,V__DATE2,V__INT1,V__DATE1,V__TEXT] :
      ( ( s__subclass(V__TEXT,s__ContentBearingObject)
        & s__instance(V__TEXT,s__SetOrClass)
        & s__instance(V__DATE1,s__Day)
        & s__instance(V__INT1,s__PositiveInteger)
        & s__instance(V__DATE2,s__Day)
        & s__instance(V__INT2,s__PositiveInteger)
        & s__instance(V__PUB2,s__Process)
        & s__instance(V__EDITION2,s__SetOrClass)
        & s__instance(V__EDITION1,s__SetOrClass)
        & s__instance(V__PUB1,s__Process) )
     => ( ( s__EditionFn(V__TEXT,V__INT1) = V__EDITION1
          & s__EditionFn(V__TEXT,V__INT2) = V__EDITION2
          & greater(V__INT2,V__INT1)
          & s__instance(V__PUB1,s__Publication)
          & s__instance(V__PUB2,s__Publication)
          & s__instance(V__CBO1,V__EDITION1)
          & s__instance(V__CBO2,V__EDITION2)
          & s__patient(V__PUB1,V__CBO1)
          & s__patient(V__PUB2,V__CBO2)
          & s__date(V__PUB1,V__DATE1)
          & s__date(V__PUB2,V__DATE2) )
       => s__before(s__EndFn(V__DATE1),s__EndFn(V__DATE2)) ) ) ).

fof(kb_SUMO_6364,axiom,
    ! [V__NUMBER,V__TEXT2,V__TEXT1] :
      ( ( s__subclass(V__TEXT1,s__ContentBearingObject)
        & s__instance(V__TEXT1,s__SetOrClass)
        & s__subclass(V__TEXT2,s__ContentBearingPhysical)
        & s__instance(V__TEXT2,s__SetOrClass)
        & s__instance(V__NUMBER,s__PositiveInteger) )
     => ( s__EditionFn(V__TEXT1,V__NUMBER) = V__TEXT2
       => s__subsumesContentClass(V__TEXT1,V__TEXT2) ) ) ).

fof(kb_SUMO_6365,axiom,
    s__subclass(s__Summary,s__Text) ).

fof(kb_SUMO_6366,axiom,
    s__instance(s__Summary__t,s__SetOrClass) ).

fof(kb_SUMO_6367,axiom,
    s__documentation(s__Summary,s__EnglishLanguage,'A short &%Text that is a summary of another, longer &%Text.') ).

fof(kb_SUMO_6368,axiom,
    ! [V__TEXT] :
      ( s__instance(V__TEXT,s__ContentBearingPhysical)
     => ( s__instance(V__TEXT,s__Summary)
       => ? [V__TEXT2] :
            ( s__instance(V__TEXT2,s__ContentBearingPhysical)
            & s__instance(V__TEXT2,s__Text)
            & s__subsumesContentInstance(V__TEXT2,V__TEXT) ) ) ) ).

fof(kb_SUMO_6369,axiom,
    s__subclass(s__Certificate,s__Text) ).

fof(kb_SUMO_6370,axiom,
    s__instance(s__Certificate__t,s__SetOrClass) ).

fof(kb_SUMO_6371,axiom,
    s__documentation(s__Certificate,s__EnglishLanguage,'A &%Text that confers a right or obligation on the holder of the &%Certificate. Note that the right or obligation need not be a legal one, as in the case of an academic diploma that grants certain privileges in the professional world.') ).

fof(kb_SUMO_6372,axiom,
    ! [V__DOC] :
      ( s__instance(V__DOC,s__Certificate)
     => ? [V__PROP,V__NORM] :
          ( s__instance(V__NORM,s__ObjectiveNorm)
          & s__instance(V__PROP,s__Formula)
          & ( s__confersNorm(V__DOC,V__PROP,V__NORM)
            | s__deprivesNorm(V__DOC,V__PROP,V__NORM) ) ) ) ).

fof(kb_SUMO_6373,axiom,
    s__subclass(s__FinancialInstrument,s__Certificate) ).

fof(kb_SUMO_6374,axiom,
    s__instance(s__FinancialInstrument__t,s__SetOrClass) ).

fof(kb_SUMO_6375,axiom,
    s__documentation(s__FinancialInstrument,s__EnglishLanguage,'A document having monetary value or recording a monetary transaction') ).

fof(kb_SUMO_6376,axiom,
    s__subclass(s__Currency,s__FinancialInstrument) ).

fof(kb_SUMO_6377,axiom,
    s__instance(s__Currency__t,s__SetOrClass) ).

fof(kb_SUMO_6378,axiom,
    s__documentation(s__Currency,s__EnglishLanguage,'Any element of the official currrency of some &%Nation. This covers both &%CurrencyBills and &%CurrencyCoins.') ).

fof(kb_SUMO_6379,axiom,
    ! [V__CURRENCY] :
      ( s__instance(V__CURRENCY,s__Physical)
     => ( s__instance(V__CURRENCY,s__Currency)
       => ? [V__MEASURE] :
            ( s__instance(V__MEASURE,s__CurrencyMeasure)
            & s__monetaryValue(V__CURRENCY,V__MEASURE) ) ) ) ).

fof(kb_SUMO_6380,axiom,
    s__subclass(s__Patent,s__Certificate) ).

fof(kb_SUMO_6381,axiom,
    s__instance(s__Patent__t,s__SetOrClass) ).

fof(kb_SUMO_6382,axiom,
    s__documentation(s__Patent,s__EnglishLanguage,'A &%Certificate that expresses the content of an invention that has been accorded legal protection by a governemental entity.') ).

fof(kb_SUMO_6383,axiom,
    s__subclass(s__Molecule,s__CompoundSubstance) ).

fof(kb_SUMO_6384,axiom,
    s__instance(s__Molecule__t,s__SetOrClass) ).

fof(kb_SUMO_6385,axiom,
    s__instance(s__CompoundSubstance__t,s__SetOrClass) ).

fof(kb_SUMO_6386,axiom,
    s__documentation(s__Molecule,s__EnglishLanguage,'A molecule is the smallest unit of matter of a &%CompoundSubstance that retains all the physical and chemical properties of that substance, e.g., Ne, H2, H2O. A molecule is two or more &%Atoms linked by a chemical bond.') ).

fof(kb_SUMO_6387,axiom,
    ! [V__MOLE] :
      ( s__instance(V__MOLE,s__Object)
     => ( s__instance(V__MOLE,s__Molecule)
       => ? [V__ATOM1,V__ATOM2] :
            ( s__instance(V__ATOM2,s__Object)
            & s__instance(V__ATOM1,s__Object)
            & s__instance(V__ATOM1,s__Atom)
            & s__instance(V__ATOM2,s__Atom)
            & s__part(V__ATOM1,V__MOLE)
            & s__part(V__ATOM2,V__MOLE)
            & V__ATOM1 != V__ATOM2 ) ) ) ).

fof(kb_SUMO_6388,axiom,
    s__subclass(s__Artifact,s__Object) ).

fof(kb_SUMO_6389,axiom,
    s__instance(s__Object__t,s__SetOrClass) ).

fof(kb_SUMO_6390,axiom,
    s__documentation(s__Artifact,s__EnglishLanguage,'An &%Object that is the product of a &%Making.') ).

fof(kb_SUMO_6391,axiom,
    ! [V__ARTIFACT] :
      ( s__instance(V__ARTIFACT,s__Artifact)
    <=> ? [V__MAKING] :
          ( s__instance(V__MAKING,s__Process)
          & s__instance(V__MAKING,s__Making)
          & s__result(V__MAKING,V__ARTIFACT) ) ) ).

fof(kb_SUMO_6392,axiom,
    s__subclass(s__Product,s__Artifact) ).

fof(kb_SUMO_6393,axiom,
    s__instance(s__Product__t,s__SetOrClass) ).

fof(kb_SUMO_6394,axiom,
    s__documentation(s__Product,s__EnglishLanguage,'An &%Artifact that is produced by &%Manufacture.') ).

fof(kb_SUMO_6395,axiom,
    ! [V__PRODUCT] :
      ( s__instance(V__PRODUCT,s__Product)
     => ? [V__MANUFACTURE] :
          ( s__instance(V__MANUFACTURE,s__Process)
          & s__instance(V__MANUFACTURE,s__Manufacture)
          & s__result(V__MANUFACTURE,V__PRODUCT) ) ) ).

fof(kb_SUMO_6396,axiom,
    s__instance(s__version__m,s__BinaryPredicate) ).

fof(kb_SUMO_6397,axiom,
    s__instance(s__version__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6398,axiom,
    s__instance(s__version__m,s__TransitiveRelation) ).

fof(kb_SUMO_6399,axiom,
    s__domainSubclass(s__version__m,"1",s__Artifact) ).

fof(kb_SUMO_6400,axiom,
    s__domainSubclass(s__version__m,"2",s__Artifact) ).

fof(kb_SUMO_6401,axiom,
    s__documentation(s__version__m,s__EnglishLanguage,'Some &%Artifacts have a life cycle with discrete stages or versions. (&%version ARTIFACT1 ARTIFACT2) means that ARTIFACT1 is a version of ARTIFACT2. Note that this &%Predicate relates subclasses of &%Artifact and not instances.') ).

fof(kb_SUMO_6402,axiom,
    ! [V__ARTIFACT1,V__ARTIFACT2] :
      ( ( s__subclass(V__ARTIFACT2,s__Artifact)
        & s__instance(V__ARTIFACT2,s__SetOrClass)
        & s__subclass(V__ARTIFACT1,s__Artifact)
        & s__instance(V__ARTIFACT1,s__SetOrClass) )
     => ( s__version(V__ARTIFACT1,V__ARTIFACT2)
       => s__subclass(V__ARTIFACT1,V__ARTIFACT2) ) ) ).

fof(kb_SUMO_6403,axiom,
    s__subclass(s__StationaryArtifact,s__Artifact) ).

fof(kb_SUMO_6404,axiom,
    s__documentation(s__StationaryArtifact,s__EnglishLanguage,'A &%StationaryArtifact is an &%Artifact that has a fixed spatial location. Most instances of this &%Class are architectural works, e.g. the Eiffel Tower, the Great Pyramids, office towers, single-family houses, etc.') ).

%FOL fof(kb_SUMO_6405,axiom,(( (! [V__ARTIFACT] : (s__instance(V__ARTIFACT,s__Physical) => (s__instance(V__ARTIFACT,s__StationaryArtifact) => (? [V__PLACE] : (s__holdsDuring(s__WhenFn(V__ARTIFACT),'s__located(V__ARTIFACT,V__PLACE)') & (~ (? [V__P2] : (s__instance(V__P2,s__Object) & s__instance(V__PLACE,s__Object) & s__holdsDuring(s__WhenFn(V__ARTIFACT),'s__located(V__ARTIFACT,V__P2)') & (~ (V__PLACE = V__P2)))))))))) ))).

fof(kb_SUMO_6406,axiom,
    s__subclass(s__Building,s__StationaryArtifact) ).

fof(kb_SUMO_6407,axiom,
    s__instance(s__Building__t,s__SetOrClass) ).

fof(kb_SUMO_6408,axiom,
    s__documentation(s__Building,s__EnglishLanguage,'The Class of &%StationaryArtifacts which are intended to house &%Humans and their activities.') ).

fof(kb_SUMO_6409,axiom,
    ! [V__BUILDING] :
      ( s__instance(V__BUILDING,s__Object)
     => ( s__instance(V__BUILDING,s__Building)
       => ? [V__HUMAN] :
            ( s__instance(V__HUMAN,s__Human)
            & ( s__inhabits(V__HUMAN,V__BUILDING)
              | ? [V__ACT] :
                  ( s__instance(V__ACT,s__Process)
                  & s__instance(V__HUMAN,s__Organism)
                  & s__agent(V__ACT,V__HUMAN)
                  & s__located(V__ACT,V__BUILDING) ) ) ) ) ) ).

fof(kb_SUMO_6410,axiom,
    s__subclass(s__Room,s__StationaryArtifact) ).

fof(kb_SUMO_6411,axiom,
    s__instance(s__Room__t,s__SetOrClass) ).

fof(kb_SUMO_6412,axiom,
    s__instance(s__StationaryArtifact__t,s__SetOrClass) ).

fof(kb_SUMO_6413,axiom,
    s__disjoint(s__Room,s__Building) ).

fof(kb_SUMO_6414,axiom,
    s__documentation(s__Room,s__EnglishLanguage,'A &%properPart of a &%Building which is separated from the exterior of the &%Building and/or other &%Rooms of the &%Building by walls. Some &%Rooms may have a specific purpose, e.g. sleeping, bathing, cooking, entertainment, etc.') ).

fof(kb_SUMO_6415,axiom,
    ! [V__ROOM] :
      ( s__instance(V__ROOM,s__Object)
     => ( s__instance(V__ROOM,s__Room)
       => ? [V__BUILD] :
            ( s__instance(V__BUILD,s__Object)
            & s__instance(V__BUILD,s__Building)
            & s__properPart(V__ROOM,V__BUILD) ) ) ) ).

fof(kb_SUMO_6416,axiom,
    s__subclass(s__House,s__ResidentialBuilding) ).

fof(kb_SUMO_6417,axiom,
    s__instance(s__ResidentialBuilding__t,s__SetOrClass) ).

fof(kb_SUMO_6418,axiom,
    s__subclass(s__House,s__SingleFamilyResidence) ).

fof(kb_SUMO_6419,axiom,
    s__instance(s__House__t,s__SetOrClass) ).

fof(kb_SUMO_6420,axiom,
    s__instance(s__SingleFamilyResidence__t,s__SetOrClass) ).

fof(kb_SUMO_6421,axiom,
    s__documentation(s__House,s__EnglishLanguage,'A &%ResidentialBuilding which is intended to be inhabited by members of the same &%SocialUnit. &%Houses are distinguished from temporary housing like hotels and multi-family dwellings like condominium and apartment buildings.') ).

fof(kb_SUMO_6422,axiom,
    s__subclass(s__Residence,s__StationaryArtifact) ).

fof(kb_SUMO_6423,axiom,
    s__partition_3(s__Residence,s__PermanentResidence,s__TemporaryResidence) ).

fof(kb_SUMO_6424,axiom,
    s__documentation(s__Residence,s__EnglishLanguage,'A &%Building or part of a &%Building which provides some accomodation for sleeping.') ).

fof(kb_SUMO_6425,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__Object)
     => ( s__instance(V__RESIDENCE,s__Residence)
       => ( s__instance(V__RESIDENCE,s__House)
          | ? [V__BUILDING] :
              ( s__instance(V__BUILDING,s__Object)
              & s__instance(V__BUILDING,s__ResidentialBuilding)
              & s__part(V__RESIDENCE,V__BUILDING) ) ) ) ) ).

fof(kb_SUMO_6426,axiom,
    s__subclass(s__PermanentResidence,s__Residence) ).

fof(kb_SUMO_6427,axiom,
    s__instance(s__PermanentResidence__t,s__SetOrClass) ).

fof(kb_SUMO_6428,axiom,
    s__instance(s__Residence__t,s__SetOrClass) ).

fof(kb_SUMO_6429,axiom,
    s__documentation(s__PermanentResidence,s__EnglishLanguage,'A &%Residence where people live, i.e. where people have a &%home.') ).

fof(kb_SUMO_6430,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__PermanentResidence)
     => ? [V__PERSON] :
          ( s__instance(V__PERSON,s__Human)
          & s__home(V__PERSON,V__RESIDENCE) ) ) ).

fof(kb_SUMO_6431,axiom,
    s__subclass(s__TemporaryResidence,s__Residence) ).

fof(kb_SUMO_6432,axiom,
    s__instance(s__TemporaryResidence__t,s__SetOrClass) ).

fof(kb_SUMO_6433,axiom,
    s__documentation(s__TemporaryResidence,s__EnglishLanguage,'A &%Residence which is strictly temporary, i.e. where no one makes his/her &%home.') ).

fof(kb_SUMO_6434,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__PermanentResidence)
     => ( s__instance(V__RESIDENCE,s__TemporaryResidence)
       => ~ ? [V__PERSON] :
              ( s__instance(V__PERSON,s__Human)
              & s__home(V__PERSON,V__RESIDENCE) ) ) ) ).

fof(kb_SUMO_6435,axiom,
    s__subclass(s__ResidentialBuilding,s__Building) ).

fof(kb_SUMO_6436,axiom,
    s__subclass(s__ResidentialBuilding,s__Residence) ).

fof(kb_SUMO_6437,axiom,
    s__documentation(s__ResidentialBuilding,s__EnglishLanguage,'A &%Building which provides some accomodation for sleeping. Note that this class does not cover just permanent residences, e.g. &%Houses and condominium and apartment buildings, but also temporary residences, e.g. hotels and dormitories. &%ResidentialBuildings are also distinguished from &%CommercialBuildings, which are intended to serve an organizational rather than a residential function.') ).

fof(kb_SUMO_6438,axiom,
    s__subclass(s__SingleFamilyResidence,s__PermanentResidence) ).

fof(kb_SUMO_6439,axiom,
    s__documentation(s__SingleFamilyResidence,s__EnglishLanguage,'A &%PermanentResidence which is intended to be the &%home of a single &%SocialUnit. This class covers &%Houses, &%ApartmentUnits, and &%CondominiumUnits.') ).

fof(kb_SUMO_6440,axiom,
    ! [V__RESIDENCE] :
      ( s__instance(V__RESIDENCE,s__SingleFamilyResidence)
     => s__hasPurpose(V__RESIDENCE,'(! [V__AGENT1,V__AGENT2] : ((s__instance(V__AGENT2,s__Human) & s__instance(V__AGENT1,s__Human) & s__instance(V__RESIDENCE,s__PermanentResidence)) => ((s__home(V__AGENT1,V__RESIDENCE) & s__home(V__AGENT2,V__RESIDENCE)) => (? [V__UNIT] : (s__instance(V__UNIT,s__Collection) & s__instance(V__UNIT,s__SocialUnit) & s__member(V__AGENT1,V__UNIT) & s__member(V__AGENT2,V__UNIT))))))') ) ).

fof(kb_SUMO_6441,axiom,
    s__subclass(s__ArtWork,s__Artifact) ).

fof(kb_SUMO_6442,axiom,
    s__instance(s__ArtWork__t,s__SetOrClass) ).

fof(kb_SUMO_6443,axiom,
    s__documentation(s__ArtWork,s__EnglishLanguage,'&%Artifacts that are created primarily for aesthetic appreciation. Note that this &%Class does not include most examples of architecture, which belong under &%StationaryArtifact.') ).

fof(kb_SUMO_6444,axiom,
    s__subclass(s__RepresentationalArtWork,s__ArtWork) ).

fof(kb_SUMO_6445,axiom,
    s__subclass(s__RepresentationalArtWork,s__Icon) ).

fof(kb_SUMO_6446,axiom,
    s__instance(s__RepresentationalArtWork__t,s__SetOrClass) ).

fof(kb_SUMO_6447,axiom,
    s__documentation(s__RepresentationalArtWork,s__EnglishLanguage,'Any &%ArtWork that represents something &%Physical.') ).

fof(kb_SUMO_6448,axiom,
    s__subclass(s__Fabric,s__Artifact) ).

fof(kb_SUMO_6449,axiom,
    s__instance(s__Fabric__t,s__SetOrClass) ).

fof(kb_SUMO_6450,axiom,
    s__disjoint(s__Fabric,s__StationaryArtifact) ).

fof(kb_SUMO_6451,axiom,
    s__documentation(s__Fabric,s__EnglishLanguage,'&%Artifacts that are created by weaving together natural or synthetic fibers or by treating the skins of certain sorts of &%Animals. Note that this &%Class includes articles that are created by stitching together various types of fabrics, e.g. bedspreads. On the other hand, &%Clothing is not a &%subclass of &%Fabric, because many clothing items contain elements that are not fabrics.') ).

fof(kb_SUMO_6452,axiom,
    s__subclass(s__WearableItem,s__Artifact) ).

fof(kb_SUMO_6453,axiom,
    s__documentation(s__WearableItem,s__EnglishLanguage,'&%WearableItem is the subclass of &%Artifacts that are made to be worn on the body.') ).

fof(kb_SUMO_6454,axiom,
    s__subclass(s__Clothing,s__WearableItem) ).

fof(kb_SUMO_6455,axiom,
    s__instance(s__Clothing__t,s__SetOrClass) ).

fof(kb_SUMO_6456,axiom,
    s__instance(s__WearableItem__t,s__SetOrClass) ).

fof(kb_SUMO_6457,axiom,
    s__disjoint(s__Clothing,s__StationaryArtifact) ).

fof(kb_SUMO_6458,axiom,
    s__documentation(s__Clothing,s__EnglishLanguage,'&%Artifact made out of fabrics and possibly other materials that are used to cover the bodies of &%Humans.') ).

fof(kb_SUMO_6459,axiom,
    ! [V__CLOTHING] :
      ( s__instance(V__CLOTHING,s__Object)
     => ( s__instance(V__CLOTHING,s__Clothing)
       => ? [V__FABRIC] :
            ( s__instance(V__FABRIC,s__Object)
            & s__instance(V__FABRIC,s__Fabric)
            & s__part(V__FABRIC,V__CLOTHING) ) ) ) ).

fof(kb_SUMO_6460,axiom,
    s__instance(s__wears__m,s__BinaryPredicate) ).

fof(kb_SUMO_6461,axiom,
    s__domain(s__wears__m,"1",s__Animal) ).

fof(kb_SUMO_6462,axiom,
    s__domain(s__wears__m,"2",s__WearableItem) ).

fof(kb_SUMO_6463,axiom,
    s__documentation(s__wears__m,s__EnglishLanguage,'(&%wears ?AGENT ?WI) means that ?AGENT is wearing the &%WearableItem item ?WI.') ).

fof(kb_SUMO_6464,axiom,
    ! [V__WI,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Animal)
        & s__instance(V__WI,s__WearableItem) )
     => ( s__wears(V__AGENT,V__WI)
       => s__located(V__WI,V__AGENT) ) ) ).

fof(kb_SUMO_6465,axiom,
    ! [V__P,V__A,V__C] :
      ( ( s__instance(V__C,s__WearableItem)
        & s__instance(V__A,s__Animal)
        & s__instance(V__P,s__WearableItem) )
     => ( ( s__wears(V__A,V__C)
          & s__part(V__P,V__C) )
       => s__wears(V__A,V__P) ) ) ).

fof(kb_SUMO_6466,axiom,
    s__subclass(s__Device,s__Artifact) ).

fof(kb_SUMO_6467,axiom,
    s__documentation(s__Device,s__EnglishLanguage,'A &%Device is an &%Artifact whose purpose is to serve as an &%instrument in a specific subclass of &%Process.') ).

fof(kb_SUMO_6468,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__Device)
       => ? [V__PROC] :
            ( s__subclass(V__PROC,s__Process)
            & s__capability(V__PROC,s__instrument__m,V__DEVICE) ) ) ) ).

fof(kb_SUMO_6469,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__Device)
       => ? [V__PROC] : s__hasPurpose(V__DEVICE,'(? [V__INST] : (s__instance(V__INST,s__Process) & s__instance(V__PROC,s__SetOrClass) & s__instance(V__INST,V__PROC) & s__instrument(V__INST,V__DEVICE)))') ) ) ).

fof(kb_SUMO_6470,axiom,
    s__subclass(s__MusicalInstrument,s__Device) ).

fof(kb_SUMO_6471,axiom,
    s__instance(s__MusicalInstrument__t,s__SetOrClass) ).

fof(kb_SUMO_6472,axiom,
    s__documentation(s__MusicalInstrument,s__EnglishLanguage,'A &%Device which is manipulated by a &%Human and whose purpose is &%MakingMusic.') ).

fof(kb_SUMO_6473,axiom,
    ! [V__INSTRUMENT] :
      ( s__instance(V__INSTRUMENT,s__Object)
     => ( s__instance(V__INSTRUMENT,s__MusicalInstrument)
       => s__capability(s__MakingMusic,s__instrument__m,V__INSTRUMENT) ) ) ).

fof(kb_SUMO_6474,axiom,
    s__subclass(s__TransportationDevice,s__Device) ).

fof(kb_SUMO_6475,axiom,
    s__instance(s__TransportationDevice__t,s__SetOrClass) ).

fof(kb_SUMO_6476,axiom,
    s__documentation(s__TransportationDevice,s__EnglishLanguage,'A &%TransportationDevice is a &%Device which serves as the &%instrument in a &%Transportation &%Process which carries the &%patient of the &%Process from one point to another.') ).

fof(kb_SUMO_6477,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__TransportationDevice)
       => s__capability(s__Transportation,s__instrument__m,V__DEVICE) ) ) ).

fof(kb_SUMO_6478,axiom,
    s__subclass(s__Vehicle,s__TransportationDevice) ).

fof(kb_SUMO_6479,axiom,
    s__instance(s__Vehicle__t,s__SetOrClass) ).

fof(kb_SUMO_6480,axiom,
    s__documentation(s__Vehicle,s__EnglishLanguage,'&%Vehicle is the subclass of &%TransportationDevices that transport passengers or goods from one place to another by moving from one place to the other with them, e.g., cars, trucks, ferries, and airplanes. Contrast with devices such as pipelines, escalators, or supermarket checkout belts, which carry items from one place to another by means of a moving part, without the device removing from the origin to the destination.') ).

%FOL fof(kb_SUMO_6481,axiom,(( (! [V__FROM,V__TRANSPORT,V__MOVE] : ((s__instance(V__MOVE,s__Process) & s__instance(V__TRANSPORT,s__Object) & s__instance(V__FROM,s__Object)) => ((s__instance(V__TRANSPORT,s__Vehicle) & s__instance(V__MOVE,s__Translocation) & s__instrument(V__MOVE,V__TRANSPORT) & s__origin(V__MOVE,V__FROM)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOVE)),'s__located(V__TRANSPORT,V__FROM)')))) ))).

%FOL fof(kb_SUMO_6482,axiom,(( (! [V__TO,V__TRANSPORT,V__MOVE] : ((s__instance(V__MOVE,s__Process) & s__instance(V__TRANSPORT,s__Object) & s__instance(V__TO,s__Object)) => ((s__instance(V__TRANSPORT,s__Vehicle) & s__instance(V__MOVE,s__Translocation) & s__instrument(V__MOVE,V__TRANSPORT) & s__destination(V__MOVE,V__TO)) => s__holdsDuring(s__BeginFn(s__WhenFn(V__MOVE)),'s__located(V__TRANSPORT,V__TO)')))) ))).

fof(kb_SUMO_6483,axiom,
    s__subclass(s__MeasuringDevice,s__Device) ).

fof(kb_SUMO_6484,axiom,
    s__instance(s__MeasuringDevice__t,s__SetOrClass) ).

fof(kb_SUMO_6485,axiom,
    s__documentation(s__MeasuringDevice,s__EnglishLanguage,'Any &%Device whose purpose is to measure a &%PhysicalQuantity.') ).

fof(kb_SUMO_6486,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__MeasuringDevice)
       => s__hasPurpose(V__DEVICE,'(? [V__MEASURE] : (s__instance(V__MEASURE,s__Process) & s__instance(V__MEASURE,s__Measuring) & s__instrument(V__MEASURE,V__DEVICE)))') ) ) ).

fof(kb_SUMO_6487,axiom,
    s__subclass(s__AttachingDevice,s__Device) ).

fof(kb_SUMO_6488,axiom,
    s__instance(s__AttachingDevice__t,s__SetOrClass) ).

fof(kb_SUMO_6489,axiom,
    s__documentation(s__AttachingDevice,s__EnglishLanguage,'A &%Device whose purpose is to attach one thing to something else, e.g. nails, screws, buttons, etc.') ).

fof(kb_SUMO_6490,axiom,
    ! [V__DEVICE] :
      ( s__instance(V__DEVICE,s__Object)
     => ( s__instance(V__DEVICE,s__AttachingDevice)
       => ? [V__ATTACH] :
            ( s__instance(V__ATTACH,s__Process)
            & s__instance(V__ATTACH,s__Attaching)
            & s__instrument(V__ATTACH,V__DEVICE) ) ) ) ).

fof(kb_SUMO_6491,axiom,
    s__subclass(s__Weapon,s__Device) ).

fof(kb_SUMO_6492,axiom,
    s__instance(s__Weapon__t,s__SetOrClass) ).

fof(kb_SUMO_6493,axiom,
    s__documentation(s__Weapon,s__EnglishLanguage,'The &%Class of &%Devices that are designed primarily to damage or destroy &%Humans/&%Animals, &%StationaryArtifacts or the places inhabited by &%Humans/&%Animals.') ).

fof(kb_SUMO_6494,axiom,
    ! [V__WEAPON] :
      ( s__instance(V__WEAPON,s__Object)
     => ( s__instance(V__WEAPON,s__Weapon)
       => s__capability(s__Damaging,s__instrument__m,V__WEAPON) ) ) ).

fof(kb_SUMO_6495,axiom,
    ! [V__WEAPON] :
      ( s__instance(V__WEAPON,s__Object)
     => ( s__instance(V__WEAPON,s__Weapon)
       => s__hasPurpose(V__WEAPON,'(? [V__D,V__PATIENT] : (s__instance(V__D,s__Process) & s__instance(V__D,s__Damaging) & s__instrument(V__D,V__WEAPON) & s__patient(V__D,V__PATIENT)))') ) ) ).

fof(kb_SUMO_6496,axiom,
    s__subclass(s__Machine,s__Device) ).

fof(kb_SUMO_6497,axiom,
    s__instance(s__Machine__t,s__SetOrClass) ).

fof(kb_SUMO_6498,axiom,
    s__instance(s__Device__t,s__SetOrClass) ).

fof(kb_SUMO_6499,axiom,
    s__documentation(s__Machine,s__EnglishLanguage,'&%Machines are &%Devices that that have a well-defined &%resource and &%result and that automatically convert the &%resource into the &%result.') ).

fof(kb_SUMO_6500,axiom,
    ! [V__MACHINE] :
      ( s__instance(V__MACHINE,s__Machine)
     => ! [V__PROC] :
          ( ( s__instance(V__PROC,s__Process)
            & s__instance(V__MACHINE,s__Object) )
         => ( s__instrument(V__PROC,V__MACHINE)
           => ? [V__RESOURCE,V__RESULT] :
                ( s__instance(V__RESOURCE,s__Object)
                & s__resource(V__PROC,V__RESOURCE)
                & s__result(V__PROC,V__RESULT) ) ) ) ) ).

fof(kb_SUMO_6501,axiom,
    s__subclass(s__EngineeringComponent,s__Device) ).

fof(kb_SUMO_6502,axiom,
    s__documentation(s__EngineeringComponent,s__EnglishLanguage,'A fundamental concept that applies in many engineering domains. An &%EngineeringComponent is an element of a &%Device that is a physically whole object, such as one might see listed as standard parts in a catalog. The main difference betweeen &%EngineeringComponents and arbitrary globs of matter is that &%EngineeringComponents are object-like in a modeling sense. Thus, an &%EngineeringComponent is not an arbtrary subregion, but a part of a system with a stable identity.') ).

fof(kb_SUMO_6503,axiom,
    ! [V__COMP] :
      ( s__instance(V__COMP,s__CorpuscularObject)
     => ( s__instance(V__COMP,s__EngineeringComponent)
       => ? [V__DEVICE] :
            ( s__instance(V__DEVICE,s__CorpuscularObject)
            & s__instance(V__DEVICE,s__Device)
            & s__component(V__COMP,V__DEVICE) ) ) ) ).

fof(kb_SUMO_6504,axiom,
    ! [V__MACHINE] :
      ( s__instance(V__MACHINE,s__Object)
     => ( s__instance(V__MACHINE,s__Machine)
       => ? [V__COMP1,V__COMP2] :
            ( s__instance(V__COMP2,s__Object)
            & s__instance(V__COMP1,s__Object)
            & s__instance(V__COMP1,s__EngineeringComponent)
            & s__instance(V__COMP2,s__EngineeringComponent)
            & V__COMP1 != V__COMP2
            & s__part(V__COMP1,V__MACHINE)
            & s__part(V__COMP2,V__MACHINE) ) ) ) ).

fof(kb_SUMO_6505,axiom,
    s__subrelation(s__engineeringSubcomponent__m,s__properPart__m) ).

fof(kb_SUMO_6506,axiom,
    s__domain(s__engineeringSubcomponent__m,"1",s__EngineeringComponent) ).

fof(kb_SUMO_6507,axiom,
    s__domain(s__engineeringSubcomponent__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_6508,axiom,
    s__documentation(s__engineeringSubcomponent__m,s__EnglishLanguage,'(&%engineeringSubcomponent ?SUB ?SUPER) means that the &%EngineeringComponent ?SUB is structurally a &%properPart of ?SUPER. This relation is an &%AsymmetricRelation, since two &%EngineeringComponents cannot be subcomponents of each other.') ).

fof(kb_SUMO_6509,axiom,
    s__instance(s__connectedEngineeringComponents__m,s__SymmetricRelation) ).

fof(kb_SUMO_6510,axiom,
    s__instance(s__connectedEngineeringComponents__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6511,axiom,
    s__subrelation(s__connectedEngineeringComponents__m,s__connected__m) ).

fof(kb_SUMO_6512,axiom,
    s__domain(s__connectedEngineeringComponents__m,"1",s__EngineeringComponent) ).

fof(kb_SUMO_6513,axiom,
    s__domain(s__connectedEngineeringComponents__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_6514,axiom,
    s__documentation(s__connectedEngineeringComponents__m,s__EnglishLanguage,'This is the most general connection relation between &%EngineeringComponents. If (&%connectedEngineeringComponents ?COMP1 ?COMP2), then neither ?COMP1 nor ?COMP2 can be an &%engineeringSubcomponent of the other. The relation &%connectedEngineeringComponents is a &%SymmetricRelation, there is no information in the direction of connection between two components. It is also an &%IrreflexiveRelation, no &%EngineeringComponent bears this relation to itself. Note that this relation does not associate a name or type with the connection.') ).

fof(kb_SUMO_6515,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
       => ( ~ s__engineeringSubcomponent(V__COMP1,V__COMP2)
          & ~ s__engineeringSubcomponent(V__COMP2,V__COMP1) ) ) ) ).

fof(kb_SUMO_6516,axiom,
    s__subclass(s__EngineeringConnection,s__EngineeringComponent) ).

fof(kb_SUMO_6517,axiom,
    s__instance(s__EngineeringConnection__t,s__SetOrClass) ).

fof(kb_SUMO_6518,axiom,
    s__instance(s__EngineeringComponent__t,s__SetOrClass) ).

fof(kb_SUMO_6519,axiom,
    s__documentation(s__EngineeringConnection,s__EnglishLanguage,'An &%EngineeringConnection is an &%EngineeringComponent that represents a connection relationship between two other &%EngineeringComponents. It is a reification of the &%Predicate &%connectedEngineeringComponents. That means that whenever this &%Predicate holds between two &%EngineeringComponents, there exists an &%EngineeringConnection. The practical reason for reifying a relationship is to be able to attach other information about it. For example, one might want to say that a particular connection is associated with some shared parameters, or that it is of a particular type. &%EngineeringConnections are &%EngineeringComponents and can therefore be an &%engineeringSubcomponent of other &%EngineeringComponents. However, to provide for modular regularity in component systems, &%EngineeringConnections cannot be connected. For each pair of &%EngineeringComponents related by &%connectedEngineeringComponents, there exists at least one &%EngineeringConnection. However, that object may not be unique, and the same &%EngineeringConnection may be associated with several pairs of &%EngineeringComponents.') ).

fof(kb_SUMO_6520,axiom,
    ! [V__CONNECTION] :
      ( s__instance(V__CONNECTION,s__EngineeringConnection)
     => ? [V__COMP1,V__COMP2] :
          ( s__instance(V__COMP2,s__EngineeringComponent)
          & s__instance(V__COMP1,s__EngineeringComponent)
          & s__connectsEngineeringComponents(V__CONNECTION,V__COMP1,V__COMP2) ) ) ).

fof(kb_SUMO_6521,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
       => ~ ( s__instance(V__COMP1,s__EngineeringConnection)
            | s__instance(V__COMP2,s__EngineeringConnection) ) ) ) ).

fof(kb_SUMO_6522,axiom,
    ! [V__COMP2,V__COMP1] :
      ( ( s__instance(V__COMP1,s__EngineeringComponent)
        & s__instance(V__COMP2,s__EngineeringComponent) )
     => ( s__connectedEngineeringComponents(V__COMP1,V__COMP2)
      <=> ? [V__CONNECTION] :
            ( s__instance(V__CONNECTION,s__EngineeringConnection)
            & s__connectsEngineeringComponents(V__CONNECTION,V__COMP1,V__COMP2) ) ) ) ).

fof(kb_SUMO_6523,axiom,
    s__subrelation(s__connectsEngineeringComponents__m,s__connects__m) ).

fof(kb_SUMO_6524,axiom,
    s__domain(s__connectsEngineeringComponents__m,"1",s__EngineeringConnection) ).

fof(kb_SUMO_6525,axiom,
    s__domain(s__connectsEngineeringComponents__m,"2",s__EngineeringComponent) ).

fof(kb_SUMO_6526,axiom,
    s__domain(s__connectsEngineeringComponents__m,"3",s__EngineeringComponent) ).

fof(kb_SUMO_6527,axiom,
    s__documentation(s__connectsEngineeringComponents__m,s__EnglishLanguage,'&%connectsEngineeringComponents is a &%TernaryPredicate that maps from an &%EngineeringConnection to the &%EngineeringComponents it connects. Since &%EngineeringComponents cannot be connected to themselves and there cannot be an &%EngineeringConnection without a &%connectedEngineeringComponents &%Predicate, the second and third arguments of any &%connectsEngineeringComponents relationship will always be distinct for any given first argument.') ).

fof(kb_SUMO_6528,axiom,
    s__subclass(s__CommercialAgent,s__Agent) ).

fof(kb_SUMO_6529,axiom,
    s__documentation(s__CommercialAgent,s__EnglishLanguage,'An &%Agent that provides products and/or services for a fee with the aim of making a profit.') ).

fof(kb_SUMO_6530,axiom,
    s__subclass(s__Business,s__CommercialAgent) ).

fof(kb_SUMO_6531,axiom,
    s__instance(s__Business__t,s__SetOrClass) ).

fof(kb_SUMO_6532,axiom,
    s__instance(s__CommercialAgent__t,s__SetOrClass) ).

fof(kb_SUMO_6533,axiom,
    s__subclass(s__Business,s__Organization) ).

fof(kb_SUMO_6534,axiom,
    s__documentation(s__Business,s__EnglishLanguage,'An &%instance of &%Business is an &%Organization that is a &%CommercialAgent.') ).

fof(kb_SUMO_6535,axiom,
    s__subclass(s__Corporation,s__Business) ).

fof(kb_SUMO_6536,axiom,
    s__subclass(s__Corporation,s__LegalAgent) ).

fof(kb_SUMO_6537,axiom,
    s__documentation(s__Corporation,s__EnglishLanguage,'An &%Organization that has a special legal status that allows a group of persons to act as a &%CommercialAgent and that insulates the owners (shareholders) from many liabilities that might result from the corporations operation.') ).

fof(kb_SUMO_6538,axiom,
    s__subclass(s__Manufacturer,s__Corporation) ).

fof(kb_SUMO_6539,axiom,
    s__instance(s__Manufacturer__t,s__SetOrClass) ).

fof(kb_SUMO_6540,axiom,
    s__instance(s__Corporation__t,s__SetOrClass) ).

fof(kb_SUMO_6541,axiom,
    s__documentation(s__Manufacturer,s__EnglishLanguage,'Any &%Corporation which manufactures &%Products.') ).

fof(kb_SUMO_6542,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Agent)
     => ( s__instance(V__ORG,s__Manufacturer)
       => s__hasPurpose(V__ORG,'(? [V__MANUFACTURE] : (s__instance(V__MANUFACTURE,s__Process) & s__instance(V__MANUFACTURE,s__Manufacture) & s__instance(V__MANUFACTURE,s__CommercialService) & s__agent(V__MANUFACTURE,V__ORG)))') ) ) ).

fof(kb_SUMO_6543,axiom,
    s__subclass(s__MercantileOrganization,s__Corporation) ).

fof(kb_SUMO_6544,axiom,
    s__instance(s__MercantileOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6545,axiom,
    s__documentation(s__MercantileOrganization,s__EnglishLanguage,'Any &%Corporation which sells goods or services to customers for a profit.') ).

fof(kb_SUMO_6546,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Agent)
     => ( s__instance(V__ORG,s__MercantileOrganization)
       => s__hasPurpose(V__ORG,'(? [V__SELL] : (s__instance(V__SELL,s__Process) & s__instance(V__SELL,s__Selling) & s__instance(V__SELL,s__CommercialService) & s__agent(V__SELL,V__ORG)))') ) ) ).

fof(kb_SUMO_6547,axiom,
    s__subclass(s__Group,s__Collection) ).

fof(kb_SUMO_6548,axiom,
    s__subclass(s__Group,s__Agent) ).

fof(kb_SUMO_6549,axiom,
    s__instance(s__Group__t,s__SetOrClass) ).

fof(kb_SUMO_6550,axiom,
    s__instance(s__Agent__t,s__SetOrClass) ).

fof(kb_SUMO_6551,axiom,
    s__documentation(s__Group,s__EnglishLanguage,'A &%Collection of &%Agents, e.g. a flock of sheep, a herd of goats, or the local Boy Scout troop.') ).

fof(kb_SUMO_6552,axiom,
    ! [V__MEMB,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__MEMB,s__SelfConnectedObject) )
     => ( ( s__instance(V__GROUP,s__Group)
          & s__member(V__MEMB,V__GROUP) )
       => s__instance(V__MEMB,s__Agent) ) ) ).

fof(kb_SUMO_6553,axiom,
    s__subclass(s__GroupOfPeople,s__Group) ).

fof(kb_SUMO_6554,axiom,
    s__documentation(s__GroupOfPeople,s__EnglishLanguage,'Any &%Group whose &%members are exclusively &%Humans.') ).

fof(kb_SUMO_6555,axiom,
    ! [V__MEMBER,V__GROUP] :
      ( ( s__instance(V__GROUP,s__Collection)
        & s__instance(V__MEMBER,s__SelfConnectedObject) )
     => ( ( s__instance(V__GROUP,s__GroupOfPeople)
          & s__member(V__MEMBER,V__GROUP) )
       => s__instance(V__MEMBER,s__Human) ) ) ).

fof(kb_SUMO_6556,axiom,
    s__subclass(s__AgeGroup,s__GroupOfPeople) ).

fof(kb_SUMO_6557,axiom,
    s__instance(s__AgeGroup__t,s__SetOrClass) ).

fof(kb_SUMO_6558,axiom,
    s__instance(s__GroupOfPeople__t,s__SetOrClass) ).

fof(kb_SUMO_6559,axiom,
    s__documentation(s__AgeGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members all have the same &%age.') ).

fof(kb_SUMO_6560,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__AgeGroup)
     => ! [V__MEMB1,V__MEMB2,V__AGE1,V__AGE2] :
          ( ( s__instance(V__AGE2,s__TimeDuration)
            & s__instance(V__AGE1,s__TimeDuration)
            & s__instance(V__MEMB2,s__SelfConnectedObject)
            & s__instance(V__MEMB1,s__SelfConnectedObject)
            & s__instance(V__GROUP,s__Collection) )
         => ( ( s__member(V__MEMB1,V__GROUP)
              & s__member(V__MEMB2,V__GROUP)
              & s__age(V__MEMB1,V__AGE1)
              & s__age(V__MEMB2,V__AGE2) )
           => V__AGE1 = V__AGE2 ) ) ) ).

fof(kb_SUMO_6561,axiom,
    s__subclass(s__FamilyGroup,s__GroupOfPeople) ).

fof(kb_SUMO_6562,axiom,
    s__instance(s__FamilyGroup__t,s__SetOrClass) ).

fof(kb_SUMO_6563,axiom,
    s__documentation(s__FamilyGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members bear &%familyRelations to one another.') ).

fof(kb_SUMO_6564,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__FamilyGroup)
     => ! [V__MEMB1,V__MEMB2] :
          ( ( s__instance(V__MEMB2,s__Organism)
            & s__instance(V__MEMB1,s__Organism)
            & s__instance(V__GROUP,s__Collection) )
         => ( ( s__member(V__MEMB1,V__GROUP)
              & s__member(V__MEMB2,V__GROUP) )
           => s__familyRelation(V__MEMB1,V__MEMB2) ) ) ) ).

fof(kb_SUMO_6565,axiom,
    s__subclass(s__SocialUnit,s__GroupOfPeople) ).

fof(kb_SUMO_6566,axiom,
    s__instance(s__SocialUnit__t,s__SetOrClass) ).

fof(kb_SUMO_6567,axiom,
    s__documentation(s__SocialUnit,s__EnglishLanguage,'A &%GroupOfPeople who all have the same &%home.') ).

fof(kb_SUMO_6568,axiom,
    ! [V__MEMBER,V__UNIT] :
      ( ( s__instance(V__UNIT,s__Collection)
        & s__instance(V__MEMBER,s__Human) )
     => ( s__instance(V__UNIT,s__SocialUnit)
       => ? [V__HOME] :
            ( s__instance(V__HOME,s__PermanentResidence)
            & ( s__member(V__MEMBER,V__UNIT)
             => s__home(V__MEMBER,V__HOME) ) ) ) ) ).

fof(kb_SUMO_6569,axiom,
    s__instance(s__ImmediateFamilyFn__m,s__UnaryFunction) ).

fof(kb_SUMO_6570,axiom,
    s__domain(s__ImmediateFamilyFn__m,"1",s__Human) ).

fof(kb_SUMO_6571,axiom,
    s__range(s__ImmediateFamilyFn__m,s__FamilyGroup) ).

fof(kb_SUMO_6572,axiom,
    s__documentation(s__ImmediateFamilyFn__m,s__EnglishLanguage,'(&%ImmediateFamilyFn ?PERSON) denotes the immediate family of ?PERSON, i.e. the &%Group consisting of the &%parents of ?PERSON and anyone of whom ?PERSON is a &%parent.') ).

fof(kb_SUMO_6573,axiom,
    ! [V__P,V__FAMILY] :
      ( s__ImmediateFamilyFn(V__P) = V__FAMILY
     => ! [V__MEMBER] :
          ( ( s__instance(V__MEMBER,s__Organism)
            & s__instance(V__FAMILY,s__Collection)
            & s__instance(V__P,s__Human) )
         => ( s__member(V__MEMBER,V__FAMILY)
           => ? [V__OTHER] :
                ( s__instance(V__OTHER,s__Organism)
                & ( s__parent(V__MEMBER,V__OTHER)
                  | s__parent(V__OTHER,V__MEMBER) ) ) ) ) ) ).

fof(kb_SUMO_6574,axiom,
    ! [V__PERSON,V__FAMILY] :
      ( ( s__instance(V__FAMILY,s__Collection)
        & s__instance(V__PERSON,s__Human) )
     => ( s__ImmediateFamilyFn(V__PERSON) = V__FAMILY
       => ? [V__MEMBER] :
            ( s__instance(V__MEMBER,s__Organism)
            & s__member(V__MEMBER,V__FAMILY)
            & ( s__parent(V__MEMBER,V__PERSON)
              | s__parent(V__PERSON,V__MEMBER) ) ) ) ) ).

fof(kb_SUMO_6575,axiom,
    s__instance(s__relative__m,s__BinaryPredicate) ).

fof(kb_SUMO_6576,axiom,
    s__instance(s__relative__m,s__SymmetricRelation) ).

fof(kb_SUMO_6577,axiom,
    s__domain(s__relative__m,"1",s__Organism) ).

fof(kb_SUMO_6578,axiom,
    s__domain(s__relative__m,"2",s__Organism) ).

fof(kb_SUMO_6579,axiom,
    s__documentation(s__relative__m,s__EnglishLanguage,'(&%relative ?O1 ?O2) means that ?O1 and ?O2 are relatives, whether through common ancestry (consanguinity), someones marriage (affinity), or someones adoption. This definition is intentionally broad, so as to capture a wide array of `familial relations. The notion of who counts as `family also varies between cultures, but that aspect of meaning is not addressed here.') ).

fof(kb_SUMO_6580,axiom,
    s__subrelation(s__familyRelation__m,s__relative__m) ).

fof(kb_SUMO_6581,axiom,
    s__subrelation(s__spouse__m,s__relative__m) ).

%FOL fof(kb_SUMO_6582,axiom,(( (! [V__A1,V__T1,V__A2] : ((s__instance(V__A2,s__Human) & s__instance(V__T1,s__TimePosition) & s__instance(V__A1,s__Human)) => ((s__holdsDuring(V__T1,'s__legalRelation(V__A1,V__A2)') & s__instance(V__A1,s__Organism) & s__instance(V__A2,s__Organism)) => s__holdsDuring(V__T1,'s__relative(V__A1,V__A2)')))) ))).

fof(kb_SUMO_6583,axiom,
    s__instance(s__familyRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_6584,axiom,
    s__instance(s__familyRelation__m,s__EquivalenceRelation) ).

fof(kb_SUMO_6585,axiom,
    s__domain(s__familyRelation__m,"1",s__Organism) ).

fof(kb_SUMO_6586,axiom,
    s__domain(s__familyRelation__m,"2",s__Organism) ).

fof(kb_SUMO_6587,axiom,
    s__documentation(s__familyRelation__m,s__EnglishLanguage,'A very general &%Predicate for biological relationships. (&%familyRelation ?ORGANISM1 ?ORGANISM2) means that ?ORGANISM1 and ?ORGANISM2 are biologically derived from a common ancestor.') ).

fof(kb_SUMO_6588,axiom,
    ! [V__ORGANISM1,V__ORGANISM2] :
      ( ( s__instance(V__ORGANISM2,s__Organism)
        & s__instance(V__ORGANISM1,s__Organism) )
     => ( s__familyRelation(V__ORGANISM1,V__ORGANISM2)
       => ? [V__ORGANISM3] :
            ( s__instance(V__ORGANISM3,s__Organism)
            & s__ancestor(V__ORGANISM3,V__ORGANISM1)
            & s__ancestor(V__ORGANISM3,V__ORGANISM2) ) ) ) ).

fof(kb_SUMO_6589,axiom,
    s__subrelation(s__ancestor__m,s__familyRelation__m) ).

fof(kb_SUMO_6590,axiom,
    s__instance(s__ancestor__m,s__TransitiveRelation) ).

fof(kb_SUMO_6591,axiom,
    s__instance(s__ancestor__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6592,axiom,
    s__domain(s__ancestor__m,"1",s__Organism) ).

fof(kb_SUMO_6593,axiom,
    s__domain(s__ancestor__m,"2",s__Organism) ).

fof(kb_SUMO_6594,axiom,
    s__documentation(s__ancestor__m,s__EnglishLanguage,'The transitive closure of the &%parent predicate. (&%ancestor ?DESCENDANT ?ANCESTOR) means that ?ANCESTOR is either the &%parent of ?DESCENDANT or the &%parent of the &%parent of &%DESCENDANT or etc.') ).

fof(kb_SUMO_6595,axiom,
    s__subrelation(s__parent__m,s__ancestor__m) ).

fof(kb_SUMO_6596,axiom,
    s__instance(s__parent__m,s__BinaryPredicate) ).

fof(kb_SUMO_6597,axiom,
    s__subrelation(s__parent__m,s__familyRelation__m) ).

fof(kb_SUMO_6598,axiom,
    s__instance(s__parent__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6599,axiom,
    s__instance(s__parent__m,s__IntransitiveRelation) ).

fof(kb_SUMO_6600,axiom,
    s__domain(s__parent__m,"1",s__Organism) ).

fof(kb_SUMO_6601,axiom,
    s__domain(s__parent__m,"2",s__Organism) ).

fof(kb_SUMO_6602,axiom,
    s__documentation(s__parent__m,s__EnglishLanguage,'The general relationship of parenthood. (&%parent ?CHILD ?PARENT) means that ?PARENT is a biological parent of ?CHILD.') ).

fof(kb_SUMO_6603,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__parent(V__CHILD,V__PARENT)
       => s__before(s__BeginFn(s__WhenFn(V__PARENT)),s__BeginFn(s__WhenFn(V__CHILD))) ) ) ).

fof(kb_SUMO_6604,axiom,
    ! [V__CLASS,V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism)
        & s__instance(V__CLASS,s__SetOrClass) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__subclass(V__CLASS,s__Organism)
          & s__instance(V__PARENT,V__CLASS) )
       => s__instance(V__CHILD,V__CLASS) ) ) ).

fof(kb_SUMO_6605,axiom,
    ! [V__REP,V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism)
        & s__instance(V__REP,s__Process) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__instance(V__REP,s__SexualReproduction)
          & s__agent(V__REP,V__PARENT)
          & s__result(V__REP,V__CHILD) )
       => ( s__mother(V__CHILD,V__PARENT)
          | s__father(V__CHILD,V__PARENT) ) ) ) ).

fof(kb_SUMO_6606,axiom,
    ! [V__ORGANISM] :
      ( s__instance(V__ORGANISM,s__Organism)
     => ? [V__PARENT] :
          ( s__instance(V__PARENT,s__Organism)
          & s__parent(V__ORGANISM,V__PARENT) ) ) ).

fof(kb_SUMO_6607,axiom,
    s__instance(s__mother__m,s__SingleValuedRelation) ).

fof(kb_SUMO_6608,axiom,
    s__subrelation(s__mother__m,s__parent__m) ).

fof(kb_SUMO_6609,axiom,
    s__domain(s__mother__m,"1",s__Organism) ).

fof(kb_SUMO_6610,axiom,
    s__domain(s__mother__m,"2",s__Organism) ).

fof(kb_SUMO_6611,axiom,
    s__documentation(s__mother__m,s__EnglishLanguage,'The general relationship of motherhood. (&%mother ?CHILD ?MOTHER) means that ?MOTHER is the biological mother of ?CHILD.') ).

fof(kb_SUMO_6612,axiom,
    ! [V__MOTHER,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Organism)
        & s__instance(V__MOTHER,s__Organism) )
     => ( s__mother(V__CHILD,V__MOTHER)
       => s__attribute(V__MOTHER,s__Female) ) ) ).

fof(kb_SUMO_6613,axiom,
    s__instance(s__father__m,s__SingleValuedRelation) ).

fof(kb_SUMO_6614,axiom,
    s__subrelation(s__father__m,s__parent__m) ).

fof(kb_SUMO_6615,axiom,
    s__domain(s__father__m,"1",s__Organism) ).

fof(kb_SUMO_6616,axiom,
    s__domain(s__father__m,"2",s__Organism) ).

fof(kb_SUMO_6617,axiom,
    s__documentation(s__father__m,s__EnglishLanguage,'The general relationship of fatherhood. (&%father ?CHILD ?FATHER) means that ?FATHER is the biological father of ?CHILD.') ).

fof(kb_SUMO_6618,axiom,
    ! [V__FATHER,V__CHILD] :
      ( ( s__instance(V__CHILD,s__Organism)
        & s__instance(V__FATHER,s__Organism) )
     => ( s__father(V__CHILD,V__FATHER)
       => s__attribute(V__FATHER,s__Male) ) ) ).

fof(kb_SUMO_6619,axiom,
    s__subrelation(s__daughter__m,s__parent__m) ).

fof(kb_SUMO_6620,axiom,
    s__domain(s__daughter__m,"1",s__Organism) ).

fof(kb_SUMO_6621,axiom,
    s__domain(s__daughter__m,"2",s__Organism) ).

fof(kb_SUMO_6622,axiom,
    s__documentation(s__daughter__m,s__EnglishLanguage,'The general relationship of daughterhood. (&%daughter ?CHILD ?PARENT) means that ?CHILD is the biological daughter of ?PARENT.') ).

fof(kb_SUMO_6623,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__daughter(V__CHILD,V__PARENT)
       => s__attribute(V__CHILD,s__Female) ) ) ).

fof(kb_SUMO_6624,axiom,
    s__subrelation(s__son__m,s__parent__m) ).

fof(kb_SUMO_6625,axiom,
    s__domain(s__son__m,"1",s__Organism) ).

fof(kb_SUMO_6626,axiom,
    s__domain(s__son__m,"2",s__Organism) ).

fof(kb_SUMO_6627,axiom,
    s__documentation(s__son__m,s__EnglishLanguage,'The general relationship of being a son. (&%son ?CHILD ?PARENT) means that ?CHILD is the biological son of ?PARENT.') ).

fof(kb_SUMO_6628,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( s__son(V__CHILD,V__PARENT)
       => s__attribute(V__CHILD,s__Male) ) ) ).

fof(kb_SUMO_6629,axiom,
    s__instance(s__sibling__m,s__BinaryPredicate) ).

fof(kb_SUMO_6630,axiom,
    s__subrelation(s__sibling__m,s__familyRelation__m) ).

fof(kb_SUMO_6631,axiom,
    s__instance(s__sibling__m,s__SymmetricRelation) ).

fof(kb_SUMO_6632,axiom,
    s__instance(s__sibling__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6633,axiom,
    s__domain(s__sibling__m,"1",s__Organism) ).

fof(kb_SUMO_6634,axiom,
    s__domain(s__sibling__m,"2",s__Organism) ).

fof(kb_SUMO_6635,axiom,
    s__documentation(s__sibling__m,s__EnglishLanguage,'The relationship between two &%Organisms that have the same &%mother and &%father. Note that this relationship does not hold between half-brothers, half-sisters, etc.') ).

fof(kb_SUMO_6636,axiom,
    ! [V__PARENT2,V__ORGANISM1,V__ORGANISM2,V__PARENT1] :
      ( ( s__instance(V__PARENT1,s__Organism)
        & s__instance(V__ORGANISM2,s__Organism)
        & s__instance(V__ORGANISM1,s__Organism)
        & s__instance(V__PARENT2,s__Organism) )
     => ( ( s__parent(V__ORGANISM1,V__PARENT1)
          & s__parent(V__ORGANISM2,V__PARENT1)
          & s__parent(V__ORGANISM1,V__PARENT2)
          & s__parent(V__ORGANISM2,V__PARENT2)
          & V__ORGANISM1 != V__ORGANISM2
          & V__PARENT1 != V__PARENT2 )
       => s__sibling(V__ORGANISM1,V__ORGANISM2) ) ) ).

fof(kb_SUMO_6637,axiom,
    ! [V__ORG1,V__ORG2,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__ORG2,s__Organism)
        & s__instance(V__ORG1,s__Organism) )
     => ( ( s__sibling(V__ORG1,V__ORG2)
          & s__parent(V__ORG1,V__PARENT) )
       => s__parent(V__ORG2,V__PARENT) ) ) ).

fof(kb_SUMO_6638,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__attribute(V__PARENT,s__Male) )
       => s__father(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_6639,axiom,
    ! [V__CHILD,V__PARENT] :
      ( ( s__instance(V__PARENT,s__Organism)
        & s__instance(V__CHILD,s__Organism) )
     => ( ( s__parent(V__CHILD,V__PARENT)
          & s__attribute(V__PARENT,s__Female) )
       => s__mother(V__CHILD,V__PARENT) ) ) ).

fof(kb_SUMO_6640,axiom,
    s__subrelation(s__brother__m,s__sibling__m) ).

fof(kb_SUMO_6641,axiom,
    s__instance(s__brother__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6642,axiom,
    s__instance(s__brother__m,s__TransitiveRelation) ).

fof(kb_SUMO_6643,axiom,
    s__domain(s__brother__m,"1",s__Man) ).

fof(kb_SUMO_6644,axiom,
    s__domain(s__brother__m,"2",s__Human) ).

fof(kb_SUMO_6645,axiom,
    s__documentation(s__brother__m,s__EnglishLanguage,'The general relationship of being a brother. (&%brother ?MAN ?PERSON) means that ?MAN is the brother of ?PERSON.') ).

fof(kb_SUMO_6646,axiom,
    s__subrelation(s__sister__m,s__sibling__m) ).

fof(kb_SUMO_6647,axiom,
    s__instance(s__sister__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6648,axiom,
    s__instance(s__sister__m,s__TransitiveRelation) ).

fof(kb_SUMO_6649,axiom,
    s__domain(s__sister__m,"1",s__Woman) ).

fof(kb_SUMO_6650,axiom,
    s__domain(s__sister__m,"2",s__Human) ).

fof(kb_SUMO_6651,axiom,
    s__documentation(s__sister__m,s__EnglishLanguage,'The general relationship of being a sister. (&%sister ?WOMAN ?PERSON) means that ?WOMAN is the sister of ?PERSON.') ).

fof(kb_SUMO_6652,axiom,
    s__instance(s__legalRelation__m,s__BinaryPredicate) ).

fof(kb_SUMO_6653,axiom,
    s__instance(s__legalRelation__m,s__SymmetricRelation) ).

fof(kb_SUMO_6654,axiom,
    s__domain(s__legalRelation__m,"1",s__Human) ).

fof(kb_SUMO_6655,axiom,
    s__domain(s__legalRelation__m,"2",s__Human) ).

fof(kb_SUMO_6656,axiom,
    s__documentation(s__legalRelation__m,s__EnglishLanguage,'(&%legalRelation ?AGENT1 ?AGENT2) means that ?AGENT1 and ?AGENT2 are relatives by virtue of a legal relationship. Some examples include marriage, adoption, etc.') ).

fof(kb_SUMO_6657,axiom,
    ! [V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT1,s__Human)
        & s__instance(V__AGENT2,s__Human) )
     => ( s__legalRelation(V__AGENT1,V__AGENT2)
       => ? [V__DECLARE,V__OBLIGATION] :
            ( s__instance(V__OBLIGATION,s__Formula)
            & s__instance(V__DECLARE,s__Declaring)
            & s__confersObligation(V__OBLIGATION,V__DECLARE,V__AGENT1)
            & s__confersObligation(V__OBLIGATION,V__DECLARE,V__AGENT2) ) ) ) ).

fof(kb_SUMO_6658,axiom,
    s__instance(s__acquaintance__m,s__BinaryPredicate) ).

fof(kb_SUMO_6659,axiom,
    s__documentation(s__acquaintance__m,s__EnglishLanguage,'(&%acquaintance ?H1 ?H2) means that ?H1 has met and knows something about ?H2, such as ?H2s name and appearance. Statements made with this predicate should be temporally specified with &%holdsDuring. Note that &%acquaintance is not symmetric. For the symmetric version, see &%mutualAcquaintance.') ).

fof(kb_SUMO_6660,axiom,
    s__domain(s__acquaintance__m,"1",s__Human) ).

fof(kb_SUMO_6661,axiom,
    s__domain(s__acquaintance__m,"2",s__Human) ).

fof(kb_SUMO_6662,axiom,
    s__instance(s__mutualAcquaintance__m,s__BinaryPredicate) ).

fof(kb_SUMO_6663,axiom,
    s__instance(s__mutualAcquaintance__m,s__SymmetricRelation) ).

fof(kb_SUMO_6664,axiom,
    s__documentation(s__mutualAcquaintance__m,s__EnglishLanguage,'(&%mutualAcquaintance ?H1 ?H2) means that ?H1 and ?H2 have met each other and know something about each other, such as name and appearance. Statements made with this predicate should be temporally specified with &%holdsDuring. See also the weaker, non-symmetric version of this predicate, &%acquaintance.') ).

fof(kb_SUMO_6665,axiom,
    s__domain(s__mutualAcquaintance__m,"1",s__Human) ).

fof(kb_SUMO_6666,axiom,
    s__domain(s__mutualAcquaintance__m,"2",s__Human) ).

fof(kb_SUMO_6667,axiom,
    s__subrelation(s__mutualAcquaintance__m,s__acquaintance__m) ).

fof(kb_SUMO_6668,axiom,
    s__subrelation(s__spouse__m,s__mutualAcquaintance__m) ).

fof(kb_SUMO_6669,axiom,
    s__subrelation(s__spouse__m,s__legalRelation__m) ).

fof(kb_SUMO_6670,axiom,
    s__instance(s__spouse__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6671,axiom,
    s__instance(s__spouse__m,s__SymmetricRelation) ).

fof(kb_SUMO_6672,axiom,
    s__instance(s__SymmetricRelation__t,s__SetOrClass) ).

fof(kb_SUMO_6673,axiom,
    s__domain(s__spouse__m,"1",s__Human) ).

fof(kb_SUMO_6674,axiom,
    s__domain(s__spouse__m,"2",s__Human) ).

fof(kb_SUMO_6675,axiom,
    s__documentation(s__spouse__m,s__EnglishLanguage,'The relationship of marriage between two &%Humans.') ).

fof(kb_SUMO_6676,axiom,
    s__subrelation(s__husband__m,s__spouse__m) ).

fof(kb_SUMO_6677,axiom,
    s__instance(s__husband__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6678,axiom,
    s__instance(s__husband__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6679,axiom,
    s__instance(s__IrreflexiveRelation__t,s__SetOrClass) ).

fof(kb_SUMO_6680,axiom,
    s__domain(s__husband__m,"1",s__Man) ).

fof(kb_SUMO_6681,axiom,
    s__domain(s__husband__m,"2",s__Woman) ).

fof(kb_SUMO_6682,axiom,
    s__inverse(s__husband__m,s__wife__m) ).

fof(kb_SUMO_6683,axiom,
    s__documentation(s__husband__m,s__EnglishLanguage,'(&%husband ?MAN ?WOMAN) means that ?MAN is the husband of ?WOMAN.') ).

fof(kb_SUMO_6684,axiom,
    s__subrelation(s__wife__m,s__spouse__m) ).

fof(kb_SUMO_6685,axiom,
    s__instance(s__wife__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6686,axiom,
    s__instance(s__wife__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6687,axiom,
    s__domain(s__wife__m,"1",s__Woman) ).

fof(kb_SUMO_6688,axiom,
    s__domain(s__wife__m,"2",s__Man) ).

fof(kb_SUMO_6689,axiom,
    s__documentation(s__wife__m,s__EnglishLanguage,'(&%wife ?WOMAN ?MAN) means that ?WOMAN is the wife of ?MAN.') ).

fof(kb_SUMO_6690,axiom,
    s__subclass(s__EthnicGroup,s__GroupOfPeople) ).

fof(kb_SUMO_6691,axiom,
    s__instance(s__EthnicGroup__t,s__SetOrClass) ).

fof(kb_SUMO_6692,axiom,
    s__documentation(s__EthnicGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members originate from the same &%GeographicArea or share the same &%Language and/or cultural practices.') ).

fof(kb_SUMO_6693,axiom,
    s__subclass(s__BeliefGroup,s__GroupOfPeople) ).

fof(kb_SUMO_6694,axiom,
    s__documentation(s__BeliefGroup,s__EnglishLanguage,'A &%GroupOfPeople whose &%members share a belief or set of beliefs.') ).

fof(kb_SUMO_6695,axiom,
    ! [V__GROUP] :
      ( s__instance(V__GROUP,s__BeliefGroup)
     => ? [V__BELIEF] :
          ( s__instance(V__BELIEF,s__Formula)
          & ! [V__MEMB] :
              ( ( s__instance(V__MEMB,s__SelfConnectedObject)
                & s__instance(V__MEMB,s__CognitiveAgent)
                & s__instance(V__GROUP,s__Collection) )
             => ( s__member(V__MEMB,V__GROUP)
               => s__believes(V__MEMB,V__BELIEF) ) ) ) ) ).

fof(kb_SUMO_6696,axiom,
    s__subclass(s__Organization,s__Group) ).

fof(kb_SUMO_6697,axiom,
    s__subclass(s__Organization,s__Agent) ).

fof(kb_SUMO_6698,axiom,
    s__documentation(s__Organization,s__EnglishLanguage,'An &%Organization is a corporate or similar institution. The &%members of an &%Organization typically have a common purpose or function. Note that this class also covers divisions, departments, etc. of organizations. For example, both the Shell Corporation and the accounting department at Shell would both be instances of &%Organization. Note too that the existence of an &%Organization is dependent on the existence of at least one &%member (since &%Organization is a subclass of &%Collection). Accordingly, in cases of purely legal organizations, a fictitious &%member should be assumed.') ).

fof(kb_SUMO_6699,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Organization)
     => ? [V__PURP] :
          ( s__instance(V__PURP,s__Formula)
          & ! [V__MEMBER] :
              ( ( s__instance(V__MEMBER,s__SelfConnectedObject)
                & s__instance(V__ORG,s__Collection) )
             => ( s__member(V__MEMBER,V__ORG)
               => s__hasPurpose(V__MEMBER,V__PURP) ) ) ) ) ).

fof(kb_SUMO_6700,axiom,
    ! [V__ORG,V__AGENT] :
      ( ( s__instance(V__AGENT,s__SelfConnectedObject)
        & s__instance(V__ORG,s__Collection) )
     => ( ( s__instance(V__ORG,s__Organization)
          & s__member(V__AGENT,V__ORG) )
       => s__instance(V__AGENT,s__Agent) ) ) ).

fof(kb_SUMO_6701,axiom,
    s__instance(s__employs__m,s__BinaryPredicate) ).

fof(kb_SUMO_6702,axiom,
    s__domain(s__employs__m,"1",s__Organization) ).

fof(kb_SUMO_6703,axiom,
    s__domain(s__employs__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_6704,axiom,
    s__documentation(s__employs__m,s__EnglishLanguage,'(&%employs ?ORG ?PERSON) means that ?ORG has hired ?PERSON and currently retains ?PERSON, on a salaried, hourly or contractual basis, to provide services in exchange for monetary compensation.') ).

fof(kb_SUMO_6705,axiom,
    s__subclass(s__PoliticalOrganization,s__Organization) ).

fof(kb_SUMO_6706,axiom,
    s__documentation(s__PoliticalOrganization,s__EnglishLanguage,'An &%Organization that is attempting to bring about some sort of political change.') ).

fof(kb_SUMO_6707,axiom,
    ! [V__POL] :
      ( s__instance(V__POL,s__Agent)
     => ( s__instance(V__POL,s__PoliticalOrganization)
       => ? [V__PROC] :
            ( s__instance(V__PROC,s__Process)
            & s__instance(V__PROC,s__PoliticalProcess)
            & s__agent(V__PROC,V__POL) ) ) ) ).

fof(kb_SUMO_6708,axiom,
    s__subclass(s__MilitaryForce,s__PoliticalOrganization) ).

fof(kb_SUMO_6709,axiom,
    s__instance(s__MilitaryForce__t,s__SetOrClass) ).

fof(kb_SUMO_6710,axiom,
    s__instance(s__PoliticalOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6711,axiom,
    s__documentation(s__MilitaryForce,s__EnglishLanguage,'&%MilitaryForce is the subclass of &%Organizations that are organized along military lines and for the purpose of either defensive or offensive combat, whether or not the force is an official &%GovernmentOrganization.') ).

fof(kb_SUMO_6712,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__MilitaryForce)
       => s__capability(s__ViolentContest,s__agent__m,V__ORG) ) ) ).

fof(kb_SUMO_6713,axiom,
    s__subclass(s__MilitaryOrganization,s__MilitaryForce) ).

fof(kb_SUMO_6714,axiom,
    s__subclass(s__MilitaryOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_6715,axiom,
    s__instance(s__MilitaryOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6716,axiom,
    s__documentation(s__MilitaryOrganization,s__EnglishLanguage,'Any heavily armed &%Organization that is part of a &%Government and that is charged with representing the &%Government in international conflicts.') ).

fof(kb_SUMO_6717,axiom,
    s__subclass(s__ParamilitaryOrganization,s__MilitaryForce) ).

fof(kb_SUMO_6718,axiom,
    s__instance(s__ParamilitaryOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6719,axiom,
    s__disjoint(s__ParamilitaryOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_6720,axiom,
    s__documentation(s__ParamilitaryOrganization,s__EnglishLanguage,'An &%Organization which is much like a &%MilitaryOrganization, e.g. it is made up of armed fighters, except that it is not associated with a &%Government.') ).

fof(kb_SUMO_6721,axiom,
    s__subclass(s__GovernmentOrganization,s__Organization) ).

fof(kb_SUMO_6722,axiom,
    s__instance(s__GovernmentOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6723,axiom,
    s__documentation(s__GovernmentOrganization,s__EnglishLanguage,'&%GovernmentOrganization is the class of official &%Organizations that are concerned with the government of a &%GeopoliticalArea at some level. They may be a &%subOrganization of a government.') ).

fof(kb_SUMO_6724,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Organization)
     => ( s__instance(V__ORG,s__GovernmentOrganization)
      <=> ? [V__GOV] :
            ( s__instance(V__GOV,s__Organization)
            & s__instance(V__GOV,s__Government)
            & s__subOrganization(V__ORG,V__GOV) ) ) ) ).

fof(kb_SUMO_6725,axiom,
    ! [V__GOV,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__GOV,s__Organization) )
     => ( ( s__subOrganization(V__ORG,V__GOV)
          & s__instance(V__GOV,s__GovernmentOrganization) )
       => s__instance(V__ORG,s__GovernmentOrganization) ) ) ).

fof(kb_SUMO_6726,axiom,
    s__subclass(s__Government,s__GovernmentOrganization) ).

fof(kb_SUMO_6727,axiom,
    s__subclass(s__Government,s__LegalAgent) ).

fof(kb_SUMO_6728,axiom,
    s__instance(s__Government__t,s__SetOrClass) ).

fof(kb_SUMO_6729,axiom,
    s__instance(s__LegalAgent__t,s__SetOrClass) ).

fof(kb_SUMO_6730,axiom,
    s__documentation(s__Government,s__EnglishLanguage,'The ruling body of a &%GeopoliticalArea.') ).

fof(kb_SUMO_6731,axiom,
    s__instance(s__GovernmentFn__m,s__UnaryFunction) ).

fof(kb_SUMO_6732,axiom,
    s__domain(s__GovernmentFn__m,"1",s__GeopoliticalArea) ).

fof(kb_SUMO_6733,axiom,
    s__range(s__GovernmentFn__m,s__Government) ).

fof(kb_SUMO_6734,axiom,
    s__documentation(s__GovernmentFn__m,s__EnglishLanguage,'(&%GovernmentFn ?AREA) denotes the &%Government of the &%GeopoliticalArea ?AREA. For example, (&%GovernmentFn &%UnitedStates) denotes the Federal-level government of the United States, (&%GovernmentFn &%PuertoRico) denotes the government of the Commonwealth of Puerto Rico.') ).

fof(kb_SUMO_6735,axiom,
    s__subclass(s__PoliceOrganization,s__GovernmentOrganization) ).

fof(kb_SUMO_6736,axiom,
    s__instance(s__PoliceOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6737,axiom,
    s__documentation(s__PoliceOrganization,s__EnglishLanguage,'Any &%GovernmentOrganization that is charged with domestic enforcement of the laws of the &%Government.') ).

fof(kb_SUMO_6738,axiom,
    s__subclass(s__JudicialOrganization,s__Organization) ).

fof(kb_SUMO_6739,axiom,
    s__instance(s__JudicialOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6740,axiom,
    s__documentation(s__JudicialOrganization,s__EnglishLanguage,'&%JudicialOrganization is the class of &%Organizations whose primary purpose is to render judgments according to the statutes or regulations of a government or other organization. Judicial bodies are not necessarily government organizations, for example, those associated with sporting associations.') ).

fof(kb_SUMO_6741,axiom,
    s__subclass(s__EducationalOrganization,s__Organization) ).

fof(kb_SUMO_6742,axiom,
    s__instance(s__EducationalOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6743,axiom,
    s__instance(s__Organization__t,s__SetOrClass) ).

fof(kb_SUMO_6744,axiom,
    s__documentation(s__EducationalOrganization,s__EnglishLanguage,'A &%EducationalOrganization is an institution of learning. Some examples are public and private K-12 schools, and colleges and universities.') ).

fof(kb_SUMO_6745,axiom,
    s__subclass(s__ReligiousOrganization,s__Organization) ).

fof(kb_SUMO_6746,axiom,
    s__subclass(s__ReligiousOrganization,s__BeliefGroup) ).

fof(kb_SUMO_6747,axiom,
    s__instance(s__ReligiousOrganization__t,s__SetOrClass) ).

fof(kb_SUMO_6748,axiom,
    s__instance(s__BeliefGroup__t,s__SetOrClass) ).

fof(kb_SUMO_6749,axiom,
    s__documentation(s__ReligiousOrganization,s__EnglishLanguage,'An &%Organization whose members share a set of religious beliefs.') ).

fof(kb_SUMO_6750,axiom,
    s__subrelation(s__subOrganization__m,s__subCollection__m) ).

fof(kb_SUMO_6751,axiom,
    s__instance(s__subOrganization__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_6752,axiom,
    s__domain(s__subOrganization__m,"1",s__Organization) ).

fof(kb_SUMO_6753,axiom,
    s__domain(s__subOrganization__m,"2",s__Organization) ).

fof(kb_SUMO_6754,axiom,
    s__documentation(s__subOrganization__m,s__EnglishLanguage,'(&%subOrganization ?ORG1 ?ORG2) means that ?ORG1 is an &%Organization which is a part of the &%Organization ?ORG2. Note that &%subOrganization is a &%ReflexiveRelation, so every &%Organization is a &%subOrganization of itself.') ).

fof(kb_SUMO_6755,axiom,
    s__instance(s__citizen__m,s__BinaryPredicate) ).

fof(kb_SUMO_6756,axiom,
    s__instance(s__citizen__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6757,axiom,
    s__domain(s__citizen__m,"1",s__Human) ).

fof(kb_SUMO_6758,axiom,
    s__domain(s__citizen__m,"2",s__Nation) ).

fof(kb_SUMO_6759,axiom,
    s__documentation(s__citizen__m,s__EnglishLanguage,'(&%citizen ?PERSON ?NATION) means that the &%Human ?PERSON is a citizen of &%Nation ?NATION.') ).

fof(kb_SUMO_6760,axiom,
    s__subclass(s__FieldOfStudy,s__Proposition) ).

fof(kb_SUMO_6761,axiom,
    s__instance(s__FieldOfStudy__t,s__SetOrClass) ).

fof(kb_SUMO_6762,axiom,
    s__instance(s__Proposition__t,s__SetOrClass) ).

fof(kb_SUMO_6763,axiom,
    s__documentation(s__FieldOfStudy,s__EnglishLanguage,'An academic or applied discipline with recognized experts and with a core of accepted theory or practice. Note that &%FieldOfStudy is a &%subclass of &%Proposition, because a &%FieldOfStudy is understood to be a body of abstract, informational content, with varying degrees of certainty attached to each element of this content.') ).

fof(kb_SUMO_6764,axiom,
    s__subclass(s__Procedure,s__Proposition) ).

fof(kb_SUMO_6765,axiom,
    s__documentation(s__Procedure,s__EnglishLanguage,'A sequence-dependent specification. Some examples are &%ComputerPrograms, finite-state machines, cooking recipes, musical scores, conference schedules, driving directions, and the scripts of plays and movies.') ).

fof(kb_SUMO_6766,axiom,
    s__subclass(s__ComputerProgram,s__Procedure) ).

fof(kb_SUMO_6767,axiom,
    s__instance(s__ComputerProgram__t,s__SetOrClass) ).

fof(kb_SUMO_6768,axiom,
    s__documentation(s__ComputerProgram,s__EnglishLanguage,'A set of instructions in a computer programming language that can be executed by a computer.') ).

fof(kb_SUMO_6769,axiom,
    s__subclass(s__ComputerProgramming,s__ContentDevelopment) ).

fof(kb_SUMO_6770,axiom,
    s__instance(s__ComputerProgramming__t,s__SetOrClass) ).

fof(kb_SUMO_6771,axiom,
    s__documentation(s__ComputerProgramming,s__EnglishLanguage,'The process of developing a &%ComputerProgram') ).

fof(kb_SUMO_6772,axiom,
    ! [V__CP] :
      ( s__instance(V__CP,s__Process)
     => ( s__instance(V__CP,s__ComputerProgramming)
       => ? [V__C] :
            ( s__instance(V__C,s__ComputerProgram)
            & s__result(V__CP,V__C) ) ) ) ).

fof(kb_SUMO_6773,axiom,
    s__subclass(s__Plan,s__Procedure) ).

fof(kb_SUMO_6774,axiom,
    s__instance(s__Plan__t,s__SetOrClass) ).

fof(kb_SUMO_6775,axiom,
    s__instance(s__Procedure__t,s__SetOrClass) ).

fof(kb_SUMO_6776,axiom,
    s__documentation(s__Plan,s__EnglishLanguage,'A specification of a sequence of &%Processes which is intended to satisfy a specified purpose at some future time.') ).

fof(kb_SUMO_6777,axiom,
    ! [V__OBJ,V__PLAN] :
      ( ( s__instance(V__PLAN,s__Proposition)
        & s__instance(V__OBJ,s__ContentBearingPhysical) )
     => ( ( s__instance(V__PLAN,s__Plan)
          & s__instance(V__OBJ,s__ContentBearingObject)
          & s__containsInformation(V__OBJ,V__PLAN) )
       => ? [V__PLANNING] :
            ( s__instance(V__PLANNING,s__Process)
            & s__instance(V__PLANNING,s__Planning)
            & s__result(V__PLANNING,V__OBJ) ) ) ) ).

fof(kb_SUMO_6778,axiom,
    s__subclass(s__Argument,s__Proposition) ).

fof(kb_SUMO_6779,axiom,
    s__partition_3(s__Argument,s__DeductiveArgument,s__InductiveArgument) ).

fof(kb_SUMO_6780,axiom,
    s__documentation(s__Argument,s__EnglishLanguage,'Any proposition which has the form of a deductive or inductive argument, i.e. a set of premises which, it is claimed, imply a conclusion.') ).

fof(kb_SUMO_6781,axiom,
    ! [V__REASON] :
      ( s__instance(V__REASON,s__Process)
     => ( s__instance(V__REASON,s__Reasoning)
       => ? [V__ARGUMENT] :
            ( s__instance(V__ARGUMENT,s__Proposition)
            & s__instance(V__ARGUMENT,s__Argument)
            & s__realization(V__REASON,V__ARGUMENT) ) ) ) ).

fof(kb_SUMO_6782,axiom,
    ! [V__ARGUMENT] :
      ( s__instance(V__ARGUMENT,s__Argument)
     => ? [V__PREMISES,V__CONCLUSION] :
          ( s__instance(V__CONCLUSION,s__Argument)
          & s__PremisesFn(V__ARGUMENT) = V__PREMISES
          & s__conclusion(V__CONCLUSION,V__ARGUMENT) ) ) ).

fof(kb_SUMO_6783,axiom,
    s__subclass(s__DeductiveArgument,s__Argument) ).

fof(kb_SUMO_6784,axiom,
    s__partition_3(s__DeductiveArgument,s__ValidDeductiveArgument,s__InvalidDeductiveArgument) ).

fof(kb_SUMO_6785,axiom,
    s__documentation(s__DeductiveArgument,s__EnglishLanguage,'An &%Argument which has the form of a deduction, i.e. it is claimed that the set of &%premises &%entails the &%conclusion.') ).

fof(kb_SUMO_6786,axiom,
    s__subclass(s__ValidDeductiveArgument,s__DeductiveArgument) ).

fof(kb_SUMO_6787,axiom,
    s__instance(s__ValidDeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_6788,axiom,
    s__instance(s__DeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_6789,axiom,
    s__documentation(s__ValidDeductiveArgument,s__EnglishLanguage,'A &%DeductiveArgument which is valid, i.e. the set of &%premises in fact &%entails the &%conclusion.') ).

fof(kb_SUMO_6790,axiom,
    ! [V__PREMISES,V__ARGUMENT,V__CONCLUSION] :
      ( ( s__instance(V__CONCLUSION,s__Argument)
        & s__instance(V__CONCLUSION,s__Formula)
        & s__instance(V__ARGUMENT,s__Argument)
        & s__instance(V__PREMISES,s__Proposition)
        & s__instance(V__PREMISES,s__Formula) )
     => ( ( s__instance(V__ARGUMENT,s__ValidDeductiveArgument)
          & V__PREMISES = s__PremisesFn(V__ARGUMENT)
          & s__conclusion(V__CONCLUSION,V__ARGUMENT) )
       => ? [V__FORMULA1,V__FORMULA2] :
            ( s__instance(V__FORMULA2,s__ContentBearingPhysical)
            & s__instance(V__FORMULA1,s__ContentBearingPhysical)
            & s__containsInformation(V__FORMULA1,V__PREMISES)
            & s__containsInformation(V__FORMULA2,V__CONCLUSION)
            & s__entails(V__PREMISES,V__CONCLUSION) ) ) ) ).

fof(kb_SUMO_6791,axiom,
    s__subclass(s__InvalidDeductiveArgument,s__DeductiveArgument) ).

fof(kb_SUMO_6792,axiom,
    s__instance(s__InvalidDeductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_6793,axiom,
    s__documentation(s__InvalidDeductiveArgument,s__EnglishLanguage,'&%DeductiveArguments that are not &%ValidDeductiveArguments, i.e. it is not the case that the set of &%premises in fact &%entails the &%conclusion.') ).

fof(kb_SUMO_6794,axiom,
    s__subclass(s__Explanation,s__DeductiveArgument) ).

fof(kb_SUMO_6795,axiom,
    s__instance(s__Explanation__t,s__SetOrClass) ).

fof(kb_SUMO_6796,axiom,
    s__documentation(s__Explanation,s__EnglishLanguage,'An &%Argument where the conclusion is an observed fact and the premises are other facts which collectively imply the conclusion. Note that this is the they hypothetico-deductive model of explanation.') ).

fof(kb_SUMO_6797,axiom,
    s__subclass(s__InductiveArgument,s__Argument) ).

fof(kb_SUMO_6798,axiom,
    s__instance(s__InductiveArgument__t,s__SetOrClass) ).

fof(kb_SUMO_6799,axiom,
    s__instance(s__Argument__t,s__SetOrClass) ).

fof(kb_SUMO_6800,axiom,
    s__documentation(s__InductiveArgument,s__EnglishLanguage,'An &%Argument which is inductive, i.e. it is claimed that a set of specific cases makes the &%conclusion, which generalizes these cases, more likely to be true.') ).

fof(kb_SUMO_6801,axiom,
    s__instance(s__premise__m,s__BinaryPredicate) ).

fof(kb_SUMO_6802,axiom,
    s__instance(s__premise__m,s__TotalValuedRelation) ).

fof(kb_SUMO_6803,axiom,
    s__domain(s__premise__m,"1",s__Argument) ).

fof(kb_SUMO_6804,axiom,
    s__domain(s__premise__m,"2",s__Proposition) ).

fof(kb_SUMO_6805,axiom,
    s__documentation(s__premise__m,s__EnglishLanguage,'(&%premise ?ARGUMENT ?PROPOSITION) means that the &%Proposition ?PROPOSITION is an explicit assumption of the &%Argument ?ARGUMENT.') ).

fof(kb_SUMO_6806,axiom,
    s__instance(s__PremisesFn__m,s__UnaryFunction) ).

fof(kb_SUMO_6807,axiom,
    s__domain(s__PremisesFn__m,"1",s__Argument) ).

fof(kb_SUMO_6808,axiom,
    s__range(s__PremisesFn__m,s__Proposition) ).

fof(kb_SUMO_6809,axiom,
    s__documentation(s__PremisesFn__m,s__EnglishLanguage,'(&%PremisesFn ?ARGUMENT) returns the complete set of &%premises of the &%Argument ?ARGUMENT.') ).

fof(kb_SUMO_6810,axiom,
    ! [V__PREMISES,V__ARGUMENT,V__PROPOSITION] :
      ( ( s__instance(V__PROPOSITION,s__Proposition)
        & s__instance(V__PREMISES,s__Proposition) )
     => ( ( s__instance(V__ARGUMENT,s__Argument)
          & V__PREMISES = s__PremisesFn(V__ARGUMENT) )
       => ( s__subProposition(V__PROPOSITION,V__PREMISES)
        <=> s__premise(V__ARGUMENT,V__PROPOSITION) ) ) ) ).

fof(kb_SUMO_6811,axiom,
    s__instance(s__conclusion__m,s__BinaryPredicate) ).

fof(kb_SUMO_6812,axiom,
    s__instance(s__conclusion__m,s__SingleValuedRelation) ).

fof(kb_SUMO_6813,axiom,
    s__instance(s__conclusion__m,s__TotalValuedRelation) ).

fof(kb_SUMO_6814,axiom,
    s__domain(s__conclusion__m,"1",s__Argument) ).

fof(kb_SUMO_6815,axiom,
    s__domain(s__conclusion__m,"2",s__Proposition) ).

fof(kb_SUMO_6816,axiom,
    s__documentation(s__conclusion__m,s__EnglishLanguage,'(&%conclusion ?ARGUMENT ?PROPOSITION) means that the &%Proposition ?PROPOSITION is the conclusion explicitly drawn from the &%Argument ?ARGUMENT. Note that it may or may not be the case that ?ARGUMENT &%entails ?PROPOSITION.') ).

fof(kb_SUMO_6817,axiom,
    s__instance(s__consistent__m,s__BinaryPredicate) ).

fof(kb_SUMO_6818,axiom,
    s__instance(s__consistent__m,s__SymmetricRelation) ).

fof(kb_SUMO_6819,axiom,
    s__domain(s__consistent__m,"1",s__Proposition) ).

fof(kb_SUMO_6820,axiom,
    s__domain(s__consistent__m,"2",s__Proposition) ).

fof(kb_SUMO_6821,axiom,
    s__documentation(s__consistent__m,s__EnglishLanguage,'(&%consistent ?PROP1 ?PROP2) means that the two &%Propositions ?PROP1 and ?PROP2 are consistent with one another, i.e. it is possible for both of them to be true at the same time.') ).

fof(kb_SUMO_6822,axiom,
    s__instance(s__orientation__m,s__SpatialRelation) ).

fof(kb_SUMO_6823,axiom,
    s__instance(s__orientation__m,s__TernaryPredicate) ).

fof(kb_SUMO_6824,axiom,
    s__domain(s__orientation__m,"1",s__Object) ).

fof(kb_SUMO_6825,axiom,
    s__domain(s__orientation__m,"2",s__Object) ).

fof(kb_SUMO_6826,axiom,
    s__domain(s__orientation__m,"3",s__PositionalAttribute) ).

fof(kb_SUMO_6827,axiom,
    s__documentation(s__orientation__m,s__EnglishLanguage,'A general &%Predicate for indicating how two &%Objects are oriented with respect to one another. For example, (orientation ?OBJ1 ?OBJ2 North) means that ?OBJ1 is north of ?OBJ2, and (orientation ?OBJ1 ?OBJ2 Vertical) means that ?OBJ1 is positioned vertically with respect to ?OBJ2.') ).

fof(kb_SUMO_6828,axiom,
    ! [V__ROW1,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_1(V__ROW1)
          & s__inList(V__ATTR1,s__ListFn_1(V__ROW1))
          & s__inList(V__ATTR2,s__ListFn_1(V__ROW1))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6829,axiom,
    ! [V__ROW1,V__ROW2,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_2(V__ROW1,V__ROW2)
          & s__inList(V__ATTR1,s__ListFn_2(V__ROW1,V__ROW2))
          & s__inList(V__ATTR2,s__ListFn_2(V__ROW1,V__ROW2))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6830,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_3(V__ROW1,V__ROW2,V__ROW3)
          & s__inList(V__ATTR1,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
          & s__inList(V__ATTR2,s__ListFn_3(V__ROW1,V__ROW2,V__ROW3))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6831,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4)
          & s__inList(V__ATTR1,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
          & s__inList(V__ATTR2,s__ListFn_4(V__ROW1,V__ROW2,V__ROW3,V__ROW4))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6832,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5)
          & s__inList(V__ATTR1,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
          & s__inList(V__ATTR2,s__ListFn_5(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6833,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTR2,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6)
          & s__inList(V__ATTR1,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
          & s__inList(V__ATTR2,s__ListFn_6(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6834,axiom,
    ! [V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ATTR2,V__ROW7,V__OBJ1,V__OBJ2,V__ATTR1] :
      ( ( s__instance(V__ATTR1,s__PositionalAttribute)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__ATTR2,s__PositionalAttribute) )
     => ( ( s__orientation(V__OBJ1,V__OBJ2,V__ATTR1)
          & s__contraryAttribute_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7)
          & s__inList(V__ATTR1,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
          & s__inList(V__ATTR2,s__ListFn_7(V__ROW1,V__ROW2,V__ROW3,V__ROW4,V__ROW5,V__ROW6,V__ROW7))
          & V__ATTR1 != V__ATTR2 )
       => ~ s__orientation(V__OBJ1,V__OBJ2,V__ATTR2) ) ) ).

fof(kb_SUMO_6835,axiom,
    s__instance(s__direction__m,s__CaseRole) ).

fof(kb_SUMO_6836,axiom,
    s__domain(s__direction__m,"1",s__Process) ).

fof(kb_SUMO_6837,axiom,
    s__domain(s__direction__m,"2",s__DirectionalAttribute) ).

fof(kb_SUMO_6838,axiom,
    s__subrelation(s__direction__m,s__involvedInEvent__m) ).

fof(kb_SUMO_6839,axiom,
    s__documentation(s__direction__m,s__EnglishLanguage,'(&%direction ?PROC ?ATTR) means that the &%Process ?PROC is moving in the direction ?ATTR. For example, one would use this &%Predicate to represent the fact that Max is moving &%North.') ).

%FOL fof(kb_SUMO_6840,axiom,(( (! [V__TIME,V__PROC,V__ATTR1] : (s__holdsDuring(V__TIME,'s__direction(V__PROC,V__ATTR1)') => (! [V__ATTR2] : ((s__instance(V__ATTR2,s__DirectionalAttribute) & s__instance(V__ATTR1,s__DirectionalAttribute) & s__instance(V__PROC,s__Process) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__direction(V__PROC,V__ATTR2)') => (V__ATTR2 = V__ATTR1)))))) ))).

fof(kb_SUMO_6841,axiom,
    s__instance(s__faces__m,s__BinaryPredicate) ).

fof(kb_SUMO_6842,axiom,
    s__domain(s__faces__m,"1",s__Object) ).

fof(kb_SUMO_6843,axiom,
    s__domain(s__faces__m,"2",s__DirectionalAttribute) ).

fof(kb_SUMO_6844,axiom,
    s__documentation(s__faces__m,s__EnglishLanguage,'(&%faces ?OBJ ?DIRECTION) means that the front of ?OBJ (see &%FrontFn) is positioned towards the compass direction ?DIRECTION. More precisely, it means that if a line were extended from the center of ?DIRECTION, the line would intersect with the front of ?OBJ before it intersected with its back (see &%BackFn).') ).

%FOL fof(kb_SUMO_6845,axiom,(( (! [V__TIME,V__PROC,V__ATTR1] : (s__holdsDuring(V__TIME,'s__faces(V__PROC,V__ATTR1)') => (! [V__ATTR2] : ((s__instance(V__ATTR2,s__DirectionalAttribute) & s__instance(V__ATTR1,s__DirectionalAttribute) & s__instance(V__PROC,s__Object) & s__instance(V__TIME,s__TimePosition)) => (s__holdsDuring(V__TIME,'s__faces(V__PROC,V__ATTR2)') => (V__ATTR2 = V__ATTR1)))))) ))).

fof(kb_SUMO_6846,axiom,
    s__subclass(s__TruthValue,s__RelationalAttribute) ).

fof(kb_SUMO_6847,axiom,
    s__documentation(s__TruthValue,s__EnglishLanguage,'The &%Class of truth values, e.g. &%True and &%False. These are &%Attributes of &%Sentences and &%Propositions.') ).

fof(kb_SUMO_6848,axiom,
    ! [V__VALUE,V__ITEM] :
      ( s__instance(V__VALUE,s__Attribute)
     => ( ( s__property(V__ITEM,V__VALUE)
          & s__instance(V__VALUE,s__TruthValue) )
       => ( s__instance(V__ITEM,s__Sentence)
          | s__instance(V__ITEM,s__Proposition) ) ) ) ).

fof(kb_SUMO_6849,axiom,
    s__instance('$true__m',s__TruthValue) ).

fof(kb_SUMO_6850,axiom,
    s__instance(s__TruthValue__t,s__SetOrClass) ).

fof(kb_SUMO_6851,axiom,
    s__documentation('$true__m',s__EnglishLanguage,'The &%TruthValue of being true.') ).

fof(kb_SUMO_6852,axiom,
    s__instance('$false__m',s__TruthValue) ).

fof(kb_SUMO_6853,axiom,
    s__contraryAttribute_2('$false__m','$true__m') ).

fof(kb_SUMO_6854,axiom,
    s__documentation('$false__m',s__EnglishLanguage,'The &%TruthValue of being false.') ).

fof(kb_SUMO_6855,axiom,
    s__subrelation(s__truth__m,s__property__m) ).

fof(kb_SUMO_6856,axiom,
    s__domain(s__truth__m,"1",s__Sentence) ).

fof(kb_SUMO_6857,axiom,
    s__domain(s__truth__m,"2",s__TruthValue) ).

fof(kb_SUMO_6858,axiom,
    s__documentation(s__truth__m,s__EnglishLanguage,'The &%BinaryPredicate that relates a &%Sentence to its &%TruthValue.') ).

fof(kb_SUMO_6859,axiom,
    s__subclass(s__PositionalAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_6860,axiom,
    s__documentation(s__PositionalAttribute,s__EnglishLanguage,'&%Attributes characterizing the orientation of an &%Object, e.g. &%Vertical versus &%Horizontal, &%Left versus &%Right etc.') ).

fof(kb_SUMO_6861,axiom,
    s__subclass(s__DirectionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_6862,axiom,
    s__instance(s__DirectionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6863,axiom,
    s__instance(s__PositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6864,axiom,
    s__documentation(s__DirectionalAttribute,s__EnglishLanguage,'The subclass of &%PositionalAttributes that concern compass directions.') ).

fof(kb_SUMO_6865,axiom,
    ! [V__DIRECT,V__OBJ1,V__OBJ2,V__OBJ3] :
      ( ( s__instance(V__OBJ3,s__Object)
        & s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object)
        & s__instance(V__DIRECT,s__PositionalAttribute) )
     => ( ( s__instance(V__DIRECT,s__DirectionalAttribute)
          & s__orientation(V__OBJ1,V__OBJ2,V__DIRECT)
          & s__orientation(V__OBJ2,V__OBJ3,V__DIRECT) )
       => s__between(V__OBJ1,V__OBJ2,V__OBJ3) ) ) ).

fof(kb_SUMO_6866,axiom,
    s__instance(s__North,s__DirectionalAttribute) ).

fof(kb_SUMO_6867,axiom,
    s__contraryAttribute_4(s__North,s__South,s__East,s__West) ).

fof(kb_SUMO_6868,axiom,
    s__documentation(s__North,s__EnglishLanguage,'The compass direction of &%North.') ).

fof(kb_SUMO_6869,axiom,
    s__instance(s__South,s__DirectionalAttribute) ).

fof(kb_SUMO_6870,axiom,
    s__documentation(s__South,s__EnglishLanguage,'The compass direction of &%South.') ).

fof(kb_SUMO_6871,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__North)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__South) ) ) ).

fof(kb_SUMO_6872,axiom,
    s__instance(s__East,s__DirectionalAttribute) ).

fof(kb_SUMO_6873,axiom,
    s__documentation(s__East,s__EnglishLanguage,'The compass direction of &%East.') ).

fof(kb_SUMO_6874,axiom,
    s__instance(s__West,s__DirectionalAttribute) ).

fof(kb_SUMO_6875,axiom,
    s__documentation(s__West,s__EnglishLanguage,'The compass direction of &%West.') ).

fof(kb_SUMO_6876,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__East)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__West) ) ) ).

fof(kb_SUMO_6877,axiom,
    s__instance(s__Vertical,s__PositionalAttribute) ).

fof(kb_SUMO_6878,axiom,
    s__documentation(s__Vertical,s__EnglishLanguage,'Attribute used to indicate that an &%Object is positioned height-wise with respect to another &%Object.') ).

fof(kb_SUMO_6879,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Vertical)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Vertical) ) ) ).

fof(kb_SUMO_6880,axiom,
    s__instance(s__Horizontal,s__PositionalAttribute) ).

fof(kb_SUMO_6881,axiom,
    s__contraryAttribute_2(s__Horizontal,s__Vertical) ).

fof(kb_SUMO_6882,axiom,
    s__documentation(s__Horizontal,s__EnglishLanguage,'Attribute used to indicate that an &%Object is positioned width-wise with respect to another &%Object.') ).

fof(kb_SUMO_6883,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Horizontal)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Horizontal) ) ) ).

fof(kb_SUMO_6884,axiom,
    s__subclass(s__SymmetricPositionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_6885,axiom,
    s__documentation(s__SymmetricPositionalAttribute,s__EnglishLanguage,'&%SymmetricAttribute is the class of &%PositionalAttribute that hold between two items regardless of their order or orientation.') ).

fof(kb_SUMO_6886,axiom,
    ! [V__P,V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__O2,s__Object)
        & s__instance(V__P,s__PositionalAttribute) )
     => ( ( s__instance(V__P,s__SymmetricPositionalAttribute)
          & s__orientation(V__O1,V__O2,V__P) )
       => s__orientation(V__O2,V__O1,V__P) ) ) ).

fof(kb_SUMO_6887,axiom,
    s__subclass(s__AntiSymmetricPositionalAttribute,s__PositionalAttribute) ).

fof(kb_SUMO_6888,axiom,
    s__documentation(s__AntiSymmetricPositionalAttribute,s__EnglishLanguage,'&%AntiSymmetricPositionalAttribute is the class of &%PositionalAttribute that hold in only one direction. I.e. two objects cannot simulataneously be &%On each other.') ).

fof(kb_SUMO_6889,axiom,
    ! [V__P,V__O2,V__O1] :
      ( ( s__instance(V__O1,s__Object)
        & s__instance(V__O2,s__Object)
        & s__instance(V__P,s__PositionalAttribute) )
     => ( ( s__instance(V__P,s__AntiSymmetricPositionalAttribute)
          & s__orientation(V__O1,V__O2,V__P) )
       => ~ s__orientation(V__O2,V__O1,V__P) ) ) ).

fof(kb_SUMO_6890,axiom,
    s__instance(s__Above,s__PositionalAttribute) ).

fof(kb_SUMO_6891,axiom,
    s__instance(s__Above,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_6892,axiom,
    s__contraryAttribute_2(s__Above,s__Below) ).

fof(kb_SUMO_6893,axiom,
    s__documentation(s__Above,s__EnglishLanguage,'This is a &%PositionalAttribute derived from the up/down schema and not involving contact. Note that this means directly above, i.e., if one object is &%Above another object, then the projections of the two objects overlap.') ).

fof(kb_SUMO_6894,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Above)
       => ~ s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_6895,axiom,
    s__instance(s__Below,s__PositionalAttribute) ).

fof(kb_SUMO_6896,axiom,
    s__instance(s__Below,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_6897,axiom,
    s__documentation(s__Below,s__EnglishLanguage,'This &%PositionalAttribute is derived from the up/down schema and may or may not involve contact. Note that this means directly below, i.e., if one object is &%Below another object, then the projections of the two objects overlap.') ).

fof(kb_SUMO_6898,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Below)
      <=> ( s__orientation(V__OBJ2,V__OBJ1,s__On)
          | s__orientation(V__OBJ2,V__OBJ1,s__Above) ) ) ) ).

fof(kb_SUMO_6899,axiom,
    s__instance(s__Adjacent,s__SymmetricPositionalAttribute) ).

fof(kb_SUMO_6900,axiom,
    s__instance(s__SymmetricPositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6901,axiom,
    s__documentation(s__Adjacent,s__EnglishLanguage,'Used to assert that an object ?OBJ1 is close to, near or abutting ?OBJ2. This &%PositionalAttribute covers the following common sense notions: adjoins, abuts, is contiguous to, is juxtaposed, and is close to.') ).

fof(kb_SUMO_6902,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Adjacent)
      <=> ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
          | s__connected(V__OBJ1,V__OBJ2) ) ) ) ).

fof(kb_SUMO_6903,axiom,
    s__instance(s__Left,s__PositionalAttribute) ).

fof(kb_SUMO_6904,axiom,
    s__instance(s__Left,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_6905,axiom,
    s__documentation(s__Left,s__EnglishLanguage,'This &%PositionalAttribute is derived from the left/right schema. Note that this means directly to the left, so that, if one object is to the left of another, then the projections of the two objects overlap.') ).

fof(kb_SUMO_6906,axiom,
    s__instance(s__Right,s__PositionalAttribute) ).

fof(kb_SUMO_6907,axiom,
    s__instance(s__Right,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_6908,axiom,
    s__instance(s__AntiSymmetricPositionalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6909,axiom,
    s__contraryAttribute_2(s__Right,s__Left) ).

fof(kb_SUMO_6910,axiom,
    s__documentation(s__Right,s__EnglishLanguage,'This &%PositionalAttribute is derived from the left/right schema. Note that this means directly to the right, so that, if one object is to the right of another, then the projections of the two objects overlap.') ).

fof(kb_SUMO_6911,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Right)
      <=> s__orientation(V__OBJ2,V__OBJ1,s__Left) ) ) ).

fof(kb_SUMO_6912,axiom,
    s__instance(s__Near,s__SymmetricPositionalAttribute) ).

fof(kb_SUMO_6913,axiom,
    s__documentation(s__Near,s__EnglishLanguage,'The relation of common sense adjacency. Note that, if an object is &%Near another object, then the objects are not &%connected.') ).

fof(kb_SUMO_6914,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
       => ~ s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_6915,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__Near)
       => s__orientation(V__OBJ2,V__OBJ1,s__Near) ) ) ).

fof(kb_SUMO_6916,axiom,
    s__instance(s__On,s__AntiSymmetricPositionalAttribute) ).

fof(kb_SUMO_6917,axiom,
    s__documentation(s__On,s__EnglishLanguage,'This is used to assert that an object is on top of another object, and it is derived from the up/down schema and involves contact.') ).

fof(kb_SUMO_6918,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => s__connected(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_6919,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => s__located(V__OBJ1,V__OBJ2) ) ) ).

fof(kb_SUMO_6920,axiom,
    ! [V__OBJ1,V__OBJ2] :
      ( ( s__instance(V__OBJ2,s__Object)
        & s__instance(V__OBJ1,s__Object) )
     => ( s__orientation(V__OBJ1,V__OBJ2,s__On)
       => ~ s__orientation(V__OBJ2,V__OBJ1,s__On) ) ) ).

fof(kb_SUMO_6921,axiom,
    s__subclass(s__TimeZone,s__RelationalAttribute) ).

fof(kb_SUMO_6922,axiom,
    s__documentation(s__TimeZone,s__EnglishLanguage,'An &%Attribute which is used to specify coordinates in which time measures are uniform, i.e. all time devices are synchronized to the same &%TimePositions.') ).

fof(kb_SUMO_6923,axiom,
    s__instance(s__CoordinatedUniversalTimeZone,s__TimeZone) ).

fof(kb_SUMO_6924,axiom,
    s__instance(s__TimeZone__t,s__SetOrClass) ).

fof(kb_SUMO_6925,axiom,
    s__documentation(s__CoordinatedUniversalTimeZone,s__EnglishLanguage,'A &%TimeZone which functions as the standard time zone. It is also known as Zulu time (in the military), Greenwich Mean Time, and the Western European time zone. Note that whenever a &%TimeZone is not specified, the &%TimePosition is understood to be with respect to the &%CoordinatedUniversalTimeZone.') ).

fof(kb_SUMO_6926,axiom,
    s__instance(s__PacificTimeZone,s__TimeZone) ).

fof(kb_SUMO_6927,axiom,
    s__documentation(s__PacificTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the western part of the United States.') ).

fof(kb_SUMO_6928,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__PacificTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"8") ) ) ).

fof(kb_SUMO_6929,axiom,
    s__instance(s__MountainTimeZone,s__TimeZone) ).

fof(kb_SUMO_6930,axiom,
    s__documentation(s__MountainTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the Rocky Mountain region of the United States.') ).

fof(kb_SUMO_6931,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__MountainTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"7") ) ) ).

fof(kb_SUMO_6932,axiom,
    s__instance(s__CentralTimeZone,s__TimeZone) ).

fof(kb_SUMO_6933,axiom,
    s__documentation(s__CentralTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the midwestern United States.') ).

fof(kb_SUMO_6934,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__CentralTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"6") ) ) ).

fof(kb_SUMO_6935,axiom,
    s__instance(s__EasternTimeZone,s__TimeZone) ).

fof(kb_SUMO_6936,axiom,
    s__documentation(s__EasternTimeZone,s__EnglishLanguage,'A &%TimeZone that covers much of the eastern United States.') ).

fof(kb_SUMO_6937,axiom,
    ! [V__TIME2,V__TIME1] :
      ( s__instance(V__TIME1,s__TimePosition)
     => ( s__RelativeTimeFn(V__TIME1,s__EasternTimeZone) = V__TIME2
       => V__TIME2 = plus(V__TIME1,"5") ) ) ).

fof(kb_SUMO_6938,axiom,
    s__instance(s__RelativeTimeFn__m,s__BinaryFunction) ).

fof(kb_SUMO_6939,axiom,
    s__instance(s__RelativeTimeFn__m,s__TemporalRelation) ).

fof(kb_SUMO_6940,axiom,
    s__instance(s__RelativeTimeFn__m,s__TotalValuedRelation) ).

fof(kb_SUMO_6941,axiom,
    s__domain(s__RelativeTimeFn__m,"1",s__TimePosition) ).

fof(kb_SUMO_6942,axiom,
    s__domain(s__RelativeTimeFn__m,"2",s__TimeZone) ).

fof(kb_SUMO_6943,axiom,
    s__range(s__RelativeTimeFn__m,s__TimePosition) ).

fof(kb_SUMO_6944,axiom,
    s__documentation(s__RelativeTimeFn__m,s__EnglishLanguage,'A means of converting &%TimePositions between different &%TimeZones. (&%RelativeTimeFn ?TIME ?ZONE) denotes the &%TimePosition in &%CoordinatedUniversalTime that is contemporaneous with the &%TimePosition ?TIME in &%TimeZone ?ZONE. For example, (&%RelativeTimeFn (&%MeasureFn 14 &%HourDuration) &%EasternTimeZone) would return the value (&%MeasureFn 19 &%HourDuration).') ).

fof(kb_SUMO_6945,axiom,
    s__subclass(s__SocialRole,s__RelationalAttribute) ).

fof(kb_SUMO_6946,axiom,
    s__instance(s__SocialRole__t,s__SetOrClass) ).

fof(kb_SUMO_6947,axiom,
    s__documentation(s__SocialRole,s__EnglishLanguage,'The &%Class of all &%Attributes that specify the position or status of a &%CognitiveAgent within an &%Organization or other &%Group.') ).

fof(kb_SUMO_6948,axiom,
    ! [V__PERSON,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__PERSON,s__Object) )
     => ( ( s__attribute(V__PERSON,V__ATTRIBUTE)
          & s__instance(V__ATTRIBUTE,s__SocialRole) )
       => s__instance(V__PERSON,s__Human) ) ) ).

fof(kb_SUMO_6949,axiom,
    s__instance(s__Unemployed,s__SocialRole) ).

fof(kb_SUMO_6950,axiom,
    s__documentation(s__Unemployed,s__EnglishLanguage,'The &%Attribute of a &%CognitiveAgent when he/she is unemployed.') ).

fof(kb_SUMO_6951,axiom,
    ! [V__PERSON] :
      ( ( s__instance(V__PERSON,s__Human)
        & ! [V__ORG] :
            ( ( s__instance(V__ORG,s__Organization)
              & s__instance(V__PERSON,s__CognitiveAgent) )
           => ~ s__employs(V__ORG,V__PERSON) ) )
    <=> s__attribute(V__PERSON,s__Unemployed) ) ).

fof(kb_SUMO_6952,axiom,
    s__subclass(s__Position,s__SocialRole) ).

fof(kb_SUMO_6953,axiom,
    s__instance(s__Position__t,s__SetOrClass) ).

fof(kb_SUMO_6954,axiom,
    s__documentation(s__Position,s__EnglishLanguage,'A formal position of reponsibility within an &%Organization. Examples of &%Positions include president, laboratory director, senior researcher, sales representative, etc.') ).

fof(kb_SUMO_6955,axiom,
    s__instance(s__occupiesPosition__m,s__TernaryPredicate) ).

fof(kb_SUMO_6956,axiom,
    s__domain(s__occupiesPosition__m,"1",s__Human) ).

fof(kb_SUMO_6957,axiom,
    s__domain(s__occupiesPosition__m,"2",s__Position) ).

fof(kb_SUMO_6958,axiom,
    s__domain(s__occupiesPosition__m,"3",s__Organization) ).

fof(kb_SUMO_6959,axiom,
    s__documentation(s__occupiesPosition__m,s__EnglishLanguage,'(&%occupiesPosition ?PERSON ?POSITION ?ORG) means that ?PERSON holds the &%Position ?POSITION at &%Organization ?ORG. For example, (&%occupiesPosition &%TomSmith &%ResearchDirector &%AcmeLaboratory) means that &%TomSmith is a research director at Acme Labs.') ).

fof(kb_SUMO_6960,axiom,
    ! [V__ORG,V__POSITION,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Human)
        & s__instance(V__POSITION,s__Position)
        & s__instance(V__ORG,s__Organization) )
     => ( s__occupiesPosition(V__AGENT,V__POSITION,V__ORG)
       => s__attribute(V__AGENT,V__POSITION) ) ) ).

fof(kb_SUMO_6961,axiom,
    ! [V__PERSON,V__ORG] :
      ( ( s__instance(V__ORG,s__Organization)
        & s__instance(V__PERSON,s__Human) )
     => ( s__employs(V__ORG,V__PERSON)
       => ? [V__POSITION] :
            ( s__instance(V__POSITION,s__Position)
            & s__occupiesPosition(V__PERSON,V__POSITION,V__ORG) ) ) ) ).

fof(kb_SUMO_6962,axiom,
    ! [V__PERSON,V__ORGANIZATION,V__POSITION] :
      ( ( s__instance(V__POSITION,s__Position)
        & s__instance(V__ORGANIZATION,s__Organization)
        & s__instance(V__PERSON,s__Human) )
     => ( s__occupiesPosition(V__PERSON,V__POSITION,V__ORGANIZATION)
       => s__member(V__PERSON,V__ORGANIZATION) ) ) ).

fof(kb_SUMO_6963,axiom,
    s__subclass(s__NormativeAttribute,s__RelationalAttribute) ).

fof(kb_SUMO_6964,axiom,
    s__instance(s__NormativeAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6965,axiom,
    s__instance(s__RelationalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6966,axiom,
    s__documentation(s__NormativeAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes that are specific to morality, legality, aesthetics, etiquette, etc. Many of these attributes express a judgement that something ought or ought not to be the case.') ).

fof(kb_SUMO_6967,axiom,
    s__instance(s__modalAttribute__m,s__BinaryPredicate) ).

fof(kb_SUMO_6968,axiom,
    s__instance(s__modalAttribute__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6969,axiom,
    s__instance(s__modalAttribute__m,s__IrreflexiveRelation) ).

fof(kb_SUMO_6970,axiom,
    s__subrelation(s__modalAttribute__m,s__property__m) ).

fof(kb_SUMO_6971,axiom,
    s__domain(s__modalAttribute__m,"1",s__Formula) ).

fof(kb_SUMO_6972,axiom,
    s__domain(s__modalAttribute__m,"2",s__NormativeAttribute) ).

fof(kb_SUMO_6973,axiom,
    s__documentation(s__modalAttribute__m,s__EnglishLanguage,'A &%BinaryRelation that is used to state the normative force of a &%Proposition. (&%modalAttribute ?FORMULA ?PROP) means that the &%Proposition expressed by ?FORMULA has the &%NormativeAttribute ?PROP. For example, (&%modalAttribute (&%exists (?ACT ?OBJ) (&%and (&%instance ?ACT &%Giving) (&%agent ?ACT John) (&%patient ?ACT ?OBJ) (&%destination ?ACT Tom))) &%Obligation) means that John is obligated to give Tom something.') ).

fof(kb_SUMO_6974,axiom,
    ! [V__PROP,V__FORMULA1,V__FORMULA2] :
      ( ( s__instance(V__FORMULA2,s__Formula)
        & s__instance(V__FORMULA1,s__Formula)
        & s__instance(V__PROP,s__NormativeAttribute) )
     => ( ( s__modalAttribute(V__FORMULA1,V__PROP)
          & s__entails(V__FORMULA1,V__FORMULA2) )
       => s__modalAttribute(V__FORMULA2,V__PROP) ) ) ).

fof(kb_SUMO_6975,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Permission)
       => s__modalAttribute(V__FORMULA,s__Possibility) ) ) ).

fof(kb_SUMO_6976,axiom,
    s__subclass(s__SubjectiveAssessmentAttribute,s__NormativeAttribute) ).

fof(kb_SUMO_6977,axiom,
    s__instance(s__SubjectiveAssessmentAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6978,axiom,
    s__disjoint(s__SubjectiveAssessmentAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_6979,axiom,
    s__documentation(s__SubjectiveAssessmentAttribute,s__EnglishLanguage,'The &%Class of &%NormativeAttributes which lack an objective criterion for their attribution, i.e. the attribution of these &%Attributes varies from subject to subject and even with respect to the same subject over time. This &%Class is, generally speaking, only used when mapping external knowledge sources to the SUMO. If a term from such a knowledge source seems to lack objective criteria for its attribution, it is assigned to this &%Class.') ).

fof(kb_SUMO_6980,axiom,
    s__subclass(s__ObjectiveNorm,s__NormativeAttribute) ).

fof(kb_SUMO_6981,axiom,
    s__documentation(s__ObjectiveNorm,s__EnglishLanguage,'The &%Class of &%NormativeAttributes that are associated with an objective criterion for their attribution, i.e. there is broad consensus about the cases where these attributes are applicable.') ).

fof(kb_SUMO_6982,axiom,
    s__subclass(s__ContestAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_6983,axiom,
    s__instance(s__ContestAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6984,axiom,
    s__documentation(s__ContestAttribute,s__EnglishLanguage,'A &%Class containing &%Attributes that are specific to participants in a &%Contest. In particular, these &%Attributes indicate the position of one of the &%agents in the &%Contest with respect to other &%agent(s) in the &%Contest. Some examples of these &%Attributes are winning, losing, won, lost, etc.') ).

fof(kb_SUMO_6985,axiom,
    ! [V__ATTR,V__THING] :
      ( ( s__instance(V__THING,s__Agent)
        & s__instance(V__THING,s__Process)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__property(V__THING,V__ATTR)
          & s__instance(V__ATTR,s__ContestAttribute) )
       => ? [V__CONTEST] :
            ( s__instance(V__CONTEST,s__Process)
            & s__instance(V__CONTEST,s__Contest)
            & ( s__agent(V__CONTEST,V__THING)
              | s__patient(V__CONTEST,V__THING)
              | s__subProcess(V__THING,V__CONTEST) ) ) ) ) ).

fof(kb_SUMO_6986,axiom,
    s__subclass(s__AlethicAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_6987,axiom,
    s__documentation(s__AlethicAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes relating to the notions of possibility and necessity.') ).

fof(kb_SUMO_6988,axiom,
    s__instance(s__Possibility,s__AlethicAttribute) ).

fof(kb_SUMO_6989,axiom,
    s__instance(s__AlethicAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_6990,axiom,
    s__documentation(s__Possibility,s__EnglishLanguage,'Attribute that applies to &%Propositions that are possible, i.e. true in at least one possible world.') ).

fof(kb_SUMO_6991,axiom,
    s__instance(s__Necessity,s__AlethicAttribute) ).

fof(kb_SUMO_6992,axiom,
    s__documentation(s__Necessity,s__EnglishLanguage,'Attribute that applies to &%Propositions that are necessary, i.e. true in every possible world.') ).

fof(kb_SUMO_6993,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Necessity)
      <=> ~ s__modalAttribute('(~ V__FORMULA)',s__Possibility) ) ) ).

fof(kb_SUMO_6994,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Necessity)
       => s__modalAttribute(V__FORMULA,s__Possibility) ) ) ).

fof(kb_SUMO_6995,axiom,
    s__instance(s__holdsRight__m,s__BinaryPredicate) ).

fof(kb_SUMO_6996,axiom,
    s__instance(s__holdsRight__m,s__AsymmetricRelation) ).

fof(kb_SUMO_6997,axiom,
    s__domain(s__holdsRight__m,"1",s__Formula) ).

fof(kb_SUMO_6998,axiom,
    s__domain(s__holdsRight__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_6999,axiom,
    s__documentation(s__holdsRight__m,s__EnglishLanguage,'Expresses a relationship between a &%Formula and a &%CognitiveAgent whereby the &%CognitiveAgent has the right to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_7000,axiom,
    s__instance(s__confersRight__m,s__TernaryPredicate) ).

fof(kb_SUMO_7001,axiom,
    s__domain(s__confersRight__m,"1",s__Formula) ).

fof(kb_SUMO_7002,axiom,
    s__domain(s__confersRight__m,"2",s__Entity) ).

fof(kb_SUMO_7003,axiom,
    s__domain(s__confersRight__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_7004,axiom,
    s__documentation(s__confersRight__m,s__EnglishLanguage,'Expresses the relationship between a &%Formula, an &%Entity, and a &%CognitiveAgent when the &%Entity authorizes the &%CognitiveAgent to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_7005,axiom,
    ! [V__FORMULA,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__confersRight(V__FORMULA,V__AGENT1,V__AGENT2)
       => s__holdsRight(V__FORMULA,V__AGENT2) ) ) ).

fof(kb_SUMO_7006,axiom,
    s__instance(s__holdsObligation__m,s__BinaryPredicate) ).

fof(kb_SUMO_7007,axiom,
    s__instance(s__holdsObligation__m,s__AsymmetricRelation) ).

fof(kb_SUMO_7008,axiom,
    s__domain(s__holdsObligation__m,"1",s__Formula) ).

fof(kb_SUMO_7009,axiom,
    s__domain(s__holdsObligation__m,"2",s__CognitiveAgent) ).

fof(kb_SUMO_7010,axiom,
    s__relatedInternalConcept(s__holdsObligation__m,s__holdsRight__m) ).

fof(kb_SUMO_7011,axiom,
    s__documentation(s__holdsObligation__m,s__EnglishLanguage,'Expresses a relationship between a &%Formula and a &%CognitiveAgent whereby the &%CognitiveAgent has the obligation to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_7012,axiom,
    s__instance(s__confersObligation__m,s__TernaryPredicate) ).

fof(kb_SUMO_7013,axiom,
    s__domain(s__confersObligation__m,"1",s__Formula) ).

fof(kb_SUMO_7014,axiom,
    s__domain(s__confersObligation__m,"2",s__Entity) ).

fof(kb_SUMO_7015,axiom,
    s__domain(s__confersObligation__m,"3",s__CognitiveAgent) ).

fof(kb_SUMO_7016,axiom,
    s__relatedInternalConcept(s__confersObligation__m,s__confersRight__m) ).

fof(kb_SUMO_7017,axiom,
    s__documentation(s__confersObligation__m,s__EnglishLanguage,'Expresses the relationship between a a &%Formula, an &%Entity, and a &%CognitiveAgent when the &%Entity obligates the &%CognitiveAgent to bring it about that the &%Formula is true.') ).

fof(kb_SUMO_7018,axiom,
    ! [V__FORMULA,V__AGENT2,V__AGENT1] :
      ( ( s__instance(V__AGENT2,s__CognitiveAgent)
        & s__instance(V__FORMULA,s__Formula) )
     => ( s__confersObligation(V__FORMULA,V__AGENT1,V__AGENT2)
       => s__holdsObligation(V__FORMULA,V__AGENT2) ) ) ).

fof(kb_SUMO_7019,axiom,
    s__subclass(s__DeonticAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_7020,axiom,
    s__documentation(s__DeonticAttribute,s__EnglishLanguage,'A &%Class containing all of the &%Attributes relating to the notions of permission, obligation, and prohibition.') ).

fof(kb_SUMO_7021,axiom,
    s__instance(s__Permission,s__DeonticAttribute) ).

fof(kb_SUMO_7022,axiom,
    s__instance(s__DeonticAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7023,axiom,
    s__documentation(s__Permission,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent is permitted, by some authority, to make true.') ).

fof(kb_SUMO_7024,axiom,
    s__instance(s__Obligation,s__DeonticAttribute) ).

fof(kb_SUMO_7025,axiom,
    s__documentation(s__Obligation,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent is required, by some authority, to make true.') ).

fof(kb_SUMO_7026,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Obligation)
      <=> ~ s__modalAttribute('(~ V__FORMULA)',s__Permission) ) ) ).

fof(kb_SUMO_7027,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Obligation)
       => s__modalAttribute(V__FORMULA,s__Permission) ) ) ).

fof(kb_SUMO_7028,axiom,
    s__subAttribute(s__Law,s__Obligation) ).

fof(kb_SUMO_7029,axiom,
    s__documentation(s__Law,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that are required by a government or a branch of the government and that are enforced with penalties for noncompliance. These &%Propositions may be codified as legislation or they may be more informal, as in the case of government policy.') ).

fof(kb_SUMO_7030,axiom,
    s__subAttribute(s__Promise,s__Obligation) ).

fof(kb_SUMO_7031,axiom,
    s__documentation(s__Promise,s__EnglishLanguage,'&%Attribute that applies to &%Propositions that an &%Agent promises to make true. &%Promises may be implicit or explicit. They may be expressed in a written or verbal or gestural manner.') ).

fof(kb_SUMO_7032,axiom,
    s__instance(s__Prohibition,s__DeonticAttribute) ).

fof(kb_SUMO_7033,axiom,
    s__documentation(s__Prohibition,s__EnglishLanguage,'&%Prohibition is the &%DeonticAttribute that applies to &%Formulas that an &%Agent is forbidden, by some authority, to make true.') ).

fof(kb_SUMO_7034,axiom,
    ! [V__FORMULA] :
      ( s__instance(V__FORMULA,s__Formula)
     => ( s__modalAttribute(V__FORMULA,s__Prohibition)
      <=> ~ s__modalAttribute(V__FORMULA,s__Permission) ) ) ).

fof(kb_SUMO_7035,axiom,
    s__subclass(s__ProbabilityAttribute,s__ObjectiveNorm) ).

fof(kb_SUMO_7036,axiom,
    s__instance(s__ObjectiveNorm__t,s__SetOrClass) ).

fof(kb_SUMO_7037,axiom,
    s__documentation(s__ProbabilityAttribute,s__EnglishLanguage,'A class containing all of the &%Attributes relating to objective, qualitative assessments of probability, e.g. &%Likely and &%Unlikely.') ).

fof(kb_SUMO_7038,axiom,
    s__instance(s__Likely,s__ProbabilityAttribute) ).

fof(kb_SUMO_7039,axiom,
    s__instance(s__ProbabilityAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7040,axiom,
    s__contraryAttribute_2(s__Likely,s__Unlikely) ).

fof(kb_SUMO_7041,axiom,
    s__documentation(s__Likely,s__EnglishLanguage,'The &%ProbabilityAttribute of being probable, i.e. more likely than not to be &%True.') ).

%FOL fof(kb_SUMO_7042,axiom,(( (! [V__FORMULA] : (s__instance(V__FORMULA,s__Formula) => (s__modalAttribute(V__FORMULA,s__Likely) => greater(s__ProbabilityFn('s__truth(V__FORMULA,'$true__m')'),s__ProbabilityFn('s__truth(V__FORMULA,'$false__m')'))))) ))).

fof(kb_SUMO_7043,axiom,
    s__instance(s__Unlikely,s__ProbabilityAttribute) ).

fof(kb_SUMO_7044,axiom,
    s__documentation(s__Unlikely,s__EnglishLanguage,'The &%ProbabilityAttribute of being improbable, i.e. more likely than not to be &%False.') ).

%FOL fof(kb_SUMO_7045,axiom,(( (! [V__FORMULA] : (s__instance(V__FORMULA,s__Formula) => (s__modalAttribute(V__FORMULA,s__Unlikely) => greater(s__ProbabilityFn('s__truth(V__FORMULA,'$false__m')'),s__ProbabilityFn('s__truth(V__FORMULA,'$true__m')'))))) ))).

fof(kb_SUMO_7046,axiom,
    s__subclass(s__PhysicalState,s__InternalAttribute) ).

fof(kb_SUMO_7047,axiom,
    s__contraryAttribute_4(s__Solid,s__Liquid,s__Gas,s__Plasma) ).

fof(kb_SUMO_7048,axiom,
    s__exhaustiveAttribute_6(s__PhysicalState,s__Solid,s__Fluid,s__Liquid,s__Gas,s__Plasma) ).

fof(kb_SUMO_7049,axiom,
    s__documentation(s__PhysicalState,s__EnglishLanguage,'The physical state of an &%Object. There are three reified instances of this &%Class: &%Solid, &%Liquid, and &%Gas. Physical changes are not characterized by the transformation of one substance into another, but rather by the change of the form (physical states) of a given substance. For example, melting an iron nail yields a substance still called iron.') ).

fof(kb_SUMO_7050,axiom,
    s__instance(s__Solid,s__PhysicalState) ).

fof(kb_SUMO_7051,axiom,
    s__documentation(s__Solid,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Solid if it has a fixed shape and a fixed volume.') ).

fof(kb_SUMO_7052,axiom,
    s__instance(s__Fluid,s__PhysicalState) ).

fof(kb_SUMO_7053,axiom,
    s__documentation(s__Fluid,s__EnglishLanguage,'&%Fluid is the &%PhysicalState attribute of an &%Object that does not have a fixed shape and thus tends to flow or to conform to the shape of a container.') ).

fof(kb_SUMO_7054,axiom,
    s__instance(s__Liquid,s__PhysicalState) ).

fof(kb_SUMO_7055,axiom,
    s__instance(s__PhysicalState__t,s__SetOrClass) ).

fof(kb_SUMO_7056,axiom,
    s__subAttribute(s__Liquid,s__Fluid) ).

fof(kb_SUMO_7057,axiom,
    s__documentation(s__Liquid,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Liquid if it has a fixed volume but not a fixed shape.') ).

fof(kb_SUMO_7058,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Solution)
       => s__attribute(V__OBJ,s__Liquid) ) ) ).

fof(kb_SUMO_7059,axiom,
    s__instance(s__Gas,s__PhysicalState) ).

fof(kb_SUMO_7060,axiom,
    s__subAttribute(s__Gas,s__Fluid) ).

fof(kb_SUMO_7061,axiom,
    s__documentation(s__Gas,s__EnglishLanguage,'An &%Object has the &%Attribute of &%Gas if it has neither a fixed volume nor a fixed shape.') ).

fof(kb_SUMO_7062,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__Substance)
      <=> ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__PhysicalState)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_7063,axiom,
    s__instance(s__Plasma,s__PhysicalState) ).

fof(kb_SUMO_7064,axiom,
    s__subAttribute(s__Plasma,s__Fluid) ).

fof(kb_SUMO_7065,axiom,
    s__documentation(s__Plasma,s__EnglishLanguage,'An extremely energetic &%PhysicalState that consists of atomic nuclei stripped of electrons. That is, a plasma is composed of positive ions and free electrons. &%Plasma behaves differently enough from &%Gas that it is referred to as the fourth state of matter.') ).

fof(kb_SUMO_7066,axiom,
    s__subclass(s__PerceptualAttribute,s__Attribute) ).

fof(kb_SUMO_7067,axiom,
    s__documentation(s__PerceptualAttribute,s__EnglishLanguage,'Any &%Attribute whose presence is detected by an act of &%Perception.') ).

fof(kb_SUMO_7068,axiom,
    ! [V__OBJ,V__PERCEPTION] :
      ( ( s__instance(V__PERCEPTION,s__Process)
        & s__instance(V__OBJ,s__Object) )
     => ( ( s__instance(V__PERCEPTION,s__Perception)
          & s__patient(V__PERCEPTION,V__OBJ) )
       => ? [V__PROP] :
            ( s__instance(V__PROP,s__Attribute)
            & s__instance(V__PROP,s__PerceptualAttribute)
            & s__attribute(V__OBJ,V__PROP) ) ) ) ).

fof(kb_SUMO_7069,axiom,
    s__subclass(s__TasteAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_7070,axiom,
    s__instance(s__TasteAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7071,axiom,
    s__documentation(s__TasteAttribute,s__EnglishLanguage,'The &%Class of &%Attributes relating to the taste of &%Objects.') ).

fof(kb_SUMO_7072,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__instance(V__OBJ,s__FoodForFn(s__Animal))
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__TasteAttribute)
            & s__attribute(V__OBJ,V__ATTR) ) ) ) ).

fof(kb_SUMO_7073,axiom,
    s__subclass(s__OlfactoryAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_7074,axiom,
    s__instance(s__OlfactoryAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7075,axiom,
    s__documentation(s__OlfactoryAttribute,s__EnglishLanguage,'The &%Class of properties that are detectable by smell.') ).

fof(kb_SUMO_7076,axiom,
    s__subclass(s__VisualAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_7077,axiom,
    s__documentation(s__VisualAttribute,s__EnglishLanguage,'The &%Class of visually discernible properties.') ).

fof(kb_SUMO_7078,axiom,
    s__instance(s__Illuminated,s__VisualAttribute) ).

fof(kb_SUMO_7079,axiom,
    s__instance(s__VisualAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7080,axiom,
    s__documentation(s__Illuminated,s__EnglishLanguage,'The &%Attribute of &%Regions that are illuminated to some degree, i.e. in which some shapes are visually discernable.') ).

fof(kb_SUMO_7081,axiom,
    s__instance(s__Unilluminated,s__VisualAttribute) ).

fof(kb_SUMO_7082,axiom,
    s__contraryAttribute_2(s__Unilluminated,s__Illuminated) ).

fof(kb_SUMO_7083,axiom,
    s__documentation(s__Unilluminated,s__EnglishLanguage,'The &%Attribute of &%Regions that are unilluminated, i.e in which no shapes are visually discernable.') ).

fof(kb_SUMO_7084,axiom,
    s__subclass(s__ColorAttribute,s__VisualAttribute) ).

fof(kb_SUMO_7085,axiom,
    s__documentation(s__ColorAttribute,s__EnglishLanguage,'The &%Class of &%Attributes relating to the color of &%Objects.') ).

fof(kb_SUMO_7086,axiom,
    s__subclass(s__PrimaryColor,s__ColorAttribute) ).

fof(kb_SUMO_7087,axiom,
    s__documentation(s__PrimaryColor,s__EnglishLanguage,'Colors which can be blended to form any color and which cannot be derived from any other colors.') ).

fof(kb_SUMO_7088,axiom,
    s__instance(s__Red,s__PrimaryColor) ).

fof(kb_SUMO_7089,axiom,
    s__documentation(s__Red,s__EnglishLanguage,'The &%Attribute of redness.') ).

fof(kb_SUMO_7090,axiom,
    s__instance(s__Blue,s__PrimaryColor) ).

fof(kb_SUMO_7091,axiom,
    s__documentation(s__Blue,s__EnglishLanguage,'The &%Attribute of being blue in color.') ).

fof(kb_SUMO_7092,axiom,
    s__instance(s__Yellow,s__PrimaryColor) ).

fof(kb_SUMO_7093,axiom,
    s__documentation(s__Yellow,s__EnglishLanguage,'The &%Attribute of being yellow in color.') ).

fof(kb_SUMO_7094,axiom,
    s__instance(s__White,s__PrimaryColor) ).

fof(kb_SUMO_7095,axiom,
    s__documentation(s__White,s__EnglishLanguage,'The &%Attribute of being white in color.') ).

fof(kb_SUMO_7096,axiom,
    s__instance(s__Black,s__PrimaryColor) ).

fof(kb_SUMO_7097,axiom,
    s__instance(s__PrimaryColor__t,s__SetOrClass) ).

fof(kb_SUMO_7098,axiom,
    s__documentation(s__Black,s__EnglishLanguage,'The &%Attribute of being black in color.') ).

fof(kb_SUMO_7099,axiom,
    s__instance(s__Monochromatic,s__ColorAttribute) ).

fof(kb_SUMO_7100,axiom,
    s__documentation(s__Monochromatic,s__EnglishLanguage,'An &%Object with this &%Attribute has the same color on every part of its surface.') ).

fof(kb_SUMO_7101,axiom,
    ! [V__OBJ,V__PART,V__COLOR] :
      ( ( s__attribute(V__OBJ,s__Monochromatic)
        & s__superficialPart(V__PART,V__OBJ)
        & s__attribute(V__PART,V__COLOR)
        & s__instance(V__COLOR,s__PrimaryColor) )
     => ! [V__ELEMENT] :
          ( ( s__instance(V__ELEMENT,s__Object)
            & s__instance(V__COLOR,s__Attribute)
            & s__instance(V__PART,s__Object)
            & s__instance(V__OBJ,s__Object) )
         => ( s__superficialPart(V__ELEMENT,V__OBJ)
           => s__attribute(V__ELEMENT,V__COLOR) ) ) ) ).

fof(kb_SUMO_7102,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Monochromatic)
        | s__attribute(V__OBJ,s__Polychromatic) ) ) ).

fof(kb_SUMO_7103,axiom,
    s__instance(s__Polychromatic,s__ColorAttribute) ).

fof(kb_SUMO_7104,axiom,
    s__instance(s__ColorAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7105,axiom,
    s__contraryAttribute_2(s__Polychromatic,s__Monochromatic) ).

fof(kb_SUMO_7106,axiom,
    s__documentation(s__Polychromatic,s__EnglishLanguage,'An &%Object with this &%Attribute has different colors on different parts of its surface.') ).

fof(kb_SUMO_7107,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Polychromatic)
       => ? [V__PART1,V__PART2,V__COLOR1,V__COLOR2] :
            ( s__instance(V__COLOR2,s__Attribute)
            & s__instance(V__COLOR1,s__Attribute)
            & s__instance(V__PART2,s__Object)
            & s__instance(V__PART1,s__Object)
            & s__superficialPart(V__PART1,V__OBJ)
            & s__superficialPart(V__PART2,V__OBJ)
            & s__attribute(V__PART1,V__COLOR1)
            & s__attribute(V__PART2,V__COLOR2)
            & s__instance(V__COLOR1,s__ColorAttribute)
            & s__instance(V__COLOR2,s__ColorAttribute)
            & V__COLOR1 != V__COLOR2 ) ) ) ).

fof(kb_SUMO_7108,axiom,
    s__subclass(s__StructureAttribute,s__InternalAttribute) ).

fof(kb_SUMO_7109,axiom,
    s__documentation(s__StructureAttribute,s__EnglishLanguage,'Each &%subclass of &%StructureAttribute denotes some facet of the structure of physical entities. Each &%instance of &%StructureAttribute denotes some structural characteristic that may pertain to some &%Physical entity.') ).

fof(kb_SUMO_7110,axiom,
    s__subclass(s__ShapeAttribute,s__StructureAttribute) ).

fof(kb_SUMO_7111,axiom,
    s__instance(s__ShapeAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7112,axiom,
    s__instance(s__StructureAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7113,axiom,
    s__documentation(s__ShapeAttribute,s__EnglishLanguage,'Any &%Attribute that relates to the shape of an &%Object.') ).

fof(kb_SUMO_7114,axiom,
    ! [V__SURFACE,V__OBJ,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__OBJ,s__SelfConnectedObject)
        & s__instance(V__SURFACE,s__SelfConnectedObject) )
     => ( ( s__instance(V__ATTRIBUTE,s__ShapeAttribute)
          & s__attribute(V__OBJ,V__ATTRIBUTE)
          & s__surface(V__SURFACE,V__OBJ) )
       => s__attribute(V__SURFACE,V__ATTRIBUTE) ) ) ).

fof(kb_SUMO_7115,axiom,
    s__instance(s__Pliable,s__InternalAttribute) ).

fof(kb_SUMO_7116,axiom,
    s__documentation(s__Pliable,s__EnglishLanguage,'The shape of an &%Object with this &%Attribute can easily be altered.') ).

fof(kb_SUMO_7117,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( ? [V__CHANGE] :
            ( s__instance(V__CHANGE,s__Process)
            & s__instance(V__CHANGE,s__ShapeChange)
            & s__patient(V__CHANGE,V__OBJ) )
       => s__attribute(V__OBJ,s__Pliable) ) ) ).

fof(kb_SUMO_7118,axiom,
    s__instance(s__Rigid,s__InternalAttribute) ).

fof(kb_SUMO_7119,axiom,
    s__contraryAttribute_2(s__Rigid,s__Pliable) ).

fof(kb_SUMO_7120,axiom,
    s__documentation(s__Rigid,s__EnglishLanguage,'The shape of an &%Object with this &%Attribute cannot be altered without breaking.') ).

fof(kb_SUMO_7121,axiom,
    s__subclass(s__TextureAttribute,s__PerceptualAttribute) ).

fof(kb_SUMO_7122,axiom,
    s__instance(s__TextureAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7123,axiom,
    s__documentation(s__TextureAttribute,s__EnglishLanguage,'Any &%Attribute that characterizes the texture of an &%Object.') ).

fof(kb_SUMO_7124,axiom,
    ! [V__SURFACE,V__OBJ,V__ATTRIBUTE] :
      ( ( s__instance(V__ATTRIBUTE,s__Attribute)
        & s__instance(V__OBJ,s__SelfConnectedObject)
        & s__instance(V__SURFACE,s__SelfConnectedObject) )
     => ( ( s__instance(V__ATTRIBUTE,s__TextureAttribute)
          & s__attribute(V__OBJ,V__ATTRIBUTE)
          & s__surface(V__SURFACE,V__OBJ) )
       => s__attribute(V__SURFACE,V__ATTRIBUTE) ) ) ).

fof(kb_SUMO_7125,axiom,
    s__instance(s__Smooth,s__TextureAttribute) ).

fof(kb_SUMO_7126,axiom,
    s__documentation(s__Smooth,s__EnglishLanguage,'An &%Object with this &%Attribute has a smooth surface.') ).

fof(kb_SUMO_7127,axiom,
    s__instance(s__Rough,s__TextureAttribute) ).

fof(kb_SUMO_7128,axiom,
    s__contraryAttribute_2(s__Smooth,s__Rough) ).

fof(kb_SUMO_7129,axiom,
    s__documentation(s__Rough,s__EnglishLanguage,'An &%Object with this &%Attribute has a rough surface.') ).

fof(kb_SUMO_7130,axiom,
    s__subclass(s__GeometricFigure,s__ShapeAttribute) ).

fof(kb_SUMO_7131,axiom,
    s__partition_5(s__GeometricFigure,s__GeometricPoint,s__OneDimensionalFigure,s__TwoDimensionalFigure,s__ThreeDimensionalFigure) ).

fof(kb_SUMO_7132,axiom,
    s__documentation(s__GeometricFigure,s__EnglishLanguage,'The class of all geometric figures, i.e. the class of all abstract, spatial representations. The instances of this class are &%GeometricPoints, &%TwoDimensionalFigures or &%ThreeDimensionalFigures.') ).

fof(kb_SUMO_7133,axiom,
    s__subclass(s__GeometricPoint,s__GeometricFigure) ).

fof(kb_SUMO_7134,axiom,
    s__instance(s__GeometricPoint__t,s__SetOrClass) ).

fof(kb_SUMO_7135,axiom,
    s__documentation(s__GeometricPoint,s__EnglishLanguage,'The class of zero-dimensional &%GeometricFigures, i.e. the class of &%GeometricFigures that have position but lack extension in any dimension.') ).

fof(kb_SUMO_7136,axiom,
    s__subclass(s__OneDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_7137,axiom,
    s__instance(s__OneDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7138,axiom,
    s__documentation(s__OneDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along a single dimension, viz. straight lines.') ).

fof(kb_SUMO_7139,axiom,
    s__subclass(s__TwoDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_7140,axiom,
    s__instance(s__GeometricFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7141,axiom,
    s__partition_3(s__TwoDimensionalFigure,s__OpenTwoDimensionalFigure,s__ClosedTwoDimensionalFigure) ).

fof(kb_SUMO_7142,axiom,
    s__documentation(s__TwoDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along two dimensions, viz. plane figures like circles and polygons.') ).

fof(kb_SUMO_7143,axiom,
    s__subclass(s__OpenTwoDimensionalFigure,s__TwoDimensionalFigure) ).

fof(kb_SUMO_7144,axiom,
    s__instance(s__OpenTwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7145,axiom,
    s__instance(s__TwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7146,axiom,
    s__documentation(s__OpenTwoDimensionalFigure,s__EnglishLanguage,'The class of &%TwoDimensionalFigures that are not &%ClosedTwoDimensionalFigures.') ).

fof(kb_SUMO_7147,axiom,
    s__subclass(s__TwoDimensionalAngle,s__OpenTwoDimensionalFigure) ).

fof(kb_SUMO_7148,axiom,
    s__instance(s__TwoDimensionalAngle__t,s__SetOrClass) ).

fof(kb_SUMO_7149,axiom,
    s__documentation(s__TwoDimensionalAngle,s__EnglishLanguage,'Any two &%OneDimensionalFigures (i.e. straight lines) meeting at a single &%GeometricPoint.') ).

fof(kb_SUMO_7150,axiom,
    s__subclass(s__ClosedTwoDimensionalFigure,s__TwoDimensionalFigure) ).

fof(kb_SUMO_7151,axiom,
    s__instance(s__ClosedTwoDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7152,axiom,
    s__documentation(s__ClosedTwoDimensionalFigure,s__EnglishLanguage,'Any &%TwoDimensionalFigure which has a well defined interior and exterior.') ).

fof(kb_SUMO_7153,axiom,
    s__subclass(s__ThreeDimensionalFigure,s__GeometricFigure) ).

fof(kb_SUMO_7154,axiom,
    s__instance(s__ThreeDimensionalFigure__t,s__SetOrClass) ).

fof(kb_SUMO_7155,axiom,
    s__documentation(s__ThreeDimensionalFigure,s__EnglishLanguage,'The class of &%GeometricFigures that have position and an extension along three dimensions, viz. geometric solids like polyhedrons and cylinders.') ).

fof(kb_SUMO_7156,axiom,
    s__instance(s__geometricPart__m,s__BinaryPredicate) ).

fof(kb_SUMO_7157,axiom,
    s__instance(s__geometricPart__m,s__PartialOrderingRelation) ).

fof(kb_SUMO_7158,axiom,
    s__domain(s__geometricPart__m,"1",s__GeometricFigure) ).

fof(kb_SUMO_7159,axiom,
    s__domain(s__geometricPart__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_7160,axiom,
    s__documentation(s__geometricPart__m,s__EnglishLanguage,'(&%geometricPart ?PART ?WHOLE) means that the &%GeometricFigure ?PART is part of the &%GeometricFigure ?WHOLE.') ).

fof(kb_SUMO_7161,axiom,
    s__subrelation(s__pointOfFigure__m,s__geometricPart__m) ).

fof(kb_SUMO_7162,axiom,
    s__domain(s__pointOfFigure__m,"1",s__GeometricPoint) ).

fof(kb_SUMO_7163,axiom,
    s__domain(s__pointOfFigure__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_7164,axiom,
    s__documentation(s__pointOfFigure__m,s__EnglishLanguage,'(&%pointOfFigure ?POINT ?FIGURE) means that the &%GeometricPoint ?POINT is part of the &%GeometricFigure ?FIGURE.') ).

fof(kb_SUMO_7165,axiom,
    s__subrelation(s__angleOfFigure__m,s__geometricPart__m) ).

fof(kb_SUMO_7166,axiom,
    s__domain(s__angleOfFigure__m,"1",s__TwoDimensionalAngle) ).

fof(kb_SUMO_7167,axiom,
    s__domain(s__angleOfFigure__m,"2",s__GeometricFigure) ).

fof(kb_SUMO_7168,axiom,
    s__documentation(s__angleOfFigure__m,s__EnglishLanguage,'(&%angleOfFigure ?ANGLE ?FIGURE) means that the &%TwoDimensionalAngle ?ANGLE is part of the &%GeometricFigure ?FIGURE.') ).

fof(kb_SUMO_7169,axiom,
    s__instance(s__pointOfIntersection__m,s__TernaryPredicate) ).

fof(kb_SUMO_7170,axiom,
    s__domain(s__pointOfIntersection__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_7171,axiom,
    s__domain(s__pointOfIntersection__m,"2",s__OneDimensionalFigure) ).

fof(kb_SUMO_7172,axiom,
    s__domain(s__pointOfIntersection__m,"3",s__GeometricPoint) ).

fof(kb_SUMO_7173,axiom,
    s__documentation(s__pointOfIntersection__m,s__EnglishLanguage,'(&%pointOfIntersection ?FIGURE1 ?FIGURE2 ?POINT) means that the two straight lines ?FIGURE1 and ?FIGURE2 meet at the point ?POINT.') ).

fof(kb_SUMO_7174,axiom,
    ! [V__POINT,V__FIGURE1,V__FIGURE2] :
      ( ( s__instance(V__FIGURE2,s__OneDimensionalFigure)
        & s__instance(V__FIGURE1,s__OneDimensionalFigure)
        & s__instance(V__POINT,s__GeometricPoint) )
     => ( s__pointOfIntersection(V__FIGURE1,V__FIGURE2,V__POINT)
       => ( s__pointOfFigure(V__POINT,V__FIGURE1)
          & s__pointOfFigure(V__POINT,V__FIGURE2) ) ) ) ).

fof(kb_SUMO_7175,axiom,
    s__instance(s__parallel__m,s__BinaryPredicate) ).

fof(kb_SUMO_7176,axiom,
    s__domain(s__parallel__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_7177,axiom,
    s__domain(s__parallel__m,"2",s__OneDimensionalFigure) ).

fof(kb_SUMO_7178,axiom,
    s__documentation(s__parallel__m,s__EnglishLanguage,'(&%parallel ?LINE1 ?LINE2) means that the &%OneDimensionalFigures ?LINE1 and ?LINE2 are parallel to one another, i.e. they are equidistant from one another at every point.') ).

fof(kb_SUMO_7179,axiom,
    ! [V__LINE2,V__LINE1] :
      ( ( s__instance(V__LINE1,s__OneDimensionalFigure)
        & s__instance(V__LINE2,s__OneDimensionalFigure) )
     => ( s__parallel(V__LINE1,V__LINE2)
       => ~ ? [V__POINT] :
              ( s__instance(V__POINT,s__GeometricPoint)
              & s__pointOfIntersection(V__LINE1,V__LINE2,V__POINT) ) ) ) ).

fof(kb_SUMO_7180,axiom,
    s__instance(s__angularMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_7181,axiom,
    s__instance(s__angularMeasure__m,s__TotalValuedRelation) ).

fof(kb_SUMO_7182,axiom,
    s__domain(s__angularMeasure__m,"1",s__TwoDimensionalAngle) ).

fof(kb_SUMO_7183,axiom,
    s__domain(s__angularMeasure__m,"2",s__PlaneAngleMeasure) ).

fof(kb_SUMO_7184,axiom,
    s__documentation(s__angularMeasure__m,s__EnglishLanguage,'(&%angularMeasure ?ANGLE ?MEASURE) means that the two-dimensional geometric angle ?ANGLE has the &%PlaneAngleMeasure of ?MEASURE.') ).

fof(kb_SUMO_7185,axiom,
    s__instance(s__lineMeasure__m,s__BinaryPredicate) ).

fof(kb_SUMO_7186,axiom,
    s__instance(s__lineMeasure__m,s__TotalValuedRelation) ).

fof(kb_SUMO_7187,axiom,
    s__domain(s__lineMeasure__m,"1",s__OneDimensionalFigure) ).

fof(kb_SUMO_7188,axiom,
    s__domain(s__lineMeasure__m,"2",s__LengthMeasure) ).

fof(kb_SUMO_7189,axiom,
    s__documentation(s__lineMeasure__m,s__EnglishLanguage,'(&%lineMeasure ?LINE ?MEASURE) means that the straight line ?LINE has the &%LengthMeasure of ?MEASURE.') ).

fof(kb_SUMO_7190,axiom,
    s__instance(s__geometricDistance__m,s__TernaryPredicate) ).

fof(kb_SUMO_7191,axiom,
    s__instance(s__geometricDistance__m,s__SingleValuedRelation) ).

fof(kb_SUMO_7192,axiom,
    s__instance(s__geometricDistance__m,s__TotalValuedRelation) ).

fof(kb_SUMO_7193,axiom,
    s__domain(s__geometricDistance__m,"1",s__GeometricPoint) ).

fof(kb_SUMO_7194,axiom,
    s__domain(s__geometricDistance__m,"2",s__GeometricPoint) ).

fof(kb_SUMO_7195,axiom,
    s__domain(s__geometricDistance__m,"3",s__LengthMeasure) ).

fof(kb_SUMO_7196,axiom,
    s__documentation(s__geometricDistance__m,s__EnglishLanguage,'(&%geometricDistance ?POINT1 ?POINT2 ?LENGTH) means that ?LENGTH is the distance between the two &%GeometricPoints ?POINT1 and ?POINT2.') ).

fof(kb_SUMO_7197,axiom,
    ! [V__POINT2,V__POINT1,V__LENGTH] :
      ( ( s__instance(V__LENGTH,s__LengthMeasure)
        & s__instance(V__POINT1,s__GeometricPoint)
        & s__instance(V__POINT2,s__GeometricPoint) )
     => ( s__geometricDistance(V__POINT1,V__POINT2,V__LENGTH)
       => s__geometricDistance(V__POINT2,V__POINT1,V__LENGTH) ) ) ).

fof(kb_SUMO_7198,axiom,
    s__subclass(s__SaturationAttribute,s__InternalAttribute) ).

fof(kb_SUMO_7199,axiom,
    s__instance(s__SaturationAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7200,axiom,
    s__documentation(s__SaturationAttribute,s__EnglishLanguage,'A &%Class of &%Attributes that specify, in a qualitative manner, the extent of the presence of one kind of &%Object in another kind of &%Object.') ).

fof(kb_SUMO_7201,axiom,
    s__instance(s__Dry,s__SaturationAttribute) ).

fof(kb_SUMO_7202,axiom,
    s__contraryAttribute_2(s__Dry,s__Damp) ).

fof(kb_SUMO_7203,axiom,
    s__documentation(s__Dry,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object contains no &%Liquid.') ).

fof(kb_SUMO_7204,axiom,
    ! [V__OBJ] :
      ( s__instance(V__OBJ,s__Object)
     => ( s__attribute(V__OBJ,s__Dry)
       => ~ ? [V__SUBOBJ] :
              ( s__instance(V__SUBOBJ,s__Object)
              & s__part(V__SUBOBJ,V__OBJ)
              & s__attribute(V__SUBOBJ,s__Liquid) ) ) ) ).

fof(kb_SUMO_7205,axiom,
    s__instance(s__Damp,s__SaturationAttribute) ).

fof(kb_SUMO_7206,axiom,
    s__documentation(s__Damp,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object contains some &%Liquid.') ).

fof(kb_SUMO_7207,axiom,
    s__instance(s__Wet,s__SaturationAttribute) ).

fof(kb_SUMO_7208,axiom,
    s__subAttribute(s__Wet,s__Damp) ).

fof(kb_SUMO_7209,axiom,
    s__documentation(s__Wet,s__EnglishLanguage,'An &%Attribute which indicates that the associated &%Object is fully saturated with a &%Liquid, i.e. every part of the &%Object has a subpart which is a &%Liquid.') ).

fof(kb_SUMO_7210,axiom,
    ! [V__OBJ] :
      ( s__attribute(V__OBJ,s__Wet)
     => ! [V__PART] :
          ( ( s__instance(V__PART,s__Object)
            & s__instance(V__OBJ,s__Object) )
         => ( s__part(V__PART,V__OBJ)
           => ? [V__SUBPART] :
                ( s__instance(V__SUBPART,s__Object)
                & s__part(V__SUBPART,V__PART)
                & s__attribute(V__SUBPART,s__Liquid) ) ) ) ) ).

fof(kb_SUMO_7211,axiom,
    s__subclass(s__BiologicalAttribute,s__InternalAttribute) ).

fof(kb_SUMO_7212,axiom,
    s__documentation(s__BiologicalAttribute,s__EnglishLanguage,'&%Attributes that apply specifically to instances of &%Organism.') ).

fof(kb_SUMO_7213,axiom,
    ! [V__ORG,V__ATT] :
      ( ( s__instance(V__ATT,s__Attribute)
        & s__instance(V__ORG,s__Object) )
     => ( ( s__attribute(V__ORG,V__ATT)
          & s__instance(V__ATT,s__BiologicalAttribute) )
       => s__instance(V__ORG,s__OrganicObject) ) ) ).

fof(kb_SUMO_7214,axiom,
    s__subclass(s__BodyPosition,s__BiologicalAttribute) ).

fof(kb_SUMO_7215,axiom,
    s__documentation(s__BodyPosition,s__EnglishLanguage,'The class of &%Attributes expressing configurations of bodies or parts of bodies of animals or humans, e.g. standing, sitting, kneeling, lying down, etc.') ).

fof(kb_SUMO_7216,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__Agent)
     => ( s__instance(V__ANIMAL,s__Animal)
       => ( ? [V__MOTION] :
              ( s__instance(V__MOTION,s__Process)
              & s__instance(V__MOTION,s__BodyMotion)
              & s__agent(V__MOTION,V__ANIMAL) )
          | ? [V__ATTR] :
              ( s__instance(V__ATTR,s__Attribute)
              & s__instance(V__ATTR,s__BodyPosition)
              & s__attribute(V__ANIMAL,V__ATTR) ) ) ) ) ).

fof(kb_SUMO_7217,axiom,
    s__instance(s__Standing,s__BodyPosition) ).

fof(kb_SUMO_7218,axiom,
    s__documentation(s__Standing,s__EnglishLanguage,'The &%BodyPosition of being upright, i.e. being fully extended and supported by nothing other than ones own feet.') ).

fof(kb_SUMO_7219,axiom,
    ! [V__AMBULATE,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Agent)
        & s__instance(V__AMBULATE,s__Process) )
     => ( ( s__instance(V__AMBULATE,s__Ambulating)
          & s__agent(V__AMBULATE,V__AGENT) )
       => s__attribute(V__AGENT,s__Standing) ) ) ).

fof(kb_SUMO_7220,axiom,
    s__instance(s__Sitting,s__BodyPosition) ).

fof(kb_SUMO_7221,axiom,
    s__instance(s__BodyPosition__t,s__SetOrClass) ).

fof(kb_SUMO_7222,axiom,
    s__documentation(s__Sitting,s__EnglishLanguage,'The &%BodyPosition of being recumbent, i.e. knees bent and back side supported.') ).

fof(kb_SUMO_7223,axiom,
    s__instance(s__Prostrate,s__BodyPosition) ).

fof(kb_SUMO_7224,axiom,
    s__documentation(s__Prostrate,s__EnglishLanguage,'The &%BodyPosition of lying down, being in a horizontal position.') ).

fof(kb_SUMO_7225,axiom,
    s__subclass(s__AnimacyAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_7226,axiom,
    s__exhaustiveAttribute_3(s__AnimacyAttribute,s__Living,s__Dead) ).

fof(kb_SUMO_7227,axiom,
    s__documentation(s__AnimacyAttribute,s__EnglishLanguage,'&%Attributes that indicate whether an &%Organism is alive or not.') ).

fof(kb_SUMO_7228,axiom,
    s__instance(s__Living,s__AnimacyAttribute) ).

fof(kb_SUMO_7229,axiom,
    s__instance(s__AnimacyAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7230,axiom,
    s__documentation(s__Living,s__EnglishLanguage,'This &%Attribute applies to &%Organisms that are alive.') ).

%FOL fof(kb_SUMO_7231,axiom,(( (! [V__PROCESS,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Agent) & s__instance(V__PROCESS,s__Process)) => ((s__instance(V__ORGANISM,s__Organism) & s__agent(V__PROCESS,V__ORGANISM)) => s__holdsDuring(s__WhenFn(V__PROCESS),'s__attribute(V__ORGANISM,s__Living)')))) ))).

fof(kb_SUMO_7232,axiom,
    s__instance(s__Dead,s__AnimacyAttribute) ).

fof(kb_SUMO_7233,axiom,
    s__subAttribute(s__Dead,s__Unconscious) ).

fof(kb_SUMO_7234,axiom,
    s__contraryAttribute_2(s__Dead,s__Living) ).

fof(kb_SUMO_7235,axiom,
    s__documentation(s__Dead,s__EnglishLanguage,'This &%Attribute applies to &%Organisms that are not alive.') ).

fof(kb_SUMO_7236,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__Organism)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__AnimacyAttribute)
            & s__attribute(V__ORG,V__ATTR) ) ) ) ).

fof(kb_SUMO_7237,axiom,
    s__subclass(s__SexAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_7238,axiom,
    s__exhaustiveAttribute_3(s__SexAttribute,s__Female,s__Male) ).

fof(kb_SUMO_7239,axiom,
    s__documentation(s__SexAttribute,s__EnglishLanguage,'&%Attributes that indicate the sex of an &%Organism.') ).

fof(kb_SUMO_7240,axiom,
    s__instance(s__Female,s__SexAttribute) ).

fof(kb_SUMO_7241,axiom,
    s__documentation(s__Female,s__EnglishLanguage,'An &%Attribute indicating that an &%Organism is female in nature.') ).

fof(kb_SUMO_7242,axiom,
    ! [V__BODY,V__ORG] :
      ( ( s__instance(V__ORG,s__Object)
        & s__instance(V__BODY,s__Object) )
     => ( ( s__instance(V__BODY,s__ReproductiveBody)
          & s__part(V__BODY,V__ORG)
          & s__instance(V__ORG,s__Organism) )
       => s__attribute(V__ORG,s__Female) ) ) ).

fof(kb_SUMO_7243,axiom,
    s__instance(s__Male,s__SexAttribute) ).

fof(kb_SUMO_7244,axiom,
    s__instance(s__SexAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7245,axiom,
    s__contraryAttribute_2(s__Male,s__Female) ).

fof(kb_SUMO_7246,axiom,
    s__documentation(s__Male,s__EnglishLanguage,'An &%Attribute indicating that an &%Organism is male in nature.') ).

fof(kb_SUMO_7247,axiom,
    ! [V__ANIMAL] :
      ( s__instance(V__ANIMAL,s__Object)
     => ( s__instance(V__ANIMAL,s__Animal)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__SexAttribute)
            & s__attribute(V__ANIMAL,V__ATTR) ) ) ) ).

fof(kb_SUMO_7248,axiom,
    s__subclass(s__DevelopmentalAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_7249,axiom,
    s__instance(s__DevelopmentalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7250,axiom,
    s__instance(s__BiologicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7251,axiom,
    s__exhaustiveAttribute_3(s__DevelopmentalAttribute,s__FullyFormed,s__NonFullyFormed) ).

fof(kb_SUMO_7252,axiom,
    s__documentation(s__DevelopmentalAttribute,s__EnglishLanguage,'&%Attributes that indicate the stage of development of an &%Organism.') ).

fof(kb_SUMO_7253,axiom,
    s__instance(s__FullyFormed,s__DevelopmentalAttribute) ).

fof(kb_SUMO_7254,axiom,
    s__documentation(s__FullyFormed,s__EnglishLanguage,'The stage of an &%Organism when it has reached the end of its growth phase.') ).

%FOL fof(kb_SUMO_7255,axiom,(( (! [V__OBJ] : (s__instance(V__OBJ,s__Agent) => (s__attribute(V__OBJ,s__FullyFormed) => (? [V__GROWTH] : (s__instance(V__GROWTH,s__Process) & s__instance(V__GROWTH,s__Growth) & s__experiencer(V__GROWTH,V__OBJ) & s__holdsDuring(s__BeginFn(s__WhenFn(V__OBJ)),'s__attribute(V__OBJ,s__NonFullyFormed)')))))) ))).

fof(kb_SUMO_7256,axiom,
    s__instance(s__NonFullyFormed,s__DevelopmentalAttribute) ).

fof(kb_SUMO_7257,axiom,
    s__contraryAttribute_2(s__NonFullyFormed,s__FullyFormed) ).

fof(kb_SUMO_7258,axiom,
    s__successorAttribute(s__NonFullyFormed,s__FullyFormed) ).

fof(kb_SUMO_7259,axiom,
    s__documentation(s__NonFullyFormed,s__EnglishLanguage,'The stage of an &%Organism before it is &%FullyFormed.') ).

fof(kb_SUMO_7260,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__instance(V__ORG,s__Organism)
       => ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__DevelopmentalAttribute)
            & s__attribute(V__ORG,V__ATTR) ) ) ) ).

fof(kb_SUMO_7261,axiom,
    s__subAttribute(s__Larval,s__NonFullyFormed) ).

fof(kb_SUMO_7262,axiom,
    s__documentation(s__Larval,s__EnglishLanguage,'Form of most &%Invertebrates, &%Amphibians, and &%Fish immediately after they hatch. This form is fundamentally unlike the adult form, and metamorphosis is required to reach the latter form.') ).

%FOL fof(kb_SUMO_7263,axiom,(( (! [V__TIME,V__ORG,V__BIRTH,V__BW] : ((s__instance(V__BW,s__TimeInterval) & s__instance(V__BIRTH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__TIME,s__TimeInterval)) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORG,s__Larval)') & s__instance(V__BIRTH,s__Birth) & (V__BW = s__WhenFn(V__BIRTH)) & s__experiencer(V__BIRTH,V__ORG)) => s__meetsTemporally(V__BW,V__TIME)))) ))).

fof(kb_SUMO_7264,axiom,
    s__subAttribute(s__Embryonic,s__NonFullyFormed) ).

fof(kb_SUMO_7265,axiom,
    s__contraryAttribute_2(s__Embryonic,s__Larval) ).

fof(kb_SUMO_7266,axiom,
    s__documentation(s__Embryonic,s__EnglishLanguage,'The stage of an &%Organism or an &%AnatomicalStructure that exists only before the &%Organism is born. &%Mammals, for example, have this &%Attribute only prior to their birth.') ).

fof(kb_SUMO_7267,axiom,
    ! [V__ORG] :
      ( s__instance(V__ORG,s__Object)
     => ( s__attribute(V__ORG,s__Embryonic)
       => ? [V__BODY] :
            ( s__instance(V__BODY,s__Object)
            & s__instance(V__BODY,s__ReproductiveBody)
            & s__located(V__ORG,V__BODY) ) ) ) ).

%FOL fof(kb_SUMO_7268,axiom,(( (! [V__TIME,V__ORG,V__BIRTH,V__BW] : ((s__instance(V__BW,s__TimeInterval) & s__instance(V__BIRTH,s__Process) & s__instance(V__ORG,s__Agent) & s__instance(V__TIME,s__TimeInterval)) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORG,s__Embryonic)') & s__instance(V__BIRTH,s__Birth) & (V__BW = s__WhenFn(V__BIRTH)) & s__experiencer(V__BIRTH,V__ORG)) => (~ s__overlapsTemporally(V__TIME,V__BW))))) ))).

fof(kb_SUMO_7269,axiom,
    s__subclass(s__DiseaseOrSyndrome,s__BiologicalAttribute) ).

fof(kb_SUMO_7270,axiom,
    s__documentation(s__DiseaseOrSyndrome,s__EnglishLanguage,'A &%BiologicalAttribute which qualifies something that alters or interferes with a normal process, state or activity of an &%Organism. It is usually characterized by the abnormal functioning of one or more of the hosts systems, parts, or &%Organs.') ).

fof(kb_SUMO_7271,axiom,
    s__subclass(s__PsychologicalAttribute,s__BiologicalAttribute) ).

fof(kb_SUMO_7272,axiom,
    s__partition_3(s__PsychologicalAttribute,s__StateOfMind,s__TraitAttribute) ).

fof(kb_SUMO_7273,axiom,
    s__documentation(s__PsychologicalAttribute,s__EnglishLanguage,'&%Attributes that characterize the mental or behavioral life of an &%Organism.') ).

%FOL fof(kb_SUMO_7274,axiom,(( (! [V__TIME,V__ATTR,V__ORGANISM] : ((s__instance(V__ORGANISM,s__Object) & s__instance(V__ATTR,s__Attribute) & s__instance(V__TIME,s__TimePosition)) => (s__instance(V__ATTR,s__PsychologicalAttribute) => ((s__holdsDuring(V__TIME,'s__attribute(V__ORGANISM,V__ATTR)') & s__instance(V__ORGANISM,s__Organism)) => s__holdsDuring(V__TIME,'s__attribute(V__ORGANISM,s__Living)'))))) ))).

fof(kb_SUMO_7275,axiom,
    ! [V__ATTR,V__AGENT] :
      ( ( s__instance(V__AGENT,s__Object)
        & s__instance(V__ATTR,s__Attribute) )
     => ( ( s__instance(V__ATTR,s__PsychologicalAttribute)
          & s__attribute(V__AGENT,V__ATTR) )
       => s__instance(V__AGENT,s__SentientAgent) ) ) ).

fof(kb_SUMO_7276,axiom,
    s__subclass(s__StateOfMind,s__PsychologicalAttribute) ).

fof(kb_SUMO_7277,axiom,
    s__documentation(s__StateOfMind,s__EnglishLanguage,'The class &%StateOfMind is distinguished from its complement &%TraitAttribute by the fact that instances of the former are transient while instances of the latter are persistent features of a creatures behavioral/psychological make-up.') ).

fof(kb_SUMO_7278,axiom,
    s__subclass(s__EmotionalState,s__StateOfMind) ).

fof(kb_SUMO_7279,axiom,
    s__instance(s__EmotionalState__t,s__SetOrClass) ).

fof(kb_SUMO_7280,axiom,
    s__instance(s__StateOfMind__t,s__SetOrClass) ).

fof(kb_SUMO_7281,axiom,
    s__documentation(s__EmotionalState,s__EnglishLanguage,'The &%Class of &%Attributes that denote emotional states of &%Organisms.') ).

fof(kb_SUMO_7282,axiom,
    s__subclass(s__ConsciousnessAttribute,s__StateOfMind) ).

fof(kb_SUMO_7283,axiom,
    s__documentation(s__ConsciousnessAttribute,s__EnglishLanguage,'&%Attributes that indicate whether an &%Organism is conscious or the qualitative degree of consciousness of an &%Organism.') ).

fof(kb_SUMO_7284,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( ( s__instance(V__AGENT,s__SentientAgent)
          & s__attribute(V__AGENT,s__Living) )
      <=> ? [V__ATTR] :
            ( s__instance(V__ATTR,s__Attribute)
            & s__instance(V__ATTR,s__ConsciousnessAttribute)
            & s__attribute(V__AGENT,V__ATTR) ) ) ) ).

fof(kb_SUMO_7285,axiom,
    s__instance(s__Asleep,s__ConsciousnessAttribute) ).

fof(kb_SUMO_7286,axiom,
    s__documentation(s__Asleep,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are sleeping.') ).

fof(kb_SUMO_7287,axiom,
    s__instance(s__Unconscious,s__ConsciousnessAttribute) ).

fof(kb_SUMO_7288,axiom,
    s__contraryAttribute_2(s__Unconscious,s__Awake) ).

fof(kb_SUMO_7289,axiom,
    s__documentation(s__Unconscious,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are unconscious. An &%Organism may be &%Unconscious because it is &%Dead or because of a blow to the head, a drug, etc.') ).

fof(kb_SUMO_7290,axiom,
    s__instance(s__Awake,s__ConsciousnessAttribute) ).

fof(kb_SUMO_7291,axiom,
    s__instance(s__ConsciousnessAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7292,axiom,
    s__documentation(s__Awake,s__EnglishLanguage,'&%Attribute that applies to &%Organisms that are neither &%Unconscious nor &%Asleep.') ).

fof(kb_SUMO_7293,axiom,
    ! [V__AGENT] :
      ( s__instance(V__AGENT,s__Object)
     => ( ( s__attribute(V__AGENT,s__Asleep)
          | s__attribute(V__AGENT,s__Awake) )
       => s__attribute(V__AGENT,s__Living) ) ) ).

fof(kb_SUMO_7294,axiom,
    s__subclass(s__TraitAttribute,s__PsychologicalAttribute) ).

fof(kb_SUMO_7295,axiom,
    s__instance(s__TraitAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7296,axiom,
    s__documentation(s__TraitAttribute,s__EnglishLanguage,'&%Attributes that indicate the the behavior/personality traits of an &%Organism.') ).

fof(kb_SUMO_7297,axiom,
    s__subclass(s__PsychologicalDysfunction,s__PsychologicalAttribute) ).

fof(kb_SUMO_7298,axiom,
    s__instance(s__PsychologicalDysfunction__t,s__SetOrClass) ).

fof(kb_SUMO_7299,axiom,
    s__instance(s__PsychologicalAttribute__t,s__SetOrClass) ).

fof(kb_SUMO_7300,axiom,
    s__subclass(s__PsychologicalDysfunction,s__DiseaseOrSyndrome) ).

fof(kb_SUMO_7301,axiom,
    s__instance(s__DiseaseOrSyndrome__t,s__SetOrClass) ).

fof(kb_SUMO_7302,axiom,
    s__documentation(s__PsychologicalDysfunction,s__EnglishLanguage,'A clinically significant dysfunction whose major manifestation is behavioral or psychological. These dysfunctions may have identified or presumed biological etiologies or manifestations.') ).

fof(kb_SUMO_7303,axiom,
    s__instance(s__comment__m,s__TernaryPredicate) ).

fof(kb_SUMO_7304,axiom,
    s__documentation(s__comment__m,s__EnglishLanguage,'(&%comment ?ENT ?STR ?PER) is a convenience relationship that allows ontologists represented by &%SymbolicString ?PER to write down commentaries ?STR on a defined &%Entity ?ENT') ).

fof(kb_SUMO_7305,axiom,
    s__termFormat(s__EnglishLanguage,s__comment__m,comment) ).

fof(kb_SUMO_7306,axiom,
    s__domain(s__comment__m,"1",s__Entity) ).

fof(kb_SUMO_7307,axiom,
    s__domain(s__comment__m,"2",s__SymbolicString) ).

fof(kb_SUMO_7308,axiom,
    s__domain(s__comment__m,"3",s__SymbolicString) ).

%FOL fof(kb_SUMO_7309,axiom,(( s__instance(s__AssignmentFn_2,s__Function) ))).
%FOL fof(kb_SUMO_7310,axiom,(( s__instance(s__AssignmentFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7311,axiom,(( s__domain(s__AssignmentFn_2,1,s__Function) ))).
%FOL fof(kb_SUMO_7312,axiom,(( s__range(s__AssignmentFn_2,s__Entity) ))).
%FOL fof(kb_SUMO_7313,axiom,(( s__documentation(s__AssignmentFn_2,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_2 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7314,axiom,(( s__instance(s__AssignmentFn_3,s__Function) ))).
%FOL fof(kb_SUMO_7315,axiom,(( s__instance(s__AssignmentFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7316,axiom,(( s__domain(s__AssignmentFn_3,1,s__Function) ))).
%FOL fof(kb_SUMO_7317,axiom,(( s__range(s__AssignmentFn_3,s__Entity) ))).
%FOL fof(kb_SUMO_7318,axiom,(( s__documentation(s__AssignmentFn_3,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_3 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7319,axiom,(( s__instance(s__AssignmentFn_4,s__Function) ))).
%FOL fof(kb_SUMO_7320,axiom,(( s__instance(s__AssignmentFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7321,axiom,(( s__domain(s__AssignmentFn_4,1,s__Function) ))).
%FOL fof(kb_SUMO_7322,axiom,(( s__range(s__AssignmentFn_4,s__Entity) ))).
%FOL fof(kb_SUMO_7323,axiom,(( s__documentation(s__AssignmentFn_4,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_4 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7324,axiom,(( s__instance(s__AssignmentFn_5,s__Function) ))).
%FOL fof(kb_SUMO_7325,axiom,(( s__instance(s__AssignmentFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7326,axiom,(( s__domain(s__AssignmentFn_5,1,s__Function) ))).
%FOL fof(kb_SUMO_7327,axiom,(( s__range(s__AssignmentFn_5,s__Entity) ))).
%FOL fof(kb_SUMO_7328,axiom,(( s__documentation(s__AssignmentFn_5,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_5 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7329,axiom,(( s__instance(s__AssignmentFn_6,s__Function) ))).
%FOL fof(kb_SUMO_7330,axiom,(( s__instance(s__AssignmentFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7331,axiom,(( s__domain(s__AssignmentFn_6,1,s__Function) ))).
%FOL fof(kb_SUMO_7332,axiom,(( s__range(s__AssignmentFn_6,s__Entity) ))).
%FOL fof(kb_SUMO_7333,axiom,(( s__documentation(s__AssignmentFn_6,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_6 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7334,axiom,(( s__instance(s__AssignmentFn_7,s__Function) ))).
%FOL fof(kb_SUMO_7335,axiom,(( s__instance(s__AssignmentFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7336,axiom,(( s__domain(s__AssignmentFn_7,1,s__Function) ))).
%FOL fof(kb_SUMO_7337,axiom,(( s__range(s__AssignmentFn_7,s__Entity) ))).
%FOL fof(kb_SUMO_7338,axiom,(( s__documentation(s__AssignmentFn_7,s__EnglishLanguage,'If F is a &%Function with a value for the objects denoted by N1,..., NK, then (&%AssignmentFn_7 F N1 ... NK) is the value of applying F to the objects denoted by N1,..., NK. Otherwise, the value is undefined.') ))).
%FOL fof(kb_SUMO_7339,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__Function) ))).
%FOL fof(kb_SUMO_7340,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7341,axiom,(( s__instance(s__GreatestCommonDivisorFn_1,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7342,axiom,(( s__range(s__GreatestCommonDivisorFn_1,s__Integer) ))).
%FOL fof(kb_SUMO_7343,axiom,(( s__documentation(s__GreatestCommonDivisorFn_1,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_1 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7344,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__Function) ))).
%FOL fof(kb_SUMO_7345,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7346,axiom,(( s__instance(s__GreatestCommonDivisorFn_2,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7347,axiom,(( s__range(s__GreatestCommonDivisorFn_2,s__Integer) ))).
%FOL fof(kb_SUMO_7348,axiom,(( s__documentation(s__GreatestCommonDivisorFn_2,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_2 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7349,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__Function) ))).
%FOL fof(kb_SUMO_7350,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7351,axiom,(( s__instance(s__GreatestCommonDivisorFn_3,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7352,axiom,(( s__range(s__GreatestCommonDivisorFn_3,s__Integer) ))).
%FOL fof(kb_SUMO_7353,axiom,(( s__documentation(s__GreatestCommonDivisorFn_3,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_3 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7354,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__Function) ))).
%FOL fof(kb_SUMO_7355,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7356,axiom,(( s__instance(s__GreatestCommonDivisorFn_4,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7357,axiom,(( s__range(s__GreatestCommonDivisorFn_4,s__Integer) ))).
%FOL fof(kb_SUMO_7358,axiom,(( s__documentation(s__GreatestCommonDivisorFn_4,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_4 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7359,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__Function) ))).
%FOL fof(kb_SUMO_7360,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7361,axiom,(( s__instance(s__GreatestCommonDivisorFn_5,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7362,axiom,(( s__range(s__GreatestCommonDivisorFn_5,s__Integer) ))).
%FOL fof(kb_SUMO_7363,axiom,(( s__documentation(s__GreatestCommonDivisorFn_5,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_5 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7364,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__Function) ))).
%FOL fof(kb_SUMO_7365,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7366,axiom,(( s__instance(s__GreatestCommonDivisorFn_6,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7367,axiom,(( s__range(s__GreatestCommonDivisorFn_6,s__Integer) ))).
%FOL fof(kb_SUMO_7368,axiom,(( s__documentation(s__GreatestCommonDivisorFn_6,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_6 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7369,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__Function) ))).
%FOL fof(kb_SUMO_7370,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7371,axiom,(( s__instance(s__GreatestCommonDivisorFn_7,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7372,axiom,(( s__range(s__GreatestCommonDivisorFn_7,s__Integer) ))).
%FOL fof(kb_SUMO_7373,axiom,(( s__documentation(s__GreatestCommonDivisorFn_7,s__EnglishLanguage,'(&%GreatestCommonDivisorFn_7 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the greatest common divisor of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7374,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__Function) ))).
%FOL fof(kb_SUMO_7375,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7376,axiom,(( s__instance(s__LeastCommonMultipleFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7377,axiom,(( s__range(s__LeastCommonMultipleFn_1,s__Integer) ))).
%FOL fof(kb_SUMO_7378,axiom,(( s__documentation(s__LeastCommonMultipleFn_1,s__EnglishLanguage,'(&%LeastCommonMultipleFn_1 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7379,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__Function) ))).
%FOL fof(kb_SUMO_7380,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7381,axiom,(( s__instance(s__LeastCommonMultipleFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7382,axiom,(( s__range(s__LeastCommonMultipleFn_2,s__Integer) ))).
%FOL fof(kb_SUMO_7383,axiom,(( s__documentation(s__LeastCommonMultipleFn_2,s__EnglishLanguage,'(&%LeastCommonMultipleFn_2 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7384,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__Function) ))).
%FOL fof(kb_SUMO_7385,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7386,axiom,(( s__instance(s__LeastCommonMultipleFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7387,axiom,(( s__range(s__LeastCommonMultipleFn_3,s__Integer) ))).
%FOL fof(kb_SUMO_7388,axiom,(( s__documentation(s__LeastCommonMultipleFn_3,s__EnglishLanguage,'(&%LeastCommonMultipleFn_3 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7389,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__Function) ))).
%FOL fof(kb_SUMO_7390,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7391,axiom,(( s__instance(s__LeastCommonMultipleFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7392,axiom,(( s__range(s__LeastCommonMultipleFn_4,s__Integer) ))).
%FOL fof(kb_SUMO_7393,axiom,(( s__documentation(s__LeastCommonMultipleFn_4,s__EnglishLanguage,'(&%LeastCommonMultipleFn_4 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7394,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__Function) ))).
%FOL fof(kb_SUMO_7395,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7396,axiom,(( s__instance(s__LeastCommonMultipleFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7397,axiom,(( s__range(s__LeastCommonMultipleFn_5,s__Integer) ))).
%FOL fof(kb_SUMO_7398,axiom,(( s__documentation(s__LeastCommonMultipleFn_5,s__EnglishLanguage,'(&%LeastCommonMultipleFn_5 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7399,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__Function) ))).
%FOL fof(kb_SUMO_7400,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7401,axiom,(( s__instance(s__LeastCommonMultipleFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7402,axiom,(( s__range(s__LeastCommonMultipleFn_6,s__Integer) ))).
%FOL fof(kb_SUMO_7403,axiom,(( s__documentation(s__LeastCommonMultipleFn_6,s__EnglishLanguage,'(&%LeastCommonMultipleFn_6 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7404,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__Function) ))).
%FOL fof(kb_SUMO_7405,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__PartialValuedRelation) ))).
%FOL fof(kb_SUMO_7406,axiom,(( s__instance(s__LeastCommonMultipleFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7407,axiom,(( s__range(s__LeastCommonMultipleFn_7,s__Integer) ))).
%FOL fof(kb_SUMO_7408,axiom,(( s__documentation(s__LeastCommonMultipleFn_7,s__EnglishLanguage,'(&%LeastCommonMultipleFn_7 ?NUMBER1 ?NUMBER2 ... ?NUMBER) returns the least common multiple of ?NUMBER1 through ?NUMBER.') ))).
%FOL fof(kb_SUMO_7409,axiom,(( s__instance(s__ListFn_1,s__Function) ))).
%FOL fof(kb_SUMO_7410,axiom,(( s__instance(s__ListFn_1,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7411,axiom,(( s__range(s__ListFn_1,s__List) ))).
%FOL fof(kb_SUMO_7412,axiom,(( s__documentation(s__ListFn_1,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7413,axiom,(( s__instance(s__ListFn_2,s__Function) ))).
%FOL fof(kb_SUMO_7414,axiom,(( s__instance(s__ListFn_2,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7415,axiom,(( s__range(s__ListFn_2,s__List) ))).
%FOL fof(kb_SUMO_7416,axiom,(( s__documentation(s__ListFn_2,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7417,axiom,(( s__instance(s__ListFn_3,s__Function) ))).
%FOL fof(kb_SUMO_7418,axiom,(( s__instance(s__ListFn_3,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7419,axiom,(( s__range(s__ListFn_3,s__List) ))).
%FOL fof(kb_SUMO_7420,axiom,(( s__documentation(s__ListFn_3,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7421,axiom,(( s__instance(s__ListFn_4,s__Function) ))).
%FOL fof(kb_SUMO_7422,axiom,(( s__instance(s__ListFn_4,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7423,axiom,(( s__range(s__ListFn_4,s__List) ))).
%FOL fof(kb_SUMO_7424,axiom,(( s__documentation(s__ListFn_4,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7425,axiom,(( s__instance(s__ListFn_5,s__Function) ))).
%FOL fof(kb_SUMO_7426,axiom,(( s__instance(s__ListFn_5,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7427,axiom,(( s__range(s__ListFn_5,s__List) ))).
%FOL fof(kb_SUMO_7428,axiom,(( s__documentation(s__ListFn_5,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7429,axiom,(( s__instance(s__ListFn_6,s__Function) ))).
%FOL fof(kb_SUMO_7430,axiom,(( s__instance(s__ListFn_6,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7431,axiom,(( s__range(s__ListFn_6,s__List) ))).
%FOL fof(kb_SUMO_7432,axiom,(( s__documentation(s__ListFn_6,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7433,axiom,(( s__instance(s__ListFn_7,s__Function) ))).
%FOL fof(kb_SUMO_7434,axiom,(( s__instance(s__ListFn_7,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7435,axiom,(( s__range(s__ListFn_7,s__List) ))).
%FOL fof(kb_SUMO_7436,axiom,(( s__documentation(s__ListFn_7,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7437,axiom,(( s__instance(s__ListFn_8,s__Function) ))).
%FOL fof(kb_SUMO_7438,axiom,(( s__instance(s__ListFn_8,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7439,axiom,(( s__range(s__ListFn_8,s__List) ))).
%FOL fof(kb_SUMO_7440,axiom,(( s__documentation(s__ListFn_8,s__EnglishLanguage,'A &%Function that takes any number of arguments and returns the &%List containing those arguments in exactly the same order.') ))).
%FOL fof(kb_SUMO_7441,axiom,(( s__instance(s__contraryAttribute_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7442,axiom,(( s__instance(s__contraryAttribute_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7443,axiom,(( s__documentation(s__contraryAttribute_1__m,s__EnglishLanguage,'A &%contraryAttribute_1 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_1 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7444,axiom,(( s__instance(s__contraryAttribute_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7445,axiom,(( s__instance(s__contraryAttribute_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7446,axiom,(( s__documentation(s__contraryAttribute_2__m,s__EnglishLanguage,'A &%contraryAttribute_2 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_2 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7447,axiom,(( s__instance(s__contraryAttribute_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7448,axiom,(( s__instance(s__contraryAttribute_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7449,axiom,(( s__documentation(s__contraryAttribute_3__m,s__EnglishLanguage,'A &%contraryAttribute_3 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_3 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7450,axiom,(( s__instance(s__contraryAttribute_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7451,axiom,(( s__instance(s__contraryAttribute_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7452,axiom,(( s__documentation(s__contraryAttribute_4__m,s__EnglishLanguage,'A &%contraryAttribute_4 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_4 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7453,axiom,(( s__instance(s__contraryAttribute_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7454,axiom,(( s__instance(s__contraryAttribute_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7455,axiom,(( s__documentation(s__contraryAttribute_5__m,s__EnglishLanguage,'A &%contraryAttribute_5 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_5 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7456,axiom,(( s__instance(s__contraryAttribute_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7457,axiom,(( s__instance(s__contraryAttribute_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7458,axiom,(( s__documentation(s__contraryAttribute_6__m,s__EnglishLanguage,'A &%contraryAttribute_6 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_6 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7459,axiom,(( s__instance(s__contraryAttribute_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7460,axiom,(( s__instance(s__contraryAttribute_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7461,axiom,(( s__documentation(s__contraryAttribute_7__m,s__EnglishLanguage,'A &%contraryAttribute_7 is a set of &%Attributes such that something can not simultaneously have more than one of these &%Attributes. For example, (&%contraryAttribute_7 &%Pliable &%Rigid) means that nothing can be both &%Pliable and &%Rigid.') ))).
%FOL fof(kb_SUMO_7462,axiom,(( s__instance(s__disjointDecomposition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7463,axiom,(( s__instance(s__disjointDecomposition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7464,axiom,(( s__domain(s__disjointDecomposition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7465,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_1__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7466,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_1__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7467,axiom,(( s__documentation(s__disjointDecomposition_1__m,s__EnglishLanguage,'A &%disjointDecomposition_1 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7468,axiom,(( s__instance(s__disjointDecomposition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7469,axiom,(( s__instance(s__disjointDecomposition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7470,axiom,(( s__domain(s__disjointDecomposition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7471,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_2__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7472,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_2__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7473,axiom,(( s__documentation(s__disjointDecomposition_2__m,s__EnglishLanguage,'A &%disjointDecomposition_2 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7474,axiom,(( s__instance(s__disjointDecomposition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7475,axiom,(( s__instance(s__disjointDecomposition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7476,axiom,(( s__domain(s__disjointDecomposition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7477,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_3__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7478,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_3__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7479,axiom,(( s__documentation(s__disjointDecomposition_3__m,s__EnglishLanguage,'A &%disjointDecomposition_3 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7480,axiom,(( s__instance(s__disjointDecomposition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7481,axiom,(( s__instance(s__disjointDecomposition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7482,axiom,(( s__domain(s__disjointDecomposition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7483,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_4__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7484,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_4__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7485,axiom,(( s__documentation(s__disjointDecomposition_4__m,s__EnglishLanguage,'A &%disjointDecomposition_4 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7486,axiom,(( s__instance(s__disjointDecomposition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7487,axiom,(( s__instance(s__disjointDecomposition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7488,axiom,(( s__domain(s__disjointDecomposition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7489,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_5__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7490,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_5__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7491,axiom,(( s__documentation(s__disjointDecomposition_5__m,s__EnglishLanguage,'A &%disjointDecomposition_5 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7492,axiom,(( s__instance(s__disjointDecomposition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7493,axiom,(( s__instance(s__disjointDecomposition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7494,axiom,(( s__domain(s__disjointDecomposition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7495,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_6__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7496,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_6__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7497,axiom,(( s__documentation(s__disjointDecomposition_6__m,s__EnglishLanguage,'A &%disjointDecomposition_6 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7498,axiom,(( s__instance(s__disjointDecomposition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7499,axiom,(( s__instance(s__disjointDecomposition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7500,axiom,(( s__domain(s__disjointDecomposition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7501,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_7__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7502,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_7__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7503,axiom,(( s__documentation(s__disjointDecomposition_7__m,s__EnglishLanguage,'A &%disjointDecomposition_7 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7504,axiom,(( s__instance(s__disjointDecomposition_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7505,axiom,(( s__instance(s__disjointDecomposition_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7506,axiom,(( s__domain(s__disjointDecomposition_8__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7507,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_8__m,s__exhaustiveDecomposition__m) ))).
%FOL fof(kb_SUMO_7508,axiom,(( s__relatedInternalConcept(s__disjointDecomposition_8__m,s__disjoint__m) ))).
%FOL fof(kb_SUMO_7509,axiom,(( s__documentation(s__disjointDecomposition_8__m,s__EnglishLanguage,'A &%disjointDecomposition_8 of a &%Class C is a set of subclasses of C that are mutually &%disjoint.') ))).
%FOL fof(kb_SUMO_7510,axiom,(( s__instance(s__exhaustiveAttribute_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7511,axiom,(( s__instance(s__exhaustiveAttribute_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7512,axiom,(( s__domainSubclass(s__exhaustiveAttribute_1__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7513,axiom,(( s__documentation(s__exhaustiveAttribute_1__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_1 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7514,axiom,(( s__instance(s__exhaustiveAttribute_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7515,axiom,(( s__instance(s__exhaustiveAttribute_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7516,axiom,(( s__domainSubclass(s__exhaustiveAttribute_2__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7517,axiom,(( s__documentation(s__exhaustiveAttribute_2__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_2 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7518,axiom,(( s__instance(s__exhaustiveAttribute_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7519,axiom,(( s__instance(s__exhaustiveAttribute_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7520,axiom,(( s__domainSubclass(s__exhaustiveAttribute_3__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7521,axiom,(( s__documentation(s__exhaustiveAttribute_3__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_3 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7522,axiom,(( s__instance(s__exhaustiveAttribute_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7523,axiom,(( s__instance(s__exhaustiveAttribute_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7524,axiom,(( s__domainSubclass(s__exhaustiveAttribute_4__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7525,axiom,(( s__documentation(s__exhaustiveAttribute_4__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_4 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7526,axiom,(( s__instance(s__exhaustiveAttribute_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7527,axiom,(( s__instance(s__exhaustiveAttribute_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7528,axiom,(( s__domainSubclass(s__exhaustiveAttribute_5__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7529,axiom,(( s__documentation(s__exhaustiveAttribute_5__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_5 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7530,axiom,(( s__instance(s__exhaustiveAttribute_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7531,axiom,(( s__instance(s__exhaustiveAttribute_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7532,axiom,(( s__domainSubclass(s__exhaustiveAttribute_6__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7533,axiom,(( s__documentation(s__exhaustiveAttribute_6__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_6 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7534,axiom,(( s__instance(s__exhaustiveAttribute_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7535,axiom,(( s__instance(s__exhaustiveAttribute_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7536,axiom,(( s__domainSubclass(s__exhaustiveAttribute_7__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7537,axiom,(( s__documentation(s__exhaustiveAttribute_7__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_7 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7538,axiom,(( s__instance(s__exhaustiveAttribute_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7539,axiom,(( s__instance(s__exhaustiveAttribute_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7540,axiom,(( s__domainSubclass(s__exhaustiveAttribute_8__m,1,s__Attribute) ))).
%FOL fof(kb_SUMO_7541,axiom,(( s__documentation(s__exhaustiveAttribute_8__m,s__EnglishLanguage,'This predicate relates a &%Class to a set of &%Attributes, and it means that the elements of this set exhaust the instances of the &%Class. For example, (&%exhaustiveAttribute_8 &%PhysicalState &%Solid &%Fluid &%Liquid &%Gas &%Plasma) means that there are only five instances of the class &%PhysicalState, viz. &%Solid, &%Fluid, &%Liquid, &%Gas and &%Plasma.') ))).
%FOL fof(kb_SUMO_7542,axiom,(( s__instance(s__exhaustiveDecomposition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7543,axiom,(( s__instance(s__exhaustiveDecomposition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7544,axiom,(( s__domain(s__exhaustiveDecomposition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7545,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_1__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7546,axiom,(( s__documentation(s__exhaustiveDecomposition_1__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_1 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7547,axiom,(( s__instance(s__exhaustiveDecomposition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7548,axiom,(( s__instance(s__exhaustiveDecomposition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7549,axiom,(( s__domain(s__exhaustiveDecomposition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7550,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_2__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7551,axiom,(( s__documentation(s__exhaustiveDecomposition_2__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_2 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7552,axiom,(( s__instance(s__exhaustiveDecomposition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7553,axiom,(( s__instance(s__exhaustiveDecomposition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7554,axiom,(( s__domain(s__exhaustiveDecomposition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7555,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_3__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7556,axiom,(( s__documentation(s__exhaustiveDecomposition_3__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_3 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7557,axiom,(( s__instance(s__exhaustiveDecomposition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7558,axiom,(( s__instance(s__exhaustiveDecomposition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7559,axiom,(( s__domain(s__exhaustiveDecomposition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7560,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_4__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7561,axiom,(( s__documentation(s__exhaustiveDecomposition_4__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_4 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7562,axiom,(( s__instance(s__exhaustiveDecomposition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7563,axiom,(( s__instance(s__exhaustiveDecomposition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7564,axiom,(( s__domain(s__exhaustiveDecomposition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7565,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_5__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7566,axiom,(( s__documentation(s__exhaustiveDecomposition_5__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_5 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7567,axiom,(( s__instance(s__exhaustiveDecomposition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7568,axiom,(( s__instance(s__exhaustiveDecomposition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7569,axiom,(( s__domain(s__exhaustiveDecomposition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7570,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_6__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7571,axiom,(( s__documentation(s__exhaustiveDecomposition_6__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_6 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7572,axiom,(( s__instance(s__exhaustiveDecomposition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7573,axiom,(( s__instance(s__exhaustiveDecomposition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7574,axiom,(( s__domain(s__exhaustiveDecomposition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7575,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_7__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7576,axiom,(( s__documentation(s__exhaustiveDecomposition_7__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_7 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7577,axiom,(( s__instance(s__exhaustiveDecomposition_8__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7578,axiom,(( s__instance(s__exhaustiveDecomposition_8__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7579,axiom,(( s__domain(s__exhaustiveDecomposition_8__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7580,axiom,(( s__relatedInternalConcept(s__exhaustiveDecomposition_8__m,s__partition__m) ))).
%FOL fof(kb_SUMO_7581,axiom,(( s__documentation(s__exhaustiveDecomposition_8__m,s__EnglishLanguage,'An &%exhaustiveDecomposition_8 of a &%Class C is a set of subclasses of C such that every instance of C is an instance of one of the subclasses in the set. Note: this does not necessarily mean that the elements of the set are disjoint (see &%partition - a &%partition is a disjoint exhaustive decomposition).') ))).
%FOL fof(kb_SUMO_7582,axiom,(( s__instance(s__partition_1__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7583,axiom,(( s__instance(s__partition_1__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7584,axiom,(( s__domain(s__partition_1__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7585,axiom,(( s__documentation(s__partition_1__m,s__EnglishLanguage,'A &%partition_1 of a class C is a set of mutually &%disjoint classes (a subclass partition_1) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_1.') ))).
%FOL fof(kb_SUMO_7586,axiom,(( s__instance(s__partition_2__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7587,axiom,(( s__instance(s__partition_2__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7588,axiom,(( s__domain(s__partition_2__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7589,axiom,(( s__documentation(s__partition_2__m,s__EnglishLanguage,'A &%partition_2 of a class C is a set of mutually &%disjoint classes (a subclass partition_2) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_2.') ))).
%FOL fof(kb_SUMO_7590,axiom,(( s__instance(s__partition_3__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7591,axiom,(( s__instance(s__partition_3__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7592,axiom,(( s__domain(s__partition_3__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7593,axiom,(( s__documentation(s__partition_3__m,s__EnglishLanguage,'A &%partition_3 of a class C is a set of mutually &%disjoint classes (a subclass partition_3) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_3.') ))).
%FOL fof(kb_SUMO_7594,axiom,(( s__instance(s__partition_4__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7595,axiom,(( s__instance(s__partition_4__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7596,axiom,(( s__domain(s__partition_4__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7597,axiom,(( s__documentation(s__partition_4__m,s__EnglishLanguage,'A &%partition_4 of a class C is a set of mutually &%disjoint classes (a subclass partition_4) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_4.') ))).
%FOL fof(kb_SUMO_7598,axiom,(( s__instance(s__partition_5__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7599,axiom,(( s__instance(s__partition_5__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7600,axiom,(( s__domain(s__partition_5__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7601,axiom,(( s__documentation(s__partition_5__m,s__EnglishLanguage,'A &%partition_5 of a class C is a set of mutually &%disjoint classes (a subclass partition_5) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_5.') ))).
%FOL fof(kb_SUMO_7602,axiom,(( s__instance(s__partition_6__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7603,axiom,(( s__instance(s__partition_6__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7604,axiom,(( s__domain(s__partition_6__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7605,axiom,(( s__documentation(s__partition_6__m,s__EnglishLanguage,'A &%partition_6 of a class C is a set of mutually &%disjoint classes (a subclass partition_6) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_6.') ))).
%FOL fof(kb_SUMO_7606,axiom,(( s__instance(s__partition_7__m,s__Predicate) ))).
%FOL fof(kb_SUMO_7607,axiom,(( s__instance(s__partition_7__m,s__VariableArityRelation) ))).
%FOL fof(kb_SUMO_7608,axiom,(( s__domain(s__partition_7__m,1,s__Class) ))).
%FOL fof(kb_SUMO_7609,axiom,(( s__documentation(s__partition_7__m,s__EnglishLanguage,'A &%partition_7 of a class C is a set of mutually &%disjoint classes (a subclass partition_7) which covers C. Every instance of C is an instance of exactly one of the subclasses in the partition_7.') ))).

%------------------------------------------------------------------------------
